Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[79.47157413848197 53] 132.47157413848197]
Train Case:   1 | Input/Output: [[31.796391583688404 -99] -67.2036084163116]
Train Case:   2 | Input/Output: [[-99.29148363522584 -86] -185.29148363522586]
Train Case:   3 | Input/Output: [[38.606198597732714 -24] 14.606198597732714]
Train Case:   4 | Input/Output: [[84.41519822036824 -53] 31.41519822036824]
Train Case:   5 | Input/Output: [[89.99983733064829 70] 159.9998373306483]
Train Case:   6 | Input/Output: [[64.82680533156415 -65] -0.17319466843585474]
Train Case:   7 | Input/Output: [[45.45659635525294 68] 113.45659635525294]
Train Case:   8 | Input/Output: [[81.07228991355458 -93] -11.927710086445416]
Train Case:   9 | Input/Output: [[-9.392553539264355 -75] -84.39255353926436]
Train Case:  10 | Input/Output: [[-71.93429884632593 53] -18.93429884632593]
Train Case:  11 | Input/Output: [[-88.7651499891038 -18] -106.7651499891038]
Train Case:  12 | Input/Output: [[51.27905350056821 -100] -48.72094649943179]
Train Case:  13 | Input/Output: [[-19.836533342555313 2] -17.836533342555313]
Train Case:  14 | Input/Output: [[-2.3703567122388165 -22] -24.370356712238816]
Train Case:  15 | Input/Output: [[5.879262883111508 -30] -24.120737116888492]
Train Case:  16 | Input/Output: [[-42.42191193411349 -93] -135.4219119341135]
Train Case:  17 | Input/Output: [[24.0018387902645 -46] -21.9981612097355]
Train Case:  18 | Input/Output: [[90.32068260079308 -10] 80.32068260079308]
Train Case:  19 | Input/Output: [[-2.059933265977577 62] 59.94006673402242]
Train Case:  20 | Input/Output: [[46.74989922991617 55] 101.74989922991617]
Train Case:  21 | Input/Output: [[-47.666218369100875 -75] -122.66621836910087]
Train Case:  22 | Input/Output: [[-36.99423152942658 -64] -100.99423152942657]
Train Case:  23 | Input/Output: [[-64.16270181111241 7] -57.16270181111241]
Train Case:  24 | Input/Output: [[-12.81532069222186 -9] -21.81532069222186]
Test Case:   0 | Input/Output: [[-75.70148927020983 41] -34.701489270209834]
Test Case:   1 | Input/Output: [[52.865672641483 -15] 37.865672641483]
Test Case:   2 | Input/Output: [[-4.654181476480602 48] 43.3458185235194]
Test Case:   3 | Input/Output: [[-35.60977302124965 57] 21.39022697875035]
Test Case:   4 | Input/Output: [[39.063688887476815 -20] 19.063688887476815]
Test Case:   5 | Input/Output: [[-26.252074426828315 -10] -36.252074426828315]
Test Case:   6 | Input/Output: [[-82.34719160409949 32] -50.34719160409949]
Test Case:   7 | Input/Output: [[74.9154336158928 -80] -5.084566384107205]
Test Case:   8 | Input/Output: [[-90.07530274810611 -4] -94.07530274810611]
Test Case:   9 | Input/Output: [[-78.70653259361 -26] -104.70653259361]
Test Case:  10 | Input/Output: [[-7.324891427458198 11] 3.6751085725418022]
Test Case:  11 | Input/Output: [[-54.24566690226029 55] 0.7543330977397105]
Test Case:  12 | Input/Output: [[2.466473332077186 -37] -34.533526667922814]
Test Case:  13 | Input/Output: [[35.545927358441986 57] 92.54592735844199]
Test Case:  14 | Input/Output: [[-6.47914817606916 62] 55.52085182393084]
Test Case:  15 | Input/Output: [[79.92698456721979 -46] 33.92698456721979]
Test Case:  16 | Input/Output: [[12.52171007227733 92] 104.52171007227733]
Test Case:  17 | Input/Output: [[20.718564291610292 30] 50.71856429161029]
Test Case:  18 | Input/Output: [[-66.8905483216634 -42] -108.8905483216634]
Test Case:  19 | Input/Output: [[-67.14137232282906 68] 0.8586276771709436]
Test Case:  20 | Input/Output: [[74.66227409072903 60] 134.66227409072903]
Test Case:  21 | Input/Output: [[-97.4584057548956 -15] -112.4584057548956]
Test Case:  22 | Input/Output: [[-55.53739693961792 52] -3.5373969396179206]
Test Case:  23 | Input/Output: [[-13.526860328040158 -78] -91.52686032804016]
Test Case:  24 | Input/Output: [[-97.5133868634084 -98] -195.5133868634084]
Test Case:  25 | Input/Output: [[-13.863817514091934 -12] -25.863817514091934]
Test Case:  26 | Input/Output: [[-46.297995962374806 -58] -104.29799596237481]
Test Case:  27 | Input/Output: [[60.69097422041634 14] 74.69097422041634]
Test Case:  28 | Input/Output: [[5.262803597142522 -31] -25.737196402857478]
Test Case:  29 | Input/Output: [[-31.967327032629058 54] 22.032672967370942]
Test Case:  30 | Input/Output: [[89.72497443581446 -5] 84.72497443581446]
Test Case:  31 | Input/Output: [[89.47611891490078 3] 92.47611891490078]
Test Case:  32 | Input/Output: [[33.71891319612999 14] 47.71891319612999]
Test Case:  33 | Input/Output: [[-62.96467020076617 32] -30.96467020076617]
Test Case:  34 | Input/Output: [[-22.47790456599668 -27] -49.47790456599668]
Test Case:  35 | Input/Output: [[35.05415262125226 32] 67.05415262125226]
Test Case:  36 | Input/Output: [[76.44977366313347 -11] 65.44977366313347]
Test Case:  37 | Input/Output: [[-16.03151806274819 -85] -101.03151806274819]
Test Case:  38 | Input/Output: [[-64.26816945344433 97] 32.73183054655567]
Test Case:  39 | Input/Output: [[27.346826398296912 -61] -33.65317360170309]
Test Case:  40 | Input/Output: [[-58.51680665429038 -40] -98.51680665429038]
Test Case:  41 | Input/Output: [[-89.67182596172788 34] -55.671825961727876]
Test Case:  42 | Input/Output: [[-66.39316533766066 76] 9.606834662339338]
Test Case:  43 | Input/Output: [[-98.16913326763756 -16] -114.16913326763756]
Test Case:  44 | Input/Output: [[-99.85952466374168 -45] -144.8595246637417]
Test Case:  45 | Input/Output: [[32.60369590085895 42] 74.60369590085895]
Test Case:  46 | Input/Output: [[86.93774173839782 -60] 26.93774173839782]
Test Case:  47 | Input/Output: [[90.66918360522882 75] 165.66918360522882]
Test Case:  48 | Input/Output: [[65.33246655381504 62] 127.33246655381504]
Test Case:  49 | Input/Output: [[-44.92532735649812 32] -12.925327356498123]
Test Case:  50 | Input/Output: [[-96.54079102141175 -67] -163.54079102141174]
Test Case:  51 | Input/Output: [[-20.863895210978043 -72] -92.86389521097804]
Test Case:  52 | Input/Output: [[-92.62984026013253 82] -10.629840260132525]
Test Case:  53 | Input/Output: [[-79.3319024590834 49] -30.331902459083395]
Test Case:  54 | Input/Output: [[-60.89085370244012 -5] -65.89085370244013]
Test Case:  55 | Input/Output: [[-5.807383195536957 25] 19.192616804463043]
Test Case:  56 | Input/Output: [[-14.659065777026072 57] 42.34093422297393]
Test Case:  57 | Input/Output: [[25.919199658995694 53] 78.9191996589957]
Test Case:  58 | Input/Output: [[-76.89904148071096 -38] -114.89904148071096]
Test Case:  59 | Input/Output: [[76.13047515968319 -68] 8.130475159683186]
Test Case:  60 | Input/Output: [[-79.82155895600683 -58] -137.8215589560068]
Test Case:  61 | Input/Output: [[1.526253484355422 -57] -55.47374651564458]
Test Case:  62 | Input/Output: [[74.47408717573805 -93] -18.52591282426195]
Test Case:  63 | Input/Output: [[49.42030502979003 -57] -7.579694970209971]
Test Case:  64 | Input/Output: [[83.39135619250484 -83] 0.3913561925048441]
Test Case:  65 | Input/Output: [[-12.496443035750175 -75] -87.49644303575018]
Test Case:  66 | Input/Output: [[90.72550673018114 91] 181.72550673018114]
Test Case:  67 | Input/Output: [[62.70860211265901 -37] 25.70860211265901]
Test Case:  68 | Input/Output: [[83.99860649279631 -100] -16.001393507203687]
Test Case:  69 | Input/Output: [[-3.189446069936963 31] 27.810553930063037]
Test Case:  70 | Input/Output: [[-54.564545193126456 45] -9.564545193126456]
Test Case:  71 | Input/Output: [[59.336558227205416 16] 75.33655822720542]
Test Case:  72 | Input/Output: [[-46.41542500949514 -14] -60.41542500949514]
Test Case:  73 | Input/Output: [[-67.12854034410677 -7] -74.12854034410677]
Test Case:  74 | Input/Output: [[-53.42090508382804 4] -49.42090508382804]
Test Case:  75 | Input/Output: [[-19.282591727237815 34] 14.717408272762185]
Test Case:  76 | Input/Output: [[56.309705614307376 -64] -7.690294385692624]
Test Case:  77 | Input/Output: [[90.84351588647394 -46] 44.84351588647394]
Test Case:  78 | Input/Output: [[-81.68061280103835 10] -71.68061280103835]
Test Case:  79 | Input/Output: [[94.88066978232504 -8] 86.88066978232504]
Test Case:  80 | Input/Output: [[-60.49369030934537 99] 38.50630969065463]
Test Case:  81 | Input/Output: [[-76.77152884982696 -3] -79.77152884982696]
Test Case:  82 | Input/Output: [[-95.72675588613086 38] -57.72675588613086]
Test Case:  83 | Input/Output: [[-31.02119613794956 28] -3.021196137949559]
Test Case:  84 | Input/Output: [[-60.867469211307544 -94] -154.86746921130754]
Test Case:  85 | Input/Output: [[31.63247356587624 91] 122.63247356587624]
Test Case:  86 | Input/Output: [[65.87540833102395 -43] 22.875408331023948]
Test Case:  87 | Input/Output: [[-43.10872125720577 10] -33.10872125720577]
Test Case:  88 | Input/Output: [[63.86628458605398 -62] 1.866284586053979]
Test Case:  89 | Input/Output: [[-17.178573447797632 -97] -114.17857344779763]
Test Case:  90 | Input/Output: [[-99.50176039077189 6] -93.50176039077189]
Test Case:  91 | Input/Output: [[35.19515678787877 31] 66.19515678787877]
Test Case:  92 | Input/Output: [[-16.704138894834642 33] 16.295861105165358]
Test Case:  93 | Input/Output: [[-14.84575006072697 11] -3.845750060726971]
Test Case:  94 | Input/Output: [[90.47705399675533 74] 164.47705399675533]
Test Case:  95 | Input/Output: [[73.6803390705586 -77] -3.3196609294413975]
Test Case:  96 | Input/Output: [[-25.141426932508622 9] -16.141426932508622]
Test Case:  97 | Input/Output: [[-82.79424965550919 -49] -131.7942496555092]
Test Case:  98 | Input/Output: [[10.310084576832892 -23] -12.689915423167108]
Test Case:  99 | Input/Output: [[86.729393069364 -4] 82.729393069364]
Test Case: 100 | Input/Output: [[-48.4314100023071 18] -30.431410002307103]
Test Case: 101 | Input/Output: [[48.27299763727015 -96] -47.72700236272985]
Test Case: 102 | Input/Output: [[4.283774353797142 -21] -16.716225646202858]
Test Case: 103 | Input/Output: [[-13.97866642740972 7] -6.9786664274097205]
Test Case: 104 | Input/Output: [[59.92497957272815 92] 151.92497957272815]
Test Case: 105 | Input/Output: [[6.1866752490712855 -39] -32.813324750928714]
Test Case: 106 | Input/Output: [[-47.98066574439959 -28] -75.98066574439959]
Test Case: 107 | Input/Output: [[72.61790406730836 72] 144.61790406730836]
Test Case: 108 | Input/Output: [[-62.2424080293787 4] -58.2424080293787]
Test Case: 109 | Input/Output: [[96.38211498382125 33] 129.38211498382125]
Test Case: 110 | Input/Output: [[42.74209767742556 -22] 20.742097677425562]
Test Case: 111 | Input/Output: [[28.89155492577831 26] 54.89155492577831]
Test Case: 112 | Input/Output: [[-66.64398347338519 -36] -102.64398347338519]
Test Case: 113 | Input/Output: [[-53.700795446715446 -71] -124.70079544671545]
Test Case: 114 | Input/Output: [[55.59309431371196 6] 61.59309431371196]
Test Case: 115 | Input/Output: [[55.51784559872746 98] 153.51784559872746]
Test Case: 116 | Input/Output: [[-90.2726116148007 98] 7.727388385199305]
Test Case: 117 | Input/Output: [[-52.784695056213174 2] -50.784695056213174]
Test Case: 118 | Input/Output: [[-80.77528884883634 34] -46.77528884883634]
Test Case: 119 | Input/Output: [[-77.58171906875864 -43] -120.58171906875864]
Test Case: 120 | Input/Output: [[-87.57598899137736 67] -20.575988991377358]
Test Case: 121 | Input/Output: [[37.25201041754303 -99] -61.74798958245697]
Test Case: 122 | Input/Output: [[45.94537983087858 3] 48.94537983087858]
Test Case: 123 | Input/Output: [[29.91702863113676 19] 48.91702863113676]
Test Case: 124 | Input/Output: [[81.11530525229566 20] 101.11530525229566]
Test Case: 125 | Input/Output: [[90.54595745737629 52] 142.5459574573763]
Test Case: 126 | Input/Output: [[-85.23760885742107 -93] -178.23760885742107]
Test Case: 127 | Input/Output: [[65.84308743378296 0] 65.84308743378296]
Test Case: 128 | Input/Output: [[-73.0315353277214 58] -15.0315353277214]
Test Case: 129 | Input/Output: [[-14.545818456055471 -28] -42.54581845605547]
Test Case: 130 | Input/Output: [[81.35021966402036 -4] 77.35021966402036]
Test Case: 131 | Input/Output: [[80.25737250202008 52] 132.25737250202008]
Test Case: 132 | Input/Output: [[-8.116574218955705 -94] -102.1165742189557]
Test Case: 133 | Input/Output: [[-39.946366921545405 94] 54.053633078454595]
Test Case: 134 | Input/Output: [[54.91758561629638 -31] 23.91758561629638]
Test Case: 135 | Input/Output: [[24.717573415565667 -2] 22.717573415565667]
Test Case: 136 | Input/Output: [[70.90860862792655 -57] 13.908608627926554]
Test Case: 137 | Input/Output: [[17.423501678518676 65] 82.42350167851868]
Test Case: 138 | Input/Output: [[-28.125995556932423 76] 47.87400444306758]
Test Case: 139 | Input/Output: [[-97.39037589364705 2] -95.39037589364705]
Test Case: 140 | Input/Output: [[87.69071446459643 14] 101.69071446459643]
Test Case: 141 | Input/Output: [[-73.62736791212183 -36] -109.62736791212183]
Test Case: 142 | Input/Output: [[-5.542245076681553 54] 48.45775492331845]
Test Case: 143 | Input/Output: [[36.54856841534735 27] 63.54856841534735]
Test Case: 144 | Input/Output: [[-69.93477146221498 -62] -131.934771462215]
Test Case: 145 | Input/Output: [[-27.57378746417973 -87] -114.57378746417973]
Test Case: 146 | Input/Output: [[-73.04630212581262 44] -29.046302125812616]
Test Case: 147 | Input/Output: [[13.837566239500205 -37] -23.162433760499795]
Test Case: 148 | Input/Output: [[19.970468232995643 -50] -30.029531767004357]
Test Case: 149 | Input/Output: [[-81.46613867321015 73] -8.466138673210153]
Test Case: 150 | Input/Output: [[-56.38552902787279 -19] -75.38552902787279]
Test Case: 151 | Input/Output: [[-19.124988728815538 -44] -63.12498872881554]
Test Case: 152 | Input/Output: [[-44.674010550712254 -82] -126.67401055071225]
Test Case: 153 | Input/Output: [[57.743703380885506 -72] -14.256296619114494]
Test Case: 154 | Input/Output: [[-85.05318744808324 10] -75.05318744808324]
Test Case: 155 | Input/Output: [[-70.00661387133647 64] -6.006613871336469]
Test Case: 156 | Input/Output: [[92.03853309028 -35] 57.03853309028]
Test Case: 157 | Input/Output: [[-34.32721648633526 25] -9.32721648633526]
Test Case: 158 | Input/Output: [[61.273132900751506 65] 126.2731329007515]
Test Case: 159 | Input/Output: [[-28.188888856601622 6] -22.188888856601622]
Test Case: 160 | Input/Output: [[54.34280970180754 97] 151.34280970180754]
Test Case: 161 | Input/Output: [[-31.98758694921422 -65] -96.98758694921422]
Test Case: 162 | Input/Output: [[-39.11973647951963 58] 18.88026352048037]
Test Case: 163 | Input/Output: [[-1.8112708656821326 -22] -23.811270865682133]
Test Case: 164 | Input/Output: [[33.89316181680067 19] 52.89316181680067]
Test Case: 165 | Input/Output: [[-15.306616606309277 36] 20.693383393690723]
Test Case: 166 | Input/Output: [[-87.17164190763364 97] 9.828358092366358]
Test Case: 167 | Input/Output: [[-58.73983639402134 -21] -79.73983639402134]
Test Case: 168 | Input/Output: [[-12.769370066508714 -100] -112.76937006650871]
Test Case: 169 | Input/Output: [[-5.049707377738713 61] 55.95029262226129]
Test Case: 170 | Input/Output: [[9.882539451450498 -92] -82.1174605485495]
Test Case: 171 | Input/Output: [[73.92720264313036 -45] 28.927202643130357]
Test Case: 172 | Input/Output: [[39.99550854190511 -45] -5.00449145809489]
Test Case: 173 | Input/Output: [[64.72051539166043 -10] 54.72051539166043]
Test Case: 174 | Input/Output: [[1.1648713706174192 -40] -38.83512862938258]
Test Case: 175 | Input/Output: [[-75.52763616890708 -13] -88.52763616890708]
Test Case: 176 | Input/Output: [[20.072263285386498 -91] -70.9277367146135]
Test Case: 177 | Input/Output: [[-7.878338836486719 -85] -92.87833883648672]
Test Case: 178 | Input/Output: [[20.60003993541841 79] 99.60003993541841]
Test Case: 179 | Input/Output: [[-27.32458136854237 -91] -118.32458136854237]
Test Case: 180 | Input/Output: [[-37.987301780018676 -35] -72.98730178001867]
Test Case: 181 | Input/Output: [[-66.80272682642169 56] -10.80272682642169]
Test Case: 182 | Input/Output: [[-89.88047796833168 66] -23.880477968331675]
Test Case: 183 | Input/Output: [[-68.09913355901101 -94] -162.09913355901102]
Test Case: 184 | Input/Output: [[-38.34624794726378 -12] -50.34624794726378]
Test Case: 185 | Input/Output: [[-14.060075657858562 -10] -24.06007565785856]
Test Case: 186 | Input/Output: [[1.7533500646628823 46] 47.75335006466288]
Test Case: 187 | Input/Output: [[-40.789932857511005 68] 27.210067142488995]
Test Case: 188 | Input/Output: [[47.253286827215845 10] 57.253286827215845]
Test Case: 189 | Input/Output: [[-16.135580638561976 -77] -93.13558063856198]
Test Case: 190 | Input/Output: [[89.7162586534698 -65] 24.716258653469794]
Test Case: 191 | Input/Output: [[13.130212159047389 -40] -26.86978784095261]
Test Case: 192 | Input/Output: [[48.816909176768235 -85] -36.183090823231765]
Test Case: 193 | Input/Output: [[-59.80216268585878 -62] -121.80216268585878]
Test Case: 194 | Input/Output: [[-9.557948871468852 96] 86.44205112853115]
Test Case: 195 | Input/Output: [[-43.53393569741868 15] -28.533935697418677]
Test Case: 196 | Input/Output: [[40.28519684701058 46] 86.28519684701058]
Test Case: 197 | Input/Output: [[-17.709717193341845 -98] -115.70971719334185]
Test Case: 198 | Input/Output: [[-66.95367384129361 7] -59.95367384129361]
Test Case: 199 | Input/Output: [[-8.88892021452898 74] 65.11107978547102]
Test Case: 200 | Input/Output: [[63.844907032496565 1] 64.84490703249656]
Test Case: 201 | Input/Output: [[-13.218451664994916 21] 7.781548335005084]
Test Case: 202 | Input/Output: [[-15.014869130869272 -75] -90.01486913086927]
Test Case: 203 | Input/Output: [[56.85680787230126 85] 141.85680787230126]
Test Case: 204 | Input/Output: [[-51.87216954353393 54] 2.1278304564660715]
Test Case: 205 | Input/Output: [[-57.13502180183529 -70] -127.1350218018353]
Test Case: 206 | Input/Output: [[-99.80964447289085 -88] -187.80964447289085]
Test Case: 207 | Input/Output: [[-18.061751832067458 26] 7.938248167932542]
Test Case: 208 | Input/Output: [[45.60679623422098 -87] -41.39320376577902]
Test Case: 209 | Input/Output: [[92.73089026931854 -19] 73.73089026931854]
Test Case: 210 | Input/Output: [[47.48123242615719 90] 137.4812324261572]
Test Case: 211 | Input/Output: [[-81.50440710573415 72] -9.504407105734145]
Test Case: 212 | Input/Output: [[-23.31158748088893 -71] -94.31158748088893]
Test Case: 213 | Input/Output: [[-39.263659509502325 30] -9.263659509502325]
Test Case: 214 | Input/Output: [[-75.68186894711249 39] -36.68186894711249]
Test Case: 215 | Input/Output: [[24.272337445614482 1] 25.272337445614482]
Test Case: 216 | Input/Output: [[-5.295417442480414 -68] -73.29541744248041]
Test Case: 217 | Input/Output: [[-56.65199414613853 71] 14.348005853861473]
Test Case: 218 | Input/Output: [[-52.88427954502923 99] 46.11572045497077]
Test Case: 219 | Input/Output: [[-92.40437189076285 32] -60.404371890762846]
Test Case: 220 | Input/Output: [[-53.44953960700334 98] 44.55046039299666]
Test Case: 221 | Input/Output: [[58.900891887900116 -57] 1.9008918879001158]
Test Case: 222 | Input/Output: [[7.0899456750207435 -71] -63.91005432497926]
Test Case: 223 | Input/Output: [[51.572453664991855 80] 131.57245366499185]
Test Case: 224 | Input/Output: [[-30.754155927887012 38] 7.2458440721129875]
Test Case: 225 | Input/Output: [[-90.45559178925804 -15] -105.45559178925804]
Test Case: 226 | Input/Output: [[-27.27553035294366 65] 37.72446964705634]
Test Case: 227 | Input/Output: [[-2.309106804137855 -11] -13.309106804137855]
Test Case: 228 | Input/Output: [[20.804941763502697 8] 28.804941763502697]
Test Case: 229 | Input/Output: [[52.089382277334096 -20] 32.089382277334096]
Test Case: 230 | Input/Output: [[-69.20136309016752 57] -12.201363090167519]
Test Case: 231 | Input/Output: [[-92.9563416920789 38] -54.956341692078894]
Test Case: 232 | Input/Output: [[-79.58457127833545 97] 17.415428721664554]
Test Case: 233 | Input/Output: [[54.23309350172062 83] 137.23309350172062]
Test Case: 234 | Input/Output: [[-86.95965630030192 21] -65.95965630030192]
Test Case: 235 | Input/Output: [[-15.88087784952134 -85] -100.88087784952134]
Test Case: 236 | Input/Output: [[48.75165794548016 -32] 16.75165794548016]
Test Case: 237 | Input/Output: [[46.53822432285662 -91] -44.46177567714338]
Test Case: 238 | Input/Output: [[67.39444817669062 7] 74.39444817669062]
Test Case: 239 | Input/Output: [[-16.43331254511429 -38] -54.43331254511429]
Test Case: 240 | Input/Output: [[50.927443048565266 32] 82.92744304856527]
Test Case: 241 | Input/Output: [[-79.35605632717318 -86] -165.35605632717318]
Test Case: 242 | Input/Output: [[-97.16966113044201 59] -38.16966113044201]
Test Case: 243 | Input/Output: [[-45.40812682821234 15] -30.40812682821234]
Test Case: 244 | Input/Output: [[63.68492080642653 0] 63.68492080642653]
Test Case: 245 | Input/Output: [[-58.453859472958605 -7] -65.45385947295861]
Test Case: 246 | Input/Output: [[25.429066407196487 -67] -41.57093359280351]
Test Case: 247 | Input/Output: [[-80.69267850116736 88] 7.307321498832636]
Test Case: 248 | Input/Output: [[-52.93939706969994 71] 18.060602930300057]
Test Case: 249 | Input/Output: [[50.53314789315931 46] 96.53314789315931]
Test Case: 250 | Input/Output: [[42.27062122411246 13] 55.27062122411246]
Test Case: 251 | Input/Output: [[-88.14716400803528 64] -24.147164008035276]
Test Case: 252 | Input/Output: [[54.21694701232994 40] 94.21694701232994]
Test Case: 253 | Input/Output: [[-74.18663572202509 22] -52.18663572202509]
Test Case: 254 | Input/Output: [[61.14008572146682 93] 154.14008572146682]
Test Case: 255 | Input/Output: [[-62.49800597490351 -43] -105.49800597490352]
Test Case: 256 | Input/Output: [[38.994136720547914 27] 65.99413672054791]
Test Case: 257 | Input/Output: [[6.3203221449003735 -62] -55.67967785509963]
Test Case: 258 | Input/Output: [[-73.58719961543858 -71] -144.58719961543858]
Test Case: 259 | Input/Output: [[93.22268309917999 51] 144.22268309918]
Test Case: 260 | Input/Output: [[-85.44857188150428 91] 5.551428118495721]
Test Case: 261 | Input/Output: [[97.69327218160637 -94] 3.6932721816063747]
Test Case: 262 | Input/Output: [[8.325513604900195 9] 17.325513604900195]
Test Case: 263 | Input/Output: [[43.12366575050507 -61] -17.87633424949493]
Test Case: 264 | Input/Output: [[20.935166135458715 35] 55.935166135458715]
Test Case: 265 | Input/Output: [[-69.35738287385296 -53] -122.35738287385296]
Test Case: 266 | Input/Output: [[-96.24535865990438 -9] -105.24535865990438]
Test Case: 267 | Input/Output: [[14.882190010296156 -93] -78.11780998970384]
Test Case: 268 | Input/Output: [[17.947565116477392 51] 68.94756511647739]
Test Case: 269 | Input/Output: [[-23.189798470974537 -43] -66.18979847097454]
Test Case: 270 | Input/Output: [[97.82344720069636 -12] 85.82344720069636]
Test Case: 271 | Input/Output: [[18.157006235834942 46] 64.15700623583494]
Test Case: 272 | Input/Output: [[47.33572650742431 -24] 23.33572650742431]
Test Case: 273 | Input/Output: [[90.9835580358016 72] 162.9835580358016]
Test Case: 274 | Input/Output: [[82.07714280478777 -32] 50.07714280478777]
Test Case: 275 | Input/Output: [[-49.63616851245369 42] -7.636168512453693]
Test Case: 276 | Input/Output: [[57.714849500940716 12] 69.71484950094072]
Test Case: 277 | Input/Output: [[81.87891826032342 48] 129.87891826032342]
Test Case: 278 | Input/Output: [[-24.660224328402776 5] -19.660224328402776]
Test Case: 279 | Input/Output: [[-19.07384200555464 28] 8.926157994445362]
Test Case: 280 | Input/Output: [[-89.01163405008452 11] -78.01163405008452]
Test Case: 281 | Input/Output: [[12.576815521433815 -56] -43.423184478566185]
Test Case: 282 | Input/Output: [[33.970478341387405 48] 81.9704783413874]
Test Case: 283 | Input/Output: [[50.60133063496576 13] 63.60133063496576]
Test Case: 284 | Input/Output: [[31.2513073719428 80] 111.2513073719428]
Test Case: 285 | Input/Output: [[-70.60401587934659 49] -21.60401587934659]
Test Case: 286 | Input/Output: [[98.55721820488588 -32] 66.55721820488588]
Test Case: 287 | Input/Output: [[-14.644663244751555 36] 21.355336755248445]
Test Case: 288 | Input/Output: [[75.51720316532959 -25] 50.51720316532959]
Test Case: 289 | Input/Output: [[-58.71122350687783 -33] -91.71122350687783]
Test Case: 290 | Input/Output: [[22.9921577555196 86] 108.9921577555196]
Test Case: 291 | Input/Output: [[-96.35243604505818 44] -52.352436045058184]
Test Case: 292 | Input/Output: [[-65.6482678843725 -79] -144.6482678843725]
Test Case: 293 | Input/Output: [[-17.66835666745554 47] 29.33164333254446]
Test Case: 294 | Input/Output: [[57.94456592086803 -80] -22.05543407913197]
Test Case: 295 | Input/Output: [[79.59925560386517 98] 177.59925560386517]
Test Case: 296 | Input/Output: [[-43.978246895629745 42] -1.978246895629745]
Test Case: 297 | Input/Output: [[47.49222969001917 62] 109.49222969001917]
Test Case: 298 | Input/Output: [[81.86691423934562 -35] 46.86691423934562]
Test Case: 299 | Input/Output: [[47.415732047701226 65] 112.41573204770123]
Test Case: 300 | Input/Output: [[-74.72903397288974 -64] -138.72903397288974]
Test Case: 301 | Input/Output: [[31.379113992122427 43] 74.37911399212243]
Test Case: 302 | Input/Output: [[-67.66696377785621 64] -3.6669637778562105]
Test Case: 303 | Input/Output: [[-42.466588128885704 78] 35.533411871114296]
Test Case: 304 | Input/Output: [[11.98655830948961 9] 20.98655830948961]
Test Case: 305 | Input/Output: [[-22.02298467685722 -76] -98.02298467685722]
Test Case: 306 | Input/Output: [[81.26548857612428 68] 149.26548857612428]
Test Case: 307 | Input/Output: [[-16.978441181749602 -79] -95.9784411817496]
Test Case: 308 | Input/Output: [[-10.84239211749329 -21] -31.84239211749329]
Test Case: 309 | Input/Output: [[75.80698773052399 -16] 59.806987730523986]
Test Case: 310 | Input/Output: [[26.419767671205463 -97] -70.58023232879454]
Test Case: 311 | Input/Output: [[35.410342025526916 -64] -28.589657974473084]
Test Case: 312 | Input/Output: [[10.297222395297553 -44] -33.70277760470245]
Test Case: 313 | Input/Output: [[-17.658741271995424 10] -7.658741271995424]
Test Case: 314 | Input/Output: [[56.06729017569373 53] 109.06729017569373]
Test Case: 315 | Input/Output: [[-30.196971768690133 62] 31.803028231309867]
Test Case: 316 | Input/Output: [[-28.149317188603803 -95] -123.1493171886038]
Test Case: 317 | Input/Output: [[0.3468210261489162 -40] -39.653178973851084]
Test Case: 318 | Input/Output: [[-82.22403623616894 42] -40.22403623616894]
Test Case: 319 | Input/Output: [[-39.97861566582663 29] -10.97861566582663]
Test Case: 320 | Input/Output: [[-57.91227803130381 99] 41.08772196869619]
Test Case: 321 | Input/Output: [[63.77780102032881 2] 65.77780102032881]
Test Case: 322 | Input/Output: [[72.56335249571114 13] 85.56335249571114]
Test Case: 323 | Input/Output: [[8.180393284520008 79] 87.18039328452001]
Test Case: 324 | Input/Output: [[-80.54135573132845 -26] -106.54135573132845]
Test Case: 325 | Input/Output: [[13.200250815639919 -27] -13.799749184360081]
Test Case: 326 | Input/Output: [[46.66935698778579 23] 69.66935698778579]
Test Case: 327 | Input/Output: [[13.42979791242756 9] 22.42979791242756]
Test Case: 328 | Input/Output: [[-71.92934947724959 -42] -113.92934947724959]
Test Case: 329 | Input/Output: [[-48.95278782912711 30] -18.95278782912711]
Test Case: 330 | Input/Output: [[59.58079767118426 79] 138.58079767118426]
Test Case: 331 | Input/Output: [[-41.75723112840271 7] -34.75723112840271]
Test Case: 332 | Input/Output: [[59.79055340798976 -10] 49.79055340798976]
Test Case: 333 | Input/Output: [[49.90785940150039 -76] -26.09214059849961]
Test Case: 334 | Input/Output: [[78.18958624837146 -69] 9.189586248371455]
Test Case: 335 | Input/Output: [[25.390958425662063 31] 56.39095842566206]
Test Case: 336 | Input/Output: [[-61.39654309571991 24] -37.39654309571991]
Test Case: 337 | Input/Output: [[-2.372601348293074 32] 29.627398651706926]
Test Case: 338 | Input/Output: [[31.31932857121288 -94] -62.68067142878712]
Test Case: 339 | Input/Output: [[44.28406896678047 -34] 10.284068966780467]
Test Case: 340 | Input/Output: [[37.426477538067246 -10] 27.426477538067246]
Test Case: 341 | Input/Output: [[68.63593388020007 41] 109.63593388020007]
Test Case: 342 | Input/Output: [[34.084587725307784 81] 115.08458772530778]
Test Case: 343 | Input/Output: [[-53.85801708991569 -100] -153.85801708991568]
Test Case: 344 | Input/Output: [[51.02689836494682 5] 56.02689836494682]
Test Case: 345 | Input/Output: [[-19.15966542030219 -26] -45.15966542030219]
Test Case: 346 | Input/Output: [[90.61961851609527 -66] 24.619618516095272]
Test Case: 347 | Input/Output: [[-82.35149737986482 18] -64.35149737986482]
Test Case: 348 | Input/Output: [[-41.412087700367884 56] 14.587912299632116]
Test Case: 349 | Input/Output: [[-31.4715197811025 -70] -101.4715197811025]
Test Case: 350 | Input/Output: [[-46.001109907669324 18] -28.001109907669324]
Test Case: 351 | Input/Output: [[43.67883582581854 79] 122.67883582581854]
Test Case: 352 | Input/Output: [[-48.93924585517795 37] -11.939245855177951]
Test Case: 353 | Input/Output: [[-46.88237008953195 48] 1.1176299104680467]
Test Case: 354 | Input/Output: [[94.00704371691427 47] 141.00704371691427]
Test Case: 355 | Input/Output: [[42.49068357566236 99] 141.49068357566236]
Test Case: 356 | Input/Output: [[23.377683435583748 11] 34.37768343558375]
Test Case: 357 | Input/Output: [[-15.81619399169334 -44] -59.81619399169334]
Test Case: 358 | Input/Output: [[-46.33067779831692 -18] -64.33067779831691]
Test Case: 359 | Input/Output: [[74.63349765706866 -60] 14.63349765706866]
Test Case: 360 | Input/Output: [[79.11274909879816 46] 125.11274909879816]
Test Case: 361 | Input/Output: [[-6.850930134247363 -20] -26.850930134247363]
Test Case: 362 | Input/Output: [[18.176421626351043 -89] -70.82357837364896]
Test Case: 363 | Input/Output: [[70.97607250303633 -74] -3.0239274969636654]
Test Case: 364 | Input/Output: [[-52.451536986939274 44] -8.451536986939274]
Test Case: 365 | Input/Output: [[2.5630237802938467 -35] -32.43697621970615]
Test Case: 366 | Input/Output: [[-78.13206570108851 -99] -177.1320657010885]
Test Case: 367 | Input/Output: [[60.648694508333136 95] 155.64869450833314]
Test Case: 368 | Input/Output: [[-83.64346906120012 93] 9.356530938799878]
Test Case: 369 | Input/Output: [[-67.78361760646037 50] -17.783617606460368]
Test Case: 370 | Input/Output: [[84.59274767766775 28] 112.59274767766775]
Test Case: 371 | Input/Output: [[-49.25541045680912 -68] -117.25541045680913]
Test Case: 372 | Input/Output: [[7.450132585163601 73] 80.4501325851636]
Test Case: 373 | Input/Output: [[79.88950028539855 -29] 50.889500285398555]
Test Case: 374 | Input/Output: [[-17.919320393957435 -65] -82.91932039395743]
Test Case: 375 | Input/Output: [[8.353348086012602 -99] -90.6466519139874]
Test Case: 376 | Input/Output: [[-86.12251917280152 54] -32.12251917280152]
Test Case: 377 | Input/Output: [[48.28845523284622 -54] -5.711544767153782]
Test Case: 378 | Input/Output: [[-70.07280814319607 70] -0.07280814319607032]
Test Case: 379 | Input/Output: [[-84.15058074902504 59] -25.15058074902504]
Test Case: 380 | Input/Output: [[-15.150839088236907 8] -7.150839088236907]
Test Case: 381 | Input/Output: [[25.497670962292048 65] 90.49767096229205]
Test Case: 382 | Input/Output: [[-17.6429740822295 -40] -57.6429740822295]
Test Case: 383 | Input/Output: [[27.900929190534967 -75] -47.09907080946503]
Test Case: 384 | Input/Output: [[-76.79722440726712 75] -1.797224407267123]
Test Case: 385 | Input/Output: [[-58.068359353475365 -10] -68.06835935347536]
Test Case: 386 | Input/Output: [[-30.32842686476846 80] 49.67157313523154]
Test Case: 387 | Input/Output: [[-76.10880660309539 -29] -105.10880660309539]
Test Case: 388 | Input/Output: [[88.36314914749124 57] 145.36314914749124]
Test Case: 389 | Input/Output: [[50.26317378224212 -81] -30.73682621775788]
Test Case: 390 | Input/Output: [[-96.11234884106783 -45] -141.11234884106784]
Test Case: 391 | Input/Output: [[33.617611097759294 89] 122.6176110977593]
Test Case: 392 | Input/Output: [[51.37468626540439 98] 149.3746862654044]
Test Case: 393 | Input/Output: [[-33.02768561256839 -28] -61.02768561256839]
Test Case: 394 | Input/Output: [[-43.30803366426903 -85] -128.30803366426903]
Test Case: 395 | Input/Output: [[-35.45807965616463 -43] -78.45807965616463]
Test Case: 396 | Input/Output: [[69.61781908758772 59] 128.61781908758772]
Test Case: 397 | Input/Output: [[47.40628639500136 85] 132.40628639500136]
Test Case: 398 | Input/Output: [[-72.19158116330384 45] -27.191581163303837]
Test Case: 399 | Input/Output: [[40.36303217001276 66] 106.36303217001276]
Test Case: 400 | Input/Output: [[-46.59797313733611 5] -41.59797313733611]
Test Case: 401 | Input/Output: [[3.9152476008479766 -95] -91.08475239915202]
Test Case: 402 | Input/Output: [[86.15139159982982 -36] 50.15139159982982]
Test Case: 403 | Input/Output: [[72.86498157330917 -81] -8.135018426690834]
Test Case: 404 | Input/Output: [[72.21989540687142 85] 157.21989540687142]
Test Case: 405 | Input/Output: [[86.25219305389425 9] 95.25219305389425]
Test Case: 406 | Input/Output: [[-45.94546991139268 88] 42.05453008860732]
Test Case: 407 | Input/Output: [[-65.87990799441476 34] -31.879907994414765]
Test Case: 408 | Input/Output: [[43.689727965691446 -70] -26.310272034308554]
Test Case: 409 | Input/Output: [[-32.351174185864124 -55] -87.35117418586412]
Test Case: 410 | Input/Output: [[22.36569662959613 55] 77.36569662959613]
Test Case: 411 | Input/Output: [[9.495422703997633 88] 97.49542270399763]
Test Case: 412 | Input/Output: [[46.710775409108635 -11] 35.710775409108635]
Test Case: 413 | Input/Output: [[99.58875937980085 13] 112.58875937980085]
Test Case: 414 | Input/Output: [[-73.00134339193707 -85] -158.00134339193707]
Test Case: 415 | Input/Output: [[91.87867329577918 -79] 12.87867329577918]
Test Case: 416 | Input/Output: [[93.53532212604247 57] 150.53532212604247]
Test Case: 417 | Input/Output: [[-58.25212802315352 -65] -123.25212802315352]
Test Case: 418 | Input/Output: [[53.50534809843009 -58] -4.49465190156991]
Test Case: 419 | Input/Output: [[21.448124074150996 0] 21.448124074150996]
Test Case: 420 | Input/Output: [[-28.00863485298845 -19] -47.00863485298845]
Test Case: 421 | Input/Output: [[87.73122393053058 -13] 74.73122393053058]
Test Case: 422 | Input/Output: [[-52.124248866899634 11] -41.124248866899634]
Test Case: 423 | Input/Output: [[-97.51113542786092 61] -36.51113542786092]
Test Case: 424 | Input/Output: [[2.1783946134958967 45] 47.1783946134959]
Test Case: 425 | Input/Output: [[19.462189716138397 -79] -59.5378102838616]
Test Case: 426 | Input/Output: [[-75.93114075244505 -63] -138.93114075244506]
Test Case: 427 | Input/Output: [[47.5160907020593 -67] -19.4839092979407]
Test Case: 428 | Input/Output: [[-4.033260356673878 -7] -11.033260356673878]
Test Case: 429 | Input/Output: [[-99.6459260411428 -4] -103.6459260411428]
Test Case: 430 | Input/Output: [[60.45713161967902 -100] -39.54286838032098]
Test Case: 431 | Input/Output: [[88.09554351855417 -100] -11.904456481445834]
Test Case: 432 | Input/Output: [[63.560738395820806 63] 126.5607383958208]
Test Case: 433 | Input/Output: [[-29.797928422259147 -62] -91.79792842225915]
Test Case: 434 | Input/Output: [[87.06900833880903 -14] 73.06900833880903]
Test Case: 435 | Input/Output: [[-10.540102372765702 17] 6.459897627234298]
Test Case: 436 | Input/Output: [[34.9974511240581 46] 80.9974511240581]
Test Case: 437 | Input/Output: [[-84.19856824830029 100] 15.80143175169971]
Test Case: 438 | Input/Output: [[-52.41265975070186 -89] -141.41265975070186]
Test Case: 439 | Input/Output: [[80.75083646322193 -21] 59.75083646322193]
Test Case: 440 | Input/Output: [[75.97817869057391 -9] 66.97817869057391]
Test Case: 441 | Input/Output: [[14.84417609056068 -77] -62.15582390943932]
Test Case: 442 | Input/Output: [[-53.363932098484135 21] -32.363932098484135]
Test Case: 443 | Input/Output: [[-2.2217547183241777 37] 34.77824528167582]
Test Case: 444 | Input/Output: [[6.380174212852438 49] 55.38017421285244]
Test Case: 445 | Input/Output: [[-43.21651010637333 -72] -115.21651010637333]
Test Case: 446 | Input/Output: [[-47.7710341083839 -20] -67.7710341083839]
Test Case: 447 | Input/Output: [[-27.104755626242792 -9] -36.10475562624279]
Test Case: 448 | Input/Output: [[-3.867112461997266 6] 2.132887538002734]
Test Case: 449 | Input/Output: [[93.62094864473696 -76] 17.620948644736956]
Test Case: 450 | Input/Output: [[59.736578513209736 -52] 7.736578513209736]
Test Case: 451 | Input/Output: [[40.737000154422816 -20] 20.737000154422816]
Test Case: 452 | Input/Output: [[11.22502211027438 -40] -28.77497788972562]
Test Case: 453 | Input/Output: [[-68.80874068994288 -20] -88.80874068994288]
Test Case: 454 | Input/Output: [[-18.70245732470059 83] 64.29754267529941]
Test Case: 455 | Input/Output: [[44.63040734032322 98] 142.63040734032322]
Test Case: 456 | Input/Output: [[-60.46250026077722 39] -21.46250026077722]
Test Case: 457 | Input/Output: [[-11.943097316575063 -65] -76.94309731657506]
Test Case: 458 | Input/Output: [[67.88741837914844 17] 84.88741837914844]
Test Case: 459 | Input/Output: [[-85.9853872539677 -34] -119.9853872539677]
Test Case: 460 | Input/Output: [[-5.894476776151663 44] 38.10552322384834]
Test Case: 461 | Input/Output: [[-36.39440612669167 -97] -133.39440612669168]
Test Case: 462 | Input/Output: [[91.09428933901998 72] 163.09428933901998]
Test Case: 463 | Input/Output: [[-89.35305428739775 50] -39.353054287397754]
Test Case: 464 | Input/Output: [[-22.68714232693658 -72] -94.68714232693658]
Test Case: 465 | Input/Output: [[-84.41640361951579 -92] -176.4164036195158]
Test Case: 466 | Input/Output: [[40.022273056981135 -15] 25.022273056981135]
Test Case: 467 | Input/Output: [[98.96964148198876 61] 159.96964148198876]
Test Case: 468 | Input/Output: [[26.27391043814191 -75] -48.72608956185809]
Test Case: 469 | Input/Output: [[4.510459627026947 84] 88.51045962702695]
Test Case: 470 | Input/Output: [[-51.60154310715945 -30] -81.60154310715944]
Test Case: 471 | Input/Output: [[63.56497379157531 -65] -1.4350262084246879]
Test Case: 472 | Input/Output: [[-19.62449664839734 -52] -71.62449664839734]
Test Case: 473 | Input/Output: [[13.861627179245374 -52] -38.138372820754626]
Test Case: 474 | Input/Output: [[-82.01080363188373 26] -56.01080363188373]
Test Case: 475 | Input/Output: [[77.39625802485622 -45] 32.39625802485622]
Test Case: 476 | Input/Output: [[-4.680706994939499 -32] -36.6807069949395]
Test Case: 477 | Input/Output: [[44.98410676903325 69] 113.98410676903325]
Test Case: 478 | Input/Output: [[-22.41823142268254 -65] -87.41823142268254]
Test Case: 479 | Input/Output: [[-70.27475035075996 -31] -101.27475035075996]
Test Case: 480 | Input/Output: [[22.68330536495509 -21] 1.683305364955089]
Test Case: 481 | Input/Output: [[81.88280984599362 -11] 70.88280984599362]
Test Case: 482 | Input/Output: [[34.33460331874326 -80] -45.66539668125674]
Test Case: 483 | Input/Output: [[98.2665374014899 -48] 50.2665374014899]
Test Case: 484 | Input/Output: [[98.61157495008439 -34] 64.61157495008439]
Test Case: 485 | Input/Output: [[-18.10955360383413 97] 78.89044639616587]
Test Case: 486 | Input/Output: [[34.89920844372 36] 70.89920844372]
Test Case: 487 | Input/Output: [[-90.49568076391179 -98] -188.4956807639118]
Test Case: 488 | Input/Output: [[-29.417942096976304 41] 11.582057903023696]
Test Case: 489 | Input/Output: [[-26.50540849249876 48] 21.49459150750124]
Test Case: 490 | Input/Output: [[-84.19110476350073 -83] -167.19110476350073]
Test Case: 491 | Input/Output: [[-17.141010071785985 -69] -86.14101007178598]
Test Case: 492 | Input/Output: [[67.42143478850468 -85] -17.578565211495317]
Test Case: 493 | Input/Output: [[43.02319083268458 -12] 31.023190832684577]
Test Case: 494 | Input/Output: [[54.984514428708394 36] 90.9845144287084]
Test Case: 495 | Input/Output: [[-80.4831769011406 11] -69.4831769011406]
Test Case: 496 | Input/Output: [[63.843806493516354 12] 75.84380649351635]
Test Case: 497 | Input/Output: [[9.03322492017746 86] 95.03322492017746]
Test Case: 498 | Input/Output: [[-51.795733193031815 -49] -100.79573319303182]
Test Case: 499 | Input/Output: [[65.72088015966352 43] 108.72088015966352]
Test Case: 500 | Input/Output: [[-94.15906529880465 75] -19.15906529880465]
Test Case: 501 | Input/Output: [[30.51165022775001 -26] 4.51165022775001]
Test Case: 502 | Input/Output: [[58.252970872436606 31] 89.2529708724366]
Test Case: 503 | Input/Output: [[39.764622077608834 80] 119.76462207760883]
Test Case: 504 | Input/Output: [[42.71223630887201 -52] -9.287763691127992]
Test Case: 505 | Input/Output: [[63.95457875365531 21] 84.95457875365531]
Test Case: 506 | Input/Output: [[-81.50387329809499 -79] -160.503873298095]
Test Case: 507 | Input/Output: [[2.4981436345525623 -63] -60.50185636544744]
Test Case: 508 | Input/Output: [[-38.66688944740868 69] 30.33311055259132]
Test Case: 509 | Input/Output: [[20.728716412196874 55] 75.72871641219687]
Test Case: 510 | Input/Output: [[3.271173635100652 -84] -80.72882636489935]
Test Case: 511 | Input/Output: [[-41.82286225409575 55] 13.177137745904247]
Test Case: 512 | Input/Output: [[-84.06740660581646 -71] -155.06740660581647]
Test Case: 513 | Input/Output: [[-20.408427108309994 80] 59.59157289169001]
Test Case: 514 | Input/Output: [[14.81240516457099 -19] -4.18759483542901]
Test Case: 515 | Input/Output: [[-53.94091858572574 1] -52.94091858572574]
Test Case: 516 | Input/Output: [[-80.86580549974568 52] -28.865805499745676]
Test Case: 517 | Input/Output: [[-50.317869708401574 53] 2.682130291598426]
Test Case: 518 | Input/Output: [[-46.7129929767198 -27] -73.7129929767198]
Test Case: 519 | Input/Output: [[87.76880249267543 74] 161.76880249267543]
Test Case: 520 | Input/Output: [[51.891159440447154 21] 72.89115944044715]
Test Case: 521 | Input/Output: [[30.664781950123114 -82] -51.335218049876886]
Test Case: 522 | Input/Output: [[-20.819685073422207 81] 60.18031492657779]
Test Case: 523 | Input/Output: [[75.25587322967547 77] 152.25587322967547]
Test Case: 524 | Input/Output: [[2.1660916925361704 0] 2.1660916925361704]
Test Case: 525 | Input/Output: [[-51.30898231578478 48] -3.3089823157847817]
Test Case: 526 | Input/Output: [[-61.7234778094415 37] -24.723477809441498]
Test Case: 527 | Input/Output: [[-96.38257417393814 -94] -190.38257417393814]
Test Case: 528 | Input/Output: [[50.62980062563662 -72] -21.37019937436338]
Test Case: 529 | Input/Output: [[25.46557773913591 -12] 13.46557773913591]
Test Case: 530 | Input/Output: [[10.55239208647285 21] 31.55239208647285]
Test Case: 531 | Input/Output: [[-20.47178508232777 27] 6.52821491767223]
Test Case: 532 | Input/Output: [[69.74226956405573 97] 166.74226956405573]
Test Case: 533 | Input/Output: [[-39.74932896565435 16] -23.74932896565435]
Test Case: 534 | Input/Output: [[93.16258771656967 70] 163.16258771656967]
Test Case: 535 | Input/Output: [[88.88090803929705 -43] 45.880908039297054]
Test Case: 536 | Input/Output: [[82.2624510459174 74] 156.2624510459174]
Test Case: 537 | Input/Output: [[3.553494447877071 -83] -79.44650555212293]
Test Case: 538 | Input/Output: [[57.306282180785615 -57] 0.3062821807856153]
Test Case: 539 | Input/Output: [[45.15454859730704 -31] 14.154548597307041]
Test Case: 540 | Input/Output: [[-0.7110894154387353 51] 50.288910584561265]
Test Case: 541 | Input/Output: [[-41.28997587818552 69] 27.710024121814477]
Test Case: 542 | Input/Output: [[34.35153108268335 -18] 16.35153108268335]
Test Case: 543 | Input/Output: [[-54.86117087239386 -15] -69.86117087239387]
Test Case: 544 | Input/Output: [[76.34596109548812 -98] -21.65403890451188]
Test Case: 545 | Input/Output: [[-34.649589771434975 75] 40.350410228565025]
Test Case: 546 | Input/Output: [[30.208539401805695 -41] -10.791460598194305]
Test Case: 547 | Input/Output: [[25.284299163423967 -34] -8.715700836576033]
Test Case: 548 | Input/Output: [[-79.39336041678814 -100] -179.39336041678814]
Test Case: 549 | Input/Output: [[-12.665220185495784 25] 12.334779814504216]
Test Case: 550 | Input/Output: [[38.24754279281268 -85] -46.75245720718732]
Test Case: 551 | Input/Output: [[78.19662593131795 55] 133.19662593131795]
Test Case: 552 | Input/Output: [[-39.43504950979702 -12] -51.43504950979702]
Test Case: 553 | Input/Output: [[35.482513972343924 69] 104.48251397234392]
Test Case: 554 | Input/Output: [[-78.96786985196943 -25] -103.96786985196943]
Test Case: 555 | Input/Output: [[-24.599429255886534 95] 70.40057074411347]
Test Case: 556 | Input/Output: [[17.44911866002903 99] 116.44911866002903]
Test Case: 557 | Input/Output: [[89.59338141710151 -64] 25.59338141710151]
Test Case: 558 | Input/Output: [[-48.03804413654751 4] -44.03804413654751]
Test Case: 559 | Input/Output: [[-50.23909139108256 34] -16.23909139108256]
Test Case: 560 | Input/Output: [[-53.3163850064287 86] 32.6836149935713]
Test Case: 561 | Input/Output: [[27.149993459200218 -72] -44.85000654079978]
Test Case: 562 | Input/Output: [[86.2981481367479 -11] 75.2981481367479]
Test Case: 563 | Input/Output: [[-77.59057386326481 -36] -113.59057386326481]
Test Case: 564 | Input/Output: [[-49.53902408743747 -85] -134.53902408743747]
Test Case: 565 | Input/Output: [[-76.3782630485267 74] -2.378263048526705]
Test Case: 566 | Input/Output: [[96.08615491647609 -50] 46.08615491647609]
Test Case: 567 | Input/Output: [[-87.92645408281112 -94] -181.92645408281112]
Test Case: 568 | Input/Output: [[3.677315150065752 -32] -28.322684849934248]
Test Case: 569 | Input/Output: [[-90.66282915610901 -9] -99.66282915610901]
Test Case: 570 | Input/Output: [[41.656909450984585 28] 69.65690945098459]
Test Case: 571 | Input/Output: [[17.4706985978373 90] 107.4706985978373]
Test Case: 572 | Input/Output: [[39.687706469800105 5] 44.687706469800105]
Test Case: 573 | Input/Output: [[-17.771410282247118 -20] -37.77141028224712]
Test Case: 574 | Input/Output: [[95.52137989270594 -74] 21.521379892705937]
Test Case: 575 | Input/Output: [[83.92715036592554 85] 168.92715036592554]
Test Case: 576 | Input/Output: [[-94.71027769216502 43] -51.71027769216502]
Test Case: 577 | Input/Output: [[20.62241834461102 72] 92.62241834461102]
Test Case: 578 | Input/Output: [[-38.972849458444614 41] 2.027150541555386]
Test Case: 579 | Input/Output: [[52.39617395274206 -38] 14.39617395274206]
Test Case: 580 | Input/Output: [[16.614574242658023 39] 55.61457424265802]
Test Case: 581 | Input/Output: [[-19.987404628820315 29] 9.012595371179685]
Test Case: 582 | Input/Output: [[54.62670180216546 -98] -43.37329819783454]
Test Case: 583 | Input/Output: [[-53.77280582680295 15] -38.77280582680295]
Test Case: 584 | Input/Output: [[9.147059309235587 -97] -87.85294069076441]
Test Case: 585 | Input/Output: [[-70.38709232007199 -64] -134.387092320072]
Test Case: 586 | Input/Output: [[84.01679218113611 83] 167.0167921811361]
Test Case: 587 | Input/Output: [[-95.16381391294462 66] -29.16381391294462]
Test Case: 588 | Input/Output: [[75.60919477900956 90] 165.60919477900956]
Test Case: 589 | Input/Output: [[-56.79467998691592 -75] -131.79467998691592]
Test Case: 590 | Input/Output: [[-4.003465868564831 -43] -47.00346586856483]
Test Case: 591 | Input/Output: [[82.77166636887029 -24] 58.771666368870285]
Test Case: 592 | Input/Output: [[55.04398580547581 -11] 44.04398580547581]
Test Case: 593 | Input/Output: [[-23.848764438467015 78] 54.151235561532985]
Test Case: 594 | Input/Output: [[-95.91572815367459 55] -40.91572815367459]
Test Case: 595 | Input/Output: [[71.49454975822309 -26] 45.49454975822309]
Test Case: 596 | Input/Output: [[64.10962287368164 61] 125.10962287368164]
Test Case: 597 | Input/Output: [[-72.0504847808405 -88] -160.05048478084052]
Test Case: 598 | Input/Output: [[-29.432547089250605 -65] -94.4325470892506]
Test Case: 599 | Input/Output: [[-50.56412673125288 23] -27.564126731252877]
Test Case: 600 | Input/Output: [[-76.19478645157437 -77] -153.19478645157437]
Test Case: 601 | Input/Output: [[29.026109166770794 -35] -5.9738908332292056]
Test Case: 602 | Input/Output: [[35.30971138789815 14] 49.30971138789815]
Test Case: 603 | Input/Output: [[97.0274320851679 71] 168.0274320851679]
Test Case: 604 | Input/Output: [[12.17966558249472 -67] -54.82033441750528]
Test Case: 605 | Input/Output: [[57.20519918529226 -5] 52.20519918529226]
Test Case: 606 | Input/Output: [[94.35719227076584 -53] 41.357192270765836]
Test Case: 607 | Input/Output: [[98.39776461320201 53] 151.397764613202]
Test Case: 608 | Input/Output: [[-74.49737536011054 19] -55.49737536011054]
Test Case: 609 | Input/Output: [[-19.75717296630664 -59] -78.75717296630664]
Test Case: 610 | Input/Output: [[-31.878885894136772 -33] -64.87888589413677]
Test Case: 611 | Input/Output: [[96.38659189819299 -34] 62.38659189819299]
Test Case: 612 | Input/Output: [[-6.00320963209704 -99] -105.00320963209704]
Test Case: 613 | Input/Output: [[-97.02189833945663 44] -53.02189833945663]
Test Case: 614 | Input/Output: [[7.22198564035746 85] 92.22198564035746]
Test Case: 615 | Input/Output: [[90.56067618791656 -69] 21.560676187916556]
Test Case: 616 | Input/Output: [[73.82270017635136 -42] 31.82270017635136]
Test Case: 617 | Input/Output: [[42.15886735750678 60] 102.15886735750678]
Test Case: 618 | Input/Output: [[60.27510847985985 10] 70.27510847985985]
Test Case: 619 | Input/Output: [[-32.846624258543855 -91] -123.84662425854386]
Test Case: 620 | Input/Output: [[9.970881937341701 -62] -52.0291180626583]
Test Case: 621 | Input/Output: [[41.78340653148024 -20] 21.78340653148024]
Test Case: 622 | Input/Output: [[67.4923449370387 10] 77.4923449370387]
Test Case: 623 | Input/Output: [[93.3747588867059 -73] 20.374758886705905]
Test Case: 624 | Input/Output: [[68.87434298265399 -13] 55.874342982653985]
Test Case: 625 | Input/Output: [[70.86694201145437 41] 111.86694201145437]
Test Case: 626 | Input/Output: [[-42.85977876513263 55] 12.140221234867369]
Test Case: 627 | Input/Output: [[-20.92842144524198 34] 13.07157855475802]
Test Case: 628 | Input/Output: [[-29.5291999562115 -48] -77.5291999562115]
Test Case: 629 | Input/Output: [[71.4629784363126 -76] -4.537021563687404]
Test Case: 630 | Input/Output: [[64.23892682954332 64] 128.23892682954332]
Test Case: 631 | Input/Output: [[78.05423600921716 -37] 41.05423600921716]
Test Case: 632 | Input/Output: [[82.42974776302623 61] 143.42974776302623]
Test Case: 633 | Input/Output: [[-64.90734175068576 -98] -162.90734175068576]
Test Case: 634 | Input/Output: [[91.55139608852019 -44] 47.55139608852019]
Test Case: 635 | Input/Output: [[-51.36899951895857 -12] -63.36899951895857]
Test Case: 636 | Input/Output: [[4.8415705313194906 -69] -64.15842946868051]
Test Case: 637 | Input/Output: [[-8.400078357265357 -89] -97.40007835726536]
Test Case: 638 | Input/Output: [[13.371551809142517 36] 49.37155180914252]
Test Case: 639 | Input/Output: [[-76.93129808169816 -84] -160.93129808169817]
Test Case: 640 | Input/Output: [[-53.167418496186244 -74] -127.16741849618624]
Test Case: 641 | Input/Output: [[2.613769390736252 -23] -20.386230609263748]
Test Case: 642 | Input/Output: [[-36.79535805277949 73] 36.20464194722051]
Test Case: 643 | Input/Output: [[-63.311058368837216 -48] -111.31105836883722]
Test Case: 644 | Input/Output: [[-1.4077307456107775 49] 47.59226925438922]
Test Case: 645 | Input/Output: [[22.11986880426764 -55] -32.88013119573236]
Test Case: 646 | Input/Output: [[99.51626388095062 64] 163.51626388095062]
Test Case: 647 | Input/Output: [[-57.57511989933326 86] 28.42488010066674]
Test Case: 648 | Input/Output: [[85.30148298694766 16] 101.30148298694766]
Test Case: 649 | Input/Output: [[53.37111385440929 -98] -44.62888614559071]
Test Case: 650 | Input/Output: [[-22.4918686655527 41] 18.5081313344473]
Test Case: 651 | Input/Output: [[-0.8372046507950017 -88] -88.837204650795]
Test Case: 652 | Input/Output: [[80.04798203442843 -81] -0.9520179655715708]
Test Case: 653 | Input/Output: [[6.022278980899529 -89] -82.97772101910047]
Test Case: 654 | Input/Output: [[55.21034234815744 -73] -17.78965765184256]
Test Case: 655 | Input/Output: [[-54.648664413631835 -56] -110.64866441363183]
Test Case: 656 | Input/Output: [[71.99674950735451 59] 130.9967495073545]
Test Case: 657 | Input/Output: [[41.6469843167674 -28] 13.646984316767401]
Test Case: 658 | Input/Output: [[-10.952325416848694 12] 1.0476745831513057]
Test Case: 659 | Input/Output: [[-33.41304270112897 17] -16.413042701128973]
Test Case: 660 | Input/Output: [[84.80669850223842 -9] 75.80669850223842]
Test Case: 661 | Input/Output: [[-92.73619023728206 -45] -137.73619023728207]
Test Case: 662 | Input/Output: [[99.56019418740127 56] 155.56019418740127]
Test Case: 663 | Input/Output: [[-17.955327097762066 -10] -27.955327097762066]
Test Case: 664 | Input/Output: [[17.21491467766529 57] 74.21491467766529]
Test Case: 665 | Input/Output: [[-48.971021761080614 43] -5.971021761080614]
Test Case: 666 | Input/Output: [[-30.913647036761944 87] 56.086352963238056]
Test Case: 667 | Input/Output: [[-77.82381984206509 -96] -173.8238198420651]
Test Case: 668 | Input/Output: [[5.6210619002252145 -93] -87.37893809977479]
Test Case: 669 | Input/Output: [[35.95643311347948 -43] -7.043566886520523]
Test Case: 670 | Input/Output: [[-19.69379972189968 -45] -64.69379972189968]
Test Case: 671 | Input/Output: [[-56.99372573843817 50] -6.993725738438172]
Test Case: 672 | Input/Output: [[-12.013673683551502 -8] -20.013673683551502]
Test Case: 673 | Input/Output: [[-30.645491488193912 -8] -38.64549148819391]
Test Case: 674 | Input/Output: [[-51.40718445388968 -14] -65.40718445388967]
Test Case: 675 | Input/Output: [[-82.94808455603244 -84] -166.94808455603243]
Test Case: 676 | Input/Output: [[-11.07741119980355 -60] -71.07741119980355]
Test Case: 677 | Input/Output: [[4.610831216277518 -46] -41.38916878372248]
Test Case: 678 | Input/Output: [[65.16467769087052 -80] -14.83532230912948]
Test Case: 679 | Input/Output: [[-28.179975684024555 -84] -112.17997568402455]
Test Case: 680 | Input/Output: [[69.00753853559527 52] 121.00753853559527]
Test Case: 681 | Input/Output: [[33.37483741748605 66] 99.37483741748605]
Test Case: 682 | Input/Output: [[-10.608366340280355 12] 1.3916336597196448]
Test Case: 683 | Input/Output: [[92.95042432109841 -4] 88.95042432109841]
Test Case: 684 | Input/Output: [[-84.05094219847157 25] -59.050942198471574]
Test Case: 685 | Input/Output: [[87.68664614307403 -79] 8.686646143074029]
Test Case: 686 | Input/Output: [[14.742707817370857 -29] -14.257292182629143]
Test Case: 687 | Input/Output: [[-51.7774552853012 59] 7.222544714698799]
Test Case: 688 | Input/Output: [[35.282913938936105 49] 84.2829139389361]
Test Case: 689 | Input/Output: [[19.258539563945988 -11] 8.258539563945988]
Test Case: 690 | Input/Output: [[32.66451771473871 90] 122.66451771473871]
Test Case: 691 | Input/Output: [[13.858626289833325 -53] -39.141373710166675]
Test Case: 692 | Input/Output: [[-49.14248544219551 -4] -53.14248544219551]
Test Case: 693 | Input/Output: [[-84.29219009335729 8] -76.29219009335729]
Test Case: 694 | Input/Output: [[7.706087830657253 -55] -47.29391216934275]
Test Case: 695 | Input/Output: [[37.48013823208271 -41] -3.519861767917291]
Test Case: 696 | Input/Output: [[31.614033991226762 -41] -9.385966008773238]
Test Case: 697 | Input/Output: [[-62.769258220146625 -20] -82.76925822014663]
Test Case: 698 | Input/Output: [[-93.45995413696035 97] 3.5400458630396514]
Test Case: 699 | Input/Output: [[-46.72057229609165 40] -6.720572296091653]
Test Case: 700 | Input/Output: [[0.2896096423437484 -53] -52.71039035765625]
Test Case: 701 | Input/Output: [[-99.82131345399861 1] -98.82131345399861]
Test Case: 702 | Input/Output: [[92.66158062360194 -100] -7.338419376398065]
Test Case: 703 | Input/Output: [[55.329886772742924 -6] 49.329886772742924]
Test Case: 704 | Input/Output: [[-85.91143379634465 42] -43.91143379634465]
Test Case: 705 | Input/Output: [[-3.3577538203884956 -56] -59.357753820388496]
Test Case: 706 | Input/Output: [[37.530345006474874 70] 107.53034500647487]
Test Case: 707 | Input/Output: [[-61.71316900604646 -83] -144.71316900604646]
Test Case: 708 | Input/Output: [[48.79438779326645 -17] 31.794387793266452]
Test Case: 709 | Input/Output: [[-78.66487398480797 -33] -111.66487398480797]
Test Case: 710 | Input/Output: [[45.425861102320255 -69] -23.574138897679745]
Test Case: 711 | Input/Output: [[43.72956628487543 36] 79.72956628487543]
Test Case: 712 | Input/Output: [[58.722381033348796 5] 63.722381033348796]
Test Case: 713 | Input/Output: [[4.679136719286788 -54] -49.32086328071321]
Test Case: 714 | Input/Output: [[23.684565993707565 38] 61.684565993707565]
Test Case: 715 | Input/Output: [[-78.14444761116137 -57] -135.14444761116135]
Test Case: 716 | Input/Output: [[-77.53654565773631 67] -10.536545657736312]
Test Case: 717 | Input/Output: [[75.13305010884471 81] 156.1330501088447]
Test Case: 718 | Input/Output: [[-63.32984016548495 49] -14.329840165484953]
Test Case: 719 | Input/Output: [[-15.545677227446248 79] 63.45432277255375]
Test Case: 720 | Input/Output: [[-30.395560559946944 -34] -64.39556055994694]
Test Case: 721 | Input/Output: [[29.31473255514797 -67] -37.68526744485203]
Test Case: 722 | Input/Output: [[-41.38303116854325 100] 58.61696883145675]
Test Case: 723 | Input/Output: [[-55.3571038102451 -71] -126.35710381024509]
Test Case: 724 | Input/Output: [[-94.40213473520657 -47] -141.40213473520657]
Test Case: 725 | Input/Output: [[-91.98941928625852 -92] -183.9894192862585]
Test Case: 726 | Input/Output: [[-60.671357330334686 0] -60.671357330334686]
Test Case: 727 | Input/Output: [[73.38870785093846 -68] 5.388707850938459]
Test Case: 728 | Input/Output: [[95.69945841387573 92] 187.69945841387573]
Test Case: 729 | Input/Output: [[45.43846305949381 -100] -54.56153694050619]
Test Case: 730 | Input/Output: [[17.44164817569036 -78] -60.55835182430964]
Test Case: 731 | Input/Output: [[92.16628463750098 -24] 68.16628463750098]
Test Case: 732 | Input/Output: [[-68.9659496021591 -17] -85.9659496021591]
Test Case: 733 | Input/Output: [[-68.21388325515896 -76] -144.21388325515898]
Test Case: 734 | Input/Output: [[-16.651653554670773 -81] -97.65165355467077]
Test Case: 735 | Input/Output: [[-35.27318286672747 -91] -126.27318286672747]
Test Case: 736 | Input/Output: [[-0.8661164889134767 -11] -11.866116488913477]
Test Case: 737 | Input/Output: [[-28.32345607643994 51] 22.67654392356006]
Test Case: 738 | Input/Output: [[43.99253755696057 -9] 34.99253755696057]
Test Case: 739 | Input/Output: [[-43.61364630257012 6] -37.61364630257012]
Test Case: 740 | Input/Output: [[33.37485573588759 -58] -24.625144264112407]
Test Case: 741 | Input/Output: [[0.8486078467607285 -3] -2.1513921532392715]
Test Case: 742 | Input/Output: [[11.257915447956066 31] 42.257915447956066]
Test Case: 743 | Input/Output: [[-87.36367253480906 23] -64.36367253480906]
Test Case: 744 | Input/Output: [[59.47535238539459 88] 147.4753523853946]
Test Case: 745 | Input/Output: [[-62.53840082539763 -48] -110.53840082539763]
Test Case: 746 | Input/Output: [[33.75851131465578 -86] -52.24148868534422]
Test Case: 747 | Input/Output: [[98.31589659816674 54] 152.31589659816674]
Test Case: 748 | Input/Output: [[-5.047692604375669 92] 86.95230739562433]
Test Case: 749 | Input/Output: [[-3.1738174268334944 66] 62.826182573166506]
Test Case: 750 | Input/Output: [[-18.518336876925233 -1] -19.518336876925233]
Test Case: 751 | Input/Output: [[34.875231698719574 -52] -17.124768301280426]
Test Case: 752 | Input/Output: [[-16.61257734525536 -32] -48.61257734525536]
Test Case: 753 | Input/Output: [[-37.739605730953116 -43] -80.73960573095312]
Test Case: 754 | Input/Output: [[25.412781410764268 -82] -56.58721858923573]
Test Case: 755 | Input/Output: [[1.1041426542716408 100] 101.10414265427164]
Test Case: 756 | Input/Output: [[13.005482719724213 -77] -63.99451728027579]
Test Case: 757 | Input/Output: [[-17.35390983325624 -77] -94.35390983325624]
Test Case: 758 | Input/Output: [[32.75625085982901 96] 128.756250859829]
Test Case: 759 | Input/Output: [[29.888738337183298 -55] -25.111261662816702]
Test Case: 760 | Input/Output: [[58.79123832024979 100] 158.7912383202498]
Test Case: 761 | Input/Output: [[92.8456401516298 96] 188.8456401516298]
Test Case: 762 | Input/Output: [[53.02239262065183 -18] 35.02239262065183]
Test Case: 763 | Input/Output: [[43.16800911184495 5] 48.16800911184495]
Test Case: 764 | Input/Output: [[64.90000226333774 69] 133.90000226333774]
Test Case: 765 | Input/Output: [[94.07222343381807 -51] 43.07222343381807]
Test Case: 766 | Input/Output: [[54.33090197490503 -71] -16.669098025094968]
Test Case: 767 | Input/Output: [[-46.4149355650658 18] -28.414935565065797]
Test Case: 768 | Input/Output: [[21.175265990364963 6] 27.175265990364963]
Test Case: 769 | Input/Output: [[-35.73337827645153 36] 0.266621723548468]
Test Case: 770 | Input/Output: [[-55.00612595563399 -10] -65.00612595563399]
Test Case: 771 | Input/Output: [[76.27369877868381 -27] 49.27369877868381]
Test Case: 772 | Input/Output: [[42.73064193448167 -31] 11.730641934481667]
Test Case: 773 | Input/Output: [[-59.235083552068325 -56] -115.23508355206832]
Test Case: 774 | Input/Output: [[0.6403762160604174 39] 39.64037621606042]
Test Case: 775 | Input/Output: [[-61.287962535016405 -36] -97.2879625350164]
Test Case: 776 | Input/Output: [[-15.030482485546997 37] 21.969517514453003]
Test Case: 777 | Input/Output: [[-50.84920582005299 -96] -146.849205820053]
Test Case: 778 | Input/Output: [[-4.647254257986887 100] 95.35274574201311]
Test Case: 779 | Input/Output: [[-59.93836987848997 91] 31.061630121510028]
Test Case: 780 | Input/Output: [[-3.5856990159817173 88] 84.41430098401828]
Test Case: 781 | Input/Output: [[-98.59862361968486 -90] -188.59862361968487]
Test Case: 782 | Input/Output: [[81.64522381368414 8] 89.64522381368414]
Test Case: 783 | Input/Output: [[14.759614368833624 -44] -29.240385631166376]
Test Case: 784 | Input/Output: [[-87.72384841345672 -100] -187.72384841345672]
Test Case: 785 | Input/Output: [[5.5641027704599395 -63] -57.43589722954006]
Test Case: 786 | Input/Output: [[55.59335895738698 -23] 32.59335895738698]
Test Case: 787 | Input/Output: [[48.60392307826004 56] 104.60392307826004]
Test Case: 788 | Input/Output: [[78.58941130737134 -94] -15.410588692628664]
Test Case: 789 | Input/Output: [[-50.13094639890405 88] 37.86905360109595]
Test Case: 790 | Input/Output: [[-11.156787813311112 -74] -85.15678781331111]
Test Case: 791 | Input/Output: [[73.93067612038203 -17] 56.93067612038203]
Test Case: 792 | Input/Output: [[-28.136435355216776 -30] -58.136435355216776]
Test Case: 793 | Input/Output: [[30.65714220319913 -50] -19.34285779680087]
Test Case: 794 | Input/Output: [[8.858233678311848 70] 78.85823367831185]
Test Case: 795 | Input/Output: [[-95.50763001099234 17] -78.50763001099234]
Test Case: 796 | Input/Output: [[37.93635153414431 -62] -24.063648465855692]
Test Case: 797 | Input/Output: [[19.149013684536527 -3] 16.149013684536527]
Test Case: 798 | Input/Output: [[-23.5442931131512 -65] -88.5442931131512]
Test Case: 799 | Input/Output: [[27.430923476018904 -48] -20.569076523981096]
Test Case: 800 | Input/Output: [[97.76801647068214 99] 196.76801647068214]
Test Case: 801 | Input/Output: [[26.17514301929762 -1] 25.17514301929762]
Test Case: 802 | Input/Output: [[-33.689976229554645 -68] -101.68997622955465]
Test Case: 803 | Input/Output: [[-3.4989939298817063 -2] -5.498993929881706]
Test Case: 804 | Input/Output: [[0.5604675688785079 -6] -5.439532431121492]
Test Case: 805 | Input/Output: [[-83.96777058171807 -52] -135.96777058171807]
Test Case: 806 | Input/Output: [[66.59906523929203 -60] 6.599065239292031]
Test Case: 807 | Input/Output: [[59.08923485966696 6] 65.08923485966696]
Test Case: 808 | Input/Output: [[23.84165358536663 -100] -76.15834641463337]
Test Case: 809 | Input/Output: [[5.615754698766523 10] 15.615754698766523]
Test Case: 810 | Input/Output: [[-25.15198424158325 61] 35.84801575841675]
Test Case: 811 | Input/Output: [[96.92658153764836 70] 166.92658153764836]
Test Case: 812 | Input/Output: [[-69.14605462662145 -90] -159.14605462662144]
Test Case: 813 | Input/Output: [[-41.25393323044611 39] -2.2539332304461084]
Test Case: 814 | Input/Output: [[68.95434800484728 -86] -17.045651995152724]
Test Case: 815 | Input/Output: [[-82.61907205971497 46] -36.619072059714966]
Test Case: 816 | Input/Output: [[-77.06208405270101 -64] -141.062084052701]
Test Case: 817 | Input/Output: [[-16.416572338266832 68] 51.58342766173317]
Test Case: 818 | Input/Output: [[25.23430113657166 -86] -60.76569886342834]
Test Case: 819 | Input/Output: [[99.87222450189293 69] 168.87222450189293]
Test Case: 820 | Input/Output: [[-59.11189052101431 60] 0.8881094789856903]
Test Case: 821 | Input/Output: [[-2.367340062323194 -17] -19.367340062323194]
Test Case: 822 | Input/Output: [[69.90151912144617 10] 79.90151912144617]
Test Case: 823 | Input/Output: [[50.191986652809476 12] 62.191986652809476]
Test Case: 824 | Input/Output: [[-26.376475904995104 -51] -77.3764759049951]
Test Case: 825 | Input/Output: [[54.633044457420056 -95] -40.366955542579944]
Test Case: 826 | Input/Output: [[90.61156095124221 -76] 14.611560951242211]
Test Case: 827 | Input/Output: [[-98.81427153691249 -92] -190.81427153691249]
Test Case: 828 | Input/Output: [[-49.73030129124763 -20] -69.73030129124763]
Test Case: 829 | Input/Output: [[-52.14638340392392 26] -26.14638340392392]
Test Case: 830 | Input/Output: [[68.94418171600566 -68] 0.9441817160056587]
Test Case: 831 | Input/Output: [[-75.79150911914874 87] 11.208490880851258]
Test Case: 832 | Input/Output: [[92.43707315798241 -4] 88.43707315798241]
Test Case: 833 | Input/Output: [[51.756796867162194 -50] 1.756796867162194]
Test Case: 834 | Input/Output: [[-77.0826472906964 -10] -87.0826472906964]
Test Case: 835 | Input/Output: [[-13.31634369945401 -29] -42.31634369945401]
Test Case: 836 | Input/Output: [[-10.553777421848139 -85] -95.55377742184814]
Test Case: 837 | Input/Output: [[55.450188367006604 32] 87.4501883670066]
Test Case: 838 | Input/Output: [[-5.036052453128065 -61] -66.03605245312806]
Test Case: 839 | Input/Output: [[-81.3359475975747 4] -77.3359475975747]
Test Case: 840 | Input/Output: [[-4.065337652998508 87] 82.93466234700149]
Test Case: 841 | Input/Output: [[64.90462681280164 -36] 28.904626812801638]
Test Case: 842 | Input/Output: [[-52.05251459381832 29] -23.052514593818323]
Test Case: 843 | Input/Output: [[-34.06917849984856 -62] -96.06917849984856]
Test Case: 844 | Input/Output: [[-84.69553555874118 31] -53.695535558741184]
Test Case: 845 | Input/Output: [[-9.473830278548206 50] 40.526169721451794]
Test Case: 846 | Input/Output: [[95.37623986290757 -39] 56.37623986290757]
Test Case: 847 | Input/Output: [[52.28713990168052 73] 125.28713990168052]
Test Case: 848 | Input/Output: [[46.73397914428833 7] 53.73397914428833]
Test Case: 849 | Input/Output: [[-94.00867648277989 -93] -187.0086764827799]
Test Case: 850 | Input/Output: [[-37.03064137377361 -60] -97.03064137377362]
Test Case: 851 | Input/Output: [[77.3344862664797 -86] -8.6655137335203]
Test Case: 852 | Input/Output: [[-6.357179928505261 -22] -28.35717992850526]
Test Case: 853 | Input/Output: [[41.191315602513384 62] 103.19131560251338]
Test Case: 854 | Input/Output: [[58.79438151324601 89] 147.794381513246]
Test Case: 855 | Input/Output: [[55.38943017512764 92] 147.38943017512764]
Test Case: 856 | Input/Output: [[-65.57222141185045 26] -39.57222141185045]
Test Case: 857 | Input/Output: [[71.32244628783695 57] 128.32244628783695]
Test Case: 858 | Input/Output: [[-66.39496146898323 -75] -141.39496146898324]
Test Case: 859 | Input/Output: [[-95.5261918250906 -46] -141.52619182509062]
Test Case: 860 | Input/Output: [[-16.24188097678585 -77] -93.24188097678585]
Test Case: 861 | Input/Output: [[26.16103951698186 86] 112.16103951698186]
Test Case: 862 | Input/Output: [[7.7830142418929 14] 21.7830142418929]
Test Case: 863 | Input/Output: [[73.47370505311531 93] 166.4737050531153]
Test Case: 864 | Input/Output: [[58.292690479800115 -27] 31.292690479800115]
Test Case: 865 | Input/Output: [[61.42722551549758 -10] 51.42722551549758]
Test Case: 866 | Input/Output: [[19.729081881030524 99] 118.72908188103052]
Test Case: 867 | Input/Output: [[-18.68096970649742 -63] -81.68096970649742]
Test Case: 868 | Input/Output: [[-27.099700978030384 -74] -101.09970097803038]
Test Case: 869 | Input/Output: [[-78.92998158650303 25] -53.92998158650303]
Test Case: 870 | Input/Output: [[33.71703145897939 87] 120.71703145897939]
Test Case: 871 | Input/Output: [[-4.493087977858281 -47] -51.49308797785828]
Test Case: 872 | Input/Output: [[-54.59753553751767 32] -22.597535537517672]
Test Case: 873 | Input/Output: [[-74.54115393404311 -76] -150.5411539340431]
Test Case: 874 | Input/Output: [[60.90343017051836 13] 73.90343017051836]
Test Case: 875 | Input/Output: [[-45.46307279277364 -16] -61.46307279277364]
Test Case: 876 | Input/Output: [[-38.65810164890809 35] -3.6581016489080866]
Test Case: 877 | Input/Output: [[96.80617654314074 -28] 68.80617654314074]
Test Case: 878 | Input/Output: [[51.483416886926676 -74] -22.516583113073324]
Test Case: 879 | Input/Output: [[-64.18134703407286 100] 35.81865296592714]
Test Case: 880 | Input/Output: [[-66.73543937423935 36] -30.73543937423935]
Test Case: 881 | Input/Output: [[25.43894397938334 -30] -4.561056020616661]
Test Case: 882 | Input/Output: [[-78.58314789735066 -12] -90.58314789735066]
Test Case: 883 | Input/Output: [[21.29737040052484 27] 48.29737040052484]
Test Case: 884 | Input/Output: [[59.22734145810958 -64] -4.772658541890422]
Test Case: 885 | Input/Output: [[-48.15655429459971 -40] -88.15655429459972]
Test Case: 886 | Input/Output: [[-53.936117064354995 -36] -89.93611706435499]
Test Case: 887 | Input/Output: [[99.74058835265828 -38] 61.74058835265828]
Test Case: 888 | Input/Output: [[-11.844346863072516 33] 21.155653136927484]
Test Case: 889 | Input/Output: [[-47.222835962871066 60] 12.777164037128934]
Test Case: 890 | Input/Output: [[-91.4805525069394 -88] -179.4805525069394]
Test Case: 891 | Input/Output: [[27.956642601807474 17] 44.956642601807474]
Test Case: 892 | Input/Output: [[95.80525763207933 -98] -2.194742367920668]
Test Case: 893 | Input/Output: [[68.85343637834282 36] 104.85343637834282]
Test Case: 894 | Input/Output: [[-33.9807241028379 -43] -76.9807241028379]
Test Case: 895 | Input/Output: [[36.38578345784441 83] 119.38578345784441]
Test Case: 896 | Input/Output: [[68.23480145573873 -91] -22.765198544261267]
Test Case: 897 | Input/Output: [[-84.8735263283867 47] -37.8735263283867]
Test Case: 898 | Input/Output: [[-2.806644043988939 -78] -80.80664404398894]
Test Case: 899 | Input/Output: [[-62.73804905945055 -2] -64.73804905945056]
Test Case: 900 | Input/Output: [[-25.694866081557095 100] 74.3051339184429]
Test Case: 901 | Input/Output: [[8.81376581624265 -6] 2.8137658162426504]
Test Case: 902 | Input/Output: [[-19.36918900624292 -43] -62.36918900624292]
Test Case: 903 | Input/Output: [[32.987627036937 -100] -67.012372963063]
Test Case: 904 | Input/Output: [[-40.37237346458964 -30] -70.37237346458964]
Test Case: 905 | Input/Output: [[-35.880094988256744 -16] -51.880094988256744]
Test Case: 906 | Input/Output: [[6.321282801553394 -44] -37.678717198446606]
Test Case: 907 | Input/Output: [[52.28019545779085 91] 143.28019545779085]
Test Case: 908 | Input/Output: [[51.46723727715661 -67] -15.532762722843387]
Test Case: 909 | Input/Output: [[17.162300233324416 -79] -61.837699766675584]
Test Case: 910 | Input/Output: [[1.0542274353290395 -46] -44.94577256467096]
Test Case: 911 | Input/Output: [[34.436549557890714 100] 134.43654955789071]
Test Case: 912 | Input/Output: [[-20.324124996499805 26] 5.675875003500195]
Test Case: 913 | Input/Output: [[-72.5855971605751 -17] -89.5855971605751]
Test Case: 914 | Input/Output: [[-13.80464812401496 9] -4.80464812401496]
Test Case: 915 | Input/Output: [[-80.30282704325977 52] -28.302827043259768]
Test Case: 916 | Input/Output: [[-5.602839653337483 99] 93.39716034666252]
Test Case: 917 | Input/Output: [[90.34601042819477 15] 105.34601042819477]
Test Case: 918 | Input/Output: [[43.274421900621064 -6] 37.274421900621064]
Test Case: 919 | Input/Output: [[79.56951426034593 -62] 17.569514260345926]
Test Case: 920 | Input/Output: [[-24.504514723798707 70] 45.49548527620129]
Test Case: 921 | Input/Output: [[-95.50872850747734 -82] -177.50872850747734]
Test Case: 922 | Input/Output: [[-98.08420154651702 -29] -127.08420154651702]
Test Case: 923 | Input/Output: [[47.85224866264707 -85] -37.14775133735293]
Test Case: 924 | Input/Output: [[5.597722074430919 64] 69.59772207443092]
Test Case: 925 | Input/Output: [[43.881016878605294 -92] -48.118983121394706]
Test Case: 926 | Input/Output: [[-29.900180904236848 -8] -37.90018090423685]
Test Case: 927 | Input/Output: [[4.8522817727341305 -13] -8.14771822726587]
Test Case: 928 | Input/Output: [[60.09469093028579 -76] -15.905309069714207]
Test Case: 929 | Input/Output: [[26.281168126940457 20] 46.28116812694046]
Test Case: 930 | Input/Output: [[-56.69326828627952 -73] -129.69326828627953]
Test Case: 931 | Input/Output: [[57.27312918668241 23] 80.27312918668241]
Test Case: 932 | Input/Output: [[-77.69290505727373 23] -54.692905057273734]
Test Case: 933 | Input/Output: [[83.6001077479159 -9] 74.6001077479159]
Test Case: 934 | Input/Output: [[25.27544847729702 -54] -28.72455152270298]
Test Case: 935 | Input/Output: [[-13.803907009729116 -83] -96.80390700972912]
Test Case: 936 | Input/Output: [[-78.36986409419836 -66] -144.36986409419836]
Test Case: 937 | Input/Output: [[27.90914835327898 62] 89.90914835327898]
Test Case: 938 | Input/Output: [[53.297378094317224 43] 96.29737809431722]
Test Case: 939 | Input/Output: [[-77.33200091345537 59] -18.332000913455374]
Test Case: 940 | Input/Output: [[-7.354188221466032 0] -7.354188221466032]
Test Case: 941 | Input/Output: [[-49.10122314563621 50] 0.8987768543637884]
Test Case: 942 | Input/Output: [[-27.05820716516169 -83] -110.05820716516169]
Test Case: 943 | Input/Output: [[55.672565608314216 -85] -29.327434391685784]
Test Case: 944 | Input/Output: [[-28.967777613365016 44] 15.032222386634984]
Test Case: 945 | Input/Output: [[50.97320394989515 60] 110.97320394989515]
Test Case: 946 | Input/Output: [[95.38593888836337 -75] 20.38593888836337]
Test Case: 947 | Input/Output: [[73.71037590829411 -31] 42.71037590829411]
Test Case: 948 | Input/Output: [[76.57485752932496 -39] 37.57485752932496]
Test Case: 949 | Input/Output: [[-84.28439917414457 87] 2.7156008258554323]
Test Case: 950 | Input/Output: [[49.55181274897086 -89] -39.44818725102914]
Test Case: 951 | Input/Output: [[67.55340276208196 44] 111.55340276208196]
Test Case: 952 | Input/Output: [[87.41743144233851 20] 107.41743144233851]
Test Case: 953 | Input/Output: [[-5.407639997590479 99] 93.59236000240952]
Test Case: 954 | Input/Output: [[-1.8779524639142409 3] 1.1220475360857591]
Test Case: 955 | Input/Output: [[-8.003647984678324 55] 46.996352015321676]
Test Case: 956 | Input/Output: [[62.74126410812849 -53] 9.74126410812849]
Test Case: 957 | Input/Output: [[83.6940207045597 40] 123.6940207045597]
Test Case: 958 | Input/Output: [[70.09619569878024 -75] -4.903804301219765]
Test Case: 959 | Input/Output: [[72.65015387330592 85] 157.65015387330592]
Test Case: 960 | Input/Output: [[10.091357580312305 89] 99.0913575803123]
Test Case: 961 | Input/Output: [[16.54820393770042 39] 55.54820393770042]
Test Case: 962 | Input/Output: [[18.52560144138036 12] 30.52560144138036]
Test Case: 963 | Input/Output: [[-3.3052921106584705 -66] -69.30529211065847]
Test Case: 964 | Input/Output: [[-46.55390486732907 -27] -73.55390486732907]
Test Case: 965 | Input/Output: [[-57.26101664096572 87] 29.73898335903428]
Test Case: 966 | Input/Output: [[-22.34859871909684 -6] -28.34859871909684]
Test Case: 967 | Input/Output: [[-43.94803831599376 39] -4.948038315993763]
Test Case: 968 | Input/Output: [[-84.85162589066266 27] -57.85162589066266]
Test Case: 969 | Input/Output: [[-26.878352596675768 49] 22.121647403324232]
Test Case: 970 | Input/Output: [[81.14260487547364 -41] 40.14260487547364]
Test Case: 971 | Input/Output: [[84.88230197989878 -94] -9.117698020101216]
Test Case: 972 | Input/Output: [[-65.8695058727773 44] -21.869505872777296]
Test Case: 973 | Input/Output: [[-40.53769089156019 60] 19.46230910843981]
Test Case: 974 | Input/Output: [[-68.88154809312914 -71] -139.88154809312914]
Test Case: 975 | Input/Output: [[77.83352229202887 0] 77.83352229202887]
Test Case: 976 | Input/Output: [[-63.95546539826626 77] 13.044534601733737]
Test Case: 977 | Input/Output: [[23.415590941579595 51] 74.4155909415796]
Test Case: 978 | Input/Output: [[-10.653649767853366 -55] -65.65364976785337]
Test Case: 979 | Input/Output: [[-88.82672354246384 7] -81.82672354246384]
Test Case: 980 | Input/Output: [[-92.99194463514364 -1] -93.99194463514364]
Test Case: 981 | Input/Output: [[-27.563893956708796 -83] -110.5638939567088]
Test Case: 982 | Input/Output: [[96.00554015812838 5] 101.00554015812838]
Test Case: 983 | Input/Output: [[4.6011257646758565 -90] -85.39887423532414]
Test Case: 984 | Input/Output: [[-12.284742458884352 11] -1.2847424588843523]
Test Case: 985 | Input/Output: [[73.78230998142809 -24] 49.782309981428085]
Test Case: 986 | Input/Output: [[59.01279923330384 -93] -33.98720076669616]
Test Case: 987 | Input/Output: [[-65.60915560442703 -7] -72.60915560442703]
Test Case: 988 | Input/Output: [[84.96370793221169 44] 128.9637079322117]
Test Case: 989 | Input/Output: [[-71.3971641643044 19] -52.3971641643044]
Test Case: 990 | Input/Output: [[-36.01918947950276 68] 31.980810520497243]
Test Case: 991 | Input/Output: [[99.08340542146885 -64] 35.08340542146885]
Test Case: 992 | Input/Output: [[98.94852049311464 68] 166.94852049311464]
Test Case: 993 | Input/Output: [[-0.3378308076954113 -32] -32.33783080769541]
Test Case: 994 | Input/Output: [[-31.912651550979135 -35] -66.91265155097913]
Test Case: 995 | Input/Output: [[-99.52309748763956 84] -15.52309748763956]
Test Case: 996 | Input/Output: [[-17.26949744944517 63] 45.73050255055483]
Test Case: 997 | Input/Output: [[60.69965144157899 -1] 59.69965144157899]
Test Case: 998 | Input/Output: [[-30.124618286870785 -94] -124.12461828687078]
Test Case: 999 | Input/Output: [[-63.72276072938388 -51] -114.72276072938388]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 24 -68 23 86 48 36 -121 -121 -113 112 110 87 -11 106 87 -4
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 55098.0
Test mean error for best: 27.54900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: 31.7963915837 
Correct output: -185.2914836352 | Program output: -99.2914836352
Correct output: 14.6061985977  | Program output: 38.6061985977 
Correct output: 31.4151982204  | Program output: 84.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: 64.8268053316 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 81.0722899136 
Correct output: -84.3925535393 | Program output: -9.3925535393 
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -88.7651499891
Correct output: -48.7209464994 | Program output: 51.2790535006 
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -2.3703567122 
Correct output: -24.1207371169 | Program output: 5.8792628831  
Correct output: -135.4219119341 | Program output: -42.4219119341
Correct output: -21.9981612097 | Program output: 24.0018387903 
Correct output: 80.3206826008  | Program output: 90.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -47.6662183691
Correct output: -100.9942315294 | Program output: -36.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -12.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_pop} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_sin} {:instruction in1} {:instruction print_float} {:instruction float_rot} {:instruction float_cos} {:instruction float_div} {:instruction float_shove} {:instruction 45.54773205714497})
Best program: (float_sin float_yankdup float_yank float_pop float_dup_items float_frominteger in2 integer_dup_times integer_sub float_dup_times integer_mult integer_dec integer_mod float_mod integer_dup_times float_sin in1 print_float float_rot float_cos float_div float_shove 45.54773205714497)
Errors: [53.0 3 99.0 12 86.0 3 24.0 2 53.0 2 70.0 2 65.0 12 68.0 3 93.0 11 75.0 2 53.0 2 18.0 3 100.0 12 2.0 1 22.0 1 30.0 12 93.0 3 46.0 11 10.0 1 62.0 11 55.0 3 75.0 3 64.0 3 7.0 2 9.0 2]
Total: 1454.0
Mean: 29.08
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 18396.1313657
Median total errors in population: 25349.0
Error averages by case: (730.6706733000016 13.419 724.4062785000004 13.744 755.5401826000026 14.176 708.4354504000008 12.532 716.1270740000014 12.482 738.5064592999986 13.411 712.4015656999993 12.883 725.5590154000006 13.493 716.6460007 13.67 729.1745290000018 13.381 713.8603747999997 13.421 732.2359616999987 14.111 721.8962603999992 13.787 703.910713999998 13.347 712.2390910000018 13.136 706.2089217999996 13.706 743.602161299998 14.187 711.3837201000001 13.684 720.2386042000013 12.431 716.8473371000007 12.195 720.9646524000025 13.523 739.400193499998 14.297 733.3877990999982 14.143 715.0503568999978 13.377 711.6969885000013 13.205)
Error minima by case: (3.8362 3 0.2036 8 13.2915 3 1.6062 2 0.3602 2 19.9998 2 0.0922 7 12.4566 3 0.0723 8 1.6074 2 1.9343 2 2.7651 3 0.2791 8 0.1635 1 0.2712 1 0.5209 9 37.4219 3 0.0018 9 0.5835 1 0.0599 7 0.7499 3 24.6662 3 2.9942 3 1.1915 2 0.6093 2)
Average genome size in population (length): 48.947
Average program size in population (points): 49.947
Average percent parens in population: 0.043
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.272
Error (vector) diversity:			 0.289
Behavioral diversity:				 0.312
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1226965
--- Timings ---
Current time: 1529615254672 milliseconds
Total Time:           3.4 seconds
Initialization:       0.1 seconds,  3.4%
Reproduction:         0.6 seconds, 16.9%
Fitness Testing:      2.7 seconds, 79.7%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 55098.0
Test mean error for best: 27.54900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: 31.7963915837 
Correct output: -185.2914836352 | Program output: -99.2914836352
Correct output: 14.6061985977  | Program output: 38.6061985977 
Correct output: 31.4151982204  | Program output: 84.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: 64.8268053316 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 81.0722899136 
Correct output: -84.3925535393 | Program output: -9.3925535393 
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -88.7651499891
Correct output: -48.7209464994 | Program output: 51.2790535006 
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -2.3703567122 
Correct output: -24.1207371169 | Program output: 5.8792628831  
Correct output: -135.4219119341 | Program output: -42.4219119341
Correct output: -21.9981612097 | Program output: 24.0018387903 
Correct output: 80.3206826008  | Program output: 90.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -47.6662183691
Correct output: -100.9942315294 | Program output: -36.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -12.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_pop} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_mult} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_sin} {:instruction in1} {:instruction print_float} {:instruction float_rot} {:instruction float_cos} {:instruction float_div} {:instruction float_shove} {:instruction 45.54773205714497})
Best program: (float_sin float_yankdup float_yank float_pop float_dup_items float_frominteger in2 integer_dup_times integer_sub float_dup_times integer_mult integer_dec integer_mod float_mod integer_dup_times float_sin in1 print_float float_rot float_cos float_div float_shove 45.54773205714497)
Errors: [53.0 3 99.0 12 86.0 3 24.0 2 53.0 2 70.0 2 65.0 12 68.0 3 93.0 11 75.0 2 53.0 2 18.0 3 100.0 12 2.0 1 22.0 1 30.0 12 93.0 3 46.0 11 10.0 1 62.0 11 55.0 3 75.0 3 64.0 3 7.0 2 9.0 2]
Total: 1454.0
Mean: 29.08
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 6510.614677699996
Median total errors in population: 2048.7401
Error averages by case: (273.6753622999978 11.352 253.09086680000033 12.775 320.84406889999826 11.897 217.60517120000102 10.715 240.81998449999793 10.519 291.48201629999824 11.189 228.55419020000002 11.935 260.34839400000186 11.463 239.6683480999997 12.389 258.9717018999989 11.311 232.7207233999979 11.323 269.158010599998 11.757 249.0399612999993 12.672 202.50855360000133 11.201 219.8444223000023 10.67 213.46030579999984 12.574 290.22466609999776 11.844 221.89543399999994 12.442 251.1714637000019 10.407 234.7116857000005 11.421 253.5167694999985 11.593 282.23639500000195 12.181 267.258990599997 11.892 230.90326369999764 11.241 217.17792819999838 10.963)
Error minima by case: (20.5284 3 0.2036 8 13.2915 3 1.6062 2 0.3602 2 10.0002 2 0.0922 8 2.868 3 0.0723 8 1.6074 2 1.9343 2 3.2349 3 0.2791 8 0.1635 1 0.2712 1 0.5209 9 25.4219 3 0.0018 9 0.5835 1 0.0599 7 2.5308 3 12.6662 3 7.9942 3 3.4394 2 0.6093 2)
Average genome size in population (length): 54.316
Average program size in population (points): 55.316
Average percent parens in population: 0.028
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.5
Median age in population: 1.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.748
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.748
Total error diversity:				 0.272
Error (vector) diversity:			 0.28
Behavioral diversity:				 0.306
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2587552
--- Timings ---
Current time: 1529615259864 milliseconds
Total Time:           8.8 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.9 seconds, 44.1%
Fitness Testing:      4.2 seconds, 47.8%
Report:               0.6 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 55051.0
Test mean error for best: 27.52550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: 30.7963915837 
Correct output: -185.2914836352 | Program output: -100.2914836352
Correct output: 14.6061985977  | Program output: 37.6061985977 
Correct output: 31.4151982204  | Program output: 83.4151982204 
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: 63.8268053316 
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 80.0722899136 
Correct output: -84.3925535393 | Program output: -10.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -89.7651499891
Correct output: -48.7209464994 | Program output: 50.2790535006 
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -3.3703567122 
Correct output: -24.1207371169 | Program output: 4.8792628831  
Correct output: -135.4219119341 | Program output: -43.4219119341
Correct output: -21.9981612097 | Program output: 23.0018387903 
Correct output: 80.3206826008  | Program output: 89.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -48.6662183691
Correct output: -100.9942315294 | Program output: -37.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -13.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [54.0 3 98.0 12 85.0 2 23.0 2 52.0 2 71.0 3 64.0 12 69.0 3 92.0 12 74.0 2 54.0 2 17.0 3 99.0 12 3.0 2 21.0 2 29.0 12 92.0 2 45.0 11 9.0 1 63.0 11 56.0 3 74.0 3 63.0 3 8.0 2 8.0 2]
Total: 1447.0
Mean: 28.94
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 4517.5557597000015
Median total errors in population: 1495.0
Error averages by case: (182.0910498999994 7.737 192.75387989999984 12.826 212.2235190999996 8.057 150.28786859999965 7.398 179.92467259999944 7.128 196.21157089999937 7.237 179.08974010000037 12.339 179.94296560000078 7.927 199.49607619999995 11.957 175.1716098000001 7.378 173.3294681999989 7.559 166.47872599999988 8.046 197.32798310000115 12.592 130.48665690000058 7.028 139.44016820000013 6.492 140.5184609000001 12.506 197.6529920999988 8.005 158.3514386999996 12.036 160.96319129999998 6.68 162.23344889999908 11.487 172.34562279999935 8.188 187.98878410000137 8.516 177.8411985999991 8.317 147.91185969999972 7.551 135.2428075000003 7.263)
Error minima by case: (26.4716 3 0.7964 8 13.2915 2 4.3456 2 12.4634 2 19.9998 2 0.0922 8 17.8715 3 0.0723 8 8.3926 1 1.9343 2 12.3468 3 0.2791 8 0.1635 1 0.2712 1 0.5209 10 41.0036 2 0.0018 10 9.0 1 0.0599 9 8.2501 3 27.3338 3 6.5759 3 5.8373 2 0.6093 1)
Average genome size in population (length): 50.439
Average program size in population (points): 51.439
Average percent parens in population: 0.032
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.052
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.119
Error (vector) diversity:			 0.123
Behavioral diversity:				 0.138
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3850591
--- Timings ---
Current time: 1529615263236 milliseconds
Total Time:          12.1 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.3 seconds, 43.7%
Fitness Testing:      5.8 seconds, 47.7%
Report:               0.9 seconds,  7.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 55051.0
Test mean error for best: 27.52550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: 30.7963915837 
Correct output: -185.2914836352 | Program output: -100.2914836352
Correct output: 14.6061985977  | Program output: 37.6061985977 
Correct output: 31.4151982204  | Program output: 83.4151982204 
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: 63.8268053316 
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 80.0722899136 
Correct output: -84.3925535393 | Program output: -10.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -89.7651499891
Correct output: -48.7209464994 | Program output: 50.2790535006 
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -3.3703567122 
Correct output: -24.1207371169 | Program output: 4.8792628831  
Correct output: -135.4219119341 | Program output: -43.4219119341
Correct output: -21.9981612097 | Program output: 23.0018387903 
Correct output: 80.3206826008  | Program output: 89.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -48.6662183691
Correct output: -100.9942315294 | Program output: -37.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -13.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [54.0 3 98.0 12 85.0 2 23.0 2 52.0 2 71.0 3 64.0 12 69.0 3 92.0 12 74.0 2 54.0 2 17.0 3 99.0 12 3.0 2 21.0 2 29.0 12 92.0 2 45.0 11 9.0 1 63.0 11 56.0 3 74.0 3 63.0 3 8.0 2 8.0 2]
Total: 1447.0
Mean: 28.94
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3776.4799849000005
Median total errors in population: 1454.0
Error averages by case: (143.61951339999996 4.193 183.24248850000006 12.346 177.50836669999998 4.355 115.97115239999998 3.308 143.1279326 3.306 159.00116079999998 3.312 153.61053559999996 12.337 155.80357379999998 4.201 177.74741660000004 11.408 167.30066490000002 3.386 147.83247609999998 3.393 116.426235 4.379 184.10373409999997 12.327 100.54755020000002 2.505 119.8740799 2.483 119.2269167 12.36 183.1695292 4.369 135.60451989999999 11.41 105.08843789999997 2.409 155.6440177 11.298 145.0589499 4.209 167.79723819999998 4.396 156.9214011 4.389 106.00341510000001 3.39 107.40367860000002 3.376)
Error minima by case: (20.5284 2 5.7964 11 85.0 2 13.3275 2 3.5848 2 10.0002 1 0.1732 9 17.8715 2 11.2301 9 8.3926 1 17.9858 2 17.0 3 24.2791 11 1.0 1 1.3704 1 4.8793 10 41.4219 2 19.8734 10 9.0 1 1.0599 10 8.2541 2 46.6662 3 27.9942 3 6.0 2 8.0 1)
Average genome size in population (length): 37.265
Average program size in population (points): 38.265
Average percent parens in population: 0.057
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.566
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 160
Genome diversity (% unique Plush genomes):	 0.515
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 160
Syntactic diversity (% unique Push programs):	 0.515
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4782541
--- Timings ---
Current time: 1529615266850 milliseconds
Total Time:          15.8 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.1 seconds, 44.7%
Fitness Testing:      7.3 seconds, 46.4%
Report:               1.3 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 55051.0
Test mean error for best: 27.52550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: 30.7963915837 
Correct output: -185.2914836352 | Program output: -100.2914836352
Correct output: 14.6061985977  | Program output: 37.6061985977 
Correct output: 31.4151982204  | Program output: 83.4151982204 
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: 63.8268053316 
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 80.0722899136 
Correct output: -84.3925535393 | Program output: -10.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -89.7651499891
Correct output: -48.7209464994 | Program output: 50.2790535006 
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -3.3703567122 
Correct output: -24.1207371169 | Program output: 4.8792628831  
Correct output: -135.4219119341 | Program output: -43.4219119341
Correct output: -21.9981612097 | Program output: 23.0018387903 
Correct output: 80.3206826008  | Program output: 89.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -48.6662183691
Correct output: -100.9942315294 | Program output: -37.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -13.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction float_cos} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction tag_integer_310} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add float_cos integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap tag_integer_310 float_frominteger)
Errors: [54.0 3 98.0 12 85.0 2 23.0 2 52.0 2 71.0 3 64.0 12 69.0 3 92.0 12 74.0 2 54.0 2 17.0 3 99.0 12 3.0 2 21.0 2 29.0 12 92.0 2 45.0 11 9.0 1 63.0 11 56.0 3 74.0 3 63.0 3 8.0 2 8.0 2]
Total: 1447.0
Mean: 28.94
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3708.7679502
Median total errors in population: 1454.0
Error averages by case: (139.88563159999998 3.99 180.6135607 12.297 175.9187741 4.043 112.93670689999999 3.039 139.31791 3.038 155.3891265 3.139 149.9246597 12.226 153.2169749 4.006 175.22428759999997 11.43 165.4852758 3.109 145.7286598 3.112 114.6557971 4.097 181.5198418 12.327 99.9285021 2.249 117.7579583 2.216 114.5345139 12.29 181.8786982 4.046 132.6680532 11.392 100.79352039999999 2.119 153.90484590000003 11.23 141.43796129999998 4.02 165.70892260000002 4.108 155.7469933 4.107 104.6284843 3.112 106.11929020000002 3.101)
Error minima by case: (52.0 3 31.7964 8 85.0 2 13.9902 2 32.043 2 69.0 2 0.2384 8 45.4566 3 3.4699 9 9.3926 1 10.4765 2 17.0 3 17.7209 10 1.0 1 2.3704 1 5.8793 11 42.4219 2 9.0018 9 9.0 1 2.0599 10 46.7499 3 47.6662 3 36.9942 3 6.0 2 8.0 1)
Average genome size in population (length): 30.934
Average program size in population (points): 31.934
Average percent parens in population: 0.068
Minimum age in population: 4.0
Maximum age in population: 8.0
Average age in population: 6.1185
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 184
Genome diversity (% unique Plush genomes):	 0.492
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 184
Syntactic diversity (% unique Push programs):	 0.492
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5556066
--- Timings ---
Current time: 1529615270388 milliseconds
Total Time:          19.3 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.7 seconds, 45.2%
Fitness Testing:      8.8 seconds, 45.8%
Report:               1.6 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 55051.0
Test mean error for best: 27.52550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: 30.7963915837 
Correct output: -185.2914836352 | Program output: -100.2914836352
Correct output: 14.6061985977  | Program output: 37.6061985977 
Correct output: 31.4151982204  | Program output: 83.4151982204 
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: 63.8268053316 
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 80.0722899136 
Correct output: -84.3925535393 | Program output: -10.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -89.7651499891
Correct output: -48.7209464994 | Program output: 50.2790535006 
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -3.3703567122 
Correct output: -24.1207371169 | Program output: 4.8792628831  
Correct output: -135.4219119341 | Program output: -43.4219119341
Correct output: -21.9981612097 | Program output: 23.0018387903 
Correct output: 80.3206826008  | Program output: 89.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -48.6662183691
Correct output: -100.9942315294 | Program output: -37.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -13.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_swap})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_swap)
Errors: [54.0 3 98.0 12 85.0 2 23.0 2 52.0 2 71.0 3 64.0 12 69.0 3 92.0 12 74.0 2 54.0 2 17.0 3 99.0 12 3.0 2 21.0 2 29.0 12 92.0 2 45.0 11 9.0 1 63.0 11 56.0 3 74.0 3 63.0 3 8.0 2 8.0 2]
Total: 1447.0
Mean: 28.94
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3738.7302605
Median total errors in population: 1454.0
Error averages by case: (141.97501990000004 4.105 182.2883721 12.342 176.5548334 3.987 114.64384419999998 3.153 140.7960949 3.151 157.48940340000001 3.442 151.31154299999994 12.252 155.1089259 4.135 176.49701430000002 11.65 165.5572306 3.236 145.91921959999996 3.249 115.2827948 4.229 183.03791629999998 12.358 100.4162955 2.584 117.78374700000002 2.52 117.20367519999998 12.314 182.25161769999997 3.99 134.3962212 11.433 102.61648509999998 2.236 153.9173864 11.253 143.3865167 4.149 166.01616510000005 4.225 155.9927909 4.228 105.3619895 3.252 106.22015780000001 3.232)
Error minima by case: (34.4716 3 31.7964 11 85.0 2 13.3275 2 30.4152 2 61.9998 2 0.1732 9 15.4566 3 11.2301 9 8.3926 2 10.0752 2 17.0 3 19.7115 10 2.0 1 1.3704 1 4.8887 10 41.4219 2 7.0113 10 9.0 1 1.0599 10 3.7499 3 46.6662 3 35.9942 3 7.0 2 7.1942 2)
Average genome size in population (length): 29.359
Average program size in population (points): 30.359
Average percent parens in population: 0.060
Minimum age in population: 5.0
Maximum age in population: 9.375
Average age in population: 7.632625
Median age in population: 7.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 147
Genome diversity (% unique Plush genomes):	 0.528
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 147
Syntactic diversity (% unique Push programs):	 0.528
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6290141
--- Timings ---
Current time: 1529615273521 milliseconds
Total Time:          22.5 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.1 seconds, 44.9%
Fitness Testing:     10.3 seconds, 45.6%
Report:               2.0 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 55043.0
Test mean error for best: 27.52150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: 29.7963915837 
Correct output: -185.2914836352 | Program output: -101.2914836352
Correct output: 14.6061985977  | Program output: 36.6061985977 
Correct output: 31.4151982204  | Program output: 82.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 62.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 79.0722899136 
Correct output: -84.3925535393 | Program output: -11.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -90.7651499891
Correct output: -48.7209464994 | Program output: 49.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -4.3703567122 
Correct output: -24.1207371169 | Program output: 3.8792628831  
Correct output: -135.4219119341 | Program output: -44.4219119341
Correct output: -21.9981612097 | Program output: 22.0018387903 
Correct output: 80.3206826008  | Program output: 88.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -49.6662183691
Correct output: -100.9942315294 | Program output: -38.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -14.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction tag_float_816} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max tag_float_816 float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [55.0 3 97.0 12 84.0 2 22.0 2 51.0 2 72.0 3 63.0 12 70.0 2 91.0 12 73.0 2 55.0 2 16.0 2 98.0 11 4.0 2 20.0 1 28.0 12 91.0 3 44.0 11 8.0 1 64.0 11 57.0 3 73.0 3 62.0 3 9.0 2 7.0 2]
Total: 1435.0
Mean: 28.7
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2925.8129786
Median total errors in population: 1447.0
Error averages by case: (106.53884840000002 3.689 148.52614999999997 12.185 148.4756474 3.033 78.1434283 2.725 105.3898163 2.716 122.6960387 3.495 116.43516509999999 12.139 120.27497570000001 3.697 142.6889381 11.983 137.34533350000004 2.79 117.17780159999998 2.783 85.1307546 3.769 149.3878196 12.19 69.9933233 2.595 87.98539389999999 2.566 82.97905100000001 12.171 154.41663649999995 3.029 98.73682570000001 11.241 65.48550689999999 1.783 125.3148769 11.138 108.03252259999998 3.702 137.72821260000003 3.778 127.39311080000002 3.773 75.0112718 2.779 76.00152930000002 2.775)
Error minima by case: (34.4716 3 31.7964 11 84.0 2 13.6062 2 29.593 2 61.9998 2 0.1732 10 15.4566 2 11.7479 10 9.3926 2 16.9858 2 16.0 2 48.2498 10 2.0 1 2.3704 1 5.8793 9 42.4219 2 21.424 9 5.9218 1 1.0681 10 3.7499 3 47.6662 3 36.9942 3 7.0 2 7.0 2)
Average genome size in population (length): 28.576
Average program size in population (points): 29.576
Average percent parens in population: 0.042
Minimum age in population: 7.0
Maximum age in population: 11.0
Average age in population: 9.2230625
Median age in population: 9.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 126
Genome diversity (% unique Plush genomes):	 0.449
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 126
Syntactic diversity (% unique Push programs):	 0.449
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7004541
--- Timings ---
Current time: 1529615276830 milliseconds
Total Time:          25.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.7 seconds, 45.2%
Fitness Testing:     11.7 seconds, 45.2%
Report:               2.4 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 55043.0
Test mean error for best: 27.52150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: 29.7963915837 
Correct output: -185.2914836352 | Program output: -101.2914836352
Correct output: 14.6061985977  | Program output: 36.6061985977 
Correct output: 31.4151982204  | Program output: 82.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 62.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 79.0722899136 
Correct output: -84.3925535393 | Program output: -11.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -90.7651499891
Correct output: -48.7209464994 | Program output: 49.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -4.3703567122 
Correct output: -24.1207371169 | Program output: 3.8792628831  
Correct output: -135.4219119341 | Program output: -44.4219119341
Correct output: -21.9981612097 | Program output: 22.0018387903 
Correct output: 80.3206826008  | Program output: 88.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -49.6662183691
Correct output: -100.9942315294 | Program output: -38.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -14.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_add integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [55.0 3 97.0 12 84.0 2 22.0 2 51.0 2 72.0 3 63.0 12 70.0 2 91.0 12 73.0 2 55.0 2 16.0 2 98.0 11 4.0 2 20.0 1 28.0 12 91.0 3 44.0 11 8.0 1 64.0 11 57.0 3 73.0 3 62.0 3 9.0 2 7.0 2]
Total: 1435.0
Mean: 28.7
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3001.9689740999993
Median total errors in population: 1447.0
Error averages by case: (104.73935390000001 3.584 145.6321843 12.178 157.11324829999998 2.759 74.86230280000001 2.64 102.24112380000001 2.624 120.87654340000003 3.581 113.30646560000001 12.159 118.67436170000002 3.576 139.68465529999997 12.162 146.2505185 2.714 127.53088189999997 2.703 94.33183810000001 3.662 146.44965949999994 12.167 80.9106699 2.695 97.3833035 2.642 77.3391002 12.162 163.11216719999996 2.771 95.5545148 11.228 62.163086899999996 1.684 136.12257250000008 11.148 106.3994999 3.603 146.55724610000004 3.689 136.3308553 3.686 85.72655750000001 2.688 85.48726320000002 2.684)
Error minima by case: (46.0 3 15.1485 11 84.0 2 13.6062 2 30.4152 2 29.0 2 0.1732 9 31.0 2 11.8894 11 32.3375 2 17.9343 2 16.0 2 3.3341 9 2.0 1 20.0 1 24.1207 11 83.3668 2 21.4669 10 8.0 1 58.9401 8 44.0 3 70.6111 3 48.9391 3 5.1076 2 7.0 2)
Average genome size in population (length): 29.446
Average program size in population (points): 30.446
Average percent parens in population: 0.033
Minimum age in population: 8.25
Maximum age in population: 12.78125
Average age in population: 10.708078125
Median age in population: 10.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 108
Genome diversity (% unique Plush genomes):	 0.49
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 108
Syntactic diversity (% unique Push programs):	 0.49
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 7740691
--- Timings ---
Current time: 1529615280187 milliseconds
Total Time:          29.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.2 seconds, 45.4%
Fitness Testing:     13.1 seconds, 45.0%
Report:               2.7 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 55043.0
Test mean error for best: 27.52150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: 29.7963915837 
Correct output: -185.2914836352 | Program output: -101.2914836352
Correct output: 14.6061985977  | Program output: 36.6061985977 
Correct output: 31.4151982204  | Program output: 82.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 62.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 79.0722899136 
Correct output: -84.3925535393 | Program output: -11.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -90.7651499891
Correct output: -48.7209464994 | Program output: 49.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -4.3703567122 
Correct output: -24.1207371169 | Program output: 3.8792628831  
Correct output: -135.4219119341 | Program output: -44.4219119341
Correct output: -21.9981612097 | Program output: 22.0018387903 
Correct output: 80.3206826008  | Program output: 88.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -49.6662183691
Correct output: -100.9942315294 | Program output: -38.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -14.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_mod} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_mult} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction float_cos} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_max integer_mod integer_rot integer_swap integer_add float_yank integer_yank float_max float_mult integer_rot integer_swap integer_add float_cos integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [55.0 3 97.0 12 84.0 2 22.0 2 51.0 2 72.0 3 63.0 12 70.0 2 91.0 12 73.0 2 55.0 2 16.0 2 98.0 11 4.0 2 20.0 1 28.0 12 91.0 3 44.0 11 8.0 1 64.0 11 57.0 3 73.0 3 62.0 3 9.0 2 7.0 2]
Total: 1435.0
Mean: 28.7
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2932.8287132
Median total errors in population: 1447.0
Error averages by case: (103.84048639999999 3.598 144.91699139999997 12.142 152.5573939 2.758 74.00486299999999 2.639 101.3678965 2.637 119.9381518 3.583 112.4621527 12.116 117.6965773 3.471 138.8511062 12.126 141.6392404 2.699 122.95037269999999 2.693 89.43718759999999 3.556 145.7094421 12.025 76.07634150000001 2.677 92.45200860000001 2.524 75.750856 12.136 158.591232 2.878 94.7348707 11.197 61.2410116 1.692 131.47057300000003 11.115 105.46274759999999 3.606 141.94616500000004 3.687 131.66606300000004 3.683 80.98177210000001 2.681 80.4872101 2.677)
Error minima by case: (46.0 2 47.1593 10 84.0 2 13.6062 2 30.4152 2 29.0 1 0.1732 9 27.5297 2 8.1166 10 64.3482 2 1.11 2 16.0 2 28.6766 11 0.1635 1 4.326 1 4.0764 9 91.0 2 1.9538 10 5.6062 1 25.9868 9 15.823 2 73.0 3 62.0 3 5.8373 2 1.771 2)
Average genome size in population (length): 29.914
Average program size in population (points): 30.914
Average percent parens in population: 0.033
Minimum age in population: 9.25
Maximum age in population: 14.09375
Average age in population: 12.215453125
Median age in population: 12.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 84
Genome diversity (% unique Plush genomes):	 0.538
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.538
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 8488541
--- Timings ---
Current time: 1529615283349 milliseconds
Total Time:          32.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.6 seconds, 45.2%
Fitness Testing:     14.5 seconds, 45.0%
Report:               3.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54928.0
Test mean error for best: 27.46400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 75.4715741385 
Correct output: -67.2036084163 | Program output: 27.7963915837 
Correct output: -185.2914836352 | Program output: -103.2914836352
Correct output: 14.6061985977  | Program output: 34.6061985977 
Correct output: 31.4151982204  | Program output: 80.4151982204 
Correct output: 159.9998373306 | Program output: 85.9998373306 
Correct output: -0.1731946684  | Program output: 60.8268053316 
Correct output: 113.4565963553 | Program output: 41.4565963553 
Correct output: -11.9277100864 | Program output: 77.0722899136 
Correct output: -84.3925535393 | Program output: -13.3925535393
Correct output: -18.9342988463 | Program output: -75.9342988463
Correct output: -106.7651499891 | Program output: -92.7651499891
Correct output: -48.7209464994 | Program output: 47.2790535006 
Correct output: -17.8365333426 | Program output: -23.8365333426
Correct output: -24.3703567122 | Program output: -6.3703567122 
Correct output: -24.1207371169 | Program output: 1.8792628831  
Correct output: -135.4219119341 | Program output: -46.4219119341
Correct output: -21.9981612097 | Program output: 20.0018387903 
Correct output: 80.3206826008  | Program output: 86.3206826008 
Correct output: 59.940066734   | Program output: -6.059933266  
Correct output: 101.7498992299 | Program output: 42.7498992299 
Correct output: -122.6662183691 | Program output: -51.6662183691
Correct output: -100.9942315294 | Program output: -40.9942315294
Correct output: -57.1627018111 | Program output: -68.1627018111
Correct output: -21.8153206922 | Program output: -16.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [57.0 3 95.0 11 82.0 2 20.0 1 49.0 2 74.0 2 61.0 11 72.0 2 89.0 12 71.0 2 57.0 2 14.0 3 96.0 11 6.0 2 18.0 2 26.0 12 89.0 3 42.0 11 6.0 1 66.0 11 59.0 3 71.0 3 60.0 2 11.0 2 5.0 2]
Total: 1414.0
Mean: 28.28
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2887.795874
Median total errors in population: 1435.0
Error averages by case: (105.21547680000002 3.713 143.97129259999997 12.161 149.5130138 2.859 73.3474076 2.75 100.57782900000002 2.742 121.48897010000003 3.707 111.21758110000002 12.133 118.75429580000004 3.18 137.45386510000003 12.168 137.57065290000003 2.818 119.27985339999995 2.808 86.0174684 3.261 144.52201819999996 11.637 72.72792689999999 2.807 88.1963249 2.243 75.02885140000001 12.171 154.9518321 3.394 93.9097388 11.228 61.44493519999998 1.806 128.16241350000004 11.148 106.48758379999997 3.724 138.22568750000002 3.801 127.83922109999999 3.794 77.9536827 2.791 76.30395130000001 2.79)
Error minima by case: (45.0 2 14.7964 9 82.0 2 3.4254 1 20.2344 1 28.0 2 0.1681 9 30.0 1 0.8429 8 2.3926 2 6.1637 2 14.0 2 33.2791 9 0.1635 1 11.5998 1 11.3502 9 53.4219 2 9.2276 10 1.1809 1 19.1997 9 22.6101 2 40.6662 3 18.9942 2 5.8373 1 5.0 2)
Average genome size in population (length): 31.3
Average program size in population (points): 32.3
Average percent parens in population: 0.032
Minimum age in population: 11.25
Maximum age in population: 15.7421875
Average age in population: 13.73403515625
Median age in population: 13.75390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 119
Genome diversity (% unique Plush genomes):	 0.561
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 119
Syntactic diversity (% unique Push programs):	 0.561
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 9271041
--- Timings ---
Current time: 1529615286639 milliseconds
Total Time:          35.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.1 seconds, 45.2%
Fitness Testing:     16.0 seconds, 44.9%
Report:               3.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54928.0
Test mean error for best: 27.46400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 75.4715741385 
Correct output: -67.2036084163 | Program output: 27.7963915837 
Correct output: -185.2914836352 | Program output: -103.2914836352
Correct output: 14.6061985977  | Program output: 34.6061985977 
Correct output: 31.4151982204  | Program output: 80.4151982204 
Correct output: 159.9998373306 | Program output: 85.9998373306 
Correct output: -0.1731946684  | Program output: 60.8268053316 
Correct output: 113.4565963553 | Program output: 41.4565963553 
Correct output: -11.9277100864 | Program output: 77.0722899136 
Correct output: -84.3925535393 | Program output: -13.3925535393
Correct output: -18.9342988463 | Program output: -75.9342988463
Correct output: -106.7651499891 | Program output: -92.7651499891
Correct output: -48.7209464994 | Program output: 47.2790535006 
Correct output: -17.8365333426 | Program output: -23.8365333426
Correct output: -24.3703567122 | Program output: -6.3703567122 
Correct output: -24.1207371169 | Program output: 1.8792628831  
Correct output: -135.4219119341 | Program output: -46.4219119341
Correct output: -21.9981612097 | Program output: 20.0018387903 
Correct output: 80.3206826008  | Program output: 86.3206826008 
Correct output: 59.940066734   | Program output: -6.059933266  
Correct output: 101.7498992299 | Program output: 42.7498992299 
Correct output: -122.6662183691 | Program output: -51.6662183691
Correct output: -100.9942315294 | Program output: -40.9942315294
Correct output: -57.1627018111 | Program output: -68.1627018111
Correct output: -21.8153206922 | Program output: -16.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [57.0 3 95.0 11 82.0 2 20.0 1 49.0 2 74.0 2 61.0 11 72.0 2 89.0 12 71.0 2 57.0 2 14.0 3 96.0 11 6.0 2 18.0 2 26.0 12 89.0 3 42.0 11 6.0 1 66.0 11 59.0 3 71.0 3 60.0 2 11.0 2 5.0 2]
Total: 1414.0
Mean: 28.28
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3137.2929902
Median total errors in population: 1435.0
Error averages by case: (116.82932129999999 3.799 154.70173469999997 12.194 157.05083359999998 2.969 85.0717643 2.848 112.09895270000001 2.816 132.78705689999998 3.79 122.6642289 12.153 130.138625 2.953 148.5762983 12.2 145.43213459999996 2.921 128.458349 2.906 94.3691634 3.029 155.38090320000003 11.283 82.10097920000001 2.906 96.61146820000002 2.011 86.43910559999999 12.191 162.5527104 3.821 105.35226820000003 11.243 73.2837236 1.908 136.92316499999998 11.159 118.08612689999998 3.819 146.05652450000002 3.898 135.75823259999999 3.88 87.26446290000001 2.878 84.83885719999999 2.891)
Error minima by case: (22.4716 2 8.0841 9 17.2915 2 2.4254 1 19.2344 1 15.9998 2 0.0846 9 25.1761 1 10.3556 8 9.1048 2 15.9858 2 14.0 2 9.6227 9 2.0 1 2.3704 1 5.8793 9 42.4219 2 10.1771 9 6.0 1 2.0599 8 12.2501 2 23.3338 3 23.0058 2 3.1808 1 5.0 2)
Average genome size in population (length): 32.913
Average program size in population (points): 33.913
Average percent parens in population: 0.030
Minimum age in population: 12.84375
Maximum age in population: 17.03515625
Average age in population: 15.27793359375
Median age in population: 15.2958984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 140
Genome diversity (% unique Plush genomes):	 0.497
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 140
Syntactic diversity (% unique Push programs):	 0.497
Total error diversity:				 0.031
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 10093866
--- Timings ---
Current time: 1529615290102 milliseconds
Total Time:          38.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.6 seconds, 45.2%
Fitness Testing:     17.5 seconds, 44.9%
Report:               3.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54877.0
Test mean error for best: 27.43850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 72.4715741385 
Correct output: -67.2036084163 | Program output: 24.7963915837 
Correct output: -185.2914836352 | Program output: -106.2914836352
Correct output: 14.6061985977  | Program output: 31.6061985977 
Correct output: 31.4151982204  | Program output: 77.4151982204 
Correct output: 159.9998373306 | Program output: 82.9998373306 
Correct output: -0.1731946684  | Program output: 57.8268053316 
Correct output: 113.4565963553 | Program output: 38.4565963553 
Correct output: -11.9277100864 | Program output: 74.0722899136 
Correct output: -84.3925535393 | Program output: -16.3925535393
Correct output: -18.9342988463 | Program output: -78.9342988463
Correct output: -106.7651499891 | Program output: -95.7651499891
Correct output: -48.7209464994 | Program output: 44.2790535006 
Correct output: -17.8365333426 | Program output: -26.8365333426
Correct output: -24.3703567122 | Program output: -9.3703567122 
Correct output: -24.1207371169 | Program output: -1.1207371169 
Correct output: -135.4219119341 | Program output: -49.4219119341
Correct output: -21.9981612097 | Program output: 17.0018387903 
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: -9.059933266  
Correct output: 101.7498992299 | Program output: 39.7498992299 
Correct output: -122.6662183691 | Program output: -54.6662183691
Correct output: -100.9942315294 | Program output: -43.9942315294
Correct output: -57.1627018111 | Program output: -71.1627018111
Correct output: -21.8153206922 | Program output: -19.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [60.0 2 92.0 12 79.0 2 17.0 2 46.0 2 77.0 3 58.0 12 75.0 3 86.0 12 68.0 2 60.0 1 11.0 3 93.0 11 9.0 2 15.0 2 23.0 2 86.0 3 39.0 12 3.0 1 69.0 10 62.0 3 68.0 3 57.0 3 14.0 2 2.0 2]
Total: 1381.0
Mean: 27.62
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2899.1899354999996
Median total errors in population: 1435.0
Error averages by case: (106.9930907 3.676 145.12420660000004 12.178 149.17143800000002 2.841 74.48670619999999 2.7 102.3459177 2.581 122.30750160000002 3.65 112.03425940000001 12.15 120.24264990000003 2.931 138.5471691 12.222 136.8145595 2.812 120.81022529999997 2.796 84.9492947 3.043 146.09381479999996 11.151 72.36342039999998 2.797 87.4585634 2.033 77.76941560000002 12.197 154.3193423 3.59 93.99924790000001 11.128 61.810443199999995 1.782 128.68170950000004 11.184 108.10587759999997 3.702 137.74166910000005 3.777 127.27663089999999 3.741 78.00418480000002 2.648 75.65059730000002 2.778)
Error minima by case: (44.0 2 31.7964 9 79.0 2 2.4254 1 19.2344 1 27.0 2 0.1732 8 29.0 1 2.0723 8 9.3926 1 4.9343 1 11.0 2 34.7209 9 1.1635 1 2.3704 1 5.8793 2 42.4219 2 7.9982 9 3.0 1 2.0599 8 42.0 2 47.6662 2 36.9942 2 6.8373 1 2.0 2)
Average genome size in population (length): 33.918
Average program size in population (points): 34.918
Average percent parens in population: 0.029
Minimum age in population: 14.47265625
Maximum age in population: 18.55859375
Average age in population: 16.7656650390625
Median age in population: 16.77880859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 90
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 90
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.039
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 10941816
--- Timings ---
Current time: 1529615293395 milliseconds
Total Time:          42.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.0 seconds, 45.0%
Fitness Testing:     19.0 seconds, 44.8%
Report:               4.2 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54877.0
Test mean error for best: 27.43850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 72.4715741385 
Correct output: -67.2036084163 | Program output: 24.7963915837 
Correct output: -185.2914836352 | Program output: -106.2914836352
Correct output: 14.6061985977  | Program output: 31.6061985977 
Correct output: 31.4151982204  | Program output: 77.4151982204 
Correct output: 159.9998373306 | Program output: 82.9998373306 
Correct output: -0.1731946684  | Program output: 57.8268053316 
Correct output: 113.4565963553 | Program output: 38.4565963553 
Correct output: -11.9277100864 | Program output: 74.0722899136 
Correct output: -84.3925535393 | Program output: -16.3925535393
Correct output: -18.9342988463 | Program output: -78.9342988463
Correct output: -106.7651499891 | Program output: -95.7651499891
Correct output: -48.7209464994 | Program output: 44.2790535006 
Correct output: -17.8365333426 | Program output: -26.8365333426
Correct output: -24.3703567122 | Program output: -9.3703567122 
Correct output: -24.1207371169 | Program output: -1.1207371169 
Correct output: -135.4219119341 | Program output: -49.4219119341
Correct output: -21.9981612097 | Program output: 17.0018387903 
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: -9.059933266  
Correct output: 101.7498992299 | Program output: 39.7498992299 
Correct output: -122.6662183691 | Program output: -54.6662183691
Correct output: -100.9942315294 | Program output: -43.9942315294
Correct output: -57.1627018111 | Program output: -71.1627018111
Correct output: -21.8153206922 | Program output: -19.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [60.0 2 92.0 12 79.0 2 17.0 2 46.0 2 77.0 3 58.0 12 75.0 3 86.0 12 68.0 2 60.0 1 11.0 3 93.0 11 9.0 2 15.0 2 23.0 2 86.0 3 39.0 12 3.0 1 69.0 10 62.0 3 68.0 3 57.0 3 14.0 2 2.0 2]
Total: 1381.0
Mean: 27.62
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3382.4725320999996
Median total errors in population: 1424.0
Error averages by case: (126.55068299999999 3.811 162.3180616 12.071 167.56698939999998 3.03 92.92305929999998 2.7 120.2448828 2.438 142.1848286 3.644 130.72132050000002 12.057 139.3862446 3.43 156.7615276 12.293 155.6373759 2.99 141.417134 2.968 105.64643380000001 3.722 163.22939889999998 10.894 94.9695359 2.986 107.35423929999999 2.702 94.32226809999999 12.16 172.71208279999996 3.449 113.06359870000001 10.902 81.36516649999999 1.964 149.14378030000003 11.237 127.6404393 3.844 156.45065930000004 3.943 146.25651089999997 3.749 100.3903497 2.5 95.78296130000001 2.949)
Error minima by case: (42.0 2 64.4904 9 79.0 1 4.4254 1 21.2344 1 25.0 2 0.1681 8 27.0 1 11.9277 9 55.3781 1 16.1295 1 11.0 2 46.7345 10 0.8365 1 15.0 1 16.1839 2 86.0 2 21.5928 9 3.0 1 49.7592 8 40.0 1 68.0 2 57.0 2 4.8373 1 2.0 2)
Average genome size in population (length): 37.505
Average program size in population (points): 38.505
Average percent parens in population: 0.026
Minimum age in population: 15.47265625
Maximum age in population: 20.06884765625
Average age in population: 18.20370751953125
Median age in population: 18.230712890625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 86
Genome diversity (% unique Plush genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 86
Syntactic diversity (% unique Push programs):	 0.569
Total error diversity:				 0.049
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 11879441
--- Timings ---
Current time: 1529615296803 milliseconds
Total Time:          45.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.4 seconds, 44.8%
Fitness Testing:     20.5 seconds, 44.9%
Report:               4.6 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 54964.0
Test mean error for best: 27.48200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 70.4715741385 
Correct output: -67.2036084163 | Program output: 22.7963915837 
Correct output: -185.2914836352 | Program output: -108.2914836352
Correct output: 14.6061985977  | Program output: 29.6061985977 
Correct output: 31.4151982204  | Program output: 75.4151982204 
Correct output: 159.9998373306 | Program output: 80.9998373306 
Correct output: -0.1731946684  | Program output: 55.8268053316 
Correct output: 113.4565963553 | Program output: 36.4565963553 
Correct output: -11.9277100864 | Program output: 72.0722899136 
Correct output: -84.3925535393 | Program output: -18.3925535393
Correct output: -18.9342988463 | Program output: -80.9342988463
Correct output: -106.7651499891 | Program output: -97.7651499891
Correct output: -48.7209464994 | Program output: 42.2790535006 
Correct output: -17.8365333426 | Program output: -28.8365333426
Correct output: -24.3703567122 | Program output: -11.3703567122
Correct output: -24.1207371169 | Program output: -3.1207371169 
Correct output: -135.4219119341 | Program output: -51.4219119341
Correct output: -21.9981612097 | Program output: 15.0018387903 
Correct output: 80.3206826008  | Program output: 81.3206826008 
Correct output: 59.940066734   | Program output: -11.059933266 
Correct output: 101.7498992299 | Program output: 37.7498992299 
Correct output: -122.6662183691 | Program output: -56.6662183691
Correct output: -100.9942315294 | Program output: -45.9942315294
Correct output: -57.1627018111 | Program output: -73.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_max} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_max float_sub integer_stackdepth integer_max float_add float_yank integer_yank integer_add integer_dup_times integer_flush integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_inc float_dec integer_inc float_dup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [62.0 3 90.0 12 77.0 2 15.0 2 44.0 2 79.0 3 56.0 12 77.0 3 84.0 12 66.0 2 62.0 2 9.0 3 91.0 11 11.0 2 13.0 2 21.0 2 84.0 3 37.0 12 1.0 1 71.0 12 64.0 3 66.0 3 55.0 3 16.0 2 0.0 0]
Total: 1365.0
Mean: 27.3
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3016.9211340999996
Median total errors in population: 1414.0
Error averages by case: (114.17569999999996 3.656 149.14180689999998 11.536 151.13407370000002 2.862 78.83507940000001 2.205 105.97998810000003 2.577 130.1477524 3.177 116.762761 11.558 127.73866639999999 3.157 142.87620230000002 12.166 139.86922859999999 2.774 126.35449059999998 2.793 88.0506298 3.796 149.82871799999998 11.051 79.7215464 2.835 90.7045631 2.784 83.86937660000001 11.388 157.02769229999998 3.617 99.34431800000002 11.187 66.6045391 1.831 135.0804646 11.089 115.65069229999999 3.648 140.32107770000002 3.746 130.0104843 3.254 84.7591582 2.644 78.7931243 2.808)
Error minima by case: (43.0 2 60.6036 9 77.0 1 12.6062 1 29.4152 1 26.0 2 0.1732 8 28.0 1 2.2788 9 66.0 1 12.2683 1 9.0 2 43.3258 10 2.0 1 13.0 1 16.6933 1 84.0 2 12.8734 9 1.0 1 57.9401 8 41.0 2 66.0 2 55.0 2 7.0 1 0.0 0)
Average genome size in population (length): 40.244
Average program size in population (points): 41.244
Average percent parens in population: 0.025
Minimum age in population: 17.6748046875
Maximum age in population: 21.6123046875
Average age in population: 19.70549072265625
Median age in population: 19.7623291015625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 106
Genome diversity (% unique Plush genomes):	 0.583
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 106
Syntactic diversity (% unique Push programs):	 0.583
Total error diversity:				 0.044
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 12885541
--- Timings ---
Current time: 1529615300481 milliseconds
Total Time:          49.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.0 seconds, 44.6%
Fitness Testing:     22.1 seconds, 44.9%
Report:               5.1 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 55282.0
Test mean error for best: 27.64100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 66.4715741385 
Correct output: -67.2036084163 | Program output: 18.7963915837 
Correct output: -185.2914836352 | Program output: -112.2914836352
Correct output: 14.6061985977  | Program output: 25.6061985977 
Correct output: 31.4151982204  | Program output: 71.4151982204 
Correct output: 159.9998373306 | Program output: 76.9998373306 
Correct output: -0.1731946684  | Program output: 51.8268053316 
Correct output: 113.4565963553 | Program output: 32.4565963553 
Correct output: -11.9277100864 | Program output: 68.0722899136 
Correct output: -84.3925535393 | Program output: -22.3925535393
Correct output: -18.9342988463 | Program output: -84.9342988463
Correct output: -106.7651499891 | Program output: -101.7651499891
Correct output: -48.7209464994 | Program output: 38.2790535006 
Correct output: -17.8365333426 | Program output: -32.8365333426
Correct output: -24.3703567122 | Program output: -15.3703567122
Correct output: -24.1207371169 | Program output: -7.1207371169 
Correct output: -135.4219119341 | Program output: -55.4219119341
Correct output: -21.9981612097 | Program output: 11.0018387903 
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -15.059933266 
Correct output: 101.7498992299 | Program output: 33.7498992299 
Correct output: -122.6662183691 | Program output: -60.6662183691
Correct output: -100.9942315294 | Program output: -49.9942315294
Correct output: -57.1627018111 | Program output: -77.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [66.0 3 86.0 12 73.0 2 11.0 2 40.0 1 83.0 3 52.0 12 81.0 3 80.0 12 62.0 2 66.0 2 5.0 1 87.0 11 15.0 2 9.0 2 17.0 2 80.0 2 33.0 11 3.0 2 75.0 12 68.0 3 62.0 3 51.0 3 20.0 1 4.0 1]
Total: 1339.0
Mean: 26.78
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3600.830342099999
Median total errors in population: 1408.0
Error averages by case: (135.55687350000005 3.656 166.99319069999999 11.766 176.190055 3.067 98.31945609999997 2.796 124.79542980000001 3.022 151.1696484 3.74 135.18650600000007 11.933 148.59438780000005 3.73 160.63509919999998 12.251 164.780372 2.913 153.79048609999995 2.935 114.94557570000002 4.082 167.58332309999994 11.324 108.84952050000003 3.113 117.0661464 3.076 111.7459856 8.339 181.50919249999998 4.075 118.36429090000003 11.928 86.80715939999999 2.125 162.37174290000004 11.04 136.81552399999998 3.649 165.43275700000007 3.876 155.3764781 3.857 113.9163841 3.108 105.5957573 3.038)
Error minima by case: (40.0 1 62.0178 9 73.0 1 2.4254 1 19.2344 1 23.0 2 0.1732 8 25.0 2 5.8894 9 62.0 1 12.1553 1 5.0 1 43.7209 10 0.8365 1 9.0 1 17.0 1 80.0 2 15.4669 10 0.0 0 47.7592 8 38.0 1 62.0 2 51.0 2 2.8373 1 0.0 0)
Average genome size in population (length): 44.824
Average program size in population (points): 45.824
Average percent parens in population: 0.023
Minimum age in population: 18.763671875
Maximum age in population: 23.1728515625
Average age in population: 21.254099609375
Median age in population: 21.281982421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.058
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 14006141
--- Timings ---
Current time: 1529615303816 milliseconds
Total Time:          52.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.4 seconds, 44.3%
Fitness Testing:     23.7 seconds, 44.9%
Report:               5.6 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 55407.0
Test mean error for best: 27.70350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 64.4715741385 
Correct output: -67.2036084163 | Program output: 16.7963915837 
Correct output: -185.2914836352 | Program output: -114.2914836352
Correct output: 14.6061985977  | Program output: 23.6061985977 
Correct output: 31.4151982204  | Program output: 69.4151982204 
Correct output: 159.9998373306 | Program output: 74.9998373306 
Correct output: -0.1731946684  | Program output: 49.8268053316 
Correct output: 113.4565963553 | Program output: 30.4565963553 
Correct output: -11.9277100864 | Program output: 66.0722899136 
Correct output: -84.3925535393 | Program output: -24.3925535393
Correct output: -18.9342988463 | Program output: -86.9342988463
Correct output: -106.7651499891 | Program output: -103.7651499891
Correct output: -48.7209464994 | Program output: 36.2790535006 
Correct output: -17.8365333426 | Program output: -34.8365333426
Correct output: -24.3703567122 | Program output: -17.3703567122
Correct output: -24.1207371169 | Program output: -9.1207371169 
Correct output: -135.4219119341 | Program output: -57.4219119341
Correct output: -21.9981612097 | Program output: 9.0018387903  
Correct output: 80.3206826008  | Program output: 75.3206826008 
Correct output: 59.940066734   | Program output: -17.059933266 
Correct output: 101.7498992299 | Program output: 31.7498992299 
Correct output: -122.6662183691 | Program output: -62.6662183691
Correct output: -100.9942315294 | Program output: -51.9942315294
Correct output: -57.1627018111 | Program output: -79.1627018111
Correct output: -21.8153206922 | Program output: -27.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_yank} {:instruction float_max} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_stackdepth integer_max float_add float_yank integer_yank float_max float_yank integer_rot integer_swap integer_add integer_dup_times integer_flush integer_flush integer_mod float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [68.0 3 84.0 11 71.0 2 9.0 2 38.0 2 85.0 3 50.0 12 83.0 3 78.0 12 60.0 1 68.0 2 3.0 1 85.0 12 17.0 2 7.0 2 15.0 2 78.0 3 31.0 12 5.0 2 77.0 12 70.0 2 60.0 2 49.0 3 22.0 2 6.0 1]
Total: 1330.0
Mean: 26.6
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3656.0607329000004
Median total errors in population: 1381.0
Error averages by case: (140.26121479999992 3.413 168.75705420000006 12.158 176.91879569999998 3.091 100.53595509999998 3.024 126.83304640000001 3.034 155.60132459999994 3.949 136.99376159999997 12.157 152.8328864 3.962 162.2232438 12.205 164.405531 3.105 157.08497579999997 2.68 115.73258490000002 3.963 169.34071309999996 11.333 111.98238610000001 3.037 116.57765509999997 3.09 122.58130479999998 3.787 182.06541219999997 4.073 119.90209570000002 12.164 89.08259459999995 2.141 164.77842320000005 10.95 141.2874895 3.846 165.96201080000006 4.078 155.8865280999999 4.089 117.6342194 3.1 105.59852600000002 2.772)
Error minima by case: (36.0 1 60.6036 9 71.0 1 1.1546 1 6.2021 1 19.0 1 0.1732 7 21.0 1 4.2301 9 60.0 1 12.2683 1 3.0 1 42.7345 9 2.0 1 7.0 1 15.0 1 78.0 2 12.8734 10 0.0 0 34.727 7 34.0 2 60.0 2 49.0 2 7.0 1 0.0 0)
Average genome size in population (length): 52.002
Average program size in population (points): 53.002
Average percent parens in population: 0.020
Minimum age in population: 20.460693359375
Maximum age in population: 24.7320556640625
Average age in population: 22.80425750732422
Median age in population: 22.85986328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.647
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.647
Total error diversity:				 0.076
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 15306191
--- Timings ---
Current time: 1529615307555 milliseconds
Total Time:          56.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.7 seconds, 44.0%
Fitness Testing:     25.5 seconds, 45.2%
Report:               6.0 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 55543.0
Test mean error for best: 27.77150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 63.4715741385 
Correct output: -67.2036084163 | Program output: 15.7963915837 
Correct output: -185.2914836352 | Program output: -115.2914836352
Correct output: 14.6061985977  | Program output: 22.6061985977 
Correct output: 31.4151982204  | Program output: 68.4151982204 
Correct output: 159.9998373306 | Program output: 73.9998373306 
Correct output: -0.1731946684  | Program output: 48.8268053316 
Correct output: 113.4565963553 | Program output: 29.4565963553 
Correct output: -11.9277100864 | Program output: 65.0722899136 
Correct output: -84.3925535393 | Program output: -25.3925535393
Correct output: -18.9342988463 | Program output: -87.9342988463
Correct output: -106.7651499891 | Program output: -104.7651499891
Correct output: -48.7209464994 | Program output: 35.2790535006 
Correct output: -17.8365333426 | Program output: -35.8365333426
Correct output: -24.3703567122 | Program output: -18.3703567122
Correct output: -24.1207371169 | Program output: -10.1207371169
Correct output: -135.4219119341 | Program output: -58.4219119341
Correct output: -21.9981612097 | Program output: 8.0018387903  
Correct output: 80.3206826008  | Program output: 74.3206826008 
Correct output: 59.940066734   | Program output: -18.059933266 
Correct output: 101.7498992299 | Program output: 30.7498992299 
Correct output: -122.6662183691 | Program output: -63.6662183691
Correct output: -100.9942315294 | Program output: -52.9942315294
Correct output: -57.1627018111 | Program output: -80.1627018111
Correct output: -21.8153206922 | Program output: -28.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [69.0 2 83.0 12 70.0 1 8.0 2 37.0 2 86.0 3 49.0 12 84.0 3 77.0 12 59.0 2 69.0 2 2.0 1 84.0 12 18.0 2 6.0 2 14.0 2 77.0 3 30.0 12 6.0 2 78.0 12 71.0 2 59.0 3 48.0 3 23.0 2 7.0 1]
Total: 1326.0
Mean: 26.52
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 4326.0515356999995
Median total errors in population: 1365.0
Error averages by case: (170.12813200000005 4.242 193.93999749999998 12.279 200.5184987 3.669 128.24259709999998 3.44 153.6485807 3.446 185.044206 4.249 163.38528280000003 12.205 182.19483810000006 4.332 187.70125870000004 12.209 188.14447539999998 3.588 183.9445342 3.434 141.17786780000003 4.155 194.66988849999998 11.562 140.55609439999998 3.43 141.67848809999998 3.493 146.39844929999998 3.475 205.33113919999997 4.469 146.70031690000005 12.249 118.30137469999998 2.607 191.48330760000007 11.79 171.0363405 4.417 189.71252250000003 4.539 179.9035075 4.511 145.98870749999998 3.549 132.25913 2.623)
Error minima by case: (38.0 1 58.2048 8 70.0 1 4.6062 1 2.4903 1 21.0 2 0.1732 7 23.0 2 3.2301 8 59.0 1 11.2683 1 2.0 1 39.8869 9 0.8365 1 6.0 1 14.0 1 77.0 2 11.8734 9 0.0 0 16.1423 8 23.9629 1 59.0 2 48.0 2 4.8373 1 0.0 0)
Average genome size in population (length): 56.817
Average program size in population (points): 57.817
Average percent parens in population: 0.018
Minimum age in population: 21.90557861328125
Maximum age in population: 26.08554077148438
Average age in population: 24.30733575439453
Median age in population: 24.37747192382812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.077
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 16726616
--- Timings ---
Current time: 1529615311295 milliseconds
Total Time:          60.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.2 seconds, 43.6%
Fitness Testing:     27.3 seconds, 45.4%
Report:               6.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 56638.0
Test mean error for best: 28.31900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 57.4715741385 
Correct output: -67.2036084163 | Program output: 9.7963915837  
Correct output: -185.2914836352 | Program output: -121.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 62.4151982204 
Correct output: 159.9998373306 | Program output: 67.9998373306 
Correct output: -0.1731946684  | Program output: 42.8268053316 
Correct output: 113.4565963553 | Program output: 23.4565963553 
Correct output: -11.9277100864 | Program output: 59.0722899136 
Correct output: -84.3925535393 | Program output: -31.3925535393
Correct output: -18.9342988463 | Program output: -93.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: 29.2790535006 
Correct output: -17.8365333426 | Program output: -41.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -64.4219119341
Correct output: -21.9981612097 | Program output: 2.0018387903  
Correct output: 80.3206826008  | Program output: 68.3206826008 
Correct output: 59.940066734   | Program output: -24.059933266 
Correct output: 101.7498992299 | Program output: 24.7498992299 
Correct output: -122.6662183691 | Program output: -69.6662183691
Correct output: -100.9942315294 | Program output: -58.9942315294
Correct output: -57.1627018111 | Program output: -86.1627018111
Correct output: -21.8153206922 | Program output: -34.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove integer_inc integer_yank float_dec float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_yank integer_shove integer_swap float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [75.0 3 77.0 12 64.0 2 2.0 1 31.0 2 92.0 3 43.0 12 90.0 2 71.0 12 53.0 2 75.0 2 4.0 2 78.0 12 24.0 2 0.0 0 8.0 2 71.0 3 24.0 11 12.0 2 84.0 12 77.0 3 53.0 3 42.0 3 29.0 2 13.0 2]
Total: 1304.0
Mean: 26.08
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3749.3682354999996
Median total errors in population: 1354.0
Error averages by case: (153.6020272 4.171 171.07374450000003 12.072 175.6580511 3.432 104.75442029999996 3.117 130.72389070000003 3.159 169.21863319999997 3.902 140.40686730000002 12.06 165.92118760000002 3.934 164.96848090000006 12.127 161.50948359999998 3.343 162.72516 3.355 114.74227230000001 3.334 171.91674049999995 11.762 117.88258920000003 3.359 114.0278661 3.209 119.8657538 3.215 180.05445439999997 4.116 119.79037190000001 12.03 97.31391129999997 2.796 169.78242410000007 12.057 154.2934579 4.186 164.11341290000001 4.304 153.98527099999998 4.171 124.02385060000002 3.236 108.15591309999999 2.411)
Error minima by case: (15.4716 1 21.0536 8 24.2915 1 2.0 1 22.4152 1 8.9998 1 0.1732 8 19.0933 1 0.0662 9 3.8647 1 3.9858 1 0.0 0 35.2498 9 1.1512 1 0.0 0 0.1207 1 39.5781 2 8.424 9 0.0 0 8.0599 7 7.3866 2 16.3338 2 9.3905 2 5.2661 1 0.0 0)
Average genome size in population (length): 61.146
Average program size in population (points): 62.146
Average percent parens in population: 0.016
Minimum age in population: 23.4515380859375
Maximum age in population: 27.553466796875
Average age in population: 25.80044506835938
Median age in population: 25.82752227783203
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.087
Error (vector) diversity:			 0.094
Behavioral diversity:				 0.095
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 18255266
--- Timings ---
Current time: 1529615314995 milliseconds
Total Time:          63.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.7 seconds, 43.4%
Fitness Testing:     29.1 seconds, 45.6%
Report:               6.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 56837.0
Test mean error for best: 28.41850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 56.4715741385 
Correct output: -67.2036084163 | Program output: 8.7963915837  
Correct output: -185.2914836352 | Program output: -122.2914836352
Correct output: 14.6061985977  | Program output: 15.6061985977 
Correct output: 31.4151982204  | Program output: 61.4151982204 
Correct output: 159.9998373306 | Program output: 66.9998373306 
Correct output: -0.1731946684  | Program output: 41.8268053316 
Correct output: 113.4565963553 | Program output: 22.4565963553 
Correct output: -11.9277100864 | Program output: 58.0722899136 
Correct output: -84.3925535393 | Program output: -32.3925535393
Correct output: -18.9342988463 | Program output: -94.9342988463
Correct output: -106.7651499891 | Program output: -111.7651499891
Correct output: -48.7209464994 | Program output: 28.2790535006 
Correct output: -17.8365333426 | Program output: -42.8365333426
Correct output: -24.3703567122 | Program output: -25.3703567122
Correct output: -24.1207371169 | Program output: -17.1207371169
Correct output: -135.4219119341 | Program output: -65.4219119341
Correct output: -21.9981612097 | Program output: 1.0018387903  
Correct output: 80.3206826008  | Program output: 67.3206826008 
Correct output: 59.940066734   | Program output: -25.059933266 
Correct output: 101.7498992299 | Program output: 23.7498992299 
Correct output: -122.6662183691 | Program output: -70.6662183691
Correct output: -100.9942315294 | Program output: -59.9942315294
Correct output: -57.1627018111 | Program output: -87.1627018111
Correct output: -21.8153206922 | Program output: -35.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction float_max} {:instruction float_yank} {:instruction float_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction print_integer} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub float_max float_yank float_yank integer_inc float_dec integer_inc float_dec float_dup_times integer_add in1 print_integer float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_shove integer_inc float_dec float_rot float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec float_dec integer_yank print_integer print_integer float_dec integer_inc integer_yank integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [76.0 3 76.0 12 63.0 2 1.0 1 30.0 1 93.0 3 42.0 12 91.0 3 70.0 12 52.0 2 76.0 2 5.0 2 77.0 11 25.0 2 1.0 1 7.0 2 70.0 2 23.0 11 13.0 2 85.0 12 78.0 3 52.0 3 41.0 3 30.0 1 14.0 2]
Total: 1301.0
Mean: 26.02
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3876.8287983
Median total errors in population: 1333.0
Error averages by case: (157.90061520000006 4.154 172.33884700000002 11.78 181.16098450000004 3.403 105.53571939999998 3.008 131.76037610000003 3.237 173.2435439 3.971 141.5315488 11.864 169.75675450000006 3.94 166.03489530000002 12.219 167.9970018 3.282 172.26742199999998 3.385 120.91140710000002 2.73 172.98415919999997 12.046 128.09562110000002 3.375 120.73978280000001 3.271 125.44102289999996 3.535 185.56036759999998 4.22 121.03688789999998 12.049 102.86704349999997 3.294 180.00487920000006 11.988 158.37897259999994 4.071 169.75660210000004 4.24 159.60041449999997 4.074 134.04680619999996 3.3 118.84312310000001 2.598)
Error minima by case: (5.4716 2 27.2607 8 34.2915 1 1.0 1 4.6763 1 1.0002 2 0.1732 7 18.0 2 0.7867 9 10.3926 1 1.1295 1 0.0 0 8.7781 9 0.2284 1 0.0 0 1.1839 1 29.5781 2 6.5928 9 0.0 0 3.0599 8 11.6911 2 6.3338 2 6.0058 2 4.8373 1 0.0 0)
Average genome size in population (length): 65.086
Average program size in population (points): 66.086
Average percent parens in population: 0.015
Minimum age in population: 24.73857116699219
Maximum age in population: 29.09671783447266
Average age in population: 27.20067372131348
Median age in population: 27.22588729858398
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.748
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.748
Total error diversity:				 0.096
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 19882416
--- Timings ---
Current time: 1529615319228 milliseconds
Total Time:          67.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.2 seconds, 43.1%
Fitness Testing:     31.1 seconds, 45.9%
Report:               7.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 57689.0
Test mean error for best: 28.84450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 52.4715741385 
Correct output: -67.2036084163 | Program output: 4.7963915837  
Correct output: -185.2914836352 | Program output: -126.2914836352
Correct output: 14.6061985977  | Program output: 11.6061985977 
Correct output: 31.4151982204  | Program output: 57.4151982204 
Correct output: 159.9998373306 | Program output: 62.9998373306 
Correct output: -0.1731946684  | Program output: 37.8268053316 
Correct output: 113.4565963553 | Program output: 18.4565963553 
Correct output: -11.9277100864 | Program output: 54.0722899136 
Correct output: -84.3925535393 | Program output: -36.3925535393
Correct output: -18.9342988463 | Program output: -98.9342988463
Correct output: -106.7651499891 | Program output: -115.7651499891
Correct output: -48.7209464994 | Program output: 24.2790535006 
Correct output: -17.8365333426 | Program output: -46.8365333426
Correct output: -24.3703567122 | Program output: -29.3703567122
Correct output: -24.1207371169 | Program output: -21.1207371169
Correct output: -135.4219119341 | Program output: -69.4219119341
Correct output: -21.9981612097 | Program output: -2.9981612097 
Correct output: 80.3206826008  | Program output: 63.3206826008 
Correct output: 59.940066734   | Program output: -29.059933266 
Correct output: 101.7498992299 | Program output: 19.7498992299 
Correct output: -122.6662183691 | Program output: -74.6662183691
Correct output: -100.9942315294 | Program output: -63.9942315294
Correct output: -57.1627018111 | Program output: -91.1627018111
Correct output: -21.8153206922 | Program output: -39.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_yank print_integer float_dec integer_shove integer_inc float_dup_times integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_shove integer_inc float_dec float_rot float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub float_dec integer_swap float_div float_frominteger)
Errors: [80.0 2 72.0 12 59.0 2 3.0 1 26.0 2 97.0 3 38.0 12 95.0 2 66.0 12 48.0 2 80.0 1 9.0 2 73.0 11 29.0 2 5.0 1 3.0 1 66.0 3 19.0 1 17.0 2 89.0 11 82.0 2 48.0 3 37.0 3 34.0 2 18.0 2]
Total: 1290.0
Mean: 25.8
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3720.358743
Median total errors in population: 1326.0
Error averages by case: (156.5839339 3.917 164.98442639999996 11.985 173.26361650000004 3.286 98.73504169999997 3.018 124.67012840000001 3.264 172.20006810000007 4.133 134.02525350000002 12.088 168.58791270000003 4.097 158.4397677 12.171 158.40772110000006 3.27 167.2167419 3.277 113.22085789999998 2.589 165.80048339999993 12.069 123.12137810000003 3.237 110.5919748 2.987 114.23153650000003 3.347 177.230378 4.265 112.87813050000004 12.051 100.41242859999998 3.23 174.86386750000003 11.93 157.05945689999996 3.913 161.23292280000007 4.219 151.07209150000003 4.278 129.48184930000002 3.361 113.30877530000002 2.756)
Error minima by case: (3.4716 1 13.6688 3 36.2915 1 0.0 0 11.4152 1 3.0 1 0.1732 8 5.0 1 0.1363 9 3.5201 1 0.1553 1 0.0 0 3.8322 8 0.5677 1 0.0 0 1.1839 1 27.5781 2 3.4669 1 0.0 0 0.9775 8 18.0 2 4.3338 2 4.0058 2 3.8373 1 0.0 0)
Average genome size in population (length): 68.754
Average program size in population (points): 69.754
Average percent parens in population: 0.014
Minimum age in population: 26.3594970703125
Maximum age in population: 30.69308090209961
Average age in population: 28.68922850036621
Median age in population: 28.71505928039551
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.11
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.119
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 21601266
--- Timings ---
Current time: 1529615323165 milliseconds
Total Time:          71.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.7 seconds, 42.7%
Fitness Testing:     33.1 seconds, 46.0%
Report:               8.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 57689.0
Test mean error for best: 28.84450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 52.4715741385 
Correct output: -67.2036084163 | Program output: 4.7963915837  
Correct output: -185.2914836352 | Program output: -126.2914836352
Correct output: 14.6061985977  | Program output: 11.6061985977 
Correct output: 31.4151982204  | Program output: 57.4151982204 
Correct output: 159.9998373306 | Program output: 62.9998373306 
Correct output: -0.1731946684  | Program output: 37.8268053316 
Correct output: 113.4565963553 | Program output: 18.4565963553 
Correct output: -11.9277100864 | Program output: 54.0722899136 
Correct output: -84.3925535393 | Program output: -36.3925535393
Correct output: -18.9342988463 | Program output: -98.9342988463
Correct output: -106.7651499891 | Program output: -115.7651499891
Correct output: -48.7209464994 | Program output: 24.2790535006 
Correct output: -17.8365333426 | Program output: -46.8365333426
Correct output: -24.3703567122 | Program output: -29.3703567122
Correct output: -24.1207371169 | Program output: -21.1207371169
Correct output: -135.4219119341 | Program output: -69.4219119341
Correct output: -21.9981612097 | Program output: -2.9981612097 
Correct output: 80.3206826008  | Program output: 63.3206826008 
Correct output: 59.940066734   | Program output: -29.059933266 
Correct output: 101.7498992299 | Program output: 19.7498992299 
Correct output: -122.6662183691 | Program output: -74.6662183691
Correct output: -100.9942315294 | Program output: -63.9942315294
Correct output: -57.1627018111 | Program output: -91.1627018111
Correct output: -21.8153206922 | Program output: -39.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction float_dec} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_yank print_integer float_dec integer_shove integer_inc float_dup_times integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_shove integer_inc float_dec float_rot float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub float_dec integer_swap float_div float_frominteger)
Errors: [80.0 2 72.0 12 59.0 2 3.0 1 26.0 2 97.0 3 38.0 12 95.0 2 66.0 12 48.0 2 80.0 1 9.0 2 73.0 11 29.0 2 5.0 1 3.0 1 66.0 3 19.0 1 17.0 2 89.0 11 82.0 2 48.0 3 37.0 3 34.0 2 18.0 2]
Total: 1290.0
Mean: 25.8
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3774.4221520000006
Median total errors in population: 1314.0
Error averages by case: (163.5515174 4.194 165.31223310000001 12.09 171.38571639999998 3.455 100.63313929999998 2.68 127.53533990000004 3.3 178.93367170000002 4.146 137.06114950000003 12.089 175.22676720000007 4.103 161.61083469999997 12.088 156.502511 3.376 172.39694699999995 3.324 114.77941070000004 2.777 168.65512209999994 12.066 127.69309360000004 3.258 108.82186029999998 2.494 112.71005489999996 3.383 175.8717443999999 4.152 107.4340337 11.566 108.41733129999997 3.237 177.62053190000003 11.953 163.42265009999994 4.228 159.90607380000006 4.348 149.82840509999997 4.308 133.8447264 3.325 116.2522865 3.075)
Error minima by case: (0.4716 2 6.0473 2 39.2915 1 0.0 0 13.4152 1 6.0002 1 0.0183 7 11.0 2 0.1995 8 5.3914 1 0.8705 1 0.0 0 27.2498 8 0.8365 1 0.0 0 0.0 0 24.5781 2 0.424 1 0.0 0 2.0599 9 24.0 2 1.3338 2 1.0058 2 7.0 1 0.0 0)
Average genome size in population (length): 73.132
Average program size in population (points): 74.132
Average percent parens in population: 0.014
Minimum age in population: 27.4012451171875
Maximum age in population: 32.42514419555664
Average age in population: 30.24750600624084
Median age in population: 30.30874633789062
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.107
Error (vector) diversity:			 0.115
Behavioral diversity:				 0.115
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 23429566
--- Timings ---
Current time: 1529615327180 milliseconds
Total Time:          76.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.3 seconds, 42.5%
Fitness Testing:     35.0 seconds, 46.1%
Report:               8.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 57689.0
Test mean error for best: 28.84450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 52.4715741385 
Correct output: -67.2036084163 | Program output: 4.7963915837  
Correct output: -185.2914836352 | Program output: -126.2914836352
Correct output: 14.6061985977  | Program output: 11.6061985977 
Correct output: 31.4151982204  | Program output: 57.4151982204 
Correct output: 159.9998373306 | Program output: 62.9998373306 
Correct output: -0.1731946684  | Program output: 37.8268053316 
Correct output: 113.4565963553 | Program output: 18.4565963553 
Correct output: -11.9277100864 | Program output: 54.0722899136 
Correct output: -84.3925535393 | Program output: -36.3925535393
Correct output: -18.9342988463 | Program output: -98.9342988463
Correct output: -106.7651499891 | Program output: -115.7651499891
Correct output: -48.7209464994 | Program output: 24.2790535006 
Correct output: -17.8365333426 | Program output: -46.8365333426
Correct output: -24.3703567122 | Program output: -29.3703567122
Correct output: -24.1207371169 | Program output: -21.1207371169
Correct output: -135.4219119341 | Program output: -69.4219119341
Correct output: -21.9981612097 | Program output: -2.9981612097 
Correct output: 80.3206826008  | Program output: 63.3206826008 
Correct output: 59.940066734   | Program output: -29.059933266 
Correct output: 101.7498992299 | Program output: 19.7498992299 
Correct output: -122.6662183691 | Program output: -74.6662183691
Correct output: -100.9942315294 | Program output: -63.9942315294
Correct output: -57.1627018111 | Program output: -91.1627018111
Correct output: -21.8153206922 | Program output: -39.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_rot float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc float_dup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_dup_times integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [80.0 2 72.0 12 59.0 2 3.0 1 26.0 2 97.0 3 38.0 12 95.0 2 66.0 12 48.0 2 80.0 1 9.0 2 73.0 11 29.0 2 5.0 1 3.0 1 66.0 3 19.0 1 17.0 2 89.0 11 82.0 2 48.0 3 37.0 3 34.0 2 18.0 2]
Total: 1290.0
Mean: 25.8
Genome size: 95
Size: 96
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3640.6320547
Median total errors in population: 1304.0
Error averages by case: (161.4480517999999 4.014 155.33375230000001 11.87 161.96109519999996 3.27 95.55069630000001 2.289 119.89510089999999 3.046 177.4945296 3.947 130.0280203 11.989 174.36483610000002 3.688 154.6202478 12.106 149.19458259999996 3.211 168.0103416 3.205 108.80096369999998 3.137 161.66131279999993 11.963 123.21055170000001 3.198 103.92927140000002 2.27 108.8737036 3.094 166.58727859999993 3.96 107.45233250000004 9.407 105.68723989999997 3.129 177.1892995 11.975 162.27951409999997 3.93 150.11781700000006 4.149 140.43013589999993 4.092 128.63166280000002 3.102 114.65871669999999 3.18)
Error minima by case: (1.5284 2 9.1216 2 41.2915 1 0.0 0 5.9585 1 5.0 1 0.4714 8 7.0 1 2.1151 8 9.3926 1 0.0714 1 0.0 0 10.1216 8 0.2009 1 0.0 0 0.0 0 22.5781 2 0.0125 1 0.0 0 2.0599 9 18.7499 1 0.6662 2 0.9942 2 1.8373 1 0.0 0)
Average genome size in population (length): 79.12
Average program size in population (points): 80.12
Average percent parens in population: 0.013
Minimum age in population: 28.4012451171875
Maximum age in population: 33.75671672821045
Average age in population: 31.80487520027161
Median age in population: 31.82523822784424
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.829
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.829
Total error diversity:				 0.112
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 25407566
--- Timings ---
Current time: 1529615331325 milliseconds
Total Time:          80.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.9 seconds, 42.3%
Fitness Testing:     37.0 seconds, 46.2%
Report:               9.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 57689.0
Test mean error for best: 28.84450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 52.4715741385 
Correct output: -67.2036084163 | Program output: 4.7963915837  
Correct output: -185.2914836352 | Program output: -126.2914836352
Correct output: 14.6061985977  | Program output: 11.6061985977 
Correct output: 31.4151982204  | Program output: 57.4151982204 
Correct output: 159.9998373306 | Program output: 62.9998373306 
Correct output: -0.1731946684  | Program output: 37.8268053316 
Correct output: 113.4565963553 | Program output: 18.4565963553 
Correct output: -11.9277100864 | Program output: 54.0722899136 
Correct output: -84.3925535393 | Program output: -36.3925535393
Correct output: -18.9342988463 | Program output: -98.9342988463
Correct output: -106.7651499891 | Program output: -115.7651499891
Correct output: -48.7209464994 | Program output: 24.2790535006 
Correct output: -17.8365333426 | Program output: -46.8365333426
Correct output: -24.3703567122 | Program output: -29.3703567122
Correct output: -24.1207371169 | Program output: -21.1207371169
Correct output: -135.4219119341 | Program output: -69.4219119341
Correct output: -21.9981612097 | Program output: -2.9981612097 
Correct output: 80.3206826008  | Program output: 63.3206826008 
Correct output: 59.940066734   | Program output: -29.059933266 
Correct output: 101.7498992299 | Program output: 19.7498992299 
Correct output: -122.6662183691 | Program output: -74.6662183691
Correct output: -100.9942315294 | Program output: -63.9942315294
Correct output: -57.1627018111 | Program output: -91.1627018111
Correct output: -21.8153206922 | Program output: -39.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction 98} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_add} {:instruction print_float} {:instruction float_sub} {:instruction in1} {:instruction integer_swap} {:instruction float_div} {:instruction float_frominteger})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer 98 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove integer_add print_float float_sub in1 integer_swap float_div float_frominteger)
Errors: [80.0 2 72.0 12 59.0 2 3.0 1 26.0 2 97.0 3 38.0 12 95.0 2 66.0 12 48.0 2 80.0 1 9.0 2 73.0 11 29.0 2 5.0 1 3.0 1 66.0 3 19.0 1 17.0 2 89.0 11 82.0 2 48.0 3 37.0 3 34.0 2 18.0 2]
Total: 1290.0
Mean: 25.8
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3973.2650289999997
Median total errors in population: 1295.0
Error averages by case: (175.0816847 4.103 158.9589564 11.625 177.32291400000005 3.505 106.59103060000001 2.646 130.645692 3.445 190.35799199999997 4.271 139.56019230000004 12.007 185.90059460000006 3.819 162.49306890000003 12.134 160.63250740000004 3.446 184.2652233000001 3.44 129.53157170000003 3.612 170.5178087 11.969 140.56388979999997 3.497 119.2255571 2.826 118.916779 3.174 180.75973140000005 4.426 124.0335781 5.614 120.76201309999998 3.486 190.0200736000001 11.84 174.7775289 3.847 165.09117420000004 4.385 154.9228567 4.422 147.3657741 3.513 130.4208364 3.494)
Error minima by case: (7.5284 2 17.6749 1 47.2915 1 0.0 0 0.5643 1 5.0 1 0.0975 8 7.0 1 0.5508 7 6.3003 1 1.3734 1 0.0 0 0.8078 8 0.1635 1 0.0 0 0.0 0 16.5781 2 0.1349 1 0.0 0 2.0599 7 1.2501 1 6.6662 2 6.3898 2 2.8373 1 0.0 0)
Average genome size in population (length): 84.472
Average program size in population (points): 85.472
Average percent parens in population: 0.012
Minimum age in population: 31.24457931518555
Maximum age in population: 35.3147554397583
Average age in population: 33.31074212503433
Median age in population: 33.36138534545898
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.877
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.877
Total error diversity:				 0.146
Error (vector) diversity:			 0.154
Behavioral diversity:				 0.154
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 27519366
--- Timings ---
Current time: 1529615335353 milliseconds
Total Time:          84.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.3 seconds, 42.0%
Fitness Testing:     39.1 seconds, 46.5%
Report:               9.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 54510.0
Test mean error for best: 27.25500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 58.4715741385 
Correct output: -67.2036084163 | Program output: 4.7963915837  
Correct output: -185.2914836352 | Program output: -126.2914836352
Correct output: 14.6061985977  | Program output: 11.6061985977 
Correct output: 31.4151982204  | Program output: 57.4151982204 
Correct output: 159.9998373306 | Program output: 68.9998373306 
Correct output: -0.1731946684  | Program output: 37.8268053316 
Correct output: 113.4565963553 | Program output: 24.4565963553 
Correct output: -11.9277100864 | Program output: 54.0722899136 
Correct output: -84.3925535393 | Program output: -36.3925535393
Correct output: -18.9342988463 | Program output: -92.9342988463
Correct output: -106.7651499891 | Program output: -115.7651499891
Correct output: -48.7209464994 | Program output: 24.2790535006 
Correct output: -17.8365333426 | Program output: -40.8365333426
Correct output: -24.3703567122 | Program output: -29.3703567122
Correct output: -24.1207371169 | Program output: -21.1207371169
Correct output: -135.4219119341 | Program output: -69.4219119341
Correct output: -21.9981612097 | Program output: -2.9981612097 
Correct output: 80.3206826008  | Program output: 63.3206826008 
Correct output: 59.940066734   | Program output: -23.059933266 
Correct output: 101.7498992299 | Program output: 25.7498992299 
Correct output: -122.6662183691 | Program output: -74.6662183691
Correct output: -100.9942315294 | Program output: -63.9942315294
Correct output: -57.1627018111 | Program output: -85.1627018111
Correct output: -21.8153206922 | Program output: -39.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction 98} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in1})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer 98 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat in1)
Errors: [74.0 3 72.0 12 59.0 2 3.0 1 26.0 2 91.0 3 38.0 12 89.0 3 66.0 12 48.0 2 74.0 2 9.0 2 73.0 11 23.0 2 5.0 1 3.0 1 66.0 3 19.0 1 17.0 2 83.0 12 76.0 3 48.0 3 37.0 3 28.0 2 18.0 2]
Total: 1247.0
Mean: 24.94
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3950.3221791
Median total errors in population: 1291.0
Error averages by case: (174.9160559 3.759 163.45617499999997 11.852 172.01930320000005 3.34 107.80312669999998 2.558 129.5071831 3.34 190.04753510000003 4.174 139.3687033 12.077 186.63458450000005 3.576 163.72127190000006 12.174 158.88974390000004 3.357 183.38926339999998 3.094 125.79099219999996 3.472 170.51951389999996 11.832 139.17798870000001 3.37 119.21110720000001 2.693 118.5343975 2.845 176.4402891 4.363 128.2810488 4.025 119.95281179999999 3.302 191.29401480000004 11.677 175.35348919999998 3.549 160.68177580000003 4.306 150.5222169 4.357 145.08122110000005 3.423 129.8373661 3.376)
Error minima by case: (0.5284 2 32.465 2 40.2915 1 0.0 0 2.0903 1 4.0 1 0.8397 8 6.0 1 0.0674 7 26.6074 1 0.2411 1 0.0 0 21.2091 8 0.5014 1 0.0 0 0.0 0 11.5781 2 0.1516 1 0.0 0 0.0599 9 12.9091 1 0.3338 2 0.0058 2 8.0 1 0.0 0)
Average genome size in population (length): 85.32
Average program size in population (points): 86.32
Average percent parens in population: 0.012
Minimum age in population: 32.24457931518555
Maximum age in population: 36.57768988609314
Average age in population: 34.74739805054665
Median age in population: 34.79463458061218
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.107
Error (vector) diversity:			 0.112
Behavioral diversity:				 0.113
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 29652366
--- Timings ---
Current time: 1529615339794 milliseconds
Total Time:          88.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.9 seconds, 41.6%
Fitness Testing:     41.5 seconds, 46.8%
Report:              10.1 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 53578.0
Test mean error for best: 26.78900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 58.4715741385 
Correct output: -67.2036084163 | Program output: 1.7963915837  
Correct output: -185.2914836352 | Program output: -129.2914836352
Correct output: 14.6061985977  | Program output: 8.6061985977  
Correct output: 31.4151982204  | Program output: 54.4151982204 
Correct output: 159.9998373306 | Program output: 68.9998373306 
Correct output: -0.1731946684  | Program output: 34.8268053316 
Correct output: 113.4565963553 | Program output: 24.4565963553 
Correct output: -11.9277100864 | Program output: 51.0722899136 
Correct output: -84.3925535393 | Program output: -39.3925535393
Correct output: -18.9342988463 | Program output: -92.9342988463
Correct output: -106.7651499891 | Program output: -118.7651499891
Correct output: -48.7209464994 | Program output: 21.2790535006 
Correct output: -17.8365333426 | Program output: -40.8365333426
Correct output: -24.3703567122 | Program output: -32.3703567122
Correct output: -24.1207371169 | Program output: -24.1207371169
Correct output: -135.4219119341 | Program output: -72.4219119341
Correct output: -21.9981612097 | Program output: -5.9981612097 
Correct output: 80.3206826008  | Program output: 60.3206826008 
Correct output: 59.940066734   | Program output: -23.059933266 
Correct output: 101.7498992299 | Program output: 25.7498992299 
Correct output: -122.6662183691 | Program output: -77.6662183691
Correct output: -100.9942315294 | Program output: -66.9942315294
Correct output: -57.1627018111 | Program output: -85.1627018111
Correct output: -21.8153206922 | Program output: -42.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_max} {:instruction 98} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in1})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_max 98 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat in1)
Errors: [74.0 3 69.0 12 56.0 2 6.0 2 23.0 2 91.0 3 35.0 12 89.0 3 63.0 11 45.0 2 74.0 2 12.0 2 70.0 12 23.0 2 8.0 2 0.0 0 63.0 3 16.0 2 20.0 1 83.0 12 76.0 3 45.0 3 34.0 3 28.0 2 21.0 2]
Total: 1227.0
Mean: 24.54
Genome size: 97
Size: 98
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3733.1587293
Median total errors in population: 1291.0
Error averages by case: (171.4575171 3.699 153.29925039999992 11.805 163.08632870000005 3.339 99.41392159999998 2.624 122.6544561 3.354 187.17413209999998 4.177 131.83680370000002 12.107 182.1167283 3.515 155.67390980000008 12.154 147.79649529999998 3.349 172.6269878 2.912 116.27832340000003 3.439 162.96698129999993 11.715 129.0274676 3.34 107.34637360000002 2.647 106.08114160000001 2.668 166.65712509999997 4.269 118.6243629 3.719 115.02035019999994 3.348 179.49970620000002 11.605 170.8834826 3.52 150.62356350000007 4.261 140.4102463 4.3 134.9510866 3.374 119.1079875 3.304)
Error minima by case: (14.5284 2 2.1284 2 44.0 1 0.0 0 2.3955 1 4.0 1 0.239 2 6.0 1 0.3681 1 0.3118 1 0.6814 1 0.0 0 4.0324 2 1.0692 1 0.0 0 0.0 0 9.5781 2 0.1499 1 0.0 0 1.0413 8 7.7499 1 2.6749 2 13.9942 2 1.1627 1 0.0 0)
Average genome size in population (length): 86.223
Average program size in population (points): 87.223
Average percent parens in population: 0.012
Minimum age in population: 33.42663192749023
Maximum age in population: 38.01899075508118
Average age in population: 36.1566053981781
Median age in population: 36.20750296115875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.825
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.825
Total error diversity:				 0.139
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 31807966
--- Timings ---
Current time: 1529615343900 milliseconds
Total Time:          92.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.3 seconds, 41.3%
Fitness Testing:     43.6 seconds, 47.1%
Report:              10.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 45537.0
Test mean error for best: 22.76850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: 7.7963915837  
Correct output: -185.2914836352 | Program output: -123.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 60.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 40.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 57.0722899136 
Correct output: -84.3925535393 | Program output: -33.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -112.7651499891
Correct output: -48.7209464994 | Program output: 27.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -26.3703567122
Correct output: -24.1207371169 | Program output: -18.1207371169
Correct output: -135.4219119341 | Program output: -66.4219119341
Correct output: -21.9981612097 | Program output: 0.0018387903  
Correct output: 80.3206826008  | Program output: 66.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -71.6662183691
Correct output: -100.9942315294 | Program output: -60.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -36.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in1})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat in1)
Errors: [55.0 3 75.0 11 62.0 2 0.0 0 29.0 2 72.0 3 41.0 11 70.0 2 69.0 12 51.0 2 55.0 2 6.0 2 76.0 12 4.0 2 2.0 1 6.0 2 69.0 3 22.0 12 14.0 2 64.0 11 57.0 3 51.0 3 40.0 2 9.0 2 15.0 2]
Total: 1123.0
Mean: 22.46
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4310.5894774
Median total errors in population: 1291.0
Error averages by case: (189.27964180000004 3.914 173.42853860000002 11.877 188.3272276 3.595 120.276377 2.785 143.59540890000005 3.52 204.59897210000003 4.351 152.505466 12.076 199.79454690000006 3.709 176.08140649999996 12.149 173.9115113 3.566 197.70135719999993 3.19 142.4302041 3.663 182.44645239999997 11.763 154.51171860000005 3.527 134.2526381 2.866 132.85320019999997 2.91 192.14107969999995 4.505 142.13279420000006 4.205 134.7779228999999 3.501 205.26486410000004 11.588 188.72064509999996 3.756 176.37817840000002 4.484 166.402938 4.504 160.53763060000003 3.577 145.13375709999997 3.524)
Error minima by case: (0.5284 1 8.5928 2 40.2915 1 0.0 0 2.3313 1 3.0 1 0.3005 8 5.0 1 0.1658 8 1.248 1 0.7013 1 0.0 0 19.8527 9 0.1635 1 0.0 0 0.0 0 21.5781 2 0.0881 1 1.0 1 18.9664 9 18.0 1 0.3338 2 0.0058 2 4.8373 1 0.0 0)
Average genome size in population (length): 85.86
Average program size in population (points): 86.86
Average percent parens in population: 0.012
Minimum age in population: 34.42663192749023
Maximum age in population: 39.40492075681686
Average age in population: 37.57773230075836
Median age in population: 37.61307364702225
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.881
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.881
Total error diversity:				 0.141
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.152
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 33954491
--- Timings ---
Current time: 1529615348553 milliseconds
Total Time:          97.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.8 seconds, 41.0%
Fitness Testing:     46.0 seconds, 47.3%
Report:              11.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 45749.0
Test mean error for best: 22.87450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 76.4715741385 
Correct output: -67.2036084163 | Program output: 6.7963915837  
Correct output: -185.2914836352 | Program output: -124.2914836352
Correct output: 14.6061985977  | Program output: 13.6061985977 
Correct output: 31.4151982204  | Program output: 59.4151982204 
Correct output: 159.9998373306 | Program output: 86.9998373306 
Correct output: -0.1731946684  | Program output: 39.8268053316 
Correct output: 113.4565963553 | Program output: 42.4565963553 
Correct output: -11.9277100864 | Program output: 56.0722899136 
Correct output: -84.3925535393 | Program output: -34.3925535393
Correct output: -18.9342988463 | Program output: -74.9342988463
Correct output: -106.7651499891 | Program output: -113.7651499891
Correct output: -48.7209464994 | Program output: 26.2790535006 
Correct output: -17.8365333426 | Program output: -22.8365333426
Correct output: -24.3703567122 | Program output: -27.3703567122
Correct output: -24.1207371169 | Program output: -19.1207371169
Correct output: -135.4219119341 | Program output: -67.4219119341
Correct output: -21.9981612097 | Program output: -0.9981612097 
Correct output: 80.3206826008  | Program output: 65.3206826008 
Correct output: 59.940066734   | Program output: -5.059933266  
Correct output: 101.7498992299 | Program output: 43.7498992299 
Correct output: -122.6662183691 | Program output: -72.6662183691
Correct output: -100.9942315294 | Program output: -61.9942315294
Correct output: -57.1627018111 | Program output: -67.1627018111
Correct output: -21.8153206922 | Program output: -37.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction tag_integer_3} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction 98} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in1})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank float_sub integer_rot integer_swap integer_add in1 float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec print_integer float_dec integer_inc tag_integer_3 float_dec integer_inc float_dec integer_mod float_dec float_dec integer_inc float_dec integer_yank integer_yank integer_shove integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank print_integer 98 integer_inc integer_yank float_dec integer_dup_items integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat in1)
Errors: [56.0 3 74.0 11 61.0 2 1.0 1 28.0 2 73.0 3 40.0 12 71.0 3 68.0 12 50.0 1 56.0 2 7.0 2 75.0 12 5.0 2 3.0 1 5.0 2 68.0 3 21.0 2 15.0 2 65.0 11 58.0 3 50.0 2 39.0 3 10.0 1 16.0 2]
Total: 1115.0
Mean: 22.3
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4078.3587983999996
Median total errors in population: 1291.0
Error averages by case: (181.03537949999992 4.014 166.18410410000007 11.833 181.05909720000002 3.671 113.08642899999994 2.893 136.02638219999994 3.63 196.4896506 4.402 144.49891030000006 12.087 191.01885410000006 3.833 167.65157100000002 12.17 163.12708500000005 3.649 185.95251230000005 3.231 134.58699630000007 3.707 175.23929819999992 11.773 142.8854864 3.564 121.97413979999997 2.934 120.48219999999996 3.017 183.75832969999988 4.573 130.70056060000002 4.39 126.95663239999993 3.603 190.1516412000001 11.618 180.07857089999996 3.87 168.29597160000012 4.549 158.12650409999998 4.564 150.05125530000004 3.62 134.1702366 3.576)
Error minima by case: (12.4716 1 17.2036 2 27.2915 1 0.0 0 0.4152 1 1.0 1 0.1732 8 3.0 1 0.4316 8 9.6074 1 0.1714 1 1.0 1 1.2791 8 0.0022 1 0.0 0 0.0 0 5.4219 2 0.1516 1 0.0 0 2.0582 7 0.2501 1 10.63 2 11.042 2 7.0 1 0.0 0)
Average genome size in population (length): 86.282
Average program size in population (points): 87.282
Average percent parens in population: 0.012
Minimum age in population: 36.63758039474487
Maximum age in population: 40.81512776017189
Average age in population: 39.06998184815049
Median age in population: 39.11381763219833
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.182
Error (vector) diversity:			 0.197
Behavioral diversity:				 0.198
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 36111541
--- Timings ---
Current time: 1529615352729 milliseconds
Total Time:         101.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.3 seconds, 40.7%
Fitness Testing:     48.1 seconds, 47.4%
Report:              11.9 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 43559.0
Test mean error for best: 21.77950
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: 1.7963915837  
Correct output: -185.2914836352 | Program output: -129.2914836352
Correct output: 14.6061985977  | Program output: 8.6061985977  
Correct output: 31.4151982204  | Program output: 54.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 34.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 51.0722899136 
Correct output: -84.3925535393 | Program output: -39.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -118.7651499891
Correct output: -48.7209464994 | Program output: 21.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -32.3703567122
Correct output: -24.1207371169 | Program output: -24.1207371169
Correct output: -135.4219119341 | Program output: -72.4219119341
Correct output: -21.9981612097 | Program output: -5.9981612097 
Correct output: 80.3206826008  | Program output: 60.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -77.6662183691
Correct output: -100.9942315294 | Program output: -66.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -42.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction float_swap} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float})
Best program: (float_sub integer_rot integer_swap integer_add in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_mod float_dec float_dup_times integer_add in1 print_integer float_swap integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float)
Errors: [55.0 3 69.0 12 56.0 2 6.0 2 23.0 2 72.0 3 35.0 12 70.0 2 63.0 11 45.0 2 55.0 2 12.0 2 70.0 12 4.0 2 8.0 2 0.0 0 63.0 3 16.0 2 20.0 1 64.0 11 57.0 3 45.0 3 34.0 3 9.0 2 21.0 2]
Total: 1073.0
Mean: 21.46
Genome size: 96
Size: 97
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 5360.940045700002
Median total errors in population: 1290.0
Error averages by case: (229.559955 4.209 218.7532425000002 11.774 229.91164729999997 3.88 165.8817002 3.056 190.70550999999992 3.756 243.93450389999998 4.474 199.0206962 12.123 239.7400913 4.087 221.39969389999996 12.183 215.36858930000002 3.855 235.46495589999995 3.569 186.5846152999999 3.862 227.55929160000002 11.954 192.81760030000004 3.751 177.8097013000001 3.172 176.11979159999999 3.247 233.14334500000007 4.716 179.5915533 5.325 173.1115363999999 3.697 240.899901 11.738 229.20840250000003 4.116 218.47513340000006 4.705 208.97020769999983 4.639 200.05148139999997 3.763 187.49589939999993 3.71)
Error minima by case: (6.5284 2 12.245 2 35.2915 1 0.0 0 5.4152 1 0.0 0 2.1732 8 2.0 1 0.0674 7 4.8191 1 1.9889 1 0.0 0 4.5379 8 0.2065 1 0.0 0 0.0 0 4.5781 2 0.0489 1 1.0 1 6.0599 8 0.2501 1 5.3338 2 5.0058 2 6.8373 1 0.0 0)
Average genome size in population (length): 87.608
Average program size in population (points): 88.608
Average percent parens in population: 0.011
Minimum age in population: 38.30332255363464
Maximum age in population: 42.38685908913612
Average age in population: 40.58982472984493
Median age in population: 40.65225004404783
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.226
Error (vector) diversity:			 0.266
Behavioral diversity:				 0.266
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 38301741
--- Timings ---
Current time: 1529615357408 milliseconds
Total Time:         106.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.8 seconds, 40.4%
Fitness Testing:     50.6 seconds, 47.8%
Report:              12.4 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 42136.0
Test mean error for best: 21.06800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -4.2036084163 
Correct output: -185.2914836352 | Program output: -135.2914836352
Correct output: 14.6061985977  | Program output: 2.6061985977  
Correct output: 31.4151982204  | Program output: 48.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 28.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 45.0722899136 
Correct output: -84.3925535393 | Program output: -45.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -124.7651499891
Correct output: -48.7209464994 | Program output: 15.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -38.3703567122
Correct output: -24.1207371169 | Program output: -30.1207371169
Correct output: -135.4219119341 | Program output: -78.4219119341
Correct output: -21.9981612097 | Program output: -11.9981612097
Correct output: 80.3206826008  | Program output: 54.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -83.6662183691
Correct output: -100.9942315294 | Program output: -72.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -48.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_inc})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_inc integer_inc integer_inc float_dec integer_shove print_integer float_dec integer_inc integer_inc float_dec float_dec float_dec float_shove integer_inc integer_shove float_rot float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_inc)
Errors: [55.0 3 63.0 2 50.0 1 12.0 2 17.0 2 72.0 3 29.0 12 70.0 2 57.0 12 39.0 2 55.0 2 18.0 2 64.0 12 4.0 2 14.0 2 6.0 2 57.0 3 10.0 1 26.0 2 64.0 11 57.0 3 39.0 3 28.0 3 9.0 2 27.0 2]
Total: 1035.0
Mean: 20.7
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 4759.3943615
Median total errors in population: 1251.0
Error averages by case: (201.6413619999999 4.073 201.2516536000001 11.339 208.01565929999995 3.682 143.79835819999997 2.946 171.59044539999996 3.584 216.44682019999996 4.128 179.4177014 12.047 212.23594290000003 3.976 201.91156740000002 12.094 194.04015870000006 3.653 202.94696039999997 3.354 163.55159600000002 3.657 208.36806449999995 12.017 155.02320490000002 3.385 156.5335882 3.079 154.90044500000005 3.094 210.83432389999993 4.495 159.53885330000003 5.947 157.48250749999988 3.475 209.35281740000002 11.809 201.34666649999994 4.073 195.95931760000013 4.479 186.20316989999992 4.419 166.50449899999995 3.373 164.8116783 3.509)
Error minima by case: (1.5284 2 24.7964 1 41.2915 1 0.0 0 3.4668 1 8.0002 1 0.0928 7 5.4566 1 0.3472 7 2.3926 1 1.8816 1 0.0 0 23.8869 8 0.6687 1 0.0 0 0.0 0 16.5781 2 0.3008 1 0.0 0 3.9401 7 0.2501 1 0.6662 2 0.9942 2 8.0 1 0.0 0)
Average genome size in population (length): 91.993
Average program size in population (points): 92.993
Average percent parens in population: 0.011
Minimum age in population: 39.46079003810883
Maximum age in population: 43.79920206218958
Average age in population: 42.13858820549399
Median age in population: 42.18840971216559
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.273
Error (vector) diversity:			 0.341
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 40601591
--- Timings ---
Current time: 1529615361917 milliseconds
Total Time:         110.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.4 seconds, 40.1%
Fitness Testing:     52.9 seconds, 47.9%
Report:              13.1 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 41186.0
Test mean error for best: 20.59300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -9.2036084163 
Correct output: -185.2914836352 | Program output: -140.2914836352
Correct output: 14.6061985977  | Program output: -2.3938014023 
Correct output: 31.4151982204  | Program output: 43.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 23.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 40.0722899136 
Correct output: -84.3925535393 | Program output: -50.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -129.7651499891
Correct output: -48.7209464994 | Program output: 10.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -43.3703567122
Correct output: -24.1207371169 | Program output: -35.1207371169
Correct output: -135.4219119341 | Program output: -83.4219119341
Correct output: -21.9981612097 | Program output: -16.9981612097
Correct output: 80.3206826008  | Program output: 49.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -88.6662183691
Correct output: -100.9942315294 | Program output: -77.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -53.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_inc})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_inc)
Errors: [55.0 3 58.0 2 45.0 2 17.0 12 12.0 2 72.0 3 24.0 12 70.0 2 52.0 12 34.0 2 55.0 2 23.0 2 59.0 12 4.0 2 19.0 2 11.0 2 52.0 2 5.0 2 31.0 2 64.0 11 57.0 3 34.0 3 23.0 3 9.0 2 32.0 2]
Total: 1021.0
Mean: 20.42
Genome size: 122
Size: 123
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4904.273447599998
Median total errors in population: 1226.0
Error averages by case: (201.93409019999993 4.351 205.5616131000002 11.073 218.31161649999999 3.87 149.38930929999995 3.211 177.14511079999997 3.745 216.37750659999995 4.351 185.25758570000005 12.074 212.480795 4.127 207.58976639999997 12.151 200.7356824 3.828 208.31339489999985 3.648 175.12752319999996 3.877 214.09076959999996 12.059 161.4068372000001 3.644 163.54494480000014 3.308 161.7834974 3.399 220.77780149999987 4.621 162.1198995 6.532 159.8139688999999 3.687 210.70057219999995 11.597 201.9098592999999 4.366 206.2653527000001 4.672 196.61298609999992 4.572 172.90407969999995 3.6 174.05388460000003 3.702)
Error minima by case: (2.4716 2 18.4263 1 37.2915 1 0.0 0 5.3966 1 4.0002 1 0.8268 8 5.4566 1 0.0219 7 1.2373 1 0.7917 1 0.0 0 4.9382 8 0.8454 1 0.0 0 0.0 0 6.4219 2 0.5954 1 0.0 0 0.0599 3 1.7499 1 3.3338 2 3.0058 2 8.0 1 0.0 0)
Average genome size in population (length): 93.935
Average program size in population (points): 94.935
Average percent parens in population: 0.011
Minimum age in population: 41.57943177223206
Maximum age in population: 45.4594318382442
Average age in population: 43.72463009565696
Median age in population: 43.78376030549407
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.326
Error (vector) diversity:			 0.403
Behavioral diversity:				 0.405
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 42949966
--- Timings ---
Current time: 1529615366622 milliseconds
Total Time:         115.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.1 seconds, 40.0%
Fitness Testing:     55.3 seconds, 48.0%
Report:              13.8 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 42145.0
Test mean error for best: 21.07250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 75.4715741385 
Correct output: -67.2036084163 | Program output: -4.2036084163 
Correct output: -185.2914836352 | Program output: -135.2914836352
Correct output: 14.6061985977  | Program output: 2.6061985977  
Correct output: 31.4151982204  | Program output: 48.4151982204 
Correct output: 159.9998373306 | Program output: 85.9998373306 
Correct output: -0.1731946684  | Program output: 28.8268053316 
Correct output: 113.4565963553 | Program output: 41.4565963553 
Correct output: -11.9277100864 | Program output: 45.0722899136 
Correct output: -84.3925535393 | Program output: -45.3925535393
Correct output: -18.9342988463 | Program output: -75.9342988463
Correct output: -106.7651499891 | Program output: -124.7651499891
Correct output: -48.7209464994 | Program output: 15.2790535006 
Correct output: -17.8365333426 | Program output: -23.8365333426
Correct output: -24.3703567122 | Program output: -38.3703567122
Correct output: -24.1207371169 | Program output: -30.1207371169
Correct output: -135.4219119341 | Program output: -78.4219119341
Correct output: -21.9981612097 | Program output: -11.9981612097
Correct output: 80.3206826008  | Program output: 86.3206826008 
Correct output: 59.940066734   | Program output: -6.059933266  
Correct output: 101.7498992299 | Program output: 42.7498992299 
Correct output: -122.6662183691 | Program output: -83.6662183691
Correct output: -100.9942315294 | Program output: -72.9942315294
Correct output: -57.1627018111 | Program output: -68.1627018111
Correct output: -21.8153206922 | Program output: -16.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction tag_integer_776} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in1})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dup integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank tag_integer_776 integer_inc integer_yank float_dec integer_inc float_dec integer_shove integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_min float_dec float_dec integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat in1)
Errors: [57.0 3 63.0 2 50.0 1 12.0 2 17.0 2 74.0 2 29.0 12 72.0 2 57.0 12 39.0 2 57.0 2 18.0 2 64.0 12 6.0 2 14.0 2 6.0 2 57.0 3 10.0 1 6.0 1 66.0 11 59.0 3 39.0 3 28.0 3 11.0 2 5.0 2]
Total: 1007.0
Mean: 20.14
Genome size: 120
Size: 121
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3950.6556146
Median total errors in population: 1123.0
Error averages by case: (165.26403069999998 4.266 170.92134640000003 10.785 181.2595805000001 3.748 113.90867059999995 3.278 141.53261760000007 3.687 180.77706689999997 4.26 148.93796700000001 11.986 176.07066580000009 3.789 171.957501 12.09 159.3385815000001 3.685 169.81112589999987 3.503 137.10159240000004 3.723 178.39833030000003 12.026 122.69132650000003 3.484 119.3839092 3.213 117.83152549999998 3.281 182.85296880000007 4.459 122.15261069999998 6.07 129.1439794999998 3.628 170.80212199999994 11.321 165.14900649999993 4.262 167.46399540000013 4.56 157.29361549999996 4.471 132.01944250000003 3.377 132.0540359000001 3.586)
Error minima by case: (0.5284 2 4.3955 1 31.2915 1 0.0 0 2.5848 1 1.9998 1 0.1732 8 9.4566 1 0.255 7 2.3926 1 1.1121 1 0.0 0 15.6142 9 0.901 1 0.0 0 0.0 0 14.5781 2 0.2484 1 1.0 1 4.0599 2 2.2501 1 0.3338 2 0.0058 2 7.0 1 0.0 0)
Average genome size in population (length): 95.103
Average program size in population (points): 96.103
Average percent parens in population: 0.011
Minimum age in population: 42.99519345164299
Maximum age in population: 47.2388535104692
Average age in population: 45.11687327473611
Median age in population: 45.15364694967866
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.862
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.862
Total error diversity:				 0.302
Error (vector) diversity:			 0.343
Behavioral diversity:				 0.343
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 45327541
--- Timings ---
Current time: 1529615371704 milliseconds
Total Time:         120.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.6 seconds, 39.6%
Fitness Testing:     58.0 seconds, 48.3%
Report:              14.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 40215.0
Test mean error for best: 20.10750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -9.2036084163 
Correct output: -185.2914836352 | Program output: -140.2914836352
Correct output: 14.6061985977  | Program output: -2.3938014023 
Correct output: 31.4151982204  | Program output: 43.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 23.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 40.0722899136 
Correct output: -84.3925535393 | Program output: -50.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -129.7651499891
Correct output: -48.7209464994 | Program output: 10.2790535006 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -43.3703567122
Correct output: -24.1207371169 | Program output: -35.1207371169
Correct output: -135.4219119341 | Program output: -83.4219119341
Correct output: -21.9981612097 | Program output: -16.9981612097
Correct output: 80.3206826008  | Program output: 88.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -88.6662183691
Correct output: -100.9942315294 | Program output: -77.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -14.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_inc})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc float_yankdup integer_shove integer_max integer_shove print_integer print_float integer_fromfloat float_inc)
Errors: [55.0 3 58.0 2 45.0 2 17.0 12 12.0 2 72.0 3 24.0 12 70.0 2 52.0 12 34.0 2 55.0 2 23.0 2 59.0 12 4.0 2 19.0 2 11.0 2 52.0 2 5.0 2 8.0 1 64.0 11 57.0 3 34.0 3 23.0 3 9.0 2 7.0 2]
Total: 972.0
Mean: 19.44
Genome size: 125
Size: 126
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4335.581644399997
Median total errors in population: 1086.0
Error averages by case: (185.3961192999999 4.276 179.5345732 8.703 193.8934505000001 3.883 112.38732969999998 3.837 155.1655086 3.734 199.15987279999996 4.177 162.5601909 12.09 194.60969420000018 3.647 184.7969301 12.04 172.80050519999992 3.781 189.75010829999988 3.511 156.62535019999996 3.858 190.51264059999988 12.024 143.52570080000007 3.471 140.3935964 3.563 132.8539018 3.122 195.33829209999993 4.505 141.23345429999998 4.438 142.41033559999988 3.639 188.48375129999994 11.346 184.45438509999997 4.212 180.5666262000001 4.67 170.73973019999997 4.605 152.3232203999999 3.368 151.96137659999997 3.605)
Error minima by case: (4.5284 2 15.8158 1 25.2915 1 0.0 0 5.5222 1 7.9998 1 0.1238 7 30.0 1 0.007 5 3.6074 1 0.8122 1 0.0 0 2.6668 8 0.4986 1 0.0 0 0.0 0 3.5781 2 0.7536 1 0.0 0 3.2785 8 20.2501 1 2.6662 2 2.9942 2 7.0 1 0.0 0)
Average genome size in population (length): 103.229
Average program size in population (points): 104.229
Average percent parens in population: 0.010
Minimum age in population: 44.02400724589825
Maximum age in population: 48.38336639292538
Average age in population: 46.53599665547535
Median age in population: 46.60828377399594
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.883
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.883
Total error diversity:				 0.324
Error (vector) diversity:			 0.375
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 47908266
--- Timings ---
Current time: 1529615376460 milliseconds
Total Time:         125.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.2 seconds, 39.3%
Fitness Testing:     60.5 seconds, 48.4%
Report:              15.3 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 40653.0
Test mean error for best: 20.32650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 75.4715741385 
Correct output: -67.2036084163 | Program output: -18.2036084163
Correct output: -185.2914836352 | Program output: -149.2914836352
Correct output: 14.6061985977  | Program output: -11.3938014023
Correct output: 31.4151982204  | Program output: 34.4151982204 
Correct output: 159.9998373306 | Program output: 85.9998373306 
Correct output: -0.1731946684  | Program output: 14.8268053316 
Correct output: 113.4565963553 | Program output: 41.4565963553 
Correct output: -11.9277100864 | Program output: 31.0722899136 
Correct output: -84.3925535393 | Program output: -59.3925535393
Correct output: -18.9342988463 | Program output: -75.9342988463
Correct output: -106.7651499891 | Program output: -138.7651499891
Correct output: -48.7209464994 | Program output: 1.2790535006  
Correct output: -17.8365333426 | Program output: -23.8365333426
Correct output: -24.3703567122 | Program output: -52.3703567122
Correct output: -24.1207371169 | Program output: -44.1207371169
Correct output: -135.4219119341 | Program output: -92.4219119341
Correct output: -21.9981612097 | Program output: -25.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -6.059933266  
Correct output: 101.7498992299 | Program output: 42.7498992299 
Correct output: -122.6662183691 | Program output: -97.6662183691
Correct output: -100.9942315294 | Program output: -86.9942315294
Correct output: -57.1627018111 | Program output: -68.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dup integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_min integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [57.0 3 49.0 2 36.0 2 26.0 12 3.0 1 74.0 2 15.0 12 72.0 2 43.0 11 25.0 2 57.0 2 32.0 2 50.0 12 6.0 2 28.0 2 20.0 1 43.0 3 4.0 1 3.0 2 66.0 11 59.0 3 25.0 3 14.0 3 11.0 2 4.0 1]
Total: 921.0
Mean: 18.42
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4621.265599
Median total errors in population: 1055.0
Error averages by case: (196.2066925 4.199 196.37170720000012 5.869 202.79040550000008 3.742 126.19769930000001 4.71 165.0906171 3.65 210.66253729999994 4.106 172.74810620000005 12.127 204.38098389999996 3.56 194.8612071 12.206 183.74799050000007 3.653 201.45446619999996 3.44 170.5445682 3.731 200.47231589999998 12.091 152.99006890000007 3.389 155.98525830000005 3.541 148.94256109999992 3.3 205.38921739999998 4.391 150.698225 4.242 153.69990159999978 3.543 201.5022444 11.422 193.7817595999999 4.144 190.72369010000006 4.514 180.97323239999997 4.486 164.33200559999997 3.341 165.80013770000002 3.521)
Error minima by case: (4.5284 1 5.4554 1 36.0 1 0.0 0 3.0 1 3.0 1 0.8268 8 5.0 1 2.0E-4 7 1.3926 1 0.7947 1 0.0 0 14.4327 7 0.492 1 0.0391 1 0.0 0 11.5781 2 0.0 0 0.0 0 2.0599 9 18.0 1 9.6662 2 8.2752 2 1.1412 1 1.0 1)
Average genome size in population (length): 111.206
Average program size in population (points): 112.206
Average percent parens in population: 0.009
Minimum age in population: 45.68742747791111
Maximum age in population: 49.8661849158816
Average age in population: 47.81878696538322
Median age in population: 47.86837553605437
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.911
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.911
Total error diversity:				 0.33
Error (vector) diversity:			 0.404
Behavioral diversity:				 0.406
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 50688416
--- Timings ---
Current time: 1529615381911 milliseconds
Total Time:         130.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.7 seconds, 38.9%
Fitness Testing:     63.4 seconds, 48.7%
Report:              15.9 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 39909.0
Test mean error for best: 19.95450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -15.2036084163
Correct output: -185.2914836352 | Program output: -146.2914836352
Correct output: 14.6061985977  | Program output: -8.3938014023 
Correct output: 31.4151982204  | Program output: 37.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 17.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 34.0722899136 
Correct output: -84.3925535393 | Program output: -56.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -135.7651499891
Correct output: -48.7209464994 | Program output: 4.2790535006  
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -49.3703567122
Correct output: -24.1207371169 | Program output: -41.1207371169
Correct output: -135.4219119341 | Program output: -89.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -94.6662183691
Correct output: -100.9942315294 | Program output: -83.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -23.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 print_integer float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_mod integer_yank integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_min integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 52.0 2 39.0 2 23.0 12 6.0 1 72.0 3 18.0 12 70.0 2 46.0 12 28.0 2 55.0 2 29.0 2 53.0 11 4.0 2 25.0 2 17.0 2 46.0 3 1.0 1 1.0 2 64.0 11 57.0 3 28.0 3 17.0 3 9.0 2 2.0 1]
Total: 918.0
Mean: 18.36
Genome size: 158
Size: 159
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4519.833149600003
Median total errors in population: 1039.0
Error averages by case: (189.87017779999996 4.14 193.7383583 5.014 200.63129629999983 3.843 129.53198609999998 6.654 162.02474610000002 3.723 204.78802409999986 4.049 168.9233304 12.027 197.35729920000006 3.518 190.62743730000005 12.042 181.5420803 3.748 192.47165019999989 3.345 170.01232079999994 3.821 196.885613 11.963 142.91180290000008 3.303 156.6153754 3.617 151.08087249999997 3.62 201.85234459999995 4.571 150.13284440000004 4.501 146.2720837999999 3.489 197.17831919999998 11.301 186.04460769999994 4.12 187.05643750000021 4.588 177.05413839999986 4.611 155.5618563999999 3.284 157.23414689999993 3.542)
Error minima by case: (7.5284 2 14.7964 1 36.0 1 0.0 0 3.0 1 1.9998 1 0.1732 7 28.4566 1 0.3105 8 2.3926 1 1.7812 1 0.0 0 9.7345 8 0.4406 1 0.0 0 0.0 0 12.5781 2 0.0 0 0.0 0 0.0599 8 18.3934 1 2.6662 2 2.9942 2 7.0 1 0.0 0)
Average genome size in population (length): 119.417
Average program size in population (points): 120.417
Average percent parens in population: 0.008
Minimum age in population: 47.22035212628543
Maximum age in population: 51.03617813973688
Average age in population: 49.07317900831741
Median age in population: 49.09558826149441
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.388
Error (vector) diversity:			 0.482
Behavioral diversity:				 0.482
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 53673916
--- Timings ---
Current time: 1529615387061 milliseconds
Total Time:         135.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.2 seconds, 38.5%
Fitness Testing:     66.2 seconds, 48.9%
Report:              17.0 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 38567.0
Test mean error for best: 19.28350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -16.2036084163
Correct output: -185.2914836352 | Program output: -147.2914836352
Correct output: 14.6061985977  | Program output: -9.3938014023 
Correct output: 31.4151982204  | Program output: 36.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 16.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 33.0722899136 
Correct output: -84.3925535393 | Program output: -57.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -90.7651499891
Correct output: -48.7209464994 | Program output: 3.2790535006  
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -38.3703567122
Correct output: -24.1207371169 | Program output: -42.1207371169
Correct output: -135.4219119341 | Program output: -90.4219119341
Correct output: -21.9981612097 | Program output: -23.9981612097
Correct output: 80.3206826008  | Program output: 88.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -95.6662183691
Correct output: -100.9942315294 | Program output: -84.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -14.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction tag_integer_3} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in1})
Best program: (float_sub integer_add in1 print_integer integer_yank float_sub integer_rot integer_swap integer_add in1 float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec print_integer float_dec integer_inc tag_integer_3 float_dec integer_inc float_dec integer_mod float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec integer_inc integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_mod float_yankdup print_integer float_dec integer_inc integer_dup float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat in1)
Errors: [55.0 3 51.0 2 38.0 2 24.0 12 5.0 1 72.0 3 17.0 12 70.0 2 45.0 12 27.0 2 55.0 2 16.0 2 52.0 12 4.0 2 14.0 2 18.0 2 45.0 3 2.0 1 8.0 1 64.0 11 57.0 3 27.0 3 16.0 3 9.0 2 7.0 2]
Total: 900.0
Mean: 18.0
Genome size: 147
Size: 148
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4705.2631111
Median total errors in population: 1024.0
Error averages by case: (199.98357039999993 4.574 197.77165540000001 5.363 207.75390620000002 4.332 150.61029739999998 7.881 170.1837233999999 4.125 214.23870349999993 4.47 176.08444590000002 12.116 203.81379190000004 4.037 198.13423899999998 12.178 181.9131461 4.22 203.22251079999987 3.832 180.15559329999994 4.321 200.09828709999996 12.084 155.35778350000012 3.791 157.55399870000016 4.066 152.54944029999996 4.198 207.6269804999999 4.996 150.00568399999995 5.01 158.16967829999996 3.599 197.55648019999992 11.435 193.6646766999999 4.598 193.51748000000023 5.042 183.55025419999987 5.055 167.04022979999985 3.812 161.72055450000002 3.851)
Error minima by case: (5.5284 2 7.7559 1 34.0 1 0.0 0 0.8462 1 12.0002 1 0.0074 2 25.5434 1 0.3001 3 0.6074 1 1.7618 1 0.0 0 4.5506 2 0.406 1 0.0 0 0.0 0 0.4219 2 0.0 0 0.0 0 2.0599 8 11.2501 1 4.6662 2 1.1373 2 7.0 1 0.0 0)
Average genome size in population (length): 125.059
Average program size in population (points): 126.059
Average percent parens in population: 0.008
Minimum age in population: 48.35482266452163
Maximum age in population: 52.20058616087772
Average age in population: 50.38702957017848
Median age in population: 50.3944335145643
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.416
Error (vector) diversity:			 0.529
Behavioral diversity:				 0.53
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 56800391
--- Timings ---
Current time: 1529615392859 milliseconds
Total Time:         141.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.9 seconds, 38.2%
Fitness Testing:     69.4 seconds, 49.2%
Report:              17.8 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 37895.0
Test mean error for best: 18.94750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -21.2036084163
Correct output: -185.2914836352 | Program output: -152.2914836352
Correct output: 14.6061985977  | Program output: -14.3938014023
Correct output: 31.4151982204  | Program output: 31.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 11.8268053316 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 28.0722899136 
Correct output: -84.3925535393 | Program output: -62.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -90.7651499891
Correct output: -48.7209464994 | Program output: -1.7209464994 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -46.3703567122
Correct output: -24.1207371169 | Program output: -47.1207371169
Correct output: -135.4219119341 | Program output: -95.4219119341
Correct output: -21.9981612097 | Program output: -28.9981612097
Correct output: 80.3206826008  | Program output: 88.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -100.6662183691
Correct output: -100.9942315294 | Program output: -89.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -14.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 print_integer float_dec integer_inc float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec print_integer print_integer float_dec print_integer float_dec integer_inc integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc print_integer integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_yankdup integer_dup_items integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat)
Errors: [55.0 3 46.0 2 33.0 2 29.0 11 0.0 0 72.0 3 12.0 12 70.0 2 40.0 12 22.0 2 55.0 2 16.0 2 47.0 2 4.0 2 22.0 2 23.0 2 40.0 2 7.0 1 8.0 1 64.0 11 57.0 3 22.0 2 11.0 3 9.0 2 7.0 2]
Total: 859.0
Mean: 17.18
Genome size: 156
Size: 157
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4748.309957100002
Median total errors in population: 1008.0
Error averages by case: (200.4973316999999 4.451 203.6585216 5.259 207.15725199999991 4.306 161.45965709999993 9.13 168.43861619999998 3.963 215.1180076999999 4.378 173.75337150000004 12.111 207.4147895000001 3.881 195.6243569 12.132 186.57634429999996 4.206 203.06673109999997 3.671 179.41340299999987 4.269 197.72176159999992 11.906 153.9810999 3.645 167.6790212 4.054 162.42750900000001 4.194 207.2767173999998 4.964 158.94355919999995 4.832 148.01409209999989 3.281 206.87629309999997 11.371 196.5508593999999 4.51 192.89130450000013 5.036 182.90560769999988 5.074 167.2269812999999 3.667 161.7867681 3.559)
Error minima by case: (0.4716 1 14.7964 1 31.0 1 0.0 0 0.0 0 6.0002 1 0.0546 7 28.4566 1 0.0723 7 0.2975 1 1.7342 1 0.0 0 2.733 2 0.3608 1 0.0 0 0.0 0 14.461 2 0.0 0 0.0 0 1.7189 8 29.7499 1 1.3338 1 1.0058 2 3.6168 1 0.0 0)
Average genome size in population (length): 131.159
Average program size in population (points): 132.159
Average percent parens in population: 0.008
Minimum age in population: 49.54804844409227
Maximum age in population: 53.81655095005408
Average age in population: 51.77093782820617
Median age in population: 51.79833224674803
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.44
Error (vector) diversity:			 0.594
Behavioral diversity:				 0.595
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 60079366
--- Timings ---
Current time: 1529615398551 milliseconds
Total Time:         147.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.4 seconds, 37.6%
Fitness Testing:     72.8 seconds, 49.5%
Report:              18.8 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 37175.0
Test mean error for best: 18.58750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -23.2036084163
Correct output: -185.2914836352 | Program output: -154.2914836352
Correct output: 14.6061985977  | Program output: -16.3938014023
Correct output: 31.4151982204  | Program output: 29.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 9.8268053316  
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 26.0722899136 
Correct output: -84.3925535393 | Program output: -64.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -99.7651499891
Correct output: -48.7209464994 | Program output: -3.7209464994 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -41.3703567122
Correct output: -24.1207371169 | Program output: -49.1207371169
Correct output: -135.4219119341 | Program output: -97.4219119341
Correct output: -21.9981612097 | Program output: -30.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -102.6662183691
Correct output: -100.9942315294 | Program output: -91.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -23.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction print_integer} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 print_integer float_dec integer_inc float_frominteger integer_shove integer_inc float_dec integer_inc float_dec print_integer float_dec print_integer float_dec integer_inc integer_dec float_dec integer_inc float_dec float_inc integer_inc float_dec float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec print_integer integer_yank print_integer integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_add integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 44.0 2 31.0 2 31.0 12 2.0 2 72.0 3 10.0 12 70.0 2 38.0 12 20.0 1 55.0 2 7.0 3 45.0 2 4.0 2 17.0 2 25.0 2 38.0 3 9.0 2 1.0 2 64.0 11 57.0 3 20.0 1 9.0 3 9.0 2 2.0 1]
Total: 827.0
Mean: 16.54
Genome size: 175
Size: 176
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5447.675586800003
Median total errors in population: 1001.0
Error averages by case: (225.8868432999999 4.638 225.1115039000001 5.56 236.4981583999999 4.597 188.95998880000008 10.25 197.88651579999984 4.053 239.87236439999992 4.567 204.44744760000015 12.188 231.30352620000005 4.126 225.57450500000004 12.289 213.00846850000005 4.47 232.42812719999992 3.97 214.29514839999982 4.551 223.09728259999994 11.848 185.80328530000008 3.935 196.24656790000012 4.326 189.60872840000002 4.492 236.70442079999984 5.219 180.62363600000003 5.085 175.64769859999998 3.628 231.90228329999994 11.48 219.9754126 4.695 223.1772776000002 5.267 213.84718799999982 5.262 196.98368759999994 3.958 190.4975205999999 3.834)
Error minima by case: (9.5284 2 1.0307 1 27.0 1 0.0 0 0.0 0 16.0002 1 0.1732 8 22.4566 1 0.5897 8 0.3926 1 0.1317 1 0.0 0 1.7909 1 0.6392 1 0.0 0 0.0 0 0.5781 2 0.0 0 0.0 0 1.9401 8 8.9395 1 6.8507 1 5.0 2 7.0 1 0.0 0)
Average genome size in population (length): 139.308
Average program size in population (points): 140.308
Average percent parens in population: 0.007
Minimum age in population: 51.0285213238094
Maximum age in population: 55.18243742207414
Average age in population: 53.11513491967402
Median age in population: 53.1260256824753
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.961
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.961
Total error diversity:				 0.471
Error (vector) diversity:			 0.655
Behavioral diversity:				 0.658
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 63562066
--- Timings ---
Current time: 1529615404571 milliseconds
Total Time:         152.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.9 seconds, 37.3%
Fitness Testing:     76.2 seconds, 49.9%
Report:              19.5 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 36815.0
Test mean error for best: 18.40750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -27.2036084163
Correct output: -185.2914836352 | Program output: -158.2914836352
Correct output: 14.6061985977  | Program output: -20.3938014023
Correct output: 31.4151982204  | Program output: 25.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: 5.8268053316  
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 22.0722899136 
Correct output: -84.3925535393 | Program output: -68.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -99.7651499891
Correct output: -48.7209464994 | Program output: -7.7209464994 
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -13.3703567122
Correct output: -24.1207371169 | Program output: -53.1207371169
Correct output: -135.4219119341 | Program output: -101.4219119341
Correct output: -21.9981612097 | Program output: -34.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -106.6662183691
Correct output: -100.9942315294 | Program output: -95.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -23.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_inc})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc float_dec integer_inc print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_inc)
Errors: [55.0 3 40.0 1 27.0 2 35.0 13 6.0 2 72.0 3 6.0 12 70.0 2 34.0 12 16.0 2 55.0 2 7.0 3 41.0 2 4.0 2 11.0 2 29.0 2 34.0 2 13.0 2 1.0 2 64.0 11 57.0 3 16.0 2 5.0 3 9.0 2 2.0 1]
Total: 802.0
Mean: 16.04
Genome size: 157
Size: 158
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4741.528545900004
Median total errors in population: 968.0
Error averages by case: (200.86369679999987 4.352 197.81562110000004 5.029 205.06881469999993 4.249 172.54736849999998 10.925 165.87300939999994 3.704 215.4637656999999 4.322 170.10727870000002 12.117 206.73988190000014 3.894 192.0833382 12.116 181.7615009 4.166 206.3652996999999 3.633 182.6945041 4.149 188.3674572999999 11.045 158.9114925000001 3.584 169.74610590000015 3.984 163.67001090000005 4.118 205.1018034999998 4.884 158.17039399999996 4.314 152.4166249999999 3.332 206.82828990000002 11.373 196.61042539999988 4.5 190.94194260000017 4.903 181.05754519999982 4.996 169.10426789999988 3.623 162.52710609999988 3.379)
Error minima by case: (4.4716 1 4.2534 1 25.0 1 0.0 0 0.0 0 2.0002 1 0.1732 8 1.0 1 0.0153 2 3.2701 1 0.9343 1 0.0 0 0.0132 1 0.1635 1 0.0 0 0.0 0 0.5781 2 0.0 0 0.0 0 0.0599 2 12.0 1 0.1201 1 3.0 2 7.0 1 0.0 0)
Average genome size in population (length): 146.212
Average program size in population (points): 147.212
Average percent parens in population: 0.007
Minimum age in population: 52.37516900879564
Maximum age in population: 56.4016356284119
Average age in population: 54.40630655387491
Median age in population: 54.43255878514901
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.47
Error (vector) diversity:			 0.673
Behavioral diversity:				 0.676
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 67217391
--- Timings ---
Current time: 1529615410500 milliseconds
Total Time:         159.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.5 seconds, 36.8%
Fitness Testing:     79.8 seconds, 50.2%
Report:              20.6 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 36602.0
Test mean error for best: 18.30100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -35.2036084163
Correct output: -185.2914836352 | Program output: -166.2914836352
Correct output: 14.6061985977  | Program output: 17.6061985977 
Correct output: 31.4151982204  | Program output: 17.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: -2.1731946684 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 14.0722899136 
Correct output: -84.3925535393 | Program output: -76.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -109.7651499891
Correct output: -48.7209464994 | Program output: -15.7209464994
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -23.3703567122
Correct output: -24.1207371169 | Program output: -61.1207371169
Correct output: -135.4219119341 | Program output: -109.4219119341
Correct output: -21.9981612097 | Program output: -42.9981612097
Correct output: 80.3206826008  | Program output: 69.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -114.6662183691
Correct output: -100.9942315294 | Program output: -103.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -33.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_yank print_integer float_dec integer_inc integer_yank print_integer float_inc integer_inc integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 32.0 2 19.0 2 3.0 1 14.0 2 72.0 3 2.0 1 70.0 2 26.0 11 8.0 2 55.0 2 3.0 1 33.0 2 4.0 2 1.0 1 37.0 2 26.0 2 21.0 2 11.0 2 64.0 11 57.0 3 8.0 2 3.0 1 9.0 2 12.0 2]
Total: 711.0
Mean: 14.22
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4939.381674300002
Median total errors in population: 955.5
Error averages by case: (211.10377149999988 4.485 205.48884690000003 5.15 211.57484109999996 4.389 178.54676389999997 10.561 175.1754295999999 3.72 225.96013389999996 4.435 177.2416164999999 12.119 218.94217690000005 4.145 201.24562609999995 12.126 189.17096900000007 4.283 213.51175929999985 3.815 192.65613419999988 4.318 198.61196360000002 9.678 162.56644220000007 3.742 178.4061779000001 4.045 175.07638809999995 4.227 212.03114359999978 4.993 163.49834499999997 4.423 155.45133779999992 3.534 215.80667329999991 11.415 207.24566369999994 4.667 198.2102395000002 4.958 187.9581878999998 5.079 177.7791190999999 3.784 164.42492370000002 3.606)
Error minima by case: (0.4716 1 5.409 1 19.0 1 0.0 0 0.0 0 2.0E-4 1 0.1732 1 19.4566 1 0.0723 7 1.3926 1 1.2832 1 1.0 1 2.2091 1 0.3473 1 0.0 0 0.0 0 2.4219 1 0.0 0 0.0 0 0.9401 7 7.6894 1 6.421 1 0.0 1 7.0 1 0.0 0)
Average genome size in population (length): 152.792
Average program size in population (points): 153.792
Average percent parens in population: 0.007
Minimum age in population: 53.37516900879564
Maximum age in population: 57.63279943164525
Average age in population: 55.72857749629149
Median age in population: 55.74957323665149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.524
Error (vector) diversity:			 0.761
Behavioral diversity:				 0.763
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 71037216
--- Timings ---
Current time: 1529615416511 milliseconds
Total Time:         164.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.9 seconds, 36.3%
Fitness Testing:     83.5 seconds, 50.6%
Report:              21.4 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 35797.0
Test mean error for best: 17.89850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -39.2036084163
Correct output: -185.2914836352 | Program output: -170.2914836352
Correct output: 14.6061985977  | Program output: 27.6061985977 
Correct output: 31.4151982204  | Program output: 13.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: -6.1731946684 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 10.0722899136 
Correct output: -84.3925535393 | Program output: -80.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -99.7651499891
Correct output: -48.7209464994 | Program output: -19.7209464994
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -13.3703567122
Correct output: -24.1207371169 | Program output: -5.1207371169 
Correct output: -135.4219119341 | Program output: -113.4219119341
Correct output: -21.9981612097 | Program output: -46.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -118.6662183691
Correct output: -100.9942315294 | Program output: -107.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -23.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc float_dec integer_inc print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_add float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 28.0 2 15.0 2 13.0 2 18.0 2 72.0 3 6.0 1 70.0 2 22.0 11 4.0 1 55.0 2 7.0 3 29.0 2 4.0 2 11.0 2 19.0 2 22.0 2 25.0 2 1.0 2 64.0 11 57.0 3 4.0 2 7.0 1 9.0 2 2.0 1]
Total: 687.0
Mean: 13.74
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5669.562731200002
Median total errors in population: 929.5
Error averages by case: (234.99399609999986 4.768 229.15668559999995 5.27 241.7986355 4.691 209.7922366 10.411 201.41424539999997 4.094 249.0713855999999 4.698 197.0461465 12.059 242.62949850000007 4.465 224.8604416999999 12.228 219.45423100000002 4.559 247.83752889999988 4.091 223.13915879999985 4.565 226.58733809999995 8.28 201.2374665000001 4.036 209.9522794 4.221 207.61128349999996 4.534 241.5169643999998 5.16 195.15914469999993 4.676 183.29070279999988 3.718 243.17214699999994 11.483 232.13874369999988 4.924 228.3298970000002 5.083 219.12921789999982 5.319 212.89716709999985 4.095 202.1751888999999 3.743)
Error minima by case: (4.5284 2 0.8789 1 15.0 1 0.0 0 0.0 0 11.0002 1 0.0 0 20.4566 1 0.0723 8 0.6451 1 0.0128 1 0.0 0 4.7209 1 0.1924 1 0.0 0 0.0 0 0.4219 1 0.0 0 0.0 0 1.7189 2 13.2501 1 4.0 1 0.0 0 6.6806 1 0.0 0)
Average genome size in population (length): 158.648
Average program size in population (points): 159.648
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 59.00467447416668
Average age in population: 56.99264376797035
Median age in population: 57.09141126526993
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.515
Error (vector) diversity:			 0.773
Behavioral diversity:				 0.777
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 75003416
--- Timings ---
Current time: 1529615422706 milliseconds
Total Time:         171.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.5 seconds, 36.0%
Fitness Testing:     87.2 seconds, 51.0%
Report:              22.3 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 35797.0
Test mean error for best: 17.89850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -39.2036084163
Correct output: -185.2914836352 | Program output: -170.2914836352
Correct output: 14.6061985977  | Program output: 27.6061985977 
Correct output: 31.4151982204  | Program output: 13.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: -6.1731946684 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 10.0722899136 
Correct output: -84.3925535393 | Program output: -80.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -99.7651499891
Correct output: -48.7209464994 | Program output: -19.7209464994
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -13.3703567122
Correct output: -24.1207371169 | Program output: -5.1207371169 
Correct output: -135.4219119341 | Program output: -113.4219119341
Correct output: -21.9981612097 | Program output: -46.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -118.6662183691
Correct output: -100.9942315294 | Program output: -107.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -23.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc float_dec integer_inc print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_add float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 28.0 2 15.0 2 13.0 2 18.0 2 72.0 3 6.0 1 70.0 2 22.0 11 4.0 1 55.0 2 7.0 3 29.0 2 4.0 2 11.0 2 19.0 2 22.0 2 25.0 2 1.0 2 64.0 11 57.0 3 4.0 2 7.0 1 9.0 2 2.0 1]
Total: 687.0
Mean: 13.74
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5461.946457900002
Median total errors in population: 907.0
Error averages by case: (235.30814709999993 4.68 219.22407679999998 5.21 229.78792869999992 4.674 197.85085109999994 9.682 199.59945529999985 4.255 249.1013648999999 4.626 186.50711990000002 11.665 243.1077610000001 4.489 219.931477 12.123 206.8219638 4.574 234.34853939999988 4.024 209.1517755999999 4.514 217.86681790000006 6.836 183.2942766000001 3.947 200.20874560000013 4.139 200.79226699999995 4.609 229.07150099999984 5.107 191.23835319999995 4.743 185.67015219999996 3.697 236.0802710999999 11.491 232.19839319999997 4.952 215.09710860000024 4.935 206.3889964999999 5.221 198.92554879999986 4.025 192.44056559999999 3.715)
Error minima by case: (3.4716 1 1.2318 1 11.0 1 0.0 0 0.0 0 3.0002 1 0.0 0 18.4566 1 0.9277 2 0.0 0 0.8456 1 0.0 0 0.2791 1 0.3223 1 0.0 0 0.0 0 0.4219 1 0.0 0 0.0 0 2.0599 8 19.7499 1 0.0 0 0.0 0 1.8373 1 0.0 0)
Average genome size in population (length): 164.165
Average program size in population (points): 165.165
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 60.42432915991412
Average age in population: 58.28871428022411
Median age in population: 58.43623001330798
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.534
Error (vector) diversity:			 0.812
Behavioral diversity:				 0.814
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 79107566
--- Timings ---
Current time: 1529615429336 milliseconds
Total Time:         177.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.1 seconds, 35.6%
Fitness Testing:     91.0 seconds, 51.3%
Report:              23.2 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 35650.0
Test mean error for best: 17.82500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -44.2036084163
Correct output: -185.2914836352 | Program output: -175.2914836352
Correct output: 14.6061985977  | Program output: 27.6061985977 
Correct output: 31.4151982204  | Program output: 8.4151982204  
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: -11.1731946684
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 5.0722899136  
Correct output: -84.3925535393 | Program output: -85.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -99.7651499891
Correct output: -48.7209464994 | Program output: -24.7209464994
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -13.3703567122
Correct output: -24.1207371169 | Program output: -5.1207371169 
Correct output: -135.4219119341 | Program output: -118.4219119341
Correct output: -21.9981612097 | Program output: -51.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -123.6662183691
Correct output: -100.9942315294 | Program output: -112.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -23.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc float_dec integer_inc print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yank integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 23.0 2 10.0 1 13.0 2 23.0 2 72.0 3 11.0 2 70.0 2 17.0 12 1.0 1 55.0 2 7.0 3 24.0 2 4.0 2 11.0 2 19.0 2 17.0 2 30.0 1 1.0 2 64.0 11 57.0 3 1.0 1 12.0 2 9.0 2 2.0 1]
Total: 676.0
Mean: 13.52
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5820.5414906000005
Median total errors in population: 954.0
Error averages by case: (250.4800495999999 4.845 232.8010774 5.415 243.46419829999988 4.751 213.87975670000006 8.683 210.7804587999998 4.452 264.91545829999984 4.818 194.1238485 11.081 257.9078718000001 4.88 229.05635849999993 12.051 220.6144597999999 4.608 254.09135879999994 4.213 223.6195983999998 4.601 233.99020029999994 6.398 202.70221490000014 4.144 210.82971660000007 4.155 209.8320544 4.837 242.89627019999972 5.03 206.35746450000002 5.07 198.60849689999998 3.873 251.53312870000002 11.498 247.73982019999988 5.365 229.77718770000027 4.93 220.94491449999967 5.134 220.3600375999997 4.241 206.30248919999985 3.86)
Error minima by case: (4.0 1 4.7964 1 10.0 1 0.0 0 0.0 0 12.0002 2 0.0 0 11.6302 1 0.5646 9 0.8819 1 1.9343 1 0.0 0 0.2965 1 0.6771 1 0.0 0 0.0 0 0.4219 1 0.0 0 0.0 0 5.4094 7 5.2497 1 1.0 1 0.0 0 2.372 1 0.0 0)
Average genome size in population (length): 168.182
Average program size in population (points): 169.182
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 61.28589573858335
Average age in population: 58.88438998749105
Median age in population: 59.74956765051138
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.587
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.822
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 83312091
--- Timings ---
Current time: 1529615435762 milliseconds
Total Time:         184.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.8 seconds, 35.2%
Fitness Testing:     94.8 seconds, 51.5%
Report:              24.4 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 35633.0
Test mean error for best: 17.81650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -41.2036084163
Correct output: -185.2914836352 | Program output: -172.2914836352
Correct output: 14.6061985977  | Program output: 21.6061985977 
Correct output: 31.4151982204  | Program output: 11.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: -8.1731946684 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 8.0722899136  
Correct output: -84.3925535393 | Program output: -82.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -105.7651499891
Correct output: -48.7209464994 | Program output: -21.7209464994
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -19.3703567122
Correct output: -24.1207371169 | Program output: -11.1207371169
Correct output: -135.4219119341 | Program output: -115.4219119341
Correct output: -21.9981612097 | Program output: -48.9981612097
Correct output: 80.3206826008  | Program output: 73.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -120.6662183691
Correct output: -100.9942315294 | Program output: -109.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -29.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dup_items integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [55.0 3 26.0 2 13.0 2 7.0 2 20.0 1 72.0 3 8.0 1 70.0 2 20.0 12 2.0 1 55.0 2 1.0 1 27.0 2 4.0 2 5.0 2 13.0 2 20.0 1 27.0 2 7.0 2 64.0 11 57.0 3 2.0 1 9.0 1 9.0 2 8.0 1]
Total: 665.0
Mean: 13.3
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6156.182615600001
Median total errors in population: 880.0
Error averages by case: (262.6515577999999 4.998 249.03220830000006 5.384 256.6400040999999 5.065 226.69555930000004 7.933 232.10389839999974 4.79 276.2933689999998 4.961 215.50703790000003 9.852 266.48116569999996 4.846 246.06523809999996 11.882 231.5355576 4.89 263.45092079999995 4.368 233.73210729999985 4.773 249.01892720000006 6.007 210.25529720000014 4.319 223.34207070000002 4.382 224.55050059999994 5.204 255.8831831999997 5.266 225.4756045000001 5.151 216.34117290000003 4.08 263.3325612 11.444 257.28840889999975 5.399 242.77533610000032 5.166 234.6267836999998 5.201 229.0004092999998 4.383 220.3797357999999 3.98)
Error minima by case: (0.5284 2 1.8196 1 8.0 1 0.0 0 0.0 0 7.0002 1 0.0 0 4.4566 1 0.1264 8 0.0 0 1.0657 1 0.0 0 0.4303 1 1.1635 1 0.0 0 0.0 0 5.4219 1 0.0 0 0.0 0 2.0599 7 5.7499 1 0.0 0 0.0 0 1.374 1 0.0 0)
Average genome size in population (length): 172.174
Average program size in population (points): 173.174
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 62.69784363882172
Average age in population: 59.56576437950275
Median age in population: 60.95019541302531
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.564
Error (vector) diversity:			 0.786
Behavioral diversity:				 0.79
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 87616391
--- Timings ---
Current time: 1529615442366 milliseconds
Total Time:         190.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.4 seconds, 34.9%
Fitness Testing:     98.7 seconds, 51.8%
Report:              25.3 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 35633.0
Test mean error for best: 17.81650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 77.4715741385 
Correct output: -67.2036084163 | Program output: -41.2036084163
Correct output: -185.2914836352 | Program output: -172.2914836352
Correct output: 14.6061985977  | Program output: 21.6061985977 
Correct output: 31.4151982204  | Program output: 11.4151982204 
Correct output: 159.9998373306 | Program output: 87.9998373306 
Correct output: -0.1731946684  | Program output: -8.1731946684 
Correct output: 113.4565963553 | Program output: 43.4565963553 
Correct output: -11.9277100864 | Program output: 8.0722899136  
Correct output: -84.3925535393 | Program output: -82.3925535393
Correct output: -18.9342988463 | Program output: -73.9342988463
Correct output: -106.7651499891 | Program output: -105.7651499891
Correct output: -48.7209464994 | Program output: -21.7209464994
Correct output: -17.8365333426 | Program output: -21.8365333426
Correct output: -24.3703567122 | Program output: -19.3703567122
Correct output: -24.1207371169 | Program output: -11.1207371169
Correct output: -135.4219119341 | Program output: -115.4219119341
Correct output: -21.9981612097 | Program output: -48.9981612097
Correct output: 80.3206826008  | Program output: 73.3206826008 
Correct output: 59.940066734   | Program output: -4.059933266  
Correct output: 101.7498992299 | Program output: 44.7498992299 
Correct output: -122.6662183691 | Program output: -120.6662183691
Correct output: -100.9942315294 | Program output: -109.9942315294
Correct output: -57.1627018111 | Program output: -66.1627018111
Correct output: -21.8153206922 | Program output: -29.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove float_rot float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dup_items integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [55.0 3 26.0 2 13.0 2 7.0 2 20.0 1 72.0 3 8.0 1 70.0 2 20.0 12 2.0 1 55.0 2 1.0 1 27.0 2 4.0 2 5.0 2 13.0 2 20.0 1 27.0 2 7.0 2 64.0 11 57.0 3 2.0 1 9.0 1 9.0 2 8.0 1]
Total: 665.0
Mean: 13.3
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5577.758468500001
Median total errors in population: 869.0
Error averages by case: (239.05244549999986 4.898 218.83106730000011 5.187 234.3350519999998 4.921 199.67916580000002 6.935 207.2401053999998 4.676 253.06789209999994 4.888 190.4388872000001 8.255 245.10742940000014 4.826 216.57467029999992 11.611 209.59244689999986 4.712 242.69457679999985 4.254 214.37083019999972 4.589 222.24906120000009 5.593 193.75274100000019 4.185 200.29818330000018 4.264 210.301928 4.937 232.25711379999962 5.077 204.36183390000002 4.995 189.0363152 4.089 240.36029280000002 11.291 234.98148289999992 5.403 219.2109401000003 4.972 212.44992449999967 4.797 209.7315358999997 4.295 200.21854699999983 3.914)
Error minima by case: (2.4716 1 2.1549 1 8.0 1 0.0 0 0.0 0 4.0002 1 0.0 0 11.4566 1 0.0723 2 0.0 0 1.3159 1 0.0 0 0.4328 1 1.4798 1 0.0 0 0.0 0 7.4219 1 0.0 0 0.0 0 1.0204 3 12.7499 1 0.0 0 0.0 0 0.235 1 0.0 0)
Average genome size in population (length): 176.229
Average program size in population (points): 177.229
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 64.18107800592566
Average age in population: 60.42454189673001
Median age in population: 62.21916821358025
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.564
Error (vector) diversity:			 0.791
Behavioral diversity:				 0.794
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 92022016
--- Timings ---
Current time: 1529615448791 milliseconds
Total Time:         197.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.1 seconds, 34.5%
Fitness Testing:    102.6 seconds, 52.0%
Report:              26.4 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 34971.0
Test mean error for best: 17.48550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: -41.2036084163
Correct output: -185.2914836352 | Program output: -172.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 11.4151982204 
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: -8.1731946684 
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 8.0722899136  
Correct output: -84.3925535393 | Program output: -82.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -21.7209464994
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -115.4219119341
Correct output: -21.9981612097 | Program output: -48.9981612097
Correct output: 80.3206826008  | Program output: 70.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -120.6662183691
Correct output: -100.9942315294 | Program output: -109.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -32.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc print_integer float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_dec integer_inc float_dec integer_mod integer_yank print_integer integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [54.0 3 26.0 2 13.0 2 4.0 1 20.0 1 71.0 3 8.0 1 69.0 3 20.0 12 2.0 1 54.0 2 2.0 1 27.0 2 3.0 2 2.0 1 10.0 1 20.0 1 27.0 2 10.0 1 63.0 11 56.0 3 2.0 1 9.0 1 8.0 2 11.0 2]
Total: 653.0
Mean: 13.06
Genome size: 192
Size: 193
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6412.587985600003
Median total errors in population: 949.0
Error averages by case: (270.8154962 5.243 254.05281309999998 5.725 266.8101842999999 5.38 235.4357777000001 6.774 248.05967709999996 5.039 284.34415319999994 5.266 231.2346842000001 7.485 275.9728810000001 5.272 255.37723309999987 11.924 241.9719308 5.051 269.97028029999996 4.639 247.12629329999984 4.959 258.11035790000005 6.156 214.92279040000008 4.606 232.24110830000012 4.693 241.7865184 5.306 264.7507922999999 5.486 239.37336429999996 5.502 233.12553849999995 4.475 266.21181380000013 11.498 265.95584499999984 5.742 252.23305530000022 5.42 247.02346129999984 5.135 237.24157659999995 4.695 232.65535919999982 4.314)
Error minima by case: (16.5284 1 0.6709 1 5.0 1 0.0 0 0.0 0 23.0002 1 0.0 0 6.4566 1 0.1284 8 0.0 0 1.6134 1 0.0 0 2.3096 1 0.8365 1 0.0 0 0.0 0 0.5781 1 0.0018 1 0.0 0 2.0599 2 0.0 0 0.0 0 0.0 0 4.8373 1 0.0 0)
Average genome size in population (length): 176.581
Average program size in population (points): 177.581
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 65.32425654659664
Average age in population: 60.36039832624034
Median age in population: 63.53102724084783
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.539
Error (vector) diversity:			 0.788
Behavioral diversity:				 0.791
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 96436299
--- Timings ---
Current time: 1529615455600 milliseconds
Total Time:         204.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.7 seconds, 34.2%
Fitness Testing:    106.9 seconds, 52.4%
Report:              27.3 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 35036.0
Test mean error for best: 17.51800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -49.9981612097
Correct output: 80.3206826008  | Program output: 70.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -32.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_dec float_dec integer_inc integer_sub float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_yank integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc print_integer integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [54.0 3 25.0 2 12.0 2 4.0 1 21.0 2 71.0 3 9.0 1 69.0 3 19.0 12 1.0 1 54.0 2 2.0 1 26.0 2 3.0 2 2.0 1 10.0 1 19.0 2 28.0 2 10.0 1 63.0 11 56.0 3 1.0 1 10.0 1 8.0 2 11.0 2]
Total: 652.0
Mean: 13.04
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6129.8610399
Median total errors in population: 905.5
Error averages by case: (258.6509994999999 5.18 243.95793819999992 5.576 251.5717166 5.275 225.37504140000019 6.567 234.16599099999993 4.943 272.75655559999996 5.176 222.5460209000002 6.301 264.2599828 5.211 237.7768029999999 11.873 230.53712969999992 4.911 259.2500449999998 4.591 237.08490469999992 4.903 241.74584200000027 5.999 207.0959751000001 4.547 225.2527695000002 4.622 234.12561880000004 5.037 249.84235999999976 5.424 232.00177549999995 5.352 223.37304070000005 4.42 255.7602465999999 11.442 253.95732529999995 5.679 237.5448645000003 5.249 234.37685319999986 4.937 226.57484179999986 4.632 228.18239849999992 4.247)
Error minima by case: (2.5284 1 1.2211 1 4.0 1 1.0 1 0.0 0 1.9998 1 0.0 0 15.4566 1 0.0723 2 0.0 0 0.0657 1 0.0 0 0.8136 1 0.1635 1 0.0 0 0.0 0 1.1529 1 0.0018 1 0.0 0 1.0599 8 3.7499 1 0.0 0 0.0 0 2.5996 1 0.0 0)
Average genome size in population (length): 176.023
Average program size in population (points): 177.023
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 66.85378318621565
Average age in population: 60.21727961024158
Median age in population: 64.63480019506409
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.518
Error (vector) diversity:			 0.789
Behavioral diversity:				 0.796
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 100836524
--- Timings ---
Current time: 1529615462512 milliseconds
Total Time:         210.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.2 seconds, 33.8%
Fitness Testing:    111.1 seconds, 52.8%
Report:              28.2 seconds, 13.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 35096.0
Test mean error for best: 17.54800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 70.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -32.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_yank integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [54.0 3 24.0 2 11.0 2 4.0 1 22.0 2 71.0 3 10.0 1 69.0 3 18.0 12 0.0 0 54.0 2 2.0 1 25.0 2 3.0 2 2.0 1 10.0 1 18.0 2 29.0 2 10.0 1 63.0 11 56.0 3 0.0 0 11.0 2 8.0 2 11.0 2]
Total: 648.0
Mean: 12.96
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6865.154413000005
Median total errors in population: 1159.0
Error averages by case: (286.71495469999985 5.629 271.20773910000014 6.055 284.89170569999993 5.817 251.0203106000001 6.844 258.8703640999998 5.482 300.85000619999994 5.602 253.77486609999997 6.714 294.48199479999994 5.668 264.5696762 11.929 260.1074982999999 5.369 288.2208624 4.973 267.1218654999998 5.372 271.6321306 6.545 238.20246760000018 4.938 252.3130489000002 5.018 257.52314939999997 5.413 281.7094431999997 5.916 261.48135780000007 5.896 246.2432898 4.818 287.4543047 11.535 285.2078839999998 6.077 269.82825390000033 5.733 267.0067661999997 5.498 257.4893201999998 5.053 254.67015299999974 4.667)
Error minima by case: (7.4716 1 0.2036 1 2.0 1 0.0 0 0.0 0 0.9998 1 0.0 0 10.4566 1 0.0723 1 0.0 0 1.5272 1 0.0 0 0.376 1 1.0 1 0.0 0 0.0 0 9.0 1 0.0 0 0.0 0 2.0599 2 11.7499 1 0.0 0 0.0 0 4.1627 1 0.0 0)
Average genome size in population (length): 174.197
Average program size in population (points): 175.197
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 67.90860434481908
Average age in population: 59.51438917763608
Median age in population: 65.91095922800534
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.534
Error (vector) diversity:			 0.786
Behavioral diversity:				 0.791
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 105191074
--- Timings ---
Current time: 1529615469026 milliseconds
Total Time:         217.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.7 seconds, 33.5%
Fitness Testing:    115.0 seconds, 52.9%
Report:              29.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 34835.0
Test mean error for best: 17.41750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 70.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -32.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_div} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc float_dec integer_inc print_integer float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank integer_div in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_shove print_integer print_float)
Errors: [54.0 3 24.0 2 11.0 2 4.0 1 22.0 2 71.0 3 10.0 1 69.0 3 18.0 12 0.0 0 54.0 2 2.0 1 25.0 2 3.0 2 2.0 1 10.0 1 18.0 2 29.0 2 10.0 1 63.0 11 56.0 3 0.0 0 11.0 2 8.0 2 11.0 2]
Total: 648.0
Mean: 12.96
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6280.240832100002
Median total errors in population: 935.0
Error averages by case: (265.55156839999984 5.411 247.91278130000006 5.669 256.97353009999983 5.417 230.36275230000007 6.206 237.57882159999983 5.05 279.2357240999998 5.351 231.0915783000001 5.99 274.2173229000001 5.492 241.17204650000002 11.826 235.13892029999994 4.856 265.84837479999993 4.699 243.3340012999997 5.089 248.99483500000017 6.019 216.26392630000018 4.638 229.32416060000008 4.749 233.344906 5.09 255.5635715999996 5.537 237.9964354 5.54 226.46626560000007 4.597 266.9400841 11.374 263.4144474999999 5.835 243.30196070000028 5.242 242.19752169999958 5.09 231.6236025999997 4.722 232.5126930999998 4.39)
Error minima by case: (2.5284 1 0.2036 1 1.0 1 0.0 0 0.0 0 0.9998 1 0.0 0 4.4566 1 0.9085 1 0.0 0 2.258 1 0.0 0 0.6904 1 0.1635 1 0.0 0 0.0 0 8.0 1 0.0 0 0.0 0 0.9401 8 2.7499 1 0.0 0 0.0 0 1.1627 1 0.0 0)
Average genome size in population (length): 175.853
Average program size in population (points): 176.853
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 69.23446576875997
Average age in population: 61.45321508979229
Median age in population: 67.21121037881802
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.503
Error (vector) diversity:			 0.749
Behavioral diversity:				 0.752
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 109586849
--- Timings ---
Current time: 1529615475509 milliseconds
Total Time:         223.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.4 seconds, 33.2%
Fitness Testing:    119.0 seconds, 53.1%
Report:              30.5 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 35393.0
Test mean error for best: 17.69650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 78.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 17.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 88.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 44.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -72.9342988463
Correct output: -106.7651499891 | Program output: -109.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -20.8365333426
Correct output: -24.3703567122 | Program output: -23.3703567122
Correct output: -24.1207371169 | Program output: -15.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 69.3206826008 
Correct output: 59.940066734   | Program output: -3.059933266  
Correct output: 101.7498992299 | Program output: 45.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -65.1627018111
Correct output: -21.8153206922 | Program output: -33.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yank} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_min} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_dec float_dec integer_inc integer_sub float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_yank integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc print_integer integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_min integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [54.0 3 24.0 2 11.0 2 3.0 1 22.0 2 71.0 3 10.0 1 69.0 3 18.0 12 0.0 0 54.0 2 3.0 1 25.0 2 3.0 2 1.0 1 9.0 2 18.0 2 29.0 2 11.0 2 63.0 11 56.0 3 0.0 0 11.0 2 8.0 2 12.0 2]
Total: 650.0
Mean: 13.0
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6457.698858900001
Median total errors in population: 956.0
Error averages by case: (271.6834602999998 5.537 254.1851612000001 5.894 263.62474749999996 5.534 234.81304580000017 6.382 241.0584134999999 5.226 285.7818030999998 5.441 239.26935690000008 6.154 278.42438770000007 5.705 244.8978045 12.016 241.1535564 5.005 276.19851249999977 4.819 250.12560149999982 5.201 256.6287567000001 6.351 229.9373113000002 4.748 237.33246310000015 4.882 238.44741970000007 5.358 260.8151241999999 5.663 244.88728160000002 5.786 232.97714779999998 4.705 276.0118716 11.436 268.26363559999993 6.027 249.68910010000025 5.32 248.8933643999998 5.272 244.70088799999985 4.871 239.98464389999998 4.581)
Error minima by case: (2.4716 1 1.6843 1 4.0 1 0.0 0 0.0 0 4.0002 1 0.0 0 6.4566 1 0.1327 2 0.0 0 1.3159 1 0.0 0 1.1414 1 0.1795 1 0.0 0 0.1207 1 5.4219 1 0.1298 1 0.0 0 1.0599 7 7.7499 1 0.0 0 0.0 0 0.5119 1 0.0 0)
Average genome size in population (length): 173.44
Average program size in population (points): 174.44
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 70.67163196138821
Average age in population: 60.97420218908448
Median age in population: 68.45961700709859
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.481
Error (vector) diversity:			 0.716
Behavioral diversity:				 0.723
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 113922599
--- Timings ---
Current time: 1529615481785 milliseconds
Total Time:         230.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        75.9 seconds, 33.0%
Fitness Testing:    122.8 seconds, 53.4%
Report:              31.3 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 33981.0
Test mean error for best: 16.99050
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -41.2036084163
Correct output: -185.2914836352 | Program output: -172.2914836352
Correct output: 14.6061985977  | Program output: 20.6061985977 
Correct output: 31.4151982204  | Program output: 11.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -8.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 8.0722899136  
Correct output: -84.3925535393 | Program output: -82.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -106.7651499891
Correct output: -48.7209464994 | Program output: -21.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -20.3703567122
Correct output: -24.1207371169 | Program output: -12.1207371169
Correct output: -135.4219119341 | Program output: -115.4219119341
Correct output: -21.9981612097 | Program output: -48.9981612097
Correct output: 80.3206826008  | Program output: 72.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -120.6662183691
Correct output: -100.9942315294 | Program output: -109.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -30.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_371} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_yankdup})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec integer_inc print_integer integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_flush integer_inc float_dec tagged_371 float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_yankdup integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat float_yankdup)
Errors: [53.0 3 26.0 2 13.0 2 6.0 2 20.0 1 70.0 2 8.0 1 68.0 3 20.0 12 2.0 1 53.0 2 0.0 0 27.0 2 2.0 1 4.0 1 12.0 2 20.0 1 27.0 2 8.0 2 62.0 11 55.0 3 2.0 1 9.0 1 7.0 2 9.0 2]
Total: 645.0
Mean: 12.9
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6346.124050800001
Median total errors in population: 961.5
Error averages by case: (267.41301939999977 5.558 249.495852 5.779 262.01745339999974 5.624 230.7041669 6.309 237.0355008999998 5.259 281.67693019999984 5.497 232.21170670000004 6.067 274.9641380000001 5.802 238.29878369999994 11.984 239.22860459999993 5.064 269.68320639999996 4.882 246.90585119999974 5.103 249.7847176 6.265 221.5644758000002 4.844 232.22703590000035 4.892 236.62245740000006 5.231 258.6147551999996 5.766 242.3950392000001 5.646 229.80532540000013 4.876 266.39029790000006 11.428 265.3648510999999 6.008 247.27994810000033 5.425 247.8572255999995 5.409 237.81526599999978 4.95 232.42644219999974 4.673)
Error minima by case: (9.0569 1 0.7964 1 2.0 1 0.0 0 0.0 1 5.0003 1 0.0 0 9.4566 1 0.2956 1 0.0 0 1.32 1 0.0 0 0.4723 1 1.1635 1 0.0 0 0.2961 1 3.4219 1 0.0018 1 0.0 0 2.0599 4 10.7499 1 0.0 0 0.0 0 2.1627 1 0.0 0)
Average genome size in population (length): 174.027
Average program size in population (points): 175.027
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 71.95406761120438
Average age in population: 61.69925010717643
Median age in population: 69.85041247748033
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.512
Error (vector) diversity:			 0.762
Behavioral diversity:				 0.766
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 118272706
--- Timings ---
Current time: 1529615488005 milliseconds
Total Time:         236.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        77.4 seconds, 32.8%
Fitness Testing:    126.6 seconds, 53.6%
Report:              32.2 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 34453.0
Test mean error for best: 17.22650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -49.9981612097
Correct output: 80.3206826008  | Program output: 71.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -31.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_rot integer_swap integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec float_frominteger float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod integer_max integer_inc float_dec float_dec integer_inc float_dec integer_yank integer_shove integer_inc float_dec integer_inc float_dec integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_swap float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dup_items integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 25.0 2 12.0 2 5.0 1 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 1.0 1 26.0 2 2.0 1 3.0 1 11.0 2 19.0 2 28.0 2 9.0 2 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 10.0 1]
Total: 643.0
Mean: 12.86
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 7413.1420666
Median total errors in population: 1167.5
Error averages by case: (309.73176439999975 5.866 292.66779980000024 6.334 305.8220824999996 6.063 276.5770673000001 6.723 282.0171361999996 5.69 322.8831419999998 5.783 278.6515256000002 6.544 316.79509759999985 6.12 284.6489892999999 12.124 279.4078216 5.475 311.03749750000003 5.221 289.89709189999985 5.4 292.0962342999998 6.764 260.6922771000002 5.143 268.6678098000002 5.21 275.26253360000027 5.606 303.2380563999998 6.169 282.72148129999994 6.143 272.3278916 5.192 302.96269880000006 11.532 308.0072874999999 6.378 292.16342349999996 5.843 291.80794539999965 5.873 280.2957748999997 5.264 275.2476367 5.054)
Error minima by case: (12.4716 1 0.7964 1 2.0 1 0.0 0 0.4152 1 5.9998 2 0.0 0 14.4566 1 0.0723 1 0.0 0 1.0657 1 0.0 0 0.0665 1 1.5857 1 0.0 0 0.0 0 0.4219 1 0.0018 1 0.0 0 1.0599 7 15.7499 1 0.0 0 0.0 0 7.0 1 0.0 0)
Average genome size in population (length): 170.001
Average program size in population (points): 171.001
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 73.67781891829544
Average age in population: 61.00729073529089
Median age in population: 71.1024161779159
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.519
Error (vector) diversity:			 0.735
Behavioral diversity:				 0.744
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 122522481
--- Timings ---
Current time: 1529615494241 milliseconds
Total Time:         242.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        79.0 seconds, 32.5%
Fitness Testing:    130.5 seconds, 53.8%
Report:              33.1 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 34537.0
Test mean error for best: 17.26850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -44.2036084163
Correct output: -185.2914836352 | Program output: -175.2914836352
Correct output: 14.6061985977  | Program output: 20.6061985977 
Correct output: 31.4151982204  | Program output: 8.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -11.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 5.0722899136  
Correct output: -84.3925535393 | Program output: -85.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -106.7651499891
Correct output: -48.7209464994 | Program output: -24.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -20.3703567122
Correct output: -24.1207371169 | Program output: -12.1207371169
Correct output: -135.4219119341 | Program output: -118.4219119341
Correct output: -21.9981612097 | Program output: -51.9981612097
Correct output: 80.3206826008  | Program output: 72.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -123.6662183691
Correct output: -100.9942315294 | Program output: -112.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -30.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_dec float_dec integer_inc integer_sub float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec print_integer float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec float_rot float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_inc integer_yank float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec integer_yank float_dec integer_rot integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec integer_inc float_dup_items integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 23.0 2 10.0 1 6.0 2 23.0 2 70.0 2 11.0 2 68.0 3 17.0 12 1.0 1 53.0 2 0.0 0 24.0 2 2.0 1 4.0 1 12.0 2 17.0 2 30.0 1 8.0 2 62.0 11 55.0 3 1.0 1 12.0 2 7.0 2 9.0 2]
Total: 642.0
Mean: 12.84
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6932.285073200002
Median total errors in population: 1187.1034
Error averages by case: (291.15207019999986 5.712 274.7694267999999 6.294 286.5067181999998 5.98 252.93798060000012 6.528 256.7594852999998 5.591 304.9158675999999 5.633 256.78078160000007 6.624 296.44772939999984 6.078 255.83243749999994 12.063 264.0257441999999 5.369 290.34710069999994 5.085 269.5965665999997 5.354 271.3059478 6.714 246.24941160000017 5.015 253.2021096000003 5.133 260.1422471999999 5.627 283.0508355999998 6.127 265.7259328 6.158 257.72087250000004 5.177 291.7473461000003 11.493 286.8102223999998 6.265 271.5744408000002 5.779 270.35071849999974 5.81 260.4014732999997 5.141 258.08760629999983 5.094)
Error minima by case: (0.4716 1 0.2036 1 3.0 1 0.0 0 0.0 0 6.0002 1 0.0 0 0.4566 1 0.0723 1 0.0 0 0.9343 1 0.0 0 0.7209 1 0.1635 1 0.0 0 0.0 0 8.5781 1 0.0018 1 0.0 0 1.0599 7 1.7499 1 0.0 0 0.0 0 4.8373 1 0.0 0)
Average genome size in population (length): 173.79
Average program size in population (points): 174.79
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 74.52412854119295
Average age in population: 63.54759441061922
Median age in population: 72.46328702554472
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.533
Error (vector) diversity:			 0.767
Behavioral diversity:				 0.772
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 126867181
--- Timings ---
Current time: 1529615500843 milliseconds
Total Time:         249.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        80.5 seconds, 32.3%
Fitness Testing:    134.6 seconds, 54.0%
Report:              34.0 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 34318.0
Test mean error for best: 17.15900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 20.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -106.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -20.3703567122
Correct output: -24.1207371169 | Program output: -12.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 72.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -30.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction integer_inc} {:instruction integer_yank} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_add in1 integer_inc integer_yank in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc integer_yank print_integer float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank float_yankdup integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_add integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_min float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc integer_yank float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_min float_yankdup print_integer float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dec integer_yank float_dec in2 integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dup_items integer_inc float_dec integer_dup_times float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 6.0 2 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 0.0 0 25.0 2 2.0 1 4.0 1 12.0 2 18.0 2 29.0 2 8.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 9.0 2]
Total: 640.0
Mean: 12.8
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 7044.0019295
Median total errors in population: 1163.0
Error averages by case: (299.87787709999986 5.787 273.5380159000001 6.286 289.88099399999965 5.95 256.56176890000006 6.621 269.5182231999996 5.6 313.1672345999998 5.701 262.1712809000001 6.617 304.8001796 6.2 269.5459793 12.124 262.1188039999998 5.302 297.26954149999983 5.166 276.8872937999997 5.381 277.1920254000001 6.75 246.3948735000001 5.055 253.40319600000032 5.151 256.56254140000004 5.614 286.90233879999954 6.055 264.58998020000024 6.084 262.68216450000006 5.197 289.36975859999995 11.515 295.36221259999985 6.373 274.5326024000004 5.708 274.9179482999995 5.758 267.71123699999964 5.227 262.70685799999967 5.115)
Error minima by case: (18.4716 1 0.7964 1 1.0 1 0.0 0 0.0 0 11.9998 1 0.0 0 2.5434 1 0.0562 1 0.0 0 3.0453 1 0.0 0 0.2791 1 2.0 1 0.0 0 0.5272 1 0.7624 1 0.1516 1 0.0 0 0.0599 7 1.2501 1 0.0 0 0.0 0 7.0 1 0.0 0)
Average genome size in population (length): 172.412
Average program size in population (points): 173.412
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 75.7883923499767
Average age in population: 64.0391042595512
Median age in population: 73.77256020898243
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.535
Error (vector) diversity:			 0.76
Behavioral diversity:				 0.766
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 131177321
--- Timings ---
Current time: 1529615507103 milliseconds
Total Time:         255.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        82.0 seconds, 32.1%
Fitness Testing:    138.5 seconds, 54.2%
Report:              34.9 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 34279.0
Test mean error for best: 17.13950
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -49.9981612097
Correct output: 80.3206826008  | Program output: 70.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -18.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_div} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec integer_yank integer_shove integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc integer_inc float_dec integer_inc integer_yank integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_div float_dec in2 integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 25.0 2 12.0 2 4.0 1 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 2.0 1 26.0 2 2.0 1 2.0 1 10.0 1 19.0 2 28.0 2 10.0 1 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 3.0 2]
Total: 634.0
Mean: 12.68
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6795.0561681
Median total errors in population: 993.0
Error averages by case: (285.96069969999985 5.606 268.5465268000001 6.022 277.6189072999998 5.691 251.66410440000004 6.406 261.6326551999998 5.315 300.05469089999985 5.47 252.99069649999993 6.292 293.2519001999999 5.925 257.59895389999997 12.029 256.3538309999999 5.107 283.25978949999995 4.955 262.0274681999997 5.045 266.6593065 6.494 237.99244850000017 4.832 248.66687430000025 4.895 252.31813089999991 5.335 275.3211629999998 5.793 259.73502700000006 5.818 251.55063810000001 4.963 285.4696024 11.476 283.8693668999998 6.06 263.9652602000003 5.439 263.3886227999996 5.506 252.57461469999976 4.982 252.28888919999986 4.84)
Error minima by case: (23.5284 1 1.2036 1 1.0 1 0.0 0 0.0 0 18.9998 1 0.0 0 10.4566 1 0.1327 1 0.0 0 0.607 1 0.0 0 0.1328 1 0.1593 1 0.0 0 0.0 0 2.5781 1 0.0 0 0.0 0 1.9401 7 4.9704 1 0.0 0 0.0 0 5.1627 1 0.0 0)
Average genome size in population (length): 174.478
Average program size in population (points): 175.478
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 77.18706307770644
Average age in population: 66.18329005470606
Median age in population: 75.0792415115694
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.516
Error (vector) diversity:			 0.744
Behavioral diversity:				 0.752
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 135539129
--- Timings ---
Current time: 1529615513497 milliseconds
Total Time:         261.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        83.5 seconds, 31.9%
Fitness Testing:    142.5 seconds, 54.4%
Report:              35.7 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 34053.0
Test mean error for best: 17.02650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 25.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -101.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -15.3703567122
Correct output: -24.1207371169 | Program output: -7.1207371169 
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction float_inc} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc float_inc print_integer print_float)
Errors: [53.0 3 25.0 2 12.0 2 11.0 2 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 5.0 1 26.0 2 2.0 1 9.0 2 17.0 2 19.0 2 1.0 1 3.0 2 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 4.0 1]
Total: 627.0
Mean: 12.54
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6030.205480700001
Median total errors in population: 945.0
Error averages by case: (258.0425719999999 5.365 231.37309600000006 5.664 248.2589984 5.369 212.08676670000003 5.989 231.09919289999982 5.146 272.47908319999976 5.178 223.4951480000001 5.841 263.58346590000014 5.713 229.73175380000004 11.857 222.64410249999995 4.755 257.28113429999985 4.671 234.4023440999999 4.803 234.5870024 6.079 214.87585420000013 4.498 212.37037140000035 4.545 218.01230110000003 5.108 247.05811829999976 5.513 224.50922899999998 5.458 224.2462355000001 4.792 253.7303727 11.384 253.82787889999994 5.812 235.26606210000023 5.064 235.05759599999968 5.22 225.4161569999998 4.725 223.52464429999966 4.697)
Error minima by case: (13.9919 1 0.699 1 2.0 1 0.0 0 0.0 0 11.9998 1 0.0 0 27.5434 1 0.0723 1 0.0 0 0.0657 1 0.0 0 0.4377 1 0.1855 1 0.0 0 0.1207 1 5.0 1 0.2467 1 0.0 0 1.0599 7 13.2501 1 0.0 0 0.0 0 0.1627 1 0.0 0)
Average genome size in population (length): 176.781
Average program size in population (points): 177.781
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 78.62798157164924
Average age in population: 68.61737454889995
Median age in population: 76.37890881771274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.477
Error (vector) diversity:			 0.736
Behavioral diversity:				 0.741
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 139958379
--- Timings ---
Current time: 1529615520001 milliseconds
Total Time:         268.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        85.1 seconds, 31.7%
Fitness Testing:    146.5 seconds, 54.6%
Report:              36.7 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 34001.0
Test mean error for best: 17.00050
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 25.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -101.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -15.3703567122
Correct output: -24.1207371169 | Program output: -7.1207371169 
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_shove integer_inc float_dec integer_inc float_dec integer_yank integer_inc float_dup_items print_integer float_dec integer_dec integer_yank float_dec in2 integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dup_items integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 25.0 2 12.0 2 11.0 2 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 5.0 1 26.0 2 2.0 1 9.0 2 17.0 2 19.0 2 1.0 1 3.0 2 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 4.0 1]
Total: 627.0
Mean: 12.54
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6577.038353000002
Median total errors in population: 1107.5
Error averages by case: (282.83458789999986 5.826 253.71393530000012 6.096 270.1982323999997 5.927 236.6999085000001 6.538 249.67549639999962 5.528 295.5852798999997 5.628 245.3524754000001 6.252 284.88690029999987 6.319 249.93001000000007 11.774 245.98996659999975 5.279 277.7560414 5.245 255.63713379999962 5.398 255.3567548000001 6.517 230.44346470000028 5.056 235.8965234000004 5.076 240.0078695 5.529 265.96772439999944 6.038 249.55028700000008 5.96 245.7113952000001 5.17 274.8174146 11.34 276.05942249999987 6.383 256.02755800000034 5.607 255.4461327999996 5.772 246.0256822999996 5.289 242.70015589999954 5.221)
Error minima by case: (17.5284 1 0.7861 1 1.0 1 0.0 0 0.0 0 19.9998 1 0.0 0 3.4566 1 0.0285 1 0.0 0 0.0963 1 0.0 0 0.1328 1 0.4159 1 0.0 0 0.0 0 0.5781 1 0.0 0 0.0 0 2.0599 7 1.7499 1 0.0 0 0.0 0 0.4753 1 0.0 0)
Average genome size in population (length): 172.189
Average program size in population (points): 173.189
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 80.00065521312891
Average age in population: 67.59666160655867
Median age in population: 77.65108126909995
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.519
Error (vector) diversity:			 0.728
Behavioral diversity:				 0.737
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 144262837
--- Timings ---
Current time: 1529615526677 milliseconds
Total Time:         274.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        86.6 seconds, 31.5%
Fitness Testing:    150.5 seconds, 54.8%
Report:              37.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 34053.0
Test mean error for best: 17.02650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 25.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -101.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -15.3703567122
Correct output: -24.1207371169 | Program output: -7.1207371169 
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction float_inc} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank float_dec in2 integer_inc integer_dup_items integer_inc float_dec integer_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc float_inc print_integer print_float)
Errors: [53.0 3 25.0 2 12.0 2 11.0 2 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 5.0 1 26.0 2 2.0 1 9.0 2 17.0 2 19.0 2 1.0 1 3.0 2 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 4.0 1]
Total: 627.0
Mean: 12.54
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6617.660107400001
Median total errors in population: 1110.0
Error averages by case: (279.0803385999998 5.689 257.6398648 6.143 271.76811709999987 5.834 238.16909760000016 6.45 250.45961999999986 5.526 293.34650469999974 5.42 248.99852370000005 6.4 285.4684417999998 6.256 248.40215119999996 11.828 248.83787989999988 5.258 281.2590141 5.078 253.53027759999972 5.203 258.4096421000001 6.659 235.6348823000001 4.793 241.52795740000028 4.944 241.29139590000008 5.466 268.3652509999998 5.967 250.2203741 5.966 242.33701840000012 5.068 283.1345464 11.546 275.0686734999999 6.36 257.6296526000004 5.592 258.2329008999998 5.764 249.16449389999966 5.132 246.27148779999968 5.07)
Error minima by case: (6.5284 1 1.1153 1 1.0 1 0.0 0 1.0 1 9.9998 1 0.0 0 15.4566 1 0.1533 1 0.0 0 1.0932 1 0.0 0 1.6218 1 1.1635 1 0.0 0 0.1207 1 8.0 1 0.0 0 0.0 0 2.0599 8 8.2501 1 0.0 0 0.0 0 1.1627 1 0.0 0)
Average genome size in population (length): 171.698
Average program size in population (points): 172.698
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 80.89179853286099
Average age in population: 68.1342632354858
Median age in population: 78.90882982399496
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.509
Error (vector) diversity:			 0.736
Behavioral diversity:				 0.742
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 148554937
--- Timings ---
Current time: 1529615533243 milliseconds
Total Time:         281.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        88.1 seconds, 31.3%
Fitness Testing:    154.4 seconds, 54.9%
Report:              38.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 34053.0
Test mean error for best: 17.02650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 25.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -101.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -15.3703567122
Correct output: -24.1207371169 | Program output: -7.1207371169 
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dup} {:instruction integer_inc} {:instruction float_inc} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank float_dec in2 integer_inc integer_dup_items integer_inc float_dec integer_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc integer_yank float_dup integer_inc float_inc print_integer print_float)
Errors: [53.0 3 25.0 2 12.0 2 11.0 2 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 5.0 1 26.0 2 2.0 1 9.0 2 17.0 2 19.0 2 1.0 1 3.0 2 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 4.0 1]
Total: 627.0
Mean: 12.54
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6300.0714357
Median total errors in population: 1058.0
Error averages by case: (266.93116869999983 5.805 245.85697040000008 6.245 260.4029041999998 5.892 226.86329420000004 6.36 238.46515239999982 5.558 281.1238020999998 5.405 235.04798910000008 6.514 274.7328888000001 6.125 240.20752279999996 11.783 235.52882459999978 5.338 263.1580785999998 5.155 244.11489649999967 5.277 247.60715980000003 6.736 217.39817510000023 4.746 226.82109980000027 5.036 228.9218936 5.589 256.86564679999947 6.086 236.65523149999999 6.08 234.03778230000017 5.226 263.2524671 11.407 264.76836149999986 6.158 245.95768660000024 5.707 245.9625185999995 5.854 231.49029979999966 5.17 233.47662079999978 5.171)
Error minima by case: (5.4716 1 0.0059 1 1.0 1 0.0 0 0.0 0 1.0002 1 0.0 0 12.4566 1 0.0741 1 0.0 0 0.1878 1 0.0 0 0.2791 1 0.1635 1 0.0 0 0.0 0 0.4219 1 0.0 0 0.0 0 0.0599 8 6.7499 1 0.0 0 0.0 0 4.8373 1 0.0 0)
Average genome size in population (length): 173.216
Average program size in population (points): 174.216
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 82.6689654033699
Average age in population: 70.40437140182014
Median age in population: 80.3482893558948
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.508
Error (vector) diversity:			 0.746
Behavioral diversity:				 0.753
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 152885262
--- Timings ---
Current time: 1529615539473 milliseconds
Total Time:         287.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        89.6 seconds, 31.1%
Fitness Testing:    158.3 seconds, 55.0%
Report:              39.9 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 34246.0
Test mean error for best: 17.12300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -49.2036084163
Correct output: -185.2914836352 | Program output: -180.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 3.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -16.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 0.0722899136  
Correct output: -84.3925535393 | Program output: -90.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -29.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -123.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -128.6662183691
Correct output: -100.9942315294 | Program output: -117.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction integer_inc} {:instruction integer_yank} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_add in1 integer_inc integer_yank in1 float_dec integer_inc float_dec integer_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 18.0 2 5.0 1 10.0 1 28.0 1 70.0 2 16.0 2 68.0 3 12.0 12 6.0 2 53.0 2 4.0 1 19.0 2 2.0 1 8.0 2 16.0 2 12.0 2 1.0 1 4.0 2 62.0 11 55.0 3 6.0 1 17.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6953.8902239
Median total errors in population: 999.5
Error averages by case: (294.7357713999999 5.661 271.86525840000013 6.122 282.0700621999998 5.809 252.74668360000007 6.434 261.0269920999998 5.47 309.47186919999984 5.164 261.859507 6.419 304.24841230000004 6.098 265.48184850000007 11.845 260.7752601999999 5.265 291.89667979999984 5.022 265.5050463999998 5.128 273.6977976 6.569 247.6252155000001 4.467 254.60200780000017 4.9 260.1053863000001 5.479 279.0329600999997 5.964 264.31533759999996 6.051 253.21960739999986 5.027 294.529139 11.499 295.4829245999999 6.105 269.3568096000003 5.602 268.74288879999966 5.74 260.45487119999973 5.028 259.1878872999998 4.986)
Error minima by case: (8.5284 1 0.4253 1 1.0 1 0.0 0 0.0 0 10.9998 1 0.0 0 14.4566 1 0.0289 1 0.0 0 3.1864 1 0.0 0 1.167 1 2.0 1 0.0 0 0.0 0 2.5781 1 0.548 1 0.0 0 1.0599 7 4.014 1 0.0 0 0.0 0 4.1627 1 0.0 0)
Average genome size in population (length): 174.234
Average program size in population (points): 175.234
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 83.8583105018001
Average age in population: 72.53590449732177
Median age in population: 81.66098206539544
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.501
Error (vector) diversity:			 0.708
Behavioral diversity:				 0.716
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 157240813
--- Timings ---
Current time: 1529615545966 milliseconds
Total Time:         294.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        91.3 seconds, 31.0%
Fitness Testing:    162.3 seconds, 55.1%
Report:              40.7 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 34246.0
Test mean error for best: 17.12300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -49.2036084163
Correct output: -185.2914836352 | Program output: -180.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 3.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -16.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 0.0722899136  
Correct output: -84.3925535393 | Program output: -90.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -29.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -123.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -128.6662183691
Correct output: -100.9942315294 | Program output: -117.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction integer_inc} {:instruction integer_yank} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_add in1 integer_inc integer_yank in1 float_dec integer_inc float_dec integer_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 18.0 2 5.0 1 10.0 1 28.0 1 70.0 2 16.0 2 68.0 3 12.0 12 6.0 2 53.0 2 4.0 1 19.0 2 2.0 1 8.0 2 16.0 2 12.0 2 1.0 1 4.0 2 62.0 11 55.0 3 6.0 1 17.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6280.2433283
Median total errors in population: 986.5
Error averages by case: (268.1407200999999 5.435 246.10366249999998 6.049 256.1282906999999 5.645 225.47030939999996 6.077 236.28940679999982 5.32 281.77918119999987 4.882 233.68996480000018 6.449 276.7815990000001 5.719 238.13728680000006 11.759 233.82291459999988 5.113 267.80994139999984 4.766 239.78685579999973 4.899 247.1212929000001 6.486 219.0107888000001 4.147 226.37511870000031 4.732 229.09889449999997 5.381 253.24752599999962 5.783 238.04426030000002 5.915 229.74783260000007 4.881 268.37296029999993 11.496 266.93028189999995 5.806 242.7547290000002 5.434 242.65220549999967 5.55 234.54709279999972 4.788 231.0702118999998 4.818)
Error minima by case: (0.4716 1 0.1993 1 1.0 1 0.0 0 0.0 0 6.0002 1 0.0 0 7.4566 1 0.0469 1 0.0 0 1.0916 1 0.0 0 0.1333 1 1.0 1 0.0 0 0.1207 1 6.116 1 0.0 0 0.0 0 0.9401 8 8.2501 1 0.0 0 0.0 0 0.8373 1 0.0 0)
Average genome size in population (length): 176.659
Average program size in population (points): 177.659
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 85.02770464181474
Average age in population: 75.07170785078284
Median age in population: 83.02291292621153
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.504
Error (vector) diversity:			 0.703
Behavioral diversity:				 0.708
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 161657038
--- Timings ---
Current time: 1529615552652 milliseconds
Total Time:         301.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        92.8 seconds, 30.8%
Fitness Testing:    166.6 seconds, 55.3%
Report:              41.6 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 34246.0
Test mean error for best: 17.12300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -49.2036084163
Correct output: -185.2914836352 | Program output: -180.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 3.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -16.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 0.0722899136  
Correct output: -84.3925535393 | Program output: -90.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -29.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -123.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -128.6662183691
Correct output: -100.9942315294 | Program output: -117.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction integer_inc} {:instruction integer_yank} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_add in1 integer_inc integer_yank in1 float_dec integer_inc float_dec integer_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_add integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 18.0 2 5.0 1 10.0 1 28.0 1 70.0 2 16.0 2 68.0 3 12.0 12 6.0 2 53.0 2 4.0 1 19.0 2 2.0 1 8.0 2 16.0 2 12.0 2 1.0 1 4.0 2 62.0 11 55.0 3 6.0 1 17.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5653.300788
Median total errors in population: 961.0
Error averages by case: (244.37949039999984 5.358 219.96275470000012 5.84 233.6532822999999 5.468 198.75923400000002 6.055 215.57600379999988 5.336 259.0758511999999 4.841 209.02385709999996 6.212 251.8370622000001 5.682 214.8202837 11.574 210.74400799999998 4.959 241.5063532999998 4.682 216.00898389999983 4.872 218.15364749999998 6.346 193.75891470000016 4.141 197.9557503000003 4.55 199.73681749999997 5.176 230.90196089999972 5.67 212.52471010000002 5.763 203.9906482 4.737 241.41365000000008 11.405 242.13301959999984 5.671 220.7488170000004 5.288 220.23492819999964 5.413 205.9294495999997 4.722 206.0013097999998 4.709)
Error minima by case: (6.5284 1 1.2036 1 0.0 0 0.0 0 0.0 0 13.0002 1 0.0 0 9.5434 1 0.0723 1 0.0 0 1.258 1 0.0 0 0.7209 1 0.2997 1 0.0 0 0.1112 1 4.0 1 0.0 0 0.0 0 2.0599 8 7.7299 1 0.0 0 0.0 0 0.6783 1 0.0 0)
Average genome size in population (length): 175.013
Average program size in population (points): 176.013
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 86.2570851716821
Average age in population: 75.39580496670206
Median age in population: 84.20407134970812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.49
Error (vector) diversity:			 0.709
Behavioral diversity:				 0.714
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 166032163
--- Timings ---
Current time: 1529615558971 milliseconds
Total Time:         307.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        94.4 seconds, 30.7%
Fitness Testing:    170.4 seconds, 55.4%
Report:              42.5 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 34131.0
Test mean error for best: 17.06550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -47.2036084163
Correct output: -185.2914836352 | Program output: -178.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 5.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -14.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 2.0722899136  
Correct output: -84.3925535393 | Program output: -88.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -27.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -121.4219119341
Correct output: -21.9981612097 | Program output: -20.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -126.6662183691
Correct output: -100.9942315294 | Program output: -115.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_yank integer_yank integer_inc in1 float_dec float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_swap integer_mod float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 20.0 1 7.0 2 10.0 1 26.0 2 70.0 2 14.0 2 68.0 3 14.0 12 4.0 1 53.0 2 4.0 1 21.0 2 2.0 1 8.0 2 16.0 2 14.0 2 1.0 1 4.0 2 62.0 11 55.0 3 4.0 1 15.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5544.435943100001
Median total errors in population: 864.91175
Error averages by case: (238.49592489999995 5.278 215.71421030000005 5.544 224.6922535999997 5.093 201.2513525000001 5.936 206.71548409999994 4.904 253.62625059999988 4.651 204.4224525 6.022 246.27199100000013 5.621 209.94931929999996 11.417 204.27009099999995 4.575 239.14249489999983 4.515 211.49023909999985 4.612 215.98870970000013 6.063 193.25601950000012 3.886 198.79311570000007 4.285 201.60794329999996 4.993 223.21616919999968 5.317 209.13918619999993 5.543 198.24207600000017 4.47 238.95452150000003 11.407 236.47390929999992 5.659 212.3095472000003 4.859 213.6472016999997 5.136 203.46835549999983 4.545 204.46212449999993 4.504)
Error minima by case: (12.5284 1 1.4016 1 1.0 1 0.0 0 0.0 0 19.0002 1 0.0 0 5.4566 1 0.1542 1 0.0 0 3.7342 1 0.0 0 1.8136 1 1.0 1 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 0.9401 8 6.7499 1 0.0 0 0.0 0 4.1627 1 0.0 0)
Average genome size in population (length): 175.364
Average program size in population (points): 176.364
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 87.6729491972436
Average age in population: 76.60511405165744
Median age in population: 85.3678437438843
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.474
Error (vector) diversity:			 0.698
Behavioral diversity:				 0.701
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 170416238
--- Timings ---
Current time: 1529615566056 milliseconds
Total Time:         314.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.2 seconds, 30.6%
Fitness Testing:    174.5 seconds, 55.5%
Report:              43.4 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 34198.0
Test mean error for best: 17.09900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_dup integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec tag_integer_464 integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 19.0 2 6.0 2 10.0 1 27.0 2 70.0 2 15.0 2 68.0 3 13.0 11 5.0 1 53.0 2 4.0 1 20.0 1 2.0 1 8.0 2 16.0 2 13.0 2 0.0 0 4.0 2 62.0 11 55.0 3 5.0 1 16.0 2 7.0 2 5.0 1]
Total: 618.0
Mean: 12.36
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6056.229399200001
Median total errors in population: 1041.0
Error averages by case: (260.0453825999998 5.624 233.02441060000007 6.13 249.9246818999999 5.732 216.54376119999998 6.248 220.95827769999983 5.475 275.2860575999997 5.046 225.58965450000005 6.668 266.8573566000002 5.978 225.3054957999999 11.509 224.2234139999999 5.211 258.68026029999976 5.007 234.02485979999975 5.166 236.97678839999978 6.708 213.34856460000017 4.357 215.91610180000026 4.742 218.94819950000004 5.457 245.15735139999964 5.886 228.25944989999996 6.08 223.52064270000017 4.805 256.9955586 11.517 256.4863213999997 5.963 235.14604850000043 5.518 236.34232899999964 5.734 226.08860769999964 5.016 222.0058230999998 4.997)
Error minima by case: (11.5284 1 0.0152 1 0.0 0 0.0 0 0.0 0 9.9998 1 0.0 0 0.5434 1 0.0723 1 0.0 0 0.0657 1 0.0 0 0.7621 1 1.0 1 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 2.0599 7 0.7499 1 0.0 0 0.0 0 4.1814 1 0.0 0)
Average genome size in population (length): 174.681
Average program size in population (points): 175.681
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 88.86322954853073
Average age in population: 76.63262973400953
Median age in population: 86.68904502099736
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.516
Error (vector) diversity:			 0.72
Behavioral diversity:				 0.726
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 174783588
--- Timings ---
Current time: 1529615572513 milliseconds
Total Time:         320.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.8 seconds, 30.5%
Fitness Testing:    178.4 seconds, 55.6%
Report:              44.6 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 34198.0
Test mean error for best: 17.09900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_dup integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec tag_integer_464 integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 19.0 2 6.0 2 10.0 1 27.0 2 70.0 2 15.0 2 68.0 3 13.0 11 5.0 1 53.0 2 4.0 1 20.0 1 2.0 1 8.0 2 16.0 2 13.0 2 0.0 0 4.0 2 62.0 11 55.0 3 5.0 1 16.0 2 7.0 2 5.0 1]
Total: 618.0
Mean: 12.36
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5584.4928047
Median total errors in population: 950.0
Error averages by case: (239.7913338999999 5.401 214.31867330000006 5.923 229.2881872999998 5.439 198.30353670000008 5.858 211.28500359999973 5.277 253.58568649999987 4.78 207.46697160000014 6.281 245.86877060000015 5.685 212.81504309999994 11.561 206.82949479999982 4.925 238.4342830999998 4.735 213.8090856999998 4.836 218.90332569999998 6.454 196.38704290000015 4.099 198.0854934000003 4.404 200.6444181 5.226 226.52362549999953 5.608 207.06178219999995 5.868 205.45830070000028 4.524 237.5640586999999 11.421 236.0048598999999 5.753 216.51754160000038 5.24 216.67670039999962 5.415 203.84157199999976 4.732 204.85401339999967 4.729)
Error minima by case: (22.5284 1 0.2036 1 1.0 1 0.0 0 1.4152 1 29.0002 1 0.0 0 1.5434 1 0.0723 1 0.0 0 2.0657 1 0.0 0 0.1269 1 1.0 1 0.0 0 0.1207 1 5.5677 1 0.0 0 0.0 0 1.0599 8 0.2501 1 0.0 0 0.0 0 5.8373 1 0.0 0)
Average genome size in population (length): 174.218
Average program size in population (points): 175.218
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 90.02912550022587
Average age in population: 77.55651871506537
Median age in population: 87.9366115691921
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.505
Error (vector) diversity:			 0.734
Behavioral diversity:				 0.738
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 179138720
--- Timings ---
Current time: 1529615579022 milliseconds
Total Time:         327.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.4 seconds, 30.4%
Fitness Testing:    182.4 seconds, 55.7%
Report:              45.5 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 33858.0
Test mean error for best: 16.92900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -24.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction integer_inc} {:instruction integer_yank} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_24} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float})
Best program: (float_sub integer_add in1 integer_inc integer_yank in1 float_dec integer_inc float_dec integer_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_yank float_dec integer_sub float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_rot integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc tagged_24 integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove float_dec float_dec integer_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer integer_shove print_integer print_float)
Errors: [53.0 3 24.0 2 11.0 2 10.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 4.0 1 25.0 2 2.0 1 8.0 2 16.0 2 18.0 2 3.0 1 4.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6374.055866000001
Median total errors in population: 998.5
Error averages by case: (265.26133869999984 5.611 252.62390079999994 6.24 264.1347209999998 5.749 233.23880280000012 6.015 240.2790940999998 5.499 281.60672519999974 4.988 238.3686144000001 6.712 274.43628920000003 5.922 244.7088641 11.759 242.8704063999999 5.267 267.5056669999999 4.93 248.4614607999996 5.247 250.32126820000013 6.809 221.21753770000015 4.31 231.58819830000044 4.789 233.73994149999996 5.49 262.15315749999957 5.917 240.52663030000005 6.218 228.47168440000024 4.757 267.4337217999999 11.529 265.92067049999986 5.964 252.7636787000003 5.548 251.5532305999997 5.772 231.8782303999997 4.961 231.96203159999962 5.027)
Error minima by case: (1.5284 1 0.2036 1 0.0 0 0.0 0 1.0 1 3.0 1 0.0 0 5.0 1 0.3838 1 0.0 0 2.7954 1 0.0 0 0.1333 1 0.1635 1 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 1.0599 8 7.0147 1 0.0 0 0.0 0 4.0284 1 0.0 0)
Average genome size in population (length): 173.821
Average program size in population (points): 174.821
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 91.12391092200353
Average age in population: 78.48862290056815
Median age in population: 89.19648649571327
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.496
Error (vector) diversity:			 0.725
Behavioral diversity:				 0.731
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 183483595
--- Timings ---
Current time: 1529615585460 milliseconds
Total Time:         333.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.0 seconds, 30.2%
Fitness Testing:    186.4 seconds, 55.8%
Report:              46.4 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 34131.0
Test mean error for best: 17.06550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -47.2036084163
Correct output: -185.2914836352 | Program output: -178.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 5.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -14.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 2.0722899136  
Correct output: -84.3925535393 | Program output: -88.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -27.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -121.4219119341
Correct output: -21.9981612097 | Program output: -20.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -126.6662183691
Correct output: -100.9942315294 | Program output: -115.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_add} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 tag_integer_366 integer_rot integer_dup integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_frominteger integer_inc float_dec float_dec tag_integer_464 integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yankdup integer_dup integer_yank float_dec in2 integer_inc integer_shove integer_inc integer_swap integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove integer_add print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 20.0 1 7.0 2 10.0 1 26.0 2 70.0 2 14.0 2 68.0 3 14.0 12 4.0 1 53.0 2 4.0 1 21.0 2 2.0 1 8.0 2 16.0 2 14.0 2 1.0 1 4.0 2 62.0 11 55.0 3 4.0 1 15.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5523.388679199999
Median total errors in population: 995.0
Error averages by case: (235.29554989999983 5.456 214.60299070000022 6.139 233.33277079999988 5.707 196.7683279000001 6.225 209.9410328999998 5.458 249.81814099999977 4.857 204.55032630000005 6.692 242.0172232000001 5.911 212.24617590000003 11.67 206.10433839999993 5.214 231.34959639999983 4.745 214.08273459999978 5.234 214.29988139999992 6.612 190.6127539000001 4.136 192.81131260000024 4.711 195.95342649999995 5.518 229.5409854999996 5.888 205.9494719000001 6.07 201.34650500000012 4.75 229.47685210000006 11.483 231.81885019999987 5.939 218.66568170000028 5.57 218.3539939999995 5.713 198.67335549999984 4.787 196.44140089999985 4.85)
Error minima by case: (17.5284 1 0.2036 1 1.0 1 0.0 0 0.0 0 19.9998 1 0.0 0 1.5434 1 0.8677 1 0.0 0 2.3992 1 0.0 0 0.1331 1 1.0 1 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 1.0568 8 0.2501 1 0.0 0 0.0 0 1.6749 1 0.0 0)
Average genome size in population (length): 173.884
Average program size in population (points): 174.884
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 92.37054751893622
Average age in population: 79.81477830658935
Median age in population: 90.50565973111836
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.53
Error (vector) diversity:			 0.749
Behavioral diversity:				 0.756
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 187830445
--- Timings ---
Current time: 1529615591977 milliseconds
Total Time:         340.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.5 seconds, 30.1%
Fitness Testing:    190.5 seconds, 56.0%
Report:              47.3 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 34131.0
Test mean error for best: 17.06550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -47.2036084163
Correct output: -185.2914836352 | Program output: -178.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 5.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -14.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 2.0722899136  
Correct output: -84.3925535393 | Program output: -88.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -27.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -121.4219119341
Correct output: -21.9981612097 | Program output: -20.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -126.6662183691
Correct output: -100.9942315294 | Program output: -115.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_add} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 tag_integer_366 integer_rot integer_dup integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_frominteger integer_inc float_dec float_dec tag_integer_464 integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_yankdup integer_dup integer_yank float_dec in2 integer_inc integer_shove integer_inc integer_swap integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove integer_add print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 20.0 1 7.0 2 10.0 1 26.0 2 70.0 2 14.0 2 68.0 3 14.0 12 4.0 1 53.0 2 4.0 1 21.0 2 2.0 1 8.0 2 16.0 2 14.0 2 1.0 1 4.0 2 62.0 11 55.0 3 4.0 1 15.0 2 7.0 2 5.0 1]
Total: 621.0
Mean: 12.42
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6250.175925400001
Median total errors in population: 918.5
Error averages by case: (269.48019339999985 5.617 242.50016559999992 6.022 256.2527587999998 5.671 223.7824315000001 5.917 238.6938558999996 5.4 284.5939358999998 4.956 233.49465490000009 6.497 275.24356099999994 6.004 239.22850789999995 11.648 233.62465989999984 5.146 266.6229953999999 4.963 240.62969059999972 5.205 243.58722900000015 6.5 223.49590280000007 4.352 221.2733128000002 4.726 220.2116471999999 5.447 253.65715709999958 5.841 235.79738999999998 5.949 226.32929960000018 4.679 262.3386193 11.441 265.7288006999999 6.067 243.75218750000028 5.458 243.63167029999966 5.618 231.09783969999967 5.025 226.0754585999998 4.903)
Error minima by case: (18.4716 1 0.2036 1 0.0 0 0.0 0 0.0 0 11.9998 1 0.0 0 0.5434 2 0.7229 1 0.0 0 1.4114 1 0.0 0 2.2791 1 0.8365 1 0.0 0 0.8793 1 3.4219 1 0.0 0 0.0 0 0.0599 7 0.7499 1 0.0 0 0.0 0 2.8373 1 0.585 1)
Average genome size in population (length): 174.423
Average program size in population (points): 175.423
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 93.68131344531255
Average age in population: 81.21726451778892
Median age in population: 91.75062954007026
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.505
Error (vector) diversity:			 0.764
Behavioral diversity:				 0.77
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 192190803
--- Timings ---
Current time: 1529615598593 milliseconds
Total Time:         347.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.0 seconds, 30.0%
Fitness Testing:    194.7 seconds, 56.1%
Report:              48.2 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 33950.0
Test mean error for best: 16.97500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_pop} {:instruction in1} {:instruction integer_inc} {:instruction float_min} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_pop in1 integer_inc float_min in1 float_dec integer_inc float_dec integer_dec float_dup integer_div float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_inc integer_inc integer_inc in2 float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_swap integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc integer_div float_dec in2 integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_inc integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 19.0 2 6.0 2 10.0 1 27.0 2 70.0 2 15.0 2 68.0 3 13.0 11 5.0 1 53.0 2 4.0 1 20.0 1 2.0 1 8.0 2 16.0 2 13.0 2 1.0 1 4.0 2 62.0 11 55.0 3 5.0 1 16.0 2 7.0 2 5.0 1]
Total: 620.0
Mean: 12.4
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6188.964668500002
Median total errors in population: 944.5
Error averages by case: (268.44331489999996 5.531 236.62632019999987 5.945 253.8906009999998 5.514 220.31584190000007 6.069 236.40445599999998 5.202 282.8547298999999 4.911 233.65390820000005 6.31 273.28483669999997 5.907 238.61781509999997 11.642 230.6763665999999 4.902 265.3845284999998 4.874 241.0432542999999 5.05 243.3664956000002 6.402 220.72961310000008 4.232 220.61229680000005 4.527 221.0979759 5.347 252.02561979999962 5.621 229.25922179999995 5.989 217.62715829999993 4.564 257.8827861 11.444 263.88397779999985 5.967 241.66924240000031 5.252 242.49781819999976 5.435 233.0121699999998 4.929 217.75131939999983 4.787)
Error minima by case: (18.5284 1 0.2036 1 1.0 1 0.0 0 0.0 0 25.0002 1 0.0 0 0.5434 1 0.903 1 0.0 0 0.0657 1 0.0 0 0.5741 1 1.1635 1 0.0 0 0.0 0 4.4219 1 0.0 0 0.0 0 0.9401 7 0.2501 1 0.0 0 0.0 0 0.5996 1 0.0 0)
Average genome size in population (length): 177.531
Average program size in population (points): 178.531
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 95.04243770442298
Average age in population: 84.66007612117903
Median age in population: 93.05668822510135
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.502
Error (vector) diversity:			 0.761
Behavioral diversity:				 0.766
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 196628603
--- Timings ---
Current time: 1529615605348 milliseconds
Total Time:         353.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.7 seconds, 29.9%
Fitness Testing:    198.9 seconds, 56.2%
Report:              49.1 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 33950.0
Test mean error for best: 16.97500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 24.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -102.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -16.3703567122
Correct output: -24.1207371169 | Program output: -8.1207371169 
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -26.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_pop} {:instruction in1} {:instruction integer_inc} {:instruction float_min} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dup} {:instruction integer_div} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_pop in1 integer_inc float_min in1 float_dec integer_inc float_dec integer_dec float_dup integer_div float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_inc integer_inc integer_inc in2 float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_swap integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc integer_div float_dec in2 integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_inc integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 19.0 2 6.0 2 10.0 1 27.0 2 70.0 2 15.0 2 68.0 3 13.0 11 5.0 1 53.0 2 4.0 1 20.0 1 2.0 1 8.0 2 16.0 2 13.0 2 1.0 1 4.0 2 62.0 11 55.0 3 5.0 1 16.0 2 7.0 2 5.0 1]
Total: 620.0
Mean: 12.4
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5686.851719200002
Median total errors in population: 866.5
Error averages by case: (244.21287619999993 5.297 222.2012556 5.748 237.9300872 5.375 203.99554360000005 5.749 220.76798759999977 5.157 257.7208714999998 4.626 216.78007290000008 6.08 248.28405470000004 5.623 221.85801189999998 11.287 212.6519717999999 4.904 242.1493097999998 4.582 217.2736251999997 4.905 223.7040328000001 6.184 195.9322518000001 3.955 199.32294460000026 4.343 201.03948590000007 5.171 235.65955139999969 5.59 215.49138960000002 5.844 197.08212020000013 4.48 237.0068429 11.437 238.95122639999988 5.643 225.54210980000036 5.224 225.50784699999969 5.377 207.17527049999987 4.636 196.79197829999987 4.602)
Error minima by case: (3.5284 2 0.7964 1 0.0 0 0.0 0 0.0 0 10.0002 1 0.0 0 3.5434 1 0.0723 1 0.0 0 0.0354 1 0.0 0 0.2905 1 0.0017 1 0.0 0 0.0 0 0.4091 1 0.0 0 0.0 0 2.0599 8 2.2501 1 0.0 0 0.0 0 0.1627 1 0.0 0)
Average genome size in population (length): 177.842
Average program size in population (points): 178.842
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 96.40415558906997
Average age in population: 85.99257829467427
Median age in population: 94.32703071003047
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.502
Error (vector) diversity:			 0.761
Behavioral diversity:				 0.765
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 201074878
--- Timings ---
Current time: 1529615612082 milliseconds
Total Time:         360.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.2 seconds, 29.7%
Fitness Testing:    203.2 seconds, 56.4%
Report:              50.0 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 33840.0
Test mean error for best: 16.92000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -47.2036084163
Correct output: -185.2914836352 | Program output: -178.2914836352
Correct output: 14.6061985977  | Program output: 23.6061985977 
Correct output: 31.4151982204  | Program output: 5.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -14.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 2.0722899136  
Correct output: -84.3925535393 | Program output: -88.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -103.7651499891
Correct output: -48.7209464994 | Program output: -27.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -17.3703567122
Correct output: -24.1207371169 | Program output: -9.1207371169 
Correct output: -135.4219119341 | Program output: -121.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 75.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -126.6662183691
Correct output: -100.9942315294 | Program output: -115.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -27.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_rot integer_dup integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec tag_integer_464 integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec integer_rot float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_dup integer_yank float_dec in2 integer_inc integer_shove integer_inc integer_swap integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_swap integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer integer_shove print_integer print_float)
Errors: [53.0 3 20.0 1 7.0 2 9.0 2 26.0 2 70.0 2 14.0 2 68.0 3 14.0 12 4.0 1 53.0 2 3.0 1 21.0 2 2.0 1 7.0 2 15.0 2 14.0 2 0.0 0 5.0 2 62.0 11 55.0 3 4.0 1 15.0 2 7.0 2 6.0 1]
Total: 618.0
Mean: 12.36
Genome size: 194
Size: 195
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5152.4630064
Median total errors in population: 916.0
Error averages by case: (223.00788879999996 5.133 200.9742096 5.837 216.04335260000005 5.339 182.08796010000003 5.674 194.5818796999999 5.269 237.17325589999993 4.442 191.0580187000001 6.387 233.0066685000001 5.47 195.03634590000004 11.34 190.08590939999993 4.871 221.35000849999983 4.412 195.32802879999988 4.799 204.20336090000012 6.364 174.7884359000001 3.715 175.95980510000015 4.225 180.9740023 5.067 212.1329224999998 5.563 191.5907470000001 5.905 181.4882167 4.263 218.27423309999998 11.464 222.67379749999992 5.525 201.8171354000003 5.181 202.4727733999998 5.387 186.47178799999983 4.429 179.45626209999978 4.365)
Error minima by case: (13.4716 1 0.0431 1 0.0 0 0.0 0 0.0 0 6.9998 1 0.0 0 5.4566 1 0.2764 1 0.0 0 0.1769 1 0.0 0 0.3225 1 1.4756 1 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.0186 8 6.7499 1 0.0 0 0.0 0 4.1627 1 0.0 0)
Average genome size in population (length): 177.813
Average program size in population (points): 178.813
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 97.56272937397372
Average age in population: 87.16098720074059
Median age in population: 95.59556308718798
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.525
Error (vector) diversity:			 0.792
Behavioral diversity:				 0.796
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 205519778
--- Timings ---
Current time: 1529615618521 milliseconds
Total Time:         366.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.7 seconds, 29.6%
Fitness Testing:    207.2 seconds, 56.5%
Report:              50.8 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 34831.0
Test mean error for best: 17.41550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -52.2036084163
Correct output: -185.2914836352 | Program output: -183.2914836352
Correct output: 14.6061985977  | Program output: 26.6061985977 
Correct output: 31.4151982204  | Program output: 0.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -19.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -2.9277100864 
Correct output: -84.3925535393 | Program output: -93.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -100.7651499891
Correct output: -48.7209464994 | Program output: -32.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -14.3703567122
Correct output: -24.1207371169 | Program output: -6.1207371169 
Correct output: -135.4219119341 | Program output: -126.4219119341
Correct output: -21.9981612097 | Program output: -25.9981612097
Correct output: 80.3206826008  | Program output: 78.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -131.6662183691
Correct output: -100.9942315294 | Program output: -120.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -24.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap float_rot in1 integer_yank integer_shove integer_dup_times in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_shove float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove integer_yank float_dec integer_yankdup float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_mult integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 15.0 2 2.0 1 12.0 2 31.0 2 70.0 2 19.0 2 68.0 3 9.0 2 9.0 2 53.0 2 6.0 1 16.0 2 2.0 1 10.0 1 18.0 2 9.0 2 4.0 1 2.0 2 62.0 11 55.0 3 9.0 2 20.0 1 7.0 2 3.0 1]
Total: 619.0
Mean: 12.38
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6604.7414192
Median total errors in population: 1138.0
Error averages by case: (281.04236939999976 5.749 256.23077499999994 6.499 274.08988679999976 5.966 238.8249286000002 6.29 253.81684409999968 5.857 295.9177028999997 5.145 249.3122705000003 6.897 287.08540589999996 6.226 253.1022690999999 11.345 247.61312729999972 5.48 280.6943037999999 5.063 259.4790059999997 5.563 259.9691709 6.935 237.28507800000014 4.443 236.10564710000023 4.877 235.95901699999996 5.831 270.2675898999997 6.137 243.92755799999998 6.495 232.9186959000002 4.942 273.58252200000004 11.449 277.6380869999998 6.223 260.2575560000003 5.837 260.0524743999995 6.014 247.53520219999967 5.098 236.67693139999972 4.996)
Error minima by case: (3.5284 1 0.1993 1 0.0 0 0.0 0 1.0 1 10.0002 1 0.0 0 7.4566 1 0.0562 1 0.0 0 0.9343 1 0.0 0 0.2791 1 0.1635 1 0.0 0 0.0 0 3.0 1 0.0 0 0.0 0 2.0599 8 8.2501 2 0.0 0 0.0 0 5.9712 1 0.0 0)
Average genome size in population (length): 172.705
Average program size in population (points): 173.705
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 99.01250796703177
Average age in population: 84.91561608513962
Median age in population: 96.78696958628768
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.537
Error (vector) diversity:			 0.77
Behavioral diversity:				 0.776
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 209837903
--- Timings ---
Current time: 1529615625212 milliseconds
Total Time:         373.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.2 seconds, 29.5%
Fitness Testing:    211.5 seconds, 56.6%
Report:              51.7 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 34074.0
Test mean error for best: 17.03700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 23.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -103.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -17.3703567122
Correct output: -24.1207371169 | Program output: -9.1207371169 
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -22.9981612097
Correct output: 80.3206826008  | Program output: 75.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -27.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_add in1 integer_yank integer_shove integer_inc in1 float_dec float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_mod integer_flush integer_inc float_dec integer_add integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc print_integer float_dec float_shove integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec integer_rot float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_dup integer_yank float_dec in2 float_dup_items integer_shove integer_inc integer_swap integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_swap integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer integer_shove print_integer print_float)
Errors: [53.0 3 19.0 2 6.0 2 9.0 2 27.0 2 70.0 2 15.0 2 68.0 3 13.0 11 5.0 1 53.0 2 3.0 1 20.0 1 2.0 1 7.0 2 15.0 2 13.0 2 1.0 1 5.0 2 62.0 11 55.0 3 5.0 1 16.0 2 7.0 2 6.0 1]
Total: 619.0
Mean: 12.38
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5962.6243466
Median total errors in population: 1012.69715
Error averages by case: (256.79886839999966 5.455 234.38258590000007 6.029 245.6618382999997 5.453 213.56651710000008 6.123 221.90687779999973 5.406 271.4301463999997 4.848 224.64091119999992 6.456 264.3553520000001 5.9 224.7856219 11.287 223.94067769999975 5.01 253.06355239999985 4.719 227.27684459999972 5.036 234.66091109999994 6.557 213.3619915000001 4.12 212.7442348000002 4.421 215.7690819 5.346 242.71105869999954 5.655 227.8482708 6.016 201.91093410000013 4.545 255.38078720000004 11.426 253.5918954999999 5.957 232.73217190000037 5.322 233.18278819999946 5.51 220.09477489999963 4.783 210.81865229999966 4.627)
Error minima by case: (23.5284 1 0.7964 1 0.0 0 0.0 0 0.0 0 19.9998 1 0.0 0 14.4566 1 0.0692 1 0.0 0 4.0007 1 0.0 0 0.5664 1 2.0 1 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 0.9401 8 8.2501 1 0.0 0 0.0 0 7.0 1 0.0 0)
Average genome size in population (length): 173.513
Average program size in population (points): 174.513
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 100.3455344577329
Average age in population: 86.61534979805519
Median age in population: 98.10594280885451
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.544
Error (vector) diversity:			 0.785
Behavioral diversity:				 0.79
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 214175453
--- Timings ---
Current time: 1529615631532 milliseconds
Total Time:         379.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.8 seconds, 29.4%
Fitness Testing:    215.3 seconds, 56.7%
Report:              52.7 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 33980.0
Test mean error for best: 16.99000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -47.2036084163
Correct output: -185.2914836352 | Program output: -178.2914836352
Correct output: 14.6061985977  | Program output: 23.6061985977 
Correct output: 31.4151982204  | Program output: 5.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -14.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 2.0722899136  
Correct output: -84.3925535393 | Program output: -88.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -103.7651499891
Correct output: -48.7209464994 | Program output: -27.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -17.3703567122
Correct output: -24.1207371169 | Program output: -9.1207371169 
Correct output: -135.4219119341 | Program output: -121.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 75.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -126.6662183691
Correct output: -100.9942315294 | Program output: -115.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -27.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_add} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction float_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float})
Best program: (tag_integer_366 integer_add in1 integer_yank integer_shove integer_inc in1 float_dec float_dec float_dec integer_inc float_dec float_yankdup float_dec float_dec integer_inc float_dec integer_mod integer_flush integer_inc float_dec integer_add integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc print_integer float_dec float_shove integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec integer_rot float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_dup integer_yank float_dec in2 float_dup_items integer_shove integer_inc integer_swap integer_dec float_dec integer_yank float_dec integer_shove float_dec float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank integer_inc float_dec float_dec integer_swap integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer integer_shove print_integer print_float)
Errors: [53.0 3 20.0 1 7.0 2 9.0 2 26.0 2 70.0 2 14.0 2 68.0 3 14.0 12 4.0 1 53.0 2 3.0 1 21.0 2 2.0 1 7.0 2 15.0 2 14.0 2 0.0 0 5.0 2 62.0 11 55.0 3 4.0 1 15.0 2 7.0 2 6.0 1]
Total: 618.0
Mean: 12.36
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5817.522625800001
Median total errors in population: 945.0996
Error averages by case: (254.95728919999988 5.389 224.6326600999999 5.871 237.43143169999993 5.431 207.11965790000008 5.967 214.26886229999977 5.299 269.5197072999999 4.734 214.8663910000002 6.363 260.4879899000001 5.777 219.80902040000004 11.422 214.6535943999999 4.919 252.5639925999998 4.754 222.13071719999982 5.058 227.3988105000002 6.395 208.81129650000008 4.116 205.19800290000023 4.435 209.41582549999993 5.282 234.5626015999996 5.605 216.2184546000001 5.854 204.71639969999998 4.576 247.69499999999994 11.547 251.03215329999995 5.819 224.36985220000037 5.217 224.9978963999997 5.458 219.5723970999998 4.808 206.3246214999998 4.672)
Error minima by case: (6.5284 1 0.1804 1 0.0 0 0.0 0 0.0 0 11.9998 2 0.0 0 1.5434 1 0.0511 1 0.0 0 3.0657 1 0.0 0 0.7209 1 2.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 2.0599 2 0.2501 1 0.0 0 0.0 0 3.7387 1 0.0 0)
Average genome size in population (length): 177.058
Average program size in population (points): 178.058
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 101.4227933644555
Average age in population: 90.32601634189692
Median age in population: 99.3935631399374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.529
Error (vector) diversity:			 0.799
Behavioral diversity:				 0.806
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 218601878
--- Timings ---
Current time: 1529615638498 milliseconds
Total Time:         386.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.4 seconds, 29.3%
Fitness Testing:    219.5 seconds, 56.8%
Report:              53.6 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 34729.0
Test mean error for best: 17.36450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -51.2036084163
Correct output: -185.2914836352 | Program output: -182.2914836352
Correct output: 14.6061985977  | Program output: 26.6061985977 
Correct output: 31.4151982204  | Program output: 1.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -18.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -1.9277100864 
Correct output: -84.3925535393 | Program output: -92.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -100.7651499891
Correct output: -48.7209464994 | Program output: -31.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -14.3703567122
Correct output: -24.1207371169 | Program output: -6.1207371169 
Correct output: -135.4219119341 | Program output: -125.4219119341
Correct output: -21.9981612097 | Program output: -25.9981612097
Correct output: 80.3206826008  | Program output: 78.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -130.6662183691
Correct output: -100.9942315294 | Program output: -119.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -24.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction float_rot} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_stackdepth})
Best program: (tag_integer_366 integer_rot integer_swap float_rot in1 integer_yank integer_shove integer_dup_times in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_add float_dec float_shove float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_shove integer_yank float_dec integer_yankdup float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap integer_sub integer_inc integer_mult integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_yankdup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_dec float_dec integer_yank float_dec integer_shove float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat float_stackdepth)
Errors: [53.0 3 16.0 2 3.0 1 12.0 2 30.0 1 70.0 2 18.0 2 68.0 3 10.0 1 8.0 2 53.0 2 6.0 1 17.0 2 2.0 1 10.0 1 18.0 2 10.0 1 4.0 1 2.0 2 62.0 11 55.0 3 8.0 2 19.0 2 7.0 2 3.0 1]
Total: 617.0
Mean: 12.34
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5949.065020100002
Median total errors in population: 952.0
Error averages by case: (257.2566180999998 5.522 229.27182750000023 6.179 249.34255989999986 5.729 208.39097740000008 5.917 229.62342379999987 5.515 272.36765329999986 4.894 224.27658689999993 6.532 263.1559932000002 5.778 230.126907 11.564 223.21602419999996 5.208 252.48944379999978 4.845 228.37814429999972 5.303 233.03058909999996 6.577 204.4884829000002 4.231 208.04046220000032 4.667 207.78329499999995 5.523 246.11552719999972 5.881 221.89449999999994 6.082 211.32105250000015 4.799 248.36785729999997 11.496 253.15585219999988 5.816 235.64045430000036 5.508 235.57506309999968 5.716 218.76484329999977 4.878 207.93688159999988 4.894)
Error minima by case: (3.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 2.0002 1 0.0 0 0.5434 1 0.2587 1 0.0 0 1.3401 1 0.0 0 0.1422 1 0.4406 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 2.0599 3 0.7499 1 0.0 0 0.0 0 1.1627 1 0.0 0)
Average genome size in population (length): 177.146
Average program size in population (points): 178.146
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 102.9982454470619
Average age in population: 91.23441635476301
Median age in population: 100.6999863386569
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.519
Error (vector) diversity:			 0.778
Behavioral diversity:				 0.782
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 223030152
--- Timings ---
Current time: 1529615645280 milliseconds
Total Time:         393.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.9 seconds, 29.2%
Fitness Testing:    223.6 seconds, 56.8%
Report:              54.8 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 34050.0
Test mean error for best: 17.02500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 25.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -101.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -15.3703567122
Correct output: -24.1207371169 | Program output: -7.1207371169 
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -25.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_add} {:instruction in1} {:instruction integer_inc} {:instruction float_min} {:instruction in1} {:instruction float_dec} {:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction in1} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction in2} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub integer_add in1 integer_inc float_min in1 float_dec tag_integer_366 integer_rot integer_swap integer_add in1 in1 integer_shove integer_inc in1 float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_yankdup integer_yank float_dec in2 integer_inc integer_inc integer_inc integer_inc in2 float_dec integer_inc float_dec integer_inc float_dup float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec float_dup integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc integer_div float_dec in2 integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 19.0 2 6.0 2 11.0 2 27.0 2 70.0 2 15.0 2 68.0 3 13.0 11 5.0 1 53.0 2 5.0 1 20.0 1 2.0 1 9.0 2 17.0 2 13.0 2 0.0 0 3.0 2 62.0 11 55.0 3 5.0 1 16.0 2 7.0 2 4.0 1]
Total: 621.0
Mean: 12.42
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6229.794344700002
Median total errors in population: 964.0
Error averages by case: (261.8540219999998 5.61 245.7044953 6.102 259.00673839999985 5.64 224.20461030000004 6.044 233.87368949999978 5.543 275.62547259999997 4.97 234.3616945000002 6.583 270.4878151000002 5.954 238.9641932 11.632 236.69231079999986 5.186 262.47293409999986 4.888 243.74459269999988 5.312 246.8554183000002 6.666 219.4300386000001 4.275 224.03375990000015 4.685 225.43991729999988 5.515 257.9010225999998 5.867 238.7549077 6.057 216.92544430000007 4.708 259.84096740000007 11.537 260.3054758999999 5.975 246.7102675000003 5.512 246.97912669999965 5.69 229.22107669999977 4.932 220.62335329999985 4.898)
Error minima by case: (5.5284 2 0.9936 1 0.0 0 0.0 0 0.0 1 12.0002 1 0.0 0 8.4566 1 0.0723 1 0.0 0 1.1583 1 0.0 0 0.2496 1 1.0 1 0.0 0 0.1207 1 1.5781 1 0.0 0 0.0 0 0.0599 8 9.7499 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 173.723
Average program size in population (points): 174.723
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 104.1814819829316
Average age in population: 90.10854734547013
Median age in population: 101.9150602066804
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.502
Error (vector) diversity:			 0.754
Behavioral diversity:				 0.759
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 227372952
--- Timings ---
Current time: 1529615651831 milliseconds
Total Time:         400.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.7 seconds, 29.2%
Fitness Testing:    227.4 seconds, 56.8%
Report:              55.9 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 34729.0
Test mean error for best: 17.36450
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -15.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_stackdepth} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_dup integer_add in1 integer_yank integer_shove integer_inc in1 float_dec integer_shove integer_dup_times in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec float_dec integer_add integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec float_stackdepth float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 4.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 2.0 1 25.0 2 2.0 1 2.0 1 9.0 2 18.0 2 29.0 2 4.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 0.0 0]
Total: 620.0
Mean: 12.4
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5637.670886400001
Median total errors in population: 950.0
Error averages by case: (245.47499669999985 5.373 216.69398069999997 6.005 233.44685149999992 5.514 200.82527119999997 5.99 211.3813283999998 5.387 259.8870928999998 4.76 209.48294840000014 6.3 251.3847587000002 5.778 212.4521139000001 11.623 208.58708329999985 4.996 240.19034959999982 4.67 217.3999281999997 5.059 218.8082720000001 6.473 196.71301440000016 4.031 197.43452350000018 4.446 200.92706909999998 5.276 229.89169079999954 5.686 210.7526188 5.808 201.62345180000014 4.538 241.0379969 11.531 241.41341669999986 5.79 219.10184420000036 5.302 219.54632899999976 5.521 207.5427386999999 4.731 200.47621699999985 4.607)
Error minima by case: (14.4716 2 0.1505 1 0.0 0 0.0 0 0.1065 1 7.9998 1 0.0 0 2.4566 1 0.0452 1 0.0 0 0.0657 1 0.0 0 0.6256 1 0.8059 1 0.0 0 0.0 0 0.5781 1 0.0 0 0.0 0 1.0599 2 3.7499 1 0.0 0 0.0 0 1.8373 1 0.0 0)
Average genome size in population (length): 176.882
Average program size in population (points): 177.882
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 105.3937912674015
Average age in population: 93.43005397927844
Median age in population: 103.2979466176109
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.53
Error (vector) diversity:			 0.798
Behavioral diversity:				 0.805
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 231794727
--- Timings ---
Current time: 1529615658301 milliseconds
Total Time:         406.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.3 seconds, 29.1%
Fitness Testing:    231.5 seconds, 56.9%
Report:              56.9 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 35944.0
Test mean error for best: 17.97200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -51.2036084163
Correct output: -185.2914836352 | Program output: -182.2914836352
Correct output: 14.6061985977  | Program output: 15.6061985977 
Correct output: 31.4151982204  | Program output: 1.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -18.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -1.9277100864 
Correct output: -84.3925535393 | Program output: -92.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -111.7651499891
Correct output: -48.7209464994 | Program output: -31.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -25.3703567122
Correct output: -24.1207371169 | Program output: -17.1207371169
Correct output: -135.4219119341 | Program output: -125.4219119341
Correct output: -21.9981612097 | Program output: -58.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -130.6662183691
Correct output: -100.9942315294 | Program output: -119.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction in1} {:instruction float_dec} {:instruction tagged_780} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction tagged_25} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot integer_swap integer_add in1 integer_pop integer_shove integer_dup_times in1 float_dec tagged_780 float_dec integer_dec float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_mod float_dec float_dec float_dec tagged_25 float_dec float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_mod integer_yank float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_swap float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_inc integer_shove integer_inc float_dec float_dec in2 float_yankdup in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 16.0 2 3.0 1 1.0 1 30.0 1 70.0 2 18.0 2 68.0 3 10.0 1 8.0 2 53.0 2 5.0 2 17.0 2 2.0 1 1.0 1 7.0 2 10.0 1 37.0 2 4.0 2 62.0 11 55.0 3 8.0 2 19.0 2 7.0 2 0.0 0]
Total: 617.0
Mean: 12.34
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4787.132355000001
Median total errors in population: 921.6958
Error averages by case: (207.22067389999992 4.994 183.7809820000001 5.817 203.01498909999987 5.153 163.64792760000006 5.579 183.64760029999982 5.08 222.07829599999994 4.323 176.67468480000008 6.335 215.43549100000013 5.451 184.9093382000001 11.447 176.12563830000002 4.614 208.1063794999998 4.235 180.98301019999982 4.606 186.4579175000001 6.39 161.50800920000012 3.599 164.18029720000007 4.1 167.13974409999997 4.842 199.87135239999967 5.332 176.9965265 5.676 163.3292191 4.09 207.1153981999999 11.317 204.64346849999998 5.428 188.1558840000004 4.962 188.44114489999973 5.173 171.86638879999987 4.301 164.84199369999985 4.116)
Error minima by case: (2.5284 2 0.2036 1 0.0 0 0.0 0 0.0 0 9.0002 1 0.0 0 5.4566 1 1.0723 1 0.0 0 0.0651 1 0.0 0 0.2791 1 0.1284 1 0.0 0 0.0 0 1.4219 1 0.0 0 0.0 0 1.0599 7 6.7499 1 0.0 0 0.0 0 1.432 1 0.0 0)
Average genome size in population (length): 178.857
Average program size in population (points): 179.857
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 106.6023174634569
Average age in population: 95.60974163134048
Median age in population: 104.7012466308455
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.533
Error (vector) diversity:			 0.825
Behavioral diversity:				 0.83
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 236265927
--- Timings ---
Current time: 1529615664862 milliseconds
Total Time:         413.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.8 seconds, 29.0%
Fitness Testing:    235.6 seconds, 57.0%
Report:              57.7 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 35621.0
Test mean error for best: 17.81050
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -51.2036084163
Correct output: -185.2914836352 | Program output: -182.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 1.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -18.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -1.9277100864 
Correct output: -84.3925535393 | Program output: -92.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -31.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -125.4219119341
Correct output: -21.9981612097 | Program output: -58.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -130.6662183691
Correct output: -100.9942315294 | Program output: -119.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_add in1 integer_yank integer_shove integer_inc in1 float_dec float_dup_items float_dec integer_inc float_dec float_dec float_dec float_frominteger float_dec float_dec float_dec integer_inc integer_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc integer_inc integer_yank integer_dup float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 16.0 2 3.0 1 4.0 1 30.0 1 70.0 2 18.0 2 68.0 3 10.0 1 8.0 2 53.0 2 2.0 1 17.0 2 2.0 1 2.0 1 10.0 1 10.0 1 37.0 2 4.0 2 62.0 11 55.0 3 8.0 2 19.0 2 7.0 2 0.0 0]
Total: 619.0
Mean: 12.38
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6392.784441400001
Median total errors in population: 1061.0
Error averages by case: (270.11912599999977 5.659 253.9576565000001 6.363 266.0186241999997 5.917 229.9546223000001 6.3 240.62618789999968 5.689 283.7668617999998 5.048 237.22817270000004 6.683 276.845814 5.993 243.61385140000002 11.635 242.78435349999972 5.386 268.35249159999984 4.991 247.3393708999996 5.293 250.3827981999999 6.803 227.99866090000017 4.408 230.95232410000025 4.829 234.87133920000005 5.614 262.6946352999994 6.078 243.25373530000007 6.251 223.79388490000022 4.938 269.28664879999997 11.55 266.9355094999998 5.977 252.55280530000033 5.73 252.6060745999994 5.886 236.48895239999973 5.039 227.36594009999962 4.934)
Error minima by case: (9.4716 1 1.2036 1 0.0 0 0.0 0 0.0 0 2.9998 1 0.1732 1 6.4566 1 0.0723 1 0.0 0 5.537 1 0.0 0 0.2791 1 1.0 1 0.0 0 0.0 0 4.4219 1 0.0 0 0.0 0 1.0599 7 5.6856 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 173.421
Average program size in population (points): 174.421
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 108.0720602173234
Average age in population: 93.5947331613053
Median age in population: 105.8921663003963
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.534
Error (vector) diversity:			 0.807
Behavioral diversity:				 0.814
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 240601291
--- Timings ---
Current time: 1529615670993 milliseconds
Total Time:         419.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.2 seconds, 28.9%
Fitness Testing:    239.5 seconds, 57.1%
Report:              58.6 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 34226.0
Test mean error for best: 17.11300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -51.2036084163
Correct output: -185.2914836352 | Program output: -182.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 1.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -18.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -1.9277100864 
Correct output: -84.3925535393 | Program output: -92.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -31.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -125.4219119341
Correct output: -21.9981612097 | Program output: -58.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -130.6662183691
Correct output: -100.9942315294 | Program output: -119.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_rot} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_add in1 integer_yank integer_shove integer_inc in1 float_dec float_dup_items float_dec integer_inc float_dec float_dec float_dec float_frominteger float_dec float_dec float_dec integer_inc integer_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc integer_inc integer_yank integer_dup float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_mult integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_max float_dec integer_inc integer_inc float_dec integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_rot float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc print_integer integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 16.0 2 3.0 1 4.0 1 30.0 1 70.0 2 18.0 2 68.0 3 10.0 1 8.0 2 53.0 2 2.0 1 17.0 2 2.0 1 2.0 1 10.0 1 10.0 1 37.0 2 4.0 2 62.0 11 55.0 3 8.0 2 19.0 2 7.0 2 0.0 0]
Total: 619.0
Mean: 12.38
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5994.9100818000015
Median total errors in population: 920.5
Error averages by case: (259.0035637999999 5.549 231.83250979999994 6.027 244.6749269999999 5.595 215.32007150000004 5.966 230.47153749999978 5.439 273.83388359999987 4.954 225.23181490000013 6.483 267.20305790000003 5.882 228.1289664 11.683 220.49308009999993 5.074 255.7260864999999 4.878 229.44099479999986 5.015 235.90760010000025 6.467 213.2071590000001 4.288 212.71176410000018 4.618 215.68616669999997 5.327 241.4403195999997 5.698 222.40068179999997 5.914 217.10103800000007 4.824 253.69349249999996 11.498 256.25457509999995 5.88 230.52293230000038 5.363 230.88235899999975 5.532 223.2188216999998 4.947 212.94267809999994 4.679)
Error minima by case: (8.5284 1 0.0167 1 0.0 0 0.0 0 0.0 0 1.1413 1 0.0 0 0.8587 1 0.0723 1 0.0 0 1.0212 1 0.0 0 0.1231 1 1.0 1 0.0 0 0.0 1 3.0 1 0.0 0 0.0 0 2.0599 2 3.7499 1 0.0 0 0.0 0 0.8247 1 0.0 0)
Average genome size in population (length): 175.618
Average program size in population (points): 176.618
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 109.6103177403493
Average age in population: 97.07290331337484
Median age in population: 107.1786820514461
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.503
Error (vector) diversity:			 0.813
Behavioral diversity:				 0.819
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 244991716
--- Timings ---
Current time: 1529615677723 milliseconds
Total Time:         426.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.9 seconds, 28.8%
Fitness Testing:    243.7 seconds, 57.2%
Report:              59.5 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 33096.0
Test mean error for best: 16.54800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -39.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_525} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_362} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (in1 integer_yank integer_shove float_add in1 float_dec integer_inc tagged_525 integer_shove integer_inc in1 integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_shove float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_362 integer_inc float_dec integer_inc integer_inc integer_inc integer_inc float_dec integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc integer_div integer_inc float_dec float_max float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 5.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 1.0 1 25.0 2 2.0 1 3.0 1 11.0 2 18.0 2 18.0 2 3.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 1.0 1]
Total: 613.0
Mean: 12.26
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5392.5009863
Median total errors in population: 875.0676000000001
Error averages by case: (231.11987909999993 5.204 209.62444729999996 5.789 223.3373568 5.245 190.6253372000001 5.858 205.5702416999998 5.127 245.26331769999987 4.561 198.32301260000014 5.997 238.62818430000002 5.6 205.4398315000001 11.352 202.09254869999992 4.777 228.74276779999977 4.47 207.46465989999976 4.753 209.24503820000004 6.14 183.33066650000015 3.812 191.05560300000013 4.402 195.25359290000006 5.018 220.78451529999973 5.396 202.70252180000008 5.693 196.36134820000015 4.588 230.0565061999999 11.438 228.6715898999999 5.628 210.25907990000027 5.093 211.18977099999967 5.204 193.85979069999976 4.539 193.52337809999992 4.292)
Error minima by case: (16.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 23.0002 1 0.0 0 0.4566 1 0.0723 1 0.0 0 0.5147 1 0.0 0 0.3166 1 1.0 1 0.0 0 0.1207 1 4.996 1 0.0 0 0.0 0 0.7189 8 1.7499 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 176.987
Average program size in population (points): 177.987
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 110.6635414521562
Average age in population: 98.9112200496745
Median age in population: 108.3592252949457
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.505
Error (vector) diversity:			 0.781
Behavioral diversity:				 0.787
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 249416116
--- Timings ---
Current time: 1529615684171 milliseconds
Total Time:         432.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.4 seconds, 28.8%
Fitness Testing:    247.7 seconds, 57.3%
Report:              60.3 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 33096.0
Test mean error for best: 16.54800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -39.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_525} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_362} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_185} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (in1 integer_yank integer_shove float_add in1 float_dec integer_inc tagged_525 integer_shove integer_inc in1 integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_pop float_dec float_dec float_dec float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_shove float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_362 integer_inc float_dec integer_inc integer_inc integer_inc integer_inc float_dec integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc integer_div integer_inc float_dec float_max float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc tagged_185 integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 5.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 1.0 1 25.0 2 2.0 1 3.0 1 11.0 2 18.0 2 18.0 2 3.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 1.0 1]
Total: 613.0
Mean: 12.26
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5289.278258100001
Median total errors in population: 926.5
Error averages by case: (228.94200229999984 5.246 201.7658535 5.927 219.51880589999996 5.301 183.61299700000004 5.833 201.04478060000008 5.153 243.99148819999994 4.704 197.04639549999996 6.216 235.65126610000013 5.668 200.65638400000003 11.321 195.06216550000005 4.882 228.7998544999999 4.56 200.5343172999998 4.686 207.1615030000001 6.254 187.33202580000005 4.055 182.25340780000016 4.426 185.87684070000006 5.013 216.32093089999978 5.514 199.268817 5.775 189.74452899999997 4.591 224.9125902999999 11.391 225.50082509999993 5.658 205.83507840000027 5.171 206.38119199999977 5.353 193.8897876999999 4.636 186.52441999999994 4.316)
Error minima by case: (9.5284 1 0.3376 1 0.0 0 0.0 0 0.0 0 9.9998 1 0.0 0 1.4566 1 0.0067 1 0.0 0 0.5886 1 0.0 0 0.7162 1 0.8205 1 0.0 0 0.0 0 3.5781 1 0.0 0 0.0 0 0.4609 8 2.7499 1 0.0 0 0.0 0 2.1627 1 0.0 0)
Average genome size in population (length): 178.141
Average program size in population (points): 179.141
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 111.6754140656312
Average age in population: 101.0187791644134
Median age in population: 109.7292357457788
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.504
Error (vector) diversity:			 0.772
Behavioral diversity:				 0.777
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 253869241
--- Timings ---
Current time: 1529615690760 milliseconds
Total Time:         439.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.0 seconds, 28.7%
Fitness Testing:    251.9 seconds, 57.4%
Report:              61.2 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 33096.0
Test mean error for best: 16.54800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -39.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_525} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_362} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (in1 integer_yank integer_shove float_add in1 float_dec integer_inc tagged_525 integer_shove integer_inc in1 integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_shove float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_362 integer_inc float_dec integer_inc integer_inc integer_inc integer_inc float_dec integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc integer_div integer_inc float_dec float_max float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 5.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 1.0 1 25.0 2 2.0 1 3.0 1 11.0 2 18.0 2 18.0 2 3.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 1.0 1]
Total: 613.0
Mean: 12.26
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5618.3409458
Median total errors in population: 977.5
Error averages by case: (241.74867129999976 5.377 213.11959919999998 5.901 233.96220639999984 5.543 197.13046680000008 6.179 216.64832979999983 5.38 255.1899230999997 4.819 211.55367690000014 6.253 247.34317750000017 5.836 216.64673539999998 11.323 209.02265239999977 5.043 239.77063239999978 4.74 216.76327619999972 4.9 220.0870204 6.303 199.41642590000012 4.167 198.15735030000022 4.559 202.15412339999997 5.06 230.46969379999945 5.715 205.59709520000007 5.83 199.55113210000007 4.74 237.14227989999992 11.45 238.07450169999981 5.835 220.59086320000037 5.331 221.1793916999995 5.563 206.3517146999996 4.814 195.52400609999972 4.485)
Error minima by case: (1.4716 1 0.0167 1 0.0 0 0.0 0 0.0 0 5.0002 1 0.0 0 2.4566 1 0.3867 1 0.0 0 0.0657 1 0.0 0 0.6256 1 0.1635 1 0.0 0 0.0 0 3.0 1 0.0 0 0.0 0 0.0599 7 3.7499 1 0.0 0 0.0 0 3.1627 1 0.0 0)
Average genome size in population (length): 174.701
Average program size in population (points): 175.701
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 113.1995551908188
Average age in population: 99.94775521453465
Median age in population: 111.0076785547268
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.523
Error (vector) diversity:			 0.781
Behavioral diversity:				 0.783
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 258236416
--- Timings ---
Current time: 1529615697002 milliseconds
Total Time:         445.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.4 seconds, 28.6%
Fitness Testing:    255.8 seconds, 57.4%
Report:              62.1 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 33096.0
Test mean error for best: 16.54800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -39.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_525} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_362} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_185} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (in1 integer_yank integer_shove float_add in1 float_dec integer_inc tagged_525 integer_shove integer_inc in1 integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_pop float_dec float_dec float_dec float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_shove float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_362 integer_inc float_dec integer_inc integer_inc integer_inc integer_inc float_dec integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc integer_div integer_inc float_dec float_max float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc tagged_185 integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 5.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 1.0 1 25.0 2 2.0 1 3.0 1 11.0 2 18.0 2 18.0 2 3.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 1.0 1]
Total: 613.0
Mean: 12.26
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4844.7695382
Median total errors in population: 796.0
Error averages by case: (210.33404419999982 5.06 185.05591780000006 5.606 200.01532230000007 5.12 165.31266869999993 5.584 179.89199929999998 5.032 225.43411989999987 4.454 176.5262511 5.806 220.14719120000015 5.507 180.32695029999994 11.226 179.36944970000005 4.633 209.42420289999976 4.348 184.82760009999984 4.467 186.6173092000001 5.94 168.0960964000002 3.741 169.1396217000002 4.195 170.42034070000003 4.728 198.48595229999972 5.326 182.95255830000016 5.524 176.02753419999996 4.389 212.67192280000003 11.343 207.87909309999992 5.52 187.70262140000028 4.892 187.62259359999976 5.123 175.17638989999986 4.411 169.24678709999992 4.09)
Error minima by case: (5.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 12.0002 1 0.0 0 3.4566 1 0.0511 1 0.0 0 0.6182 1 0.0 0 0.2791 1 1.0 1 0.0 0 0.0 0 1.4219 1 0.0 0 0.0 0 0.5391 7 2.2501 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 176.844
Average program size in population (points): 177.844
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 114.5148522455703
Average age in population: 102.6123995138919
Median age in population: 112.3241440407695
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.498
Error (vector) diversity:			 0.756
Behavioral diversity:				 0.763
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 262657466
--- Timings ---
Current time: 1529615703669 milliseconds
Total Time:         452.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.0 seconds, 28.5%
Fitness Testing:    260.0 seconds, 57.5%
Report:              62.9 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 33096.0
Test mean error for best: 16.54800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -39.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_525} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_362} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_185} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (in1 integer_yank integer_shove float_add in1 float_dec integer_inc tagged_525 integer_shove integer_inc in1 integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_pop float_dec float_dec float_dec float_dec integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_shove float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_362 integer_inc float_dec integer_inc integer_inc integer_inc integer_inc float_dec integer_inc integer_mod float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc integer_div integer_inc float_dec float_max float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc tagged_185 integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 5.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 1.0 1 25.0 2 2.0 1 3.0 1 11.0 2 18.0 2 18.0 2 3.0 2 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 1.0 1]
Total: 613.0
Mean: 12.26
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5537.921306600001
Median total errors in population: 956.0
Error averages by case: (235.77545749999982 5.431 216.017853 6.133 230.03465489999985 5.631 197.13319090000007 6.048 208.91505309999994 5.386 249.72334209999983 4.852 205.80937560000004 6.476 243.24466300000012 5.78 211.66552019999995 11.403 207.42109660000003 5.136 235.09329239999974 4.772 213.1689487999998 5.08 218.27365620000003 6.45 191.28953160000012 4.146 196.28424960000015 4.698 200.7904705 5.254 226.55457109999966 5.818 210.3233645 6.112 197.9121003000001 4.844 235.55642959999992 11.5 233.32351949999992 5.856 215.99462410000032 5.422 216.42244329999966 5.692 199.90060899999983 4.839 194.02028919999995 4.514)
Error minima by case: (12.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 19.0002 2 0.0 0 1.4566 1 0.1486 1 0.0 0 1.0136 1 0.0 0 1.4401 1 1.0 1 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 1.9401 7 2.7499 1 0.0 0 0.0 0 1.4603 1 0.0 0)
Average genome size in population (length): 173.822
Average program size in population (points): 174.822
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 115.6256537108365
Average age in population: 101.2348886677857
Median age in population: 113.5478009720548
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.506
Error (vector) diversity:			 0.74
Behavioral diversity:				 0.747
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 267002516
--- Timings ---
Current time: 1529615710444 milliseconds
Total Time:         458.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.5 seconds, 28.5%
Fitness Testing:    264.1 seconds, 57.6%
Report:              63.8 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 34150.0
Test mean error for best: 17.07500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 80.4715741385 
Correct output: -67.2036084163 | Program output: -52.2036084163
Correct output: -185.2914836352 | Program output: -183.2914836352
Correct output: 14.6061985977  | Program output: 15.6061985977 
Correct output: 31.4151982204  | Program output: 0.4151982204  
Correct output: 159.9998373306 | Program output: 90.9998373306 
Correct output: -0.1731946684  | Program output: -19.1731946684
Correct output: 113.4565963553 | Program output: 46.4565963553 
Correct output: -11.9277100864 | Program output: -2.9277100864 
Correct output: -84.3925535393 | Program output: -93.3925535393
Correct output: -18.9342988463 | Program output: -70.9342988463
Correct output: -106.7651499891 | Program output: -111.7651499891
Correct output: -48.7209464994 | Program output: -32.7209464994
Correct output: -17.8365333426 | Program output: -18.8365333426
Correct output: -24.3703567122 | Program output: -25.3703567122
Correct output: -24.1207371169 | Program output: -17.1207371169
Correct output: -135.4219119341 | Program output: -126.4219119341
Correct output: -21.9981612097 | Program output: -59.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -1.059933266  
Correct output: 101.7498992299 | Program output: 47.7498992299 
Correct output: -122.6662183691 | Program output: -131.6662183691
Correct output: -100.9942315294 | Program output: -120.9942315294
Correct output: -57.1627018111 | Program output: -63.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc in2 integer_inc integer_inc float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc integer_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [52.0 3 15.0 2 2.0 1 1.0 1 31.0 2 69.0 3 19.0 2 67.0 3 9.0 2 9.0 2 52.0 2 5.0 2 16.0 2 1.0 1 1.0 1 7.0 2 9.0 2 38.0 2 3.0 2 61.0 11 54.0 3 9.0 2 20.0 1 6.0 2 1.0 1]
Total: 614.0
Mean: 12.28
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5377.608704700001
Median total errors in population: 914.5
Error averages by case: (231.81671529999986 5.135 208.0303922 5.782 221.69961679999997 5.28 192.5628949999999 5.923 204.89801629999988 5.151 247.00065659999987 4.556 200.50856259999998 5.951 240.13654420000015 5.539 205.0739802 11.363 198.1107327000001 4.768 228.02526789999985 4.441 206.3704101999998 4.707 211.55651200000005 6.135 187.4872342000001 3.858 188.92883610000004 4.336 191.33970290000002 4.941 219.0808596999997 5.452 202.46828269999986 5.812 192.41149050000013 4.507 228.4088116 11.456 229.53452679999987 5.571 208.34051800000034 5.055 209.36332059999972 5.241 194.18567419999982 4.51 190.5111453999999 4.288)
Error minima by case: (1.4716 1 0.7964 1 0.0 0 0.0 0 1.0 1 5.0002 1 0.0 0 0.4566 1 0.4231 1 0.0 0 0.0657 1 0.0 0 0.8692 1 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.7789 8 1.7499 1 0.0 0 0.0 0 2.8373 1 0.0 0)
Average genome size in population (length): 177.055
Average program size in population (points): 178.055
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 116.9534611013698
Average age in population: 104.761719273759
Median age in population: 114.8164236002565
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.512
Error (vector) diversity:			 0.775
Behavioral diversity:				 0.78
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 271428566
--- Timings ---
Current time: 1529615716867 milliseconds
Total Time:         465.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.0 seconds, 28.4%
Fitness Testing:    268.1 seconds, 57.6%
Report:              65.0 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 33832.0
Test mean error for best: 16.91600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -50.2036084163
Correct output: -185.2914836352 | Program output: -181.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 2.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -17.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -0.9277100864 
Correct output: -84.3925535393 | Program output: -91.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -30.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -124.4219119341
Correct output: -21.9981612097 | Program output: -57.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -129.6662183691
Correct output: -100.9942315294 | Program output: -118.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_183} {:instruction integer_add} {:instruction in1} {:instruction tag_integer_366} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_dup} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_811} {:instruction integer_mult} {:instruction integer_mult} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float})
Best program: (tagged_183 integer_add in1 tag_integer_366 in1 integer_inc float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc integer_inc integer_yank integer_dup float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_yank float_dec integer_inc float_dec integer_inc integer_shove integer_inc integer_shove integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_dup_times integer_inc integer_inc float_dec integer_dup float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec tagged_811 integer_mult integer_mult integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_mult float_dec integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_float)
Errors: [53.0 3 17.0 2 4.0 1 4.0 1 29.0 2 70.0 2 17.0 2 68.0 3 11.0 2 7.0 2 53.0 2 2.0 1 18.0 2 2.0 1 2.0 1 10.0 1 11.0 2 36.0 2 0.0 0 62.0 11 55.0 3 7.0 1 18.0 2 7.0 2 0.0 0]
Total: 614.0
Mean: 12.28
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 6286.2367326
Median total errors in population: 960.0
Error averages by case: (265.8672705999998 5.88 246.95829070000008 6.351 257.8867483999999 5.932 229.66674830000017 6.445 240.36053899999985 5.694 279.4532597999998 5.327 233.90139440000007 6.62 273.2058430000001 6.209 240.6896171 11.622 236.5419401999998 5.417 262.9691552999997 5.267 241.12117699999973 5.466 248.58863840000012 6.805 223.60391730000018 4.684 225.3928569000002 5.067 227.70862359999998 5.667 254.8369398999996 6.093 243.14827750000012 6.245 224.7962939000001 5.22 264.8704345999999 11.631 263.5567772999999 6.217 244.78715590000024 5.773 245.2898128999997 5.911 231.42608519999976 5.332 223.7649353999998 4.969)
Error minima by case: (0.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 7.0002 1 0.0 0 0.4566 1 0.0 0 0.0 0 1.1947 1 0.0 0 1.2838 1 0.249 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0599 3 1.7499 1 0.0 0 0.0 0 1.1627 1 0.0 0)
Average genome size in population (length): 173.013
Average program size in population (points): 174.013
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 118.0169612722601
Average age in population: 102.1093347981369
Median age in population: 115.9643829792458
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.496
Error (vector) diversity:			 0.763
Behavioral diversity:				 0.769
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 275753566
--- Timings ---
Current time: 1529615723432 milliseconds
Total Time:         471.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.5 seconds, 28.3%
Fitness Testing:    272.0 seconds, 57.7%
Report:              65.9 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 33410.0
Test mean error for best: 16.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 80.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 90.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 46.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -70.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -18.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: -1.059933266  
Correct output: 101.7498992299 | Program output: 47.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -63.1627018111
Correct output: -21.8153206922 | Program output: -17.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc in2 integer_inc integer_inc float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc integer_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_yankdup integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [52.0 3 24.0 2 11.0 2 2.0 1 22.0 2 69.0 3 10.0 1 67.0 3 18.0 12 0.0 0 52.0 2 4.0 2 25.0 2 1.0 1 0.0 0 8.0 2 18.0 2 29.0 2 3.0 1 61.0 11 54.0 3 0.0 0 11.0 2 6.0 2 4.0 2]
Total: 614.0
Mean: 12.28
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5296.764913500001
Median total errors in population: 915.5
Error averages by case: (230.17149009999986 5.303 205.73131279999993 5.876 215.76632009999992 5.312 187.53524160000006 5.979 195.95862759999997 5.166 244.33871269999983 4.718 193.6317506000001 6.137 237.78864630000018 5.673 197.50875839999998 11.214 194.83178419999996 4.826 229.1585656999998 4.606 202.48544569999993 4.883 205.61764390000002 6.205 186.63232140000014 4.02 186.07818570000018 4.459 191.0608170999999 5.008 213.58997289999974 5.512 199.73282820000006 5.824 192.42725330000005 4.562 227.9147382 11.483 227.86859749999985 5.727 202.9795831000003 5.188 203.8150362999998 5.332 195.16565379999986 4.675 186.9546262999998 4.333)
Error minima by case: (5.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 0.9998 2 0.0 0 0.4566 1 0.471 1 0.0 0 2.2152 1 0.0 0 0.7209 1 1.0 1 0.0 0 0.0 0 0.1637 1 0.0 0 0.0 0 1.0599 7 0.7499 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 175.36
Average program size in population (points): 176.36
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 119.5589747450514
Average age in population: 105.4806440782212
Median age in population: 117.2180266112665
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.501
Error (vector) diversity:			 0.771
Behavioral diversity:				 0.779
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 280136940
--- Timings ---
Current time: 1529615729913 milliseconds
Total Time:         478.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.1 seconds, 28.3%
Fitness Testing:    276.0 seconds, 57.7%
Report:              67.0 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 33410.0
Test mean error for best: 16.70500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 80.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 90.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 46.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -70.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -18.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: -1.059933266  
Correct output: 101.7498992299 | Program output: 47.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -63.1627018111
Correct output: -21.8153206922 | Program output: -17.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc in2 integer_inc integer_inc float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc integer_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_yankdup integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [52.0 3 24.0 2 11.0 2 2.0 1 22.0 2 69.0 3 10.0 1 67.0 3 18.0 12 0.0 0 52.0 2 4.0 2 25.0 2 1.0 1 0.0 0 8.0 2 18.0 2 29.0 2 3.0 1 61.0 11 54.0 3 0.0 0 11.0 2 6.0 2 4.0 2]
Total: 614.0
Mean: 12.28
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5606.989255099999
Median total errors in population: 934.0
Error averages by case: (246.39523259999973 5.695 213.06262800000007 6.266 228.33302259999988 5.713 196.75553650000018 6.117 215.05752309999977 5.651 260.8076664999998 5.158 206.7191604 6.472 249.5146894000003 5.992 213.1452484 11.523 205.10196199999993 5.277 241.14547109999978 4.999 212.52435799999972 5.233 215.18207160000023 6.56 198.70752520000005 4.419 195.81673200000026 4.783 200.4724583999999 5.488 225.0239113999997 5.899 208.7354118 6.202 206.67813080000002 4.997 239.34720279999996 11.584 239.9695927999998 5.991 214.35628340000034 5.548 214.79328629999975 5.767 208.7321699999998 5.065 199.50597999999997 4.707)
Error minima by case: (10.4716 1 0.2036 1 0.0 0 0.0 0 0.0 0 4.9998 2 0.0 0 1.4566 1 0.0723 1 0.0 0 0.3423 1 0.0 0 0.0832 1 0.6522 1 0.0 0 0.0 0 2.4219 1 0.0 0 0.0 0 2.0599 8 1.8676 1 0.0 0 0.0 0 3.9246 1 0.0 0)
Average genome size in population (length): 173.869
Average program size in population (points): 174.869
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 120.5793838625361
Average age in population: 105.11519789453
Median age in population: 118.4242649511328
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.503
Error (vector) diversity:			 0.767
Behavioral diversity:				 0.772
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 284483056
--- Timings ---
Current time: 1529615736806 milliseconds
Total Time:         485.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.8 seconds, 28.2%
Fitness Testing:    280.2 seconds, 57.8%
Report:              68.0 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 33313.0
Test mean error for best: 16.65650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 80.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 17.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 90.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 46.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -70.9342988463
Correct output: -106.7651499891 | Program output: -109.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -18.8365333426
Correct output: -24.3703567122 | Program output: -23.3703567122
Correct output: -24.1207371169 | Program output: -15.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -1.059933266  
Correct output: 101.7498992299 | Program output: 47.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -63.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction tag_integer_68} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_add} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc in2 integer_inc integer_inc float_dec float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc integer_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec tag_integer_68 float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc integer_inc float_yankdup integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dup integer_inc integer_yank integer_add in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_sub float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat)
Errors: [52.0 3 24.0 2 11.0 2 3.0 1 22.0 2 69.0 3 10.0 1 67.0 3 18.0 12 0.0 0 52.0 2 3.0 1 25.0 2 1.0 1 1.0 1 9.0 2 18.0 2 29.0 2 0.0 0 61.0 11 54.0 3 0.0 0 11.0 2 6.0 2 1.0 1]
Total: 608.0
Mean: 12.16
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5164.2091318
Median total errors in population: 868.0
Error averages by case: (223.31480019999984 5.337 200.16388720000018 5.671 214.02461839999984 5.347 184.28656500000005 5.832 192.35191489999974 5.193 238.37314069999974 4.728 188.79672269999995 6.002 231.81075700000014 5.65 194.51431999999994 11.257 191.43109770000004 4.842 220.80835999999977 4.638 199.52457269999982 4.885 201.37149510000006 6.078 177.77696060000017 4.038 180.57136690000024 4.396 182.86528679999995 5.092 209.5687017999996 5.511 193.7593886999999 5.653 183.68292460000015 4.627 221.7025238 11.437 221.84016599999984 5.689 200.38164640000036 5.18 201.46588269999953 5.345 188.5266728999997 4.685 179.79635899999985 4.386)
Error minima by case: (18.5284 1 0.2036 1 0.0 0 0.0 0 0.5848 1 25.0002 2 0.0 0 1.5434 1 0.0723 1 0.0 0 5.64 1 0.0 0 0.2791 1 1.0 1 0.0 0 0.0 0 0.5781 1 0.0 0 0.0 0 2.0599 8 0.2501 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 174.18
Average program size in population (points): 175.18
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 121.635027937093
Average age in population: 106.3307967331039
Median age in population: 119.6734151159436
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.518
Error (vector) diversity:			 0.795
Behavioral diversity:				 0.799
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 288836844
--- Timings ---
Current time: 1529615743546 milliseconds
Total Time:         491.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.4 seconds, 28.1%
Fitness Testing:    284.4 seconds, 57.8%
Report:              68.9 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 33128.0
Test mean error for best: 16.56400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -34.9981612097
Correct output: 80.3206826008  | Program output: 76.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction tagged_525} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (in1 integer_yank integer_shove float_add in1 float_dec integer_inc tagged_525 integer_shove integer_inc in1 integer_inc float_dec integer_sub float_dec integer_inc float_dec float_dec integer_pop float_dec float_dec float_dec float_dup_times integer_inc float_dec float_dec in2 integer_inc integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc integer_rot integer_inc integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_yank integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_dup_times integer_inc integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 25.0 2 12.0 2 4.0 1 21.0 2 70.0 2 9.0 1 68.0 3 19.0 12 1.0 1 53.0 2 2.0 1 26.0 2 2.0 1 2.0 1 10.0 1 19.0 2 13.0 2 4.0 2 62.0 11 55.0 3 1.0 1 10.0 1 7.0 2 0.0 0]
Total: 609.0
Mean: 12.18
Genome size: 193
Size: 194
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5406.011101500001
Median total errors in population: 924.0
Error averages by case: (235.30170089999982 5.387 209.0012483000001 5.736 222.1446809999999 5.437 192.52629530000016 6.14 205.26067359999985 5.352 249.59141929999984 4.827 199.1973541000001 6.027 242.60056110000016 5.738 206.0362057 11.283 197.44271739999994 4.934 233.0509748999998 4.695 208.7149491999998 5.03 209.73009230000005 6.104 187.93962590000012 4.11 187.4038049000003 4.551 192.67832229999993 5.16 219.25521769999963 5.614 202.21257779999996 5.687 195.7384003000002 4.678 229.7676917 11.397 232.42413289999976 5.666 209.1343901000003 5.235 208.98480989999973 5.404 197.4591414999998 4.732 189.0401133999998 4.45)
Error minima by case: (1.4716 1 0.1264 1 0.0 0 0.0 0 0.6253 1 5.0002 1 0.0 0 1.4566 1 0.1323 1 0.0 0 0.9343 1 0.0 0 0.167 1 0.1635 1 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 2.0599 7 2.7499 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 174.409
Average program size in population (points): 175.409
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 122.8786902822665
Average age in population: 108.1096652602097
Median age in population: 120.9464201020198
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.526
Error (vector) diversity:			 0.808
Behavioral diversity:				 0.816
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 293196533
--- Timings ---
Current time: 1529615750154 milliseconds
Total Time:         498.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.9 seconds, 28.1%
Fitness Testing:    288.7 seconds, 57.9%
Report:              69.8 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 34483.0
Test mean error for best: 17.24150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -112.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -26.3703567122
Correct output: -24.1207371169 | Program output: -18.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_366} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_175} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_366 integer_rot float_frominteger float_add in1 integer_yank integer_shove integer_inc in1 float_dec print_integer float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_pop integer_mod float_dec float_dec integer_yank float_dec in2 integer_inc integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_175 integer_inc float_dec integer_inc integer_inc integer_inc integer_inc integer_inc integer_yank float_dec float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_yankdup integer_inc integer_dup_items integer_inc float_dec integer_inc integer_min float_dup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_mod float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 24.0 2 11.0 2 0.0 0 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 6.0 2 25.0 2 2.0 1 2.0 1 6.0 2 18.0 2 29.0 2 0.0 0 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 0.0 0]
Total: 611.0
Mean: 12.22
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5393.129469900001
Median total errors in population: 916.5
Error averages by case: (233.02232899999984 5.384 209.29007840000003 5.82 221.7497815999999 5.396 187.60292100000012 5.667 202.64138129999984 5.19 247.45806529999987 4.785 200.1932096000002 6.182 241.48910510000013 5.658 203.88741110000007 11.403 199.7077819999999 4.904 231.68317069999986 4.668 205.5044882999998 4.888 213.18826770000015 6.316 188.89317770000008 4.066 191.4874978000002 4.395 193.41095469999993 5.086 218.85360209999973 5.577 203.31597380000002 5.768 189.80694810000006 4.559 233.96392689999988 11.446 231.40451449999992 5.711 208.0549820000004 5.246 207.36092849999963 5.359 198.3829469999998 4.713 188.27202569999986 4.317)
Error minima by case: (5.4716 2 0.1504 1 0.0 0 0.0 0 0.0 0 1.0002 1 0.0 0 1.4566 1 0.0723 1 0.0 0 2.0657 1 0.0 0 0.2791 1 1.0 1 0.0 0 0.0 0 2.0 1 0.0 0 0.0 0 0.0186 8 2.7499 1 0.0 0 0.0 0 0.2038 1 0.0 0)
Average genome size in population (length): 173.135
Average program size in population (points): 174.135
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 124.288117110542
Average age in population: 108.6981775241595
Median age in population: 122.1932411509176
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.493
Error (vector) diversity:			 0.77
Behavioral diversity:				 0.775
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 297524558
--- Timings ---
Current time: 1529615756947 milliseconds
Total Time:         505.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.5 seconds, 28.0%
Fitness Testing:    292.7 seconds, 57.9%
Report:              70.7 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 34814.0
Test mean error for best: 17.40700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 80.4715741385 
Correct output: -67.2036084163 | Program output: -50.2036084163
Correct output: -185.2914836352 | Program output: -181.2914836352
Correct output: 14.6061985977  | Program output: 15.6061985977 
Correct output: 31.4151982204  | Program output: 2.4151982204  
Correct output: 159.9998373306 | Program output: 90.9998373306 
Correct output: -0.1731946684  | Program output: -17.1731946684
Correct output: 113.4565963553 | Program output: 46.4565963553 
Correct output: -11.9277100864 | Program output: -0.9277100864 
Correct output: -84.3925535393 | Program output: -91.3925535393
Correct output: -18.9342988463 | Program output: -70.9342988463
Correct output: -106.7651499891 | Program output: -111.7651499891
Correct output: -48.7209464994 | Program output: -30.7209464994
Correct output: -17.8365333426 | Program output: -18.8365333426
Correct output: -24.3703567122 | Program output: -25.3703567122
Correct output: -24.1207371169 | Program output: -17.1207371169
Correct output: -135.4219119341 | Program output: -124.4219119341
Correct output: -21.9981612097 | Program output: -57.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -1.059933266  
Correct output: 101.7498992299 | Program output: 47.7498992299 
Correct output: -122.6662183691 | Program output: -129.6662183691
Correct output: -100.9942315294 | Program output: -118.9942315294
Correct output: -57.1627018111 | Program output: -63.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction in2} {:instruction integer_yank} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (integer_add in1 integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec integer_mod float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank integer_add in2 integer_yank in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_shove integer_yank float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc float_dup integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [52.0 3 17.0 2 4.0 1 1.0 1 29.0 2 69.0 3 17.0 2 67.0 3 11.0 2 7.0 2 52.0 2 5.0 2 18.0 2 1.0 1 1.0 1 7.0 2 11.0 2 36.0 2 3.0 2 61.0 11 54.0 3 7.0 1 18.0 2 6.0 2 1.0 1]
Total: 612.0
Mean: 12.24
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5682.4429714
Median total errors in population: 926.0
Error averages by case: (245.63077719999976 5.522 217.3854347 6.112 232.91507799999965 5.678 199.74211520000017 5.994 218.60397699999965 5.563 258.8342654999998 4.957 211.82847910000032 6.242 249.66961210000014 5.829 218.21277229999998 11.416 210.02697429999995 5.177 242.75287329999983 4.814 218.1655859999998 5.222 218.9003253 6.438 201.46384210000014 4.218 199.48138390000025 4.703 203.39994679999995 5.392 230.05401529999955 5.84 214.95674830000007 6.009 207.3306389000002 4.885 241.82474449999998 11.477 239.64788739999983 5.855 219.36560580000037 5.469 220.3622570999996 5.665 209.53156899999982 4.869 204.48806229999977 4.522)
Error minima by case: (17.4716 1 0.2036 1 0.0 0 0.0 0 0.4152 1 10.9998 1 0.0 0 2.4566 1 0.1446 1 0.0 0 1.2585 1 0.0 0 0.8389 1 0.6754 1 0.0 0 0.0 0 4.0 1 0.0052 1 0.0 0 0.5991 7 3.7499 1 0.0 0 0.0 0 2.9732 1 0.0 0)
Average genome size in population (length): 174.245
Average program size in population (points): 175.245
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 125.3578920070565
Average age in population: 110.2697741260809
Median age in population: 123.4108629026311
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.503
Error (vector) diversity:			 0.778
Behavioral diversity:				 0.784
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 301880383
--- Timings ---
Current time: 1529615763390 milliseconds
Total Time:         511.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.1 seconds, 28.0%
Fitness Testing:    296.7 seconds, 58.0%
Report:              71.9 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 34603.0
Test mean error for best: 17.30150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction tag_integer_366} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction tagged_525} {:instruction float_max} {:instruction integer_inc} {:instruction in1} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (integer_add tag_integer_366 integer_rot integer_swap integer_add in1 tagged_525 float_max integer_inc in1 integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc in2 integer_inc integer_inc float_dec float_dec float_dec float_dup_items float_dec in2 integer_inc float_dec float_dec float_dec integer_yank float_dec integer_inc integer_yank float_dec integer_yankdup integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_sub float_dec float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat)
Errors: [53.0 3 24.0 2 11.0 2 2.0 1 22.0 2 70.0 2 10.0 1 68.0 3 18.0 12 0.0 0 53.0 2 4.0 2 25.0 2 2.0 1 0.0 0 8.0 2 18.0 2 29.0 2 0.0 0 62.0 11 55.0 3 0.0 0 11.0 2 7.0 2 0.0 0]
Total: 611.0
Mean: 12.22
Genome size: 180
Size: 181
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5314.4963591
Median total errors in population: 927.0
Error averages by case: (229.50349939999987 5.314 207.25480190000005 5.862 218.60112259999988 5.437 190.2601866 6.032 198.2863692999999 5.317 244.43203989999984 4.758 192.88173910000003 6.035 238.3645681000001 5.56 198.99263359999995 11.381 196.0519652999999 4.925 228.4862918999998 4.57 204.7401152999998 4.906 207.1098729000001 6.164 182.67840310000014 3.947 186.5262057000002 4.387 191.05178779999994 5.079 215.84592279999976 5.593 201.5875754 5.747 190.1477298 4.534 227.8894841999999 11.413 227.8551175999999 5.549 205.5675560000003 5.19 205.2529758999998 5.395 193.75461059999986 4.614 189.3587842999999 4.306)
Error minima by case: (12.5284 2 0.4073 1 0.0 0 0.0 0 0.0 0 19.0002 2 0.0 0 1.4566 2 0.0723 1 0.0 0 1.5647 1 0.0 0 0.5629 1 0.1635 1 0.0 0 0.0 0 1.5781 1 0.0 0 0.0 0 1.0018 8 2.7499 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 175.066
Average program size in population (points): 176.066
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 126.5955664886682
Average age in population: 112.1238374203946
Median age in population: 124.6425657725402
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.515
Error (vector) diversity:			 0.805
Behavioral diversity:				 0.811
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 306256808
--- Timings ---
Current time: 1529615770118 milliseconds
Total Time:         518.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.8 seconds, 27.9%
Fitness Testing:    300.9 seconds, 58.0%
Report:              72.8 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 35923.0
Test mean error for best: 17.96150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -51.2036084163
Correct output: -185.2914836352 | Program output: -182.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 1.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -18.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -1.9277100864 
Correct output: -84.3925535393 | Program output: -92.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -112.7651499891
Correct output: -48.7209464994 | Program output: -31.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -26.3703567122
Correct output: -24.1207371169 | Program output: -18.1207371169
Correct output: -135.4219119341 | Program output: -125.4219119341
Correct output: -21.9981612097 | Program output: -58.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -130.6662183691
Correct output: -100.9942315294 | Program output: -119.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction tag_integer_366} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_175} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub tag_integer_366 integer_rot float_frominteger float_add in1 integer_yank integer_shove integer_inc in1 float_dec print_integer float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_pop integer_mod float_dec float_dec integer_yank float_dec in2 integer_inc integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_175 integer_inc integer_shove integer_yank float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_yankdup integer_inc integer_dup_items integer_inc float_dec integer_inc integer_min float_dup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_mod float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 16.0 2 3.0 1 0.0 0 30.0 1 70.0 2 18.0 2 68.0 3 10.0 1 8.0 2 53.0 2 6.0 2 17.0 2 2.0 1 2.0 1 6.0 2 10.0 1 37.0 2 0.0 0 62.0 11 55.0 3 8.0 2 19.0 2 7.0 2 0.0 0]
Total: 610.0
Mean: 12.2
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5495.3049264
Median total errors in population: 929.5
Error averages by case: (237.3165552999998 5.281 213.8215261 5.86 225.92783599999987 5.532 197.7516885000001 5.897 212.0447578999997 5.339 251.35080689999987 4.781 201.91562650000031 6.135 244.92764610000015 5.622 209.2511152 11.326 203.09623269999994 5.053 233.32318939999976 4.598 210.88223899999983 5.029 213.18662810000015 6.301 191.4795097000001 4.007 193.58850810000018 4.486 196.5992138 5.146 222.34676949999948 5.702 209.42230040000004 5.778 196.23399590000014 4.649 233.65367779999997 11.468 234.7308771999998 5.65 212.87270420000036 5.355 213.10997909999972 5.504 199.71399389999976 4.654 193.2525490999999 4.352)
Error minima by case: (9.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 16.0002 1 0.0 0 1.4566 1 0.0723 1 0.0 0 1.9343 1 0.0 0 0.3678 1 0.8365 1 0.0 0 0.0 0 4.5781 1 0.0 0 0.0 0 2.0599 7 2.7499 1 0.0 0 0.0 0 2.0908 1 0.0 0)
Average genome size in population (length): 177.166
Average program size in population (points): 178.166
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 127.7662276787579
Average age in population: 115.5660632387202
Median age in population: 125.9767395900132
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.514
Error (vector) diversity:			 0.818
Behavioral diversity:				 0.824
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 310685716
--- Timings ---
Current time: 1529615777111 milliseconds
Total Time:         525.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.3 seconds, 27.9%
Fitness Testing:    305.1 seconds, 58.1%
Report:              73.6 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 35745.0
Test mean error for best: 17.87250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 79.4715741385 
Correct output: -67.2036084163 | Program output: -50.2036084163
Correct output: -185.2914836352 | Program output: -181.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 2.4151982204  
Correct output: 159.9998373306 | Program output: 89.9998373306 
Correct output: -0.1731946684  | Program output: -17.1731946684
Correct output: 113.4565963553 | Program output: 45.4565963553 
Correct output: -11.9277100864 | Program output: -0.9277100864 
Correct output: -84.3925535393 | Program output: -91.3925535393
Correct output: -18.9342988463 | Program output: -71.9342988463
Correct output: -106.7651499891 | Program output: -112.7651499891
Correct output: -48.7209464994 | Program output: -30.7209464994
Correct output: -17.8365333426 | Program output: -19.8365333426
Correct output: -24.3703567122 | Program output: -26.3703567122
Correct output: -24.1207371169 | Program output: -18.1207371169
Correct output: -135.4219119341 | Program output: -124.4219119341
Correct output: -21.9981612097 | Program output: -57.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -2.059933266  
Correct output: 101.7498992299 | Program output: 46.7498992299 
Correct output: -122.6662183691 | Program output: -129.6662183691
Correct output: -100.9942315294 | Program output: -118.9942315294
Correct output: -57.1627018111 | Program output: -64.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction tag_integer_366} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_add} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction tagged_175} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_mod} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (float_sub tag_integer_366 integer_rot float_frominteger float_add in1 integer_yank integer_shove integer_inc in1 float_dec print_integer float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_pop integer_mod float_dec float_dec integer_yank float_dec in2 integer_inc integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec tagged_175 integer_inc integer_shove integer_yank float_rot integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_yankdup integer_inc integer_dup_items integer_inc float_dec integer_inc integer_min float_dup integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_yank float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_yankdup integer_inc integer_yank float_dec integer_mod float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat integer_dup_times)
Errors: [53.0 3 17.0 2 4.0 1 0.0 0 29.0 2 70.0 2 17.0 2 68.0 3 11.0 2 7.0 2 53.0 2 6.0 2 18.0 2 2.0 1 2.0 1 6.0 2 11.0 2 36.0 2 0.0 0 62.0 11 55.0 3 7.0 1 18.0 2 7.0 2 0.0 0]
Total: 611.0
Mean: 12.22
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5349.8442092000005
Median total errors in population: 954.0
Error averages by case: (233.51689149999984 5.465 207.17404430000008 5.967 221.3324419999999 5.526 190.22615910000007 6.13 199.28322369999987 5.483 246.7204586999998 5.017 194.780134 6.209 240.13685180000022 5.764 199.79590310000006 11.38 199.54428959999987 5.069 227.61188459999977 4.724 207.1916682999998 5.102 208.19446750000006 6.368 187.12715660000012 4.129 189.7504903000002 4.568 191.66570169999991 5.163 217.82351259999962 5.719 199.37654909999998 5.802 189.05855830000016 4.687 228.56396829999989 11.438 230.39221319999976 5.801 207.52355620000043 5.354 208.21886189999967 5.479 192.66095709999973 4.802 186.67026569999985 4.358)
Error minima by case: (7.4716 1 0.016 1 0.0 0 0.0 0 0.0 0 0.9998 1 0.0 0 1.4566 1 0.136 1 0.0 0 1.6688 1 0.0 0 0.1809 1 0.2693 1 0.0 0 0.0 0 2.0 1 0.0 0 0.0 0 1.0599 8 2.7499 1 0.0 0 0.0 0 6.0 1 0.0 0)
Average genome size in population (length): 175.603
Average program size in population (points): 176.603
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 129.2703476101873
Average age in population: 114.7467497321279
Median age in population: 127.1507337351267
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.504
Error (vector) diversity:			 0.835
Behavioral diversity:				 0.842
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 315075741
--- Timings ---
Current time: 1529615783517 milliseconds
Total Time:         531.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.9 seconds, 27.8%
Fitness Testing:    309.0 seconds, 58.1%
Report:              74.9 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 33165.0
Test mean error for best: 16.58250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -50.2036084163
Correct output: -185.2914836352 | Program output: -181.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 2.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -17.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: -0.9277100864 
Correct output: -84.3925535393 | Program output: -91.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -112.7651499891
Correct output: -48.7209464994 | Program output: -30.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -26.3703567122
Correct output: -24.1207371169 | Program output: -18.1207371169
Correct output: -135.4219119341 | Program output: -124.4219119341
Correct output: -21.9981612097 | Program output: -57.9981612097
Correct output: 80.3206826008  | Program output: 79.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -129.6662183691
Correct output: -100.9942315294 | Program output: -118.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -18.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction print_float})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_mult integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dup_times integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove print_integer print_float print_float)
Errors: [51.0 3 17.0 2 4.0 1 0.0 0 29.0 2 68.0 3 17.0 2 66.0 3 11.0 2 7.0 2 51.0 2 6.0 2 18.0 2 0.0 0 2.0 1 6.0 2 11.0 2 36.0 2 1.0 2 60.0 11 53.0 3 7.0 1 18.0 2 5.0 2 3.0 2]
Total: 603.0
Mean: 12.06
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5930.918079
Median total errors in population: 929.0
Error averages by case: (251.9476981999998 5.459 225.2617722000002 5.969 245.9309089999999 5.691 209.58499360000016 5.963 225.8299910999998 5.506 265.76351919999973 5.054 223.65861380000013 6.39 258.2560961000001 5.758 227.35310999999996 11.569 220.0742030999999 5.201 252.24077889999984 4.845 233.01743659999968 5.308 230.77618090000016 6.489 211.2774909000001 4.237 209.3687249000002 4.71 212.03378030000002 5.322 242.6048689999996 5.874 219.99190850000008 5.883 219.75806660000018 4.87 248.3565148999999 11.492 248.36073469999994 5.752 232.7636963000002 5.495 233.7745106999997 5.648 219.7846157999997 4.881 215.1408636999998 4.641)
Error minima by case: (14.5284 2 0.2036 1 0.0 0 0.0 0 1.0 1 8.9998 1 0.0 0 2.4566 1 0.6405 1 0.0 0 0.0657 1 0.0 0 0.0793 1 0.0 0 0.0 0 0.0 0 5.0 1 0.0 0 0.0 0 1.5807 7 3.7499 1 0.0 0 0.0 0 2.038 1 0.0 0)
Average genome size in population (length): 177.068
Average program size in population (points): 178.068
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 130.3125674305004
Average age in population: 118.0083226336239
Median age in population: 128.4259512205166
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.521
Error (vector) diversity:			 0.838
Behavioral diversity:				 0.844
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 319502116
--- Timings ---
Current time: 1529615790550 milliseconds
Total Time:         538.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.6 seconds, 27.8%
Fitness Testing:    313.5 seconds, 58.2%
Report:              75.8 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 33055.0
Test mean error for best: 16.52750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 78.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -19.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_add} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_mult integer_inc float_dec integer_min float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_mult float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_add float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_add float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [51.0 3 24.0 2 11.0 2 2.0 1 22.0 2 68.0 3 10.0 1 66.0 3 18.0 12 0.0 0 51.0 2 4.0 2 25.0 2 0.0 0 0.0 0 8.0 2 18.0 2 29.0 2 2.0 2 60.0 11 53.0 3 0.0 0 11.0 2 5.0 2 2.0 2]
Total: 603.0
Mean: 12.06
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4929.723566500001
Median total errors in population: 879.5
Error averages by case: (213.7087059999999 4.983 191.48699750000003 5.64 202.27945459999998 5.267 176.3015010000001 5.768 187.39604039999992 5.156 228.30191059999987 4.6 181.30747060000013 6.172 224.48220070000008 5.328 187.36035609999988 11.461 178.23762780000007 4.782 211.07361509999993 4.269 187.60405559999992 4.911 194.52564430000007 6.087 165.90294060000002 3.669 171.62765229999997 4.34 175.96941380000004 4.931 199.29664559999986 5.414 187.08766829999996 5.565 177.95474760000005 4.391 213.60894180000003 11.489 213.75206549999987 5.337 187.9952673000003 5.067 188.4591146999997 5.303 174.3556029999999 4.339 171.25692569999987 4.122)
Error minima by case: (5.4716 1 0.2036 1 0.0 0 0.0 0 0.0 0 1.0002 1 0.0 0 0.5434 1 0.1542 1 0.0 0 2.0657 1 0.0 0 0.7209 1 0.0 0 0.0 0 0.0 0 0.5781 1 0.0 0 0.0 0 2.0599 8 0.7499 1 0.0 0 0.0 0 2.9715 1 0.0 0)
Average genome size in population (length): 176.843
Average program size in population (points): 177.843
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 131.545812135628
Average age in population: 119.1782371129952
Median age in population: 129.8043740756467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.533
Error (vector) diversity:			 0.843
Behavioral diversity:				 0.848
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 323922924
--- Timings ---
Current time: 1529615797040 milliseconds
Total Time:         545.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       151.2 seconds, 27.7%
Fitness Testing:    317.5 seconds, 58.2%
Report:              76.7 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 33055.0
Test mean error for best: 16.52750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 78.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -19.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_add} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_mult integer_inc float_dec integer_min float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_swap integer_inc integer_inc integer_yank integer_yank float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_mult float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_add float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_add float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [51.0 3 24.0 2 11.0 2 2.0 1 22.0 2 68.0 3 10.0 1 66.0 3 18.0 12 0.0 0 51.0 2 4.0 2 25.0 2 0.0 0 0.0 0 8.0 2 18.0 2 29.0 2 2.0 2 60.0 11 53.0 3 0.0 0 11.0 2 5.0 2 2.0 2]
Total: 603.0
Mean: 12.06
Genome size: 183
Size: 184
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5430.0458437
Median total errors in population: 912.0
Error averages by case: (233.35235589999994 5.179 210.35127959999997 5.887 223.7942078999999 5.336 190.0944643999999 5.461 206.64687099999978 5.251 247.3996697999999 4.839 203.08117100000013 6.129 242.04063510000006 5.508 204.33305190000002 11.461 201.49589149999997 4.85 233.1284316999999 4.456 206.18339519999986 4.916 215.3890796000002 6.318 191.9798373 3.861 189.81046490000014 4.335 192.00247899999988 5.087 221.47467099999977 5.484 201.813158 5.749 191.8479078000001 4.36 234.68914990000002 11.437 232.37083269999988 5.501 210.4865988000003 5.119 211.22818149999983 5.315 199.1976277999999 4.513 195.34943039999993 4.153)
Error minima by case: (13.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 20.0002 2 0.0 0 3.4566 1 0.069 1 0.0 0 1.5291 1 0.0 0 0.1767 1 0.0 0 0.0 0 0.0 0 3.0 1 0.0 0 0.0 0 2.0599 8 4.7499 1 0.0 0 0.0 0 3.669 1 0.0 0)
Average genome size in population (length): 175.911
Average program size in population (points): 176.911
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 132.9727855010015
Average age in population: 120.4557529607301
Median age in population: 131.0182562609569
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.506
Error (vector) diversity:			 0.823
Behavioral diversity:				 0.828
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 328320599
--- Timings ---
Current time: 1529615803750 milliseconds
Total Time:         552.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.0 seconds, 27.7%
Fitness Testing:    321.5 seconds, 58.2%
Report:              77.6 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 33624.0
Test mean error for best: 16.81200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 80.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 17.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 90.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 46.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -70.9342988463
Correct output: -106.7651499891 | Program output: -109.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -18.8365333426
Correct output: -24.3703567122 | Program output: -23.3703567122
Correct output: -24.1207371169 | Program output: -15.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -1.059933266  
Correct output: 101.7498992299 | Program output: 47.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -63.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction tag_integer_68} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_add} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_integer} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc in2 integer_inc integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove integer_inc float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_shove integer_yank float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_dup_times integer_inc integer_inc integer_yank float_dec float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec tag_integer_68 float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc integer_inc float_yankdup integer_inc integer_yank integer_inc float_dec integer_inc float_dec float_dup integer_inc integer_yank integer_add in2 integer_inc integer_shove integer_inc float_dec integer_inc integer_sub float_dec in2 integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove print_integer print_float integer_fromfloat)
Errors: [52.0 3 24.0 2 11.0 2 3.0 1 22.0 2 69.0 3 10.0 1 67.0 3 18.0 12 0.0 0 52.0 2 3.0 1 25.0 2 1.0 1 1.0 1 9.0 2 18.0 2 29.0 2 0.0 0 61.0 11 54.0 3 0.0 0 11.0 2 6.0 2 1.0 1]
Total: 608.0
Mean: 12.16
Genome size: 198
Size: 199
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4860.9590241
Median total errors in population: 835.5
Error averages by case: (211.61855159999985 4.998 189.5787353 5.367 198.45215289999993 4.875 172.3234351 5.418 182.41731049999984 4.89 226.50123329999985 4.707 179.8172354000002 5.669 220.43660060000008 5.381 184.16044030000003 11.38 175.02740010000005 4.361 210.5901186999998 4.267 188.0925826999998 4.55 191.03199770000018 5.802 165.4784331000001 3.641 168.72548180000015 4.034 169.75997349999997 4.752 196.1406251999996 5.095 184.6792553000001 5.166 172.6195267 4.149 210.23162089999983 11.411 209.7384631999999 5.425 185.57803050000035 4.628 187.31354139999968 4.906 176.33181399999987 4.336 171.13946429999996 3.967)
Error minima by case: (8.5284 1 0.2036 1 0.0 0 0.0 0 1.0 1 15.0002 1 0.0 0 2.5434 1 0.0562 1 0.0 0 0.6815 1 0.0 0 0.7209 1 0.0 0 0.0 0 0.0 0 4.0 1 0.0 0 0.0 0 2.0599 8 1.2501 1 0.0 0 0.0 0 5.0 1 0.0 0)
Average genome size in population (length): 179.264
Average program size in population (points): 180.264
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 134.1792010765403
Average age in population: 124.7332855862838
Median age in population: 132.3955818815738
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.507
Error (vector) diversity:			 0.857
Behavioral diversity:				 0.861
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 332801974
--- Timings ---
Current time: 1529615810928 milliseconds
Total Time:         559.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.5 seconds, 27.6%
Fitness Testing:    325.9 seconds, 58.3%
Report:              78.4 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 32764.0
Test mean error for best: 16.38200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -45.2036084163
Correct output: -185.2914836352 | Program output: -176.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 7.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -12.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 4.0722899136  
Correct output: -84.3925535393 | Program output: -86.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -25.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -119.4219119341
Correct output: -21.9981612097 | Program output: -52.9981612097
Correct output: 80.3206826008  | Program output: 82.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -124.6662183691
Correct output: -100.9942315294 | Program output: -113.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_max} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_mult integer_inc float_dec integer_min float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dec integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_sub float_dec float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_yankdup integer_yank float_dec integer_dup in2 integer_inc float_dup integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_max integer_dup_times)
Errors: [51.0 3 22.0 2 9.0 2 2.0 1 24.0 2 68.0 3 12.0 2 66.0 3 16.0 12 2.0 1 51.0 2 4.0 2 23.0 2 0.0 0 0.0 0 8.0 2 16.0 2 31.0 2 2.0 1 60.0 11 53.0 3 2.0 1 13.0 2 5.0 2 1.0 1]
Total: 605.0
Mean: 12.1
Genome size: 196
Size: 197
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5910.459581500001
Median total errors in population: 879.1353
Error averages by case: (254.05587669999989 5.45 226.94792609999996 5.795 242.48650099999995 5.504 208.83373580000006 5.886 227.91611509999987 5.376 266.79775459999985 5.203 222.88594770000012 6.17 258.3126155000001 5.776 227.76257659999996 11.698 218.88274159999986 4.924 248.39428739999985 4.681 227.95213599999994 5.064 232.99919120000007 6.261 207.91775100000018 4.091 208.6976470000001 4.531 214.30914829999998 5.203 240.27341259999983 5.686 223.32743879999998 5.707 216.7848967000001 4.553 248.1052474 11.459 248.88276409999992 5.829 229.64650270000027 5.285 231.74744199999978 5.498 216.6677925999999 4.76 215.02913299999997 4.453)
Error minima by case: (18.5284 1 0.7964 1 0.0 0 0.0 0 1.0 1 3.1066 1 0.0 0 3.4566 1 0.7612 1 0.0 0 0.6464 1 0.0 0 0.2791 1 0.0 0 0.0 0 0.0 0 3.0 1 0.0 0 0.0 0 0.8264 8 4.7499 1 0.0 0 0.0 0 4.1627 1 0.0 0)
Average genome size in population (length): 175.323
Average program size in population (points): 176.323
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 135.5441543242595
Average age in population: 121.6839314212093
Median age in population: 133.6478353121255
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.496
Error (vector) diversity:			 0.846
Behavioral diversity:				 0.848
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 337184999
--- Timings ---
Current time: 1529615817493 milliseconds
Total Time:         565.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.1 seconds, 27.6%
Fitness Testing:    329.9 seconds, 58.3%
Report:              79.6 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 34124.0
Test mean error for best: 17.06200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -52.2036084163
Correct output: -185.2914836352 | Program output: -183.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 0.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -19.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: -2.9277100864 
Correct output: -84.3925535393 | Program output: -93.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -112.7651499891
Correct output: -48.7209464994 | Program output: -32.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -26.3703567122
Correct output: -24.1207371169 | Program output: -18.1207371169
Correct output: -135.4219119341 | Program output: -126.4219119341
Correct output: -21.9981612097 | Program output: -59.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -131.6662183691
Correct output: -100.9942315294 | Program output: -120.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -24.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction -29} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec tag_integer_464 integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_yank float_dec float_dec integer_inc float_dec float_dec float_yankdup float_dec in2 integer_inc integer_inc float_dec float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec -29 integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove integer_yank float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_sub float_dec float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_sub float_dec float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [51.0 3 15.0 2 2.0 1 0.0 0 31.0 2 68.0 3 19.0 2 66.0 3 9.0 2 9.0 2 51.0 2 6.0 2 16.0 2 0.0 0 2.0 1 6.0 2 9.0 2 38.0 2 3.0 2 60.0 11 53.0 3 9.0 2 20.0 1 5.0 2 3.0 1]
Total: 606.0
Mean: 12.12
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5484.821214200001
Median total errors in population: 881.0
Error averages by case: (231.53572929999982 5.35 215.68579690000004 5.777 229.43904689999982 5.478 198.67658720000006 5.994 210.7666478999998 5.378 246.09650129999974 5.193 202.5889900000001 5.82 240.66597180000016 5.622 213.0121104 11.466 204.4662352999998 4.941 228.13061859999988 4.599 214.43194789999967 5.021 214.50609050000006 6.055 185.5537205000001 3.996 191.72574380000023 4.478 197.41972379999999 5.139 226.79148979999945 5.636 212.59021310000003 5.657 197.48634360000008 4.663 229.48677200000003 11.416 230.00721389999987 5.622 215.1344262000003 5.21 217.69525399999952 5.411 195.3191519999998 4.649 192.5528874999997 4.485)
Error minima by case: (8.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 15.0002 1 0.0 0 0.4566 2 0.0723 1 0.0 0 0.5701 1 0.0 0 2.3699 1 0.0 0 0.0 0 0.0 0 1.4219 1 0.0018 1 0.0 0 2.0599 7 1.7499 1 0.0 0 0.0 0 0.8373 1 0.0 0)
Average genome size in population (length): 176.183
Average program size in population (points): 177.183
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 136.8406076750023
Average age in population: 123.5532330556191
Median age in population: 134.8620103802936
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.494
Error (vector) diversity:			 0.837
Behavioral diversity:				 0.841
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 341589249
--- Timings ---
Current time: 1529615824295 milliseconds
Total Time:         572.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.9 seconds, 27.6%
Fitness Testing:    334.0 seconds, 58.3%
Report:              80.6 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 33888.0
Test mean error for best: 16.94400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -48.2036084163
Correct output: -185.2914836352 | Program output: -179.2914836352
Correct output: 14.6061985977  | Program output: 17.6061985977 
Correct output: 31.4151982204  | Program output: 4.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -15.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 1.0722899136  
Correct output: -84.3925535393 | Program output: -89.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -109.7651499891
Correct output: -48.7209464994 | Program output: -28.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -23.3703567122
Correct output: -24.1207371169 | Program output: -15.1207371169
Correct output: -135.4219119341 | Program output: -122.4219119341
Correct output: -21.9981612097 | Program output: -55.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -127.6662183691
Correct output: -100.9942315294 | Program output: -116.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction -29} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec tag_integer_464 integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_yank float_dec float_dec integer_inc float_dec float_dec float_yankdup float_dec in2 integer_inc integer_inc float_dec float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec -29 integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove integer_yank float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 float_dup float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank integer_inc float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_fromfloat integer_dup_times)
Errors: [51.0 3 19.0 2 6.0 2 3.0 1 27.0 2 68.0 3 15.0 2 66.0 3 13.0 11 5.0 1 51.0 2 3.0 1 20.0 1 0.0 0 1.0 1 9.0 2 13.0 2 34.0 2 0.0 0 60.0 11 53.0 3 5.0 1 16.0 2 5.0 2 0.0 0]
Total: 603.0
Mean: 12.06
Genome size: 197
Size: 198
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4995.252926300001
Median total errors in population: 688.0
Error averages by case: (213.59323749999987 4.99 196.2367557999999 5.304 207.62699579999997 4.945 175.19469989999996 5.111 192.84713079999997 4.765 227.99232349999988 4.845 187.91520710000003 5.456 222.0418998000001 5.266 193.39985770000004 11.531 182.63007810000002 4.355 213.89844279999986 4.306 189.43811709999991 4.501 197.4350430000001 5.623 167.35841180000006 3.609 170.6549786000001 3.967 177.0084059 4.706 206.61591059999986 5.1 190.40374839999998 5.189 179.32140350000003 4.094 211.6408533 11.338 211.2010507999999 5.297 195.21632820000022 4.669 197.26044059999984 4.901 177.81278379999983 4.324 178.32982189999987 3.987)
Error minima by case: (6.5284 1 1.2036 1 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 1.0 1 0.0496 1 0.0 0 2.0657 1 0.0 0 0.1287 1 0.0 0 0.0 0 0.0 0 5.0 1 0.3584 1 0.0 0 1.0599 2 2.7499 1 0.0 0 0.0 0 0.1627 1 0.0 0)
Average genome size in population (length): 175.972
Average program size in population (points): 176.972
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 138.3164023221029
Average age in population: 124.6899559908484
Median age in population: 136.0390344119331
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.462
Error (vector) diversity:			 0.848
Behavioral diversity:				 0.852
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 345988299
--- Timings ---
Current time: 1529615830842 milliseconds
Total Time:         579.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.7 seconds, 27.6%
Fitness Testing:    337.9 seconds, 58.3%
Report:              81.5 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 32574.0
Test mean error for best: 16.28700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -41.2036084163
Correct output: -185.2914836352 | Program output: -172.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 11.4151982204 
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -8.1731946684 
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 8.0722899136  
Correct output: -84.3925535393 | Program output: -82.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -21.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -115.4219119341
Correct output: -21.9981612097 | Program output: -48.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -120.6662183691
Correct output: -100.9942315294 | Program output: -109.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_dec} {:instruction tagged_59} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_shove float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc float_dup integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_yank integer_yank float_dec tagged_59 integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_div integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_add float_dec integer_dup in2 integer_inc float_dup integer_inc float_min integer_inc integer_shove integer_inc float_dec integer_inc float_dec float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_float)
Errors: [51.0 3 26.0 2 13.0 2 4.0 1 20.0 1 68.0 3 8.0 1 66.0 3 20.0 12 2.0 1 51.0 2 2.0 1 27.0 2 0.0 0 2.0 1 10.0 1 20.0 1 27.0 2 0.0 0 60.0 11 53.0 3 2.0 1 9.0 1 5.0 2 0.0 0]
Total: 603.0
Mean: 12.06
Genome size: 190
Size: 191
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5190.7367214000005
Median total errors in population: 836.5
Error averages by case: (221.6329840999998 5.126 199.71115559999993 5.653 217.2464771999999 5.39 184.38166769999995 5.823 200.55705149999986 5.227 235.78521939999985 5.014 194.13615590000003 5.812 230.4124763000001 5.316 200.67016279999993 11.592 190.6227495 4.79 221.3805734999998 4.417 200.7880101999998 4.918 204.6741931000001 6.052 178.84929160000013 3.701 175.52107830000008 4.343 180.4185912000001 4.992 214.2515102999997 5.528 192.5824026 5.538 192.28657520000002 4.493 216.1264569999999 11.367 220.4891727999999 5.313 204.3898566000003 5.131 205.11448069999972 5.322 185.34475079999984 4.457 183.71967749999985 4.329)
Error minima by case: (5.4716 2 0.7964 1 0.0 0 0.0 0 1.0 1 1.0002 2 0.0 0 7.4566 1 0.0431 1 0.0 0 0.6599 1 0.0 0 1.1231 1 0.0 0 0.0 0 0.0 0 1.5781 1 0.4163 1 0.0 0 1.0599 2 8.7499 1 0.0 0 0.0 0 0.1627 1 0.0 0)
Average genome size in population (length): 177.354
Average program size in population (points): 178.354
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 139.3164023221029
Average age in population: 127.1737159191477
Median age in population: 137.2895808390226
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.496
Error (vector) diversity:			 0.835
Behavioral diversity:				 0.84
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 350422049
--- Timings ---
Current time: 1529615837632 milliseconds
Total Time:         585.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.2 seconds, 27.5%
Fitness Testing:    342.1 seconds, 58.4%
Report:              82.4 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 32704.0
Test mean error for best: 16.35200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -44.2036084163
Correct output: -185.2914836352 | Program output: -175.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 8.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -11.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 5.0722899136  
Correct output: -84.3925535393 | Program output: -85.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -24.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -118.4219119341
Correct output: -21.9981612097 | Program output: -51.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -123.6662183691
Correct output: -100.9942315294 | Program output: -112.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_div integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_add float_dec integer_dup in2 integer_inc float_dup integer_inc float_min integer_inc integer_shove integer_inc float_dec integer_inc float_dec float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_float)
Errors: [51.0 3 23.0 2 10.0 1 4.0 1 23.0 2 68.0 3 11.0 2 66.0 3 17.0 12 1.0 1 51.0 2 2.0 1 24.0 2 0.0 0 2.0 1 10.0 1 17.0 2 30.0 1 0.0 0 60.0 11 53.0 3 1.0 1 12.0 2 5.0 2 0.0 0]
Total: 600.0
Mean: 12.0
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5047.2610683
Median total errors in population: 713.0
Error averages by case: (217.4680691999999 5.166 195.4545657000001 5.519 209.89842459999986 5.301 177.69834369999992 5.442 192.65261549999994 5.061 232.0085560999998 5.065 186.90523000000016 5.555 225.95679140000016 5.48 192.33696380000004 11.647 183.44240629999987 4.647 216.27543439999982 4.459 195.11925599999975 4.842 199.31317160000006 5.836 167.76235740000016 3.747 172.74147910000022 4.255 179.15443459999997 4.998 206.94093159999966 5.425 191.94103620000018 5.394 182.1093154000001 4.265 217.08518549999997 11.33 215.3204898999999 5.495 196.11468640000032 5.004 197.1323577999996 5.23 180.93943469999974 4.482 177.64053139999984 4.204)
Error minima by case: (13.5284 1 0.146 1 0.0 0 0.0 0 1.0 1 20.0002 2 0.0 0 1.4566 2 0.1323 1 0.0 0 0.3309 1 0.0 0 0.1333 1 0.0 0 0.0 0 0.0 0 1.0 1 0.9982 1 0.0 0 2.0599 2 2.7499 1 0.0 0 0.0 0 4.0 1 0.0 0)
Average genome size in population (length): 177.545
Average program size in population (points): 178.545
Average percent parens in population: 0.007
Minimum age in population: 0.0
Maximum age in population: 140.5626313367059
Average age in population: 128.3181385939968
Median age in population: 138.5718985744343
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.485
Error (vector) diversity:			 0.841
Behavioral diversity:				 0.846
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 354860299
--- Timings ---
Current time: 1529615844349 milliseconds
Total Time:         592.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.9 seconds, 27.5%
Fitness Testing:    346.2 seconds, 58.4%
Report:              83.6 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 32704.0
Test mean error for best: 16.35200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 81.4715741385 
Correct output: -67.2036084163 | Program output: -44.2036084163
Correct output: -185.2914836352 | Program output: -175.2914836352
Correct output: 14.6061985977  | Program output: 18.6061985977 
Correct output: 31.4151982204  | Program output: 8.4151982204  
Correct output: 159.9998373306 | Program output: 91.9998373306 
Correct output: -0.1731946684  | Program output: -11.1731946684
Correct output: 113.4565963553 | Program output: 47.4565963553 
Correct output: -11.9277100864 | Program output: 5.0722899136  
Correct output: -84.3925535393 | Program output: -85.3925535393
Correct output: -18.9342988463 | Program output: -69.9342988463
Correct output: -106.7651499891 | Program output: -108.7651499891
Correct output: -48.7209464994 | Program output: -24.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -22.3703567122
Correct output: -24.1207371169 | Program output: -14.1207371169
Correct output: -135.4219119341 | Program output: -118.4219119341
Correct output: -21.9981612097 | Program output: -51.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: -0.059933266  
Correct output: 101.7498992299 | Program output: 48.7498992299 
Correct output: -122.6662183691 | Program output: -123.6662183691
Correct output: -100.9942315294 | Program output: -112.9942315294
Correct output: -57.1627018111 | Program output: -62.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank float_dec float_inc float_dec float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_div integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup integer_add float_dec integer_dup in2 integer_inc float_dup integer_inc float_min integer_inc integer_inc integer_inc float_dec integer_inc float_dec float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank integer_yank integer_inc float_dec integer_inc float_dec integer_inc float_yankdup print_float)
Errors: [51.0 3 23.0 2 10.0 1 4.0 1 23.0 2 68.0 3 11.0 2 66.0 3 17.0 12 1.0 1 51.0 2 2.0 1 24.0 2 0.0 0 2.0 1 10.0 1 17.0 2 30.0 1 0.0 0 60.0 11 53.0 3 1.0 1 12.0 2 5.0 2 0.0 0]
Total: 600.0
Mean: 12.0
Genome size: 191
Size: 192
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5583.6321485
Median total errors in population: 853.0
Error averages by case: (240.20039399999987 5.199 216.69678699999992 5.853 229.61453170000001 5.422 199.42819420000006 5.853 214.02100149999987 5.271 254.56864699999983 5.119 207.86459900000006 5.995 248.1895594000001 5.57 213.42060180000007 11.827 207.02251569999999 4.86 237.99462589999985 4.444 213.01868159999987 4.872 218.9520538000001 6.193 196.59305860000006 3.739 195.8578846000001 4.317 201.406956 5.143 227.37382739999975 5.559 204.79652080000008 5.714 203.65326430000002 4.432 238.07062940000003 11.51 237.98000079999989 5.591 216.37760830000033 5.136 217.1155156999997 5.308 202.85750059999992 4.5 198.82118939999995 4.309)
Error minima by case: (19.5284 1 0.2036 1 1.0 1 0.0 0 0.0 0 26.0002 1 0.0 0 0.5434 2 0.0636 1 0.0 0 1.8112 1 0.0 0 0.1414 1 0.0 0 0.0 0 0.0 1 0.5781 1 0.0018 1 0.0 0 2.0599 2 0.7499 1 0.0 0 0.0 0 1.3508 1 0.0 0)
Average genome size in population (length): 175.999
Average program size in population (points): 176.999
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 141.7150136195964
Average age in population: 127.8383155290968
Median age in population: 139.7857748300805
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.511
Error (vector) diversity:			 0.837
Behavioral diversity:				 0.841
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 359259449
--- Timings ---
Current time: 1529615850937 milliseconds
Total Time:         599.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.6 seconds, 27.5%
Fitness Testing:    350.1 seconds, 58.4%
Report:              84.5 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 32390.0
Test mean error for best: 16.19500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 82.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 17.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 92.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 48.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -68.9342988463
Correct output: -106.7651499891 | Program output: -109.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -16.8365333426
Correct output: -24.3703567122 | Program output: -23.3703567122
Correct output: -24.1207371169 | Program output: -15.1207371169
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -49.9981612097
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: 0.940066734   
Correct output: 101.7498992299 | Program output: 49.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -61.1627018111
Correct output: -21.8153206922 | Program output: -19.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_max} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc float_inc float_inc integer_inc in1 float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_yank integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_shove float_dec float_dec float_dec integer_inc float_dec integer_rot integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_sub float_dec float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_yankdup integer_yank float_dec integer_dup in2 integer_inc float_dup integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_max integer_dup_times)
Errors: [50.0 2 25.0 2 12.0 2 3.0 1 21.0 2 67.0 3 9.0 1 65.0 3 19.0 12 1.0 1 50.0 1 3.0 1 26.0 2 1.0 1 1.0 1 9.0 2 19.0 2 28.0 2 3.0 1 59.0 2 52.0 3 1.0 1 10.0 1 4.0 2 2.0 2]
Total: 593.0
Mean: 11.86
Genome size: 186
Size: 187
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4851.666974
Median total errors in population: 744.5
Error averages by case: (209.66941880000002 4.924 190.10668970000003 5.692 200.63350179999992 5.138 167.4153571 5.386 182.97761889999998 4.966 225.0179556999999 4.879 176.77756860000005 5.801 219.60680600000012 5.184 183.91027089999992 11.744 178.36811039999995 4.561 208.51490759999984 4.215 183.2104090999999 4.659 189.1424141000001 6.035 161.48377770000013 3.426 169.71329610000018 4.066 174.6171305 4.85 198.01819789999976 5.285 183.01879560000006 5.52 176.1799045 4.176 211.21333239999998 11.348 209.13064219999987 5.175 186.40729770000036 4.887 187.11387189999976 5.023 171.83108459999994 4.272 172.31661419999992 4.06)
Error minima by case: (2.8764 1 0.2036 1 1.0 1 0.0 0 1.5848 1 20.0002 2 0.0 0 7.4566 1 0.017 1 0.0 0 1.2832 1 0.0 0 1.3751 1 0.0 0 0.0 0 0.0 0 1.5781 1 0.0 0 0.0 0 2.0599 2 4.892 1 0.0 0 0.0 0 3.0 1 0.0 0)
Average genome size in population (length): 175.9
Average program size in population (points): 176.9
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 143.0076792946835
Average age in population: 128.6620910537599
Median age in population: 141.0103966384193
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.49
Error (vector) diversity:			 0.839
Behavioral diversity:				 0.844
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 363656199
--- Timings ---
Current time: 1529615857800 milliseconds
Total Time:         605.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.2 seconds, 27.4%
Fitness Testing:    354.3 seconds, 58.5%
Report:              85.4 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 33051.0
Test mean error for best: 16.52550
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 83.4715741385 
Correct output: -67.2036084163 | Program output: -44.2036084163
Correct output: -185.2914836352 | Program output: -175.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 8.4151982204  
Correct output: 159.9998373306 | Program output: 93.9998373306 
Correct output: -0.1731946684  | Program output: -11.1731946684
Correct output: 113.4565963553 | Program output: 49.4565963553 
Correct output: -11.9277100864 | Program output: 5.0722899136  
Correct output: -84.3925535393 | Program output: -85.3925535393
Correct output: -18.9342988463 | Program output: -67.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -24.7209464994
Correct output: -17.8365333426 | Program output: -15.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -118.4219119341
Correct output: -21.9981612097 | Program output: -51.9981612097
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: 1.940066734   
Correct output: 101.7498992299 | Program output: 50.7498992299 
Correct output: -122.6662183691 | Program output: -123.6662183691
Correct output: -100.9942315294 | Program output: -112.9942315294
Correct output: -57.1627018111 | Program output: -60.1627018111
Correct output: -21.8153206922 | Program output: -17.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove float_stackdepth float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_swap float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank integer_inc integer_mult integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 float_dup float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc integer_div integer_inc float_dec integer_inc integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove float_inc print_float integer_fromfloat)
Errors: [49.0 2 23.0 2 10.0 1 2.0 1 23.0 2 66.0 3 11.0 2 64.0 3 17.0 12 1.0 1 49.0 2 4.0 2 24.0 2 2.0 1 0.0 0 8.0 2 17.0 2 30.0 1 3.0 1 58.0 2 51.0 2 1.0 1 12.0 2 3.0 2 4.0 2]
Total: 585.0
Mean: 11.7
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5250.346591200001
Median total errors in population: 918.5
Error averages by case: (226.6038343999998 5.194 203.89460120000004 5.744 219.93833619999998 5.409 181.00476020000008 5.772 202.0086298999999 5.209 241.20322989999983 5.185 194.51160390000004 6.06 231.62056640000011 5.598 199.58958819999995 11.696 194.87888409999988 4.83 223.65783539999984 4.482 202.29254609999984 4.807 203.9884231 6.169 181.38636990000018 3.724 181.8136875000002 4.245 184.78005130000003 5.065 216.35728909999972 5.535 197.5126873 5.649 193.55904360000005 4.397 221.48042059999997 11.153 221.35547839999984 5.587 204.91378710000023 5.156 205.1022570999998 5.32 188.12555879999982 4.563 188.00112149999993 4.217)
Error minima by case: (3.4716 1 0.2036 1 1.0 1 0.0 0 0.0 0 3.0002 1 0.0 0 1.4566 1 0.3843 1 0.0 0 0.3263 1 0.0 0 0.1328 1 0.0 0 0.0 0 0.1207 1 3.5781 1 0.0 0 0.0 0 2.0599 2 2.7499 1 0.0 0 0.0 0 3.0 1 0.0 0)
Average genome size in population (length): 175.003
Average program size in population (points): 176.003
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 144.4652876454695
Average age in population: 127.8464908438231
Median age in population: 142.2950851305466
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.521
Error (vector) diversity:			 0.833
Behavioral diversity:				 0.839
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 368030599
--- Timings ---
Current time: 1529615864499 milliseconds
Total Time:         612.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.7 seconds, 27.4%
Fitness Testing:    358.3 seconds, 58.5%
Report:              86.5 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 32572.0
Test mean error for best: 16.28600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 83.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 93.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 49.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -67.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -15.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: 1.940066734   
Correct output: 101.7498992299 | Program output: 50.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -60.1627018111
Correct output: -21.8153206922 | Program output: -17.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_max integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove float_stackdepth float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_swap float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank integer_inc integer_mult integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_min integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc integer_inc print_integer float_dec integer_dup in2 float_dup float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc integer_div integer_inc float_dec integer_inc integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove float_inc print_float integer_fromfloat)
Errors: [49.0 2 24.0 2 11.0 2 2.0 1 22.0 2 66.0 3 10.0 1 64.0 3 18.0 12 0.0 0 49.0 2 4.0 2 25.0 2 2.0 1 0.0 0 8.0 2 18.0 2 29.0 2 3.0 1 58.0 2 51.0 2 0.0 0 11.0 2 3.0 2 4.0 2]
Total: 583.0
Mean: 11.66
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5904.0327697
Median total errors in population: 977.5
Error averages by case: (251.23460169999987 5.433 229.50848870000004 6.332 243.78129119999977 5.7 208.4772580000001 5.968 226.68046939999968 5.498 265.1295782999998 5.459 221.3068143000003 6.468 259.95997000000017 5.832 227.3697987 11.82 222.0346225999999 5.123 250.60617829999978 4.724 226.1832915999996 5.172 233.71201390000013 6.713 204.1632773000001 3.923 209.89161050000013 4.632 212.59868980000007 5.509 240.97454099999956 5.844 219.96180550000005 6.142 213.8590710000002 4.718 251.39097489999997 10.98 249.93545809999986 5.826 229.7911972000004 5.499 230.0907117999996 5.608 215.80463379999975 4.821 211.2434220999999 4.599)
Error minima by case: (14.5284 1 0.2036 1 0.0 0 0.0 0 1.0 1 13.9998 1 0.0 0 3.4566 1 0.0723 1 0.0 0 3.1714 1 0.0 0 0.1796 1 0.0 0 0.0 0 0.0 0 1.5781 1 0.0 0 0.0 0 1.0599 2 4.7499 1 0.0 0 0.0 0 2.0 1 0.0 0)
Average genome size in population (length): 173.928
Average program size in population (points): 174.928
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 145.3768091489772
Average age in population: 127.8641550455946
Median age in population: 143.5820702067443
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.552
Error (vector) diversity:			 0.837
Behavioral diversity:				 0.841
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 372378524
--- Timings ---
Current time: 1529615871168 milliseconds
Total Time:         619.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.3 seconds, 27.3%
Fitness Testing:    362.4 seconds, 58.5%
Report:              87.7 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 32572.0
Test mean error for best: 16.28600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 83.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 93.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 49.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -67.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -15.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 83.3206826008 
Correct output: 59.940066734   | Program output: 1.940066734   
Correct output: 101.7498992299 | Program output: 50.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -60.1627018111
Correct output: -21.8153206922 | Program output: -17.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_max integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove float_stackdepth float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_swap float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank integer_inc integer_mult integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_min integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc integer_inc print_integer float_dec integer_dup in2 float_dup float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc integer_div integer_inc float_dec integer_inc integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove float_inc print_float integer_fromfloat)
Errors: [49.0 2 24.0 2 11.0 2 2.0 1 22.0 2 66.0 3 10.0 1 64.0 3 18.0 12 0.0 0 49.0 2 4.0 2 25.0 2 2.0 1 0.0 0 8.0 2 18.0 2 29.0 2 3.0 1 58.0 2 51.0 2 0.0 0 11.0 2 3.0 2 4.0 2]
Total: 583.0
Mean: 11.66
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5762.457591
Median total errors in population: 909.0
Error averages by case: (243.24435839999987 5.284 225.48511770000016 5.858 236.40438969999985 5.636 209.31501920000002 6.053 220.92214239999984 5.355 256.91994089999986 5.325 213.82806870000007 6.296 253.6409318000001 5.681 222.6484789000001 11.878 215.9385991 5.043 243.21748339999982 4.625 221.63697469999985 5.137 226.00298100000006 6.369 199.09559190000004 3.876 205.60653070000023 4.594 211.50162640000005 5.257 234.13216009999974 5.766 217.67965600000005 5.755 208.79453960000006 4.635 245.12814279999992 10.519 243.91832319999995 5.698 222.86329490000028 5.4 223.29918969999972 5.499 208.75298179999973 4.764 207.56306799999984 4.615)
Error minima by case: (12.5284 1 0.7964 1 0.0 0 0.0 0 0.0 0 19.0002 1 0.0 0 1.4566 1 0.007 1 0.0 0 2.1693 1 0.0 0 0.1796 1 0.0 0 0.0 0 0.1207 1 3.5781 1 0.0 0 0.0 0 1.0599 2 2.7499 1 0.0 0 0.0 0 3.0 1 0.0 0)
Average genome size in population (length): 174.617
Average program size in population (points): 175.617
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 146.7699102960484
Average age in population: 128.8864999359877
Median age in population: 144.7187940113306
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.511
Error (vector) diversity:			 0.819
Behavioral diversity:				 0.827
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 376743774
--- Timings ---
Current time: 1529615877898 milliseconds
Total Time:         626.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.0 seconds, 27.3%
Fitness Testing:    366.6 seconds, 58.5%
Report:              88.6 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 32813.0
Test mean error for best: 16.40650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 82.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 92.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 48.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -68.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -16.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: 0.940066734   
Correct output: 101.7498992299 | Program output: 49.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -61.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction -29} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_min} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec tag_integer_464 integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_yank float_dec float_dec integer_inc float_dec float_dec float_yankdup float_dec in2 integer_inc integer_inc float_dec float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec -29 integer_inc integer_inc integer_yank float_dec float_dec float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_swap float_dec integer_inc integer_dup integer_inc integer_inc integer_inc integer_yank integer_inc integer_mult integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_min float_dup integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 float_dup float_dup in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove float_inc print_float integer_fromfloat)
Errors: [50.0 2 24.0 2 11.0 2 2.0 1 22.0 2 67.0 3 10.0 1 65.0 3 18.0 12 0.0 0 50.0 1 4.0 2 25.0 2 1.0 1 0.0 0 8.0 2 18.0 2 29.0 2 0.0 0 59.0 2 52.0 3 0.0 0 11.0 2 4.0 2 0.0 0]
Total: 579.0
Mean: 11.58
Genome size: 199
Size: 200
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5266.1742806
Median total errors in population: 916.5
Error averages by case: (226.87191299999986 5.177 202.92473740000005 5.849 222.03856669999976 5.599 184.41293100000013 6.056 198.57872139999975 5.341 242.17490739999977 5.255 192.79133010000007 6.049 234.32809560000013 5.608 199.25685059999998 11.851 194.7636668 4.967 225.71159739999985 4.445 204.00238379999976 4.998 202.68422720000015 6.224 179.13949150000005 3.763 180.74653730000023 4.507 186.36941359999992 5.214 218.28377569999958 5.699 196.71882399999996 5.754 194.05869790000014 4.511 221.99072669999993 10.217 224.9934482999999 5.64 207.75149500000046 5.341 206.66335779999966 5.431 191.24314929999986 4.602 185.06943509999994 4.508)
Error minima by case: (4.5284 1 0.2036 1 0.0 0 0.0 0 0.0 0 5.9998 1 0.0 0 8.4566 1 0.0723 1 0.0 0 1.3336 1 0.0 0 0.179 1 0.0 0 0.0 0 0.0 0 3.4219 1 0.0018 1 0.0 0 4.0599 2 9.7499 1 0.0 0 0.0 0 3.0 1 0.0 0)
Average genome size in population (length): 178.079
Average program size in population (points): 179.079
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 147.9763566542427
Average age in population: 133.945321891038
Median age in population: 145.9854106089022
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.536
Error (vector) diversity:			 0.852
Behavioral diversity:				 0.857
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 381195574
--- Timings ---
Current time: 1529615884349 milliseconds
Total Time:         632.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.5 seconds, 27.3%
Fitness Testing:    370.6 seconds, 58.6%
Report:              89.5 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 32660.0
Test mean error for best: 16.33000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 83.4715741385 
Correct output: -67.2036084163 | Program output: -43.2036084163
Correct output: -185.2914836352 | Program output: -174.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 9.4151982204  
Correct output: 159.9998373306 | Program output: 93.9998373306 
Correct output: -0.1731946684  | Program output: -10.1731946684
Correct output: 113.4565963553 | Program output: 49.4565963553 
Correct output: -11.9277100864 | Program output: 6.0722899136  
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -67.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -23.7209464994
Correct output: -17.8365333426 | Program output: -15.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -117.4219119341
Correct output: -21.9981612097 | Program output: -50.9981612097
Correct output: 80.3206826008  | Program output: 77.3206826008 
Correct output: 59.940066734   | Program output: 1.940066734   
Correct output: 101.7498992299 | Program output: 50.7498992299 
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -111.9942315294
Correct output: -57.1627018111 | Program output: -60.1627018111
Correct output: -21.8153206922 | Program output: -19.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_max integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec float_dec integer_inc integer_shove float_stackdepth float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_inc integer_inc float_dec float_dec integer_inc integer_yank integer_swap float_dec integer_inc float_dec integer_inc integer_inc integer_inc integer_yank integer_inc integer_mult integer_inc float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc float_dec float_dec float_dec integer_inc float_min integer_inc integer_inc float_rot integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc integer_inc print_integer float_dec integer_dup in2 float_dup float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc integer_div integer_inc float_dec integer_div integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec in2 integer_inc integer_yank float_dec float_dec integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_flush integer_shove float_inc print_float integer_fromfloat)
Errors: [49.0 2 24.0 2 11.0 2 2.0 1 22.0 2 66.0 3 10.0 1 64.0 3 18.0 12 0.0 0 49.0 2 4.0 2 25.0 2 2.0 1 0.0 0 8.0 2 18.0 2 29.0 2 3.0 2 58.0 2 51.0 2 0.0 0 11.0 2 3.0 2 2.0 2]
Total: 582.0
Mean: 11.64
Genome size: 200
Size: 201
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 4613.064970899999
Median total errors in population: 817.0
Error averages by case: (203.80345690000001 4.761 179.7822688999999 5.468 190.2774966 4.925 162.22652920000007 5.477 174.29341970000007 4.732 218.81592849999993 4.884 170.05395600000006 5.675 210.05363590000007 5.185 177.72742989999998 11.727 165.70357800000014 4.351 198.47431699999981 4.0 174.16886590000004 4.429 183.64789220000011 5.891 154.04482920000007 3.257 157.4912651 3.898 162.7015453 4.64 188.28851849999973 5.052 172.09784579999993 5.37 170.3633956999999 4.059 196.86863219999992 9.589 199.42844989999992 5.156 175.4625280000002 4.718 175.6317623999999 4.799 162.68830319999995 4.217 158.71512090000002 3.994)
Error minima by case: (11.5284 1 0.2821 1 0.0 0 0.0 0 0.0 0 18.0002 1 0.0 0 4.4566 1 0.0723 1 0.0 0 1.9343 1 0.0 0 0.2655 1 0.0 0 0.0 0 0.0 0 0.5781 1 0.3005 1 0.0 0 2.0599 2 5.7499 1 0.0 0 0.0 0 2.0 1 0.0 0)
Average genome size in population (length): 177.121
Average program size in population (points): 178.121
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 149.4676548314502
Average age in population: 135.5215671240741
Median age in population: 147.2701111554883
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.527
Error (vector) diversity:			 0.86
Behavioral diversity:				 0.864
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 385623049
--- Timings ---
Current time: 1529615891237 milliseconds
Total Time:         639.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.1 seconds, 27.2%
Fitness Testing:    374.7 seconds, 58.6%
Report:              90.4 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 32868.0
Test mean error for best: 16.43400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 82.4715741385 
Correct output: -67.2036084163 | Program output: -45.2036084163
Correct output: -185.2914836352 | Program output: -176.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 7.4151982204  
Correct output: 159.9998373306 | Program output: 92.9998373306 
Correct output: -0.1731946684  | Program output: -12.1731946684
Correct output: 113.4565963553 | Program output: 48.4565963553 
Correct output: -11.9277100864 | Program output: 4.0722899136  
Correct output: -84.3925535393 | Program output: -86.3925535393
Correct output: -18.9342988463 | Program output: -68.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -25.7209464994
Correct output: -17.8365333426 | Program output: -16.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -119.4219119341
Correct output: -21.9981612097 | Program output: -52.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: 0.940066734   
Correct output: 101.7498992299 | Program output: 49.7498992299 
Correct output: -122.6662183691 | Program output: -124.6662183691
Correct output: -100.9942315294 | Program output: -113.9942315294
Correct output: -57.1627018111 | Program output: -61.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction tag_integer_464} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec tag_integer_464 integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_yank float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_shove integer_yank float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_shove integer_inc integer_inc integer_yank integer_mult float_dec float_dec integer_inc integer_inc integer_inc integer_inc integer_yank integer_inc integer_shove integer_inc float_dec float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc float_dec integer_mult float_dec integer_inc integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc float_yankdup print_integer float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_inc float_dec print_integer float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove float_inc print_float integer_fromfloat)
Errors: [50.0 2 22.0 2 9.0 2 2.0 1 24.0 2 67.0 3 12.0 2 65.0 3 16.0 12 2.0 1 50.0 1 4.0 2 23.0 2 1.0 1 0.0 0 8.0 2 16.0 2 31.0 2 0.0 0 59.0 2 52.0 3 2.0 1 13.0 2 4.0 2 0.0 0]
Total: 584.0
Mean: 11.68
Genome size: 188
Size: 189
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5141.532993899999
Median total errors in population: 789.0
Error averages by case: (221.72766349999998 4.902 199.61428130000004 5.734 212.44362129999993 5.305 182.83308380000005 5.779 199.36199969999987 4.978 235.89984569999987 5.171 189.41301900000005 5.928 228.3741689000001 5.573 200.85963729999995 11.939 189.30573589999992 4.697 217.59257149999985 4.313 197.44615329999985 4.835 201.91190100000006 6.142 171.48785880000003 3.698 178.16096230000014 4.392 183.79633560000002 5.033 210.1524910999997 5.432 193.52604700000003 5.588 192.00119149999998 4.304 215.46435829999993 8.715 218.27228979999984 5.49 198.64446830000034 5.032 199.5253389999997 5.146 182.96171869999995 4.559 183.64825129999986 4.423)
Error minima by case: (10.5284 1 0.7964 1 0.0 0 0.0 0 0.0 0 13.9998 1 0.0 0 8.4566 1 0.0563 1 0.0 0 0.0657 1 0.0 0 1.2791 1 0.0 0 0.0 0 0.1207 1 1.4219 1 0.0 0 0.0 0 2.0599 2 9.7499 1 0.0 0 0.0 0 1.0 1 0.0 0)
Average genome size in population (length): 176.372
Average program size in population (points): 177.372
Average percent parens in population: 0.009
Minimum age in population: 0.0
Maximum age in population: 150.3851534087892
Average age in population: 135.3364728288578
Median age in population: 148.4717442080275
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.492
Error (vector) diversity:			 0.852
Behavioral diversity:				 0.858
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 390032124
--- Timings ---
Current time: 1529615897987 milliseconds
Total Time:         646.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.5 seconds, 27.2%
Fitness Testing:    378.9 seconds, 58.6%
Report:              91.6 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 32223.0
Test mean error for best: 16.11150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 84.4715741385 
Correct output: -67.2036084163 | Program output: -42.2036084163
Correct output: -185.2914836352 | Program output: -173.2914836352
Correct output: 14.6061985977  | Program output: 19.6061985977 
Correct output: 31.4151982204  | Program output: 10.4151982204 
Correct output: 159.9998373306 | Program output: 94.9998373306 
Correct output: -0.1731946684  | Program output: -9.1731946684 
Correct output: 113.4565963553 | Program output: 50.4565963553 
Correct output: -11.9277100864 | Program output: 7.0722899136  
Correct output: -84.3925535393 | Program output: -83.3925535393
Correct output: -18.9342988463 | Program output: -66.9342988463
Correct output: -106.7651499891 | Program output: -107.7651499891
Correct output: -48.7209464994 | Program output: -22.7209464994
Correct output: -17.8365333426 | Program output: -14.8365333426
Correct output: -24.3703567122 | Program output: -21.3703567122
Correct output: -24.1207371169 | Program output: -13.1207371169
Correct output: -135.4219119341 | Program output: -116.4219119341
Correct output: -21.9981612097 | Program output: -49.9981612097
Correct output: 80.3206826008  | Program output: 82.3206826008 
Correct output: 59.940066734   | Program output: 2.940066734   
Correct output: 101.7498992299 | Program output: 51.7498992299 
Correct output: -122.6662183691 | Program output: -121.6662183691
Correct output: -100.9942315294 | Program output: -110.9942315294
Correct output: -57.1627018111 | Program output: -59.1627018111
Correct output: -21.8153206922 | Program output: -20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_max} {:instruction integer_dup_times})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc float_inc float_inc float_inc float_inc integer_inc in1 integer_flush float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_yank float_dec float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc integer_yank integer_inc float_dec in2 integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yank float_dec integer_inc integer_inc float_dec float_dec integer_inc integer_yank float_dec integer_yankdup integer_inc integer_inc float_dec float_dec float_dec integer_inc integer_dup integer_inc float_dec integer_shove float_dec float_dec integer_inc integer_yank float_dec float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec float_dec float_dec integer_inc integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_inc float_dec integer_inc integer_yank integer_inc float_dec float_dup integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_sub float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_yank float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dec float_dec integer_inc float_yankdup integer_yank float_dec integer_dup in2 integer_inc float_dup integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec integer_yankdup integer_inc float_dec integer_inc float_yankdup print_float integer_max integer_dup_times)
Errors: [48.0 3 25.0 2 12.0 2 5.0 1 21.0 2 65.0 3 9.0 1 63.0 3 19.0 12 1.0 1 48.0 2 1.0 1 26.0 2 3.0 1 3.0 1 11.0 2 19.0 2 28.0 2 2.0 1 57.0 2 50.0 2 1.0 1 10.0 1 2.0 1 1.0 1]
Total: 582.0
Mean: 11.64
Genome size: 187
Size: 188
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5438.981817600001
Median total errors in population: 901.5
Error averages by case: (232.13851609999992 4.941 213.04619200000005 5.77 227.93720429999993 5.424 191.75004659999996 5.971 202.3079162000001 5.222 246.69235419999987 5.24 198.08019360000003 6.021 239.87419230000015 5.603 203.717114 11.839 203.70865739999996 4.812 231.16278639999987 4.259 212.7814606999999 4.872 212.32262239999994 6.207 186.02707960000018 3.78 192.29992130000016 4.457 196.70554620000001 5.122 225.51691399999967 5.568 204.4475103000001 5.675 200.81849870000008 4.406 229.05163880000006 8.057 230.15249679999988 5.546 213.8457924000003 5.232 213.11055169999977 5.367 196.74438019999988 4.583 196.2932313999999 4.475)
Error minima by case: (6.4716 1 0.7964 1 0.0 0 0.0 0 0.0 0 16.9998 1 0.0 0 2.5434 1 0.2448 1 0.0 0 0.3402 1 0.0 0 0.1767 1 0.0 0 0.0 0 0.1207 1 6.0 1 0.0 0 0.0 0 0.9401 2 1.2501 1 0.0 0 0.0 0 2.0 1 0.0 0)
Average genome size in population (length): 176.359
Average program size in population (points): 177.359
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 151.8549991877505
Average age in population: 135.8598265320412
Median age in population: 149.7200784757061
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.527
Error (vector) diversity:			 0.86
Behavioral diversity:				 0.869
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 394440999
--- Timings ---
Current time: 1529615904660 milliseconds
Total Time:         653.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.1 seconds, 27.1%
Fitness Testing:    383.1 seconds, 58.7%
Report:              92.7 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 32113.0
Test mean error for best: 16.05650
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 83.4715741385 
Correct output: -67.2036084163 | Program output: -44.2036084163
Correct output: -185.2914836352 | Program output: -175.2914836352
Correct output: 14.6061985977  | Program output: 16.6061985977 
Correct output: 31.4151982204  | Program output: 8.4151982204  
Correct output: 159.9998373306 | Program output: 93.9998373306 
Correct output: -0.1731946684  | Program output: -11.1731946684
Correct output: 113.4565963553 | Program output: 49.4565963553 
Correct output: -11.9277100864 | Program output: 5.0722899136  
Correct output: -84.3925535393 | Program output: -85.3925535393
Correct output: -18.9342988463 | Program output: -67.9342988463
Correct output: -106.7651499891 | Program output: -110.7651499891
Correct output: -48.7209464994 | Program output: -24.7209464994
Correct output: -17.8365333426 | Program output: -15.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -16.1207371169
Correct output: -135.4219119341 | Program output: -118.4219119341
Correct output: -21.9981612097 | Program output: -51.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: 1.940066734   
Correct output: 101.7498992299 | Program output: 50.7498992299 
Correct output: -122.6662183691 | Program output: -123.6662183691
Correct output: -100.9942315294 | Program output: -112.9942315294
Correct output: -57.1627018111 | Program output: -60.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_rot} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_dup_items} {:instruction float_dec} {:instruction print_integer} {:instruction float_dec} {:instruction in2} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_dup} {:instruction in2} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_yank} {:instruction integer_shove} {:instruction float_inc} {:instruction print_float} {:instruction integer_fromfloat})
Best program: (tag_integer_269 integer_add integer_max integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc float_inc integer_inc in1 float_dec integer_inc float_dec integer_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec float_dec float_dec float_dec float_dec integer_inc float_dec in2 integer_inc integer_inc integer_min float_dec integer_inc integer_shove integer_inc float_dec float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc integer_yank float_dec integer_inc integer_inc integer_inc integer_yank integer_inc integer_mult integer_inc float_dec integer_inc float_dec integer_yank integer_inc integer_dec integer_yank integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank integer_inc float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec integer_inc float_dec float_dec integer_inc float_dec integer_inc integer_inc integer_yank float_rot integer_inc float_dec float_dec float_dec integer_inc integer_inc integer_yank integer_inc float_dec integer_inc integer_inc float_dec integer_inc float_yankdup print_integer float_dec print_integer float_dec integer_inc integer_inc float_dec float_dec integer_inc float_dec integer_inc float_yankdup print_integer float_dec integer_inc float_dec integer_inc float_dec integer_dup_items float_dec print_integer float_dec in2 integer_inc integer_yank float_dec integer_inc float_dec float_dec integer_inc float_yankdup print_integer float_dec integer_dup in2 integer_inc float_dup integer_inc float_dec integer_inc integer_shove integer_inc float_dec integer_inc float_dec integer_yank float_dec float_dec in2 float_yankdup integer_div float_dec integer_inc integer_yank float_dec float_dec integer_inc float_dec integer_inc integer_yank float_dec integer_inc integer_yank integer_inc float_dec float_dec integer_inc integer_inc float_yankdup integer_yank integer_shove float_inc print_float integer_fromfloat)
Errors: [49.0 2 23.0 2 10.0 1 2.0 1 23.0 2 66.0 3 11.0 2 64.0 3 17.0 12 1.0 1 49.0 2 4.0 2 24.0 2 2.0 1 0.0 0 8.0 2 17.0 2 30.0 1 0.0 0 58.0 2 51.0 2 1.0 1 12.0 2 3.0 2 0.0 0]
Total: 575.0
Mean: 11.5
Genome size: 195
Size: 196
Percent parens: 0.005
--- Population Statistics ---
Average total errors in population: 5604.2341842
Median total errors in population: 877.0
Error averages by case: (243.3034732999999 4.896 217.28891440000012 5.88 230.64615119999985 5.531 199.80285350000005 5.883 211.79381929999988 5.336 257.8941794999999 5.309 209.30508250000008 6.148 252.16634750000003 5.644 214.05841499999997 11.782 204.9329163999999 4.954 241.1130150999999 4.284 214.60761609999977 5.002 221.09268590000002 6.356 195.08545270000008 3.92 197.12108870000014 4.653 202.8716395 5.259 227.55948629999966 5.674 205.56689079999998 5.742 206.96181070000011 4.48 229.9008401 7.105 242.19941799999995 5.494 216.22246770000032 5.319 216.23393949999976 5.454 207.6930464999998 4.649 199.47663399999988 4.582)
Error minima by case: (2.5284 2 0.2036 1 1.0 1 0.0 0 0.0 0 9.0002 2 0.0 0 3.4566 1 0.0044 1 0.0 0 2.3396 1 0.0 0 0.2791 1 0.0 0 0.0 0 0.0 0 0.5781 1 0.0 0 0.0 0 0.0599 1 4.7499 1 0.0 0 0.0 0 0.1627 1 0.0 0)
Average genome size in population (length): 175.698
Average program size in population (points): 176.698
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 152.9423997411633
Average age in population: 136.0898299120303
Median age in population: 150.9481513663768
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.523
Error (vector) diversity:			 0.846
Behavioral diversity:				 0.851
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 398833274
--- Timings ---
Current time: 1529615911433 milliseconds
Total Time:         659.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.6 seconds, 27.1%
Fitness Testing:    387.5 seconds, 58.7%
Report:              93.6 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 3116.0
Test mean error for best: 1.55800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 
133.4715741385
Correct output: -67.2036084163 | Program output: 
-66.2036084163
Correct output: -185.2914836352 | Program output: 
-184.2914836352
Correct output: 14.6061985977  | Program output: 
15.6061985977
Correct output: 31.4151982204  | Program output: 
32.4151982204
Correct output: 159.9998373306 | Program output: 
160.9998373306
Correct output: -0.1731946684  | Program output: 
0.8268053316 
Correct output: 113.4565963553 | Program output: 
114.4565963553
Correct output: -11.9277100864 | Program output: 
-10.9277100864
Correct output: -84.3925535393 | Program output: 
-83.3925535393
Correct output: -18.9342988463 | Program output: 
-17.9342988463
Correct output: -106.7651499891 | Program output: 
-105.7651499891
Correct output: -48.7209464994 | Program output: 
-47.7209464994
Correct output: -17.8365333426 | Program output: 
-16.8365333426
Correct output: -24.3703567122 | Program output: 
-23.3703567122
Correct output: -24.1207371169 | Program output: 
-23.1207371169
Correct output: -135.4219119341 | Program output: 
-134.4219119341
Correct output: -21.9981612097 | Program output: 
-20.9981612097
Correct output: 80.3206826008  | Program output: 
81.3206826008
Correct output: 59.940066734   | Program output: 
60.940066734 
Correct output: 101.7498992299 | Program output: 
102.7498992299
Correct output: -122.6662183691 | Program output: 
-121.6662183691
Correct output: -100.9942315294 | Program output: 
-99.9942315294
Correct output: -57.1627018111 | Program output: 
-56.1627018111
Correct output: -21.8153206922 | Program output: 
-20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction 83} {:instruction float_dup_items} {:instruction float_dup} {:instruction tagged_414} {:instruction print_integer} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_swap} {:instruction float_rot} {:instruction float_shove} {:instruction in2} {:instruction -94.61851746029556} {:instruction integer_yank} {:instruction tag_float_122} {:instruction float_add} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_newline} {:instruction float_add} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_shove} {:instruction print_float})
Best program: (float_yank 83 float_dup_items float_dup tagged_414 print_integer float_tan integer_fromfloat float_inc integer_dec float_shove integer_shove float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_inc integer_fromfloat float_inc float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove print_newline float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 3 1.0 11 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 3 1.0 2 1.0 2 1.0 4 1.0 2 1.0 2]
Total: 88.0
Mean: 1.76
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 5742.639893500001
Median total errors in population: 894.5
Error averages by case: (243.79560119999988 4.983 225.24544409999993 5.878 239.27680099999986 5.695 205.14421570000005 6.023 219.41642659999974 5.413 257.7908510999998 5.407 210.61039150000002 6.153 250.91559020000008 5.74 219.78398740000003 11.78 214.26247829999986 5.075 241.30279579999979 4.451 223.1471294999998 5.205 224.0956825000001 6.287 197.99129560000006 4.116 202.9001040000003 4.756 206.44702660000002 5.348 235.43680279999955 5.807 218.1297859 5.822 217.2263021000002 4.732 238.74845209999995 7.057 240.91720009999995 5.623 225.43659280000023 5.439 226.01693939999964 5.507 207.49085659999983 4.806 209.22914059999977 4.779)
Error minima by case: (1.0 1 0.2036 1 1.0 1 0.0 0 0.0 0 1.0 2 0.0 0 1.0 1 0.2774 1 0.0 0 1.0 1 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 1.0 2 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0)
Average genome size in population (length): 174.893
Average program size in population (points): 175.893
Average percent parens in population: 0.008
Minimum age in population: 0.0
Maximum age in population: 154.252934605085
Average age in population: 135.881027263732
Median age in population: 152.2792410399626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.515
Error (vector) diversity:			 0.856
Behavioral diversity:				 0.862
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 403205274
--- Timings ---
Current time: 1529615917712 milliseconds
Total Time:         666.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.2 seconds, 27.0%
Fitness Testing:    391.8 seconds, 58.8%
Report:              94.5 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 3116.0
Test mean error for best: 1.55800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 
133.4715741385
Correct output: -67.2036084163 | Program output: 
-66.2036084163
Correct output: -185.2914836352 | Program output: 
-184.2914836352
Correct output: 14.6061985977  | Program output: 
15.6061985977
Correct output: 31.4151982204  | Program output: 
32.4151982204
Correct output: 159.9998373306 | Program output: 
160.9998373306
Correct output: -0.1731946684  | Program output: 
0.8268053316 
Correct output: 113.4565963553 | Program output: 
114.4565963553
Correct output: -11.9277100864 | Program output: 
-10.9277100864
Correct output: -84.3925535393 | Program output: 
-83.3925535393
Correct output: -18.9342988463 | Program output: 
-17.9342988463
Correct output: -106.7651499891 | Program output: 
-105.7651499891
Correct output: -48.7209464994 | Program output: 
-47.7209464994
Correct output: -17.8365333426 | Program output: 
-16.8365333426
Correct output: -24.3703567122 | Program output: 
-23.3703567122
Correct output: -24.1207371169 | Program output: 
-23.1207371169
Correct output: -135.4219119341 | Program output: 
-134.4219119341
Correct output: -21.9981612097 | Program output: 
-20.9981612097
Correct output: 80.3206826008  | Program output: 
81.3206826008
Correct output: 59.940066734   | Program output: 
60.940066734 
Correct output: 101.7498992299 | Program output: 
102.7498992299
Correct output: -122.6662183691 | Program output: 
-121.6662183691
Correct output: -100.9942315294 | Program output: 
-99.9942315294
Correct output: -57.1627018111 | Program output: 
-56.1627018111
Correct output: -21.8153206922 | Program output: 
-20.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction 83} {:instruction float_dup_items} {:instruction float_dup} {:instruction tagged_414} {:instruction print_integer} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_swap} {:instruction float_rot} {:instruction float_shove} {:instruction in2} {:instruction -94.61851746029556} {:instruction integer_yank} {:instruction tag_float_122} {:instruction float_add} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_newline} {:instruction float_add} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_shove} {:instruction print_float})
Best program: (float_yank 83 float_dup_items float_dup tagged_414 print_integer float_tan integer_fromfloat float_inc integer_dec float_shove integer_shove float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_inc integer_fromfloat float_inc float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove print_newline float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 3 1.0 11 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 2 1.0 3 1.0 2 1.0 2 1.0 4 1.0 2 1.0 2]
Total: 88.0
Mean: 1.76
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 5452.968254099999
Median total errors in population: 886.0
Error averages by case: (234.3546722999999 5.08 213.90363640000004 5.982 224.4615253999998 5.759 195.16410250000015 6.066 205.12114109999987 5.424 248.48867879999986 5.518 198.32132059999995 6.199 242.73102440000008 5.914 205.03599549999993 11.801 202.26104469999993 5.168 231.09979439999984 4.578 209.49773189999988 5.299 211.70377329999994 6.396 188.97742390000013 4.302 195.29487600000033 4.808 199.00462959999993 5.39 220.85177399999964 5.858 206.85840430000007 5.841 202.89162280000016 4.749 227.96210359999995 6.902 232.59819919999993 5.748 209.29502690000032 5.535 209.48873489999963 5.675 197.49229129999975 4.88 196.46172629999984 4.775)
Error minima by case: (1.0 1 0.0167 1 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 1.0 1 0.4752 1 0.0 0 1.0 1 0.0 0 0.0328 1 0.0 0 0.0 0 0.0 0 1.0 1 0.0018 1 0.0 0 1.0 2 1.0 2 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 170.264
Average program size in population (points): 171.264
Average percent parens in population: 0.010
Minimum age in population: 0.0
Maximum age in population: 155.8225471657811
Average age in population: 132.4149803887518
Median age in population: 153.4914445925184
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.521
Error (vector) diversity:			 0.83
Behavioral diversity:				 0.838
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 407461324
--- Timings ---
Current time: 1529615923559 milliseconds
Total Time:         672.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.7 seconds, 27.0%
Fitness Testing:    395.6 seconds, 58.8%
Report:              94.9 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 1000.0
Test mean error for best: 0.50000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 
132.4715741385
Correct output: -67.2036084163 | Program output: 
-67.2036084163
Correct output: -185.2914836352 | Program output: 
-185.2914836352
Correct output: 14.6061985977  | Program output: 
14.6061985977
Correct output: 31.4151982204  | Program output: 
31.4151982204
Correct output: 159.9998373306 | Program output: 
159.9998373306
Correct output: -0.1731946684  | Program output: 
-0.1731946684
Correct output: 113.4565963553 | Program output: 
113.4565963553
Correct output: -11.9277100864 | Program output: 
-11.9277100864
Correct output: -84.3925535393 | Program output: 
-84.3925535393
Correct output: -18.9342988463 | Program output: 
-18.9342988463
Correct output: -106.7651499891 | Program output: 
-106.7651499891
Correct output: -48.7209464994 | Program output: 
-48.7209464994
Correct output: -17.8365333426 | Program output: 
-17.8365333426
Correct output: -24.3703567122 | Program output: 
-24.3703567122
Correct output: -24.1207371169 | Program output: 
-24.1207371169
Correct output: -135.4219119341 | Program output: 
-135.4219119341
Correct output: -21.9981612097 | Program output: 
-21.9981612097
Correct output: 80.3206826008  | Program output: 
80.3206826008
Correct output: 59.940066734   | Program output: 
59.940066734 
Correct output: 101.7498992299 | Program output: 
101.7498992299
Correct output: -122.6662183691 | Program output: 
-122.6662183691
Correct output: -100.9942315294 | Program output: 
-100.9942315294
Correct output: -57.1627018111 | Program output: 
-57.1627018111
Correct output: -21.8153206922 | Program output: 
-21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction 83} {:instruction float_dup_items} {:instruction float_dup} {:instruction tagged_414} {:instruction print_integer} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_swap} {:instruction float_rot} {:instruction float_shove} {:instruction in2} {:instruction -94.61851746029556} {:instruction integer_yank} {:instruction tag_float_122} {:instruction float_add} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_newline} {:instruction float_add} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_shove} {:instruction print_float})
Best program: (float_yank 83 float_dup_items float_dup tagged_414 print_integer float_tan integer_fromfloat float_inc integer_dec float_shove integer_shove float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_fromfloat integer_fromfloat float_inc float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove print_newline float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1]
Total: 25.0
Mean: 0.5
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 6145.588222300001
Median total errors in population: 921.0
Error averages by case: (258.40404800000005 5.074 241.0857256000001 6.011 254.15209069999975 5.791 224.42962330000006 6.29 231.67754009999967 5.43 270.00722829999995 5.515 227.86151260000022 6.501 266.95788290000013 5.846 233.13646409999996 11.564 232.67630509999987 5.218 257.73970009999977 4.674 238.93406459999966 5.364 241.46216479999998 6.417 219.78105850000017 4.36 221.7565065000004 4.94 223.51957579999996 5.567 250.79421989999943 5.893 235.74980370000011 5.861 225.93370800000008 4.788 255.87399419999997 6.697 257.32907829999994 5.623 240.1749090000003 5.562 240.28320379999948 5.743 226.75329979999975 4.923 224.54151459999974 4.921)
Error minima by case: (0.0 1 0.0 1 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 1 0.0 1 0.0 0 0.0 1 0.0 0 0.0 1 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0 0.0 1 0.0 1 0.0 0 0.0 1 0.0 0 0.0 0)
Average genome size in population (length): 164.38
Average program size in population (points): 165.38
Average percent parens in population: 0.011
Minimum age in population: 0.0
Maximum age in population: 156.9674802862029
Average age in population: 132.4626464146079
Median age in population: 154.7000398626724
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.503
Error (vector) diversity:			 0.79
Behavioral diversity:				 0.796
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 411570649
--- Timings ---
Current time: 1529615929388 milliseconds
Total Time:         678.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.2 seconds, 27.0%
Fitness Testing:    399.5 seconds, 58.9%
Report:              95.4 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 1000.0
Test mean error for best: 0.50000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 
132.4715741385
Correct output: -67.2036084163 | Program output: 
-67.2036084163
Correct output: -185.2914836352 | Program output: 
-185.2914836352
Correct output: 14.6061985977  | Program output: 
14.6061985977
Correct output: 31.4151982204  | Program output: 
31.4151982204
Correct output: 159.9998373306 | Program output: 
159.9998373306
Correct output: -0.1731946684  | Program output: 
-0.1731946684
Correct output: 113.4565963553 | Program output: 
113.4565963553
Correct output: -11.9277100864 | Program output: 
-11.9277100864
Correct output: -84.3925535393 | Program output: 
-84.3925535393
Correct output: -18.9342988463 | Program output: 
-18.9342988463
Correct output: -106.7651499891 | Program output: 
-106.7651499891
Correct output: -48.7209464994 | Program output: 
-48.7209464994
Correct output: -17.8365333426 | Program output: 
-17.8365333426
Correct output: -24.3703567122 | Program output: 
-24.3703567122
Correct output: -24.1207371169 | Program output: 
-24.1207371169
Correct output: -135.4219119341 | Program output: 
-135.4219119341
Correct output: -21.9981612097 | Program output: 
-21.9981612097
Correct output: 80.3206826008  | Program output: 
80.3206826008
Correct output: 59.940066734   | Program output: 
59.940066734 
Correct output: 101.7498992299 | Program output: 
101.7498992299
Correct output: -122.6662183691 | Program output: 
-122.6662183691
Correct output: -100.9942315294 | Program output: 
-100.9942315294
Correct output: -57.1627018111 | Program output: 
-57.1627018111
Correct output: -21.8153206922 | Program output: 
-21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_flush} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_swap} {:instruction float_rot} {:instruction float_shove} {:instruction in2} {:instruction -94.61851746029556} {:instruction integer_yank} {:instruction tag_float_122} {:instruction float_add} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_newline} {:instruction float_add} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_shove} {:instruction print_float})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank integer_flush integer_inc in1 float_dec float_dec float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_inc integer_fromfloat integer_dup_times float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove print_newline float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1]
Total: 25.0
Mean: 0.5
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 7217.0376148000005
Median total errors in population: 1054.0
Error averages by case: (300.6983742999997 5.676 285.64025890000005 6.713 294.3965106999998 6.135 272.1549158 6.345 281.67351879999967 5.807 310.7970993999998 6.067 279.3664107 7.962 305.5676846 6.175 283.5812596999999 10.71 271.64275069999985 5.623 297.1462767 5.281 283.2859485999998 5.975 289.96374160000005 6.993 256.90301430000005 4.984 259.6525325000003 5.473 261.59469949999993 6.258 291.74165389999973 6.255 273.22786720000005 6.589 279.8527904000002 5.414 283.6080879999999 6.696 298.2522076999999 6.03 283.3435635000002 6.033 282.9863535999998 6.368 269.0015696999998 5.434 264.53452399999986 5.428)
Error minima by case: (0.0 1 0.0 1 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 1 0.0 1 0.0 0 0.0 1 0.0 0 0.0 1 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0 0.0 1 0.0 1 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 142.152
Average program size in population (points): 143.152
Average percent parens in population: 0.013
Minimum age in population: 0.0
Maximum age in population: 158.0412569562129
Average age in population: 133.2568764562696
Median age in population: 155.3758521905017
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.901
Total error diversity:				 0.467
Error (vector) diversity:			 0.663
Behavioral diversity:				 0.667
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 415124299
--- Timings ---
Current time: 1529615934540 milliseconds
Total Time:         683.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.7 seconds, 27.0%
Fitness Testing:    402.7 seconds, 58.9%
Report:              95.9 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 1000.0
Test mean error for best: 0.50000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 
132.4715741385
Correct output: -67.2036084163 | Program output: 
-67.2036084163
Correct output: -185.2914836352 | Program output: 
-185.2914836352
Correct output: 14.6061985977  | Program output: 
14.6061985977
Correct output: 31.4151982204  | Program output: 
31.4151982204
Correct output: 159.9998373306 | Program output: 
159.9998373306
Correct output: -0.1731946684  | Program output: 
-0.1731946684
Correct output: 113.4565963553 | Program output: 
113.4565963553
Correct output: -11.9277100864 | Program output: 
-11.9277100864
Correct output: -84.3925535393 | Program output: 
-84.3925535393
Correct output: -18.9342988463 | Program output: 
-18.9342988463
Correct output: -106.7651499891 | Program output: 
-106.7651499891
Correct output: -48.7209464994 | Program output: 
-48.7209464994
Correct output: -17.8365333426 | Program output: 
-17.8365333426
Correct output: -24.3703567122 | Program output: 
-24.3703567122
Correct output: -24.1207371169 | Program output: 
-24.1207371169
Correct output: -135.4219119341 | Program output: 
-135.4219119341
Correct output: -21.9981612097 | Program output: 
-21.9981612097
Correct output: 80.3206826008  | Program output: 
80.3206826008
Correct output: 59.940066734   | Program output: 
59.940066734 
Correct output: 101.7498992299 | Program output: 
101.7498992299
Correct output: -122.6662183691 | Program output: 
-122.6662183691
Correct output: -100.9942315294 | Program output: 
-100.9942315294
Correct output: -57.1627018111 | Program output: 
-57.1627018111
Correct output: -21.8153206922 | Program output: 
-21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_269} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_swap} {:instruction integer_add} {:instruction in1} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_inc} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_swap} {:instruction float_rot} {:instruction float_shove} {:instruction in2} {:instruction -94.61851746029556} {:instruction integer_yank} {:instruction tag_float_122} {:instruction float_add} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction print_newline} {:instruction float_add} {:instruction float_add} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_shove} {:instruction print_float})
Best program: (tag_integer_269 integer_add integer_rot integer_swap integer_add in1 integer_yank float_inc integer_yank float_inc integer_inc in1 float_dec float_dec float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_inc integer_fromfloat integer_dup_times float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove print_newline float_add float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1 0.0 1]
Total: 25.0
Mean: 0.5
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 6962.560222200001
Median total errors in population: 585.0
Error averages by case: (289.7853114999999 5.472 282.36924430000005 6.239 275.1186270999999 5.658 272.3836756 5.604 280.04132149999987 5.286 293.2652636999999 5.947 272.721857 10.058 291.9440774 5.652 281.0830747 7.549 262.3750919 5.277 277.99405269999994 5.261 269.16660929999995 5.562 283.56429350000013 6.396 253.57141620000016 5.088 246.34432360000008 5.267 249.6717309 6.064 274.4234654999999 5.713 274.85544259999995 6.121 277.0550698000001 5.133 261.63603159999985 6.423 288.942044 5.591 270.7723854000001 5.639 270.1132036999999 6.517 264.8526556999998 5.3 250.48895299999992 5.204)
Error minima by case: (0.0 1 0.0 1 0.0 1 0.0 0 0.0 1 0.0 1 0.0 0 0.0 1 0.0 1 0.0 0 0.0 1 0.0 0 0.0 1 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 0 0.0 1 0.0 1 0.0 0 0.0 1 0.0 0 0.0 0)
Average genome size in population (length): 81.132
Average program size in population (points): 82.132
Average percent parens in population: 0.018
Minimum age in population: 0.0
Maximum age in population: 159.0315346627088
Average age in population: 128.8702380470894
Median age in population: 137.6056512078399
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 150
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 150
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.231
Error (vector) diversity:			 0.279
Behavioral diversity:				 0.283
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 417152849
--- Timings ---
Current time: 1529615938620 milliseconds
Total Time:         687.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.2 seconds, 27.1%
Fitness Testing:    404.8 seconds, 58.9%
Report:              96.3 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 132.4715741385
Correct output: -67.2036084163 | Program output: -67.2036084163
Correct output: -185.2914836352 | Program output: -185.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 31.4151982204 
Correct output: 159.9998373306 | Program output: 159.9998373306
Correct output: -0.1731946684  | Program output: -0.1731946684 
Correct output: 113.4565963553 | Program output: 113.4565963553
Correct output: -11.9277100864 | Program output: -11.9277100864
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -18.9342988463
Correct output: -106.7651499891 | Program output: -106.7651499891
Correct output: -48.7209464994 | Program output: -48.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -24.1207371169
Correct output: -135.4219119341 | Program output: -135.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: 59.940066734  
Correct output: 101.7498992299 | Program output: 101.7498992299
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -100.9942315294
Correct output: -57.1627018111 | Program output: -57.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction 83} {:instruction float_dup_items} {:instruction float_dup} {:instruction tagged_414} {:instruction print_integer} {:instruction float_tan} {:instruction float_add} {:instruction float_inc} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_shove} {:instruction float_dec} {:instruction float_min} {:instruction float_mult} {:instruction float_sin} {:instruction integer_swap} {:instruction float_rot} {:instruction float_shove} {:instruction in2} {:instruction -94.61851746029556} {:instruction integer_yank} {:instruction tag_float_122} {:instruction float_add} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction print_integer} {:instruction integer_yank} {:instruction in1} {:instruction integer_yank} {:instruction integer_shove} {:instruction integer_dup} {:instruction float_add} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_shove} {:instruction print_float})
Best program: (float_yank 83 float_dup_items float_dup tagged_414 print_integer float_tan float_add float_inc integer_dec float_shove integer_shove float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_div integer_fromfloat float_inc float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove integer_dup float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2745.7006395
Median total errors in population: 88.0
Error averages by case: (112.60967070000005 3.007 113.09003000000004 3.705 113.19108520000006 3.107 106.23873139999999 3.009 112.21474250000004 2.996 113.96143760000005 3.52 109.48881199999997 8.973 113.32590260000003 3.025 113.5656614 3.675 106.45707100000006 3.029 109.51236899999996 3.013 108.08595130000003 3.088 114.1451644 3.751 85.58402789999997 2.911 88.4682281 2.937 91.93701670000002 3.69 113.04832710000002 3.163 108.70306459999996 3.659 108.05699689999994 2.901 94.49319329999999 4.123 112.65994569999997 3.048 112.15410500000007 3.192 110.93218290000002 4.342 98.29661230000002 2.982 87.6753099 2.959)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 45.219
Average program size in population (points): 46.219
Average percent parens in population: 0.022
Minimum age in population: 54.60182094763515
Maximum age in population: 159.0764988975872
Average age in population: 125.7262567031939
Median age in population: 126.6830346697944
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 141
Genome diversity (% unique Plush genomes):	 0.556
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 141
Syntactic diversity (% unique Push programs):	 0.556
Total error diversity:				 0.074
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 418283424
--- Timings ---
Current time: 1529615942199 milliseconds
Total Time:         691.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.8 seconds, 27.2%
Fitness Testing:    406.5 seconds, 58.8%
Report:              96.7 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 119
Successful program: (float_yank 83 float_dup_items float_dup tagged_414 print_integer float_tan float_add float_inc integer_dec float_shove integer_shove float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_div integer_fromfloat float_inc float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove integer_dup float_add integer_inc integer_sub float_mult integer_shove print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 45


Auto-simplifying with starting size: 45
step: 0
program: (float_yank 83 float_dup_items float_dup tagged_414 print_integer float_tan float_add float_inc integer_dec float_shove integer_shove float_dec float_min float_mult float_sin integer_swap float_rot float_shove in2 -94.61851746029556 integer_yank tag_float_122 float_add float_rot integer_fromfloat integer_div integer_div integer_fromfloat float_inc float_dup_times float_frominteger print_integer integer_yank in1 integer_yank integer_shove integer_dup float_add integer_inc integer_sub float_mult integer_shove print_float)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 45

step: 500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 132.4715741385 | Program output: 132.4715741385
Correct output: -67.2036084163 | Program output: -67.2036084163
Correct output: -185.2914836352 | Program output: -185.2914836352
Correct output: 14.6061985977  | Program output: 14.6061985977 
Correct output: 31.4151982204  | Program output: 31.4151982204 
Correct output: 159.9998373306 | Program output: 159.9998373306
Correct output: -0.1731946684  | Program output: -0.1731946684 
Correct output: 113.4565963553 | Program output: 113.4565963553
Correct output: -11.9277100864 | Program output: -11.9277100864
Correct output: -84.3925535393 | Program output: -84.3925535393
Correct output: -18.9342988463 | Program output: -18.9342988463
Correct output: -106.7651499891 | Program output: -106.7651499891
Correct output: -48.7209464994 | Program output: -48.7209464994
Correct output: -17.8365333426 | Program output: -17.8365333426
Correct output: -24.3703567122 | Program output: -24.3703567122
Correct output: -24.1207371169 | Program output: -24.1207371169
Correct output: -135.4219119341 | Program output: -135.4219119341
Correct output: -21.9981612097 | Program output: -21.9981612097
Correct output: 80.3206826008  | Program output: 80.3206826008 
Correct output: 59.940066734   | Program output: 59.940066734  
Correct output: 101.7498992299 | Program output: 101.7498992299
Correct output: -122.6662183691 | Program output: -122.6662183691
Correct output: -100.9942315294 | Program output: -100.9942315294
Correct output: -57.1627018111 | Program output: -57.1627018111
Correct output: -21.8153206922 | Program output: -21.8153206922
;;******************************
