Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-26.306938019564512 -86] -112.30693801956451]
Train Case:   1 | Input/Output: [[21.53983165932962 -94] -72.46016834067038]
Train Case:   2 | Input/Output: [[44.408990388387 -4] 40.408990388387]
Train Case:   3 | Input/Output: [[-93.88488370008832 -30] -123.88488370008832]
Train Case:   4 | Input/Output: [[38.4427590597989 -44] -5.557240940201098]
Train Case:   5 | Input/Output: [[69.82378355588361 63] 132.8237835558836]
Train Case:   6 | Input/Output: [[-95.65560738799732 72] -23.65560738799732]
Train Case:   7 | Input/Output: [[50.872328578310885 35] 85.87232857831088]
Train Case:   8 | Input/Output: [[-55.61663501048102 63] 7.383364989518981]
Train Case:   9 | Input/Output: [[22.402118241342222 44] 66.40211824134222]
Train Case:  10 | Input/Output: [[-18.78014013485418 -5] -23.78014013485418]
Train Case:  11 | Input/Output: [[-71.29009747658975 -96] -167.29009747658975]
Train Case:  12 | Input/Output: [[24.93849368308105 -4] 20.93849368308105]
Train Case:  13 | Input/Output: [[-1.8887743773508845 39] 37.111225622649116]
Train Case:  14 | Input/Output: [[78.90311706116552 41] 119.90311706116552]
Train Case:  15 | Input/Output: [[-10.79750180224221 31] 20.20249819775779]
Train Case:  16 | Input/Output: [[61.756946768087175 -60] 1.7569467680871753]
Train Case:  17 | Input/Output: [[9.367159311565999 -100] -90.632840688434]
Train Case:  18 | Input/Output: [[-74.42671633769449 -86] -160.42671633769447]
Train Case:  19 | Input/Output: [[-67.3617347349682 -44] -111.3617347349682]
Train Case:  20 | Input/Output: [[-50.057108320341605 44] -6.057108320341605]
Train Case:  21 | Input/Output: [[-63.79643179499281 -49] -112.79643179499281]
Train Case:  22 | Input/Output: [[-77.6073793051651 -71] -148.6073793051651]
Train Case:  23 | Input/Output: [[75.6041620334471 67] 142.6041620334471]
Train Case:  24 | Input/Output: [[-31.548999038353415 -58] -89.54899903835341]
Test Case:   0 | Input/Output: [[-1.7830276600208919 -8] -9.783027660020892]
Test Case:   1 | Input/Output: [[-70.71982232396923 -26] -96.71982232396923]
Test Case:   2 | Input/Output: [[17.184490713629685 -91] -73.81550928637031]
Test Case:   3 | Input/Output: [[16.695664483413395 24] 40.695664483413395]
Test Case:   4 | Input/Output: [[-91.47839831911 6] -85.47839831911]
Test Case:   5 | Input/Output: [[-21.898367461264343 75] 53.10163253873566]
Test Case:   6 | Input/Output: [[99.17429675526674 -34] 65.17429675526674]
Test Case:   7 | Input/Output: [[-66.6545513256105 -69] -135.6545513256105]
Test Case:   8 | Input/Output: [[1.4803983180267153 37] 38.480398318026715]
Test Case:   9 | Input/Output: [[22.175167739060072 76] 98.17516773906007]
Test Case:  10 | Input/Output: [[32.75839854094795 8] 40.75839854094795]
Test Case:  11 | Input/Output: [[89.19721894999287 32] 121.19721894999287]
Test Case:  12 | Input/Output: [[-66.17322426094711 -79] -145.1732242609471]
Test Case:  13 | Input/Output: [[75.04859822339594 91] 166.04859822339594]
Test Case:  14 | Input/Output: [[-48.21671976355062 73] 24.78328023644938]
Test Case:  15 | Input/Output: [[14.639909331316886 -74] -59.360090668683114]
Test Case:  16 | Input/Output: [[24.748564439608842 -65] -40.25143556039116]
Test Case:  17 | Input/Output: [[-68.14437722414709 -72] -140.1443772241471]
Test Case:  18 | Input/Output: [[87.26440607236876 99] 186.26440607236876]
Test Case:  19 | Input/Output: [[-82.41048937431134 -44] -126.41048937431134]
Test Case:  20 | Input/Output: [[69.26650949992853 -43] 26.26650949992853]
Test Case:  21 | Input/Output: [[34.698010311359525 -35] -0.30198968864047515]
Test Case:  22 | Input/Output: [[24.71296327157401 96] 120.71296327157401]
Test Case:  23 | Input/Output: [[22.41720403186298 -82] -59.58279596813702]
Test Case:  24 | Input/Output: [[43.68057398846571 9] 52.68057398846571]
Test Case:  25 | Input/Output: [[49.89277167439678 -100] -50.10722832560322]
Test Case:  26 | Input/Output: [[54.2095079311097 -29] 25.209507931109698]
Test Case:  27 | Input/Output: [[-81.15539529202616 -86] -167.15539529202616]
Test Case:  28 | Input/Output: [[87.48749405157321 99] 186.4874940515732]
Test Case:  29 | Input/Output: [[36.48011765664069 83] 119.48011765664069]
Test Case:  30 | Input/Output: [[-83.56970158180118 32] -51.56970158180118]
Test Case:  31 | Input/Output: [[-61.890705443489466 -65] -126.89070544348947]
Test Case:  32 | Input/Output: [[-12.361083774497516 55] 42.638916225502484]
Test Case:  33 | Input/Output: [[-97.3533880129779 81] -16.353388012977902]
Test Case:  34 | Input/Output: [[-10.754518091060788 85] 74.24548190893921]
Test Case:  35 | Input/Output: [[-99.25347511146276 -6] -105.25347511146276]
Test Case:  36 | Input/Output: [[-17.093338271023057 0] -17.093338271023057]
Test Case:  37 | Input/Output: [[12.577373020165922 14] 26.577373020165922]
Test Case:  38 | Input/Output: [[21.103735611782398 94] 115.1037356117824]
Test Case:  39 | Input/Output: [[65.67916711078138 67] 132.67916711078138]
Test Case:  40 | Input/Output: [[71.62123908138781 10] 81.62123908138781]
Test Case:  41 | Input/Output: [[-88.84134336531699 -81] -169.841343365317]
Test Case:  42 | Input/Output: [[78.2886428052727 6] 84.2886428052727]
Test Case:  43 | Input/Output: [[45.8100596864455 -64] -18.1899403135545]
Test Case:  44 | Input/Output: [[42.98539624714988 -93] -50.01460375285012]
Test Case:  45 | Input/Output: [[58.367121818771494 -20] 38.367121818771494]
Test Case:  46 | Input/Output: [[7.932471420220949 3] 10.93247142022095]
Test Case:  47 | Input/Output: [[-92.79898270172386 68] -24.798982701723858]
Test Case:  48 | Input/Output: [[-20.0158921837384 36] 15.984107816261599]
Test Case:  49 | Input/Output: [[-24.769301544448467 -31] -55.76930154444847]
Test Case:  50 | Input/Output: [[-54.58194428520622 76] 21.41805571479378]
Test Case:  51 | Input/Output: [[-28.710593892127264 -44] -72.71059389212726]
Test Case:  52 | Input/Output: [[89.24070590882448 60] 149.24070590882448]
Test Case:  53 | Input/Output: [[-55.208888419073986 22] -33.208888419073986]
Test Case:  54 | Input/Output: [[29.19257623428365 49] 78.19257623428365]
Test Case:  55 | Input/Output: [[74.70228253441945 -28] 46.70228253441945]
Test Case:  56 | Input/Output: [[-53.67713599045205 -64] -117.67713599045206]
Test Case:  57 | Input/Output: [[87.07989352846556 -15] 72.07989352846556]
Test Case:  58 | Input/Output: [[21.818075794943965 -6] 15.818075794943965]
Test Case:  59 | Input/Output: [[-23.173243906179408 -92] -115.17324390617941]
Test Case:  60 | Input/Output: [[-73.64492823449022 -100] -173.64492823449024]
Test Case:  61 | Input/Output: [[-95.64675620327512 48] -47.64675620327512]
Test Case:  62 | Input/Output: [[-15.94265141746196 -6] -21.94265141746196]
Test Case:  63 | Input/Output: [[-81.28019832712855 -61] -142.28019832712855]
Test Case:  64 | Input/Output: [[64.83476281848988 -84] -19.165237181510122]
Test Case:  65 | Input/Output: [[-78.13245814464835 89] 10.867541855351647]
Test Case:  66 | Input/Output: [[-27.112116586075643 -91] -118.11211658607564]
Test Case:  67 | Input/Output: [[83.23597925287774 47] 130.23597925287774]
Test Case:  68 | Input/Output: [[31.36905375813987 61] 92.36905375813987]
Test Case:  69 | Input/Output: [[-87.47509415841992 69] -18.47509415841992]
Test Case:  70 | Input/Output: [[10.017251399142069 -62] -51.98274860085793]
Test Case:  71 | Input/Output: [[-76.10602691308719 45] -31.10602691308719]
Test Case:  72 | Input/Output: [[8.185056973742036 84] 92.18505697374204]
Test Case:  73 | Input/Output: [[1.6662915000986942 69] 70.6662915000987]
Test Case:  74 | Input/Output: [[-3.396468625797013 -47] -50.39646862579701]
Test Case:  75 | Input/Output: [[-93.60336133114424 2] -91.60336133114424]
Test Case:  76 | Input/Output: [[8.338632709213755 84] 92.33863270921375]
Test Case:  77 | Input/Output: [[33.91620076506064 28] 61.91620076506064]
Test Case:  78 | Input/Output: [[81.40679272481799 88] 169.406792724818]
Test Case:  79 | Input/Output: [[8.301384798678441 77] 85.30138479867844]
Test Case:  80 | Input/Output: [[48.5477891390058 -16] 32.5477891390058]
Test Case:  81 | Input/Output: [[-29.88567286894046 28] -1.8856728689404605]
Test Case:  82 | Input/Output: [[98.94932040966921 57] 155.9493204096692]
Test Case:  83 | Input/Output: [[-40.710970714741165 -37] -77.71097071474117]
Test Case:  84 | Input/Output: [[-39.38810572507136 -63] -102.38810572507137]
Test Case:  85 | Input/Output: [[16.738119750253816 14] 30.738119750253816]
Test Case:  86 | Input/Output: [[-78.2621579427923 49] -29.2621579427923]
Test Case:  87 | Input/Output: [[35.42782867369996 76] 111.42782867369996]
Test Case:  88 | Input/Output: [[22.370394373162043 -33] -10.629605626837957]
Test Case:  89 | Input/Output: [[-27.1708699232168 -65] -92.1708699232168]
Test Case:  90 | Input/Output: [[-83.95466888091086 -56] -139.95466888091084]
Test Case:  91 | Input/Output: [[-4.853453817471205 -77] -81.8534538174712]
Test Case:  92 | Input/Output: [[-90.18887556851764 -13] -103.18887556851764]
Test Case:  93 | Input/Output: [[-81.64952969995969 82] 0.350470300040314]
Test Case:  94 | Input/Output: [[23.58595434971727 84] 107.58595434971727]
Test Case:  95 | Input/Output: [[-65.26436142888217 -76] -141.26436142888218]
Test Case:  96 | Input/Output: [[36.1960054137615 -30] 6.1960054137614975]
Test Case:  97 | Input/Output: [[-96.49269258300271 46] -50.49269258300271]
Test Case:  98 | Input/Output: [[18.05953829608886 -80] -61.94046170391114]
Test Case:  99 | Input/Output: [[-84.36909620269417 -23] -107.36909620269417]
Test Case: 100 | Input/Output: [[49.21908806970856 -27] 22.21908806970856]
Test Case: 101 | Input/Output: [[-32.02573732449143 21] -11.02573732449143]
Test Case: 102 | Input/Output: [[-89.66213670275317 -62] -151.66213670275317]
Test Case: 103 | Input/Output: [[85.96588690678371 82] 167.9658869067837]
Test Case: 104 | Input/Output: [[88.11345243384815 -59] 29.113452433848153]
Test Case: 105 | Input/Output: [[-53.21686970507131 -6] -59.21686970507131]
Test Case: 106 | Input/Output: [[-49.576561350232716 58] 8.423438649767284]
Test Case: 107 | Input/Output: [[-27.738552314543924 -42] -69.73855231454392]
Test Case: 108 | Input/Output: [[-38.64926408291471 -92] -130.64926408291473]
Test Case: 109 | Input/Output: [[-13.900110658179372 -37] -50.90011065817937]
Test Case: 110 | Input/Output: [[-21.148380900913693 -12] -33.14838090091369]
Test Case: 111 | Input/Output: [[90.86599397386459 -78] 12.86599397386459]
Test Case: 112 | Input/Output: [[16.900815054442518 47] 63.90081505444252]
Test Case: 113 | Input/Output: [[-81.62217604621733 -54] -135.62217604621733]
Test Case: 114 | Input/Output: [[-71.9910889592528 -94] -165.9910889592528]
Test Case: 115 | Input/Output: [[-50.611772025903875 15] -35.611772025903875]
Test Case: 116 | Input/Output: [[38.26870916370822 69] 107.26870916370822]
Test Case: 117 | Input/Output: [[88.26800529575928 78] 166.26800529575928]
Test Case: 118 | Input/Output: [[-28.01315370515161 -54] -82.01315370515161]
Test Case: 119 | Input/Output: [[-68.50862700837237 20] -48.50862700837237]
Test Case: 120 | Input/Output: [[72.80096305266665 -49] 23.800963052666646]
Test Case: 121 | Input/Output: [[9.085250283462358 98] 107.08525028346236]
Test Case: 122 | Input/Output: [[-11.735967201812713 21] 9.264032798187287]
Test Case: 123 | Input/Output: [[3.867186305088154 32] 35.867186305088154]
Test Case: 124 | Input/Output: [[68.06340388219155 -92] -23.93659611780845]
Test Case: 125 | Input/Output: [[-76.85326222910655 58] -18.853262229106548]
Test Case: 126 | Input/Output: [[73.50762756786386 -45] 28.507627567863864]
Test Case: 127 | Input/Output: [[-93.73598420947759 88] -5.735984209477593]
Test Case: 128 | Input/Output: [[-94.31838197432907 -94] -188.31838197432907]
Test Case: 129 | Input/Output: [[47.18922996995428 0] 47.18922996995428]
Test Case: 130 | Input/Output: [[-12.887544033302348 96] 83.11245596669765]
Test Case: 131 | Input/Output: [[-30.621738703927818 -1] -31.621738703927818]
Test Case: 132 | Input/Output: [[-15.889523208714266 -56] -71.88952320871427]
Test Case: 133 | Input/Output: [[59.55203349453478 -100] -40.44796650546522]
Test Case: 134 | Input/Output: [[35.60456124959177 -17] 18.604561249591768]
Test Case: 135 | Input/Output: [[54.62234445080418 66] 120.62234445080418]
Test Case: 136 | Input/Output: [[-59.74459996290828 -45] -104.74459996290828]
Test Case: 137 | Input/Output: [[77.69390806683347 -46] 31.693908066833473]
Test Case: 138 | Input/Output: [[9.945180193414998 45] 54.945180193415]
Test Case: 139 | Input/Output: [[51.170152370944294 -82] -30.829847629055706]
Test Case: 140 | Input/Output: [[38.30094262373021 19] 57.30094262373021]
Test Case: 141 | Input/Output: [[-91.95902300334313 -32] -123.95902300334313]
Test Case: 142 | Input/Output: [[89.10234710451189 -93] -3.8976528954881076]
Test Case: 143 | Input/Output: [[3.2063308689517243 49] 52.206330868951724]
Test Case: 144 | Input/Output: [[-29.111300678376622 35] 5.888699321623378]
Test Case: 145 | Input/Output: [[67.80300414830052 9] 76.80300414830052]
Test Case: 146 | Input/Output: [[71.43980951929748 -27] 44.439809519297484]
Test Case: 147 | Input/Output: [[1.5797487816870728 -35] -33.42025121831293]
Test Case: 148 | Input/Output: [[81.77241209732605 72] 153.77241209732605]
Test Case: 149 | Input/Output: [[61.635311915944044 29] 90.63531191594404]
Test Case: 150 | Input/Output: [[-48.67638633606308 -17] -65.67638633606308]
Test Case: 151 | Input/Output: [[-76.94543571136154 83] 6.05456428863846]
Test Case: 152 | Input/Output: [[61.95959315888439 52] 113.95959315888439]
Test Case: 153 | Input/Output: [[87.82394074201903 -64] 23.823940742019033]
Test Case: 154 | Input/Output: [[-72.41231470396426 -74] -146.41231470396426]
Test Case: 155 | Input/Output: [[85.96652030860918 26] 111.96652030860918]
Test Case: 156 | Input/Output: [[-13.306978234060068 -77] -90.30697823406007]
Test Case: 157 | Input/Output: [[-78.40630995272548 -67] -145.40630995272548]
Test Case: 158 | Input/Output: [[-2.803559782195393 60] 57.19644021780461]
Test Case: 159 | Input/Output: [[60.78133469757984 12] 72.78133469757984]
Test Case: 160 | Input/Output: [[32.04186064633893 69] 101.04186064633893]
Test Case: 161 | Input/Output: [[-98.27687172263701 96] -2.2768717226370114]
Test Case: 162 | Input/Output: [[13.28847509899478 42] 55.28847509899478]
Test Case: 163 | Input/Output: [[5.23418881335607 -34] -28.76581118664393]
Test Case: 164 | Input/Output: [[-1.4163778023088298 6] 4.58362219769117]
Test Case: 165 | Input/Output: [[-34.38500573687139 21] -13.385005736871392]
Test Case: 166 | Input/Output: [[9.243119748353408 -58] -48.75688025164659]
Test Case: 167 | Input/Output: [[-69.24484378141022 -5] -74.24484378141022]
Test Case: 168 | Input/Output: [[-84.8689650359788 23] -61.8689650359788]
Test Case: 169 | Input/Output: [[76.73586233850202 81] 157.73586233850202]
Test Case: 170 | Input/Output: [[22.78273066622063 45] 67.78273066622063]
Test Case: 171 | Input/Output: [[69.44156897065085 33] 102.44156897065085]
Test Case: 172 | Input/Output: [[95.51083082260533 -39] 56.51083082260533]
Test Case: 173 | Input/Output: [[-96.63061511053255 8] -88.63061511053255]
Test Case: 174 | Input/Output: [[76.46425576957046 -11] 65.46425576957046]
Test Case: 175 | Input/Output: [[63.12335351431449 16] 79.12335351431449]
Test Case: 176 | Input/Output: [[-16.496768628327658 -1] -17.496768628327658]
Test Case: 177 | Input/Output: [[-47.992569210795665 -7] -54.992569210795665]
Test Case: 178 | Input/Output: [[51.053573230854795 86] 137.0535732308548]
Test Case: 179 | Input/Output: [[-65.4202376522679 -41] -106.4202376522679]
Test Case: 180 | Input/Output: [[91.5297824171189 -12] 79.5297824171189]
Test Case: 181 | Input/Output: [[4.0055868266975665 65] 69.00558682669757]
Test Case: 182 | Input/Output: [[51.44682500209822 -52] -0.5531749979017775]
Test Case: 183 | Input/Output: [[82.36113990090462 -66] 16.361139900904618]
Test Case: 184 | Input/Output: [[-24.429336678668562 -31] -55.42933667866856]
Test Case: 185 | Input/Output: [[92.45480542082859 -23] 69.45480542082859]
Test Case: 186 | Input/Output: [[80.77702311710152 -31] 49.77702311710152]
Test Case: 187 | Input/Output: [[57.370400543472215 23] 80.37040054347221]
Test Case: 188 | Input/Output: [[-70.62380715025797 84] 13.376192849742026]
Test Case: 189 | Input/Output: [[2.560577228338474 -55] -52.439422771661526]
Test Case: 190 | Input/Output: [[-43.90884110486526 65] 21.09115889513474]
Test Case: 191 | Input/Output: [[-47.01580281406852 -71] -118.01580281406852]
Test Case: 192 | Input/Output: [[-59.156635485674514 13] -46.156635485674514]
Test Case: 193 | Input/Output: [[-53.750706642632196 37] -16.750706642632196]
Test Case: 194 | Input/Output: [[38.88572002859479 21] 59.88572002859479]
Test Case: 195 | Input/Output: [[58.49248421199377 72] 130.49248421199377]
Test Case: 196 | Input/Output: [[-85.50948168585597 79] -6.509481685855974]
Test Case: 197 | Input/Output: [[34.97474809854552 -85] -50.02525190145448]
Test Case: 198 | Input/Output: [[82.21114881732447 -99] -16.78885118267553]
Test Case: 199 | Input/Output: [[-31.234252825664683 -77] -108.23425282566468]
Test Case: 200 | Input/Output: [[2.485495750401981 75] 77.48549575040198]
Test Case: 201 | Input/Output: [[-8.063845098951234 -99] -107.06384509895123]
Test Case: 202 | Input/Output: [[-74.19388604345754 -46] -120.19388604345754]
Test Case: 203 | Input/Output: [[-89.24803777771987 -1] -90.24803777771987]
Test Case: 204 | Input/Output: [[82.89028040875382 -44] 38.890280408753824]
Test Case: 205 | Input/Output: [[86.50283653891282 -49] 37.50283653891282]
Test Case: 206 | Input/Output: [[-44.360905002905284 79] 34.639094997094716]
Test Case: 207 | Input/Output: [[40.14417189277469 4] 44.14417189277469]
Test Case: 208 | Input/Output: [[-86.10595117163948 -45] -131.10595117163948]
Test Case: 209 | Input/Output: [[18.532728982085644 -82] -63.467271017914356]
Test Case: 210 | Input/Output: [[-75.3219945176949 31] -44.321994517694904]
Test Case: 211 | Input/Output: [[-18.793946033710455 -60] -78.79394603371045]
Test Case: 212 | Input/Output: [[-13.043382770981495 95] 81.9566172290185]
Test Case: 213 | Input/Output: [[-65.6953294729289 95] 29.304670527071096]
Test Case: 214 | Input/Output: [[-45.649239395471966 -49] -94.64923939547197]
Test Case: 215 | Input/Output: [[-5.772822032634849 -66] -71.77282203263485]
Test Case: 216 | Input/Output: [[47.3153180483026 -90] -42.6846819516974]
Test Case: 217 | Input/Output: [[-91.29180747600327 -27] -118.29180747600327]
Test Case: 218 | Input/Output: [[77.4354483491725 75] 152.4354483491725]
Test Case: 219 | Input/Output: [[-85.18549920560432 40] -45.185499205604316]
Test Case: 220 | Input/Output: [[-68.54068945634897 7] -61.54068945634897]
Test Case: 221 | Input/Output: [[19.917434880911685 -87] -67.08256511908831]
Test Case: 222 | Input/Output: [[19.84817353543602 42] 61.84817353543602]
Test Case: 223 | Input/Output: [[-55.69772213573465 31] -24.69772213573465]
Test Case: 224 | Input/Output: [[-62.88293188741938 -56] -118.88293188741937]
Test Case: 225 | Input/Output: [[-79.81049687746975 3] -76.81049687746975]
Test Case: 226 | Input/Output: [[72.90375746617406 -33] 39.903757466174056]
Test Case: 227 | Input/Output: [[69.57797064998869 -26] 43.577970649988686]
Test Case: 228 | Input/Output: [[-97.71910377126811 -36] -133.71910377126812]
Test Case: 229 | Input/Output: [[18.804179634598043 42] 60.80417963459804]
Test Case: 230 | Input/Output: [[-37.86469373897354 -38] -75.86469373897354]
Test Case: 231 | Input/Output: [[67.28770422180173 -38] 29.287704221801732]
Test Case: 232 | Input/Output: [[-44.10861588410799 8] -36.10861588410799]
Test Case: 233 | Input/Output: [[-2.3937802239541526 68] 65.60621977604585]
Test Case: 234 | Input/Output: [[-25.287796881849516 25] -0.28779688184951624]
Test Case: 235 | Input/Output: [[-82.57554804538618 -100] -182.5755480453862]
Test Case: 236 | Input/Output: [[-29.353995481481164 -62] -91.35399548148116]
Test Case: 237 | Input/Output: [[95.85690212076582 -64] 31.856902120765824]
Test Case: 238 | Input/Output: [[63.87684103505842 -16] 47.87684103505842]
Test Case: 239 | Input/Output: [[-5.8010765687527766 -84] -89.80107656875278]
Test Case: 240 | Input/Output: [[71.11788039785193 44] 115.11788039785193]
Test Case: 241 | Input/Output: [[98.45037937600281 89] 187.45037937600281]
Test Case: 242 | Input/Output: [[-46.031419525125436 -77] -123.03141952512544]
Test Case: 243 | Input/Output: [[34.653368950518455 36] 70.65336895051846]
Test Case: 244 | Input/Output: [[-92.17895598017545 -23] -115.17895598017545]
Test Case: 245 | Input/Output: [[-47.736373529450994 -4] -51.736373529450994]
Test Case: 246 | Input/Output: [[73.1427873886324 -26] 47.1427873886324]
Test Case: 247 | Input/Output: [[-92.97985990522423 -32] -124.97985990522423]
Test Case: 248 | Input/Output: [[87.15571441740249 50] 137.1557144174025]
Test Case: 249 | Input/Output: [[-60.70724658420117 93] 32.29275341579883]
Test Case: 250 | Input/Output: [[56.07393965753849 9] 65.07393965753849]
Test Case: 251 | Input/Output: [[-5.647834758815691 -39] -44.64783475881569]
Test Case: 252 | Input/Output: [[-88.90669338998727 -76] -164.90669338998725]
Test Case: 253 | Input/Output: [[88.06214953966636 21] 109.06214953966636]
Test Case: 254 | Input/Output: [[-17.967722567701657 32] 14.032277432298343]
Test Case: 255 | Input/Output: [[-5.918503918138441 4] -1.9185039181384411]
Test Case: 256 | Input/Output: [[-51.944673636762076 -82] -133.94467363676208]
Test Case: 257 | Input/Output: [[-88.27677890949329 -29] -117.27677890949329]
Test Case: 258 | Input/Output: [[-56.449233020270405 42] -14.449233020270405]
Test Case: 259 | Input/Output: [[22.5607652054356 -84] -61.4392347945644]
Test Case: 260 | Input/Output: [[74.14701592565714 -36] 38.14701592565714]
Test Case: 261 | Input/Output: [[78.0052575900043 54] 132.0052575900043]
Test Case: 262 | Input/Output: [[-31.968876168832708 -14] -45.96887616883271]
Test Case: 263 | Input/Output: [[53.267864547656444 83] 136.26786454765644]
Test Case: 264 | Input/Output: [[36.52836405283506 -4] 32.52836405283506]
Test Case: 265 | Input/Output: [[-66.53034374065547 44] -22.530343740655468]
Test Case: 266 | Input/Output: [[86.28953096338236 -26] 60.28953096338236]
Test Case: 267 | Input/Output: [[-84.87161473060306 43] -41.871614730603056]
Test Case: 268 | Input/Output: [[-82.44806771610804 62] -20.448067716108042]
Test Case: 269 | Input/Output: [[30.403564978777467 -73] -42.59643502122253]
Test Case: 270 | Input/Output: [[-1.6926334731794697 93] 91.30736652682053]
Test Case: 271 | Input/Output: [[-54.2667263544135 -28] -82.26672635441349]
Test Case: 272 | Input/Output: [[-36.575179808655236 -17] -53.575179808655236]
Test Case: 273 | Input/Output: [[-78.8342522631036 -85] -163.8342522631036]
Test Case: 274 | Input/Output: [[-63.712805172271494 21] -42.712805172271494]
Test Case: 275 | Input/Output: [[89.0515617251566 -93] -3.9484382748433973]
Test Case: 276 | Input/Output: [[71.10821681841489 23] 94.10821681841489]
Test Case: 277 | Input/Output: [[-66.13266334752097 -89] -155.13266334752097]
Test Case: 278 | Input/Output: [[-66.49824095069137 -80] -146.49824095069135]
Test Case: 279 | Input/Output: [[-76.4324412805658 -61] -137.4324412805658]
Test Case: 280 | Input/Output: [[25.005294906540954 37] 62.00529490654095]
Test Case: 281 | Input/Output: [[84.2847601870356 -33] 51.2847601870356]
Test Case: 282 | Input/Output: [[79.0496969119269 100] 179.0496969119269]
Test Case: 283 | Input/Output: [[-65.64877765874905 -3] -68.64877765874905]
Test Case: 284 | Input/Output: [[-19.27801430775054 94] 74.72198569224946]
Test Case: 285 | Input/Output: [[-67.45654592889534 -7] -74.45654592889534]
Test Case: 286 | Input/Output: [[-24.567451950754887 12] -12.567451950754887]
Test Case: 287 | Input/Output: [[-94.53309137376202 -46] -140.53309137376203]
Test Case: 288 | Input/Output: [[-89.85653955179936 35] -54.85653955179936]
Test Case: 289 | Input/Output: [[-34.06927079888304 -75] -109.06927079888304]
Test Case: 290 | Input/Output: [[-43.488883779370994 -99] -142.488883779371]
Test Case: 291 | Input/Output: [[75.99068518269468 -31] 44.990685182694676]
Test Case: 292 | Input/Output: [[-11.935780164267058 -22] -33.93578016426706]
Test Case: 293 | Input/Output: [[35.28948870256903 5] 40.28948870256903]
Test Case: 294 | Input/Output: [[-27.38300285779036 -52] -79.38300285779036]
Test Case: 295 | Input/Output: [[-88.95569296970847 -88] -176.95569296970848]
Test Case: 296 | Input/Output: [[-40.94451454016721 13] -27.944514540167212]
Test Case: 297 | Input/Output: [[55.02575669160365 92] 147.02575669160365]
Test Case: 298 | Input/Output: [[-43.94123227005158 14] -29.94123227005158]
Test Case: 299 | Input/Output: [[-7.446668892000943 83] 75.55333110799906]
Test Case: 300 | Input/Output: [[-26.065619931272693 -58] -84.06561993127269]
Test Case: 301 | Input/Output: [[-21.990527336952354 -93] -114.99052733695235]
Test Case: 302 | Input/Output: [[-4.06231277365319 12] 7.93768722634681]
Test Case: 303 | Input/Output: [[87.01393560526887 97] 184.01393560526887]
Test Case: 304 | Input/Output: [[75.61109812863612 72] 147.61109812863612]
Test Case: 305 | Input/Output: [[-53.4712517938025 98] 44.5287482061975]
Test Case: 306 | Input/Output: [[78.94827125216796 36] 114.94827125216796]
Test Case: 307 | Input/Output: [[81.32421210720116 7] 88.32421210720116]
Test Case: 308 | Input/Output: [[-55.432839865728425 75] 19.567160134271575]
Test Case: 309 | Input/Output: [[-68.21153116319553 41] -27.21153116319553]
Test Case: 310 | Input/Output: [[-73.17980036009914 -74] -147.17980036009914]
Test Case: 311 | Input/Output: [[41.18266154968839 70] 111.18266154968839]
Test Case: 312 | Input/Output: [[-12.073680554357026 -49] -61.073680554357026]
Test Case: 313 | Input/Output: [[87.66273910687903 -84] 3.6627391068790303]
Test Case: 314 | Input/Output: [[48.29121143584075 29] 77.29121143584075]
Test Case: 315 | Input/Output: [[-2.106687811646424 96] 93.89331218835358]
Test Case: 316 | Input/Output: [[74.956520671113 -49] 25.956520671112997]
Test Case: 317 | Input/Output: [[66.09548871805023 31] 97.09548871805023]
Test Case: 318 | Input/Output: [[66.24700932643972 -32] 34.24700932643972]
Test Case: 319 | Input/Output: [[-4.620046447867395 -54] -58.620046447867395]
Test Case: 320 | Input/Output: [[-76.49273740959936 -28] -104.49273740959936]
Test Case: 321 | Input/Output: [[-49.86895072172028 -10] -59.86895072172028]
Test Case: 322 | Input/Output: [[-25.136654682671917 -74] -99.13665468267192]
Test Case: 323 | Input/Output: [[21.392323140761334 -48] -26.607676859238666]
Test Case: 324 | Input/Output: [[-72.75210643059762 12] -60.75210643059762]
Test Case: 325 | Input/Output: [[70.2265066065842 -80] -9.773493393415805]
Test Case: 326 | Input/Output: [[48.73271636430849 68] 116.73271636430849]
Test Case: 327 | Input/Output: [[65.3170230570606 -21] 44.317023057060595]
Test Case: 328 | Input/Output: [[88.51258562145671 -71] 17.512585621456708]
Test Case: 329 | Input/Output: [[-35.94153015495418 -19] -54.94153015495418]
Test Case: 330 | Input/Output: [[70.26268204309446 -19] 51.26268204309446]
Test Case: 331 | Input/Output: [[-29.884537590659093 -24] -53.88453759065909]
Test Case: 332 | Input/Output: [[7.5344496312179245 -95] -87.46555036878208]
Test Case: 333 | Input/Output: [[-25.29188480224161 57] 31.70811519775839]
Test Case: 334 | Input/Output: [[95.25802297591335 -12] 83.25802297591335]
Test Case: 335 | Input/Output: [[-8.75848769577803 -55] -63.75848769577803]
Test Case: 336 | Input/Output: [[-11.195639002656918 78] 66.80436099734308]
Test Case: 337 | Input/Output: [[53.62836765742577 -56] -2.3716323425742303]
Test Case: 338 | Input/Output: [[8.644732820590534 -60] -51.355267179409466]
Test Case: 339 | Input/Output: [[66.4495281955941 -12] 54.4495281955941]
Test Case: 340 | Input/Output: [[-67.64555424286735 -82] -149.64555424286735]
Test Case: 341 | Input/Output: [[32.98932659511166 41] 73.98932659511166]
Test Case: 342 | Input/Output: [[95.63951437020356 3] 98.63951437020356]
Test Case: 343 | Input/Output: [[-45.60734146811794 52] 6.392658531882063]
Test Case: 344 | Input/Output: [[19.206827154690217 -29] -9.793172845309783]
Test Case: 345 | Input/Output: [[73.13839859545041 8] 81.13839859545041]
Test Case: 346 | Input/Output: [[-9.21641654486875 -64] -73.21641654486875]
Test Case: 347 | Input/Output: [[55.06294124390374 -44] 11.062941243903737]
Test Case: 348 | Input/Output: [[70.84801430924179 -47] 23.84801430924179]
Test Case: 349 | Input/Output: [[61.57301202401405 -47] 14.573012024014048]
Test Case: 350 | Input/Output: [[-92.0648965773179 -37] -129.06489657731788]
Test Case: 351 | Input/Output: [[36.217952904856844 27] 63.217952904856844]
Test Case: 352 | Input/Output: [[-16.985366544517362 85] 68.01463345548264]
Test Case: 353 | Input/Output: [[-51.71821874825591 -15] -66.71821874825591]
Test Case: 354 | Input/Output: [[8.623551332418273 69] 77.62355133241827]
Test Case: 355 | Input/Output: [[21.40811141773888 97] 118.40811141773888]
Test Case: 356 | Input/Output: [[-92.77933796011621 17] -75.77933796011621]
Test Case: 357 | Input/Output: [[-26.282781931626516 96] 69.71721806837348]
Test Case: 358 | Input/Output: [[83.43816787135404 -82] 1.4381678713540396]
Test Case: 359 | Input/Output: [[-32.25437125987389 -52] -84.25437125987389]
Test Case: 360 | Input/Output: [[65.79839581509168 -45] 20.79839581509168]
Test Case: 361 | Input/Output: [[-76.82532528967869 -93] -169.8253252896787]
Test Case: 362 | Input/Output: [[54.93705574420696 -54] 0.9370557442069583]
Test Case: 363 | Input/Output: [[-24.620752212010657 -53] -77.62075221201066]
Test Case: 364 | Input/Output: [[-7.380640245079206 -46] -53.380640245079206]
Test Case: 365 | Input/Output: [[97.71800256577586 94] 191.71800256577586]
Test Case: 366 | Input/Output: [[-56.15078417711765 -28] -84.15078417711766]
Test Case: 367 | Input/Output: [[25.150634155628467 72] 97.15063415562847]
Test Case: 368 | Input/Output: [[-92.65093957802493 74] -18.650939578024932]
Test Case: 369 | Input/Output: [[-81.28568975563087 3] -78.28568975563087]
Test Case: 370 | Input/Output: [[68.95158351661073 -61] 7.951583516610725]
Test Case: 371 | Input/Output: [[-29.557201673915586 -2] -31.557201673915586]
Test Case: 372 | Input/Output: [[-55.546969285526494 49] -6.546969285526494]
Test Case: 373 | Input/Output: [[-1.9527405723327007 27] 25.0472594276673]
Test Case: 374 | Input/Output: [[-90.97958499680858 -61] -151.97958499680857]
Test Case: 375 | Input/Output: [[67.4195937171529 -5] 62.41959371715291]
Test Case: 376 | Input/Output: [[69.55897088566218 -92] -22.441029114337823]
Test Case: 377 | Input/Output: [[-15.780836507202523 -47] -62.78083650720252]
Test Case: 378 | Input/Output: [[28.080384485309082 29] 57.08038448530908]
Test Case: 379 | Input/Output: [[99.4137234787232 -44] 55.4137234787232]
Test Case: 380 | Input/Output: [[-22.920891739942093 80] 57.07910826005791]
Test Case: 381 | Input/Output: [[91.98710430897896 99] 190.98710430897896]
Test Case: 382 | Input/Output: [[24.92516825053555 67] 91.92516825053555]
Test Case: 383 | Input/Output: [[-37.71463041361889 -23] -60.71463041361889]
Test Case: 384 | Input/Output: [[6.764369960606203 98] 104.7643699606062]
Test Case: 385 | Input/Output: [[30.76663943881482 -62] -31.23336056118518]
Test Case: 386 | Input/Output: [[-75.9231922724193 -96] -171.9231922724193]
Test Case: 387 | Input/Output: [[-38.867442660604866 -47] -85.86744266060487]
Test Case: 388 | Input/Output: [[14.713528549086078 52] 66.71352854908608]
Test Case: 389 | Input/Output: [[75.12782238977746 -87] -11.872177610222536]
Test Case: 390 | Input/Output: [[51.24195990537689 -99] -47.75804009462311]
Test Case: 391 | Input/Output: [[62.490587281942425 -53] 9.490587281942425]
Test Case: 392 | Input/Output: [[-38.86753620486907 -73] -111.86753620486907]
Test Case: 393 | Input/Output: [[-32.36855823350788 82] 49.63144176649212]
Test Case: 394 | Input/Output: [[-87.73368991240736 82] -5.733689912407357]
Test Case: 395 | Input/Output: [[47.45672633851299 47] 94.456726338513]
Test Case: 396 | Input/Output: [[2.327075741191976 -57] -54.672924258808024]
Test Case: 397 | Input/Output: [[-86.97271947780258 14] -72.97271947780258]
Test Case: 398 | Input/Output: [[-0.6519858198306991 -70] -70.6519858198307]
Test Case: 399 | Input/Output: [[31.889946770005537 -44] -12.110053229994463]
Test Case: 400 | Input/Output: [[-63.06738874373907 56] -7.067388743739073]
Test Case: 401 | Input/Output: [[-35.027821948284625 60] 24.972178051715375]
Test Case: 402 | Input/Output: [[-53.412164210472014 78] 24.587835789527986]
Test Case: 403 | Input/Output: [[44.01481657933911 -67] -22.98518342066089]
Test Case: 404 | Input/Output: [[-36.344251328598375 -23] -59.344251328598375]
Test Case: 405 | Input/Output: [[41.440294114858716 -94] -52.559705885141284]
Test Case: 406 | Input/Output: [[1.021400753662789 -40] -38.97859924633721]
Test Case: 407 | Input/Output: [[-77.91147891809183 26] -51.91147891809183]
Test Case: 408 | Input/Output: [[-93.8076230513511 -25] -118.8076230513511]
Test Case: 409 | Input/Output: [[-55.657151541007075 58] 2.3428484589929255]
Test Case: 410 | Input/Output: [[-55.06377402584776 -19] -74.06377402584776]
Test Case: 411 | Input/Output: [[-90.29689415044295 -17] -107.29689415044295]
Test Case: 412 | Input/Output: [[88.79651130958018 4] 92.79651130958018]
Test Case: 413 | Input/Output: [[-8.87706442538149 74] 65.12293557461851]
Test Case: 414 | Input/Output: [[-57.98420713499126 51] -6.984207134991259]
Test Case: 415 | Input/Output: [[7.930166147844986 89] 96.93016614784499]
Test Case: 416 | Input/Output: [[-27.425288076919287 -9] -36.42528807691929]
Test Case: 417 | Input/Output: [[13.150531457175333 32] 45.15053145717533]
Test Case: 418 | Input/Output: [[26.20406008156924 69] 95.20406008156924]
Test Case: 419 | Input/Output: [[-23.54525143991752 43] 19.45474856008248]
Test Case: 420 | Input/Output: [[-62.45883939887633 56] -6.458839398876329]
Test Case: 421 | Input/Output: [[-52.02179641695888 58] 5.978203583041122]
Test Case: 422 | Input/Output: [[-78.85689982996368 13] -65.85689982996368]
Test Case: 423 | Input/Output: [[-70.28569022223047 84] 13.714309777769529]
Test Case: 424 | Input/Output: [[-21.364962774133218 -74] -95.36496277413322]
Test Case: 425 | Input/Output: [[-56.01757125322913 40] -16.01757125322913]
Test Case: 426 | Input/Output: [[-33.61560055696644 -86] -119.61560055696644]
Test Case: 427 | Input/Output: [[-92.75149544022716 -100] -192.75149544022716]
Test Case: 428 | Input/Output: [[-8.114597074036496 23] 14.885402925963504]
Test Case: 429 | Input/Output: [[24.385751412709666 -12] 12.385751412709666]
Test Case: 430 | Input/Output: [[83.97650840080917 14] 97.97650840080917]
Test Case: 431 | Input/Output: [[7.581877335248947 -17] -9.418122664751053]
Test Case: 432 | Input/Output: [[17.5909204656366 -75] -57.4090795343634]
Test Case: 433 | Input/Output: [[-81.05836090097594 -27] -108.05836090097594]
Test Case: 434 | Input/Output: [[4.34014428959199 -11] -6.65985571040801]
Test Case: 435 | Input/Output: [[99.01455525416719 85] 184.0145552541672]
Test Case: 436 | Input/Output: [[74.00437573665425 -38] 36.004375736654254]
Test Case: 437 | Input/Output: [[-44.426373694865106 16] -28.426373694865106]
Test Case: 438 | Input/Output: [[7.739435804978029 -45] -37.26056419502197]
Test Case: 439 | Input/Output: [[84.86879503089415 76] 160.86879503089415]
Test Case: 440 | Input/Output: [[-44.38522120223036 39] -5.385221202230362]
Test Case: 441 | Input/Output: [[-0.7588924254042126 -16] -16.758892425404213]
Test Case: 442 | Input/Output: [[-48.00247324690441 -70] -118.0024732469044]
Test Case: 443 | Input/Output: [[56.129947172868555 8] 64.12994717286855]
Test Case: 444 | Input/Output: [[-16.96270771175834 30] 13.037292288241659]
Test Case: 445 | Input/Output: [[-54.793834151377105 -88] -142.7938341513771]
Test Case: 446 | Input/Output: [[-53.634880436202856 -18] -71.63488043620285]
Test Case: 447 | Input/Output: [[-29.518839818940165 -87] -116.51883981894017]
Test Case: 448 | Input/Output: [[-35.53985773541825 84] 48.46014226458175]
Test Case: 449 | Input/Output: [[-78.03443586646046 85] 6.965564133539544]
Test Case: 450 | Input/Output: [[23.092673563077824 -64] -40.907326436922176]
Test Case: 451 | Input/Output: [[-97.51212549671486 33] -64.51212549671486]
Test Case: 452 | Input/Output: [[-38.530073475426654 -91] -129.53007347542666]
Test Case: 453 | Input/Output: [[-9.637914704509498 13] 3.362085295490502]
Test Case: 454 | Input/Output: [[-69.84355045363486 61] -8.843550453634862]
Test Case: 455 | Input/Output: [[81.65269732668804 -33] 48.65269732668804]
Test Case: 456 | Input/Output: [[-6.446802490356447 -99] -105.44680249035645]
Test Case: 457 | Input/Output: [[62.23835410884652 -6] 56.23835410884652]
Test Case: 458 | Input/Output: [[-74.61471298813278 -95] -169.6147129881328]
Test Case: 459 | Input/Output: [[64.62694429409751 92] 156.6269442940975]
Test Case: 460 | Input/Output: [[46.60676680982655 -91] -44.39323319017345]
Test Case: 461 | Input/Output: [[74.37271165812336 -40] 34.372711658123364]
Test Case: 462 | Input/Output: [[4.664845218870411 27] 31.66484521887041]
Test Case: 463 | Input/Output: [[-3.238604807028082 20] 16.761395192971918]
Test Case: 464 | Input/Output: [[-69.7970857272249 -50] -119.7970857272249]
Test Case: 465 | Input/Output: [[49.16310562558152 10] 59.16310562558152]
Test Case: 466 | Input/Output: [[63.381785444140746 23] 86.38178544414075]
Test Case: 467 | Input/Output: [[-96.63763945112387 -5] -101.63763945112387]
Test Case: 468 | Input/Output: [[80.19082091852994 58] 138.19082091852994]
Test Case: 469 | Input/Output: [[-45.300233414321234 -92] -137.30023341432124]
Test Case: 470 | Input/Output: [[-39.00766888620881 -81] -120.00766888620882]
Test Case: 471 | Input/Output: [[92.02151522287994 23] 115.02151522287994]
Test Case: 472 | Input/Output: [[-64.96724224292565 -50] -114.96724224292565]
Test Case: 473 | Input/Output: [[-60.34212366453309 0] -60.34212366453309]
Test Case: 474 | Input/Output: [[77.3431144503638 13] 90.3431144503638]
Test Case: 475 | Input/Output: [[-20.556302389782502 10] -10.556302389782502]
Test Case: 476 | Input/Output: [[-20.402307529622448 -53] -73.40230752962245]
Test Case: 477 | Input/Output: [[34.982460299954965 74] 108.98246029995497]
Test Case: 478 | Input/Output: [[89.16366991917423 97] 186.16366991917423]
Test Case: 479 | Input/Output: [[26.527131985379768 -62] -35.47286801462023]
Test Case: 480 | Input/Output: [[3.4080581717583556 -66] -62.591941828241644]
Test Case: 481 | Input/Output: [[95.95530385304099 -26] 69.95530385304099]
Test Case: 482 | Input/Output: [[93.78128959384009 88] 181.78128959384009]
Test Case: 483 | Input/Output: [[73.41787797242756 -39] 34.41787797242756]
Test Case: 484 | Input/Output: [[-57.70730250744185 95] 37.29269749255815]
Test Case: 485 | Input/Output: [[-91.3302740413304 -23] -114.3302740413304]
Test Case: 486 | Input/Output: [[-61.6324042852705 86] 24.367595714729497]
Test Case: 487 | Input/Output: [[-11.460401618059834 29] 17.539598381940166]
Test Case: 488 | Input/Output: [[97.2038764555748 -49] 48.2038764555748]
Test Case: 489 | Input/Output: [[-47.62801808246373 25] -22.628018082463733]
Test Case: 490 | Input/Output: [[63.81358873702962 89] 152.81358873702962]
Test Case: 491 | Input/Output: [[94.68846764386501 -57] 37.68846764386501]
Test Case: 492 | Input/Output: [[56.43579811398246 35] 91.43579811398246]
Test Case: 493 | Input/Output: [[51.09004730457468 29] 80.09004730457468]
Test Case: 494 | Input/Output: [[-53.85910109284369 59] 5.140898907156313]
Test Case: 495 | Input/Output: [[43.22418559310884 -43] 0.22418559310884234]
Test Case: 496 | Input/Output: [[-42.542061253553484 -90] -132.54206125355347]
Test Case: 497 | Input/Output: [[-60.142666080816284 -24] -84.14266608081628]
Test Case: 498 | Input/Output: [[-1.08321068050914 22] 20.91678931949086]
Test Case: 499 | Input/Output: [[23.308772047314164 -7] 16.308772047314164]
Test Case: 500 | Input/Output: [[90.654809677049 25] 115.654809677049]
Test Case: 501 | Input/Output: [[-38.69814270910983 86] 47.30185729089017]
Test Case: 502 | Input/Output: [[70.60856574254328 -34] 36.60856574254328]
Test Case: 503 | Input/Output: [[14.24605666778615 70] 84.24605666778615]
Test Case: 504 | Input/Output: [[1.5238026414912298 58] 59.52380264149123]
Test Case: 505 | Input/Output: [[59.70075250041015 -10] 49.70075250041015]
Test Case: 506 | Input/Output: [[-92.87390033406122 -82] -174.8739003340612]
Test Case: 507 | Input/Output: [[16.356684371981828 -75] -58.64331562801817]
Test Case: 508 | Input/Output: [[97.782045577713 96] 193.782045577713]
Test Case: 509 | Input/Output: [[-61.55295691816287 -84] -145.55295691816286]
Test Case: 510 | Input/Output: [[64.66879336062101 21] 85.66879336062101]
Test Case: 511 | Input/Output: [[-68.1814054435826 86] 17.818594556417395]
Test Case: 512 | Input/Output: [[48.77257090840408 -1] 47.77257090840408]
Test Case: 513 | Input/Output: [[-55.007460897244044 21] -34.007460897244044]
Test Case: 514 | Input/Output: [[-41.275085679104365 -58] -99.27508567910436]
Test Case: 515 | Input/Output: [[-4.410259784206588 100] 95.58974021579341]
Test Case: 516 | Input/Output: [[-40.74191302057304 -54] -94.74191302057304]
Test Case: 517 | Input/Output: [[-77.24163024457704 -41] -118.24163024457704]
Test Case: 518 | Input/Output: [[82.14841494711834 -34] 48.14841494711834]
Test Case: 519 | Input/Output: [[65.25700783974693 -61] 4.257007839746933]
Test Case: 520 | Input/Output: [[-32.30651341737851 24] -8.306513417378511]
Test Case: 521 | Input/Output: [[-14.591965384910878 -88] -102.59196538491088]
Test Case: 522 | Input/Output: [[93.24587887023753 24] 117.24587887023753]
Test Case: 523 | Input/Output: [[61.50458549316585 -4] 57.50458549316585]
Test Case: 524 | Input/Output: [[21.264359437038323 31] 52.26435943703832]
Test Case: 525 | Input/Output: [[-82.2411803015886 52] -30.2411803015886]
Test Case: 526 | Input/Output: [[-7.299825631952061 -66] -73.29982563195206]
Test Case: 527 | Input/Output: [[-54.938521089951145 -15] -69.93852108995114]
Test Case: 528 | Input/Output: [[71.33454897133771 -27] 44.33454897133771]
Test Case: 529 | Input/Output: [[-67.89842904884 -90] -157.89842904884]
Test Case: 530 | Input/Output: [[-80.46841705251737 -41] -121.46841705251737]
Test Case: 531 | Input/Output: [[11.531837625433482 -8] 3.5318376254334822]
Test Case: 532 | Input/Output: [[78.36474759022366 60] 138.36474759022366]
Test Case: 533 | Input/Output: [[-68.80358856138844 -72] -140.80358856138844]
Test Case: 534 | Input/Output: [[76.11170399147841 15] 91.11170399147841]
Test Case: 535 | Input/Output: [[28.915956606539027 19] 47.91595660653903]
Test Case: 536 | Input/Output: [[-75.65177149311864 58] -17.651771493118645]
Test Case: 537 | Input/Output: [[34.91156020781011 21] 55.91156020781011]
Test Case: 538 | Input/Output: [[18.432932845680057 -79] -60.56706715431994]
Test Case: 539 | Input/Output: [[-44.73217460502759 -4] -48.73217460502759]
Test Case: 540 | Input/Output: [[28.460231446773236 -54] -25.539768553226764]
Test Case: 541 | Input/Output: [[75.55628885445759 -54] 21.55628885445759]
Test Case: 542 | Input/Output: [[-71.6711730277058 -16] -87.6711730277058]
Test Case: 543 | Input/Output: [[1.6364782146254697 4] 5.63647821462547]
Test Case: 544 | Input/Output: [[85.44930825413991 26] 111.44930825413991]
Test Case: 545 | Input/Output: [[82.26758940492104 -15] 67.26758940492104]
Test Case: 546 | Input/Output: [[95.71237747294006 43] 138.71237747294006]
Test Case: 547 | Input/Output: [[92.52529970466583 23] 115.52529970466583]
Test Case: 548 | Input/Output: [[2.6674839780786783 -84] -81.33251602192132]
Test Case: 549 | Input/Output: [[-83.6579577761805 -88] -171.6579577761805]
Test Case: 550 | Input/Output: [[11.834376353492118 91] 102.83437635349212]
Test Case: 551 | Input/Output: [[75.0754761336801 43] 118.0754761336801]
Test Case: 552 | Input/Output: [[80.83125863707238 -27] 53.83125863707238]
Test Case: 553 | Input/Output: [[-6.857174808185178 -27] -33.85717480818518]
Test Case: 554 | Input/Output: [[-82.70072058766777 -74] -156.70072058766777]
Test Case: 555 | Input/Output: [[-37.136628412736705 -29] -66.13662841273671]
Test Case: 556 | Input/Output: [[-68.36946912536362 -36] -104.36946912536362]
Test Case: 557 | Input/Output: [[66.77760174681578 63] 129.77760174681578]
Test Case: 558 | Input/Output: [[56.53688811928362 -60] -3.463111880716383]
Test Case: 559 | Input/Output: [[91.64990687420871 -22] 69.64990687420871]
Test Case: 560 | Input/Output: [[43.86046016140625 -88] -44.13953983859375]
Test Case: 561 | Input/Output: [[-31.737366526664815 -68] -99.73736652666481]
Test Case: 562 | Input/Output: [[-14.214248253230878 -28] -42.21424825323088]
Test Case: 563 | Input/Output: [[48.91972003955226 -62] -13.08027996044774]
Test Case: 564 | Input/Output: [[73.27896504131363 29] 102.27896504131363]
Test Case: 565 | Input/Output: [[18.26179382198221 -19] -0.7382061780177906]
Test Case: 566 | Input/Output: [[-17.423849021494846 19] 1.5761509785051544]
Test Case: 567 | Input/Output: [[-69.79819455610041 48] -21.798194556100412]
Test Case: 568 | Input/Output: [[90.46424733813018 36] 126.46424733813018]
Test Case: 569 | Input/Output: [[55.88573720017345 100] 155.88573720017345]
Test Case: 570 | Input/Output: [[12.127216313896099 68] 80.1272163138961]
Test Case: 571 | Input/Output: [[57.22629988253715 -91] -33.77370011746285]
Test Case: 572 | Input/Output: [[-33.04623093798898 17] -16.04623093798898]
Test Case: 573 | Input/Output: [[-11.75021637480502 -80] -91.75021637480502]
Test Case: 574 | Input/Output: [[51.362742315472644 -32] 19.362742315472644]
Test Case: 575 | Input/Output: [[33.21132865188852 -94] -60.78867134811148]
Test Case: 576 | Input/Output: [[-93.33071195276436 15] -78.33071195276436]
Test Case: 577 | Input/Output: [[-44.6669081142345 1] -43.6669081142345]
Test Case: 578 | Input/Output: [[44.924552045674176 -34] 10.924552045674176]
Test Case: 579 | Input/Output: [[76.05978990871972 18] 94.05978990871972]
Test Case: 580 | Input/Output: [[7.959506357060292 22] 29.95950635706029]
Test Case: 581 | Input/Output: [[57.36055416952769 27] 84.36055416952769]
Test Case: 582 | Input/Output: [[-29.012085657825736 75] 45.987914342174264]
Test Case: 583 | Input/Output: [[58.014894658588986 -91] -32.985105341411014]
Test Case: 584 | Input/Output: [[10.502992729574117 -61] -50.49700727042588]
Test Case: 585 | Input/Output: [[71.54052460812949 -35] 36.54052460812949]
Test Case: 586 | Input/Output: [[54.55433329589107 -47] 7.55433329589107]
Test Case: 587 | Input/Output: [[-55.08287654280688 56] 0.9171234571931208]
Test Case: 588 | Input/Output: [[84.29064150070468 -44] 40.29064150070468]
Test Case: 589 | Input/Output: [[-99.33846714506328 -78] -177.33846714506328]
Test Case: 590 | Input/Output: [[76.40905848344804 78] 154.40905848344804]
Test Case: 591 | Input/Output: [[-40.589432845827304 64] 23.410567154172696]
Test Case: 592 | Input/Output: [[90.84719033515191 20] 110.84719033515191]
Test Case: 593 | Input/Output: [[46.87272016342666 -85] -38.12727983657334]
Test Case: 594 | Input/Output: [[87.07761511353769 77] 164.0776151135377]
Test Case: 595 | Input/Output: [[28.001769443759002 -4] 24.001769443759002]
Test Case: 596 | Input/Output: [[-78.45256044203508 -24] -102.45256044203508]
Test Case: 597 | Input/Output: [[-49.4052289104659 -98] -147.4052289104659]
Test Case: 598 | Input/Output: [[53.41224193502251 -85] -31.587758064977493]
Test Case: 599 | Input/Output: [[-88.23910323359578 95] 6.760896766404215]
Test Case: 600 | Input/Output: [[-50.65487558341364 -59] -109.65487558341364]
Test Case: 601 | Input/Output: [[-99.45955525690215 -2] -101.45955525690215]
Test Case: 602 | Input/Output: [[-79.33396582159688 -99] -178.33396582159688]
Test Case: 603 | Input/Output: [[-19.360986494363758 -37] -56.36098649436376]
Test Case: 604 | Input/Output: [[45.58061293501703 -30] 15.58061293501703]
Test Case: 605 | Input/Output: [[-11.361570387578283 91] 79.63842961242172]
Test Case: 606 | Input/Output: [[-4.035132274423773 71] 66.96486772557623]
Test Case: 607 | Input/Output: [[66.63677047366792 19] 85.63677047366792]
Test Case: 608 | Input/Output: [[10.132778397851823 -10] 0.13277839785182266]
Test Case: 609 | Input/Output: [[-52.15828079364682 58] 5.841719206353183]
Test Case: 610 | Input/Output: [[96.1259854251218 70] 166.1259854251218]
Test Case: 611 | Input/Output: [[-68.15571350952337 91] 22.844286490476634]
Test Case: 612 | Input/Output: [[31.51299288718397 1] 32.51299288718397]
Test Case: 613 | Input/Output: [[-1.3565498985348938 71] 69.6434501014651]
Test Case: 614 | Input/Output: [[-78.93980144076131 84] 5.060198559238685]
Test Case: 615 | Input/Output: [[47.033634573261054 6] 53.033634573261054]
Test Case: 616 | Input/Output: [[-23.41685836342593 -85] -108.41685836342593]
Test Case: 617 | Input/Output: [[-27.640190332032205 -57] -84.6401903320322]
Test Case: 618 | Input/Output: [[7.3757520313732385 90] 97.37575203137324]
Test Case: 619 | Input/Output: [[-44.97775503280182 -79] -123.97775503280181]
Test Case: 620 | Input/Output: [[21.246928536745997 42] 63.246928536746]
Test Case: 621 | Input/Output: [[75.73233220107173 24] 99.73233220107173]
Test Case: 622 | Input/Output: [[42.04541529214771 15] 57.04541529214771]
Test Case: 623 | Input/Output: [[-10.433751221335001 78] 67.566248778665]
Test Case: 624 | Input/Output: [[-49.837419512856805 -85] -134.8374195128568]
Test Case: 625 | Input/Output: [[77.52890737419176 16] 93.52890737419176]
Test Case: 626 | Input/Output: [[30.120477238468055 48] 78.12047723846806]
Test Case: 627 | Input/Output: [[75.86290095305418 -59] 16.86290095305418]
Test Case: 628 | Input/Output: [[-36.08672324645789 -78] -114.0867232464579]
Test Case: 629 | Input/Output: [[40.535362575044275 75] 115.53536257504427]
Test Case: 630 | Input/Output: [[-20.157295892434092 -85] -105.15729589243409]
Test Case: 631 | Input/Output: [[75.18963073728656 -98] -22.810369262713436]
Test Case: 632 | Input/Output: [[35.43859166679468 -76] -40.56140833320532]
Test Case: 633 | Input/Output: [[-28.680236081913122 23] -5.680236081913122]
Test Case: 634 | Input/Output: [[2.2775420921674367 83] 85.27754209216744]
Test Case: 635 | Input/Output: [[90.99150038149915 -37] 53.99150038149915]
Test Case: 636 | Input/Output: [[8.72075650107837 83] 91.72075650107837]
Test Case: 637 | Input/Output: [[-19.481116854123897 76] 56.5188831458761]
Test Case: 638 | Input/Output: [[26.473506087380642 -100] -73.52649391261936]
Test Case: 639 | Input/Output: [[80.3121540196357 -99] -18.6878459803643]
Test Case: 640 | Input/Output: [[-95.25649154816655 -90] -185.25649154816654]
Test Case: 641 | Input/Output: [[-68.07511041744094 10] -58.07511041744094]
Test Case: 642 | Input/Output: [[12.944905072547058 -72] -59.05509492745294]
Test Case: 643 | Input/Output: [[19.887533944906608 -81] -61.11246605509339]
Test Case: 644 | Input/Output: [[48.3369361329523 8] 56.3369361329523]
Test Case: 645 | Input/Output: [[99.09492153532031 -35] 64.09492153532031]
Test Case: 646 | Input/Output: [[19.077995514585695 49] 68.0779955145857]
Test Case: 647 | Input/Output: [[10.11721044519777 21] 31.11721044519777]
Test Case: 648 | Input/Output: [[-6.100475857524316 -75] -81.10047585752432]
Test Case: 649 | Input/Output: [[16.674972216991193 -18] -1.3250277830088066]
Test Case: 650 | Input/Output: [[-92.21506734911999 -86] -178.21506734911998]
Test Case: 651 | Input/Output: [[17.1516556672195 11] 28.1516556672195]
Test Case: 652 | Input/Output: [[-48.63286156872621 -26] -74.63286156872621]
Test Case: 653 | Input/Output: [[-82.56427889850899 1] -81.56427889850899]
Test Case: 654 | Input/Output: [[-2.5078177568505 26] 23.4921822431495]
Test Case: 655 | Input/Output: [[57.605099099235645 10] 67.60509909923564]
Test Case: 656 | Input/Output: [[-65.04537222693946 -33] -98.04537222693946]
Test Case: 657 | Input/Output: [[58.69609424031873 64] 122.69609424031873]
Test Case: 658 | Input/Output: [[0.10052794212352012 20] 20.10052794212352]
Test Case: 659 | Input/Output: [[-58.11650847542666 23] -35.11650847542666]
Test Case: 660 | Input/Output: [[-46.60809587490322 -42] -88.60809587490323]
Test Case: 661 | Input/Output: [[61.098575956887544 -33] 28.098575956887544]
Test Case: 662 | Input/Output: [[84.54457011944413 -69] 15.544570119444131]
Test Case: 663 | Input/Output: [[95.28474687181264 -34] 61.284746871812644]
Test Case: 664 | Input/Output: [[-41.4261267237565 -81] -122.4261267237565]
Test Case: 665 | Input/Output: [[81.98083239758657 97] 178.98083239758657]
Test Case: 666 | Input/Output: [[9.768578255897637 44] 53.76857825589764]
Test Case: 667 | Input/Output: [[-2.8864328964095023 -92] -94.8864328964095]
Test Case: 668 | Input/Output: [[-1.0555972054592928 -49] -50.05559720545929]
Test Case: 669 | Input/Output: [[90.9738710957021 -4] 86.9738710957021]
Test Case: 670 | Input/Output: [[-56.38216004767074 98] 41.61783995232926]
Test Case: 671 | Input/Output: [[-94.15076009272747 -52] -146.15076009272747]
Test Case: 672 | Input/Output: [[60.59651813845187 67] 127.59651813845187]
Test Case: 673 | Input/Output: [[81.96607804229387 42] 123.96607804229387]
Test Case: 674 | Input/Output: [[97.88422423794574 -20] 77.88422423794574]
Test Case: 675 | Input/Output: [[-81.38789609563675 70] -11.387896095636748]
Test Case: 676 | Input/Output: [[-3.3127273542943527 -77] -80.31272735429435]
Test Case: 677 | Input/Output: [[35.10313105749469 -61] -25.896868942505307]
Test Case: 678 | Input/Output: [[-40.61355791416978 91] 50.38644208583022]
Test Case: 679 | Input/Output: [[-0.3896201123222909 22] 21.61037988767771]
Test Case: 680 | Input/Output: [[1.9744793123484499 -1] 0.9744793123484499]
Test Case: 681 | Input/Output: [[88.66313534453445 36] 124.66313534453445]
Test Case: 682 | Input/Output: [[51.083035390204316 88] 139.08303539020432]
Test Case: 683 | Input/Output: [[-40.77550322013182 -8] -48.77550322013182]
Test Case: 684 | Input/Output: [[-41.89593638607756 -56] -97.89593638607755]
Test Case: 685 | Input/Output: [[27.340390016549648 -80] -52.65960998345035]
Test Case: 686 | Input/Output: [[-47.72391256186914 -14] -61.72391256186914]
Test Case: 687 | Input/Output: [[10.930475009435867 -78] -67.06952499056413]
Test Case: 688 | Input/Output: [[-38.74236999681975 78] 39.25763000318025]
Test Case: 689 | Input/Output: [[-60.61869051190216 22] -38.61869051190216]
Test Case: 690 | Input/Output: [[39.16158826912397 -70] -30.838411730876032]
Test Case: 691 | Input/Output: [[-13.67287211940662 17] 3.3271278805933804]
Test Case: 692 | Input/Output: [[-55.259347990409566 -39] -94.25934799040957]
Test Case: 693 | Input/Output: [[-96.63037398658625 11] -85.63037398658625]
Test Case: 694 | Input/Output: [[71.89530219230593 63] 134.89530219230593]
Test Case: 695 | Input/Output: [[-35.288957302160554 67] 31.711042697839446]
Test Case: 696 | Input/Output: [[-9.833962815129851 27] 17.16603718487015]
Test Case: 697 | Input/Output: [[11.606316188063602 15] 26.6063161880636]
Test Case: 698 | Input/Output: [[63.404389461308256 -88] -24.595610538691744]
Test Case: 699 | Input/Output: [[-69.74863616892256 -1] -70.74863616892256]
Test Case: 700 | Input/Output: [[46.31705269825821 -24] 22.31705269825821]
Test Case: 701 | Input/Output: [[-94.35172223276062 -93] -187.3517222327606]
Test Case: 702 | Input/Output: [[86.09753960007782 -34] 52.09753960007782]
Test Case: 703 | Input/Output: [[58.07636591574129 -75] -16.92363408425871]
Test Case: 704 | Input/Output: [[88.5236967268491 5] 93.5236967268491]
Test Case: 705 | Input/Output: [[16.522884053526354 28] 44.522884053526354]
Test Case: 706 | Input/Output: [[38.15829608275118 -57] -18.84170391724882]
Test Case: 707 | Input/Output: [[24.217838518193503 27] 51.2178385181935]
Test Case: 708 | Input/Output: [[59.48552691242091 41] 100.48552691242091]
Test Case: 709 | Input/Output: [[66.37425535479838 -58] 8.374255354798379]
Test Case: 710 | Input/Output: [[-26.96335196187269 -7] -33.96335196187269]
Test Case: 711 | Input/Output: [[-38.61414709402426 -66] -104.61414709402426]
Test Case: 712 | Input/Output: [[-44.84197140491419 34] -10.84197140491419]
Test Case: 713 | Input/Output: [[74.03051861133494 77] 151.03051861133494]
Test Case: 714 | Input/Output: [[-59.07897016743364 90] 30.92102983256636]
Test Case: 715 | Input/Output: [[-24.08468055925627 18] -6.08468055925627]
Test Case: 716 | Input/Output: [[-26.531949028186247 34] 7.468050971813753]
Test Case: 717 | Input/Output: [[-63.02770966599649 -24] -87.0277096659965]
Test Case: 718 | Input/Output: [[16.094876022756452 18] 34.09487602275645]
Test Case: 719 | Input/Output: [[46.1213968117861 -6] 40.1213968117861]
Test Case: 720 | Input/Output: [[44.34103404989776 85] 129.34103404989776]
Test Case: 721 | Input/Output: [[31.652477066718887 82] 113.65247706671889]
Test Case: 722 | Input/Output: [[24.438711977673307 92] 116.43871197767331]
Test Case: 723 | Input/Output: [[-2.070838007226584 -70] -72.07083800722658]
Test Case: 724 | Input/Output: [[11.603286718980343 35] 46.60328671898034]
Test Case: 725 | Input/Output: [[-29.988049772934076 -23] -52.988049772934076]
Test Case: 726 | Input/Output: [[44.83299230033899 -90] -45.16700769966101]
Test Case: 727 | Input/Output: [[68.74838824583404 38] 106.74838824583404]
Test Case: 728 | Input/Output: [[37.035042805839566 86] 123.03504280583957]
Test Case: 729 | Input/Output: [[-1.4548494596639614 -7] -8.454849459663961]
Test Case: 730 | Input/Output: [[31.179742413533234 -4] 27.179742413533234]
Test Case: 731 | Input/Output: [[57.647354602771316 -77] -19.352645397228684]
Test Case: 732 | Input/Output: [[-7.0383208495798755 6] -1.0383208495798755]
Test Case: 733 | Input/Output: [[-0.41693957335029097 -28] -28.41693957335029]
Test Case: 734 | Input/Output: [[-73.77957405450266 -50] -123.77957405450266]
Test Case: 735 | Input/Output: [[-16.292655048516153 18] 1.7073449514838472]
Test Case: 736 | Input/Output: [[-82.09707563772744 -97] -179.09707563772744]
Test Case: 737 | Input/Output: [[48.24155129432691 -60] -11.75844870567309]
Test Case: 738 | Input/Output: [[-94.40322493028039 -35] -129.40322493028037]
Test Case: 739 | Input/Output: [[-66.44262434155235 24] -42.442624341552346]
Test Case: 740 | Input/Output: [[-18.041336585883897 -41] -59.0413365858839]
Test Case: 741 | Input/Output: [[-44.54494744625126 80] 35.45505255374874]
Test Case: 742 | Input/Output: [[46.24109279158861 -35] 11.241092791588613]
Test Case: 743 | Input/Output: [[84.07333632573508 -22] 62.073336325735085]
Test Case: 744 | Input/Output: [[9.577975872153303 -28] -18.422024127846697]
Test Case: 745 | Input/Output: [[47.5240014843379 87] 134.5240014843379]
Test Case: 746 | Input/Output: [[-17.71790147713162 65] 47.28209852286838]
Test Case: 747 | Input/Output: [[-6.451058976246486 61] 54.548941023753514]
Test Case: 748 | Input/Output: [[-5.24337791411223 87] 81.75662208588777]
Test Case: 749 | Input/Output: [[-7.978200142567005 32] 24.021799857432995]
Test Case: 750 | Input/Output: [[48.147657790254925 -54] -5.852342209745075]
Test Case: 751 | Input/Output: [[-5.748022516206234 28] 22.251977483793766]
Test Case: 752 | Input/Output: [[-29.98486232875844 -82] -111.98486232875844]
Test Case: 753 | Input/Output: [[-33.241241661485205 2] -31.241241661485205]
Test Case: 754 | Input/Output: [[35.90358790982654 -65] -29.09641209017346]
Test Case: 755 | Input/Output: [[89.77726155599316 -14] 75.77726155599316]
Test Case: 756 | Input/Output: [[35.10873962892393 81] 116.10873962892393]
Test Case: 757 | Input/Output: [[-80.79967762254194 17] -63.799677622541935]
Test Case: 758 | Input/Output: [[-33.479896306672586 -22] -55.479896306672586]
Test Case: 759 | Input/Output: [[-46.094540420155525 -60] -106.09454042015552]
Test Case: 760 | Input/Output: [[83.0091591921294 73] 156.0091591921294]
Test Case: 761 | Input/Output: [[-66.29289750049357 -52] -118.29289750049357]
Test Case: 762 | Input/Output: [[-25.52180868889829 49] 23.47819131110171]
Test Case: 763 | Input/Output: [[47.32701137950036 19] 66.32701137950036]
Test Case: 764 | Input/Output: [[-58.3783097246489 -70] -128.3783097246489]
Test Case: 765 | Input/Output: [[87.85947308522572 -99] -11.140526914774284]
Test Case: 766 | Input/Output: [[-93.20307878156724 64] -29.203078781567243]
Test Case: 767 | Input/Output: [[-0.22104721130079952 -32] -32.2210472113008]
Test Case: 768 | Input/Output: [[-32.62061774329497 -81] -113.62061774329497]
Test Case: 769 | Input/Output: [[-32.97228234582548 -24] -56.97228234582548]
Test Case: 770 | Input/Output: [[38.754304031897846 -66] -27.245695968102154]
Test Case: 771 | Input/Output: [[-36.22330596620815 -13] -49.22330596620815]
Test Case: 772 | Input/Output: [[37.425496605047556 74] 111.42549660504756]
Test Case: 773 | Input/Output: [[-37.330070739530456 37] -0.3300707395304556]
Test Case: 774 | Input/Output: [[52.29919302932922 -95] -42.70080697067078]
Test Case: 775 | Input/Output: [[23.003210783706038 -86] -62.99678921629396]
Test Case: 776 | Input/Output: [[68.80527432701115 -65] 3.8052743270111478]
Test Case: 777 | Input/Output: [[-48.39182105955844 -40] -88.39182105955844]
Test Case: 778 | Input/Output: [[-10.567842558935126 -41] -51.567842558935126]
Test Case: 779 | Input/Output: [[13.727672011142118 4] 17.72767201114212]
Test Case: 780 | Input/Output: [[-91.36708161170264 42] -49.367081611702645]
Test Case: 781 | Input/Output: [[83.85395685730097 -84] -0.1460431426990283]
Test Case: 782 | Input/Output: [[68.40966771947154 67] 135.40966771947154]
Test Case: 783 | Input/Output: [[65.6800851289079 72] 137.6800851289079]
Test Case: 784 | Input/Output: [[-13.876631933921473 59] 45.12336806607853]
Test Case: 785 | Input/Output: [[-97.8870995739459 -16] -113.8870995739459]
Test Case: 786 | Input/Output: [[-66.18784999939689 -43] -109.18784999939689]
Test Case: 787 | Input/Output: [[16.373737200222635 -5] 11.373737200222635]
Test Case: 788 | Input/Output: [[-32.57934309978077 2] -30.579343099780772]
Test Case: 789 | Input/Output: [[-34.10272417587758 -6] -40.10272417587758]
Test Case: 790 | Input/Output: [[-78.09368163863302 -40] -118.09368163863302]
Test Case: 791 | Input/Output: [[59.61323044808367 15] 74.61323044808367]
Test Case: 792 | Input/Output: [[-87.33143218501125 33] -54.33143218501125]
Test Case: 793 | Input/Output: [[-97.79752226994233 1] -96.79752226994233]
Test Case: 794 | Input/Output: [[28.33094795690002 -14] 14.330947956900019]
Test Case: 795 | Input/Output: [[2.3716193534317824 -47] -44.62838064656822]
Test Case: 796 | Input/Output: [[81.49093305703408 63] 144.49093305703408]
Test Case: 797 | Input/Output: [[58.96661830433453 37] 95.96661830433453]
Test Case: 798 | Input/Output: [[-99.57397082949353 11] -88.57397082949353]
Test Case: 799 | Input/Output: [[-79.36278248265351 29] -50.362782482653515]
Test Case: 800 | Input/Output: [[24.787456306365257 45] 69.78745630636526]
Test Case: 801 | Input/Output: [[66.0847842976749 -95] -28.9152157023251]
Test Case: 802 | Input/Output: [[72.91239982793783 59] 131.91239982793783]
Test Case: 803 | Input/Output: [[78.06303821259635 77] 155.06303821259635]
Test Case: 804 | Input/Output: [[33.07024628972525 74] 107.07024628972525]
Test Case: 805 | Input/Output: [[99.43351330608556 69] 168.43351330608556]
Test Case: 806 | Input/Output: [[6.126753091397916 -58] -51.873246908602084]
Test Case: 807 | Input/Output: [[73.01128163610255 -55] 18.011281636102552]
Test Case: 808 | Input/Output: [[40.16582745362672 -79] -38.83417254637328]
Test Case: 809 | Input/Output: [[26.510753789280784 8] 34.510753789280784]
Test Case: 810 | Input/Output: [[-20.91616124662403 21] 0.08383875337597146]
Test Case: 811 | Input/Output: [[-39.20217166787836 -67] -106.20217166787836]
Test Case: 812 | Input/Output: [[81.85692125961017 67] 148.85692125961017]
Test Case: 813 | Input/Output: [[-75.55122373643297 21] -54.55122373643297]
Test Case: 814 | Input/Output: [[6.749732288672391 14] 20.74973228867239]
Test Case: 815 | Input/Output: [[-45.083286771059704 71] 25.916713228940296]
Test Case: 816 | Input/Output: [[79.2240448271557 -66] 13.224044827155694]
Test Case: 817 | Input/Output: [[65.49269491424738 -7] 58.49269491424738]
Test Case: 818 | Input/Output: [[91.52880671910293 99] 190.52880671910293]
Test Case: 819 | Input/Output: [[-28.68194585262141 76] 47.31805414737859]
Test Case: 820 | Input/Output: [[-93.1090114805112 -66] -159.10901148051119]
Test Case: 821 | Input/Output: [[60.281942782210876 76] 136.28194278221088]
Test Case: 822 | Input/Output: [[46.7633231763366 -71] -24.2366768236634]
Test Case: 823 | Input/Output: [[94.54764771890632 32] 126.54764771890632]
Test Case: 824 | Input/Output: [[23.49072835330756 84] 107.49072835330756]
Test Case: 825 | Input/Output: [[98.32841551324148 16] 114.32841551324148]
Test Case: 826 | Input/Output: [[43.054032019975125 57] 100.05403201997512]
Test Case: 827 | Input/Output: [[-20.649111531749327 -66] -86.64911153174933]
Test Case: 828 | Input/Output: [[-45.43446809310743 22] -23.434468093107427]
Test Case: 829 | Input/Output: [[-17.50258509028319 17] -0.5025850902831905]
Test Case: 830 | Input/Output: [[-92.60728225267911 18] -74.60728225267911]
Test Case: 831 | Input/Output: [[0.2910282699982787 -93] -92.70897173000172]
Test Case: 832 | Input/Output: [[-51.67870418308165 84] 32.32129581691835]
Test Case: 833 | Input/Output: [[-57.14307227576603 -100] -157.14307227576603]
Test Case: 834 | Input/Output: [[61.124849536650544 -90] -28.875150463349456]
Test Case: 835 | Input/Output: [[17.43750329199341 -36] -18.56249670800659]
Test Case: 836 | Input/Output: [[39.242293738726886 68] 107.24229373872689]
Test Case: 837 | Input/Output: [[22.875173646157947 18] 40.87517364615795]
Test Case: 838 | Input/Output: [[-42.73981705805703 19] -23.739817058057028]
Test Case: 839 | Input/Output: [[10.622128873427812 41] 51.62212887342781]
Test Case: 840 | Input/Output: [[19.255624500622176 35] 54.255624500622176]
Test Case: 841 | Input/Output: [[1.5798578291990566 22] 23.579857829199057]
Test Case: 842 | Input/Output: [[-46.39190003920617 2] -44.39190003920617]
Test Case: 843 | Input/Output: [[89.5804177106155 41] 130.5804177106155]
Test Case: 844 | Input/Output: [[-98.94343127880599 59] -39.94343127880599]
Test Case: 845 | Input/Output: [[-54.46460811088727 -29] -83.46460811088727]
Test Case: 846 | Input/Output: [[90.85999204579738 11] 101.85999204579738]
Test Case: 847 | Input/Output: [[-9.726808460815434 77] 67.27319153918457]
Test Case: 848 | Input/Output: [[16.614957118222364 -67] -50.385042881777636]
Test Case: 849 | Input/Output: [[-31.974598669389394 66] 34.025401330610606]
Test Case: 850 | Input/Output: [[56.51662050311103 44] 100.51662050311103]
Test Case: 851 | Input/Output: [[-46.61033197008666 -7] -53.61033197008666]
Test Case: 852 | Input/Output: [[65.38885673012501 -87] -21.611143269874987]
Test Case: 853 | Input/Output: [[-96.09874931027416 45] -51.09874931027416]
Test Case: 854 | Input/Output: [[31.69421877330251 -86] -54.30578122669749]
Test Case: 855 | Input/Output: [[82.49957176222011 66] 148.4995717622201]
Test Case: 856 | Input/Output: [[-55.38541111524707 -16] -71.38541111524707]
Test Case: 857 | Input/Output: [[-61.45884880801358 30] -31.458848808013578]
Test Case: 858 | Input/Output: [[-7.763461538274257 100] 92.23653846172574]
Test Case: 859 | Input/Output: [[54.34292798235191 72] 126.34292798235191]
Test Case: 860 | Input/Output: [[-2.8042197092084393 93] 90.19578029079156]
Test Case: 861 | Input/Output: [[-79.24476229373539 84] 4.755237706264609]
Test Case: 862 | Input/Output: [[41.116074326391214 -35] 6.116074326391214]
Test Case: 863 | Input/Output: [[-74.79176592026498 59] -15.791765920264979]
Test Case: 864 | Input/Output: [[-49.02020035533256 75] 25.979799644667438]
Test Case: 865 | Input/Output: [[-13.769745593490029 61] 47.23025440650997]
Test Case: 866 | Input/Output: [[45.09116097650775 44] 89.09116097650775]
Test Case: 867 | Input/Output: [[-53.00868017395373 -81] -134.00868017395373]
Test Case: 868 | Input/Output: [[-15.435482054585322 -61] -76.43548205458532]
Test Case: 869 | Input/Output: [[-18.618813121535155 -99] -117.61881312153515]
Test Case: 870 | Input/Output: [[-71.28777787507757 -62] -133.28777787507755]
Test Case: 871 | Input/Output: [[-0.6850191668370371 78] 77.31498083316296]
Test Case: 872 | Input/Output: [[-35.09251419687746 72] 36.90748580312254]
Test Case: 873 | Input/Output: [[-34.01704427654097 -86] -120.01704427654097]
Test Case: 874 | Input/Output: [[-13.967948182546891 -72] -85.96794818254689]
Test Case: 875 | Input/Output: [[69.30429389182154 -57] 12.304293891821544]
Test Case: 876 | Input/Output: [[64.12539705336863 63] 127.12539705336863]
Test Case: 877 | Input/Output: [[5.96362573764597 47] 52.96362573764597]
Test Case: 878 | Input/Output: [[-86.33108344562552 -100] -186.33108344562552]
Test Case: 879 | Input/Output: [[38.912238922164335 -20] 18.912238922164335]
Test Case: 880 | Input/Output: [[19.990642739472378 -17] 2.990642739472378]
Test Case: 881 | Input/Output: [[-95.30744516557685 6] -89.30744516557685]
Test Case: 882 | Input/Output: [[-89.80980382780233 14] -75.80980382780233]
Test Case: 883 | Input/Output: [[-61.54285463989493 69] 7.4571453601050735]
Test Case: 884 | Input/Output: [[-60.29829724463755 -98] -158.29829724463755]
Test Case: 885 | Input/Output: [[-7.111721792326705 25] 17.888278207673295]
Test Case: 886 | Input/Output: [[12.327268524673869 47] 59.32726852467387]
Test Case: 887 | Input/Output: [[-77.97856542428667 50] -27.97856542428667]
Test Case: 888 | Input/Output: [[86.25686085633075 100] 186.25686085633075]
Test Case: 889 | Input/Output: [[-71.30606970478779 65] -6.306069704787788]
Test Case: 890 | Input/Output: [[-17.592455585356873 56] 38.40754441464313]
Test Case: 891 | Input/Output: [[-43.54273851826842 -73] -116.54273851826842]
Test Case: 892 | Input/Output: [[-58.25868937326022 -94] -152.2586893732602]
Test Case: 893 | Input/Output: [[93.70183080652382 77] 170.70183080652382]
Test Case: 894 | Input/Output: [[33.50670140591029 52] 85.50670140591029]
Test Case: 895 | Input/Output: [[35.187076203077254 -92] -56.812923796922746]
Test Case: 896 | Input/Output: [[-18.79348978293723 65] 46.20651021706277]
Test Case: 897 | Input/Output: [[-23.027605200441073 0] -23.027605200441073]
Test Case: 898 | Input/Output: [[-12.811806015180167 70] 57.18819398481983]
Test Case: 899 | Input/Output: [[-60.03000810790642 -7] -67.03000810790641]
Test Case: 900 | Input/Output: [[14.253310835468142 -94] -79.74668916453186]
Test Case: 901 | Input/Output: [[-76.47347941990665 -83] -159.47347941990665]
Test Case: 902 | Input/Output: [[-54.04844056586633 6] -48.04844056586633]
Test Case: 903 | Input/Output: [[-30.626936118580034 46] 15.373063881419966]
Test Case: 904 | Input/Output: [[78.08587822702162 20] 98.08587822702162]
Test Case: 905 | Input/Output: [[80.29228318303879 -33] 47.29228318303879]
Test Case: 906 | Input/Output: [[5.550868504607024 44] 49.550868504607024]
Test Case: 907 | Input/Output: [[-69.1236620124176 -70] -139.12366201241758]
Test Case: 908 | Input/Output: [[-6.345115157504637 -19] -25.345115157504637]
Test Case: 909 | Input/Output: [[-46.369406984877195 -61] -107.3694069848772]
Test Case: 910 | Input/Output: [[69.62500518035392 -49] 20.625005180353924]
Test Case: 911 | Input/Output: [[36.70172142168036 54] 90.70172142168036]
Test Case: 912 | Input/Output: [[88.32149863447498 -47] 41.32149863447498]
Test Case: 913 | Input/Output: [[44.379393658837614 -31] 13.379393658837614]
Test Case: 914 | Input/Output: [[81.60389100462606 -10] 71.60389100462606]
Test Case: 915 | Input/Output: [[-71.41979443441599 79] 7.580205565584009]
Test Case: 916 | Input/Output: [[35.58546151948289 18] 53.58546151948289]
Test Case: 917 | Input/Output: [[-83.34416605265878 -100] -183.34416605265878]
Test Case: 918 | Input/Output: [[-69.68472988360519 -70] -139.6847298836052]
Test Case: 919 | Input/Output: [[-72.61466731750818 91] 18.38533268249182]
Test Case: 920 | Input/Output: [[96.66298422987632 -39] 57.662984229876315]
Test Case: 921 | Input/Output: [[45.91127302507067 73] 118.91127302507067]
Test Case: 922 | Input/Output: [[38.83231309068404 -23] 15.832313090684039]
Test Case: 923 | Input/Output: [[67.42614886038461 -28] 39.426148860384615]
Test Case: 924 | Input/Output: [[30.785552858183394 10] 40.785552858183394]
Test Case: 925 | Input/Output: [[-53.52749063150468 -66] -119.52749063150469]
Test Case: 926 | Input/Output: [[70.57016731853975 -57] 13.570167318539745]
Test Case: 927 | Input/Output: [[68.86465301989097 86] 154.86465301989097]
Test Case: 928 | Input/Output: [[-37.96001005192904 50] 12.03998994807096]
Test Case: 929 | Input/Output: [[-95.6017336030299 87] -8.6017336030299]
Test Case: 930 | Input/Output: [[-79.86413774615181 -71] -150.8641377461518]
Test Case: 931 | Input/Output: [[43.98973968265523 90] 133.98973968265523]
Test Case: 932 | Input/Output: [[48.14680152259572 -28] 20.146801522595723]
Test Case: 933 | Input/Output: [[-68.74018304912394 -28] -96.74018304912394]
Test Case: 934 | Input/Output: [[-89.83926152604012 92] 2.1607384739598814]
Test Case: 935 | Input/Output: [[-55.63499955199389 4] -51.63499955199389]
Test Case: 936 | Input/Output: [[40.44711138634307 -12] 28.447111386343067]
Test Case: 937 | Input/Output: [[86.16424805278439 50] 136.1642480527844]
Test Case: 938 | Input/Output: [[-2.8917158236592115 -18] -20.89171582365921]
Test Case: 939 | Input/Output: [[-38.622536668806774 -40] -78.62253666880677]
Test Case: 940 | Input/Output: [[6.509985369134142 -17] -10.490014630865858]
Test Case: 941 | Input/Output: [[65.60541585394105 91] 156.60541585394105]
Test Case: 942 | Input/Output: [[35.39648776039931 13] 48.39648776039931]
Test Case: 943 | Input/Output: [[52.71109249316552 -14] 38.71109249316552]
Test Case: 944 | Input/Output: [[58.89380906545043 61] 119.89380906545043]
Test Case: 945 | Input/Output: [[-39.4713882885912 3] -36.4713882885912]
Test Case: 946 | Input/Output: [[-49.794531659058826 77] 27.205468340941174]
Test Case: 947 | Input/Output: [[70.58952945898497 71] 141.58952945898497]
Test Case: 948 | Input/Output: [[5.785889672351871 -5] 0.7858896723518711]
Test Case: 949 | Input/Output: [[-92.93855677670923 -59] -151.93855677670922]
Test Case: 950 | Input/Output: [[-35.1170719386881 17] -18.1170719386881]
Test Case: 951 | Input/Output: [[68.60191647819832 18] 86.60191647819832]
Test Case: 952 | Input/Output: [[22.913464006539158 -8] 14.913464006539158]
Test Case: 953 | Input/Output: [[36.669925486847035 31] 67.66992548684703]
Test Case: 954 | Input/Output: [[-10.480859721821616 -18] -28.480859721821616]
Test Case: 955 | Input/Output: [[-16.098652019190112 -92] -108.09865201919011]
Test Case: 956 | Input/Output: [[6.19264757550873 -36] -29.80735242449127]
Test Case: 957 | Input/Output: [[8.98664068055659 -69] -60.01335931944341]
Test Case: 958 | Input/Output: [[73.8470235819232 0] 73.8470235819232]
Test Case: 959 | Input/Output: [[15.264349660232597 -72] -56.7356503397674]
Test Case: 960 | Input/Output: [[30.052311924544313 59] 89.05231192454431]
Test Case: 961 | Input/Output: [[-6.531448587451067 26] 19.468551412548933]
Test Case: 962 | Input/Output: [[59.83647210878269 -49] 10.836472108782687]
Test Case: 963 | Input/Output: [[9.924839075715354 -73] -63.075160924284646]
Test Case: 964 | Input/Output: [[-35.10066794400231 60] 24.89933205599769]
Test Case: 965 | Input/Output: [[69.22941782305051 -90] -20.77058217694949]
Test Case: 966 | Input/Output: [[-26.87811444145629 -13] -39.87811444145629]
Test Case: 967 | Input/Output: [[24.153946895026152 -32] -7.846053104973848]
Test Case: 968 | Input/Output: [[-24.427898024091533 -11] -35.42789802409153]
Test Case: 969 | Input/Output: [[-8.011725297411502 -3] -11.011725297411502]
Test Case: 970 | Input/Output: [[-71.10629780684887 -62] -133.1062978068489]
Test Case: 971 | Input/Output: [[30.02384034278768 -10] 20.02384034278768]
Test Case: 972 | Input/Output: [[65.94027570444351 33] 98.94027570444351]
Test Case: 973 | Input/Output: [[79.1626248646638 -78] 1.1626248646637976]
Test Case: 974 | Input/Output: [[-12.170192201436763 12] -0.1701922014367625]
Test Case: 975 | Input/Output: [[73.71686717065381 -28] 45.71686717065381]
Test Case: 976 | Input/Output: [[48.990529913778175 -44] 4.990529913778175]
Test Case: 977 | Input/Output: [[74.65859950344003 1] 75.65859950344003]
Test Case: 978 | Input/Output: [[87.46164182845112 17] 104.46164182845112]
Test Case: 979 | Input/Output: [[-42.75771989396608 -94] -136.75771989396608]
Test Case: 980 | Input/Output: [[-64.28063992719335 -74] -138.28063992719336]
Test Case: 981 | Input/Output: [[60.47671707706078 -82] -21.523282922939217]
Test Case: 982 | Input/Output: [[-86.74980962873377 35] -51.74980962873377]
Test Case: 983 | Input/Output: [[-84.25021172854194 -50] -134.25021172854196]
Test Case: 984 | Input/Output: [[-95.18940585814806 4] -91.18940585814806]
Test Case: 985 | Input/Output: [[18.663284474891057 -73] -54.33671552510894]
Test Case: 986 | Input/Output: [[8.327901918206052 60] 68.32790191820605]
Test Case: 987 | Input/Output: [[-22.307631560933487 -90] -112.30763156093349]
Test Case: 988 | Input/Output: [[-4.626130548950357 96] 91.37386945104964]
Test Case: 989 | Input/Output: [[61.02016331835702 68] 129.02016331835702]
Test Case: 990 | Input/Output: [[44.70995608618861 69] 113.70995608618861]
Test Case: 991 | Input/Output: [[-62.45451358708134 -16] -78.45451358708134]
Test Case: 992 | Input/Output: [[-70.68227273572126 -85] -155.68227273572126]
Test Case: 993 | Input/Output: [[-3.959689588993129 44] 40.04031041100687]
Test Case: 994 | Input/Output: [[-10.787666240747626 -16] -26.787666240747626]
Test Case: 995 | Input/Output: [[-32.19249863452606 -44] -76.19249863452606]
Test Case: 996 | Input/Output: [[38.75855865170436 -24] 14.758558651704362]
Test Case: 997 | Input/Output: [[-20.896317545967662 -26] -46.89631754596766]
Test Case: 998 | Input/Output: [[-39.42392612479468 48] 8.576073875205317]
Test Case: 999 | Input/Output: [[-75.64680110698333 -24] -99.64680110698333]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 94 -75 59 62 39 -124 -41 103 -2 -114 -65 -12 118 -108 -65 -7
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -27.3069380196
Correct output: -72.4601683407 | Program output: 20.5398316593 
Correct output: 40.4089903884  | Program output: 43.4089903884 
Correct output: -123.8848837001 | Program output: -94.8848837001
Correct output: -5.5572409402  | Program output: 37.4427590598 
Correct output: 132.8237835559 | Program output: 68.8237835559 
Correct output: -23.655607388  | Program output: -96.655607388 
Correct output: 85.8723285783  | Program output: 49.8723285783 
Correct output: 7.3833649895   | Program output: -56.6166350105
Correct output: 66.4021182413  | Program output: 21.4021182413 
Correct output: -23.7801401349 | Program output: -19.7801401349
Correct output: -167.2900974766 | Program output: -72.2900974766
Correct output: 20.9384936831  | Program output: 23.9384936831 
Correct output: 37.1112256226  | Program output: -2.8887743774 
Correct output: 119.9031170612 | Program output: 77.9031170612 
Correct output: 20.2024981978  | Program output: -11.7975018022
Correct output: 1.7569467681   | Program output: 60.7569467681 
Correct output: -90.6328406884 | Program output: 8.3671593116  
Correct output: -160.4267163377 | Program output: -75.4267163377
Correct output: -111.361734735 | Program output: -68.361734735 
Correct output: -6.0571083203  | Program output: -51.0571083203
Correct output: -112.796431795 | Program output: -64.796431795 
Correct output: -148.6073793052 | Program output: -78.6073793052
Correct output: 142.6041620334 | Program output: 74.6041620334 
Correct output: -89.5489990384 | Program output: -32.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [85.0 3 93.0 13 3.0 1 29.0 3 43.0 11 64.0 3 73.0 2 36.0 2 64.0 12 45.0 2 4.0 2 95.0 3 3.0 1 40.0 12 42.0 3 32.0 13 59.0 2 99.0 13 85.0 3 43.0 3 45.0 2 48.0 3 70.0 2 68.0 2 57.0 2]
Total: 1443.0
Mean: 28.86
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 17873.843417499997
Median total errors in population: 25342.0
Error averages by case: (711.6612827000001 13.984 702.684479299999 13.847 691.6927102999992 12.357 712.3725859999981 13.955 689.4198552999995 13.001 711.3141981000018 13.469 694.3298066000013 12.49 698.5699992000009 12.501 688.9451621000001 12.667 693.9591281999985 12.457 686.9741874999978 13.173 726.4937044999988 14.003 687.1118131000011 12.347 687.1342051000005 13.463 708.127748499999 13.28 685.9082845000006 13.108 690.6511702000005 11.738 704.6797812000009 13.804 724.3975881999991 14.029 710.5858495000011 13.375 686.9133288999981 12.443 710.4957983999989 13.284 720.6726056999981 14.033 714.1210151999975 13.307 705.3331291999999 13.179)
Error minima by case: (8.3069 3 0.9911 9 3.0 1 9.8066 2 0.571 6 15.1788 3 1.3444 2 0.4832 2 1.6166 8 1.2469 2 1.2199 2 6.2901 3 0.9385 1 0.0482 9 19.9417 2 0.7975 8 0.0036 1 0.6328 9 0.5733 3 4.1934 3 0.571 2 9.1934 2 6.6074 2 5.3984 2 0.451 2)
Average genome size in population (length): 49.626
Average program size in population (points): 50.626
Average percent parens in population: 0.040
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.307
Error (vector) diversity:			 0.335
Behavioral diversity:				 0.355
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1245050
--- Timings ---
Current time: 1529615178383 milliseconds
Total Time:           4.1 seconds
Initialization:       0.1 seconds,  2.7%
Reproduction:         0.5 seconds, 13.1%
Fitness Testing:      3.4 seconds, 84.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -27.3069380196
Correct output: -72.4601683407 | Program output: 20.5398316593 
Correct output: 40.4089903884  | Program output: 43.4089903884 
Correct output: -123.8848837001 | Program output: -94.8848837001
Correct output: -5.5572409402  | Program output: 37.4427590598 
Correct output: 132.8237835559 | Program output: 68.8237835559 
Correct output: -23.655607388  | Program output: -96.655607388 
Correct output: 85.8723285783  | Program output: 49.8723285783 
Correct output: 7.3833649895   | Program output: -56.6166350105
Correct output: 66.4021182413  | Program output: 21.4021182413 
Correct output: -23.7801401349 | Program output: -19.7801401349
Correct output: -167.2900974766 | Program output: -72.2900974766
Correct output: 20.9384936831  | Program output: 23.9384936831 
Correct output: 37.1112256226  | Program output: -2.8887743774 
Correct output: 119.9031170612 | Program output: 77.9031170612 
Correct output: 20.2024981978  | Program output: -11.7975018022
Correct output: 1.7569467681   | Program output: 60.7569467681 
Correct output: -90.6328406884 | Program output: 8.3671593116  
Correct output: -160.4267163377 | Program output: -75.4267163377
Correct output: -111.361734735 | Program output: -68.361734735 
Correct output: -6.0571083203  | Program output: -51.0571083203
Correct output: -112.796431795 | Program output: -64.796431795 
Correct output: -148.6073793052 | Program output: -78.6073793052
Correct output: 142.6041620334 | Program output: 74.6041620334 
Correct output: -89.5489990384 | Program output: -32.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [85.0 3 93.0 13 3.0 1 29.0 3 43.0 11 64.0 3 73.0 2 36.0 2 64.0 12 45.0 2 4.0 2 95.0 3 3.0 1 40.0 12 42.0 3 32.0 13 59.0 2 99.0 13 85.0 3 43.0 3 45.0 2 48.0 3 70.0 2 68.0 2 57.0 2]
Total: 1443.0
Mean: 28.86
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 6347.263538400013
Median total errors in population: 2200.5698
Error averages by case: (263.6300049999988 10.999 248.61419569999998 12.649 216.2880494000018 9.629 261.0274382000012 10.836 215.00220499999986 11.646 266.5713656000027 11.068 235.76168939999934 9.89 236.10379969999815 9.879 220.30323660000002 12.051 228.60881360000198 9.799 206.5899252000011 10.377 293.26245810000165 11.038 208.10092719999878 9.647 212.89998620000043 12.66 256.7692730999989 10.655 208.30465850000022 12.131 225.1012609000005 9.336 254.0656681999998 12.392 288.77655030000227 11.187 258.6186960000013 10.683 212.63454390000118 9.848 259.00497909999865 10.488 279.9874715000006 11.132 272.83804070000053 10.772 247.39830129999962 10.208)
Error minima by case: (8.3069 3 1.5398 8 0.6639 1 6.568 2 0.571 6 32.8623 3 1.3444 2 0.4832 2 1.6166 8 1.2469 2 1.2199 2 6.2901 3 1.9385 1 0.0482 9 10.3863 2 0.7975 8 0.0036 1 0.6328 9 0.5733 3 4.1934 3 0.571 2 9.1934 2 6.6074 2 37.3958 2 0.451 2)
Average genome size in population (length): 56.906
Average program size in population (points): 57.906
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.519
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.271
Error (vector) diversity:			 0.284
Behavioral diversity:				 0.301
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2672825
--- Timings ---
Current time: 1529615182303 milliseconds
Total Time:           8.1 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         2.5 seconds, 31.1%
Fitness Testing:      5.0 seconds, 61.4%
Report:               0.5 seconds,  6.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -27.3069380196
Correct output: -72.4601683407 | Program output: 20.5398316593 
Correct output: 40.4089903884  | Program output: 43.4089903884 
Correct output: -123.8848837001 | Program output: -94.8848837001
Correct output: -5.5572409402  | Program output: 37.4427590598 
Correct output: 132.8237835559 | Program output: 68.8237835559 
Correct output: -23.655607388  | Program output: -96.655607388 
Correct output: 85.8723285783  | Program output: 49.8723285783 
Correct output: 7.3833649895   | Program output: -56.6166350105
Correct output: 66.4021182413  | Program output: 21.4021182413 
Correct output: -23.7801401349 | Program output: -19.7801401349
Correct output: -167.2900974766 | Program output: -72.2900974766
Correct output: 20.9384936831  | Program output: 23.9384936831 
Correct output: 37.1112256226  | Program output: -2.8887743774 
Correct output: 119.9031170612 | Program output: 77.9031170612 
Correct output: 20.2024981978  | Program output: -11.7975018022
Correct output: 1.7569467681   | Program output: 60.7569467681 
Correct output: -90.6328406884 | Program output: 8.3671593116  
Correct output: -160.4267163377 | Program output: -75.4267163377
Correct output: -111.361734735 | Program output: -68.361734735 
Correct output: -6.0571083203  | Program output: -51.0571083203
Correct output: -112.796431795 | Program output: -64.796431795 
Correct output: -148.6073793052 | Program output: -78.6073793052
Correct output: 142.6041620334 | Program output: 74.6041620334 
Correct output: -89.5489990384 | Program output: -32.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [85.0 3 93.0 13 3.0 1 29.0 3 43.0 11 64.0 3 73.0 2 36.0 2 64.0 12 45.0 2 4.0 2 95.0 3 3.0 1 40.0 12 42.0 3 32.0 13 59.0 2 99.0 13 85.0 3 43.0 3 45.0 2 48.0 3 70.0 2 68.0 2 57.0 2]
Total: 1443.0
Mean: 28.86
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 4703.498835700007
Median total errors in population: 1456.5
Error averages by case: (203.2041563999997 6.284 207.29897579999988 13.098 143.87729670000016 4.568 171.66665290000034 5.61 171.81583419999984 11.551 190.88531980000045 6.162 199.01266029999977 5.329 167.08284159999977 5.073 186.3746610000002 12.545 169.53205550000052 5.239 141.88002080000038 5.573 217.17401530000058 6.239 140.84202480000002 4.601 162.65091569999973 12.772 175.88748099999967 6.01 157.62619909999984 12.547 186.21615410000004 4.511 209.65082840000008 12.458 210.15752320000055 6.41 178.30818060000018 6.193 171.8408682000005 5.473 181.19721049999984 5.98 199.44806850000023 6.401 194.80900380000023 6.102 182.98088749999985 5.35)
Error minima by case: (16.3069 3 10.4602 9 2.591 1 9.8066 2 4.1934 7 6.8238 3 6.6556 2 2.7514 2 4.6166 9 20.4021 2 4.0 2 24.7099 3 2.0615 1 0.1112 9 21.0969 2 0.7975 8 0.1048 1 7.3672 9 11.5733 3 4.1934 3 4.5271 2 9.1934 2 6.6074 2 8.6042 2 18.1934 2)
Average genome size in population (length): 49.332
Average program size in population (points): 50.332
Average percent parens in population: 0.025
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9935
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.101
Error (vector) diversity:			 0.109
Behavioral diversity:				 0.117
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3909745
--- Timings ---
Current time: 1529615185988 milliseconds
Total Time:          11.7 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.1 seconds, 34.8%
Fitness Testing:      6.7 seconds, 57.0%
Report:               0.9 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 54422.0
Test mean error for best: 27.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -27.3069380196
Correct output: -72.4601683407 | Program output: 20.5398316593 
Correct output: 40.4089903884  | Program output: 43.4089903884 
Correct output: -123.8848837001 | Program output: -94.8848837001
Correct output: -5.5572409402  | Program output: 37.4427590598 
Correct output: 132.8237835559 | Program output: 68.8237835559 
Correct output: -23.655607388  | Program output: -96.655607388 
Correct output: 85.8723285783  | Program output: 49.8723285783 
Correct output: 7.3833649895   | Program output: -56.6166350105
Correct output: 66.4021182413  | Program output: 21.4021182413 
Correct output: -23.7801401349 | Program output: -19.7801401349
Correct output: -167.2900974766 | Program output: -72.2900974766
Correct output: 20.9384936831  | Program output: 23.9384936831 
Correct output: 37.1112256226  | Program output: -2.8887743774 
Correct output: 119.9031170612 | Program output: 77.9031170612 
Correct output: 20.2024981978  | Program output: -11.7975018022
Correct output: 1.7569467681   | Program output: 60.7569467681 
Correct output: -90.6328406884 | Program output: 8.3671593116  
Correct output: -160.4267163377 | Program output: -75.4267163377
Correct output: -111.361734735 | Program output: -68.361734735 
Correct output: -6.0571083203  | Program output: -51.0571083203
Correct output: -112.796431795 | Program output: -64.796431795 
Correct output: -148.6073793052 | Program output: -78.6073793052
Correct output: 142.6041620334 | Program output: 74.6041620334 
Correct output: -89.5489990384 | Program output: -32.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_dup_items integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [85.0 3 93.0 13 3.0 1 29.0 3 43.0 11 64.0 3 73.0 2 36.0 2 64.0 12 45.0 2 4.0 2 95.0 3 3.0 1 40.0 12 42.0 3 32.0 13 59.0 2 99.0 13 85.0 3 43.0 3 45.0 2 48.0 3 70.0 2 68.0 2 57.0 2]
Total: 1443.0
Mean: 28.86
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 4070.0683757000006
Median total errors in population: 1446.0
Error averages by case: (184.86119839999998 4.411 191.2025287 13.343 113.424045 2.458 136.6296715 3.694 147.54687790000003 11.458 167.69771640000002 4.344 173.874673 3.391 142.53851930000005 3.353 165.9004611 12.423 150.06063800000004 3.42 113.8074532 3.477 194.3046403 4.394 113.13419620000002 2.488 145.26217540000002 12.461 148.33418559999996 4.31 138.03880850000002 12.542 161.46111439999999 2.58 196.0676243 12.583 185.57891890000002 4.413 148.54380710000004 4.342 149.2473994 3.446 152.8802794 4.324 172.425271 4.314 171.34690240000003 4.165 160.3092703 3.456)
Error minima by case: (26.3069 3 5.6881 10 3.0 1 29.0 2 4.8969 9 3.5735 3 7.4791 2 24.4265 2 3.5735 9 15.4265 2 4.0 2 71.2901 3 3.0 1 1.8888 9 18.4265 2 8.405 9 1.2811 1 9.3672 9 74.4267 3 43.0 3 5.3577 2 46.0243 2 70.0 2 7.5735 2 22.7769 2)
Average genome size in population (length): 45.264
Average program size in population (points): 46.264
Average percent parens in population: 0.025
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.4755
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 72
Genome diversity (% unique Plush genomes):	 0.594
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 72
Syntactic diversity (% unique Push programs):	 0.594
Total error diversity:				 0.042
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5042645
--- Timings ---
Current time: 1529615190342 milliseconds
Total Time:          16.2 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.4 seconds, 39.4%
Fitness Testing:      8.4 seconds, 51.6%
Report:               1.3 seconds,  8.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 54449.0
Test mean error for best: 27.22450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -28.3069380196
Correct output: -72.4601683407 | Program output: 19.5398316593 
Correct output: 40.4089903884  | Program output: 42.4089903884 
Correct output: -123.8848837001 | Program output: -95.8848837001
Correct output: -5.5572409402  | Program output: 36.4427590598 
Correct output: 132.8237835559 | Program output: 67.8237835559 
Correct output: -23.655607388  | Program output: -97.655607388 
Correct output: 85.8723285783  | Program output: 48.8723285783 
Correct output: 7.3833649895   | Program output: -57.6166350105
Correct output: 66.4021182413  | Program output: 20.4021182413 
Correct output: -23.7801401349 | Program output: -20.7801401349
Correct output: -167.2900974766 | Program output: -73.2900974766
Correct output: 20.9384936831  | Program output: 22.9384936831 
Correct output: 37.1112256226  | Program output: -3.8887743774 
Correct output: 119.9031170612 | Program output: 76.9031170612 
Correct output: 20.2024981978  | Program output: -12.7975018022
Correct output: 1.7569467681   | Program output: 59.7569467681 
Correct output: -90.6328406884 | Program output: 7.3671593116  
Correct output: -160.4267163377 | Program output: -76.4267163377
Correct output: -111.361734735 | Program output: -69.361734735 
Correct output: -6.0571083203  | Program output: -52.0571083203
Correct output: -112.796431795 | Program output: -65.796431795 
Correct output: -148.6073793052 | Program output: -79.6073793052
Correct output: 142.6041620334 | Program output: 73.6041620334 
Correct output: -89.5489990384 | Program output: -33.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [84.0 3 92.0 13 2.0 1 28.0 3 42.0 11 65.0 3 74.0 2 37.0 2 65.0 11 46.0 2 3.0 1 94.0 3 2.0 1 41.0 12 43.0 3 33.0 13 58.0 2 98.0 13 84.0 2 42.0 3 46.0 2 47.0 3 69.0 3 69.0 3 56.0 2]
Total: 1437.0
Mean: 28.74
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 4023.009384800001
Median total errors in population: 1443.0
Error averages by case: (183.96243479999998 4.293 187.75296649999996 13.357 113.1500891 2.373 136.641624 4.044 148.307999 11.466 167.1103262 4.237 174.4110142 3.291 142.07671820000002 3.26 166.3573576 12.43 143.6520702 3.321 107.10851980000001 3.385 195.24562080000004 4.295 108.5838595 2.346 134.69514599999997 12.454 147.5869731 4.206 128.22420780000002 13.016 162.4254004 2.963 189.25214820000002 13.065 186.3655882 4.317 148.2634263 4.251 149.56053250000002 3.346 152.7393775 4.237 173.03339620000003 3.729 170.7054374 3.59 161.1871513 3.338)
Error minima by case: (84.0 3 71.4602 9 2.0 1 28.0 2 4.5572 10 63.0 3 17.5739 2 35.0 2 5.3834 9 44.0 2 3.0 1 94.0 3 2.0 1 32.655 9 41.0 3 18.2025 9 0.2431 1 89.6328 9 84.0 2 42.0 3 5.0571 2 47.0 3 69.0 2 67.0 2 56.0 2)
Average genome size in population (length): 34.982
Average program size in population (points): 35.982
Average percent parens in population: 0.030
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.020125
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 222
Genome diversity (% unique Plush genomes):	 0.518
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 222
Syntactic diversity (% unique Push programs):	 0.518
Total error diversity:				 0.026
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5918970
--- Timings ---
Current time: 1529615193518 milliseconds
Total Time:          19.4 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.8 seconds, 40.1%
Fitness Testing:      9.8 seconds, 50.7%
Report:               1.7 seconds,  8.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 54412.0
Test mean error for best: 27.20600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -29.3069380196
Correct output: -72.4601683407 | Program output: 18.5398316593 
Correct output: 40.4089903884  | Program output: 41.4089903884 
Correct output: -123.8848837001 | Program output: -96.8848837001
Correct output: -5.5572409402  | Program output: 35.4427590598 
Correct output: 132.8237835559 | Program output: 66.8237835559 
Correct output: -23.655607388  | Program output: -98.655607388 
Correct output: 85.8723285783  | Program output: 47.8723285783 
Correct output: 7.3833649895   | Program output: -58.6166350105
Correct output: 66.4021182413  | Program output: 19.4021182413 
Correct output: -23.7801401349 | Program output: -21.7801401349
Correct output: -167.2900974766 | Program output: -74.2900974766
Correct output: 20.9384936831  | Program output: 21.9384936831 
Correct output: 37.1112256226  | Program output: -4.8887743774 
Correct output: 119.9031170612 | Program output: 75.9031170612 
Correct output: 20.2024981978  | Program output: -13.7975018022
Correct output: 1.7569467681   | Program output: 58.7569467681 
Correct output: -90.6328406884 | Program output: 6.3671593116  
Correct output: -160.4267163377 | Program output: -77.4267163377
Correct output: -111.361734735 | Program output: -70.361734735 
Correct output: -6.0571083203  | Program output: -53.0571083203
Correct output: -112.796431795 | Program output: -66.796431795 
Correct output: -148.6073793052 | Program output: -80.6073793052
Correct output: 142.6041620334 | Program output: 72.6041620334 
Correct output: -89.5489990384 | Program output: -34.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [83.0 3 91.0 13 1.0 1 27.0 3 41.0 10 66.0 3 75.0 2 38.0 2 66.0 12 47.0 2 2.0 1 93.0 3 1.0 1 42.0 12 44.0 3 34.0 13 57.0 2 97.0 13 83.0 3 41.0 3 47.0 2 46.0 3 68.0 3 70.0 2 55.0 2]
Total: 1432.0
Mean: 28.64
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2850.4436308000004
Median total errors in population: 1443.0
Error averages by case: (139.1435667 3.705 144.43860909999998 13.217 62.0948134 1.732 87.6284664 3.703 99.33831629999999 11.271 119.6721868 3.675 128.3822047 2.723 93.22965930000001 2.689 119.9815612 12.265 99.2970977 2.734 61.347376399999995 2.726 149.5532179 3.706 60.4003836 1.73 92.87661739999999 12.289 99.01879120000001 3.657 86.5062567 13.164 114.31782310000001 2.65 148.7190854 13.176 140.1725536 3.686 100.6580824 3.688 102.185331 2.759 105.3388066 3.681 126.0847915 2.835 123.4665097 2.766 113.6345227 2.73)
Error minima by case: (65.1185 3 25.2717 9 1.0 1 27.0 2 5.2342 9 63.0 3 21.6689 2 35.0 2 6.3857 9 44.0 2 2.0 1 93.0 3 1.0 1 34.5438 9 41.0 3 19.235 9 0.0558 1 43.4444 9 83.0 2 41.0 3 5.0446 2 46.0 3 68.0 2 67.0 2 42.3606 2)
Average genome size in population (length): 29.835
Average program size in population (points): 30.835
Average percent parens in population: 0.033
Minimum age in population: 5.5
Maximum age in population: 9.1875
Average age in population: 7.5471875
Median age in population: 7.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 231
Genome diversity (% unique Plush genomes):	 0.492
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 231
Syntactic diversity (% unique Push programs):	 0.492
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6666555
--- Timings ---
Current time: 1529615197129 milliseconds
Total Time:          22.9 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.5 seconds, 41.5%
Fitness Testing:     11.3 seconds, 49.3%
Report:               2.0 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 54412.0
Test mean error for best: 27.20600
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -29.3069380196
Correct output: -72.4601683407 | Program output: 18.5398316593 
Correct output: 40.4089903884  | Program output: 41.4089903884 
Correct output: -123.8848837001 | Program output: -96.8848837001
Correct output: -5.5572409402  | Program output: 35.4427590598 
Correct output: 132.8237835559 | Program output: 66.8237835559 
Correct output: -23.655607388  | Program output: -98.655607388 
Correct output: 85.8723285783  | Program output: 47.8723285783 
Correct output: 7.3833649895   | Program output: -58.6166350105
Correct output: 66.4021182413  | Program output: 19.4021182413 
Correct output: -23.7801401349 | Program output: -21.7801401349
Correct output: -167.2900974766 | Program output: -74.2900974766
Correct output: 20.9384936831  | Program output: 21.9384936831 
Correct output: 37.1112256226  | Program output: -4.8887743774 
Correct output: 119.9031170612 | Program output: 75.9031170612 
Correct output: 20.2024981978  | Program output: -13.7975018022
Correct output: 1.7569467681   | Program output: 58.7569467681 
Correct output: -90.6328406884 | Program output: 6.3671593116  
Correct output: -160.4267163377 | Program output: -77.4267163377
Correct output: -111.361734735 | Program output: -70.361734735 
Correct output: -6.0571083203  | Program output: -53.0571083203
Correct output: -112.796431795 | Program output: -66.796431795 
Correct output: -148.6073793052 | Program output: -80.6073793052
Correct output: 142.6041620334 | Program output: 72.6041620334 
Correct output: -89.5489990384 | Program output: -34.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_add} {:instruction tag_float_194} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dup float_dup_times print_float integer_add tag_float_194 float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [83.0 3 91.0 13 1.0 1 27.0 3 41.0 10 66.0 3 75.0 2 38.0 2 66.0 12 47.0 2 2.0 1 93.0 3 1.0 1 42.0 12 44.0 3 34.0 13 57.0 2 97.0 13 83.0 3 41.0 3 47.0 2 46.0 3 68.0 3 70.0 2 55.0 2]
Total: 1432.0
Mean: 28.64
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3207.7272689000006
Median total errors in population: 1443.0
Error averages by case: (153.0964752 3.878 158.3723935 13.22 78.7692958 1.918 102.87961050000001 3.881 115.5013141 11.278 133.6716913 3.831 141.6108388 2.866 107.6867746 2.844 133.2955331 12.1 111.93346760000001 2.884 75.26667540000001 2.759 163.794323 3.883 75.86086640000002 1.907 104.4716544 12.285 113.32862309999999 3.811 97.48806289999999 13.143 130.2343019 2.8 161.47082230000004 13.187 154.5648651 3.73 115.73492449999999 3.844 115.7500564 2.901 120.34497990000001 3.834 140.71324719999998 3.169 137.3928128 3.075 128.5646591 2.901)
Error minima by case: (65.3069 3 25.4602 10 1.0 1 27.0 2 5.2932 9 63.0 3 22.8179 2 35.0 2 3.3625 10 44.0 2 2.0 1 93.0 3 1.0 1 32.655 9 41.0 3 16.1816 9 2.2639 1 43.6328 10 83.0 2 41.0 3 6.0355 2 46.0 3 68.0 2 67.0 2 42.549 2)
Average genome size in population (length): 29.924
Average program size in population (points): 30.924
Average percent parens in population: 0.033
Minimum age in population: 6.5
Maximum age in population: 10.78125
Average age in population: 9.0725625
Median age in population: 9.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 138
Genome diversity (% unique Plush genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 138
Syntactic diversity (% unique Push programs):	 0.569
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7416005
--- Timings ---
Current time: 1529615200451 milliseconds
Total Time:          26.3 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.0 seconds, 41.7%
Fitness Testing:     12.8 seconds, 48.6%
Report:               2.4 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_mod})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_pop float_add float_div in1 integer_inc integer_fromfloat float_mod)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3067.3732030000006
Median total errors in population: 1437.0
Error averages by case: (147.35531110000002 3.851 149.48176519999998 13.182 71.4923381 1.896 98.05201959999998 3.85 108.0360651 11.198 129.94679510000003 3.81 139.0535181 2.851 103.70870490000001 2.831 130.68665250000004 11.633 105.55824620000003 2.87 67.35912959999999 2.245 159.16798740000002 3.857 66.86647509999999 1.864 98.25104269999999 12.246 109.5447595 3.793 91.4308316 13.119 122.77286869999999 2.796 151.27694820000002 13.153 149.9038814 3.267 110.81853849999997 3.823 113.1710901 2.872 115.4376449 3.811 135.99971399999998 3.608 133.72513659999998 3.483 123.49973879999999 2.867)
Error minima by case: (65.1185 3 25.2717 8 0.0 0 26.0 2 4.2951 9 63.0 3 15.5739 2 35.0 2 6.7872 9 44.0 2 1.0 1 92.0 3 0.0 0 32.655 9 41.0 3 19.235 8 0.0558 1 43.4444 9 82.0 2 40.0 2 4.0446 2 45.0 3 67.0 2 67.0 2 42.3606 2)
Average genome size in population (length): 30.788
Average program size in population (points): 31.788
Average percent parens in population: 0.032
Minimum age in population: 8.5
Maximum age in population: 12.390625
Average age in population: 10.63665625
Median age in population: 10.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.509
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.509
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8186380
--- Timings ---
Current time: 1529615203736 milliseconds
Total Time:          29.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.5 seconds, 42.2%
Fitness Testing:     14.2 seconds, 48.0%
Report:               2.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_mod})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_flush integer_add float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_pop float_add float_div in1 integer_inc integer_fromfloat float_mod)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3153.3296969000003
Median total errors in population: 1437.0
Error averages by case: (150.2809005 3.866 154.56525059999996 13.204 74.7219992 1.903 100.0068892 3.873 111.4852405 10.973 132.8944358 3.806 141.678469 2.855 106.8350692 2.834 133.3266492 11.629 111.038603 2.861 72.23064330000001 1.98 161.03192950000002 3.864 71.76198020000002 1.894 104.54218839999999 12.266 112.5176824 3.808 97.5359413 13.153 126.2538227 2.806 157.71234840000002 13.186 151.78779379999997 3.261 112.8619332 3.818 115.77084119999999 2.873 117.4795066 3.823 137.9071034 3.877 136.6318163 3.488 125.68265999999998 2.887)
Error minima by case: (80.0 2 63.1304 8 0.0 0 24.0 2 3.2342 9 63.0 2 15.5739 2 35.0 2 8.0368 9 44.0 1 1.0 1 90.0 2 0.0 0 31.7662 9 41.0 3 20.235 9 0.9442 1 87.6904 10 80.0 2 38.0 2 3.264 1 43.0 3 65.0 2 67.0 2 52.0 2)
Average genome size in population (length): 31.915
Average program size in population (points): 32.915
Average percent parens in population: 0.031
Minimum age in population: 9.5
Maximum age in population: 14.0859375
Average age in population: 12.0817421875
Median age in population: 12.1015625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 53
Genome diversity (% unique Plush genomes):	 0.484
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.484
Total error diversity:				 0.027
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 8984630
--- Timings ---
Current time: 1529615206907 milliseconds
Total Time:          32.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.9 seconds, 42.4%
Fitness Testing:     15.6 seconds, 47.7%
Report:               3.1 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dup} {:instruction float_dup_times} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_dup} {:instruction print_float} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec integer_add float_dec float_yankdup float_swap float_dup float_dup_times float_rot integer_flush integer_dup print_float integer_div float_min float_max float_dec)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2962.5397632
Median total errors in population: 1432.0
Error averages by case: (141.86959230000002 3.819 145.202767 13.168 66.9599915 1.862 92.1458018 3.837 103.3330832 10.553 127.69856809999999 3.797 135.950327 2.859 101.3531681 2.832 127.17452050000003 12.184 103.69036170000001 2.87 61.9776713 1.951 153.4763703 3.815 62.66659709999999 1.848 95.63951019999999 12.287 107.32508639999999 3.791 88.6809414 13.193 118.1877196 2.828 146.63846020000003 13.185 144.164551 3.713 105.31918059999998 3.751 109.48644089999999 2.859 109.68885019999998 3.8 130.1942457 3.825 131.5518702 3.042 117.65008689999999 2.845)
Error minima by case: (65.1185 2 25.2717 8 0.0 0 24.0 2 3.2342 7 63.0 2 14.5739 2 35.0 1 6.0368 9 44.0 1 0.0 0 61.0329 2 0.0 0 34.0731 9 41.0 3 20.2025 9 0.9534 1 43.4444 9 48.4713 2 38.0 2 3.0446 1 43.0 3 41.0148 2 67.0 2 42.3606 2)
Average genome size in population (length): 33.48
Average program size in population (points): 34.48
Average percent parens in population: 0.030
Minimum age in population: 10.796875
Maximum age in population: 15.51953125
Average age in population: 13.4057265625
Median age in population: 13.404296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 65
Genome diversity (% unique Plush genomes):	 0.515
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 65
Syntactic diversity (% unique Push programs):	 0.515
Total error diversity:				 0.037
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 9821905
--- Timings ---
Current time: 1529615210114 milliseconds
Total Time:          36.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.3 seconds, 42.6%
Fitness Testing:     17.1 seconds, 47.5%
Report:               3.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54465.0
Test mean error for best: 27.23250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -32.3069380196
Correct output: -72.4601683407 | Program output: 15.5398316593 
Correct output: 40.4089903884  | Program output: 38.4089903884 
Correct output: -123.8848837001 | Program output: -99.8848837001
Correct output: -5.5572409402  | Program output: 32.4427590598 
Correct output: 132.8237835559 | Program output: 63.8237835559 
Correct output: -23.655607388  | Program output: -101.655607388
Correct output: 85.8723285783  | Program output: 44.8723285783 
Correct output: 7.3833649895   | Program output: -61.6166350105
Correct output: 66.4021182413  | Program output: 16.4021182413 
Correct output: -23.7801401349 | Program output: -24.7801401349
Correct output: -167.2900974766 | Program output: -77.2900974766
Correct output: 20.9384936831  | Program output: 18.9384936831 
Correct output: 37.1112256226  | Program output: -7.8887743774 
Correct output: 119.9031170612 | Program output: 72.9031170612 
Correct output: 20.2024981978  | Program output: -16.7975018022
Correct output: 1.7569467681   | Program output: 55.7569467681 
Correct output: -90.6328406884 | Program output: 3.3671593116  
Correct output: -160.4267163377 | Program output: -80.4267163377
Correct output: -111.361734735 | Program output: -73.361734735 
Correct output: -6.0571083203  | Program output: -56.0571083203
Correct output: -112.796431795 | Program output: -69.796431795 
Correct output: -148.6073793052 | Program output: -83.6073793052
Correct output: 142.6041620334 | Program output: 69.6041620334 
Correct output: -89.5489990384 | Program output: -37.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction integer_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc integer_swap)
Errors: [80.0 2 88.0 13 2.0 2 24.0 3 38.0 11 69.0 2 78.0 3 41.0 2 69.0 12 50.0 1 1.0 1 90.0 2 2.0 2 45.0 11 47.0 3 37.0 13 54.0 2 94.0 13 80.0 2 38.0 3 50.0 1 43.0 3 65.0 3 73.0 3 52.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 3148.5110999000008
Median total errors in population: 1432.0
Error averages by case: (148.28771049999997 3.819 152.44985819999997 12.995 75.3675422 1.751 98.98046860000001 3.889 111.4951543 10.752 135.88146350000002 3.803 143.65745899999996 2.962 109.88882670000001 2.823 135.36378950000002 12.293 111.71900079999999 2.882 68.7736269 1.964 159.89895389999995 3.808 70.473766 1.722 101.77710069999999 12.293 115.55998659999999 3.83 95.93975649999999 13.232 126.2680199 2.849 154.03242700000004 13.208 150.66665469999998 3.841 111.78246739999999 3.587 117.83003309999998 2.885 116.38895839999999 3.85 136.80540390000002 3.881 139.60273450000003 3.255 124.55493709999999 2.891)
Error minima by case: (26.3069 2 21.5398 8 0.0 0 22.0 2 2.4825 9 63.0 2 20.9129 2 35.0 1 8.3857 10 11.5656 1 0.0 0 71.2901 2 0.0 0 1.8888 9 41.0 2 10.7975 10 1.6902 1 9.3672 9 74.4267 2 36.0 2 4.7598 1 41.0 2 63.0 2 67.0 2 31.549 1)
Average genome size in population (length): 34.461
Average program size in population (points): 35.461
Average percent parens in population: 0.029
Minimum age in population: 12.53125
Maximum age in population: 17.078125
Average age in population: 14.959353515625
Median age in population: 15.052734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.563
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.563
Total error diversity:				 0.033
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 10683880
--- Timings ---
Current time: 1529615213451 milliseconds
Total Time:          39.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.8 seconds, 42.8%
Fitness Testing:     18.6 seconds, 47.3%
Report:               3.8 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_mod})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_pop float_add float_div in1 integer_inc integer_fromfloat float_mod)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3159.6943197
Median total errors in population: 1425.0
Error averages by case: (148.0895609 3.848 151.8926268 12.519 75.71387659999998 1.559 99.41378440000004 4.005 110.48390180000003 11.203 137.60333239999997 3.854 143.65180339999998 3.158 111.35558280000005 2.926 135.46736980000006 12.241 113.41063710000002 2.919 69.1829256 2.062 160.11107379999999 3.85 70.9658715 1.527 103.56169440000001 12.178 117.36752189999997 3.935 97.54665449999999 13.157 125.03143239999996 2.953 152.86849220000005 13.152 150.9079487 3.908 111.87708659999998 3.287 118.08657139999998 2.926 116.45116919999998 3.948 137.07330880000004 3.992 141.3989903 3.849 124.2091024 3.016)
Error minima by case: (20.8992 2 18.9476 9 0.0 0 22.0 2 1.4825 9 63.0 2 13.5739 2 35.0 1 4.6906 9 12.5656 1 0.0 0 75.8823 2 0.0 0 8.3812 9 41.0 2 19.3216 9 0.7211 1 0.7749 8 69.019 2 19.954 2 2.0446 1 21.3887 2 57.1996 2 67.0 2 1.8588 1)
Average genome size in population (length): 35.543
Average program size in population (points): 36.543
Average percent parens in population: 0.028
Minimum age in population: 14.046875
Maximum age in population: 18.439453125
Average age in population: 16.5460380859375
Median age in population: 16.5966796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 70
Genome diversity (% unique Plush genomes):	 0.544
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 70
Syntactic diversity (% unique Push programs):	 0.544
Total error diversity:				 0.045
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 11572955
--- Timings ---
Current time: 1529615216799 milliseconds
Total Time:          42.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.4 seconds, 43.1%
Fitness Testing:     20.0 seconds, 47.0%
Report:               4.1 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_pop} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction float_min} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_swap})
Best program: (in1 integer_shove integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_pop float_add float_div in1 integer_inc integer_fromfloat integer_div float_min float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items float_swap float_swap)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3207.5050425000013
Median total errors in population: 1425.0
Error averages by case: (150.10677090000001 3.803 152.06725479999994 12.465 78.8395701 1.48 102.4144707 3.916 114.51481190000001 11.203 140.61632070000002 3.788 147.83044990000002 3.082 114.61126100000001 2.906 139.5978332 12.215 112.30621379999998 2.848 67.98473530000001 2.031 163.1062327 3.795 71.3040408 1.393 99.5658542 12.135 120.4223459 3.912 94.1216201 13.132 129.1169683 2.912 151.2203776 13.124 153.91176259999997 3.831 115.1397719 3.193 122.1607464 2.832 119.71868649999998 3.888 140.1008703 3.894 144.3638562 3.854 127.79221669999998 2.938)
Error minima by case: (65.1185 2 25.2717 9 0.0 0 21.0 2 1.9241 9 63.0 2 18.6689 2 35.0 1 7.8603 10 44.0 1 0.0 0 87.0 2 0.0 0 33.7662 9 41.0 2 19.8693 8 2.3521 1 43.4444 8 77.0 2 35.0 2 2.264 1 40.0 2 62.0 2 67.0 2 42.3606 1)
Average genome size in population (length): 35.313
Average program size in population (points): 36.313
Average percent parens in population: 0.029
Minimum age in population: 15.5576171875
Maximum age in population: 20.01171875
Average age in population: 18.05004150390625
Median age in population: 18.06689453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.617
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.617
Total error diversity:				 0.031
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 12456155
--- Timings ---
Current time: 1529615220179 milliseconds
Total Time:          45.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.7 seconds, 43.0%
Fitness Testing:     21.6 seconds, 47.1%
Report:               4.5 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_max} {:instruction float_add} {:instruction float_div} {:instruction in1} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_mod})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup float_dec integer_yank integer_add float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_max float_add float_div in1 integer_inc integer_fromfloat float_mod)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 3114.3401879
Median total errors in population: 1425.0
Error averages by case: (146.84271040000002 3.823 150.74243659999996 12.432 72.0988504 1.406 97.07297820000001 3.941 107.77896510000001 11.205 134.37494549999997 3.783 142.1977601 3.071 108.11746380000001 2.896 133.9378907 12.175 112.0985052 2.831 69.0332654 2.032 157.93589380000003 3.828 68.99796400000001 1.392 105.42533130000001 12.108 114.0596599 3.885 98.3984256 13.12 122.46234689999999 2.873 154.02375519999998 13.139 148.6917468 3.84 109.6872486 3.166 116.4469894 2.833 114.28397709999999 3.895 134.8303737 3.94 138.16995939999998 3.836 122.2267448 2.954)
Error minima by case: (53.6931 2 25.2717 8 0.0 0 22.0 2 0.7049 9 50.2667 2 14.1943 2 3.3153 1 4.6906 9 16.1549 1 0.0 0 18.7099 2 0.0 0 8.3812 8 37.3461 2 18.9149 8 0.8796 1 43.4444 8 5.5733 2 29.3617 2 0.9554 1 20.7964 2 12.6074 2 60.0471 2 20.451 1)
Average genome size in population (length): 35.021
Average program size in population (points): 36.021
Average percent parens in population: 0.029
Minimum age in population: 16.814453125
Maximum age in population: 21.33154296875
Average age in population: 19.49139404296875
Median age in population: 19.5384521484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.633
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.037
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 13332105
--- Timings ---
Current time: 1529615223366 milliseconds
Total Time:          49.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.1 seconds, 42.9%
Fitness Testing:     23.1 seconds, 46.9%
Report:               4.9 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_sub} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_pop} {:instruction float_add} {:instruction in2} {:instruction in1} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_mod})
Best program: (in1 float_mult integer_max integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_sub float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_pop float_add in2 in1 integer_inc integer_fromfloat float_mod)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2890.9990539000005
Median total errors in population: 1425.0
Error averages by case: (137.7830604 3.663 142.10160869999996 12.408 63.969907 1.261 87.8922347 3.792 100.11211840000001 11.157 126.7939522 3.648 133.8883146 2.925 100.36928890000002 2.756 125.5928512 12.158 102.81603270000001 2.702 57.960769400000004 1.87 149.52849790000002 3.663 59.710799400000006 1.226 93.96619930000001 12.077 106.2839959 3.748 86.9461436 13.096 114.96587739999998 2.751 144.2781895 13.101 140.1894471 3.698 100.7715802 3.031 107.88868289999999 2.686 105.42277829999998 3.75 126.16035950000003 3.78 130.5857091 3.704 113.5666556 2.803)
Error minima by case: (65.1185 2 25.2717 9 0.0 0 21.0 2 2.6063 9 63.0 2 20.6908 2 35.0 1 7.0352 9 44.0 1 0.0 0 87.0 2 0.0 0 35.655 9 41.0 2 20.2221 9 1.0543 1 43.4444 9 77.0 2 35.0 2 3.0814 1 40.0 2 62.0 2 67.0 2 42.3606 1)
Average genome size in population (length): 34.826
Average program size in population (points): 35.826
Average percent parens in population: 0.029
Minimum age in population: 18.42041015625
Maximum age in population: 23.056640625
Average age in population: 20.99489172363281
Median age in population: 21.02825927734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.657
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.657
Total error diversity:				 0.031
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 14203105
--- Timings ---
Current time: 1529615226659 milliseconds
Total Time:          52.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.6 seconds, 43.1%
Fitness Testing:     24.5 seconds, 46.7%
Report:               5.3 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 54410.0
Test mean error for best: 27.20500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -30.3069380196
Correct output: -72.4601683407 | Program output: 17.5398316593 
Correct output: 40.4089903884  | Program output: 40.4089903884 
Correct output: -123.8848837001 | Program output: -97.8848837001
Correct output: -5.5572409402  | Program output: 34.4427590598 
Correct output: 132.8237835559 | Program output: 65.8237835559 
Correct output: -23.655607388  | Program output: -99.655607388 
Correct output: 85.8723285783  | Program output: 46.8723285783 
Correct output: 7.3833649895   | Program output: -59.6166350105
Correct output: 66.4021182413  | Program output: 18.4021182413 
Correct output: -23.7801401349 | Program output: -22.7801401349
Correct output: -167.2900974766 | Program output: -75.2900974766
Correct output: 20.9384936831  | Program output: 20.9384936831 
Correct output: 37.1112256226  | Program output: -5.8887743774 
Correct output: 119.9031170612 | Program output: 74.9031170612 
Correct output: 20.2024981978  | Program output: -14.7975018022
Correct output: 1.7569467681   | Program output: 57.7569467681 
Correct output: -90.6328406884 | Program output: 5.3671593116  
Correct output: -160.4267163377 | Program output: -78.4267163377
Correct output: -111.361734735 | Program output: -71.361734735 
Correct output: -6.0571083203  | Program output: -54.0571083203
Correct output: -112.796431795 | Program output: -67.796431795 
Correct output: -148.6073793052 | Program output: -81.6073793052
Correct output: 142.6041620334 | Program output: 71.6041620334 
Correct output: -89.5489990384 | Program output: -35.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mod} {:instruction print_float} {:instruction float_inc} {:instruction tag_float_167} {:instruction integer_mod} {:instruction integer_min} {:instruction float_pop} {:instruction float_max} {:instruction float_dec} {:instruction float_swap} {:instruction tag_integer_755} {:instruction float_inc} {:instruction integer_sub} {:instruction print_integer} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction integer_max} {:instruction float_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_max integer_yank integer_add float_dec float_yankdup float_swap float_dec integer_mod print_float float_inc tag_float_167 integer_mod integer_min float_pop float_max float_dec float_swap tag_integer_755 float_inc integer_sub print_integer integer_dup_times float_dup_items integer_max float_swap)
Errors: [82.0 3 90.0 12 0.0 0 26.0 3 40.0 11 67.0 3 76.0 2 39.0 2 67.0 12 48.0 2 1.0 1 92.0 3 0.0 0 43.0 12 45.0 3 35.0 13 56.0 2 96.0 13 82.0 3 40.0 2 48.0 2 45.0 3 67.0 3 71.0 3 54.0 2]
Total: 1425.0
Mean: 28.5
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3047.2222446000005
Median total errors in population: 1425.0
Error averages by case: (143.62883529999996 3.739 146.63695089999993 12.386 70.7720633 1.304 94.8102599 3.848 106.81803359999998 11.17 134.07418109999998 3.704 141.33107199999998 3.004 107.8926294 2.821 133.0061211 12.164 107.9314602 2.763 62.5319683 1.933 155.99511379999996 3.734 64.8544623 1.27 97.6589026 12.077 113.7348453 3.814 90.995894 13.109 121.5606687 2.802 147.38041830000003 13.1 146.7284962 3.765 107.60701370000001 3.077 115.4955887 2.754 112.22915389999999 3.816 132.8017857 3.833 137.82927610000002 3.773 120.30205019999998 2.855)
Error minima by case: (65.1185 2 25.2717 8 0.0 0 22.0 2 0.5186 9 63.0 2 19.8179 2 35.0 1 7.3096 10 27.9332 1 0.0 0 88.0 2 0.0 0 1.3577 8 41.0 2 18.2665 8 0.8796 1 43.4444 9 78.0 2 36.0 2 3.0355 1 41.0 2 63.0 2 67.0 2 42.3606 1)
Average genome size in population (length): 34.702
Average program size in population (points): 35.702
Average percent parens in population: 0.029
Minimum age in population: 19.8818359375
Maximum age in population: 24.3790283203125
Average age in population: 22.4620556640625
Median age in population: 22.53494262695312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.682
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.682
Total error diversity:				 0.031
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 15071065
--- Timings ---
Current time: 1529615229882 milliseconds
Total Time:          55.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.0 seconds, 43.0%
Fitness Testing:     26.1 seconds, 46.8%
Report:               5.6 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction integer_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc integer_swap)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3290.6389090000007
Median total errors in population: 1425.0
Error averages by case: (153.71908910000002 3.893 156.59048640000003 12.396 81.859022 1.462 105.72256290000003 4.005 117.2785002 11.189 142.5202873 3.839 149.5383164 3.117 116.58006120000002 2.96 141.2497609 12.15 116.470697 2.896 73.54804340000001 2.118 166.05883850000004 3.889 75.87984540000002 1.415 105.24555249999999 12.093 122.40639879999998 3.927 99.6005776 13.079 131.8460423 2.934 157.07702970000005 13.101 156.91729689999997 3.91 118.27573569999997 3.225 123.90946509999998 2.896 122.82969579999998 3.945 143.1785331 3.983 146.2606238 3.898 130.739447 3.017)
Error minima by case: (26.3069 2 21.5398 9 0.0 0 20.0 1 1.5246 9 63.0 2 13.5739 2 35.0 1 7.0352 9 22.4021 1 0.0 0 71.2901 2 0.0 0 1.8888 9 41.0 2 10.7975 8 1.0543 1 9.3672 1 74.4267 2 34.0 2 1.7598 1 39.0 2 61.0 2 67.0 2 31.549 2)
Average genome size in population (length): 34.382
Average program size in population (points): 35.382
Average percent parens in population: 0.029
Minimum age in population: 20.8818359375
Maximum age in population: 25.9139404296875
Average age in population: 23.96199230957031
Median age in population: 24.0301513671875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.678
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.678
Total error diversity:				 0.04
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 15930940
--- Timings ---
Current time: 1529615233250 milliseconds
Total Time:          59.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.4 seconds, 43.0%
Fitness Testing:     27.6 seconds, 46.8%
Report:               5.9 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction integer_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc integer_swap)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3030.784752100001
Median total errors in population: 1425.0
Error averages by case: (143.48616560000005 3.69 147.7057663 12.414 69.8944139 1.263 93.5748014 3.811 105.8962928 11.189 131.94360310000002 3.682 139.6373185 2.936 105.7357736 2.763 131.24296510000002 12.186 108.0899226 2.73 63.9527762 1.877 154.86606190000003 3.695 65.2954109 1.227 99.50891039999999 12.122 111.4893002 3.765 92.65033340000001 13.113 120.7216614 2.759 149.8469664 13.1 145.5697749 3.727 106.433295 3.029 113.63719569999999 2.726 111.0791917 3.774 131.61606449999996 3.812 135.688635 3.732 119.28515159999999 2.815)
Error minima by case: (76.0 2 40.8116 9 0.0 0 20.0 1 1.7832 9 62.0 2 16.3769 2 34.0 1 6.0368 9 11.5656 1 0.0 0 86.0 2 0.0 0 20.6 8 40.0 2 3.6912 9 1.6902 1 46.8116 1 76.0 2 34.0 2 2.8116 1 39.0 2 61.0 2 66.0 2 48.0 2)
Average genome size in population (length): 34.186
Average program size in population (points): 35.186
Average percent parens in population: 0.030
Minimum age in population: 22.7161865234375
Maximum age in population: 27.45964050292969
Average age in population: 25.43923216247559
Median age in population: 25.49262237548828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.706
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.706
Total error diversity:				 0.034
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 16785990
--- Timings ---
Current time: 1529615236499 milliseconds
Total Time:          62.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.8 seconds, 43.1%
Fitness Testing:     29.1 seconds, 46.6%
Report:               6.3 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction integer_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_dup_times float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc integer_swap)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3113.3388018000005
Median total errors in population: 1425.0
Error averages by case: (147.12122020000004 3.77 148.86029919999996 12.436 71.9217058 1.371 97.7705097 3.853 107.6373679 11.216 135.1276063 3.761 144.214434 3.044 108.93681850000002 2.858 135.8695973 12.253 110.58230760000002 2.817 67.61867159999998 1.968 158.7507987 3.766 67.09887259999999 1.334 102.4987347 12.189 114.82824660000001 3.856 96.7572896 13.135 122.32133509999998 2.833 150.65199660000002 12.962 149.51274690000002 3.791 110.49928739999999 3.109 118.42931080000001 2.801 115.10968799999999 3.846 135.6322201 3.867 138.8927065 3.8 123.16203009999998 2.897)
Error minima by case: (65.1185 2 25.2717 9 0.0 0 20.0 1 0.2342 8 47.1919 2 14.5739 2 0.2405 1 5.5405 9 19.2297 1 0.0 0 86.0 2 0.0 0 8.3223 8 34.2713 2 18.9149 8 0.7569 1 43.4444 1 76.0 2 34.0 2 2.264 1 39.0 2 61.0 2 56.9723 2 42.3606 1)
Average genome size in population (length): 34.426
Average program size in population (points): 35.426
Average percent parens in population: 0.029
Minimum age in population: 23.7161865234375
Maximum age in population: 28.83686828613281
Average age in population: 26.96997605895996
Median age in population: 27.00562286376953
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.045
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 17647090
--- Timings ---
Current time: 1529615239816 milliseconds
Total Time:          65.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.2 seconds, 43.0%
Fitness Testing:     30.6 seconds, 46.7%
Report:               6.7 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction integer_swap})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc integer_swap)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3248.3609434
Median total errors in population: 1425.0
Error averages by case: (151.42201820000002 3.879 155.1460294 12.475 78.8553747 1.569 101.8899242 3.78 113.0107006 11.227 140.50946019999998 3.832 148.35880939999998 3.153 114.45925140000001 2.941 140.1777992 12.184 117.77504069999999 2.888 74.6272711 2.071 162.5447005 3.868 75.02723820000001 1.542 109.89070040000001 12.22 120.28500109999999 3.911 103.84470719999999 12.964 127.64116109999998 2.835 157.97259430000003 12.144 153.35096489999998 3.879 114.5651913 3.24 122.7415347 2.782 119.1532959 3.911 139.544938 3.957 144.2579651 3.901 127.1742716 2.982)
Error minima by case: (26.8951 2 12.9516 9 0.0 0 18.0 1 0.4825 8 63.0 2 13.5739 2 35.0 1 9.3834 9 13.5656 1 0.0 0 81.8783 2 0.0 0 33.7662 9 41.0 2 21.235 9 1.9442 1 5.221 1 74.0 2 25.9499 2 2.2686 1 27.3846 2 59.0 2 67.0 2 4.1372 1)
Average genome size in population (length): 35.455
Average program size in population (points): 36.455
Average percent parens in population: 0.029
Minimum age in population: 25.76023101806641
Maximum age in population: 30.72236251831055
Average age in population: 28.52691299057007
Median age in population: 28.61162376403809
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.697
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.697
Total error diversity:				 0.041
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 18534090
--- Timings ---
Current time: 1529615243373 milliseconds
Total Time:          69.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.7 seconds, 43.0%
Fitness Testing:     32.1 seconds, 46.5%
Report:               7.2 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc} {:instruction integer_swap})
Best program: (in1 float_mult float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc integer_swap)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3840.9327982999994
Median total errors in population: 1425.0
Error averages by case: (170.98963170000002 4.344 175.52636430000004 12.738 107.73422940000003 2.643 123.72910920000002 3.699 136.2307579 11.311 168.34584299999997 4.401 170.44647719999995 3.746 142.6093658000001 3.496 162.81160690000004 12.266 144.3062758 3.49 98.50170479999998 2.558 182.54614959999998 4.308 103.24875940000003 2.613 133.76145019999998 12.562 149.07917410000002 4.39 126.88464299999997 12.583 150.18871359999997 3.162 177.06210840000003 9.501 173.62335869999995 4.311 135.79700659999997 3.875 145.94321579999993 3.013 140.203015 4.239 160.2404808 4.331 172.16512789999993 4.384 147.59922920000002 3.395)
Error minima by case: (51.6931 2 14.8477 9 0.0 0 17.0 1 0.04 5 1.1762 2 1.7125 2 5.5847 1 6.3999 8 13.8855 1 0.0 0 16.7099 2 0.0 0 33.7662 9 29.9031 2 17.678 9 0.7393 1 33.0204 1 3.5733 2 31.0 2 3.0446 1 22.7964 2 14.6074 2 0.6042 2 18.451 1)
Average genome size in population (length): 39.934
Average program size in population (points): 40.934
Average percent parens in population: 0.026
Minimum age in population: 27.63743591308594
Maximum age in population: 32.19021606445312
Average age in population: 30.13668292236328
Median age in population: 30.18473625183105
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.703
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.703
Total error diversity:				 0.063
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 19532790
--- Timings ---
Current time: 1529615246962 milliseconds
Total Time:          72.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.1 seconds, 42.8%
Fitness Testing:     33.8 seconds, 46.5%
Report:               7.6 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank float_dup_items float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult integer_inc float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2618.9961607
Median total errors in population: 1419.0
Error averages by case: (121.86710639999997 3.814 128.41222269999997 12.918 56.73808999999999 2.731 70.87599319999997 2.344 82.79800060000001 11.156 120.68464259999998 3.87 125.8736388 3.593 93.35506940000003 2.929 117.81822890000004 12.125 99.64750670000004 2.932 52.693195500000016 1.979 132.62427279999997 3.797 55.01459520000002 2.739 93.48683400000003 12.888 100.17026359999996 3.792 85.92834979999998 11.74 97.56818189999998 2.239 133.52539599999994 4.709 123.17778639999999 3.787 83.3614925 3.707 99.93019759999997 2.116 87.9799702 3.668 109.09846939999998 3.744 124.7131027 3.814 95.7165538 2.806)
Error minima by case: (46.6931 2 25.2717 10 0.0 0 16.0 1 0.3283 9 3.8238 2 18.6689 2 12.8723 1 6.2036 10 24.5979 1 0.0 0 11.7099 2 0.0 0 30.8168 9 34.9031 2 18.2764 9 0.7569 1 43.4444 1 0.5733 2 26.3617 2 2.264 1 17.7964 2 9.6074 2 5.6042 2 13.451 1)
Average genome size in population (length): 46.94
Average program size in population (points): 47.94
Average percent parens in population: 0.021
Minimum age in population: 29.10200881958008
Maximum age in population: 33.66938400268555
Average age in population: 31.66554908943176
Median age in population: 31.69250297546387
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 65
Genome diversity (% unique Plush genomes):	 0.615
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 65
Syntactic diversity (% unique Push programs):	 0.615
Total error diversity:				 0.054
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 20706390
--- Timings ---
Current time: 1529615250451 milliseconds
Total Time:          76.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.5 seconds, 42.6%
Fitness Testing:     35.6 seconds, 46.6%
Report:               8.1 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction in1} {:instruction float_min} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup float_mod float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min in1 float_min integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2519.748007899999
Median total errors in population: 1419.0
Error averages by case: (116.86666019999997 3.735 125.45485759999997 12.991 53.97498409999997 2.768 64.93189899999999 2.051 79.56660660000004 11.164 118.09801449999999 3.79 122.1330483 3.527 90.7613197 2.841 113.79536150000001 12.139 97.77026500000001 2.858 48.5808233 1.887 127.3180468 3.654 52.76178830000001 2.779 90.17401900000002 12.981 97.44901569999999 3.698 82.55740099999998 11.601 94.45609669999997 2.103 130.03035029999995 3.788 117.81340279999999 3.651 77.78100479999999 3.621 95.75384389999999 1.911 82.47039469999999 3.527 103.6051805 3.617 122.12048350000002 3.719 90.4091401 2.713)
Error minima by case: (37.6931 2 24.0761 9 1.0 1 13.0 1 0.3283 9 15.1762 2 17.5739 2 6.1277 1 6.0368 9 43.5979 1 0.0 0 2.7099 2 1.0 1 34.0731 9 15.9031 2 19.2025 8 0.7569 1 42.2488 1 2.5733 2 27.0 2 1.8457 1 22.7964 2 14.6074 2 13.3958 2 4.451 1)
Average genome size in population (length): 48.037
Average program size in population (points): 49.037
Average percent parens in population: 0.021
Minimum age in population: 30.25456428527832
Maximum age in population: 35.15476322174072
Average age in population: 33.13387171649933
Median age in population: 33.17021942138672
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.056
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.061
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 21907365
--- Timings ---
Current time: 1529615253769 milliseconds
Total Time:          79.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.8 seconds, 42.5%
Fitness Testing:     37.2 seconds, 46.7%
Report:               8.5 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_dup integer_add in1 float_min float_dup integer_mult integer_inc float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2378.514372399999
Median total errors in population: 1419.0
Error averages by case: (112.31171909999998 3.694 118.8423555 12.953 47.157835899999995 2.72 60.35205359999998 2.046 72.98491650000004 11.145 111.80023459999995 3.795 117.1221514 3.497 84.13667040000003 2.843 108.99041750000002 12.125 90.4477068 2.824 43.051638999999994 1.854 122.99084219999999 3.652 45.390198899999994 2.723 84.33965080000002 12.939 91.02495949999997 3.681 76.74858189999998 11.588 87.8929728 2.078 123.93738379999999 3.927 113.43065709999996 3.658 73.1664387 3.624 90.8683056 1.935 77.863833 3.52 99.16611029999999 3.61 115.87550259999999 3.721 85.8052349 2.664)
Error minima by case: (45.0866 2 5.2398 9 0.0 0 14.2088 1 0.3283 9 63.0 2 23.5328 2 35.0 1 5.9928 9 44.0 1 1.0 1 11.7099 2 0.0 0 31.9887 8 41.0 2 19.2025 10 0.7569 1 23.4125 1 0.5733 2 29.0 2 7.0571 1 23.7964 2 15.6074 2 67.0 2 13.451 1)
Average genome size in population (length): 47.961
Average program size in population (points): 48.961
Average percent parens in population: 0.021
Minimum age in population: 31.25456428527832
Maximum age in population: 36.48919415473938
Average age in population: 34.58571448135376
Median age in population: 34.65009582042694
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.061
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 23106440
--- Timings ---
Current time: 1529615257434 milliseconds
Total Time:          83.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.3 seconds, 42.5%
Fitness Testing:     38.8 seconds, 46.7%
Report:               8.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2598.2892287999985
Median total errors in population: 1419.0
Error averages by case: (120.74789399999993 3.847 126.20134219999996 12.91 56.68531079999997 2.874 69.7153913 2.258 81.49895360000004 11.127 120.93458049999997 3.929 125.05236620000001 3.679 93.41396550000006 2.982 117.30797420000005 12.04 99.11684340000004 2.965 52.49672610000003 2.0 131.38813939999997 3.855 54.34408800000003 2.872 93.13386110000005 12.851 100.42456239999997 3.835 85.85439839999997 11.553 96.21721489999995 2.21 130.99413789999988 3.88 121.94791469999996 3.843 82.05541119999997 3.794 99.42222339999996 2.079 86.66818069999995 3.708 107.88115050000003 3.77 125.01429220000001 3.861 94.2193062 2.831)
Error minima by case: (47.6931 2 25.2717 9 0.0 0 15.0 1 0.3283 9 63.0 2 22.2727 2 35.0 1 6.7872 10 44.0 1 0.0 0 12.7099 2 0.0 0 14.656 9 41.0 2 20.2025 9 0.3044 1 43.4444 1 0.4267 2 29.0 2 2.4998 1 23.7964 2 15.6074 2 67.0 2 14.451 1)
Average genome size in population (length): 47.796
Average program size in population (points): 48.796
Average percent parens in population: 0.021
Minimum age in population: 33.38554620742798
Maximum age in population: 38.04636919498444
Average age in population: 36.01084144663811
Median age in population: 36.02912718057632
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.703
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.703
Total error diversity:				 0.057
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 24301465
--- Timings ---
Current time: 1529615260825 milliseconds
Total Time:          86.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.7 seconds, 42.3%
Fitness Testing:     40.5 seconds, 46.7%
Report:               9.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction float_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank float_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2593.7850204999986
Median total errors in population: 1419.0
Error averages by case: (121.38586989999997 3.777 126.00296759999996 12.924 55.50687639999998 2.749 69.91914199999998 2.166 80.47877850000002 11.112 119.57138429999998 3.797 125.7937259 3.606 92.37825340000005 2.827 117.68263970000002 12.032 98.64623730000002 2.845 53.3237758 1.904 131.74314890000002 3.774 53.676362399999995 2.757 93.12892420000003 12.904 98.95452279999999 3.695 86.36362639999999 11.552 95.62548809999996 2.069 131.58457439999998 3.832 122.27976249999998 3.764 82.501825 3.722 99.71267339999997 1.986 87.1369472 3.614 108.18729950000001 3.701 123.56341260000002 3.73 95.04580229999999 2.752)
Error minima by case: (38.8116 2 17.1525 9 0.0 0 16.0 1 0.4362 8 3.1762 2 13.8179 2 2.4649 1 6.0368 9 29.5979 1 0.0 0 13.7099 2 0.0 0 34.0731 9 8.4649 2 23.1131 9 1.1517 1 34.9535 1 0.5733 2 3.1884 2 2.9645 1 1.8116 2 14.6074 2 1.3958 2 10.8116 1)
Average genome size in population (length): 47.723
Average program size in population (points): 48.723
Average percent parens in population: 0.021
Minimum age in population: 34.63450241088867
Maximum age in population: 39.4127750992775
Average age in population: 37.42427707755566
Median age in population: 37.48369473218918
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.048
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 25494540
--- Timings ---
Current time: 1529615264139 milliseconds
Total Time:          90.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.1 seconds, 42.3%
Fitness Testing:     42.1 seconds, 46.8%
Report:               9.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 54730.0
Test mean error for best: 27.36500
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 59.8237835559 
Correct output: -23.655607388  | Program output: -105.655607388
Correct output: 85.8723285783  | Program output: 40.8723285783 
Correct output: 7.3833649895   | Program output: -65.6166350105
Correct output: 66.4021182413  | Program output: 12.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -11.8887743774
Correct output: 119.9031170612 | Program output: 68.9031170612 
Correct output: 20.2024981978  | Program output: -20.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -60.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 65.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_add} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec integer_dup_times float_dec float_yankdup float_swap float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_add integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult integer_inc float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 73.0 3 82.0 3 45.0 2 73.0 12 54.0 2 5.0 1 86.0 3 6.0 2 49.0 13 51.0 3 41.0 11 50.0 1 90.0 1 76.0 3 34.0 3 54.0 1 39.0 3 61.0 3 77.0 3 48.0 2]
Total: 1419.0
Mean: 28.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2255.675277799998
Median total errors in population: 1419.0
Error averages by case: (108.45099919999994 3.704 112.47306979999993 12.896 40.63600149999998 2.718 56.70270269999996 2.021 65.96860390000005 11.069 106.70013509999997 3.769 113.1634436 3.538 78.87894590000005 2.831 104.80721920000005 12.036 85.50854220000004 2.82 39.058420900000016 1.831 118.83365450000001 3.67 39.1055599 2.73 79.24416890000005 12.886 85.92055299999996 3.702 72.83525379999998 11.478 81.05642909999995 2.022 118.01547579999995 3.445 109.27357729999996 3.676 69.18863480000002 3.635 86.59753369999997 1.885 73.82592539999997 3.553 95.11024240000002 3.61 110.8060999 3.711 81.58708530000001 2.691)
Error minima by case: (38.8116 2 18.5183 9 0.0 0 16.0 1 0.4428 8 3.1762 2 22.1548 2 4.1277 1 2.7817 8 31.5979 1 0.0 0 4.7099 2 0.0 0 24.0999 9 17.9031 2 19.2025 9 0.7569 1 36.5887 1 0.5733 2 3.1884 2 5.0571 1 1.8116 2 14.6074 2 1.3958 2 6.451 1)
Average genome size in population (length): 47.748
Average program size in population (points): 48.748
Average percent parens in population: 0.021
Minimum age in population: 36.1094388961792
Maximum age in population: 40.94792568683624
Average age in population: 38.88484457236528
Median age in population: 38.95831595361233
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.724
Total error diversity:				 0.066
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 26688240
--- Timings ---
Current time: 1529615267840 milliseconds
Total Time:          93.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.6 seconds, 42.3%
Fitness Testing:     43.8 seconds, 46.8%
Report:              10.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 53129.0
Test mean error for best: 26.56450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 62.8237835559 
Correct output: -23.655607388  | Program output: -102.655607388
Correct output: 85.8723285783  | Program output: 43.8723285783 
Correct output: 7.3833649895   | Program output: -62.6166350105
Correct output: 66.4021182413  | Program output: 15.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -8.8887743774 
Correct output: 119.9031170612 | Program output: 71.9031170612 
Correct output: 20.2024981978  | Program output: -17.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -57.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 68.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 70.0 2 79.0 3 42.0 2 70.0 12 51.0 2 5.0 1 86.0 3 6.0 2 46.0 12 48.0 2 38.0 13 50.0 1 90.0 1 76.0 3 34.0 3 51.0 2 39.0 3 61.0 3 74.0 3 48.0 2]
Total: 1389.0
Mean: 27.78
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2380.346058299998
Median total errors in population: 1419.0
Error averages by case: (113.96756069999995 3.7 116.03483889999994 12.914 45.81831589999999 2.65 62.42912079999998 2.019 70.94926770000002 11.072 110.74245559999999 3.682 118.27583320000001 3.519 83.19945630000005 2.726 110.0838059 12.035 88.82780220000005 2.737 44.90354750000003 1.799 124.93342459999998 3.663 43.47368680000003 2.644 84.01474150000003 12.882 89.91449769999997 3.577 77.93632299999996 11.495 86.29347919999996 1.934 121.39410039999993 3.604 115.42210609999997 3.659 75.1328109 3.62 92.02915099999997 1.872 79.82171349999999 3.518 101.1756538 3.588 114.7759604 3.623 87.5784047 2.686)
Error minima by case: (41.6931 2 14.7092 9 1.0 1 16.0 1 0.2847 7 11.1762 2 20.0871 2 2.1277 1 7.448 10 39.5979 1 0.0 0 6.7099 2 1.0 1 31.8774 9 19.9031 2 0.1983 7 0.7601 1 32.8819 1 0.5733 2 30.0 2 2.9387 1 25.7964 2 17.6074 2 9.3958 2 8.451 1)
Average genome size in population (length): 47.591
Average program size in population (points): 48.591
Average percent parens in population: 0.021
Minimum age in population: 37.1094388961792
Maximum age in population: 42.30357809364796
Average age in population: 40.31600660656393
Median age in population: 40.35975726693869
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.048
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 27878090
--- Timings ---
Current time: 1529615271179 milliseconds
Total Time:          97.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.0 seconds, 42.2%
Fitness Testing:     45.3 seconds, 46.8%
Report:              10.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 53129.0
Test mean error for best: 26.56450
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 62.8237835559 
Correct output: -23.655607388  | Program output: -102.655607388
Correct output: 85.8723285783  | Program output: 43.8723285783 
Correct output: 7.3833649895   | Program output: -62.6166350105
Correct output: 66.4021182413  | Program output: 15.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -8.8887743774 
Correct output: 119.9031170612 | Program output: 71.9031170612 
Correct output: 20.2024981978  | Program output: -17.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -57.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 68.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 70.0 2 79.0 3 42.0 2 70.0 12 51.0 2 5.0 1 86.0 3 6.0 2 46.0 12 48.0 2 38.0 13 50.0 1 90.0 1 76.0 3 34.0 3 51.0 2 39.0 3 61.0 3 74.0 3 48.0 2]
Total: 1389.0
Mean: 27.78
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2518.2140501999984
Median total errors in population: 1419.0
Error averages by case: (118.18928339999995 3.849 122.38478449999997 12.959 52.374712099999975 2.822 67.75747369999998 2.229 76.90429370000005 11.129 117.04921369999995 3.874 122.10791430000002 3.619 89.42952800000002 2.939 113.89135730000002 12.084 96.07053739999999 2.938 49.97208580000001 1.997 129.4455348 3.792 51.013160699999986 2.83 88.83326350000003 12.856 96.44233809999997 3.791 82.85353369999997 11.596 91.72675779999994 2.174 127.29658989999992 4.06 120.03293519999995 3.787 79.96218059999998 3.758 95.8567344 2.071 84.57019279999999 3.661 105.9485888 3.726 121.12014390000002 3.809 91.8049121 2.826)
Error minima by case: (40.6931 2 22.2717 9 0.0 0 15.0 1 0.3283 8 56.2919 2 17.5739 2 28.2919 1 6.0368 9 37.2919 1 0.0 0 5.7099 2 0.0 0 28.9887 9 34.2919 2 20.5708 8 1.6777 1 40.4444 1 1.5733 2 29.0 2 0.6623 1 24.7964 2 16.6074 2 60.2919 2 7.451 1)
Average genome size in population (length): 47.835
Average program size in population (points): 48.835
Average percent parens in population: 0.021
Minimum age in population: 38.21593981981277
Maximum age in population: 43.82942099869251
Average age in population: 41.77043759370595
Median age in population: 41.81080917268991
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.757
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.757
Total error diversity:				 0.063
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 29073965
--- Timings ---
Current time: 1529615274695 milliseconds
Total Time:         100.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.3 seconds, 42.1%
Fitness Testing:     47.1 seconds, 46.9%
Report:              10.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 52145.0
Test mean error for best: 26.07250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 64.8237835559 
Correct output: -23.655607388  | Program output: -100.655607388
Correct output: 85.8723285783  | Program output: 45.8723285783 
Correct output: 7.3833649895   | Program output: -60.6166350105
Correct output: 66.4021182413  | Program output: 17.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -6.8887743774 
Correct output: 119.9031170612 | Program output: 73.9031170612 
Correct output: 20.2024981978  | Program output: -15.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -55.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 70.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_dup integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 68.0 3 77.0 3 40.0 1 68.0 12 49.0 2 5.0 1 86.0 3 6.0 2 44.0 12 46.0 3 36.0 13 50.0 1 90.0 1 76.0 3 34.0 3 49.0 2 39.0 3 61.0 3 72.0 3 48.0 2]
Total: 1370.0
Mean: 27.4
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2601.1550211999984
Median total errors in population: 1419.0
Error averages by case: (121.60488229999993 3.907 125.17053329999993 12.857 55.63769119999996 2.936 71.1864306 2.353 79.42941960000003 11.066 120.10372979999994 3.96 124.46851820000002 3.681 92.52116460000006 3.03 116.74036860000005 11.98 99.12387370000006 3.041 53.43440810000001 2.048 132.8263586 3.904 54.167341000000015 2.934 93.89993060000005 12.783 99.68917399999997 3.848 86.32832289999997 11.608 94.14338729999993 2.289 131.11587389999994 4.27 123.46112339999993 3.893 83.47711069999997 3.833 98.95103689999995 2.159 88.01352369999996 3.721 109.38542370000005 3.819 124.1842438 3.904 95.4051507 2.862)
Error minima by case: (26.3069 2 21.5398 9 0.0 0 13.0 1 0.1168 9 13.1762 2 20.1296 2 4.1277 1 6.3834 8 22.4021 1 0.0 0 4.7099 2 0.0 0 1.8888 9 17.9031 2 10.7975 9 0.7569 1 9.3672 1 8.4267 2 27.0 2 3.9306 1 32.0 2 26.6074 2 11.3958 2 6.451 1)
Average genome size in population (length): 47.647
Average program size in population (points): 48.647
Average percent parens in population: 0.021
Minimum age in population: 39.21593981981277
Maximum age in population: 45.06271014735103
Average age in population: 43.21860683206841
Median age in population: 43.24165670759976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.764
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.764
Total error diversity:				 0.069
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 30265215
--- Timings ---
Current time: 1529615278402 milliseconds
Total Time:         104.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.7 seconds, 42.0%
Fitness Testing:     48.9 seconds, 47.0%
Report:              11.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 52145.0
Test mean error for best: 26.07250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -36.3069380196
Correct output: -72.4601683407 | Program output: 11.5398316593 
Correct output: 40.4089903884  | Program output: 34.4089903884 
Correct output: -123.8848837001 | Program output: -103.8848837001
Correct output: -5.5572409402  | Program output: 28.4427590598 
Correct output: 132.8237835559 | Program output: 64.8237835559 
Correct output: -23.655607388  | Program output: -100.655607388
Correct output: 85.8723285783  | Program output: 45.8723285783 
Correct output: 7.3833649895   | Program output: -60.6166350105
Correct output: 66.4021182413  | Program output: 17.4021182413 
Correct output: -23.7801401349 | Program output: -28.7801401349
Correct output: -167.2900974766 | Program output: -81.2900974766
Correct output: 20.9384936831  | Program output: 14.9384936831 
Correct output: 37.1112256226  | Program output: -6.8887743774 
Correct output: 119.9031170612 | Program output: 73.9031170612 
Correct output: 20.2024981978  | Program output: -15.7975018022
Correct output: 1.7569467681   | Program output: 51.7569467681 
Correct output: -90.6328406884 | Program output: -0.6328406884 
Correct output: -160.4267163377 | Program output: -84.4267163377
Correct output: -111.361734735 | Program output: -77.361734735 
Correct output: -6.0571083203  | Program output: -55.0571083203
Correct output: -112.796431795 | Program output: -73.796431795 
Correct output: -148.6073793052 | Program output: -87.6073793052
Correct output: 142.6041620334 | Program output: 70.6041620334 
Correct output: -89.5489990384 | Program output: -41.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_dup integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [76.0 3 84.0 13 6.0 2 20.0 1 34.0 11 68.0 3 77.0 3 40.0 1 68.0 12 49.0 2 5.0 1 86.0 3 6.0 2 44.0 12 46.0 3 36.0 13 50.0 1 90.0 1 76.0 3 34.0 3 49.0 2 39.0 3 61.0 3 72.0 3 48.0 2]
Total: 1370.0
Mean: 27.4
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2693.2433427999995
Median total errors in population: 1419.0
Error averages by case: (124.65084029999997 3.854 129.61284529999998 12.959 60.53460809999997 2.937 74.38799189999999 2.33 85.37382040000003 11.184 124.67886029999998 3.86 128.32520530000002 3.648 97.33945040000005 2.955 120.44254170000004 12.139 102.27979510000006 3.024 55.48591980000002 1.999 135.90360859999998 3.831 57.93567530000001 2.937 95.04361520000005 12.787 104.28730889999994 3.763 87.40622549999999 11.957 99.94848459999994 2.344 134.29687149999995 5.063 126.52769619999998 3.838 86.8556893 3.808 102.60941039999994 2.261 91.45762099999996 3.617 112.50361700000002 3.772 128.71013230000003 3.907 99.10350840000001 2.768)
Error minima by case: (26.3069 2 1.7705 8 0.0 0 14.0 1 0.523 9 63.0 2 22.6689 2 35.0 1 2.3834 10 22.4021 1 0.0 0 7.7099 2 0.0 0 1.8888 9 41.0 2 10.7975 9 0.2431 1 9.3672 1 2.5733 2 28.0 2 6.264 1 23.7964 2 15.6074 2 67.0 2 9.451 1)
Average genome size in population (length): 47.499
Average program size in population (points): 48.499
Average percent parens in population: 0.021
Minimum age in population: 42.36793435364962
Maximum age in population: 46.96044375933707
Average age in population: 44.74628295794316
Median age in population: 44.78912298288196
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.09
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 31452765
--- Timings ---
Current time: 1529615281720 milliseconds
Total Time:         107.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.0 seconds, 41.9%
Fitness Testing:     50.5 seconds, 47.0%
Report:              11.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 51322.0
Test mean error for best: 25.66100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -38.3069380196
Correct output: -72.4601683407 | Program output: 9.5398316593  
Correct output: 40.4089903884  | Program output: 32.4089903884 
Correct output: -123.8848837001 | Program output: -105.8848837001
Correct output: -5.5572409402  | Program output: 26.4427590598 
Correct output: 132.8237835559 | Program output: 64.8237835559 
Correct output: -23.655607388  | Program output: -100.655607388
Correct output: 85.8723285783  | Program output: 45.8723285783 
Correct output: 7.3833649895   | Program output: -60.6166350105
Correct output: 66.4021182413  | Program output: 17.4021182413 
Correct output: -23.7801401349 | Program output: -30.7801401349
Correct output: -167.2900974766 | Program output: -83.2900974766
Correct output: 20.9384936831  | Program output: 12.9384936831 
Correct output: 37.1112256226  | Program output: -6.8887743774 
Correct output: 119.9031170612 | Program output: 73.9031170612 
Correct output: 20.2024981978  | Program output: -15.7975018022
Correct output: 1.7569467681   | Program output: 49.7569467681 
Correct output: -90.6328406884 | Program output: -2.6328406884 
Correct output: -160.4267163377 | Program output: -86.4267163377
Correct output: -111.361734735 | Program output: -79.361734735 
Correct output: -6.0571083203  | Program output: -55.0571083203
Correct output: -112.796431795 | Program output: -75.796431795 
Correct output: -148.6073793052 | Program output: -89.6073793052
Correct output: 142.6041620334 | Program output: 70.6041620334 
Correct output: -89.5489990384 | Program output: -43.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_dup} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_rot float_dec in2 integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_dup integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [74.0 3 82.0 12 8.0 2 18.0 2 32.0 11 68.0 3 77.0 3 40.0 1 68.0 12 49.0 2 7.0 2 84.0 3 8.0 2 44.0 12 46.0 3 36.0 13 48.0 2 88.0 2 74.0 2 32.0 3 49.0 2 37.0 3 59.0 3 72.0 3 46.0 2]
Total: 1354.0
Mean: 27.08
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2747.1150539999976
Median total errors in population: 1409.0
Error averages by case: (127.21633089999993 4.037 132.21703039999994 12.875 62.347181599999956 3.092 77.8341497 2.72 88.78444100000006 11.165 125.42126359999993 3.794 128.79141500000003 3.74 97.8982425000001 3.033 120.43189490000005 12.099 102.91223590000004 3.131 58.40503250000004 2.182 138.81811189999996 3.974 59.48694740000001 3.115 96.25947260000007 12.31 105.30373959999997 3.751 88.77514539999997 12.638 103.20039189999993 2.731 136.60670309999983 6.892 129.52693069999995 3.981 89.85183269999996 3.937 103.72399329999996 2.707 94.36057459999994 3.646 115.60859610000004 3.879 129.52568130000003 4.056 101.4467154 2.876)
Error minima by case: (20.3069 2 14.1534 8 0.0 0 15.0 1 0.4754 8 4.1762 2 18.9098 2 0.1277 1 5.9928 9 11.5448 1 0.0 0 4.7099 2 0.0 0 1.8888 8 21.9031 2 10.7975 10 0.2431 1 4.0192 1 0.5733 2 24.7481 2 1.8563 1 25.7964 2 17.6074 2 2.3958 2 2.9354 1)
Average genome size in population (length): 47.23
Average program size in population (points): 48.23
Average percent parens in population: 0.021
Minimum age in population: 43.48954422026873
Maximum age in population: 48.23239060491323
Average age in population: 46.31230239832588
Median age in population: 46.35367113677785
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 84
Genome diversity (% unique Plush genomes):	 0.686
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.686
Total error diversity:				 0.119
Error (vector) diversity:			 0.134
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 32633615
--- Timings ---
Current time: 1529615285429 milliseconds
Total Time:         111.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.7 seconds, 42.0%
Fitness Testing:     52.1 seconds, 46.8%
Report:              12.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 49543.50010000003
Test mean error for best: 24.77175
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -34.3069380196
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -101.8848837001
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 61.8237835559 
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 42.8723285783 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 14.4021182413 
Correct output: -23.7801401349 | Program output: -26.7801401349
Correct output: -167.2900974766 | Program output: -79.2900974766
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 70.9031170612 
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: -0.5313627537 
Correct output: -160.4267163377 | Program output: -82.4267163377
Correct output: -111.361734735 | Program output: -75.361734735 
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -71.796431795 
Correct output: -148.6073793052 | Program output: -85.6073793052
Correct output: 142.6041620334 | Program output: 67.6041620334 
Correct output: -89.5489990384 | Program output: -39.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [78.0 3 74.4602 11 38.409 11 22.0 2 7.5572 11 71.0 3 22.6556 10 43.0 2 8.3834 12 52.0 2 3.0 1 88.0 3 18.9385 11 38.1112 12 49.0 3 21.2025 11 0.2431 11 90.1015 10 78.0 3 36.0 3 5.0571 10 41.0 2 63.0 3 75.0 3 50.0 1]
Total: 1228.1192999999998
Mean: 24.562386
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2534.665212499998
Median total errors in population: 1389.0
Error averages by case: (119.45627099999993 3.995 122.35438029999995 12.839 54.99176419999996 3.139 69.41971329999994 2.539 77.4454707000001 11.133 117.45444009999991 3.563 120.23272920000001 3.628 89.73003340000004 3.074 112.43989000000005 12.092 94.91729079999999 3.035 51.85612109999999 2.125 130.79442609999998 3.918 52.97044069999999 3.143 87.04128480000007 12.06 96.5098706 3.587 82.04422489999996 12.957 91.43842679999992 2.724 127.72076819999994 5.173 121.43571399999995 3.917 81.61661420000003 3.846 94.5809408 2.747 86.19023089999999 3.691 107.4620348 3.71 121.60435580000002 4.039 93.3327758 2.951)
Error minima by case: (18.3069 2 20.2717 9 0.0 0 11.0 1 0.0759 9 0.1762 2 18.9859 2 1.8723 1 6.2048 10 10.884 1 0.0 0 8.7099 2 0.0 0 18.4069 9 23.9031 2 19.2221 8 0.2431 1 12.3672 1 1.5733 2 23.3617 2 1.3456 1 14.7964 2 6.6074 2 1.6042 2 10.451 1)
Average genome size in population (length): 48.813
Average program size in population (points): 49.813
Average percent parens in population: 0.020
Minimum age in population: 45.36685518175364
Maximum age in population: 49.79675063723698
Average age in population: 47.67619685246935
Median age in population: 47.69415223225951
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 112
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 112
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.125
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 33854015
--- Timings ---
Current time: 1529615288764 milliseconds
Total Time:         114.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.1 seconds, 41.9%
Fitness Testing:     53.7 seconds, 46.9%
Report:              12.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 49565.51490000003
Test mean error for best: 24.78276
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -35.3069380196
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -102.8848837001
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 60.8237835559 
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 41.8723285783 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 13.4021182413 
Correct output: -23.7801401349 | Program output: -27.7801401349
Correct output: -167.2900974766 | Program output: -80.2900974766
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 69.9031170612 
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: -1.2656813769 
Correct output: -160.4267163377 | Program output: -83.4267163377
Correct output: -111.361734735 | Program output: -76.361734735 
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -72.796431795 
Correct output: -148.6073793052 | Program output: -86.6073793052
Correct output: 142.6041620334 | Program output: 66.6041620334 
Correct output: -89.5489990384 | Program output: -40.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_mult} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult float_dec integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_swap float_mult integer_max in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [77.0 3 74.4602 11 38.409 11 21.0 2 7.5572 11 72.0 3 22.6556 10 44.0 2 8.3834 12 53.0 2 4.0 1 87.0 3 18.9385 11 38.1112 12 50.0 2 21.2025 11 0.2431 11 89.3672 11 77.0 3 35.0 3 5.0571 10 40.0 2 62.0 3 76.0 3 49.0 2]
Total: 1226.3849999999998
Mean: 24.5277
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2968.5836989999966
Median total errors in population: 1382.0
Error averages by case: (135.72262879999988 4.16 139.34574260000002 12.796 71.78287569999995 3.337 86.96277120000005 2.862 95.55508040000011 11.145 135.1178395999999 3.822 136.5746444 3.83 107.85168090000013 3.092 129.33786850000016 12.103 112.39364910000013 3.15 69.97380050000002 2.428 147.251209 4.116 68.81712120000003 3.374 105.52035310000005 12.043 115.22967379999992 3.862 99.07496799999994 12.975 109.67685609999994 3.043 143.6878566 4.674 138.10131929999991 4.039 98.73192849999991 4.032 112.0239068999999 2.975 103.2586793999999 3.934 124.32413600000002 3.888 139.2247217 4.139 110.09838769999999 3.125)
Error minima by case: (5.1796 2 20.5398 8 1.0 1 14.0 1 0.3283 9 6.8238 2 9.2875 2 1.687 1 6.0368 8 17.7832 1 0.0 0 24.7099 2 1.0 1 2.8888 9 35.7178 2 11.7975 7 0.2431 1 8.3672 1 11.5733 2 4.2344 2 4.0571 1 5.669 2 6.6074 2 8.6042 2 4.737 1)
Average genome size in population (length): 50.214
Average program size in population (points): 51.214
Average percent parens in population: 0.020
Minimum age in population: 46.8889966243878
Maximum age in population: 51.06747583462857
Average age in population: 49.12613803177187
Median age in population: 49.19477585074492
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.126
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 35109390
--- Timings ---
Current time: 1529615292113 milliseconds
Total Time:         117.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.4 seconds, 41.9%
Fitness Testing:     55.4 seconds, 46.9%
Report:              13.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 49530.08890000002
Test mean error for best: 24.76504
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -32.3069380196
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -99.8848837001
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 63.8237835559 
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 44.8723285783 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 16.4021182413 
Correct output: -23.7801401349 | Program output: -24.7801401349
Correct output: -167.2900974766 | Program output: -77.2900974766
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 72.9031170612 
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: 0.6328406884  
Correct output: -160.4267163377 | Program output: -80.4267163377
Correct output: -111.361734735 | Program output: -73.361734735 
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -69.796431795 
Correct output: -148.6073793052 | Program output: -83.6073793052
Correct output: 142.6041620334 | Program output: 69.6041620334 
Correct output: -89.5489990384 | Program output: -37.5489990384
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction print_integer} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_swap} {:instruction float_frominteger} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 print_integer integer_max integer_yank integer_add float_dec float_yankdup integer_add float_dec float_swap float_frominteger in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [80.0 2 74.4602 11 38.409 11 24.0 3 7.5572 11 69.0 2 22.6556 10 41.0 2 8.3834 12 50.0 1 1.0 1 90.0 2 18.9385 11 38.1112 12 47.0 3 21.2025 11 0.2431 11 91.2657 2 80.0 2 38.0 3 5.0571 10 43.0 3 65.0 3 73.0 3 52.0 2]
Total: 1223.2835
Mean: 24.46567
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2485.9762375999967
Median total errors in population: 1370.0
Error averages by case: (116.47384339999992 3.876 122.53213149999998 12.609 52.42670169999994 3.3 66.75242309999994 2.586 76.72391030000006 11.071 115.4491549999999 3.783 117.63728869999996 3.732 87.10458040000007 2.62 109.99641520000006 12.091 94.02813530000005 2.937 50.912106700000045 2.25 128.22088949999997 3.796 49.76693369999998 3.332 88.23400630000003 12.02 94.82648269999994 3.819 80.62111939999997 12.932 90.57575759999996 3.038 126.95245339999992 4.173 118.88452389999996 3.68 78.93200149999998 3.772 92.54286 2.909 83.38494709999998 3.702 104.94154620000003 3.652 119.53616590000006 3.875 90.11585909999998 2.849)
Error minima by case: (21.3069 2 2.4698 2 0.0 0 13.0 1 0.5572 2 1.1762 2 6.7125 1 7.8723 1 6.3834 10 21.5979 1 0.0 0 2.7099 2 0.0 0 3.1112 9 29.9031 2 5.7975 9 0.2431 1 1.59 1 3.4267 2 22.3189 2 1.0571 1 14.7964 2 6.6074 2 0.6042 2 0.5062 1)
Average genome size in population (length): 51.166
Average program size in population (points): 52.166
Average percent parens in population: 0.019
Minimum age in population: 48.19766450300813
Maximum age in population: 52.48542538413312
Average age in population: 50.69317655945371
Median age in population: 50.74268057168229
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.635
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.635
Total error diversity:				 0.142
Error (vector) diversity:			 0.169
Behavioral diversity:				 0.17
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 36388615
--- Timings ---
Current time: 1529615295636 milliseconds
Total Time:         121.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.9 seconds, 41.9%
Fitness Testing:     57.0 seconds, 46.9%
Report:              13.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 49569.72820000001
Test mean error for best: 24.78486
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 12.5398316593 
Correct output: 40.4089903884  | Program output: 35.4089903884 
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 29.4427590598 
Correct output: 132.8237835559 | Program output: 60.8237835559 
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 41.8723285783 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 13.4021182413 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 15.9384936831 
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 69.9031170612 
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 52.7569467681 
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 66.6041620334 
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [50.6931 9 85.0 12 5.0 2 72.8849 10 35.0 11 72.0 3 22.6556 10 44.0 2 8.3834 12 53.0 2 22.7801 10 15.7099 10 5.0 2 38.1112 12 50.0 2 21.2025 11 51.0 2 92.6328 12 2.5733 12 32.3617 11 5.0571 10 23.7964 9 15.6074 11 76.0 3 17.451 9]
Total: 1116.9003999999998
Mean: 22.338009
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2600.9646842999973
Median total errors in population: 1354.0
Error averages by case: (121.81927619999996 4.129 126.12540960000005 12.217 63.365487199999905 4.205 73.83422989999997 3.113 78.85904700000009 10.976 120.8709977999999 4.062 115.20243609999983 4.53 92.76469310000009 2.981 107.25786510000025 12.017 98.54441830000003 3.176 56.53839700000008 2.685 133.0775894 4.093 58.40802609999983 4.209 91.24205690000001 12.023 100.47488799999994 4.05 82.63426729999992 12.656 90.54771930000005 4.179 131.65266349999996 4.968 123.8737628999999 3.955 84.79215769999999 3.984 91.44485620000012 3.874 89.3438434 3.891 110.37260899999994 3.98 125.10043010000004 4.078 95.73055719999999 3.056)
Error minima by case: (20.3069 2 20.2717 9 1.0 1 12.0 1 0.2106 8 2.8238 2 3.7125 2 0.8723 1 6.0988 9 22.4021 1 0.0 0 4.7099 2 1.0 1 1.8888 9 22.9031 2 10.7975 8 0.2431 1 9.3672 1 0.4267 2 26.0 2 0.0842 1 23.7964 2 15.6074 2 4.6042 2 6.451 1)
Average genome size in population (length): 52.548
Average program size in population (points): 53.548
Average percent parens in population: 0.019
Minimum age in population: 49.79533162945881
Maximum age in population: 54.20124257710995
Average age in population: 52.22799256069108
Median age in population: 52.24437166907592
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.649
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.649
Total error diversity:				 0.168
Error (vector) diversity:			 0.195
Behavioral diversity:				 0.196
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 37702340
--- Timings ---
Current time: 1529615299163 milliseconds
Total Time:         125.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.4 seconds, 41.9%
Fitness Testing:     58.7 seconds, 47.0%
Report:              13.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 49569.72820000001
Test mean error for best: 24.78486
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 12.5398316593 
Correct output: 40.4089903884  | Program output: 35.4089903884 
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 29.4427590598 
Correct output: 132.8237835559 | Program output: 60.8237835559 
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 41.8723285783 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 13.4021182413 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 15.9384936831 
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 69.9031170612 
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 52.7569467681 
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 66.6041620334 
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [50.6931 9 85.0 12 5.0 2 72.8849 10 35.0 11 72.0 3 22.6556 10 44.0 2 8.3834 12 53.0 2 22.7801 10 15.7099 10 5.0 2 38.1112 12 50.0 2 21.2025 11 51.0 2 92.6328 12 2.5733 12 32.3617 11 5.0571 10 23.7964 9 15.6074 11 76.0 3 17.451 9]
Total: 1116.9003999999998
Mean: 22.338009
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2714.560269100003
Median total errors in population: 1324.0
Error averages by case: (128.26857219999994 4.528 125.60944260000048 11.68 82.10439629999982 7.671 84.56687620000004 3.74 74.01467060000054 10.974 130.91523169999985 4.534 100.14733799999932 7.144 102.45373560000016 3.628 90.6570079000004 11.939 105.54261650000018 3.603 61.39085830000015 2.99 140.3125013 4.495 69.37855349999927 7.701 93.12128769999981 11.934 111.12132559999993 4.424 81.1736910999997 11.946 76.94359930000013 7.708 135.85065329999986 7.805 131.37504669999987 4.556 93.67244359999985 4.465 80.20803260000018 6.819 98.06295760000008 4.055 118.75442689999987 4.487 135.45188000000007 4.495 102.83212399999998 3.31)
Error minima by case: (20.3069 2 8.0 2 0.4654 1 11.0 1 0.4159 2 63.0 2 2.7125 1 35.0 1 6.3509 8 44.0 1 0.0 0 4.7099 2 1.0 1 30.2225 2 41.0 2 4.405 9 0.0 0 8.0 1 0.4267 2 25.0 2 0.0571 1 23.7964 2 15.6074 2 67.0 2 6.451 1)
Average genome size in population (length): 50.645
Average program size in population (points): 51.645
Average percent parens in population: 0.020
Minimum age in population: 51.14146916265599
Maximum age in population: 55.86043688043719
Average age in population: 53.60127899576799
Median age in population: 53.62377179534815
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.594
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.594
Total error diversity:				 0.219
Error (vector) diversity:			 0.24
Behavioral diversity:				 0.24
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 38968590
--- Timings ---
Current time: 1529615302503 milliseconds
Total Time:         128.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.8 seconds, 42.0%
Fitness Testing:     60.2 seconds, 46.9%
Report:              14.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 49569.72820000001
Test mean error for best: 24.78486
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 12.5398316593 
Correct output: 40.4089903884  | Program output: 35.4089903884 
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 29.4427590598 
Correct output: 132.8237835559 | Program output: 60.8237835559 
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 41.8723285783 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 13.4021182413 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 15.9384936831 
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 69.9031170612 
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 52.7569467681 
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 66.6041620334 
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction float_min} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_yankdup integer_add in1 float_min float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [50.6931 9 85.0 12 5.0 2 72.8849 10 35.0 11 72.0 3 22.6556 10 44.0 2 8.3834 12 53.0 2 22.7801 10 15.7099 10 5.0 2 38.1112 12 50.0 2 21.2025 11 51.0 2 92.6328 12 2.5733 12 32.3617 11 5.0571 10 23.7964 9 15.6074 11 76.0 3 17.451 9]
Total: 1116.9003999999998
Mean: 22.338009
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2528.6010527000035
Median total errors in population: 1228.1192999999998
Error averages by case: (124.10007559999995 4.547 120.24899880000082 11.345 83.87041659999973 10.281 80.10402709999997 3.948 61.4076079000011 11.047 125.3510196999998 5.074 74.36778599999892 9.252 95.28950760000025 4.21 64.11133289999927 11.926 99.48026300000018 4.11 54.49561290000014 2.852 137.95770509999997 4.638 66.32148749999863 10.368 84.75668609999965 11.93 105.60195899999994 4.779 69.96301119999958 11.36 58.058731999999765 10.287 132.36193279999978 8.996 129.01468149999985 4.688 89.26160770000004 4.653 57.89451529999976 9.176 93.7505627 4.123 115.91877339999999 4.637 130.1426933000001 4.955 98.16905699999991 3.419)
Error minima by case: (22.3069 2 11.0 2 1.0 1 14.0 1 0.442 1 1.1762 2 3.2875 1 2.8723 1 7.1648 2 22.4021 1 0.0 0 4.7099 2 1.0 1 1.8888 2 24.9031 2 10.7975 2 0.0 0 9.3672 1 0.4267 2 28.0 2 0.0571 1 23.7964 2 15.6074 2 0.6042 2 6.451 1)
Average genome size in population (length): 48.468
Average program size in population (points): 49.468
Average percent parens in population: 0.020
Minimum age in population: 52.7334842273267
Maximum age in population: 57.07438322593225
Average age in population: 55.02336646034686
Median age in population: 55.09923991019605
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.59
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.59
Total error diversity:				 0.212
Error (vector) diversity:			 0.229
Behavioral diversity:				 0.23
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 40180415
--- Timings ---
Current time: 1529615305789 milliseconds
Total Time:         131.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.3 seconds, 42.0%
Fitness Testing:     61.6 seconds, 46.8%
Report:              14.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 45133.85880000001
Test mean error for best: 22.56693
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -65.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -200.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 126.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 88.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 31.8042364827 
Correct output: -23.7801401349 | Program output: -50.5602802697
Correct output: -167.2900974766 | Program output: -155.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 144.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -161.8534326754
Correct output: -111.361734735 | Program output: -147.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -140.59286359 
Correct output: -148.6073793052 | Program output: -168.2147586103
Correct output: 142.6041620334 | Program output: 138.2083240669
Correct output: -89.5489990384 | Program output: -76.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_dup_items float_dup integer_yank integer_add float_dec float_yankdup integer_add float_dec float_dec float_frominteger float_dec float_yankdup float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_yankdup integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [46.6931 10 72.4602 12 40.409 10 76.8849 11 5.5572 11 6.1762 12 20.6556 9 2.8723 10 10.3834 11 34.5979 10 26.7801 10 11.7099 10 20.9385 11 40.1112 12 24.9031 11 23.2025 11 1.7569 11 90.6328 11 1.4267 11 36.3617 11 3.0571 10 27.7964 9 19.6074 10 4.3958 10 13.451 9]
Total: 925.8208999999998
Mean: 18.516418
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2498.7336291999977
Median total errors in population: 1226.3849999999998
Error averages by case: (121.89770109999996 4.486 116.2458133000008 11.33 82.10022779999969 10.249 78.36567449999995 3.87 58.15856190000068 10.995 127.28417879999981 5.054 75.6780015999989 9.269 97.71059890000026 4.229 65.59135789999932 11.813 100.21778000000023 4.067 52.50181990000009 2.955 135.46657649999997 4.574 63.99956109999877 10.361 82.97046219999966 11.926 107.97945869999994 4.858 69.4944981999996 11.332 54.72651999999979 10.3 129.29860059999965 6.25 126.36068819999993 4.588 87.22195989999993 4.654 58.92621470000004 9.215 91.69891870000002 4.381 113.36254169999994 4.541 132.11360760000014 4.867 95.60530539999992 3.593)
Error minima by case: (20.3069 2 11.0 2 0.9644 1 14.0 1 0.3669 1 2.1762 2 0.7125 1 2.8723 1 6.2684 9 22.4021 1 0.0 0 7.7099 2 0.4661 1 1.8888 2 24.9031 2 4.7975 8 0.0 0 9.3672 1 0.5733 2 28.0 2 0.0571 1 21.7964 2 13.6074 2 0.3958 2 9.451 1)
Average genome size in population (length): 50.389
Average program size in population (points): 51.389
Average percent parens in population: 0.020
Minimum age in population: 54.00557422509883
Maximum age in population: 58.30445702328871
Average age in population: 56.41428576370986
Median age in population: 56.45041510244482
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.662
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.662
Total error diversity:				 0.222
Error (vector) diversity:			 0.254
Behavioral diversity:				 0.254
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 41440240
--- Timings ---
Current time: 1529615309081 milliseconds
Total Time:         134.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.8 seconds, 42.1%
Fitness Testing:     63.1 seconds, 46.8%
Report:              14.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 44693.59040000006
Test mean error for best: 22.34680
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 130.6475671118
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 92.7446571566 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 35.8042364827 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 148.8062341223
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 142.2083240669
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_dec integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [50.6931 9 74.4602 11 38.409 11 72.8849 10 7.5572 11 2.1762 11 22.6556 10 6.8723 11 8.3834 12 30.5979 10 22.7801 10 15.7099 10 18.9385 11 38.1112 12 28.9031 11 21.2025 11 0.2431 11 92.6328 12 2.5733 12 32.3617 11 5.0571 10 23.7964 9 15.6074 11 0.3958 8 17.451 9]
Total: 914.4536999999999
Mean: 18.289074
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2540.208274999997
Median total errors in population: 1213.5315999999998
Error averages by case: (121.4883176000001 5.137 120.06329850000074 11.405 80.38870749999973 9.513 84.55239200000004 4.432 62.2138081000009 10.969 127.84772019999984 5.122 78.01071059999894 9.199 98.42756500000019 4.214 68.47219299999979 11.738 102.75740250000015 4.158 59.736136700000316 3.988 130.69454840000003 5.228 63.488970199998825 9.657 88.13059279999965 11.93 108.56193379999986 4.962 73.54917569999961 11.249 60.89721009999984 9.632 132.26708110000018 5.215 121.50951099999999 5.287 88.7057108999998 5.258 60.90384459999955 9.263 92.12908400000022 5.053 110.88553319999971 5.13 132.85056090000012 4.653 95.04526660000002 4.239)
Error minima by case: (21.3069 2 15.0 2 1.0 1 14.0 1 0.0759 1 0.1762 2 0.0 0 1.1277 1 6.3643 9 22.4021 1 0.0 0 2.7099 2 0.5339 1 1.8888 2 20.9031 2 10.7975 1 0.0 0 9.3672 1 0.4267 2 28.0 2 0.0 0 21.7964 2 13.6074 2 0.3958 2 4.451 1)
Average genome size in population (length): 53.301
Average program size in population (points): 54.301
Average percent parens in population: 0.019
Minimum age in population: 55.58325211887131
Maximum age in population: 59.63899270204274
Average age in population: 57.7830076694709
Median age in population: 57.81140853926627
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.657
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.657
Total error diversity:				 0.249
Error (vector) diversity:			 0.291
Behavioral diversity:				 0.291
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 42772890
--- Timings ---
Current time: 1529615312323 milliseconds
Total Time:         138.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.2 seconds, 42.1%
Fitness Testing:     64.6 seconds, 46.8%
Report:              15.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 44693.59040000006
Test mean error for best: 22.34680
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 130.6475671118
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 92.7446571566 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 35.8042364827 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 148.8062341223
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 142.2083240669
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_dec integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [50.6931 9 74.4602 11 38.409 11 72.8849 10 7.5572 11 2.1762 11 22.6556 10 6.8723 11 8.3834 12 30.5979 10 22.7801 10 15.7099 10 18.9385 11 38.1112 12 28.9031 11 21.2025 11 0.2431 11 92.6328 12 2.5733 12 32.3617 11 5.0571 10 23.7964 9 15.6074 11 0.3958 8 17.451 9]
Total: 914.4536999999999
Mean: 18.289074
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2874.8572546000014
Median total errors in population: 1209.0177999999999
Error averages by case: (127.16883680000032 7.184 135.25441430000043 11.753 90.8514277999998 7.421 114.71302880000067 7.108 86.36875149999995 11.026 138.92872009999988 5.676 97.27223739999883 9.507 111.76865880000038 4.699 86.62148750000105 11.816 113.7841598000001 4.671 77.91704910000097 6.829 125.17132500000052 7.483 76.6644577999997 7.532 96.67738309999976 11.809 122.33293869999984 5.336 84.50183179999955 11.286 91.0774033000004 7.609 141.95178270000042 7.916 115.54988710000006 8.136 103.41551789999916 7.72 78.85118780000043 9.48 102.62993670000094 7.011 112.88756129999896 7.733 143.4739516 5.19 100.59031790000022 6.502)
Error minima by case: (6.9208 1 13.0 2 0.0 0 12.0 1 0.2514 1 0.1762 2 3.0569 1 1.1277 1 6.3576 2 3.8116 1 0.0 0 2.7099 2 0.0 0 9.0772 2 0.8116 2 12.405 1 0.0 0 13.3672 1 0.4267 1 16.8267 2 0.054 1 10.7964 2 2.6074 2 0.3958 2 4.451 1)
Average genome size in population (length): 52.79
Average program size in population (points): 53.79
Average percent parens in population: 0.019
Minimum age in population: 57.03211115728118
Maximum age in population: 61.32832133504235
Average age in population: 59.21295010562378
Median age in population: 59.27239852029288
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.641
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.641
Total error diversity:				 0.28
Error (vector) diversity:			 0.316
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 44092790
--- Timings ---
Current time: 1529615315760 milliseconds
Total Time:         141.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.6 seconds, 42.2%
Fitness Testing:     66.2 seconds, 46.8%
Report:              15.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 44693.59040000006
Test mean error for best: 22.34680
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 130.6475671118
Correct output: -23.655607388  | Program output: -1.0          
Correct output: 85.8723285783  | Program output: 92.7446571566 
Correct output: 7.3833649895   | Program output: -1.0          
Correct output: 66.4021182413  | Program output: 35.8042364827 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -1.0          
Correct output: 119.9031170612 | Program output: 148.8062341223
Correct output: 20.2024981978  | Program output: -1.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -1.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 142.2083240669
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_dec integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [50.6931 9 74.4602 11 38.409 11 72.8849 10 7.5572 11 2.1762 11 22.6556 10 6.8723 11 8.3834 12 30.5979 10 22.7801 10 15.7099 10 18.9385 11 38.1112 12 28.9031 11 21.2025 11 0.2431 11 92.6328 12 2.5733 12 32.3617 11 5.0571 10 23.7964 9 15.6074 11 0.3958 8 17.451 9]
Total: 914.4536999999999
Mean: 18.289074
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2416.2616823999997
Median total errors in population: 1116.9003999999998
Error averages by case: (102.26379080000036 9.247 123.01313060000024 12.006 64.88805459999988 5.573 119.05182980000103 9.763 72.74639640000007 10.985 112.24517650000016 6.295 82.77273099999883 9.718 88.52002090000032 5.368 70.39407559999992 11.756 96.6235237999997 5.219 67.02955420000136 9.366 85.95600120000093 9.745 57.58968839999965 5.739 84.5136061999997 11.925 100.77221529999984 5.75 71.39595059999961 11.262 81.85712529999992 5.691 132.18844030000176 11.219 75.6348832999996 11.085 88.05229789999936 10.38 62.78203679999971 9.739 82.22920840000064 8.927 82.85713179999938 10.342 115.73393979999983 5.762 73.56487290000042 8.724)
Error minima by case: (1.9208 2 6.5398 2 0.0 0 13.0 1 0.0 0 0.1762 2 0.0 0 0.1277 1 3.6166 8 4.2064 1 0.0 0 6.7099 1 0.0 0 11.8888 2 19.9031 2 19.2025 1 0.2431 1 2.6328 1 0.4267 2 27.0 2 0.0 0 18.7964 2 10.6074 2 0.1331 2 8.451 1)
Average genome size in population (length): 48.851
Average program size in population (points): 49.851
Average percent parens in population: 0.020
Minimum age in population: 58.66164625637612
Maximum age in population: 62.54378398216068
Average age in population: 60.76706794014274
Median age in population: 60.79860040769563
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 78
Genome diversity (% unique Plush genomes):	 0.595
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 78
Syntactic diversity (% unique Push programs):	 0.595
Total error diversity:				 0.289
Error (vector) diversity:			 0.311
Behavioral diversity:				 0.312
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 45314065
--- Timings ---
Current time: 1529615319387 milliseconds
Total Time:         145.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.1 seconds, 42.1%
Fitness Testing:     67.9 seconds, 46.8%
Report:              16.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 44692.602900000056
Test mean error for best: 22.34630
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -60.6138760391
Correct output: -72.4601683407 | Program output: 2.0           
Correct output: 40.4089903884  | Program output: 2.0           
Correct output: -123.8848837001 | Program output: -195.7697674002
Correct output: -5.5572409402  | Program output: 2.0           
Correct output: 132.8237835559 | Program output: 131.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 93.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 36.8042364827 
Correct output: -23.7801401349 | Program output: -45.5602802697
Correct output: -167.2900974766 | Program output: -150.5801949532
Correct output: 20.9384936831  | Program output: 2.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 149.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 2.0           
Correct output: -90.6328406884 | Program output: 2.0           
Correct output: -160.4267163377 | Program output: -156.8534326754
Correct output: -111.361734735 | Program output: -142.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -135.59286359 
Correct output: -148.6073793052 | Program output: -163.2147586103
Correct output: 142.6041620334 | Program output: 143.2083240669
Correct output: -89.5489990384 | Program output: -71.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_mod} {:instruction integer_mult} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float} {:instruction in1} {:instruction integer_max} {:instruction float_inc})
Best program: (in1 float_mult integer_max integer_stackdepth float_mod float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec in2 integer_add in2 integer_add float_dec integer_add float_dec integer_dec integer_rot float_dec float_yankdup integer_add float_dec integer_yank integer_add float_dec float_mod integer_mult -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float in1 integer_max float_inc)
Errors: [51.6931 10 74.4602 11 38.409 11 71.8849 10 7.5572 11 1.1762 11 21.6556 9 7.8723 11 9.3834 12 29.5979 9 21.7801 10 16.7099 10 18.9385 11 39.1112 12 29.9031 10 22.2025 11 0.2431 11 92.6328 12 3.5733 12 31.3617 11 4.0571 10 22.7964 9 14.6074 11 0.6042 9 18.451 9]
Total: 913.6620999999999
Mean: 18.273243
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2325.7272265999995
Median total errors in population: 1113.66815
Error averages by case: (99.26495580000046 9.844 116.43839100000051 11.767 74.58882319999972 8.462 118.8815911000013 10.364 62.508657600000745 10.96 93.18902620000048 9.309 82.61953179999884 9.974 76.93311740000071 8.477 70.50193419999975 11.631 90.63170699999954 8.116 67.27283200000173 9.887 79.74549720000093 10.232 60.978263799999105 8.811 82.47921499999971 11.93 95.07704989999968 8.852 70.73230979999961 11.251 65.61632179999995 8.779 127.98192720000188 11.409 69.40730299999952 11.528 85.59652779999934 10.887 62.79917159999958 10.176 79.3073220000005 9.352 78.43279409999964 10.786 95.22453419999954 7.985 69.56142190000048 9.188)
Error minima by case: (5.9208 2 11.4889 2 0.0 0 16.3797 2 0.5572 1 0.1762 2 4.4417 2 0.1277 1 1.6166 9 15.6483 1 0.0 0 4.7099 2 0.0 0 0.8888 2 17.9031 2 0.3317 2 0.2431 1 1.3672 2 0.4267 2 17.3617 2 0.0571 1 8.7964 2 0.6074 2 0.3958 2 5.6 1)
Average genome size in population (length): 47.377
Average program size in population (points): 48.377
Average percent parens in population: 0.021
Minimum age in population: 59.76906397502171
Maximum age in population: 64.32897168706586
Average age in population: 62.31079933984783
Median age in population: 62.40654858192875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 118
Genome diversity (% unique Plush genomes):	 0.591
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 118
Syntactic diversity (% unique Push programs):	 0.591
Total error diversity:				 0.262
Error (vector) diversity:			 0.285
Behavioral diversity:				 0.285
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 46498615
--- Timings ---
Current time: 1529615322470 milliseconds
Total Time:         148.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.4 seconds, 42.0%
Fitness Testing:     69.4 seconds, 46.8%
Report:              16.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 44845.01760000007
Test mean error for best: 22.42251
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 130.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 92.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 35.8042364827 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 148.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 142.2083240669
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [50.6931 9 72.4602 12 40.409 10 72.8849 10 5.5572 11 2.1762 11 20.6556 9 6.8723 11 10.3834 11 30.5979 10 22.7801 10 15.7099 10 20.9385 11 40.1112 12 28.9031 11 23.2025 11 1.7569 11 90.6328 11 2.5733 12 32.3617 11 3.0571 10 23.7964 9 15.6074 11 0.3958 8 17.451 9]
Total: 912.9674999999999
Mean: 18.25935
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2401.6598604000096
Median total errors in population: 914.4536999999999
Error averages by case: (102.79586530000003 9.574 118.03155610000083 11.259 84.52128239999969 10.734 121.16701150000104 10.148 58.97113490000075 10.927 85.89542550000073 11.155 92.58020099999882 10.197 78.6804457000012 10.747 78.90259780000018 11.824 92.91792649999937 9.948 69.78377020000157 9.82 82.36361730000094 10.167 66.23813009999874 11.001 86.09871299999966 11.968 101.21608539999994 10.806 74.28867169999958 11.246 55.98664979999985 10.904 134.22409420000204 11.587 71.06483019999905 11.593 87.75465979999942 10.826 72.77196559999999 10.268 81.12767240000059 9.225 79.83130539999962 10.827 86.57616239999946 9.016 72.98508620000044 9.118)
Error minima by case: (5.9208 2 5.5398 2 0.8562 1 15.0 1 0.4428 1 0.1762 2 2.4921 2 0.1277 1 0.1501 7 1.7936 1 0.0 0 7.7099 2 1.0 1 2.4415 2 20.9031 2 4.0357 7 0.2431 1 1.6328 1 0.4267 2 23.3617 2 0.0571 1 14.7964 2 6.6074 2 0.3958 2 9.451 1)
Average genome size in population (length): 44.773
Average program size in population (points): 45.773
Average percent parens in population: 0.022
Minimum age in population: 60.76906397502171
Maximum age in population: 65.7947296512964
Average age in population: 63.65163854151295
Median age in population: 63.70341623003299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 254
Genome diversity (% unique Plush genomes):	 0.562
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 254
Syntactic diversity (% unique Push programs):	 0.562
Total error diversity:				 0.2
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.222
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 47618065
--- Timings ---
Current time: 1529615325592 milliseconds
Total Time:         151.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.8 seconds, 42.1%
Fitness Testing:     70.8 seconds, 46.7%
Report:              16.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 44845.01760000007
Test mean error for best: 22.42251
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -61.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -196.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 130.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 92.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 35.8042364827 
Correct output: -23.7801401349 | Program output: -46.5602802697
Correct output: -167.2900974766 | Program output: -151.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 148.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -157.8534326754
Correct output: -111.361734735 | Program output: -143.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -136.59286359 
Correct output: -148.6073793052 | Program output: -164.2147586103
Correct output: 142.6041620334 | Program output: 142.2083240669
Correct output: -89.5489990384 | Program output: -72.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [50.6931 9 72.4602 12 40.409 10 72.8849 10 5.5572 11 2.1762 11 20.6556 9 6.8723 11 10.3834 11 30.5979 10 22.7801 10 15.7099 10 20.9385 11 40.1112 12 28.9031 11 23.2025 11 1.7569 11 90.6328 11 2.5733 12 32.3617 11 3.0571 10 23.7964 9 15.6074 11 0.3958 8 17.451 9]
Total: 912.9674999999999
Mean: 18.25935
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2324.3677292999987
Median total errors in population: 914.4536999999999
Error averages by case: (99.50151970000022 9.668 112.72769930000081 11.131 81.39498129999967 10.933 116.81014700000111 10.147 53.55953190000083 10.928 83.60254790000073 11.182 92.3204832999988 10.238 79.5825593000015 10.994 78.54736080000065 11.932 93.6528938999987 9.993 65.82024890000179 9.9 77.68204360000094 10.22 62.81656679999853 11.054 81.83264649999968 11.98 102.15481349999935 10.858 71.70408329999958 11.206 49.42761739999977 10.929 129.26111080000243 11.734 66.05609629999844 11.814 82.59806199999943 10.88 73.31851790000032 10.26 75.89318200000058 9.281 74.1160634999995 10.967 84.28589939999989 9.041 69.23105300000049 9.2)
Error minima by case: (3.5046 2 11.5398 2 2.0 1 22.0 2 0.4428 1 0.1762 2 14.6532 2 0.5058 1 3.6166 9 7.2064 1 0.0 0 10.7099 2 2.0 1 11.8888 9 18.2853 2 18.2025 7 0.2431 1 0.6328 2 0.4267 2 23.3617 2 0.0571 1 14.7964 2 6.2386 2 0.3607 2 12.451 1)
Average genome size in population (length): 44.112
Average program size in population (points): 45.112
Average percent parens in population: 0.022
Minimum age in population: 61.76906397502171
Maximum age in population: 67.0662714834549
Average age in population: 65.0396576256259
Median age in population: 65.08508089895457
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 201
Genome diversity (% unique Plush genomes):	 0.537
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 201
Syntactic diversity (% unique Push programs):	 0.537
Total error diversity:				 0.154
Error (vector) diversity:			 0.175
Behavioral diversity:				 0.175
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 48720965
--- Timings ---
Current time: 1529615328728 milliseconds
Total Time:         154.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.2 seconds, 42.2%
Fitness Testing:     72.1 seconds, 46.7%
Report:              17.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 44773.687200000066
Test mean error for best: 22.38684
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -60.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -195.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 131.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 93.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 36.8042364827 
Correct output: -23.7801401349 | Program output: -45.5602802697
Correct output: -167.2900974766 | Program output: -150.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 149.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -156.8534326754
Correct output: -111.361734735 | Program output: -142.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -135.59286359 
Correct output: -148.6073793052 | Program output: -163.2147586103
Correct output: 142.6041620334 | Program output: 143.2083240669
Correct output: -89.5489990384 | Program output: -71.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add float_dec float_dec float_frominteger integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [51.6931 10 72.4602 12 40.409 10 71.8849 10 5.5572 11 1.1762 11 21.6556 9 7.8723 11 9.3834 12 29.5979 9 21.7801 10 16.7099 10 20.9385 11 39.1112 12 29.9031 10 22.2025 11 1.7569 11 90.6328 11 3.5733 12 31.3617 11 4.0571 10 22.7964 9 14.6074 11 0.6042 9 18.451 9]
Total: 912.1758999999998
Mean: 18.243519
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2100.317983799998
Median total errors in population: 913.6620999999999
Error averages by case: (93.7950544000001 9.941 108.05910910000085 11.198 76.71617479999968 10.884 109.84058530000085 10.045 48.880477300000535 10.951 69.64885070000066 11.003 76.90815999999883 10.147 64.86387570000116 10.926 62.20189449999941 11.851 76.94289259999967 9.686 59.138930300001306 9.774 71.751671100001 10.103 58.02384079999888 11.076 75.65347709999966 11.944 87.82727510000015 10.549 62.51487889999961 11.207 44.750269799999806 10.934 124.57650580000225 11.681 60.03864959999865 11.759 75.77585779999997 10.71 56.36295069999973 10.171 68.96235749999967 9.193 67.23356630000043 10.861 71.28052360000065 9.321 63.56315500000044 9.092)
Error minima by case: (6.9208 2 10.5398 2 1.0 2 2.8849 2 0.4428 1 0.1762 2 17.6556 1 2.8723 1 0.6166 9 7.2064 1 0.0 0 11.7099 2 1.0 2 8.8888 9 24.9031 2 6.405 7 0.2431 2 0.6328 1 0.5733 2 21.3617 2 0.0571 1 12.7964 2 4.6074 2 0.2894 3 13.451 1)
Average genome size in population (length): 43.778
Average program size in population (points): 44.778
Average percent parens in population: 0.022
Minimum age in population: 63.6339341007656
Maximum age in population: 68.4581590526729
Average age in population: 66.41059099867378
Median age in population: 66.4614357189999
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.586
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.586
Total error diversity:				 0.17
Error (vector) diversity:			 0.199
Behavioral diversity:				 0.199
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 49815465
--- Timings ---
Current time: 1529615331793 milliseconds
Total Time:         157.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.6 seconds, 42.2%
Fitness Testing:     73.5 seconds, 46.6%
Report:              17.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2252.270090099999
Median total errors in population: 913.6620999999999
Error averages by case: (97.78823200000005 9.961 111.60644180000087 11.291 81.88832249999966 10.753 116.10684700000097 10.1 52.88984500000047 10.943 76.39617860000062 11.036 84.6017980999988 10.002 73.52520130000109 10.972 71.5877703999999 11.732 85.52609169999961 9.796 64.47507700000148 9.831 76.50449060000099 10.187 63.281864399998796 11.019 82.40795659999965 11.957 96.33974389999972 10.686 69.62648869999958 11.206 49.33621409999988 10.994 127.92990460000217 11.547 64.9053669999987 11.841 81.45022159999986 10.759 65.76445989999978 10.22 74.46300719999998 9.258 72.58499680000007 10.941 77.65932790000055 9.271 68.19924140000042 9.122)
Error minima by case: (2.9208 2 11.5398 2 0.0 0 20.0 1 0.5572 1 0.1762 2 4.4235 1 3.8723 1 0.6166 8 4.2064 1 0.0 0 12.7099 2 0.0 0 8.8888 9 24.8701 2 10.097 7 0.2431 1 0.6328 1 0.4267 2 23.3617 2 1.0571 1 14.7964 2 6.6074 2 0.3958 2 14.451 1)
Average genome size in population (length): 42.851
Average program size in population (points): 43.851
Average percent parens in population: 0.023
Minimum age in population: 65.09644524766304
Maximum age in population: 70.15675114932887
Average age in population: 67.77518420795445
Median age in population: 67.83076343008041
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 121
Genome diversity (% unique Plush genomes):	 0.562
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.562
Total error diversity:				 0.163
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.185
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 50886865
--- Timings ---
Current time: 1529615335065 milliseconds
Total Time:         160.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.1 seconds, 42.3%
Fitness Testing:     74.9 seconds, 46.5%
Report:              17.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2138.870012000002
Median total errors in population: 912.9674999999999
Error averages by case: (93.78614679999983 9.69 107.65147000000081 11.712 78.70084069999967 10.317 110.52100150000075 10.056 48.3733961000004 10.975 71.06657080000072 10.944 80.2245276999988 9.648 68.8333597000009 10.803 68.0929885999994 11.426 83.57550069999935 9.799 60.78447240000119 9.83 70.77460090000098 10.177 60.05169409999891 11.001 79.06779519999968 11.917 90.49032910000012 10.686 66.05650869999961 11.237 46.42905260000011 10.953 124.02851110000213 11.222 58.895476399998934 11.847 76.16389360000012 10.847 60.520721299999934 10.168 69.34875889999961 9.242 66.95975790000048 10.945 71.78113169999995 8.846 63.31350550000047 9.09)
Error minima by case: (7.9208 2 8.6364 7 1.0 1 21.0 2 0.2514 8 0.1762 2 14.6556 2 4.8723 1 1.6166 9 8.2064 1 0.0 0 12.7099 2 1.0 1 4.1112 2 17.5174 2 4.7975 8 0.1995 1 0.6328 2 0.4267 2 17.7298 2 0.0571 2 18.7964 2 10.6074 2 0.3958 2 2.5549 1)
Average genome size in population (length): 40.145
Average program size in population (points): 41.145
Average percent parens in population: 0.024
Minimum age in population: 66.62755840767437
Maximum age in population: 71.09880742723428
Average age in population: 69.15541860324447
Median age in population: 69.1969095227005
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 292
Genome diversity (% unique Plush genomes):	 0.505
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 292
Syntactic diversity (% unique Push programs):	 0.505
Total error diversity:				 0.158
Error (vector) diversity:			 0.18
Behavioral diversity:				 0.18
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 51890565
--- Timings ---
Current time: 1529615338147 milliseconds
Total Time:         164.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.6 seconds, 42.4%
Fitness Testing:     76.2 seconds, 46.4%
Report:              18.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2093.5253503000054
Median total errors in population: 912.9674999999999
Error averages by case: (92.71795829999994 9.8 106.03460860000087 11.907 75.3149765999997 10.169 109.90795380000093 10.068 45.361745400000345 10.996 70.14401010000074 10.905 79.2198418999988 9.535 67.65674510000117 10.858 66.77968369999942 11.429 80.62487329999949 9.715 58.44230830000123 9.862 69.77371940000084 10.118 56.61642919999892 11.049 74.86801409999964 11.958 89.98828380000005 10.617 62.07686749999963 11.215 44.08912770000018 10.973 121.68074410000217 11.074 57.95091509999895 11.812 75.08389600000022 10.784 58.65975499999952 10.234 68.17845459999972 9.211 65.65840770000052 10.915 71.10923030000032 9.049 62.223800700000425 9.11)
Error minima by case: (4.9208 2 3.8628 9 1.0 1 21.0 2 0.2514 8 0.1762 2 16.6556 2 3.8723 1 1.6166 9 8.2064 1 0.0 0 12.7099 2 1.0 1 1.8888 2 25.9031 2 3.1939 9 0.2431 2 2.5282 8 0.4267 2 15.8267 2 0.0571 2 9.7964 2 1.6074 2 0.3958 2 3.6121 1)
Average genome size in population (length): 39.044
Average program size in population (points): 40.044
Average percent parens in population: 0.025
Minimum age in population: 67.96619538277352
Maximum age in population: 72.50842230165865
Average age in population: 70.61103122012064
Median age in population: 70.66674411779248
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 181
Genome diversity (% unique Plush genomes):	 0.475
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 181
Syntactic diversity (% unique Push programs):	 0.475
Total error diversity:				 0.152
Error (vector) diversity:			 0.174
Behavioral diversity:				 0.174
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 52866715
--- Timings ---
Current time: 1529615341112 milliseconds
Total Time:         167.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.9 seconds, 42.5%
Fitness Testing:     77.5 seconds, 46.4%
Report:              18.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_stackdepth float_mod integer_max float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 in2 float_dup integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2130.3443205999956
Median total errors in population: 912.1758999999998
Error averages by case: (91.62199910000005 10.208 107.67701510000084 11.872 76.45489059999971 10.21 110.77102690000123 10.142 47.148199900000634 10.979 71.10256270000045 10.986 87.03868689999875 9.626 69.46845690000144 10.909 73.17405470000011 11.595 81.69115899999944 9.702 58.296901100001655 9.961 67.80041530000096 10.266 57.702478699998494 11.105 76.63963249999966 11.92 92.05376590000004 10.618 65.90930879999964 11.218 46.477861800000234 11.022 123.00710840000235 11.086 56.16415609999844 12.007 74.35380509999979 10.895 64.99159979999928 10.293 67.10551559999973 9.344 63.71623830000058 11.076 72.83088480000099 9.398 61.54559660000047 9.163)
Error minima by case: (1.9208 2 8.0 2 11.803 4 21.0 2 0.0888 2 0.1762 2 16.6556 2 4.8723 1 0.3834 8 7.1958 1 0.0 0 13.7099 2 5.3128 4 1.1112 2 26.9031 2 7.7975 2 0.2431 5 2.6328 1 0.5733 2 19.3617 2 0.0571 2 10.7964 2 2.6074 2 0.3958 2 8.7297 2)
Average genome size in population (length): 38.99
Average program size in population (points): 39.99
Average percent parens in population: 0.025
Minimum age in population: 68.96619538277352
Maximum age in population: 73.8888874474881
Average age in population: 72.03953509933547
Median age in population: 72.08418273797776
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 101
Genome diversity (% unique Plush genomes):	 0.517
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 101
Syntactic diversity (% unique Push programs):	 0.517
Total error diversity:				 0.155
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 53841515
--- Timings ---
Current time: 1529615344208 milliseconds
Total Time:         170.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.3 seconds, 42.6%
Fitness Testing:     78.8 seconds, 46.3%
Report:              18.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_shove float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1887.941864099999
Median total errors in population: 912.1758999999998
Error averages by case: (85.94519960000004 9.943 99.07801350000088 11.83 69.32297399999969 10.182 101.24840420000076 9.582 38.00821760000006 10.941 59.01026859999989 10.814 72.06980189999881 9.382 58.52416630000095 10.437 58.35696149999948 11.632 68.57695910000018 9.681 48.900602600000944 9.375 62.74695930000086 9.959 50.01578519999917 11.05 67.28665199999959 11.921 80.63191079999999 10.608 54.49166109999962 11.128 36.54398170000025 10.958 115.18073840000193 11.047 50.82657489999898 11.68 66.2963931000007 10.634 51.251883099999894 10.111 59.28178869999944 9.08 56.612794200000586 10.773 61.4794654000009 9.247 55.642707300000346 8.616)
Error minima by case: (1.9208 2 6.0 1 3.0 1 23.0 2 0.0888 1 0.024 2 18.3444 1 5.8723 1 0.3834 1 11.2064 1 0.0 0 14.7099 2 3.0 1 1.1112 1 24.9559 2 4.409 2 0.2431 1 0.3672 1 1.5733 2 19.3617 2 1.0571 1 10.7964 2 2.6074 2 0.3958 2 16.451 2)
Average genome size in population (length): 38.406
Average program size in population (points): 39.406
Average percent parens in population: 0.026
Minimum age in population: 71.18852364303564
Maximum age in population: 75.63995409684644
Average age in population: 73.53502950406491
Median age in population: 73.56474279120755
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 90
Genome diversity (% unique Plush genomes):	 0.515
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 90
Syntactic diversity (% unique Push programs):	 0.515
Total error diversity:				 0.141
Error (vector) diversity:			 0.155
Behavioral diversity:				 0.155
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 54801715
--- Timings ---
Current time: 1529615347368 milliseconds
Total Time:         173.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.7 seconds, 42.6%
Fitness Testing:     80.2 seconds, 46.3%
Report:              19.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_shove float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2263.989861700006
Median total errors in population: 911.8234999999999
Error averages by case: (100.42007260000025 10.14 110.5628988000009 11.832 80.3770606999997 10.224 114.53035310000108 9.492 50.000926000000696 10.952 77.84658579999888 11.1 89.36619639999869 9.536 77.16939110000139 10.31 75.54683890000014 11.828 87.06214549999902 10.077 62.40449000000153 9.256 78.26192870000102 10.151 61.69556829999869 11.092 80.78324389999965 11.92 99.10548829999942 11.004 69.87581219999957 11.195 48.74370070000024 11.001 126.13886680000235 11.067 66.5982765999988 11.854 79.9723335999999 10.919 68.85304649999989 10.26 73.24721579999999 9.255 71.08303670000018 10.949 80.65433340000118 9.424 70.33905130000053 8.513)
Error minima by case: (1.9208 2 13.3119 1 1.0 1 22.0 2 0.0093 1 0.1761 2 18.6556 1 7.8723 1 0.3834 8 13.2064 1 0.0 0 16.7099 2 1.0 1 1.8888 2 15.2853 2 6.0357 8 0.2431 1 4.3672 2 3.5733 2 24.3617 2 1.0571 1 15.7964 2 7.6074 2 0.6042 2 3.777 1)
Average genome size in population (length): 38.031
Average program size in population (points): 39.031
Average percent parens in population: 0.026
Minimum age in population: 72.69480778720647
Maximum age in population: 77.16315398311322
Average age in population: 75.00955957499518
Median age in population: 75.05132622586044
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 136
Genome diversity (% unique Plush genomes):	 0.504
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 136
Syntactic diversity (% unique Push programs):	 0.504
Total error diversity:				 0.144
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.16
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 55752665
--- Timings ---
Current time: 1529615350217 milliseconds
Total Time:         176.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.0 seconds, 42.6%
Fitness Testing:     81.5 seconds, 46.3%
Report:              19.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction integer_dup_times} {:instruction integer_max} {:instruction in2} {:instruction integer_dec} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_add float_yankdup float_add float_dec float_dec float_frominteger tagged_679 integer_dup_times integer_max in2 integer_dec in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2038.790582900006
Median total errors in population: 911.8234999999999
Error averages by case: (89.86978860000029 10.043 102.4669723000009 11.826 71.68471519999969 10.16 103.72952910000093 9.353 41.76807760000044 10.955 71.43530299999888 11.051 81.64808639999868 9.451 70.85206940000128 10.22 68.22254409999951 11.83 80.59255739999931 10.022 51.78653140000141 9.136 67.25071920000099 10.023 52.83875749999867 11.058 70.50497079999964 11.901 93.27972169999951 10.963 59.57868799999958 11.174 41.02887390000023 10.97 117.87242920000227 11.055 55.33017169999864 11.749 68.86533090000064 10.835 61.16602549999961 10.18 61.95816249999943 9.129 59.54654000000058 10.857 74.29136220000115 9.344 59.54565530000044 8.392)
Error minima by case: (0.9208 2 6.0 1 1.0 1 24.0 2 0.3907 1 0.1762 2 10.8982 2 6.8723 1 0.3834 8 13.2064 1 0.0 0 16.7099 2 1.0 1 7.8888 2 12.5958 3 6.0357 8 0.2431 1 1.3672 1 3.5733 2 19.3617 2 0.6802 2 10.7964 2 2.6074 2 0.3958 2 18.451 2)
Average genome size in population (length): 38.001
Average program size in population (points): 39.001
Average percent parens in population: 0.026
Minimum age in population: 74.01402369166736
Maximum age in population: 78.25468370248873
Average age in population: 76.47673125959099
Median age in population: 76.47221822884426
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 121
Genome diversity (% unique Plush genomes):	 0.519
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.519
Total error diversity:				 0.129
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.142
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 56702790
--- Timings ---
Current time: 1529615353330 milliseconds
Total Time:         179.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.4 seconds, 42.6%
Fitness Testing:     82.8 seconds, 46.2%
Report:              19.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2227.766015700007
Median total errors in population: 911.8234999999999
Error averages by case: (99.56729390000005 10.189 110.82521750000089 11.863 81.23748799999969 10.224 113.86165420000077 9.516 50.387192700000206 10.989 73.52466299999894 11.147 86.66232219999878 9.542 73.01035810000104 10.314 72.88218379999986 11.847 83.48916149999953 10.115 61.366603500001126 9.295 77.14304740000095 10.219 62.585151799999025 11.113 80.03667609999965 11.952 95.28615309999992 11.024 67.85851139999961 11.209 48.98953720000025 11.01 126.37020870000195 11.09 65.59013459999898 11.906 79.13255320000009 10.975 66.02330289999992 10.27 72.22711589999982 9.297 69.89345750000025 10.999 76.22607290000103 9.428 69.51295460000043 8.544)
Error minima by case: (0.9208 2 13.5398 2 4.0 1 24.0 2 0.2932 1 0.1762 2 17.4705 2 4.6069 1 0.6166 8 15.5979 1 0.0 0 15.7099 2 3.7524 1 9.8888 2 15.0019 2 3.0164 8 0.2431 1 1.3672 2 2.5733 2 17.3617 2 0.0571 2 8.7964 3 0.6074 3 0.3958 2 17.451 2)
Average genome size in population (length): 37.882
Average program size in population (points): 38.882
Average percent parens in population: 0.026
Minimum age in population: 75.64640616555087
Maximum age in population: 79.83656497464511
Average age in population: 77.86721675827243
Median age in population: 77.90090590119847
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 109
Genome diversity (% unique Plush genomes):	 0.508
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 109
Syntactic diversity (% unique Push programs):	 0.508
Total error diversity:				 0.128
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.143
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 57649940
--- Timings ---
Current time: 1529615356353 milliseconds
Total Time:         182.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.7 seconds, 42.7%
Fitness Testing:     84.2 seconds, 46.2%
Report:              20.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1916.9189451000072
Median total errors in population: 911.8234999999999
Error averages by case: (88.0462609 10.037 100.12583560000083 11.818 67.19335319999969 10.152 102.09783620000059 9.393 38.391527600000025 10.96 60.91832859999893 11.09 74.06750399999878 9.451 59.39910770000063 10.291 60.05768529999933 11.814 70.3877421000001 10.072 49.98351070000101 9.169 64.58245620000096 10.059 48.27046009999917 11.042 69.53626749999967 11.943 82.27097900000047 11.002 56.41505549999964 11.177 37.594541600000234 10.977 116.52760710000194 11.06 52.61473749999903 11.78 66.6555172000008 10.873 51.80424629999997 10.191 59.647959699999454 9.151 56.97321280000055 10.898 63.902099600001016 9.365 57.2801131000004 8.41)
Error minima by case: (1.9208 2 19.5398 2 0.1996 2 24.0 2 0.0502 1 0.1762 2 13.0981 2 6.8723 1 2.3834 9 13.2064 1 0.0 0 15.7099 2 1.0 2 2.2845 2 25.6464 2 3.1932 8 0.2431 2 7.3672 2 2.5733 2 25.3617 2 0.0571 2 16.7964 3 8.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 37.813
Average program size in population (points): 38.813
Average percent parens in population: 0.026
Minimum age in population: 76.84458129030865
Maximum age in population: 81.36892168926614
Average age in population: 79.31621296399523
Median age in population: 79.3387136641402
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 90
Genome diversity (% unique Plush genomes):	 0.549
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 90
Syntactic diversity (% unique Push programs):	 0.549
Total error diversity:				 0.131
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 58595290
--- Timings ---
Current time: 1529615359397 milliseconds
Total Time:         185.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.2 seconds, 42.7%
Fitness Testing:     85.4 seconds, 46.1%
Report:              20.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction integer_inc} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 integer_inc integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_flush float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2007.969464700006
Median total errors in population: 911.8234999999999
Error averages by case: (91.33734149999977 10.006 102.70411660000089 11.823 71.5329267999997 10.175 104.8422118000006 9.337 40.88136239999992 10.931 66.13251929999898 10.99 75.56099529999886 9.407 65.02574770000074 10.145 62.16472289999939 11.779 75.51445039999977 9.969 52.6812729000008 9.096 69.69781820000085 10.027 52.71959569999937 11.054 70.38284649999964 11.901 87.5087480000001 10.894 59.49151079999962 11.155 39.82735540000026 10.968 119.3009920000018 11.037 57.88685929999909 11.719 70.41973610000048 10.798 55.21369599999991 10.155 63.68340159999946 9.15 62.125080200000525 10.804 69.25688740000093 9.307 61.086269900000346 8.364)
Error minima by case: (0.9208 2 12.5398 2 1.0 1 22.0 2 0.5572 1 0.024 2 18.6556 1 5.8723 1 0.3834 8 12.2064 1 0.0 0 14.7099 2 1.0 1 2.9536 9 27.9031 2 11.2025 8 0.2431 1 0.3672 2 1.5733 2 24.3617 2 1.0571 1 15.7964 2 7.6074 2 0.3958 2 16.451 1)
Average genome size in population (length): 37.927
Average program size in population (points): 38.927
Average percent parens in population: 0.026
Minimum age in population: 77.84458129030865
Maximum age in population: 82.83323468625662
Average age in population: 80.79121163103633
Median age in population: 80.8086726903116
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 89
Genome diversity (% unique Plush genomes):	 0.558
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.558
Total error diversity:				 0.13
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.142
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 59543640
--- Timings ---
Current time: 1529615362275 milliseconds
Total Time:         188.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.5 seconds, 42.8%
Fitness Testing:     86.7 seconds, 46.1%
Report:              20.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 44712.03610000005
Test mean error for best: 22.35602
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction float_dup} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max float_dup integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1956.8963146000065
Median total errors in population: 911.8234999999999
Error averages by case: (87.87263850000001 10.085 99.78135840000091 11.791 68.4738417999997 10.192 101.39564770000058 9.366 37.7389958 10.917 67.69616599999897 11.144 76.80458909999876 9.481 66.7820058000007 10.284 63.016016399999394 11.809 76.79867409999974 10.107 49.04420320000093 9.171 64.62390180000092 10.106 49.651942399999214 11.069 68.18150609999964 11.938 88.38975750000004 11.015 55.9710391999996 11.155 36.42381830000024 10.974 116.3022864000018 11.018 52.65351309999915 11.835 66.35353190000075 10.881 56.22810230000005 10.223 59.40969269999946 9.201 57.038422700000574 10.924 70.568135100001 9.416 57.1835283000004 8.411)
Error minima by case: (2.9208 2 7.0 1 3.0 1 21.0 2 0.4428 1 0.024 2 4.3172 2 6.8723 1 0.3834 1 6.6803 1 0.0 0 15.7099 2 3.0 1 7.0 1 28.9031 2 6.0357 2 0.1995 1 3.3672 1 2.5733 2 11.3069 2 1.0571 2 2.7416 2 5.4474 2 0.3958 2 17.451 2)
Average genome size in population (length): 37.763
Average program size in population (points): 38.763
Average percent parens in population: 0.026
Minimum age in population: 79.4195328031593
Maximum age in population: 84.10540784956137
Average age in population: 82.23668668191227
Median age in population: 82.2502917428323
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.567
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.567
Total error diversity:				 0.125
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 60487865
--- Timings ---
Current time: 1529615365097 milliseconds
Total Time:         190.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.8 seconds, 42.8%
Fitness Testing:     87.9 seconds, 46.0%
Report:              21.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2078.4985767000067
Median total errors in population: 911.8234999999999
Error averages by case: (93.21981710000016 10.059 106.25110890000089 11.827 76.10872559999969 10.191 107.23580840000089 9.371 45.164705200000554 10.956 67.68309429999903 11.073 80.37365109999881 9.477 67.74467920000097 10.255 66.81063459999952 11.791 77.54645919999953 10.049 55.65014210000125 9.154 69.57903790000096 10.047 57.4008296999988 11.073 76.13435559999964 11.917 90.23881909999989 10.994 63.22492849999961 11.175 43.835031000000235 10.98 122.61944380000233 11.082 57.67361359999886 11.777 71.99748540000007 10.853 59.56232419999986 10.224 64.92635509999951 9.148 62.1013513000005 10.878 70.55304980000096 9.367 62.75812600000045 8.387)
Error minima by case: (1.0792 2 6.0 2 1.0 2 23.0 2 0.0 0 0.1762 2 18.6556 1 5.8723 1 0.3834 9 12.2064 1 0.0 0 14.7099 2 1.0 2 8.8888 2 27.9031 2 17.7975 8 0.1995 2 1.3672 2 1.5733 2 25.3617 2 1.0446 1 16.7964 3 8.6074 2 0.3958 2 16.451 2)
Average genome size in population (length): 37.572
Average program size in population (points): 38.572
Average percent parens in population: 0.026
Minimum age in population: 80.4195328031593
Maximum age in population: 85.66265048983337
Average age in population: 83.65039719811942
Median age in population: 83.71665636592365
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.591
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.591
Total error diversity:				 0.123
Error (vector) diversity:			 0.137
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 61427315
--- Timings ---
Current time: 1529615368180 milliseconds
Total Time:         194.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.2 seconds, 42.9%
Fitness Testing:     89.2 seconds, 46.0%
Report:              21.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction integer_inc} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 integer_inc integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_flush float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1941.1541349000054
Median total errors in population: 911.8234999999999
Error averages by case: (88.93630409999993 10.073 101.47468880000086 11.797 70.3137965999997 10.126 103.27406460000081 9.403 40.164436099999975 10.912 60.658260599998954 11.064 73.57786719999882 9.424 60.11059780000104 10.263 59.67439799999939 11.806 70.19737210000007 10.039 50.72031860000121 9.179 66.42848270000093 10.092 51.669277999998975 11.008 69.4067391999996 11.958 82.73245700000042 10.962 56.375868899999624 11.197 39.384820500000245 10.92 117.02506420000225 11.042 54.643656799998624 11.801 67.96492870000058 10.867 52.32059629999982 10.171 61.10262939999945 9.182 58.791953400000565 10.911 63.80327780000101 9.359 58.41627750000047 8.43)
Error minima by case: (0.9208 2 6.0 1 0.409 1 24.0 2 0.2932 1 0.1762 2 18.6556 1 5.8723 1 1.9632 3 2.8116 1 0.0 0 14.7099 2 0.9385 1 8.0772 9 0.1884 2 11.0304 8 0.2431 1 1.7138 1 1.5733 2 19.0151 2 1.0571 1 16.7964 3 8.6074 2 0.6042 2 2.7976 2)
Average genome size in population (length): 37.754
Average program size in population (points): 38.754
Average percent parens in population: 0.026
Minimum age in population: 82.61644788508617
Maximum age in population: 87.11497036201567
Average age in population: 85.09105959011305
Median age in population: 85.10034092490238
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 49
Genome diversity (% unique Plush genomes):	 0.608
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 49
Syntactic diversity (% unique Push programs):	 0.608
Total error diversity:				 0.132
Error (vector) diversity:			 0.148
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 62371265
--- Timings ---
Current time: 1529615371110 milliseconds
Total Time:         197.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.5 seconds, 42.9%
Fitness Testing:     90.5 seconds, 45.9%
Report:              21.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max tagged_679 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2429.010396100006
Median total errors in population: 911.8234999999999
Error averages by case: (105.89272800000049 10.161 118.64264460000086 11.898 88.01654299999966 10.226 120.43090670000116 9.495 58.63585770000087 11.034 83.28573239999884 11.087 95.60223609999872 9.523 82.57793280000153 10.297 82.50366440000067 11.81 93.04585399999868 10.087 69.62476920000168 9.265 83.09562680000101 10.16 69.44080799999902 11.096 89.73118099999962 11.902 104.74062939999939 10.997 78.28538699999957 11.217 57.73900810000022 11.006 134.71687100000207 11.136 71.39624319999892 11.874 85.634433899999 10.923 75.51380610000038 10.27 78.5854059000006 9.258 75.89234039999975 10.957 86.17155890000113 9.414 76.19622750000053 8.519)
Error minima by case: (0.0792 2 12.5398 8 37.409 4 23.0 2 0.4428 8 0.1762 2 5.844 2 6.8723 1 0.3834 8 13.2064 1 0.0 0 15.7099 2 17.9385 4 6.8888 2 19.4074 2 4.3925 8 0.2431 5 0.3672 8 2.5733 2 22.1382 2 1.0571 2 16.7964 3 8.6074 2 0.3958 2 0.3255 2)
Average genome size in population (length): 37.545
Average program size in population (points): 38.545
Average percent parens in population: 0.026
Minimum age in population: 83.61644788508617
Maximum age in population: 88.79679561703217
Average age in population: 86.54392264454576
Median age in population: 86.60566071029785
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.618
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.618
Total error diversity:				 0.119
Error (vector) diversity:			 0.132
Behavioral diversity:				 0.133
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 63310115
--- Timings ---
Current time: 1529615374056 milliseconds
Total Time:         199.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.9 seconds, 43.0%
Fitness Testing:     91.7 seconds, 45.9%
Report:              22.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_stackdepth float_mod integer_max float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 in2 float_dup integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1973.8478576000082
Median total errors in population: 911.8234999999999
Error averages by case: (89.02865640000022 10.036 103.8858445000009 11.83 71.6538026999997 10.148 103.25401250000083 9.326 42.290023200000434 10.952 62.17150009999899 11.073 77.36214149999881 9.426 63.13498630000088 10.243 63.62614819999942 11.77 74.21282589999996 10.054 51.81566970000118 9.135 64.24491230000095 10.035 52.790128299998926 11.041 71.05911669999963 11.957 85.31471889999979 10.977 58.500368099999626 11.164 41.06767890000024 10.986 120.1518674000023 11.043 52.241766599998925 11.791 67.48944770000058 10.833 56.41023839999971 10.187 60.31401159999945 9.13 56.88235330000055 10.88 64.924766900001 9.339 58.31387150000038 8.351)
Error minima by case: (1.0792 2 11.9392 2 1.0 1 23.0 2 0.5572 1 0.1762 2 6.2688 2 3.8723 1 1.3834 9 13.2064 1 0.0 0 12.7099 2 1.0 1 3.1112 9 16.5163 2 5.7975 8 0.2431 1 3.3672 2 0.4267 2 25.3617 2 1.0571 1 16.7964 3 8.6074 2 0.6042 2 14.451 2)
Average genome size in population (length): 37.677
Average program size in population (points): 38.677
Average percent parens in population: 0.026
Minimum age in population: 85.69522067101845
Maximum age in population: 90.32498047257906
Average age in population: 87.96977093237481
Median age in population: 88.02174423408691
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.6
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.6
Total error diversity:				 0.12
Error (vector) diversity:			 0.131
Behavioral diversity:				 0.131
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 64252140
--- Timings ---
Current time: 1529615377084 milliseconds
Total Time:         203.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.4 seconds, 43.0%
Fitness Testing:     93.0 seconds, 45.8%
Report:              22.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max float_yankdup integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec integer_yank integer_add integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2431.522156000004
Median total errors in population: 911.8234999999999
Error averages by case: (106.38253750000021 10.182 118.51234540000084 11.838 88.70107679999967 10.22 121.06175450000116 9.518 60.028129900000955 10.982 84.04740919999882 11.117 94.37191409999873 9.565 83.05024090000137 10.292 80.63635060000044 11.784 91.57751479999915 10.097 69.04828430000167 9.283 85.25181830000102 10.196 69.7632745999991 11.062 86.01228719999969 11.902 105.3050588999997 11.001 74.92650949999961 11.228 59.8106431000002 10.999 133.7821485000021 11.109 73.70132379999903 11.863 86.66453159999932 10.938 73.25914420000045 10.243 79.83592640000069 9.285 77.85052269999956 10.958 87.13031020000116 9.471 77.12509900000052 8.553)
Error minima by case: (0.0792 2 5.3966 1 1.0 1 22.7884 2 0.2932 1 0.1761 2 4.3444 1 6.8723 1 0.6166 9 13.2064 1 0.0 0 14.7099 2 1.0 1 6.8888 2 15.2853 2 14.3037 8 0.2431 1 1.3672 2 1.5733 2 10.2652 2 1.0571 1 11.6999 3 7.6074 2 0.3958 2 11.5475 2)
Average genome size in population (length): 37.542
Average program size in population (points): 38.542
Average percent parens in population: 0.026
Minimum age in population: 87.00451942797594
Maximum age in population: 91.43100840125972
Average age in population: 89.41086321900136
Median age in population: 89.47007442825353
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.649
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.649
Total error diversity:				 0.152
Error (vector) diversity:			 0.166
Behavioral diversity:				 0.167
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 65190765
--- Timings ---
Current time: 1529615379900 milliseconds
Total Time:         205.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        88.6 seconds, 43.1%
Fitness Testing:     94.2 seconds, 45.8%
Report:              22.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction float_mult} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_stackdepth float_mod integer_max float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max float_mult in2 float_dup integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_flush float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2123.6627813000064
Median total errors in population: 911.8234999999999
Error averages by case: (95.07594130000015 10.079 107.06432920000084 11.835 76.2539121999997 10.192 109.00545530000089 9.422 46.37677810000039 10.979 72.06291789999906 11.099 80.3742464999989 9.469 71.10906180000111 10.267 67.16963719999954 11.728 80.89395109999954 10.073 56.43164970000115 9.169 73.60157580000076 10.104 57.55231669999902 11.081 74.06693469999966 11.913 93.47434539999979 10.99 62.48869329999963 11.171 45.39589660000021 10.988 122.43337510000214 11.086 61.853997499998876 11.789 74.70211610000005 10.876 60.096089799999675 10.204 67.81084039999972 9.224 65.98857660000039 10.904 74.8532702000009 9.415 65.02087280000033 8.449)
Error minima by case: (1.0792 2 15.3605 2 1.0 1 24.0 2 0.2342 1 0.1762 2 17.6556 2 7.8723 1 0.3834 1 13.2064 1 0.0 0 14.7099 2 1.0 1 1.9536 1 4.8835 2 7.0 2 0.2431 2 2.8122 2 1.5733 2 23.3617 2 0.0571 1 14.7964 3 6.6074 3 0.6042 2 1.7283 2)
Average genome size in population (length): 37.555
Average program size in population (points): 38.555
Average percent parens in population: 0.026
Minimum age in population: 88.50871953946896
Maximum age in population: 92.64782747446041
Average age in population: 90.80254116863121
Median age in population: 90.82335884883905
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.138
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 66129715
--- Timings ---
Current time: 1529615382846 milliseconds
Total Time:         208.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.9 seconds, 43.1%
Fitness Testing:     95.6 seconds, 45.8%
Report:              23.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add integer_add in2 integer_add float_dec float_dup integer_add integer_mult integer_yank integer_add integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2137.9254919000064
Median total errors in population: 911.8234999999999
Error averages by case: (97.10261250000008 10.113 108.55029900000086 11.801 76.83763949999968 10.179 111.68628270000096 9.454 47.4346097000005 10.941 68.10184569999896 11.124 82.33181959999885 9.483 67.61291850000103 10.32 68.81904249999954 11.754 78.02407869999966 10.109 59.54358430000132 9.232 73.79679710000093 10.12 58.077526499998775 11.042 77.45801359999966 11.917 90.20404390000009 11.032 66.03060259999965 11.192 46.56599690000021 10.978 123.40491950000218 11.033 62.08391029999869 11.874 76.33533530000001 10.918 61.37141359999973 10.216 69.30121589999972 9.207 66.54614450000044 10.944 71.11573580000103 9.413 66.72610370000051 8.467)
Error minima by case: (0.9208 2 18.6312 2 1.0 1 24.0 2 0.0621 1 0.1762 2 7.844 2 5.8723 1 2.3834 8 13.2064 1 0.0 0 14.7099 2 1.0 1 6.8888 9 27.6403 2 15.7975 8 0.2431 2 13.3672 2 1.5733 2 25.3617 2 0.0571 1 16.7964 3 8.6074 2 0.3958 2 12.098 2)
Average genome size in population (length): 37.493
Average program size in population (points): 38.493
Average percent parens in population: 0.026
Minimum age in population: 89.8594508391994
Maximum age in population: 94.21990837869257
Average age in population: 92.27426175799224
Median age in population: 92.28101489502166
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.628
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.628
Total error diversity:				 0.133
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 67067090
--- Timings ---
Current time: 1529615385698 milliseconds
Total Time:         211.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.2 seconds, 43.1%
Fitness Testing:     96.8 seconds, 45.8%
Report:              23.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_stackdepth float_mod integer_max float_yankdup float_add float_dec float_dec float_frominteger float_dec float_mod integer_max in2 in2 float_dup integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2318.2610887000064
Median total errors in population: 911.8234999999999
Error averages by case: (100.6041260000003 10.106 112.37344770000087 11.863 83.31035579999968 10.172 114.33700630000119 9.445 53.50340350000078 10.982 82.85184199999897 11.098 93.81029159999888 9.469 82.04171100000141 10.254 81.00200140000034 11.786 90.53296799999922 10.084 61.15543360000148 9.199 79.50418410000088 10.109 63.70168659999859 11.042 80.28577409999963 11.913 104.25597499999951 10.994 69.55973119999959 11.183 52.50453870000024 10.974 127.13687040000234 11.09 67.82626649999864 11.777 79.97046739999952 10.873 73.87157950000017 10.206 73.30810710000014 9.228 71.55491139999994 10.894 85.85391820000099 9.415 70.7774916000004 8.471)
Error minima by case: (0.9208 2 14.5398 2 0.0 0 24.0 2 0.2443 1 0.1762 2 7.6319 2 6.8723 1 1.6166 9 13.2064 1 0.0 0 15.7099 2 0.0 0 8.8888 2 1.0969 2 6.0357 8 0.1995 1 2.3672 1 2.5733 2 22.6383 2 0.6754 1 14.7964 2 6.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 37.236
Average program size in population (points): 38.236
Average percent parens in population: 0.026
Minimum age in population: 91.11518512623506
Maximum age in population: 95.462514745194
Average age in population: 93.70798173853444
Median age in population: 93.73133854159832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.64
Total error diversity:				 0.134
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 67998040
--- Timings ---
Current time: 1529615388671 milliseconds
Total Time:         214.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        92.6 seconds, 43.2%
Fitness Testing:     98.1 seconds, 45.7%
Report:              23.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod integer_max in2 integer_add in2 float_mult float_dec float_dup integer_shove float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2414.968810000008
Median total errors in population: 911.8234999999999
Error averages by case: (106.70742940000041 10.181 120.65047940000093 11.914 89.41179989999969 10.225 120.34903410000125 9.506 60.79559430000079 11.041 82.14490629999887 11.15 91.50684159999878 9.503 81.73179520000124 10.334 78.88063720000017 11.763 91.65597579999923 10.139 69.57536880000147 9.271 82.433641000001 10.181 70.71898599999894 11.092 87.9730156999996 11.938 103.91679389999962 11.052 76.11728459999959 11.236 58.552837200000226 11.012 134.75537800000222 11.143 70.61892819999878 11.903 85.37857869999948 10.961 72.07258869999988 10.251 78.45609710000056 9.246 75.11076079999982 10.993 85.05748220000112 9.45 76.41457590000047 8.497)
Error minima by case: (2.9208 2 15.5398 8 1.0 1 24.0 3 0.4428 8 0.1762 2 17.6556 2 6.8723 1 0.3834 8 13.2064 1 0.0 0 15.7099 2 1.0 1 4.8239 2 28.9031 2 6.0357 8 0.2431 2 3.3672 9 2.5733 2 25.3617 2 0.0571 1 16.7964 3 8.6074 3 0.3958 2 17.451 2)
Average genome size in population (length): 37.022
Average program size in population (points): 38.022
Average percent parens in population: 0.027
Minimum age in population: 92.37407538432925
Maximum age in population: 96.95474410155184
Average age in population: 95.10667857379892
Median age in population: 95.17455234315683
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.612
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.612
Total error diversity:				 0.113
Error (vector) diversity:			 0.128
Behavioral diversity:				 0.129
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 68923790
--- Timings ---
Current time: 1529615391728 milliseconds
Total Time:         217.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        94.1 seconds, 43.2%
Fitness Testing:     99.3 seconds, 45.7%
Report:              24.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_max} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_sub integer_max integer_stackdepth float_mod integer_add integer_max float_yankdup float_add float_dec float_dec float_frominteger float_dec float_swap integer_max in2 in2 float_dup float_dup_items integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2218.2917338000057
Median total errors in population: 911.8234999999999
Error averages by case: (99.48123479999991 10.141 110.01211270000083 11.854 79.9684070999997 10.227 113.76333390000069 9.483 50.084540400000364 10.972 75.94708229999905 11.113 83.17202969999887 9.527 74.13555510000101 10.301 69.54857679999974 11.684 83.93017829999958 10.105 62.412306500000874 9.225 77.38300900000085 10.124 61.231509099999236 11.086 78.59471169999968 11.873 96.83007369999999 11.022 66.70341199999964 11.19 49.26526110000023 11.005 125.4613869000019 11.067 65.66239019999911 11.83 78.99411749999999 10.901 62.22948709999999 10.241 72.0367352999998 9.239 69.74444540000027 10.915 79.08982720000094 9.463 69.52301000000033 8.499)
Error minima by case: (0.9208 2 14.5398 9 37.409 9 24.0 3 0.3907 7 0.1762 2 12.6029 2 6.8723 1 0.6166 7 13.2064 1 0.0 0 15.7099 2 17.9385 7 0.8888 2 0.3554 2 4.7975 8 0.2431 8 2.3672 7 2.5733 2 16.8343 2 0.6802 1 14.7964 3 6.6074 3 0.3958 2 1.878 2)
Average genome size in population (length): 37.088
Average program size in population (points): 38.088
Average percent parens in population: 0.027
Minimum age in population: 93.50252110432179
Maximum age in population: 98.58990934563192
Average age in population: 96.52377891617122
Median age in population: 96.56018118404398
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.623
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.623
Total error diversity:				 0.136
Error (vector) diversity:			 0.152
Behavioral diversity:				 0.152
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 69851115
--- Timings ---
Current time: 1529615394620 milliseconds
Total Time:         220.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.5 seconds, 43.3%
Fitness Testing:    100.6 seconds, 45.6%
Report:              24.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_dec} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_sub} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_stackdepth float_sub float_yankdup float_add float_dec float_dec float_frominteger integer_dec integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_sub float_mod float_dec float_yankdup integer_sub -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2136.0050603000045
Median total errors in population: 911.8234999999999
Error averages by case: (93.68367510000019 10.19 105.89842860000086 11.805 76.60085619999968 10.213 108.03784850000127 9.511 45.809314000000505 10.954 74.92875329999887 11.133 84.2561756999987 9.549 73.79232320000125 10.331 70.54058839999989 11.736 82.67972569999944 10.117 55.888377700001534 9.281 71.58885130000094 10.179 57.8210550999986 11.081 75.61898439999968 11.903 96.66077169999974 11.031 64.21723619999962 11.201 44.908275800000226 10.98 122.18614900000233 11.077 59.807709099998604 11.899 72.92042420000017 10.962 63.21977839999955 10.278 66.05616499999945 9.264 63.86499200000057 10.972 77.9822958000011 9.441 63.41830590000044 8.53)
Error minima by case: (0.9208 2 4.5398 1 1.0 2 24.0 2 0.0977 1 0.1762 2 17.6556 2 6.8723 1 5.3834 10 12.2064 1 0.0 0 15.7099 2 1.0 2 1.8888 2 27.6403 2 4.0621 8 0.2431 2 3.3672 2 2.5733 2 24.3617 2 0.0571 2 15.7964 2 7.6074 2 0.3958 2 9.7349 2)
Average genome size in population (length): 37.102
Average program size in population (points): 38.102
Average percent parens in population: 0.027
Minimum age in population: 95.19141370848432
Maximum age in population: 99.97124402283077
Average age in population: 97.97784706993124
Median age in population: 98.02239080697794
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.629
Total error diversity:				 0.13
Error (vector) diversity:			 0.148
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 70778790
--- Timings ---
Current time: 1529615397597 milliseconds
Total Time:         223.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.9 seconds, 43.4%
Fitness Testing:    101.8 seconds, 45.6%
Report:              24.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 44712.03610000005
Test mean error for best: 22.35602
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_126} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction tag_float_489} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec float_frominteger tagged_126 float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_flush integer_fromfloat float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 tag_float_489 tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2213.8024699000066
Median total errors in population: 911.8234999999999
Error averages by case: (99.63052020000052 10.095 112.54928080000093 11.869 80.0076242999997 10.207 113.6943861000012 9.413 50.91050010000077 10.989 71.72472059999892 11.056 83.90798459999874 9.457 70.48002590000118 10.236 71.02858349999961 11.719 80.8044626999995 10.047 62.59424520000157 9.168 77.069823100001 10.113 61.29914219999863 11.094 81.11108239999965 11.921 92.90295839999978 10.979 68.92148849999961 11.21 50.01448650000022 11.008 128.31849240000255 11.074 65.32930039999847 11.807 79.02758569999966 10.884 63.67498489999957 10.187 72.21186369999982 9.217 69.74900010000025 10.917 74.68272000000104 9.379 69.6752076000005 8.436)
Error minima by case: (0.9208 2 7.0797 1 6.7794 9 22.6965 2 0.4428 1 0.1761 2 4.2169 2 6.5663 1 0.6166 9 13.2064 1 0.0 0 15.7099 2 16.9385 9 7.0772 2 1.3721 2 9.3925 8 0.1995 8 1.3672 2 2.5733 2 17.8267 2 1.0571 2 16.7964 3 8.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 37.201
Average program size in population (points): 38.201
Average percent parens in population: 0.026
Minimum age in population: 96.98303765872733
Maximum age in population: 101.6012304138475
Average age in population: 99.40890692526338
Median age in population: 99.44315334263841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.627
Total error diversity:				 0.131
Error (vector) diversity:			 0.144
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 71709040
--- Timings ---
Current time: 1529615400669 milliseconds
Total Time:         226.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        98.2 seconds, 43.4%
Fitness Testing:    103.2 seconds, 45.6%
Report:              25.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_rot} {:instruction integer_max} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction float_rot} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_rot integer_max float_sub integer_stackdepth integer_max float_yankdup float_add float_dec float_shove float_frominteger float_frominteger integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_add float_dec float_rot integer_rot float_dec float_yankdup integer_dec float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2117.4460659000065
Median total errors in population: 911.8234999999999
Error averages by case: (94.14658720000057 10.115 108.00230170000086 11.888 77.30926239999968 10.16 109.69529190000141 9.453 47.15592940000099 11.003 70.017163799999 11.08 82.94569799999883 9.515 68.6444393000012 10.271 68.65392349999966 11.725 78.08041029999931 10.054 56.46406660000167 9.228 72.41504060000098 10.117 58.683594199998474 11.02 74.40883149999968 11.882 91.41051599999953 10.98 62.17196699999966 11.199 46.292640400000224 10.936 122.09683840000255 11.122 60.80594479999851 11.83 74.36364199999986 10.906 60.966511299999475 10.216 67.38793749999977 9.219 65.08454710000056 10.927 73.122250700001 9.392 64.3947303000005 8.488)
Error minima by case: (0.9208 2 14.5398 8 0.0 0 19.6965 2 0.2932 8 0.1762 2 12.8447 2 5.8723 1 0.129 7 12.2064 1 0.0 0 14.7099 2 0.0 0 1.8888 2 4.0969 2 2.3909 8 0.2431 1 2.3672 8 1.5733 2 19.6383 2 0.0571 2 14.7964 3 6.6074 2 0.3958 2 16.451 2)
Average genome size in population (length): 37.186
Average program size in population (points): 38.186
Average percent parens in population: 0.026
Minimum age in population: 98.39597531866555
Maximum age in population: 103.1439283504321
Average age in population: 100.8381747129566
Median age in population: 100.8601917119911
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.637
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.637
Total error diversity:				 0.135
Error (vector) diversity:			 0.153
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 72638840
--- Timings ---
Current time: 1529615403551 milliseconds
Total Time:         229.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.6 seconds, 43.4%
Fitness Testing:    104.4 seconds, 45.5%
Report:              25.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction print_integer} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 print_integer integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup float_dup_items float_dec integer_yank float_mod float_dec float_yankdup float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 1937.2364092000073
Median total errors in population: 911.8234999999999
Error averages by case: (87.07228060000003 10.084 99.44860650000084 11.855 68.2633865999997 10.161 102.39655890000066 9.374 37.92337349999999 10.976 62.49886319999897 11.093 77.75751569999878 9.476 62.279094700000876 10.258 64.12502939999936 11.759 72.5239756999998 10.067 49.97239100000111 9.169 63.75956220000098 10.081 49.19696289999913 11.041 68.58993299999965 11.95 84.95014590000011 10.988 57.99547949999964 11.188 36.78825600000021 10.997 115.28077010000204 11.074 51.93725039999895 11.825 66.59485900000061 10.892 57.01401550000001 10.226 59.53238379999948 9.172 56.697135900000546 10.91 65.49226050000101 9.352 56.784318700000476 8.394)
Error minima by case: (0.9208 2 0.6859 2 1.0 1 5.1402 2 1.5572 1 0.024 2 10.8982 2 6.8723 1 0.3834 8 2.7718 1 0.0 0 15.7099 2 1.0 1 3.8239 9 0.9031 2 13.2025 8 0.2431 2 1.3672 2 2.5733 2 17.6633 2 0.0571 2 16.2286 2 8.6074 2 0.3958 2 16.403 1)
Average genome size in population (length): 37.085
Average program size in population (points): 38.085
Average percent parens in population: 0.027
Minimum age in population: 99.39597531866555
Maximum age in population: 104.2655449718425
Average age in population: 102.2241875802722
Median age in population: 102.27733203552
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.616
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.616
Total error diversity:				 0.127
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 73566065
--- Timings ---
Current time: 1529615406424 milliseconds
Total Time:         232.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.9 seconds, 43.4%
Fitness Testing:    105.7 seconds, 45.5%
Report:              25.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction integer_min} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_yankdup integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec integer_add in2 integer_add float_dec float_dup float_dup integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 integer_min tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2389.4896985000055
Median total errors in population: 911.8234999999999
Error averages by case: (107.61843180000074 10.095 120.65088740000088 11.83 88.5864478999997 10.213 121.67152830000157 9.454 59.9001333000011 10.982 76.93701169999893 11.098 92.60849539999873 9.559 75.86623950000156 10.282 77.81944630000001 11.758 85.90386129999922 10.081 69.34382660000205 9.224 83.69016580000108 10.094 70.02930799999837 11.094 86.91494379999966 11.979 98.2036140999998 10.98 74.47953999999964 11.249 59.41703180000024 11.0 135.07263970000247 11.102 72.12110519999855 11.811 86.1386743999992 10.868 69.9667796999994 10.259 79.22568910000054 9.189 76.71606079999975 10.92 80.19204680000111 9.43 77.38878980000055 8.476)
Error minima by case: (0.9208 2 6.0 1 4.0 1 24.0 2 0.3907 1 0.1762 2 1.5873 1 2.8833 1 0.1176 1 9.0366 1 0.0 0 15.7099 2 4.0 1 1.8888 1 15.5579 2 6.0 2 0.2431 1 0.3672 1 2.5733 2 18.3617 2 0.0571 1 9.7964 2 1.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 36.911
Average program size in population (points): 37.911
Average percent parens in population: 0.027
Minimum age in population: 101.3043075391532
Maximum age in population: 105.794811093277
Average age in population: 103.6865593088601
Median age in population: 103.7049190305515
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.137
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 74489090
--- Timings ---
Current time: 1529615409259 milliseconds
Total Time:         235.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.2 seconds, 43.5%
Fitness Testing:    106.9 seconds, 45.5%
Report:              25.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction float_rot} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction integer_min} {:instruction float_mod} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult float_rot integer_yank integer_stackdepth integer_yank integer_stackdepth float_dec float_yankdup float_add integer_min float_mod in2 integer_add integer_add float_dec float_dup integer_shove float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2365.7317064000063
Median total errors in population: 911.8234999999999
Error averages by case: (103.71545150000043 10.142 116.57778210000087 11.894 88.16311429999968 10.235 118.41739370000123 9.469 57.14895830000072 10.999 81.08038239999891 11.17 90.34653679999886 9.483 80.63019650000119 10.328 77.34033179999997 11.769 90.41196519999936 10.137 67.61631040000148 9.232 80.77928670000092 10.14 69.5943227999989 11.114 85.24679849999964 11.92 103.07636789999958 11.046 72.7941901999996 11.204 55.56734410000021 10.998 132.81853880000222 11.113 69.18478979999877 11.862 83.5740341999996 10.918 69.97169519999987 10.216 76.52503560000014 9.248 73.68318499999992 10.948 84.00508900000104 9.477 73.91760560000043 8.483)
Error minima by case: (0.0792 2 11.5398 1 36.409 5 24.0 2 0.5572 1 0.1762 2 5.0 1 7.8723 1 0.3834 8 13.2064 1 0.0 0 15.7099 2 16.9385 5 8.8888 2 29.9031 2 17.2025 8 0.2431 5 0.3672 2 2.5733 2 26.3617 2 1.0571 1 17.7964 3 9.6074 2 0.6042 3 17.451 2)
Average genome size in population (length): 37.034
Average program size in population (points): 38.034
Average percent parens in population: 0.027
Minimum age in population: 103.0328325824811
Maximum age in population: 107.0269822371205
Average age in population: 105.1480312622466
Median age in population: 105.2047143078451
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.121
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.142
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 75415115
--- Timings ---
Current time: 1529615412228 milliseconds
Total Time:         238.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.6 seconds, 43.5%
Fitness Testing:    108.2 seconds, 45.4%
Report:              26.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_sub integer_max integer_stackdepth float_mod integer_add integer_max float_yankdup float_add float_dec float_dec float_frominteger integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_flush float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2082.1358993000085
Median total errors in population: 911.8234999999999
Error averages by case: (93.63650700000018 10.098 107.92749000000092 11.875 77.76260069999968 10.179 108.78545130000107 9.397 46.523909400000264 10.969 66.82890099999894 11.106 77.92712839999881 9.402 67.15638460000116 10.225 64.6619062999994 11.709 77.68132269999967 10.071 56.84586660000133 9.217 69.23562290000099 10.094 59.13063689999868 11.055 75.97786149999956 11.95 89.75046030000009 10.99 62.88571739999963 11.164 44.71495800000026 10.967 123.7628034000023 11.085 57.33157839999863 11.861 72.85646430000004 10.903 57.68550929999965 10.159 65.68434099999948 9.192 62.14702300000059 10.939 69.61690570000104 9.373 63.22054920000044 8.418)
Error minima by case: (0.9208 2 11.5398 2 1.0 1 24.0 2 0.5572 1 0.1761 2 8.1266 1 2.6567 1 0.6166 9 6.5557 1 0.0 0 14.7099 2 1.0 1 7.8888 9 19.3741 2 16.7975 8 0.0587 2 0.6328 2 1.5733 2 25.3617 2 0.0571 1 16.7964 3 8.6074 2 0.3958 2 16.451 2)
Average genome size in population (length): 37.093
Average program size in population (points): 38.093
Average percent parens in population: 0.027
Minimum age in population: 104.1869298737653
Maximum age in population: 108.4574115127788
Average age in population: 106.5213500130174
Median age in population: 106.5536826557609
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.13
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 76342565
--- Timings ---
Current time: 1529615415367 milliseconds
Total Time:         241.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.2 seconds, 43.6%
Fitness Testing:    109.4 seconds, 45.3%
Report:              26.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_719} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_719 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_mult float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2382.741814700006
Median total errors in population: 911.8234999999999
Error averages by case: (104.34913460000057 10.069 118.14800240000095 11.855 87.69456359999968 10.195 118.65016870000134 9.43 57.673806300001054 10.987 81.34069169999896 11.013 93.59830479999874 9.504 81.4652474000013 10.195 79.5655347000001 11.745 88.92975229999908 9.98 67.06647820000158 9.177 81.88986390000092 10.071 68.52320319999907 11.073 85.79214019999961 11.941 103.62832649999942 10.915 73.4216156999996 11.211 56.24767630000023 10.999 133.88545270000242 11.101 70.31827159999915 11.768 84.05480099999926 10.831 73.34167230000017 10.202 77.32564300000034 9.185 74.82810819999972 10.886 84.34376800000103 9.337 74.56258740000047 8.427)
Error minima by case: (0.0792 2 6.0 1 1.0 1 24.0 2 0.3839 1 0.1762 2 11.5739 1 7.8723 1 0.3834 8 11.2064 1 0.0 0 14.7099 2 1.0 1 0.5418 2 29.9031 2 0.367 9 0.1995 1 1.3672 1 1.5733 2 25.3617 2 0.2686 1 16.7964 3 8.6074 2 0.6042 2 16.451 2)
Average genome size in population (length): 36.995
Average program size in population (points): 37.995
Average percent parens in population: 0.027
Minimum age in population: 105.4121457204766
Maximum age in population: 109.8128938202563
Average age in population: 107.9457277647773
Median age in population: 107.9723445269566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.647
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.647
Total error diversity:				 0.134
Error (vector) diversity:			 0.154
Behavioral diversity:				 0.154
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 77267690
--- Timings ---
Current time: 1529615418234 milliseconds
Total Time:         244.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.5 seconds, 43.6%
Fitness Testing:    110.6 seconds, 45.3%
Report:              26.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction float_mod} {:instruction float_yankdup} {:instruction in2} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_add float_yankdup float_add float_dec float_dec float_frominteger tagged_679 float_mod float_yankdup in2 integer_add integer_add float_dec float_dup float_dec integer_swap integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2266.7508373000064
Median total errors in population: 911.8234999999999
Error averages by case: (99.26096909999998 10.159 110.24997970000088 11.889 79.4219020999997 10.168 114.18350450000078 9.492 49.99895260000021 10.993 80.28298879999882 11.08 89.6865993999987 9.476 78.73709790000119 10.244 76.74589760000013 11.746 87.84909509999926 10.063 61.83611220000111 9.255 78.10710330000094 10.166 60.73757209999906 11.03 79.04430109999966 11.899 101.27248529999976 10.982 68.79201999999958 11.18 48.76649760000023 10.924 126.51301530000204 11.117 66.46497599999917 11.85 79.51502069999995 10.928 69.61427640000038 10.21 72.74645400000004 9.278 70.88351070000006 10.961 83.35519340000108 9.405 69.67631240000038 8.514)
Error minima by case: (1.0792 2 0.1924 8 1.0 1 19.6669 2 0.4428 9 0.1762 2 8.2787 2 6.8723 1 0.3834 8 5.1958 1 0.0 0 15.7099 2 1.0 1 1.8888 2 1.9031 2 10.7975 7 0.2431 1 1.3672 7 2.5733 2 23.3617 2 0.0571 2 14.7964 3 6.6074 2 0.3958 2 11.098 2)
Average genome size in population (length): 36.937
Average program size in population (points): 37.937
Average percent parens in population: 0.027
Minimum age in population: 106.4939089823117
Maximum age in population: 111.4209948058116
Average age in population: 109.3918477181271
Median age in population: 109.469131195039
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.643
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.643
Total error diversity:				 0.143
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.161
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 78191340
--- Timings ---
Current time: 1529615421093 milliseconds
Total Time:         247.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       107.9 seconds, 43.7%
Fitness Testing:    111.9 seconds, 45.3%
Report:              27.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction float_inc} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_frominteger float_dec float_mod integer_max in2 integer_add in2 float_inc float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec integer_dup_times float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2304.8585449000057
Median total errors in population: 911.8234999999999
Error averages by case: (102.58466990000058 10.034 114.23927320000094 11.866 81.21013039999967 10.18 116.52650150000115 9.377 52.699229600000706 10.991 78.15597329999886 11.022 91.18688589999876 9.476 76.52408700000123 10.182 77.2440681000002 11.735 86.6619293999988 10.013 65.49057740000148 9.113 80.25164370000105 10.05 62.56013259999873 11.047 81.93398699999968 11.896 98.86770599999934 10.935 71.18991489999962 11.204 52.20117260000024 10.944 130.5792185000023 11.115 68.63143749999888 11.729 82.00959719999905 10.827 69.98505570000025 10.188 75.36377070000043 9.17 73.12583169999978 10.847 81.18011680000106 9.35 72.76463430000052 8.4)
Error minima by case: (0.9208 2 14.5398 2 0.0 0 24.0 2 0.3839 1 0.024 2 16.6556 2 5.8723 1 0.3834 8 11.2064 1 0.0 0 14.7099 2 0.0 0 1.8888 2 15.2853 2 1.2976 8 0.2431 1 2.3672 2 1.5733 2 25.3617 2 0.0571 2 16.7964 3 8.6074 2 0.3958 2 16.451 2)
Average genome size in population (length): 36.786
Average program size in population (points): 37.786
Average percent parens in population: 0.027
Minimum age in population: 108.1994635520342
Maximum age in population: 112.8486760724101
Average age in population: 110.8191670163913
Median age in population: 110.8410170240408
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.14
Error (vector) diversity:			 0.155
Behavioral diversity:				 0.156
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 79111115
--- Timings ---
Current time: 1529615424249 milliseconds
Total Time:         250.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.3 seconds, 43.7%
Fitness Testing:    113.2 seconds, 45.3%
Report:              27.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction integer_add} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_sub float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 integer_add tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2134.5476649000084
Median total errors in population: 911.8234999999999
Error averages by case: (95.6786508000004 10.154 108.31224820000097 11.889 76.0856863999997 10.162 109.79687230000125 9.446 46.88641490000092 11.018 70.46013249999885 11.138 83.26722079999867 9.454 69.41752130000133 10.313 70.01106159999966 11.784 80.0414432999993 10.12 58.90632910000169 9.274 71.33030470000105 10.142 57.52666959999847 11.054 78.31505259999962 11.961 92.54365569999972 11.041 66.35059549999961 11.238 45.78565770000023 10.967 124.68476600000265 11.126 59.498991699998456 11.885 74.27051340000011 10.949 62.489264099999495 10.182 67.21628299999965 9.219 63.8945913000006 10.978 73.24887940000116 9.443 65.11485900000052 8.477)
Error minima by case: (0.9208 2 10.2948 2 1.0 1 21.0 2 0.4428 1 0.1762 2 7.5208 2 6.8723 1 6.3834 10 13.2064 1 0.0 0 14.7099 2 1.0 1 1.1112 2 2.7267 2 6.0357 8 0.2431 1 5.303 2 1.5733 2 17.8267 2 0.0571 1 10.7964 2 2.6074 2 0.3958 3 4.2192 2)
Average genome size in population (length): 36.564
Average program size in population (points): 37.564
Average percent parens in population: 0.027
Minimum age in population: 109.2156385462088
Maximum age in population: 114.2612082416338
Average age in population: 112.2372443632174
Median age in population: 112.245117412438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.125
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 80025265
--- Timings ---
Current time: 1529615427212 milliseconds
Total Time:         253.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.8 seconds, 43.8%
Fitness Testing:    114.4 seconds, 45.2%
Report:              27.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction tagged_679} {:instruction integer_inc} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec float_frominteger tagged_679 integer_inc integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_flush float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2469.209589100006
Median total errors in population: 911.8234999999999
Error averages by case: (107.88355390000032 10.161 120.03023940000085 11.889 90.52251289999968 10.198 123.68539270000113 9.491 61.03051410000077 10.999 83.10539419999893 11.004 95.71897809999881 9.519 82.02412340000123 10.151 82.77104910000014 11.705 91.99611809999917 9.992 71.41900740000153 9.225 87.37915560000093 10.167 71.94961819999898 11.048 89.68514539999968 11.865 103.82913109999971 10.898 78.6393972999996 11.187 60.144686700000186 10.968 135.20722520000186 11.096 76.07081709999899 11.845 89.18526259999958 10.922 76.07486330000003 10.251 82.46312360000034 9.294 80.66725079999989 10.943 86.08405770000104 9.367 78.93897120000044 8.519)
Error minima by case: (0.0792 2 1.5401 1 1.0 1 24.0 2 0.4428 1 0.1762 2 0.9906 1 3.0975 1 0.6166 1 13.2064 1 0.0 0 15.7099 2 1.0 1 1.8888 1 12.2381 2 6.0 2 0.2431 1 1.3672 1 2.5733 2 26.3617 2 1.0571 1 17.7964 3 9.6074 2 0.3958 2 15.5488 2)
Average genome size in population (length): 36.484
Average program size in population (points): 37.484
Average percent parens in population: 0.027
Minimum age in population: 110.9890116827399
Maximum age in population: 115.7377293677245
Average age in population: 113.738459322197
Median age in population: 113.7799571538317
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.135
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 80937465
--- Timings ---
Current time: 1529615430013 milliseconds
Total Time:         255.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.0 seconds, 43.8%
Fitness Testing:    115.6 seconds, 45.2%
Report:              28.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_flush} {:instruction tagged_678} {:instruction float_mod} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_dup_items integer_swap integer_stackdepth integer_yank float_yankdup float_add float_dec float_dec integer_flush tagged_678 float_mod integer_max in2 integer_add in2 integer_add float_dec float_dup integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2212.703159700008
Median total errors in population: 911.8234999999999
Error averages by case: (97.70814840000031 10.134 110.6349107000009 11.862 79.42429169999969 10.187 112.56326230000107 9.449 50.172415800000614 10.989 74.4397650999989 11.073 87.30407859999876 9.504 74.30413650000139 10.237 74.26169779999988 11.724 82.94165929999903 10.067 61.0267068000015 9.249 74.468576800001 10.119 60.796140799998646 11.08 79.90625009999962 11.933 96.68079009999964 11.003 67.84518689999962 11.171 49.14054320000022 10.982 126.84641100000242 11.098 62.746892299998485 11.852 77.2084988 10.927 67.24654449999986 10.252 70.13788260000004 9.24 67.21422600000011 10.959 77.15976410000108 9.378 67.5913795000005 8.464)
Error minima by case: (0.9208 2 14.4386 2 1.0 1 24.0 2 0.4428 1 0.1762 2 0.3623 2 7.8723 1 0.3834 8 13.2064 1 0.0 0 15.7099 2 1.0 1 1.8888 2 3.6054 2 6.0357 8 0.2431 1 2.3672 2 2.5733 2 24.4629 2 1.0571 2 16.7964 3 8.6074 2 0.6042 3 2.6502 2)
Average genome size in population (length): 36.296
Average program size in population (points): 37.296
Average percent parens in population: 0.027
Minimum age in population: 111.9890116827399
Maximum age in population: 117.145185309584
Average age in population: 115.1575319654857
Median age in population: 115.1564347767797
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.607
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.607
Total error diversity:				 0.127
Error (vector) diversity:			 0.141
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 81844940
--- Timings ---
Current time: 1529615433048 milliseconds
Total Time:         258.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.5 seconds, 43.8%
Fitness Testing:    116.9 seconds, 45.1%
Report:              28.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_stackdepth} {:instruction integer_max} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yank} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_stackdepth integer_max integer_yank float_yankdup float_add float_dec float_dec in2 float_yank in2 integer_add float_dec float_dup integer_shove float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2224.7662709000074
Median total errors in population: 911.8234999999999
Error averages by case: (98.30654890000032 10.088 112.55054350000086 11.882 82.07083299999971 10.177 113.56007080000113 9.41 51.86464110000059 10.983 74.04316549999898 11.037 84.72592379999878 9.426 73.5119460000012 10.217 71.54354240000002 11.706 82.86108309999933 10.023 61.99208560000145 9.186 75.47875110000093 10.065 63.533276399998705 11.058 81.15227719999965 11.907 96.19736279999964 10.967 68.72653769999961 11.206 50.63968280000022 10.959 128.17715330000232 11.107 63.917898899998576 11.808 78.26233689999981 10.849 64.3567622999996 10.167 71.29843280000014 9.182 68.3347113000003 10.895 77.11034760000102 9.354 68.46135610000043 8.43)
Error minima by case: (0.9208 2 23.5398 2 0.0 0 24.0 2 0.4428 1 0.1762 2 8.0424 2 2.4113 1 1.6166 8 9.2064 1 0.0 0 7.541 2 0.0 0 8.8888 2 19.3825 2 1.2876 8 0.2431 1 11.3672 1 0.6776 2 25.3617 2 0.5207 1 16.7964 3 8.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 35.894
Average program size in population (points): 36.894
Average percent parens in population: 0.027
Minimum age in population: 114.2958071263061
Maximum age in population: 118.611367496118
Average age in population: 116.5870894273997
Median age in population: 116.5936699438081
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.125
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 82742515
--- Timings ---
Current time: 1529615436231 milliseconds
Total Time:         262.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.0 seconds, 43.9%
Fitness Testing:    118.2 seconds, 45.1%
Report:              28.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 44733.55720000007
Test mean error for best: 22.36678
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_div} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_swap} {:instruction integer_max} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction float_dup_items} {:instruction integer_mult} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction print_integer} {:instruction float_frominteger} {:instruction tagged_126} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yankdup integer_yank integer_stackdepth float_div float_yankdup float_add float_dec float_dec integer_add in2 integer_add float_dec float_dup float_frominteger float_dec float_swap integer_max in2 in2 float_dup float_dup_items integer_mult integer_yank integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec float_mod float_dec float_yankdup integer_add print_integer float_frominteger tagged_126 -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2195.957729800007
Median total errors in population: 911.8234999999999
Error averages by case: (100.14996450000032 10.106 110.94760250000095 11.881 79.76594449999969 10.153 114.34524460000107 9.435 49.914338300000594 10.999 68.73931679999893 10.953 83.7501470999987 9.526 68.26131140000118 10.156 70.74249009999973 11.755 79.3095401999995 9.966 63.253814600001725 9.218 76.69687200000101 10.09 61.09173289999854 11.051 81.21357209999961 11.914 90.53777309999977 10.899 69.47505479999958 11.224 48.80878690000025 10.969 125.86669820000262 11.098 64.97920219999844 11.808 79.17606219999979 10.883 63.429522399999534 10.262 72.2297870000003 9.196 69.30551720000011 10.903 71.73531220000108 9.299 70.03712200000055 8.451)
Error minima by case: (0.9208 2 13.5398 8 0.0 0 23.0 2 0.4428 9 0.1762 2 15.0981 2 5.8723 1 0.6166 9 13.2064 1 0.0 0 14.7099 2 0.0 0 1.8888 2 27.9031 2 10.7975 9 0.2431 1 1.3672 7 1.5733 2 23.3617 2 0.0571 2 14.7964 3 6.6074 2 0.3958 3 16.451 2)
Average genome size in population (length): 35.761
Average program size in population (points): 36.761
Average percent parens in population: 0.028
Minimum age in population: 115.4026433593171
Maximum age in population: 120.0389911667278
Average age in population: 118.0278383669851
Median age in population: 118.0488986606159
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.633
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.127
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 83636715
--- Timings ---
Current time: 1529615439055 milliseconds
Total Time:         264.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.3 seconds, 43.9%
Fitness Testing:    119.4 seconds, 45.1%
Report:              29.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction float_frominteger} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_mult} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_sub integer_max integer_stackdepth float_mod integer_add integer_max float_yankdup float_add float_dec float_dec float_frominteger integer_add in2 integer_add float_dec float_dup integer_mult float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dup_items float_dec integer_flush float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2114.395220500009
Median total errors in population: 911.8234999999999
Error averages by case: (94.3435664000002 10.064 107.28338290000093 11.861 77.02958719999968 10.17 109.19570260000107 9.386 46.386338400000675 11.012 68.55308799999882 11.057 83.2458255999987 9.463 69.06818500000139 10.214 70.04274939999976 11.762 79.0585634999993 10.029 57.81863150000154 9.148 70.39973550000111 10.093 58.34953159999855 11.066 77.11786449999963 11.958 91.44454789999965 10.975 65.0732554999996 11.215 45.088042300000254 10.987 122.89223250000248 11.123 58.56529109999855 11.823 73.49866400000015 10.888 62.587641299999525 10.203 66.39273159999945 9.185 63.13217500000061 10.925 71.45225390000118 9.324 64.05863330000055 8.386)
Error minima by case: (0.9208 2 11.5695 2 0.0 0 23.0 2 1.0 1 0.1762 2 14.0981 1 6.8723 1 1.6166 2 13.2064 1 0.0 0 14.7099 2 0.0 0 5.8239 2 28.9031 2 15.7975 2 0.2431 1 2.3672 2 1.5733 2 19.3617 2 1.0571 1 10.7964 3 2.6074 2 0.3958 2 4.3207 2)
Average genome size in population (length): 36.082
Average program size in population (points): 37.082
Average percent parens in population: 0.027
Minimum age in population: 117.2645411880541
Maximum age in population: 121.4178333198324
Average age in population: 119.4580238170389
Median age in population: 119.5178639399839
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.613
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.613
Total error diversity:				 0.129
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.143
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 84538840
--- Timings ---
Current time: 1529615441958 milliseconds
Total Time:         267.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.7 seconds, 43.9%
Fitness Testing:    120.6 seconds, 45.0%
Report:              29.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_max} {:instruction in2} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_max in2 integer_add in2 integer_add float_dec float_dup float_dup integer_add float_dec integer_yank integer_rot float_dec float_yankdup integer_rot float_dec integer_yank float_mod float_dec float_yankdup print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2481.493076800007
Median total errors in population: 911.8234999999999
Error averages by case: (108.84648820000044 10.143 123.02309790000092 11.937 93.3841011999997 10.225 122.23022810000126 9.472 63.0800945000009 11.063 84.21229659999885 11.03 96.79819989999869 9.571 84.34446440000151 10.201 83.26789990000044 11.758 94.54391369999882 10.012 72.3168014000018 9.239 85.03475680000106 10.133 74.99860409999935 11.105 87.62502689999964 11.932 105.89429559999942 10.944 78.29817889999963 11.232 61.560989400000224 10.997 137.77822500000198 11.174 73.38582699999907 11.838 87.62482399999918 10.917 76.00063600000047 10.278 80.6545380000007 9.251 77.60517639999948 10.968 86.98237070000113 9.382 78.71004220000049 8.49)
Error minima by case: (0.9208 2 19.1992 8 1.0 1 21.0 2 0.4428 8 0.1762 2 2.1513 2 4.8723 1 6.545 8 13.2064 1 0.0 0 14.7099 2 1.0 1 0.5387 2 20.3579 3 6.0357 8 0.2431 2 37.3718 8 1.5733 2 25.3617 2 0.0571 1 16.7964 2 8.6074 2 0.6042 2 16.451 2)
Average genome size in population (length): 35.929
Average program size in population (points): 36.929
Average percent parens in population: 0.027
Minimum age in population: 118.3085599652408
Maximum age in population: 122.7777161876448
Average age in population: 120.8631134819212
Median age in population: 120.9007253412364
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.136
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.152
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 85437140
--- Timings ---
Current time: 1529615445101 milliseconds
Total Time:         270.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.1 seconds, 44.0%
Fitness Testing:    122.0 seconds, 45.0%
Report:              29.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_yankdup} {:instruction float_dec} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_yank integer_stackdepth integer_max float_dec float_yankdup float_add in2 integer_yankdup float_dec float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank float_yankdup integer_dup_items float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2239.156276800006
Median total errors in population: 911.8234999999999
Error averages by case: (99.2963406000003 10.045 111.53212720000091 11.85 77.75280099999968 10.194 113.85165850000136 9.377 50.45421530000075 10.996 75.72902419999895 11.002 91.90464229999877 9.559 73.9563041000012 10.179 77.3481346000004 11.742 84.18024949999928 9.992 62.45336340000165 9.17 75.63347990000096 10.034 59.05684889999854 11.094 80.9427951999997 11.883 96.37338439999988 10.913 70.08445759999967 11.208 49.67318280000022 11.005 127.00950290000253 11.108 63.964860599998445 11.765 78.48884379999966 10.835 69.65272239999999 10.282 71.47525290000037 9.137 68.37324100000016 10.875 78.74427820000102 9.344 69.22056550000046 8.415)
Error minima by case: (0.9208 2 14.5398 7 2.9193 1 24.0 3 0.4167 8 0.1762 2 9.2787 2 0.6038 1 0.3834 8 13.2064 1 0.0 0 14.7099 2 3.0 1 1.8888 2 21.427 2 5.8583 8 0.2431 2 2.3672 9 1.5733 2 24.3617 2 0.0571 2 15.7964 3 7.6074 2 0.3958 2 16.451 2)
Average genome size in population (length): 35.809
Average program size in population (points): 36.809
Average percent parens in population: 0.028
Minimum age in population: 119.7567118097181
Maximum age in population: 124.5982929631157
Average age in population: 122.251796568002
Median age in population: 122.2344973977423
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.134
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 86332465
--- Timings ---
Current time: 1529615448265 milliseconds
Total Time:         274.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       120.4 seconds, 43.9%
Fitness Testing:    123.4 seconds, 45.0%
Report:              30.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction float_min} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult float_min integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec integer_yank integer_add float_dec integer_yank float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2263.242798300008
Median total errors in population: 911.8234999999999
Error averages by case: (103.67478720000058 10.095 115.9166061000009 11.892 85.5894059999997 10.189 118.74144580000126 9.395 55.457475200000864 11.022 69.11511009999896 11.052 81.80358019999879 9.452 69.08372150000129 10.205 68.01575339999944 11.712 78.96796299999964 10.012 67.03824840000182 9.186 80.52963340000099 10.099 66.64005769999835 11.078 83.64283559999964 11.957 91.70919000000012 10.95 69.61277239999966 11.213 54.23634750000023 10.968 131.80201650000262 11.14 68.87352729999853 11.814 83.48263219999966 10.871 60.88978539999953 10.177 76.48597830000031 9.203 73.41776100000011 10.921 72.10166290000102 9.361 74.03250120000047 8.418)
Error minima by case: (0.9208 2 13.5398 8 1.0 1 7.9964 2 0.3839 8 0.1761 2 17.6556 2 7.8723 1 1.6166 8 11.2064 1 0.0 0 14.7099 2 0.7199 1 1.1112 2 16.109 3 0.0161 9 0.2431 1 1.3672 9 1.5733 2 6.0036 2 0.0571 2 11.0036 3 8.6074 2 0.6042 2 16.451 2)
Average genome size in population (length): 35.799
Average program size in population (points): 36.799
Average percent parens in population: 0.028
Minimum age in population: 121.2251674211358
Maximum age in population: 125.5635031178227
Average age in population: 123.7212170189912
Median age in population: 123.7556911826318
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.135
Error (vector) diversity:			 0.149
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 87227490
--- Timings ---
Current time: 1529615451216 milliseconds
Total Time:         277.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.8 seconds, 44.0%
Fitness Testing:    124.7 seconds, 45.0%
Report:              30.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 44708.03610000005
Test mean error for best: 22.35402
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction print_integer} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -45.961899873122135} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_pop integer_max integer_yank integer_stackdepth float_dec float_yankdup float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec integer_dup_times integer_add integer_add float_dec integer_yank integer_yank integer_rot float_dec float_yankdup print_integer float_dec integer_yank float_mod float_dec float_yankdup integer_add -45.961899873122135 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 20.6556 9 9.8723 10 10.3834 11 27.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 31.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2278.5761765000057
Median total errors in population: 911.8234999999999
Error averages by case: (101.66976470000057 10.087 113.64443630000082 11.819 84.05205169999971 10.181 114.8405266000013 9.442 53.76496120000077 10.953 75.73937079999901 11.015 87.0291631999988 9.504 74.9513770000011 10.202 74.0913525000001 11.707 85.06345719999932 9.991 63.51477100000149 9.195 80.4185007000009 10.095 65.50387479999857 11.037 80.32761749999968 11.873 96.87692879999938 10.925 70.17357169999963 11.169 52.9156701000002 10.953 128.65754610000226 11.096 68.81584009999894 11.759 80.8459564999995 10.818 66.52444129999965 10.231 74.31720860000024 9.209 72.56225879999997 10.869 78.65492130000102 9.363 71.65960800000046 8.468)
Error minima by case: (0.9208 2 5.0 1 0.0 0 23.0 2 0.2342 1 0.1762 2 7.8041 2 6.8723 1 5.0 1 13.2064 1 0.0 0 15.7099 2 0.0 0 1.8888 1 3.0969 2 3.8681 2 0.1995 2 4.487 1 2.5733 2 16.2345 2 0.0571 2 15.7964 2 7.6074 2 0.3958 2 3.4032 2)
Average genome size in population (length): 35.562
Average program size in population (points): 36.562
Average percent parens in population: 0.028
Minimum age in population: 122.6109403932401
Maximum age in population: 127.0773451233821
Average age in population: 125.162056638733
Median age in population: 125.2098432015407
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.638
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.638
Total error diversity:				 0.152
Error (vector) diversity:			 0.165
Behavioral diversity:				 0.166
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 88116565
--- Timings ---
Current time: 1529615454102 milliseconds
Total Time:         280.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.2 seconds, 44.0%
Fitness Testing:    125.9 seconds, 45.0%
Report:              30.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 44696.03720000006
Test mean error for best: 22.34802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 133.6475671118
Correct output: -23.655607388  | Program output: -2.0          
Correct output: 85.8723285783  | Program output: 95.7446571566 
Correct output: 7.3833649895   | Program output: -2.0          
Correct output: 66.4021182413  | Program output: 38.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -2.0          
Correct output: 119.9031170612 | Program output: 151.8062341223
Correct output: 20.2024981978  | Program output: -2.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -2.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 145.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_max} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_dup} {:instruction float_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction tagged_126} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_max integer_stackdepth integer_shove integer_max integer_dup float_yankdup float_add float_dec float_dec integer_add in2 integer_add float_dec float_dup integer_shove float_dec integer_yank integer_yank integer_rot float_dec float_yankdup integer_dec float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger tagged_126 integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.8238 11 21.6556 9 9.8723 10 9.3834 12 27.5979 10 19.7801 9 18.7099 10 20.9385 11 39.1112 12 31.9031 11 22.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 4.0571 10 20.7964 9 12.6074 11 2.6042 9 20.451 8]
Total: 911.8234999999999
Mean: 18.23647
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2327.8736808000076
Median total errors in population: 911.8234999999999
Error averages by case: (106.07235940000041 10.118 118.1828779000009 11.925 87.5680882999997 10.209 120.48557750000109 9.431 57.678453500000785 11.041 71.33796599999891 11.058 86.83674459999875 9.464 71.86737220000106 10.202 73.48615930000014 11.718 82.30526769999923 10.06 69.22505630000153 9.225 82.523159000001 10.138 69.07507249999892 11.096 85.59582719999965 11.953 93.76157389999992 10.985 72.69373179999964 11.207 56.55357540000022 10.998 133.55899470000216 11.14 70.84876199999896 11.839 85.38548479999952 10.894 66.15771999999997 10.231 78.3191795000005 9.245 75.26639559999961 10.942 74.06924770000104 9.376 76.06203400000051 8.462)
Error minima by case: (0.9208 2 12.5398 8 1.0 1 24.0 3 0.4428 7 0.1762 2 1.0429 2 6.8723 1 0.6166 8 13.2064 1 0.0 0 15.7099 2 1.0 1 1.8888 2 1.9031 2 10.7975 8 0.2431 2 0.3672 9 2.5733 2 23.3617 2 0.0571 2 14.7964 3 6.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 35.471
Average program size in population (points): 36.471
Average percent parens in population: 0.028
Minimum age in population: 123.7343773061689
Maximum age in population: 128.5818502500298
Average age in population: 126.6323672261653
Median age in population: 126.6396731443566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.614
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.614
Total error diversity:				 0.123
Error (vector) diversity:			 0.138
Behavioral diversity:				 0.138
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 89003365
--- Timings ---
Current time: 1529615456939 milliseconds
Total Time:         282.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.5 seconds, 44.0%
Fitness Testing:    127.1 seconds, 44.9%
Report:              31.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 44748.872500000056
Test mean error for best: 22.37444
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 132.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 94.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 37.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 150.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 144.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.1762 10 20.6556 9 8.8723 11 10.3834 11 28.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 30.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 1.6042 9 20.451 8]
Total: 909.1758999999998
Mean: 18.183517
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2363.769027600006
Median total errors in population: 911.8234999999999
Error averages by case: (104.51086910000043 10.04 117.5807250000009 11.923 86.5312042999997 10.15 117.41783340000114 9.369 57.01779100000079 11.018 79.87728539999895 10.969 90.84268029999886 9.476 79.13485390000139 10.108 77.97001220000047 11.757 90.11067759999904 9.942 67.24150380000161 9.118 81.66516260000097 10.04 68.17988239999896 11.023 86.82361549999965 11.914 100.78053839999966 10.87 74.45709529999962 11.216 55.730672300000215 10.945 133.86965040000206 11.135 70.04621509999903 11.716 83.49380349999946 10.821 70.89745630000026 10.206 76.80330750000049 9.166 74.12559619999962 10.855 82.587211300001 9.307 74.60138480000043 8.388)
Error minima by case: (1.9208 2 7.1716 2 0.0 0 22.0 2 0.4428 1 0.024 2 2.5876 1 6.8723 1 0.3834 8 5.2064 1 0.0 0 15.7099 2 0.0 0 1.8888 2 13.2853 2 6.0357 9 0.2431 1 4.3672 2 2.5733 2 24.3617 2 0.0571 1 15.7964 2 7.6074 2 0.3958 2 17.451 1)
Average genome size in population (length): 35.554
Average program size in population (points): 36.554
Average percent parens in population: 0.028
Minimum age in population: 125.6069535934633
Maximum age in population: 130.0337369499493
Average age in population: 128.079530082249
Median age in population: 128.1503746774076
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.61
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.61
Total error diversity:				 0.133
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 89892265
--- Timings ---
Current time: 1529615459919 milliseconds
Total Time:         285.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.9 seconds, 44.1%
Fitness Testing:    128.3 seconds, 44.9%
Report:              31.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 44748.872500000056
Test mean error for best: 22.37444
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 132.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 94.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 37.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 150.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 144.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.1762 10 20.6556 9 8.8723 11 10.3834 11 28.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 30.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 1.6042 9 20.451 8]
Total: 909.1758999999998
Mean: 18.183517
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2419.9779766000065
Median total errors in population: 911.8234999999999
Error averages by case: (107.44634330000052 10.189 120.37047180000084 11.857 90.6900312999997 10.247 121.39666670000136 9.527 60.98939380000106 11.024 78.74776139999888 11.111 95.10856569999883 9.594 78.26231820000123 10.301 80.5259022000004 11.735 87.81975819999926 10.095 70.25341110000171 9.299 84.68117660000098 10.194 72.30710919999926 11.079 86.87262539999965 11.941 100.52531759999967 11.03 76.24217379999962 11.23 60.050592700000195 10.972 134.7182372000022 11.139 73.01968549999921 11.868 86.76327679999942 10.942 73.08605980000041 10.273 79.86841220000056 9.299 77.20211389999955 10.99 81.49945930000102 9.433 77.6201129000005 8.542)
Error minima by case: (0.9208 2 14.5398 8 1.0 1 6.6977 3 0.2932 7 0.1762 2 15.3141 2 2.9128 1 0.3834 8 13.2064 1 0.0 0 15.7099 2 1.0 1 1.8888 2 3.0969 2 6.0357 8 0.2431 2 2.3672 7 2.5733 2 23.3617 2 1.0355 1 14.7964 3 6.6074 3 0.3958 2 17.451 2)
Average genome size in population (length): 35.512
Average program size in population (points): 36.512
Average percent parens in population: 0.028
Minimum age in population: 126.7486675515153
Maximum age in population: 131.6031741175843
Average age in population: 129.4524378906989
Median age in population: 129.4838495118769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.143
Error (vector) diversity:			 0.159
Behavioral diversity:				 0.159
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 90780140
--- Timings ---
Current time: 1529615462964 milliseconds
Total Time:         288.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.4 seconds, 44.1%
Fitness Testing:    129.5 seconds, 44.8%
Report:              31.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 44748.872500000056
Test mean error for best: 22.37444
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 132.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 94.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 37.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 150.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 144.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.1762 10 20.6556 9 8.8723 11 10.3834 11 28.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 30.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 1.6042 9 20.451 8]
Total: 909.1758999999998
Mean: 18.183517
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2165.3325273000078
Median total errors in population: 911.8234999999999
Error averages by case: (98.10089850000026 10.068 111.60797160000092 11.878 80.10202389999971 10.168 112.68970910000108 9.394 51.171313100000724 11.009 67.41652459999891 10.929 81.38226779999869 9.473 67.44064800000137 10.152 67.9979985999996 11.741 78.48068399999971 9.953 61.377293100001786 9.152 74.88614500000108 10.057 61.49712629999837 11.054 79.14111829999963 11.948 89.65911859999999 10.897 66.2677364999996 11.233 50.53575780000024 10.967 126.26844060000268 11.125 63.19682039999829 11.769 77.49175530000004 10.846 60.262084799999315 10.203 70.54855240000005 9.174 67.56210220000024 10.9 70.37653780000112 9.279 68.0858990000005 8.417)
Error minima by case: (0.0792 2 21.5398 8 1.0 1 24.0 2 0.3907 8 0.1762 2 0.278 1 1.8059 1 2.6166 8 13.2064 1 0.0 0 14.7099 2 1.0 1 1.1112 2 27.9031 3 7.7975 8 0.2431 1 9.3672 9 1.5733 2 21.3617 2 0.0571 2 12.7964 3 4.6074 2 0.6042 2 16.451 2)
Average genome size in population (length): 35.516
Average program size in population (points): 36.516
Average percent parens in population: 0.028
Minimum age in population: 128.4595415613417
Maximum age in population: 132.9129820227099
Average age in population: 130.9404092712703
Median age in population: 130.9788173758123
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.621
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.621
Total error diversity:				 0.129
Error (vector) diversity:			 0.144
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 91668065
--- Timings ---
Current time: 1529615465956 milliseconds
Total Time:         291.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.9 seconds, 44.2%
Fitness Testing:    130.8 seconds, 44.8%
Report:              32.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 44748.872500000056
Test mean error for best: 22.37444
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 132.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 94.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 37.8042364827 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 150.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 144.2083240669
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 0.1762 10 20.6556 9 8.8723 11 10.3834 11 28.5979 10 19.7801 9 18.7099 10 20.9385 11 40.1112 12 30.9031 11 23.2025 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 3.0571 10 20.7964 9 12.6074 11 1.6042 9 20.451 8]
Total: 909.1758999999998
Mean: 18.183517
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2507.244217600008
Median total errors in population: 911.8234999999999
Error averages by case: (109.7050714000011 10.095 124.32270610000087 11.935 95.67975359999967 10.218 124.18922050000182 9.447 65.28945780000139 11.033 82.77076929999922 10.906 94.36800279999873 9.505 83.08275120000154 10.33 81.59034650000105 11.617 94.03776929999827 10.033 74.36785550000198 9.189 86.27764080000102 10.089 77.31066919999932 11.075 94.81546239999965 11.921 104.96895719999883 10.964 81.72776019999957 11.227 63.87823540000019 10.966 140.39870640000225 11.149 74.85420109999897 11.786 89.39789619999868 10.846 74.2530562000001 10.226 82.52098710000122 9.182 79.38359519999916 10.906 85.47947270000101 9.379 80.09487350000046 8.455)
Error minima by case: (0.0792 2 20.5398 9 1.0 1 24.0 3 0.0667 8 0.1762 2 18.3444 2 6.8723 1 0.6166 8 13.2064 1 0.0 0 13.7099 2 1.0 1 1.8888 2 26.2528 2 10.7975 8 0.2431 2 8.3672 9 0.5733 2 25.3617 2 1.0571 2 16.7964 3 8.6074 2 0.3958 2 15.451 2)
Average genome size in population (length): 35.692
Average program size in population (points): 36.692
Average percent parens in population: 0.028
Minimum age in population: 129.8194759658294
Maximum age in population: 134.4176273452238
Average age in population: 132.4344979203788
Median age in population: 132.4898474199054
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.626
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.626
Total error diversity:				 0.134
Error (vector) diversity:			 0.156
Behavioral diversity:				 0.156
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 92560415
--- Timings ---
Current time: 1529615469165 milliseconds
Total Time:         294.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.3 seconds, 44.2%
Fitness Testing:    132.1 seconds, 44.8%
Report:              32.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 44787.59230000007
Test mean error for best: 22.39380
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -57.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -192.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 131.6475671118
Correct output: -23.655607388  | Program output: -3.0          
Correct output: 85.8723285783  | Program output: 93.7446571566 
Correct output: 7.3833649895   | Program output: -3.0          
Correct output: 66.4021182413  | Program output: 36.8042364827 
Correct output: -23.7801401349 | Program output: -42.5602802697
Correct output: -167.2900974766 | Program output: -147.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.0          
Correct output: 119.9031170612 | Program output: 149.8062341223
Correct output: 20.2024981978  | Program output: -3.0          
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -153.8534326754
Correct output: -111.361734735 | Program output: -139.7234694699
Correct output: -6.0571083203  | Program output: -3.0          
Correct output: -112.796431795 | Program output: -132.59286359 
Correct output: -148.6073793052 | Program output: -160.2147586103
Correct output: 142.6041620334 | Program output: 143.2083240669
Correct output: -89.5489990384 | Program output: -68.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [54.6931 10 72.4602 12 40.409 10 68.8849 10 5.5572 11 1.1762 11 20.6556 9 7.8723 11 10.3834 11 29.5979 9 18.7801 10 19.7099 9 20.9385 11 40.1112 12 29.9031 10 23.2025 11 1.7569 11 90.6328 11 6.5733 12 28.3617 11 3.0571 10 19.7964 8 11.6074 11 0.6042 9 21.451 9]
Total: 907.1758999999998
Mean: 18.143518
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2339.7567188000066
Median total errors in population: 911.8234999999999
Error averages by case: (103.87563260000029 10.133 118.63569260000084 11.924 89.27158979999969 10.135 120.81829580000095 9.5 59.39325960000061 11.019 72.40378379999999 10.536 84.26099859999886 9.487 73.399266300001 10.507 72.62663849999984 11.394 84.67433289999929 9.952 69.03767670000133 9.22 82.31953610000093 10.115 70.82616999999904 10.999 88.44860409999967 11.89 95.46986119999998 10.875 74.72122109999962 11.209 58.263948700000206 10.942 134.81557450000207 11.109 71.04150789999899 11.812 85.2829432999995 10.885 64.87415549999983 10.205 78.28766720000029 9.214 75.48635409999986 10.922 75.01478720000092 9.245 74.76822070000044 8.51)
Error minima by case: (0.0792 2 24.2717 9 0.0 0 24.0 2 0.0667 7 0.1762 2 18.3444 2 5.8723 1 3.8624 8 12.2064 1 0.0 0 15.7099 2 0.0 0 14.6663 2 27.9031 3 8.9567 9 0.2431 1 33.3644 9 2.5733 2 25.3617 2 1.0571 2 16.7964 3 8.6074 2 0.3958 2 17.451 2)
Average genome size in population (length): 36.235
Average program size in population (points): 37.235
Average percent parens in population: 0.027
Minimum age in population: 130.8194759658294
Maximum age in population: 136.0909377320781
Average age in population: 133.9865508388136
Median age in population: 134.0135816328938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 245
Genome diversity (% unique Plush genomes):	 0.574
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 245
Syntactic diversity (% unique Push programs):	 0.574
Total error diversity:				 0.139
Error (vector) diversity:			 0.173
Behavioral diversity:				 0.173
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 93466340
--- Timings ---
Current time: 1529615472134 milliseconds
Total Time:         298.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.7 seconds, 44.2%
Fitness Testing:    133.4 seconds, 44.8%
Report:              32.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 44604.25020000002
Test mean error for best: 22.30213
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 131.6476357119
Correct output: -23.655607388  | Program output: -2.5493174938 
Correct output: 85.8723285783  | Program output: 93.7677900028 
Correct output: 7.3833649895   | Program output: -3.9069282578 
Correct output: 66.4021182413  | Program output: 36.9830243637 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.4744714088 
Correct output: 119.9031170612 | Program output: 150.0430709256
Correct output: 20.2024981978  | Program output: -2.4878057818 
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.5297798101 
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 143.6826822851
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 1.1761 8 21.1063 9 7.8955 11 11.2903 10 29.4191 10 19.7801 9 18.7099 10 20.9385 11 40.5857 12 30.14 10 22.6903 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 2.5273 9 20.7964 9 12.6074 11 1.0785 9 20.451 8]
Total: 904.5215
Mean: 18.09043
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1768.4082492000007
Median total errors in population: 909.1758999999998
Error averages by case: (83.2982276999996 9.962 97.80036950000084 11.89 67.69892759999968 10.123 98.95207770000066 9.284 37.06467269999988 10.994 45.7763587000006 10.188 61.421822599998855 9.411 47.6683761000005 10.747 49.603750499999485 11.177 61.43841860000041 9.874 48.22891160000087 9.032 58.89946140000094 9.93 48.72676319999926 11.03 68.47485999999967 11.907 69.97460170000119 10.799 53.87898429999962 11.16 36.01044190000025 10.973 114.42304090000195 11.038 47.15189359999912 11.704 62.78755080000084 10.733 41.311360100000506 10.166 55.554376199999524 9.016 51.91402020000049 10.768 48.06944590000085 9.104 52.97153570000042 8.298)
Error minima by case: (0.0792 2 3.6046 9 1.0 1 24.0 3 0.9943 8 0.024 2 7.3244 1 6.8723 1 5.1983 9 7.1958 1 0.0 0 3.736 2 1.0 1 1.8888 2 3.907 3 5.0357 8 0.1995 2 9.3672 8 2.5733 2 23.3617 2 0.0571 1 14.7964 3 6.6074 2 0.3958 2 12.098 2)
Average genome size in population (length): 36.957
Average program size in population (points): 37.957
Average percent parens in population: 0.026
Minimum age in population: 132.9453138249072
Maximum age in population: 137.4725200685095
Average age in population: 135.478859413737
Median age in population: 135.5294773254456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 389
Genome diversity (% unique Plush genomes):	 0.456
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 389
Syntactic diversity (% unique Push programs):	 0.456
Total error diversity:				 0.13
Error (vector) diversity:			 0.153
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 94390415
--- Timings ---
Current time: 1529615475159 milliseconds
Total Time:         301.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.1 seconds, 44.2%
Fitness Testing:    134.7 seconds, 44.7%
Report:              33.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 44604.25020000002
Test mean error for best: 22.30213
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: 0.0           
Correct output: 40.4089903884  | Program output: 0.0           
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: 0.0           
Correct output: 132.8237835559 | Program output: 131.6476357119
Correct output: -23.655607388  | Program output: -2.5493174938 
Correct output: 85.8723285783  | Program output: 93.7677900028 
Correct output: 7.3833649895   | Program output: -3.9069282578 
Correct output: 66.4021182413  | Program output: 36.9830243637 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: 0.0           
Correct output: 37.1112256226  | Program output: -3.4744714088 
Correct output: 119.9031170612 | Program output: 150.0430709256
Correct output: 20.2024981978  | Program output: -2.4878057818 
Correct output: 1.7569467681   | Program output: 0.0           
Correct output: -90.6328406884 | Program output: 0.0           
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -3.5297798101 
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 143.6826822851
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 72.4602 12 40.409 10 69.8849 9 5.5572 11 1.1761 8 21.1063 9 7.8955 11 11.2903 10 29.4191 10 19.7801 9 18.7099 10 20.9385 11 40.5857 12 30.14 10 22.6903 11 1.7569 11 90.6328 11 5.5733 12 29.3617 11 2.5273 9 20.7964 9 12.6074 11 1.0785 9 20.451 8]
Total: 904.5215
Mean: 18.09043
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1799.2285642000006
Median total errors in population: 909.1758999999998
Error averages by case: (87.23606610000012 10.047 99.71865630000093 11.894 68.66732129999966 10.099 102.37254300000097 9.385 37.573845300000315 10.975 45.46136230000059 10.261 59.50017559999891 9.316 47.30642640000085 10.857 47.96827959999944 11.157 61.63129200000039 9.936 50.5036671000014 9.158 62.867340600001 10.003 49.82268499999874 10.989 67.06589249999966 11.918 69.63837660000088 10.846 52.66822649999964 11.153 35.984227400000265 10.946 116.5785725000023 11.05 51.01850139999866 11.805 66.30157760000071 10.845 39.9459295999999 10.052 59.060050499999484 9.07 55.65078040000054 10.87 47.808749500000836 9.178 56.662019100000514 8.406)
Error minima by case: (0.0792 2 15.5398 1 0.0 0 24.0 3 0.7486 1 0.024 2 1.9263 1 5.8723 1 0.6166 6 5.1958 1 0.0 0 15.7099 2 0.0 0 3.1112 2 5.907 2 5.7975 8 0.2431 2 3.3672 2 2.5733 2 25.3617 2 1.0571 1 16.7964 3 8.6074 2 0.3958 2 11.098 2)
Average genome size in population (length): 37.49
Average program size in population (points): 38.49
Average percent parens in population: 0.026
Minimum age in population: 134.2818723253562
Maximum age in population: 138.8647820977523
Average age in population: 136.9458498224852
Median age in population: 136.9972270941557
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 322
Genome diversity (% unique Plush genomes):	 0.471
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 322
Syntactic diversity (% unique Push programs):	 0.471
Total error diversity:				 0.151
Error (vector) diversity:			 0.172
Behavioral diversity:				 0.173
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 95327790
--- Timings ---
Current time: 1529615478358 milliseconds
Total Time:         304.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.4 seconds, 44.2%
Fitness Testing:    136.1 seconds, 44.8%
Report:              33.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 52745.81380000002
Test mean error for best: 26.37291
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -55.6138760391
Correct output: -72.4601683407 | Program output: -1.0          
Correct output: 40.4089903884  | Program output: -1.0          
Correct output: -123.8848837001 | Program output: -190.7697674002
Correct output: -5.5572409402  | Program output: -1.0          
Correct output: 132.8237835559 | Program output: 129.647704312 
Correct output: -23.655607388  | Program output: -3.0986349876 
Correct output: 85.8723285783  | Program output: 91.7909228489 
Correct output: 7.3833649895   | Program output: -1.9069282578 
Correct output: 66.4021182413  | Program output: 35.1618122447 
Correct output: -23.7801401349 | Program output: -40.5602802697
Correct output: -167.2900974766 | Program output: -145.5801949532
Correct output: 20.9384936831  | Program output: -1.0          
Correct output: 37.1112256226  | Program output: -1.4744714088 
Correct output: 119.9031170612 | Program output: 148.2799077288
Correct output: 20.2024981978  | Program output: -2.9756115636 
Correct output: 1.7569467681   | Program output: -1.0          
Correct output: -90.6328406884 | Program output: -1.0          
Correct output: -160.4267163377 | Program output: -151.8534326754
Correct output: -111.361734735 | Program output: -137.7234694699
Correct output: -6.0571083203  | Program output: -1.5297798101 
Correct output: -112.796431795 | Program output: -130.59286359 
Correct output: -148.6073793052 | Program output: -158.2147586103
Correct output: 142.6041620334 | Program output: 142.1570405034
Correct output: -89.5489990384 | Program output: -66.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup float_mod float_dec float_yankdup integer_rot -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [56.6931 10 71.4602 11 41.409 11 66.8849 10 4.5572 10 3.1761 11 20.557 9 5.9186 10 9.2903 11 31.2403 9 16.7801 10 21.7099 10 21.9385 12 38.5857 12 28.3768 11 23.1781 12 2.7569 11 89.6328 11 8.5733 12 26.3617 11 4.5273 9 17.7964 9 9.6074 10 0.4471 7 23.451 9]
Total: 902.9096999999999
Mean: 18.058193
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1954.1481805000008
Median total errors in population: 909.1758999999998
Error averages by case: (93.53720280000037 10.1 106.80526890000085 11.909 78.87805959999969 10.167 107.95673620000089 9.599 47.05507540000055 10.986 51.68342280000043 10.183 61.599849299999086 9.353 52.434760700000496 10.87 50.89524249999955 11.125 66.59025810000009 9.837 57.67042170000131 9.346 69.24473180000092 9.9 60.22288059999886 11.039 72.5196276999998 11.87 74.91248330000049 10.622 57.479071299999774 11.169 45.21572590000019 10.995 123.48837420000216 11.055 57.4309912999987 11.825 72.16568940000012 10.878 42.6233852000003 9.954 65.06667959999949 8.959 61.572908000000496 10.895 53.52801720000088 9.18 63.15131700000047 8.604)
Error minima by case: (0.9208 2 23.185 2 1.0 1 24.0 3 0.3839 1 0.1761 2 3.6745 2 4.8723 1 4.1366 10 8.2064 1 0.0 0 15.7099 2 1.0 1 26.0638 2 3.1007 2 5.0357 8 0.2431 2 8.1089 1 2.5733 2 12.62 2 0.9429 1 14.0547 3 8.6074 2 0.0785 2 9.1928 2)
Average genome size in population (length): 38.259
Average program size in population (points): 39.259
Average percent parens in population: 0.026
Minimum age in population: 135.2818723253562
Maximum age in population: 140.3441493040939
Average age in population: 138.3768168561648
Median age in population: 138.4359286703513
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 174
Genome diversity (% unique Plush genomes):	 0.501
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 174
Syntactic diversity (% unique Push programs):	 0.501
Total error diversity:				 0.151
Error (vector) diversity:			 0.174
Behavioral diversity:				 0.174
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 96284290
--- Timings ---
Current time: 1529615481574 milliseconds
Total Time:         307.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.9 seconds, 44.2%
Fitness Testing:    137.5 seconds, 44.7%
Report:              33.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 52736.02299999996
Test mean error for best: 26.36801
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -55.6138760391
Correct output: -72.4601683407 | Program output: -1.9203366813 
Correct output: 40.4089903884  | Program output: -2.1820192232 
Correct output: -123.8848837001 | Program output: -190.7697674002
Correct output: -5.5572409402  | Program output: -2.1144818804 
Correct output: 132.8237835559 | Program output: 127.647704312 
Correct output: -23.655607388  | Program output: -5.0986349876 
Correct output: 85.8723285783  | Program output: 89.7909228489 
Correct output: 7.3833649895   | Program output: -1.9069282578 
Correct output: 66.4021182413  | Program output: 33.1618122447 
Correct output: -23.7801401349 | Program output: -40.5602802697
Correct output: -167.2900974766 | Program output: -145.5801949532
Correct output: 20.9384936831  | Program output: -1.1230126338 
Correct output: 37.1112256226  | Program output: -1.4744714088 
Correct output: 119.9031170612 | Program output: 146.2799077288
Correct output: 20.2024981978  | Program output: -4.9756115636 
Correct output: 1.7569467681   | Program output: -1.4861064638 
Correct output: -90.6328406884 | Program output: -2.2656813769 
Correct output: -160.4267163377 | Program output: -151.8534326754
Correct output: -111.361734735 | Program output: -137.7234694699
Correct output: -6.0571083203  | Program output: -1.5297798101 
Correct output: -112.796431795 | Program output: -130.59286359 
Correct output: -148.6073793052 | Program output: -158.2147586103
Correct output: 142.6041620334 | Program output: 140.1570405034
Correct output: -89.5489990384 | Program output: -66.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add float_dec float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [56.6931 10 70.5398 11 42.591 11 66.8849 10 3.4428 10 5.1761 11 18.557 10 3.9186 9 9.2903 11 33.2403 9 16.7801 10 21.7099 10 22.0615 10 38.5857 12 26.3768 11 25.1781 12 3.2431 8 88.3672 11 8.5733 12 26.3617 11 4.5273 9 17.7964 9 9.6074 10 2.4471 8 23.451 9]
Total: 899.4005000000001
Mean: 17.98801
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2020.6379112000004
Median total errors in population: 907.1758999999998
Error averages by case: (98.22345610000006 10.192 110.62329100000086 11.869 82.07963759999969 10.194 112.81890630000096 9.784 50.985735300000265 10.956 51.55089480000001 9.693 61.38676199999952 9.401 51.63526139999984 10.915 50.99075989999994 10.891 66.74392029999981 9.881 61.66703270000132 9.547 75.14865540000095 9.873 63.3489310999989 11.039 72.99208330000027 11.81 74.21610350000014 10.38 57.765965800000025 11.085 49.93012960000021 10.976 126.27496480000212 11.075 63.572226999998676 11.889 77.32696670000006 10.947 42.28795960000045 9.626 70.26581109999982 8.923 67.35682890000042 10.954 53.40338430000063 9.213 68.11024270000047 8.819)
Error minima by case: (0.9208 2 20.5398 8 1.0 1 15.0151 2 0.3839 7 0.0855 2 5.4235 2 3.9186 1 4.3834 9 8.1958 1 0.0 0 11.7099 2 1.0 1 1.8888 2 1.093 2 10.7975 6 0.2431 1 8.3672 8 1.4267 2 24.2425 2 0.0571 2 15.7344 2 6.0725 3 0.0785 2 12.098 1)
Average genome size in population (length): 38.6
Average program size in population (points): 39.6
Average percent parens in population: 0.025
Minimum age in population: 137.3613399221974
Maximum age in population: 141.7891057650811
Average age in population: 139.7984282188421
Median age in population: 139.8323203084239
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 146
Genome diversity (% unique Plush genomes):	 0.461
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 146
Syntactic diversity (% unique Push programs):	 0.461
Total error diversity:				 0.196
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 97249340
--- Timings ---
Current time: 1529615484669 milliseconds
Total Time:         310.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.2 seconds, 44.2%
Fitness Testing:    138.9 seconds, 44.7%
Report:              34.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 52571.59939999997
Test mean error for best: 26.28580
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -55.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -190.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 130.647704312 
Correct output: -23.655607388  | Program output: -2.0986349876 
Correct output: 85.8723285783  | Program output: 92.7909228489 
Correct output: 7.3833649895   | Program output: -1.9069282578 
Correct output: 66.4021182413  | Program output: 36.1618122447 
Correct output: -23.7801401349 | Program output: -40.5602802697
Correct output: -167.2900974766 | Program output: -145.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -1.4744714088 
Correct output: 119.9031170612 | Program output: 149.2799077288
Correct output: 20.2024981978  | Program output: -1.9756115636 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -151.8534326754
Correct output: -111.361734735 | Program output: -137.7234694699
Correct output: -6.0571083203  | Program output: -1.5297798101 
Correct output: -112.796431795 | Program output: -130.59286359 
Correct output: -148.6073793052 | Program output: -158.2147586103
Correct output: 142.6041620334 | Program output: 143.1570405034
Correct output: -89.5489990384 | Program output: -66.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [56.6931 10 71.5398 11 40.591 10 66.8849 10 5.4428 10 2.1761 10 21.557 9 6.9186 10 9.2903 11 30.2403 8 16.7801 10 21.7099 10 21.0615 9 38.5857 12 29.3768 10 22.1781 12 2.2431 9 90.3672 10 8.5733 12 26.3617 11 4.5273 9 17.7964 9 9.6074 10 0.5529 8 23.451 9]
Total: 893.5063000000001
Mean: 17.870127
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2040.4832690999972
Median total errors in population: 904.5215
Error averages by case: (99.46328010000012 10.081 108.63332110000077 11.799 80.04817639999969 10.234 112.12786920000102 9.488 48.51834320000041 10.917 56.129881199999275 9.133 61.90937299999976 9.354 55.134800099999474 10.838 52.284491400000256 10.58 69.49580399999945 10.011 60.66544780000134 9.238 78.37775990000094 10.052 61.30686049999893 11.021 75.35234160000044 11.778 76.63611779999964 10.335 59.20862910000029 11.092 47.062380600000196 10.922 124.43726240000186 11.052 66.63828759999883 11.77 78.14106889999967 10.877 43.88962490000069 9.287 71.47760210000006 9.101 69.90527670000013 10.803 56.84833290000079 9.267 69.21393660000044 8.547)
Error minima by case: (0.9208 2 21.5398 2 3.0 1 24.0 2 0.5589 1 0.1761 3 18.1063 2 3.9186 1 5.3834 8 5.215 2 0.0 0 15.7099 2 3.0 1 1.8888 7 23.2768 3 0.5831 8 0.2431 1 4.0751 2 2.5733 2 12.1563 2 0.4727 2 13.591 3 8.6074 2 0.0785 2 5.159 2)
Average genome size in population (length): 37.375
Average program size in population (points): 38.375
Average percent parens in population: 0.026
Minimum age in population: 138.6455012767795
Maximum age in population: 143.1929592509212
Average age in population: 141.2981056758859
Median age in population: 141.3799170356379
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 324
Genome diversity (% unique Plush genomes):	 0.431
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 324
Syntactic diversity (% unique Push programs):	 0.431
Total error diversity:				 0.174
Error (vector) diversity:			 0.188
Behavioral diversity:				 0.188
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 98183740
--- Timings ---
Current time: 1529615487740 milliseconds
Total Time:         313.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.5 seconds, 44.2%
Fitness Testing:    140.3 seconds, 44.7%
Report:              34.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 52571.59939999997
Test mean error for best: 26.28580
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -55.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -190.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 130.647704312 
Correct output: -23.655607388  | Program output: -2.0986349876 
Correct output: 85.8723285783  | Program output: 92.7909228489 
Correct output: 7.3833649895   | Program output: -1.9069282578 
Correct output: 66.4021182413  | Program output: 36.1618122447 
Correct output: -23.7801401349 | Program output: -40.5602802697
Correct output: -167.2900974766 | Program output: -145.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -1.4744714088 
Correct output: 119.9031170612 | Program output: 149.2799077288
Correct output: 20.2024981978  | Program output: -1.9756115636 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -151.8534326754
Correct output: -111.361734735 | Program output: -137.7234694699
Correct output: -6.0571083203  | Program output: -1.5297798101 
Correct output: -112.796431795 | Program output: -130.59286359 
Correct output: -148.6073793052 | Program output: -158.2147586103
Correct output: 142.6041620334 | Program output: 143.1570405034
Correct output: -89.5489990384 | Program output: -66.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_shove} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add integer_rot integer_dup_times float_yankdup integer_add float_dec integer_yank float_mod integer_shove float_yankdup float_mod float_dec float_yankdup integer_rot -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [56.6931 10 71.5398 11 40.591 10 66.8849 10 5.4428 10 2.1761 10 21.557 9 6.9186 10 9.2903 11 30.2403 8 16.7801 10 21.7099 10 21.0615 9 38.5857 12 29.3768 10 22.1781 12 2.2431 9 90.3672 10 8.5733 12 26.3617 11 4.5273 9 17.7964 9 9.6074 10 0.5529 8 23.451 9]
Total: 893.5063000000001
Mean: 17.870127
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2108.2397639999945
Median total errors in population: 904.5215
Error averages by case: (99.29524330000025 10.221 108.65208480000068 11.527 81.40584079999975 10.47 114.60083950000106 9.767 48.80327620000052 10.688 65.117188599999 9.687 63.93413199999993 9.463 61.30537879999931 10.774 53.58103860000038 10.607 75.40830819999954 9.952 60.86891850000143 9.483 79.45844160000098 10.298 62.606342099999 11.116 78.62646080000052 11.797 84.61745049999945 10.584 62.85113500000003 11.233 48.116368900000175 10.793 125.24343010000166 11.006 68.1088799999989 11.924 79.59235709999987 11.033 46.02180820000081 9.329 72.8459366000001 9.279 71.0916007 10.878 66.32955310000078 9.315 69.7297500000005 8.804)
Error minima by case: (0.0792 2 25.2717 1 1.0 1 25.0 3 0.4411 1 0.0177 3 16.557 2 0.9186 2 6.3834 9 14.4192 2 0.0 0 11.0298 2 1.0 1 10.7158 8 23.3768 3 10.3163 8 0.2431 2 43.4444 2 2.5733 2 24.3617 2 0.2899 2 15.7964 3 7.6074 2 0.0785 2 12.098 2)
Average genome size in population (length): 38.635
Average program size in population (points): 39.635
Average percent parens in population: 0.025
Minimum age in population: 139.6455012767795
Maximum age in population: 144.7868499602527
Average age in population: 142.7242555488434
Median age in population: 142.7502761254027
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 250
Genome diversity (% unique Plush genomes):	 0.471
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 250
Syntactic diversity (% unique Push programs):	 0.471
Total error diversity:				 0.213
Error (vector) diversity:			 0.223
Behavioral diversity:				 0.223
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 99149640
--- Timings ---
Current time: 1529615490941 milliseconds
Total Time:         316.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.0 seconds, 44.2%
Fitness Testing:    141.7 seconds, 44.7%
Report:              35.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 52743.034100000026
Test mean error for best: 26.37152
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -58.6138760391
Correct output: -72.4601683407 | Program output: -1.0          
Correct output: 40.4089903884  | Program output: -1.0          
Correct output: -123.8848837001 | Program output: -193.7697674002
Correct output: -5.5572409402  | Program output: -1.0          
Correct output: 132.8237835559 | Program output: 132.6241415443
Correct output: -23.655607388  | Program output: -1.4424830333 
Correct output: 85.8723285783  | Program output: 94.3202153796 
Correct output: 7.3833649895   | Program output: -2.1821329473 
Correct output: 66.4021182413  | Program output: 36.7239235161 
Correct output: -23.7801401349 | Program output: -43.5602802697
Correct output: -167.2900974766 | Program output: -148.5801949532
Correct output: 20.9384936831  | Program output: -1.0          
Correct output: 37.1112256226  | Program output: -1.4581770723 
Correct output: 119.9031170612 | Program output: 149.6019110119
Correct output: 20.2024981978  | Program output: -1.4857908021 
Correct output: 1.7569467681   | Program output: -1.0          
Correct output: -90.6328406884 | Program output: -1.0          
Correct output: -160.4267163377 | Program output: -154.8534326754
Correct output: -111.361734735 | Program output: -140.7234694699
Correct output: -6.0571083203  | Program output: -1.7500483768 
Correct output: -112.796431795 | Program output: -133.59286359 
Correct output: -148.6073793052 | Program output: -161.2147586103
Correct output: 142.6041620334 | Program output: 142.7048317204
Correct output: -89.5489990384 | Program output: -69.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction float_cos} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_sub integer_add float_dec float_dup float_cos float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot integer_shove float_yankdup integer_add float_dec integer_yank float_mod float_dec float_yankdup float_mod float_dec float_yankdup integer_rot -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [53.6931 10 71.4602 11 41.409 11 69.8849 9 4.5572 10 0.1996 8 22.2131 11 8.4479 9 9.5655 10 29.6782 10 19.7801 9 18.7099 10 21.9385 12 38.5694 11 29.6988 7 21.6883 11 2.7569 11 89.6328 11 5.5733 12 29.3617 11 4.3071 8 20.7964 9 12.6074 11 0.1007 6 20.451 8]
Total: 893.0809999999999
Mean: 17.86162
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1896.3467843000037
Median total errors in population: 902.9096999999999
Error averages by case: (94.39553020000011 10.137 102.4497791000003 11.143 76.98583899999984 10.723 105.96860170000102 9.857 42.228623400000224 10.265 54.43979609999924 10.468 51.6834352000002 9.454 48.841292699999656 10.288 41.23688560000037 10.841 65.50230969999949 9.506 53.69137800000134 9.615 73.26388190000098 10.164 58.08962279999944 11.038 67.76813200000093 11.741 73.47888419999914 10.725 52.520775999999614 11.477 41.60341590000006 10.31 119.55656580000094 10.871 61.559712599998434 11.798 71.29476160000024 10.891 35.117519500000554 9.218 64.56981869999952 9.179 62.88609910000049 10.506 55.24720020000023 8.859 63.9799233000005 8.913)
Error minima by case: (0.0792 2 15.9031 1 1.0 1 25.0 2 0.3037 1 0.0177 3 17.557 1 0.9186 2 6.3834 8 21.5979 2 0.0 0 13.7099 2 1.0 1 36.1112 9 22.0873 3 17.7147 8 0.2431 1 9.7305 1 0.5733 2 24.3617 2 0.3456 1 15.7964 3 7.6074 2 0.0785 3 9.098 2)
Average genome size in population (length): 41.088
Average program size in population (points): 42.088
Average percent parens in population: 0.024
Minimum age in population: 140.6455012767795
Maximum age in population: 146.0267226801836
Average age in population: 144.1802464392178
Median age in population: 144.2237845063832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.49
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.49
Total error diversity:				 0.221
Error (vector) diversity:			 0.238
Behavioral diversity:				 0.238
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 100176915
--- Timings ---
Current time: 1529615494234 milliseconds
Total Time:         320.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.3 seconds, 44.2%
Fitness Testing:    143.2 seconds, 44.7%
Report:              35.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 52071.00130000003
Test mean error for best: 26.03550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -55.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -190.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.5473242436
Correct output: -23.655607388  | Program output: -1.0106545132 
Correct output: 85.8723285783  | Program output: 94.3291578181 
Correct output: 7.3833649895   | Program output: -1.1355162412 
Correct output: 66.4021182413  | Program output: 36.9565054141 
Correct output: -23.7801401349 | Program output: -40.5602802697
Correct output: -167.2900974766 | Program output: -145.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.0312711265 
Correct output: 119.9031170612 | Program output: 149.8940295917
Correct output: 20.2024981978  | Program output: -1.0010927783 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -151.8534326754
Correct output: -111.361734735 | Program output: -137.7234694699
Correct output: -6.0571083203  | Program output: -1.9999224325 
Correct output: -112.796431795 | Program output: -130.59286359 
Correct output: -148.6073793052 | Program output: -158.2147586103
Correct output: 142.6041620334 | Program output: 143.2086242836
Correct output: -89.5489990384 | Program output: -66.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction integer_max} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yank} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add integer_max float_dup tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yank integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [56.6931 10 71.5398 11 40.591 10 66.8849 10 5.4428 10 0.2765 10 22.645 11 8.4568 10 8.5189 11 29.4456 10 16.7801 10 21.7099 10 21.0615 9 39.1425 9 29.9909 10 21.2036 9 2.2431 9 90.3672 10 8.5733 12 26.3617 11 4.0572 10 17.7964 9 9.6074 10 0.6045 8 23.451 9]
Total: 891.4447000000001
Mean: 17.828894
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1893.7466942999945
Median total errors in population: 899.4005000000001
Error averages by case: (92.43663700000005 10.045 100.54257159999956 10.852 74.86792310000006 10.598 104.14915990000088 9.966 39.79114999999999 10.004 59.26319019999919 10.853 53.3673960000003 9.732 51.243604199999496 10.084 42.65101320000034 11.001 67.53986619999938 9.392 50.29378270000114 9.729 73.24805750000095 10.099 55.710082400000495 10.294 68.97133600000095 11.807 75.92337599999901 10.791 54.25210069999947 11.491 39.15938349999992 9.569 118.3159338999989 10.566 61.83787829999874 11.673 69.60944860000055 10.819 36.397113500000636 9.247 62.980236099999516 9.145 62.00268330000049 10.269 60.461947299999935 8.955 62.69982310000043 9.05)
Error minima by case: (0.0792 3 21.5398 1 1.0 1 22.0 2 0.0259 1 0.1761 3 10.2187 1 0.0351 1 6.6082 9 12.1436 2 0.0 1 13.7099 3 1.0 1 1.8888 8 21.8505 3 2.7243 7 0.2431 1 9.3672 1 0.5733 2 24.3617 2 0.308 1 15.7964 2 7.6074 2 0.0785 3 8.098 1)
Average genome size in population (length): 43.225
Average program size in population (points): 44.225
Average percent parens in population: 0.023
Minimum age in population: 143.3635125009647
Maximum age in population: 147.6272502238702
Average age in population: 145.6596336221134
Median age in population: 145.6963448664721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 84
Genome diversity (% unique Plush genomes):	 0.53
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.53
Total error diversity:				 0.27
Error (vector) diversity:			 0.292
Behavioral diversity:				 0.292
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 101257590
--- Timings ---
Current time: 1529615497645 milliseconds
Total Time:         323.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.7 seconds, 44.1%
Fitness Testing:    144.8 seconds, 44.8%
Report:              35.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 52607.39059999998
Test mean error for best: 26.30370
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -55.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -190.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 130.9646992757
Correct output: -23.655607388  | Program output: -2.128840013  
Correct output: 85.8723285783  | Program output: 93.0871606929 
Correct output: 7.3833649895   | Program output: -1.7876147492 
Correct output: 66.4021182413  | Program output: 36.3402920313 
Correct output: -23.7801401349 | Program output: -40.5602802697
Correct output: -167.2900974766 | Program output: -145.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -1.456868311  
Correct output: 119.9031170612 | Program output: 149.4238125351
Correct output: 20.2024981978  | Program output: -2.0198178759 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -151.8534326754
Correct output: -111.361734735 | Program output: -137.7234694699
Correct output: -6.0571083203  | Program output: -1.5053433475 
Correct output: -112.796431795 | Program output: -130.59286359 
Correct output: -148.6073793052 | Program output: -158.2147586103
Correct output: 142.6041620334 | Program output: 143.2047875658
Correct output: -89.5489990384 | Program output: -66.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction tagged_198} {:instruction float_sin} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_shove} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_shove integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_add float_dec float_dup tagged_198 float_sin integer_yank tagged_198 float_sin integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add integer_rot integer_dup_times float_yankdup integer_add float_dec integer_yank float_mod integer_shove float_yankdup float_mod float_dec float_yankdup integer_rot -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [56.6931 10 71.5398 11 40.591 10 66.8849 10 5.4428 10 1.8591 10 21.5268 10 7.2148 11 9.171 9 30.0618 7 16.7801 10 21.7099 10 21.0615 9 38.5681 12 29.5207 9 22.2223 9 2.2431 9 90.3672 10 8.5733 12 26.3617 11 4.5518 9 17.7964 9 9.6074 10 0.6006 9 23.451 9]
Total: 889.4002
Mean: 17.788004
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2271.4459915999996
Median total errors in population: 896.9941000000001
Error averages by case: (109.15702040000062 10.18 117.2433993999993 10.834 89.27516460000017 10.267 120.42552940000115 10.173 56.85302529999956 10.108 70.42192839999913 10.676 69.07661850000036 9.661 64.76622609999944 10.348 57.01084700000037 11.032 79.96096280000015 9.296 67.89693350000134 9.956 88.89959240000091 10.218 70.5769181000007 9.857 82.92986300000007 11.832 89.75140049999897 10.687 67.75167039999948 11.525 55.44177809999983 9.651 134.41217429999847 10.284 77.56311349999925 11.748 85.70618739999941 10.945 52.039283800000646 9.355 79.07841190000035 9.263 77.2903764999997 10.358 71.74767090000023 8.882 79.79689540000034 9.237)
Error minima by case: (0.0792 3 8.8138 2 3.0 1 26.0 2 1.3037 1 0.0177 6 5.5493 1 0.9417 5 4.5212 8 19.2064 5 1.0 1 6.8138 3 3.0 1 1.8888 8 23.5207 6 1.3929 8 0.2431 1 2.8138 1 2.5733 2 16.962 2 0.4727 1 11.962 3 7.6074 2 0.0272 5 2.962 2)
Average genome size in population (length): 41.666
Average program size in population (points): 42.666
Average percent parens in population: 0.024
Minimum age in population: 144.8127278893967
Maximum age in population: 149.079235648427
Average age in population: 147.0648885257385
Median age in population: 147.0941817583195
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 81
Genome diversity (% unique Plush genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 81
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.246
Error (vector) diversity:			 0.267
Behavioral diversity:				 0.267
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 102299265
--- Timings ---
Current time: 1529615500925 milliseconds
Total Time:         326.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.1 seconds, 44.1%
Fitness Testing:    146.4 seconds, 44.8%
Report:              36.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 1902.3551472000022
Median total errors in population: 893.5063000000001
Error averages by case: (95.32204280000035 10.157 102.37453399999939 10.889 75.35938300000014 10.195 107.12674110000094 10.103 42.24813329999985 10.087 56.22280199999938 10.37 52.735956700000244 9.524 50.592977499999606 10.326 40.42231240000028 10.952 64.58216209999948 9.238 53.317241600001225 9.921 75.48674270000093 10.195 56.30375150000073 9.72 66.19680070000098 11.601 75.54479209999909 10.266 50.51912149999964 11.368 40.63047349999983 9.634 120.22925719999826 10.196 64.06425399999864 11.781 71.90084169999997 10.932 34.692516100000475 9.303 65.60285259999954 9.236 63.91428070000048 10.296 57.100690400000616 8.898 65.49448600000042 9.182)
Error minima by case: (0.0792 2 8.9603 2 3.0 1 24.0 2 1.0667 1 0.1761 3 2.8813 1 2.9649 2 4.5212 8 14.2064 2 0.0 0 15.7099 2 3.0 1 36.3403 9 25.8505 3 17.8687 8 0.2431 1 36.9021 1 2.5733 2 24.3617 3 1.3456 1 15.7964 2 7.6074 2 0.0272 3 9.098 2)
Average genome size in population (length): 40.6
Average program size in population (points): 41.6
Average percent parens in population: 0.024
Minimum age in population: 146.0769671001468
Maximum age in population: 150.3424466007435
Average age in population: 148.3837616644451
Median age in population: 148.4422183527255
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 127
Genome diversity (% unique Plush genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 127
Syntactic diversity (% unique Push programs):	 0.526
Total error diversity:				 0.231
Error (vector) diversity:			 0.243
Behavioral diversity:				 0.243
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 103314290
--- Timings ---
Current time: 1529615504499 milliseconds
Total Time:         330.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.6 seconds, 44.1%
Fitness Testing:    148.0 seconds, 44.8%
Report:              36.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2143.3390851000036
Median total errors in population: 893.5063000000001
Error averages by case: (105.59416030000051 10.11 114.6588883999994 10.886 86.17847000000015 10.258 115.4890605000009 10.001 54.08292059999973 10.069 64.55926079999975 10.265 61.46955890000006 9.632 59.25660219999969 10.404 48.83683050000016 10.74 72.21565009999986 9.781 62.855271600001196 9.792 85.69847880000098 10.119 67.54091010000047 9.849 74.26620640000037 11.106 83.7516004999994 10.1 58.5033714 10.797 52.758999399999865 9.691 131.88270879999882 10.237 74.30295129999915 11.651 81.80328479999969 10.833 43.48529800000034 9.405 75.32113470000024 9.166 74.07654189999987 10.316 65.56540630000039 9.067 75.8335188000005 9.077)
Error minima by case: (0.0792 2 21.5398 2 2.0 1 25.0 2 0.5589 1 0.0177 3 6.1395 2 1.723 2 1.0152 8 12.3175 2 0.0 0 15.7099 2 1.3057 1 1.8888 9 25.6136 3 2.0416 7 0.2431 1 9.3672 1 2.5733 2 24.3617 2 1.0572 1 15.7964 3 7.6074 2 0.0272 2 8.098 2)
Average genome size in population (length): 40.663
Average program size in population (points): 41.663
Average percent parens in population: 0.024
Minimum age in population: 147.2931485493088
Maximum age in population: 151.8877548572386
Average age in population: 149.863591904057
Median age in population: 149.9090027070243
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.559
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.559
Total error diversity:				 0.27
Error (vector) diversity:			 0.284
Behavioral diversity:				 0.284
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 104330915
--- Timings ---
Current time: 1529615507819 milliseconds
Total Time:         333.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.0 seconds, 44.1%
Fitness Testing:    149.5 seconds, 44.8%
Report:              37.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2382.8210461999993
Median total errors in population: 892.0125000000002
Error averages by case: (115.01839920000072 10.104 123.03580679999932 10.871 95.67769740000017 10.261 123.25608890000125 10.071 63.56157879999932 10.044 75.75727640000038 10.246 71.69303469999974 9.711 70.42911559999992 10.66 59.89236730000045 10.482 82.15468090000012 10.195 72.13878200000168 9.817 94.87277770000102 10.153 77.31819720000041 9.77 84.34730280000026 10.632 93.92526779999969 10.178 67.84824229999995 10.062 61.828287099999784 9.651 140.03174449999852 10.187 83.45725969999975 11.488 90.2523207999991 10.79 54.61554320000051 9.703 83.85823540000099 9.187 82.63343809999907 10.361 76.45813750000039 9.439 85.57946410000046 9.117)
Error minima by case: (0.0792 2 21.5398 2 3.0 1 24.6743 2 1.3575 1 0.0177 3 18.6952 1 1.9649 2 6.3834 9 14.3175 2 0.0 0 17.7099 2 3.0 1 4.6115 7 24.8505 3 2.794 7 0.2431 1 8.5778 1 4.5733 2 12.1511 2 1.3456 1 13.5858 3 5.6074 2 0.0272 3 9.6616 2)
Average genome size in population (length): 41.607
Average program size in population (points): 42.607
Average percent parens in population: 0.024
Minimum age in population: 149.1326795587193
Maximum age in population: 153.2402227462963
Average age in population: 151.3631263364498
Median age in population: 151.4320037651398
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.526
Total error diversity:				 0.275
Error (vector) diversity:			 0.291
Behavioral diversity:				 0.291
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 105371165
--- Timings ---
Current time: 1529615511119 milliseconds
Total Time:         336.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.4 seconds, 44.1%
Fitness Testing:    151.0 seconds, 44.8%
Report:              37.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2397.7142903999948
Median total errors in population: 890.4447000000001
Error averages by case: (120.67848020000085 9.984 127.58585329999934 10.83 98.75834780000024 10.181 128.51960090000136 9.994 66.82729669999932 9.984 68.93091830000023 9.997 66.15405479999974 9.261 64.02715280000001 10.886 53.61382340000042 10.186 76.80264719999994 9.989 76.81962220000163 9.765 101.328827500001 10.039 80.42716650000034 9.608 79.67800130000002 10.919 88.7732251999995 10.138 63.72399060000029 9.933 64.84854569999983 9.539 144.603916199999 10.115 90.11102099999961 11.29 96.10984739999903 10.666 48.38711020000041 9.638 89.846141600001 9.077 88.77394989999908 10.258 69.90799390000036 9.592 91.53675580000049 9.071)
Error minima by case: (0.0792 2 25.2717 2 3.0 1 27.0 2 0.3187 1 0.0177 3 10.6338 1 2.3399 2 5.5403 7 16.3175 2 2.0 1 17.7099 2 3.0 1 4.6115 7 26.5207 3 5.4263 7 0.0 0 20.1015 1 4.5733 2 24.3617 2 1.3456 1 15.7964 2 7.6074 2 0.0989 2 19.451 2)
Average genome size in population (length): 42.699
Average program size in population (points): 43.699
Average percent parens in population: 0.023
Minimum age in population: 150.3111163146712
Maximum age in population: 154.8101347091178
Average age in population: 152.9396987208888
Median age in population: 152.9466895986838
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 98
Genome diversity (% unique Plush genomes):	 0.537
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 98
Syntactic diversity (% unique Push programs):	 0.537
Total error diversity:				 0.277
Error (vector) diversity:			 0.289
Behavioral diversity:				 0.289
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 106438690
--- Timings ---
Current time: 1529615514761 milliseconds
Total Time:         340.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.9 seconds, 44.0%
Fitness Testing:    152.7 seconds, 44.8%
Report:              37.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction float_swap} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max float_swap integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup float_stackdepth -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2172.0274902999986
Median total errors in population: 889.3679000000001
Error averages by case: (110.35483130000068 9.679 117.22719749999929 10.715 86.81377360000019 9.977 115.78845640000104 9.704 55.733364899999216 9.844 64.52211650000031 9.378 60.73391439999971 8.117 59.54267429999956 10.919 48.34737090000033 10.222 70.43965929999956 11.081 64.15856170000139 9.475 90.90474280000095 9.751 68.44124290000097 9.43 72.9020664000002 10.619 84.78468129999945 10.283 56.801166300000084 10.157 53.682128799999816 9.31 134.32394209999796 10.005 79.65210749999959 10.806 84.24472749999926 10.409 42.497503800000295 9.707 78.13999570000064 8.853 77.45723659999943 10.124 66.78999870000014 9.688 80.72302910000049 8.768)
Error minima by case: (0.0792 2 25.2717 2 1.0 1 25.0 2 0.5572 1 0.0177 2 6.1215 1 3.723 2 5.175 8 5.0847 2 0.0 0 18.7099 2 1.0 1 34.2983 8 21.0408 3 19.5072 7 0.2431 1 43.4444 1 5.5733 2 22.3617 3 1.3456 1 13.7964 2 5.6074 2 0.0272 2 7.098 2)
Average genome size in population (length): 42.709
Average program size in population (points): 43.709
Average percent parens in population: 0.023
Minimum age in population: 152.1513669510646
Maximum age in population: 156.2719724623343
Average age in population: 154.5151576441919
Median age in population: 154.5591933463114
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 237
Genome diversity (% unique Plush genomes):	 0.523
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 237
Syntactic diversity (% unique Push programs):	 0.523
Total error diversity:				 0.25
Error (vector) diversity:			 0.267
Behavioral diversity:				 0.267
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 107506465
--- Timings ---
Current time: 1529615518200 milliseconds
Total Time:         344.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       151.3 seconds, 44.0%
Fitness Testing:    154.3 seconds, 44.9%
Report:              38.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 1787.2171323000016
Median total errors in population: 888.3679000000001
Error averages by case: (95.19299140000024 9.569 101.0407342999992 10.502 69.2302774000002 9.83 99.64662190000048 9.583 37.579266600000025 9.804 49.91213929999992 9.141 47.34364809999975 7.798 44.97329979999989 10.88 35.07557210000031 10.285 56.02508499999937 11.478 47.264877900000606 9.358 76.36041730000088 9.625 51.59907100000058 9.32 60.57168680000083 10.399 70.68686369999946 10.29 43.91019730000003 10.16 35.6375627999998 9.241 117.87790779999824 9.783 64.89670339999883 10.451 68.02261690000043 10.281 29.018755900000293 9.804 61.99544679999955 8.76 61.91759850000051 10.157 51.620565800000186 9.623 65.02922450000037 8.666)
Error minima by case: (0.0792 2 25.2717 2 2.0 1 27.0 2 0.4233 1 0.2495 3 1.4801 2 2.3399 2 5.1071 9 6.0847 2 2.0 1 18.7099 2 2.0 1 33.4031 9 27.9494 3 1.4785 7 0.2431 1 34.2127 1 5.5733 2 23.3617 2 0.3456 1 14.7964 2 6.6074 2 0.1777 2 7.098 2)
Average genome size in population (length): 43.285
Average program size in population (points): 44.285
Average percent parens in population: 0.023
Minimum age in population: 153.8861164122119
Maximum age in population: 157.902268686296
Average age in population: 155.9669707569196
Median age in population: 156.0009043429826
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 325
Genome diversity (% unique Plush genomes):	 0.488
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 325
Syntactic diversity (% unique Push programs):	 0.488
Total error diversity:				 0.227
Error (vector) diversity:			 0.238
Behavioral diversity:				 0.239
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 108588665
--- Timings ---
Current time: 1529615521585 milliseconds
Total Time:         347.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.6 seconds, 43.9%
Fitness Testing:    155.9 seconds, 44.9%
Report:              38.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 44368.636299999955
Test mean error for best: 22.18432
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 0.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 0.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 0.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 20.0615 10 38.3614 10 32.0922 10 20.5072 9 1.2431 10 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2026.154185200001
Median total errors in population: 888.3679000000001
Error averages by case: (102.32537770000015 9.68 109.76805649999922 10.627 78.84525510000017 9.876 106.52905720000055 9.681 47.641823699999684 9.934 60.66701010000008 9.078 60.01545589999972 7.712 56.8391803999997 10.884 47.83687170000037 10.261 68.34940889999933 11.521 55.16304240000094 9.491 82.25093330000098 9.714 60.422882300000815 9.374 72.95417820000046 10.383 81.41591609999946 10.289 56.554107599999995 10.201 45.908709899999806 9.294 127.00036669999801 9.951 70.7807048999989 10.562 74.87139880000029 10.404 41.880776500000344 9.811 68.72059999999964 8.863 67.95184880000042 10.294 63.04260050000018 9.619 72.1436220000004 8.771)
Error minima by case: (0.0792 2 15.6184 2 1.0 1 26.4051 2 1.3037 1 0.2495 3 18.9859 1 3.3399 2 6.3834 7 6.0847 2 1.198 1 18.7099 2 1.0 1 3.0567 2 25.0348 3 2.683 8 0.2431 1 34.3821 1 5.5733 2 21.6179 2 1.3456 1 15.7964 2 5.3821 2 0.1777 2 7.6179 2)
Average genome size in population (length): 43.105
Average program size in population (points): 44.105
Average percent parens in population: 0.023
Minimum age in population: 155.0175198600262
Maximum age in population: 159.1455981935994
Average age in population: 157.3586658309485
Median age in population: 157.3991080779942
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 307
Genome diversity (% unique Plush genomes):	 0.505
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 307
Syntactic diversity (% unique Push programs):	 0.505
Total error diversity:				 0.209
Error (vector) diversity:			 0.218
Behavioral diversity:				 0.218
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 109666440
--- Timings ---
Current time: 1529615525212 milliseconds
Total Time:         351.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.2 seconds, 43.9%
Fitness Testing:    157.6 seconds, 44.9%
Report:              39.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2029.456967200001
Median total errors in population: 888.3679000000001
Error averages by case: (103.27519050000024 9.661 110.88785969999914 10.654 79.07064450000023 9.892 107.34287850000047 9.671 47.39026299999979 9.914 62.0920121000001 9.168 57.49077889999975 7.877 57.495371899999554 10.927 45.30853390000038 10.249 67.4822944999993 11.606 56.03810520000088 9.432 84.35997630000097 9.705 60.625192700000746 9.381 70.25483530000047 10.397 82.0774951999995 10.316 53.75551740000002 10.171 45.29329979999978 9.299 126.22799119999807 9.941 72.9611531999994 10.522 76.19222270000002 10.368 39.46431060000037 9.909 70.25294189999998 8.852 70.12912370000006 10.288 63.96105910000023 9.644 73.45191540000049 8.732)
Error minima by case: (0.0792 2 5.0 1 3.0 1 24.0 2 1.3037 1 0.1255 3 7.4097 1 3.723 2 3.3155 2 1.1958 2 1.0 1 18.7099 2 3.0 1 5.0602 9 28.6868 3 5.8219 8 0.0 0 5.0 1 5.5733 2 23.3617 3 0.6544 1 14.7964 2 6.6074 2 0.0989 2 8.098 1)
Average genome size in population (length): 43.118
Average program size in population (points): 44.118
Average percent parens in population: 0.023
Minimum age in population: 156.0175198600262
Maximum age in population: 160.808809888124
Average age in population: 158.7717489293948
Median age in population: 158.7873580748449
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 251
Genome diversity (% unique Plush genomes):	 0.54
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 251
Syntactic diversity (% unique Push programs):	 0.54
Total error diversity:				 0.21
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 110744415
--- Timings ---
Current time: 1529615528658 milliseconds
Total Time:         354.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.6 seconds, 43.9%
Fitness Testing:    159.2 seconds, 44.9%
Report:              39.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 1971.028291600001
Median total errors in population: 888.3679000000001
Error averages by case: (100.15396980000021 9.561 107.23066709999921 10.563 74.44783210000018 9.864 103.77567200000063 9.556 43.38435009999979 9.826 60.85250050000009 9.118 57.204377199999705 7.694 56.19528419999956 10.87 45.29615700000038 10.318 67.31635369999924 11.536 52.163054500001074 9.332 81.01825460000093 9.59 57.77967780000089 9.437 70.41697630000068 10.398 81.29178039999945 10.278 53.94357689999998 10.172 41.574249199999784 9.328 124.74741089999797 9.875 69.57384539999873 10.441 72.66293300000012 10.262 39.346595000000384 9.762 66.67595799999957 8.756 66.5270344000005 10.171 62.54828800000021 9.655 69.90849350000039 8.63)
Error minima by case: (2.0792 2 11.8314 1 3.0 1 26.0 2 2.0501 1 0.2495 3 14.4969 1 2.3399 2 5.5403 8 5.0847 2 1.0 1 19.7099 2 3.0 1 35.8729 9 24.944 3 19.2025 8 0.2431 1 6.3412 1 6.5733 2 23.3617 2 0.6341 1 14.7964 2 6.6074 2 0.1777 2 6.098 1)
Average genome size in population (length): 43.147
Average program size in population (points): 44.147
Average percent parens in population: 0.023
Minimum age in population: 157.9813101528846
Maximum age in population: 162.0848144879554
Average age in population: 160.1917902722015
Median age in population: 160.2119193969556
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 230
Genome diversity (% unique Plush genomes):	 0.541
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 230
Syntactic diversity (% unique Push programs):	 0.541
Total error diversity:				 0.205
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 111823140
--- Timings ---
Current time: 1529615532108 milliseconds
Total Time:         357.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.1 seconds, 43.9%
Fitness Testing:    160.8 seconds, 44.9%
Report:              39.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction tag_integer_726} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec tag_integer_726 float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2026.9198830000012
Median total errors in population: 888.3679000000001
Error averages by case: (103.48570930000064 9.605 108.30477639999921 10.631 77.09680740000019 9.788 107.82480320000104 9.622 46.23010979999949 9.985 61.96032450000026 9.201 57.84756489999969 7.833 57.36342629999945 10.918 45.60785910000034 10.283 67.99643959999936 11.556 56.13284840000129 9.407 84.65676790000099 9.668 58.60335930000096 9.33 71.79993920000044 10.415 82.86568739999952 10.368 55.222723399999985 10.164 44.35294829999979 9.268 125.08619409999798 9.948 73.32915959999902 10.454 76.62676709999992 10.32 39.93086840000036 9.856 70.62087139999996 8.805 70.43352860000009 10.259 63.77325780000023 9.713 73.67414160000037 8.696)
Error minima by case: (0.0792 2 24.547 2 1.0 1 4.8529 2 1.3575 1 0.2495 3 2.2942 2 2.3399 1 4.1071 8 4.0847 2 2.0 1 19.7099 2 1.0 1 2.6115 9 24.0787 3 1.2168 7 0.0 0 12.496 1 6.5733 2 9.1471 2 0.0571 1 14.1471 2 6.6074 2 0.1777 2 6.098 1)
Average genome size in population (length): 43.136
Average program size in population (points): 44.136
Average percent parens in population: 0.023
Minimum age in population: 159.0482328029225
Maximum age in population: 163.7889713212235
Average age in population: 161.6067221782792
Median age in population: 161.6524102778414
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 201
Genome diversity (% unique Plush genomes):	 0.554
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 201
Syntactic diversity (% unique Push programs):	 0.554
Total error diversity:				 0.225
Error (vector) diversity:			 0.242
Behavioral diversity:				 0.242
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 112901615
--- Timings ---
Current time: 1529615535489 milliseconds
Total Time:         361.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.5 seconds, 43.9%
Fitness Testing:    162.4 seconds, 45.0%
Report:              40.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2137.716567600001
Median total errors in population: 888.3679000000001
Error averages by case: (106.53006470000047 9.749 115.94842029999921 10.783 83.6750072000002 9.81 110.65576440000085 9.732 52.21127719999929 10.044 64.66385710000026 9.037 64.32629749999971 7.879 61.334321799999245 10.885 52.49693710000036 10.312 73.3755010999993 11.555 59.92087510000153 9.525 85.89253590000105 9.78 65.33190990000126 9.351 78.6783626 10.411 85.7642628999994 10.285 62.17981840000002 10.153 50.07226769999974 9.179 130.9417351999975 10.103 74.45935449999911 10.62 78.79927219999966 10.453 46.79218400000038 9.906 72.65763240000017 8.901 71.63141469999991 10.388 65.67187510000016 9.612 76.44561860000056 8.807)
Error minima by case: (2.0792 2 21.5398 1 3.0 1 27.0 2 0.8703 1 0.2495 3 7.2518 2 3.3399 2 1.9493 7 6.0847 2 2.0 1 19.7099 2 3.0 1 1.8888 9 28.1924 2 1.5215 8 0.2431 1 9.3672 1 6.5733 2 24.3617 2 1.3198 1 15.7964 2 7.6074 2 0.0131 2 7.098 2)
Average genome size in population (length): 43.137
Average program size in population (points): 44.137
Average percent parens in population: 0.023
Minimum age in population: 160.3499842317445
Maximum age in population: 165.1072613533786
Average age in population: 163.0452905004187
Median age in population: 163.1009109123461
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 183
Genome diversity (% unique Plush genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 183
Syntactic diversity (% unique Push programs):	 0.569
Total error diversity:				 0.21
Error (vector) diversity:			 0.221
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 113980065
--- Timings ---
Current time: 1529615538879 milliseconds
Total Time:         364.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.9 seconds, 43.9%
Fitness Testing:    164.0 seconds, 45.0%
Report:              40.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec integer_stackdepth float_stackdepth -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2158.720780900002
Median total errors in population: 888.3679000000001
Error averages by case: (109.27182320000047 9.614 115.52410079999922 10.67 85.65862130000019 9.874 112.24186740000088 9.618 54.271682399999435 9.94 64.40863480000026 9.135 61.88865919999973 7.881 60.30335599999936 10.901 50.02709180000032 10.31 71.79283189999937 11.519 61.76723110000116 9.359 90.48955050000097 9.669 67.43038960000085 9.424 75.99672329999984 10.4 84.70672869999949 10.352 59.50363069999998 10.175 51.746585199999764 9.35 132.6508533999979 10.023 79.17732759999953 10.466 81.90989049999955 10.3 44.288784400000345 9.872 76.04100240000058 8.79 76.13788039999939 10.194 65.81602820000019 9.684 79.45650610000051 8.693)
Error minima by case: (0.0792 2 22.3514 2 0.0 0 26.0 2 0.1297 1 0.2495 2 17.3163 1 2.3399 2 5.5403 8 5.0847 1 1.0 1 19.7099 2 0.0 0 3.6115 9 27.5048 3 0.5215 8 0.2431 1 23.1015 1 6.5733 2 23.3617 2 0.3659 1 14.7964 2 6.6074 2 0.1777 3 7.098 1)
Average genome size in population (length): 42.992
Average program size in population (points): 43.992
Average percent parens in population: 0.023
Minimum age in population: 161.8104858119884
Maximum age in population: 166.4645791946339
Average age in population: 164.4404006058488
Median age in population: 164.4700454971597
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 146
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 146
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.219
Error (vector) diversity:			 0.23
Behavioral diversity:				 0.23
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 115055115
--- Timings ---
Current time: 1529615542385 milliseconds
Total Time:         368.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.3 seconds, 43.8%
Fitness Testing:    165.6 seconds, 45.0%
Report:              41.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 44410.67609999995
Test mean error for best: 22.20534
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.9203366813 
Correct output: 40.4089903884  | Program output: -0.1820192232 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.1144818804 
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.1230126338 
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: -0.4861064638 
Correct output: -90.6328406884 | Program output: -0.2656813769 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_max integer_yank integer_stackdepth in1 integer_max integer_yank integer_stackdepth integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_yank in2 float_dec integer_yank integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_dec float_yankdup integer_add -47.18843063222216 float_sin integer_fromfloat print_float)
Errors: [57.6931 10 71.5398 11 40.591 10 65.8849 10 5.4428 10 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 15.7801 10 22.7099 10 21.0615 9 39.3614 10 32.0922 10 21.5072 10 2.2431 9 90.3672 10 9.5733 11 25.3617 11 3.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 888.3679000000001
Mean: 17.767359
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2203.1589047000007
Median total errors in population: 888.3679000000001
Error averages by case: (110.73175920000078 9.659 114.84610109999919 10.58 84.26700880000023 9.858 114.7180947000012 9.645 53.64346529999913 9.877 68.01182300000046 9.163 67.24605539999972 7.864 63.58612259999918 10.945 55.03144370000039 10.323 75.05305379999933 11.566 64.20236200000176 9.45 90.38413800000107 9.688 65.87913270000135 9.372 78.64458949999998 10.42 88.39056879999951 10.357 62.588191600000044 10.156 51.67804059999976 9.358 131.8953699999975 9.903 79.03914709999916 10.536 83.38382719999936 10.343 49.33785770000036 9.826 77.27039380000048 8.838 76.22619309999958 10.255 69.62357250000017 9.658 81.10259250000051 8.738)
Error minima by case: (0.0792 2 21.5398 2 3.0 1 26.0 2 1.3575 1 0.2495 3 7.5431 1 4.3399 2 5.3834 9 7.0847 2 1.0 1 19.7099 2 3.0 1 1.8888 8 28.9304 3 3.0729 9 0.0 0 9.3672 1 6.5733 2 24.3617 2 1.3456 1 15.7964 2 7.6074 2 0.1777 2 9.098 2)
Average genome size in population (length): 42.788
Average program size in population (points): 43.788
Average percent parens in population: 0.023
Minimum age in population: 163.4727977278996
Maximum age in population: 167.9786797883655
Average age in population: 165.8677568127978
Median age in population: 165.9224117816346
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 144
Genome diversity (% unique Plush genomes):	 0.593
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 144
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.228
Error (vector) diversity:			 0.241
Behavioral diversity:				 0.241
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 116125040
--- Timings ---
Current time: 1529615546115 milliseconds
Total Time:         371.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.8 seconds, 43.8%
Fitness Testing:    167.4 seconds, 45.0%
Report:              41.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2200.656326800001
Median total errors in population: 888.3679000000001
Error averages by case: (110.41003430000053 9.827 116.54080259999922 10.792 85.7313435000002 9.907 116.63864240000106 9.836 54.91330129999941 10.149 66.12570620000031 9.112 64.13975849999972 7.965 62.12410409999938 10.876 51.83521490000033 10.364 73.4651377999993 11.568 64.55017720000129 9.613 90.86661020000093 9.871 68.141351100001 9.515 77.7342274000002 10.436 86.50958639999952 10.307 61.23179149999999 10.13 52.96092359999976 9.432 133.75427569999778 10.166 79.61423869999916 10.757 84.89968299999965 10.554 46.298564600000354 9.924 77.92418870000016 9.007 77.07777099999987 10.46 67.52059560000023 9.642 80.53029650000046 8.908)
Error minima by case: (0.0792 3 22.3514 2 0.0 0 26.0 2 1.3575 1 0.1363 3 18.6605 1 1.5737 2 6.175 9 5.0847 2 1.0 1 17.7099 3 0.0 0 6.2741 2 28.2813 3 0.2168 7 0.0 1 38.6 1 4.5733 2 23.6777 2 1.067 1 15.7964 2 7.5399 2 0.1777 2 6.098 2)
Average genome size in population (length): 42.714
Average program size in population (points): 43.714
Average percent parens in population: 0.023
Minimum age in population: 164.5454922894738
Maximum age in population: 169.0538014166892
Average age in population: 167.2855798282669
Median age in population: 167.3230842264221
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 124
Genome diversity (% unique Plush genomes):	 0.608
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 124
Syntactic diversity (% unique Push programs):	 0.608
Total error diversity:				 0.23
Error (vector) diversity:			 0.247
Behavioral diversity:				 0.248
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 117193040
--- Timings ---
Current time: 1529615549670 milliseconds
Total Time:         375.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.1 seconds, 43.7%
Fitness Testing:    169.2 seconds, 45.1%
Report:              42.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2002.8383630000008
Median total errors in population: 888.3679000000001
Error averages by case: (100.25851690000037 9.651 107.65666289999915 10.665 77.12326140000019 9.78 104.55647330000075 9.655 45.45746139999974 10.048 62.769901600000125 9.157 59.58863189999973 7.949 58.15697949999949 10.928 47.33648510000037 10.257 69.28970759999935 11.619 53.28031260000108 9.433 80.29246980000097 9.695 58.59344420000095 9.393 72.93741520000029 10.363 83.33362219999948 10.359 56.55049260000001 10.058 43.21042309999977 9.285 124.96221299999796 10.019 68.86255019999888 10.514 72.71357520000011 10.36 41.91424130000034 9.9 66.69564199999951 8.822 66.0497672000005 10.248 64.5386608000002 9.676 70.14445200000038 8.731)
Error minima by case: (0.0792 3 4.0 1 3.0 1 26.2599 2 1.3575 1 0.0963 3 2.1617 1 1.3399 2 7.0589 2 5.0847 2 0.6575 1 18.7099 2 3.0 1 0.7402 2 27.2813 2 10.7975 8 0.0 0 4.0 1 5.5733 2 15.728 2 0.1908 1 13.7964 1 5.6074 2 0.0972 2 6.0847 1)
Average genome size in population (length): 42.721
Average program size in population (points): 43.721
Average percent parens in population: 0.023
Minimum age in population: 165.5454922894738
Maximum age in population: 170.6980797979162
Average age in population: 168.7121169307584
Median age in population: 168.7824333013993
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 107
Genome diversity (% unique Plush genomes):	 0.591
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.591
Total error diversity:				 0.227
Error (vector) diversity:			 0.243
Behavioral diversity:				 0.244
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 118261215
--- Timings ---
Current time: 1529615552859 milliseconds
Total Time:         378.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.4 seconds, 43.7%
Fitness Testing:    170.8 seconds, 45.1%
Report:              42.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2209.7968006000006
Median total errors in population: 888.3679000000001
Error averages by case: (111.1419724000008 9.865 115.87018419999916 10.799 85.86929940000029 9.776 116.62181890000117 9.862 55.19824499999911 10.237 67.66651470000015 9.121 65.08489969999968 7.985 64.75659149999923 10.96 52.857091400000385 10.314 75.99110449999935 11.626 65.63412540000152 9.655 89.75142360000112 9.896 67.47182400000082 9.468 76.8334924999998 10.376 89.40701449999943 10.359 60.62788949999998 10.031 53.13914089999977 9.301 132.8489358999977 10.226 78.27746649999948 10.804 83.98712349999926 10.573 47.24166020000034 9.989 77.63699500000057 8.992 75.98071369999946 10.506 69.16003160000018 9.692 81.38124210000055 8.947)
Error minima by case: (0.0792 3 9.8407 2 0.0 0 27.0 2 0.3037 1 0.2495 3 8.4938 1 3.3399 2 6.3834 8 6.0847 2 2.0 1 18.7099 3 0.0 0 34.5878 2 28.3768 3 0.2168 9 0.2431 1 5.2383 1 5.5733 2 23.3617 3 0.3456 1 14.7964 3 6.6074 2 0.1777 3 8.098 2)
Average genome size in population (length): 42.481
Average program size in population (points): 43.481
Average percent parens in population: 0.023
Minimum age in population: 167.3892950754159
Maximum age in population: 171.9942781801113
Average age in population: 170.0814132250561
Median age in population: 170.138662393718
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.595
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.595
Total error diversity:				 0.216
Error (vector) diversity:			 0.231
Behavioral diversity:				 0.232
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 119323315
--- Timings ---
Current time: 1529615556416 milliseconds
Total Time:         382.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.7 seconds, 43.6%
Fitness Testing:    172.6 seconds, 45.2%
Report:              42.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2302.2572967999995
Median total errors in population: 888.3679000000001
Error averages by case: (112.94579350000066 9.898 120.24171499999918 10.675 89.92016740000024 9.74 119.49490830000103 9.886 59.04536469999916 10.285 69.6730447999999 9.029 71.11047789999974 8.053 67.26854969999938 10.912 58.94836730000039 10.307 79.5797803999993 11.582 67.39268080000147 9.68 92.47737620000103 9.937 72.32107610000071 9.653 84.55484839999961 10.389 91.87167419999949 10.317 68.11159479999962 9.94 56.48891129999981 9.334 136.59673279999802 10.158 81.17314409999948 10.802 86.65390779999925 10.592 53.499587900000336 9.976 80.27295840000075 9.018 78.84533999999945 10.53 71.02021390000014 9.598 83.47608110000053 8.982)
Error minima by case: (1.0792 2 21.5398 2 3.0 1 26.0 2 1.1136 1 0.1255 2 14.6888 2 2.3399 1 6.3834 9 4.0847 2 1.0 1 18.7099 2 2.4661 1 27.2863 9 28.2813 2 1.4785 7 0.0 0 9.3672 1 5.5733 2 23.3617 2 1.0571 1 14.7964 2 6.6074 2 0.1777 2 6.098 1)
Average genome size in population (length): 41.95
Average program size in population (points): 42.95
Average percent parens in population: 0.023
Minimum age in population: 168.6490073667446
Maximum age in population: 173.2782546800717
Average age in population: 171.4306242402123
Median age in population: 171.4975504449579
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 69
Genome diversity (% unique Plush genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 69
Syntactic diversity (% unique Push programs):	 0.569
Total error diversity:				 0.225
Error (vector) diversity:			 0.242
Behavioral diversity:				 0.243
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 120372065
--- Timings ---
Current time: 1529615559948 milliseconds
Total Time:         385.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.1 seconds, 43.6%
Fitness Testing:    174.4 seconds, 45.2%
Report:              43.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2286.8341794000007
Median total errors in population: 888.3679000000001
Error averages by case: (114.05010430000071 10.093 119.62940119999911 10.57 88.26246000000025 9.472 121.88704590000117 10.101 58.24056139999932 10.664 67.47083910000009 9.078 69.7418516999997 8.282 63.447722299999384 10.876 56.23376550000041 10.297 74.43535529999933 11.57 68.85466980000157 9.884 95.34704160000109 10.157 70.25175020000088 10.168 80.55122069999994 10.369 88.64638529999947 10.37 64.288706 9.745 55.40782019999974 9.271 135.82374099999805 10.282 84.20624319999955 10.939 88.79637869999921 10.779 51.31339250000039 9.945 82.43139080000056 9.224 81.74678839999942 10.754 69.36934850000021 9.651 84.6751958000005 9.184)
Error minima by case: (0.0792 3 13.8407 2 0.5424 1 27.0 2 1.5589 1 0.2495 3 18.9859 2 2.925 2 6.175 8 7.0155 2 2.0 1 19.7099 3 0.9299 1 4.6115 2 26.7198 3 0.7832 7 0.0 0 20.1015 1 6.5733 2 23.3617 3 1.3456 1 14.7964 3 6.6074 2 0.1777 2 7.098 2)
Average genome size in population (length): 40.077
Average program size in population (points): 41.077
Average percent parens in population: 0.025
Minimum age in population: 169.9780875155114
Maximum age in population: 174.7087631747655
Average age in population: 172.6921552350275
Median age in population: 172.7368012201462
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 204
Genome diversity (% unique Plush genomes):	 0.532
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 204
Syntactic diversity (% unique Push programs):	 0.532
Total error diversity:				 0.23
Error (vector) diversity:			 0.241
Behavioral diversity:				 0.241
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 121374040
--- Timings ---
Current time: 1529615563106 milliseconds
Total Time:         388.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.4 seconds, 43.5%
Fitness Testing:    175.9 seconds, 45.2%
Report:              43.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank integer_swap integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1975.0343304000007
Median total errors in population: 887.3679000000001
Error averages by case: (99.10917930000024 10.113 105.99141089999911 10.392 76.4422116000002 9.25 106.3531207000006 10.123 45.22934599999969 10.914 61.36139290000014 9.107 57.63342629999968 8.481 56.9246336999995 10.845 44.38592830000042 10.251 67.32115419999919 11.537 53.06197830000116 9.904 79.72707070000115 10.198 56.873253900000975 10.561 69.32309450000044 10.337 82.16050339999951 10.338 52.67546829999996 9.479 41.431653199999715 9.223 122.95197669999796 10.301 68.21511279999892 10.967 72.62683450000006 10.804 39.72527920000045 9.948 66.16683529999959 9.223 65.49982310000058 10.8 63.02868520000019 9.647 68.86995740000053 9.202)
Error minima by case: (1.0792 3 1.0 1 0.0 0 26.0 2 1.0 1 0.2495 2 17.6556 2 2.9426 2 5.3834 2 11.4074 2 1.0 1 18.7099 3 0.0 0 1.8888 2 27.3254 2 0.4785 1 0.0 0 1.0 1 5.5733 2 21.3617 2 0.0571 2 12.7964 2 4.6074 2 0.1777 2 7.3752 2)
Average genome size in population (length): 38.45
Average program size in population (points): 39.45
Average percent parens in population: 0.026
Minimum age in population: 171.5165537873094
Maximum age in population: 176.1015460515329
Average age in population: 174.0335087408219
Median age in population: 174.0871736110753
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 260
Genome diversity (% unique Plush genomes):	 0.479
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 260
Syntactic diversity (% unique Push programs):	 0.479
Total error diversity:				 0.187
Error (vector) diversity:			 0.194
Behavioral diversity:				 0.194
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 122335315
--- Timings ---
Current time: 1529615566579 milliseconds
Total Time:         392.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.9 seconds, 43.6%
Fitness Testing:    177.4 seconds, 45.2%
Report:              43.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2080.6846098
Median total errors in population: 887.3679000000001
Error averages by case: (103.6301759000001 10.083 112.63427319999913 10.413 81.41664880000019 9.185 111.01306380000047 10.089 51.2746836999997 11.016 62.49349940000013 9.123 63.240079499999695 8.588 58.914111699999566 10.87 49.309668300000354 10.314 70.32150939999929 11.523 58.84405550000095 9.908 82.79160910000104 10.143 62.03830600000073 10.581 73.63683920000058 10.399 83.37386559999953 10.374 57.28269730000002 9.514 47.329361599999785 9.139 129.31231229999807 10.38 71.26849309999889 10.904 77.10674140000026 10.797 44.59509420000039 10.009 70.48328909999971 9.178 68.8696952000005 10.819 63.71560530000015 9.659 73.6099312000005 9.171)
Error minima by case: (1.0792 3 24.3514 8 1.0 1 27.0 2 2.0667 9 0.2495 2 19.6556 2 4.723 2 6.7667 8 13.3175 2 2.0 1 19.7099 3 1.0 1 11.2049 9 14.6908 2 10.0144 8 0.0 0 42.1787 8 6.5733 2 23.3617 3 1.2131 2 14.7964 3 6.6074 2 0.0989 2 21.451 2)
Average genome size in population (length): 38.289
Average program size in population (points): 39.289
Average percent parens in population: 0.026
Minimum age in population: 172.7671809874839
Maximum age in population: 177.4349030702757
Average age in population: 175.4492836122264
Median age in population: 175.487820720243
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 257
Genome diversity (% unique Plush genomes):	 0.463
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 257
Syntactic diversity (% unique Push programs):	 0.463
Total error diversity:				 0.166
Error (vector) diversity:			 0.169
Behavioral diversity:				 0.169
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 123292590
--- Timings ---
Current time: 1529615569944 milliseconds
Total Time:         395.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.4 seconds, 43.6%
Fitness Testing:    178.9 seconds, 45.2%
Report:              44.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_dup_times float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2168.6730435000004
Median total errors in population: 887.3679000000001
Error averages by case: (107.31785430000066 10.23 113.48379639999912 10.434 83.5246648000002 9.316 114.96200790000123 10.234 52.23365559999942 10.969 67.41636310000021 9.186 66.69432699999963 8.642 63.621661099999415 10.927 52.79649030000036 10.312 74.48919749999938 11.589 61.9883977000014 10.056 87.25043320000101 10.286 63.99228940000103 10.653 77.44887450000009 10.429 88.30549979999947 10.441 61.05891519999999 9.516 47.92842109999973 9.258 130.28679819999786 10.373 75.6973729999993 11.059 81.12836969999934 10.935 48.45158740000037 10.067 74.55482890000043 9.315 73.28468569999973 10.924 69.15971460000019 9.73 77.40283710000047 9.313)
Error minima by case: (1.0792 3 21.5398 9 24.2857 1 12.7456 2 1.3037 8 0.0963 2 2.1395 2 1.9426 2 6.2429 2 1.7074 2 3.0 1 19.7099 3 16.9385 1 3.6115 2 26.3254 2 0.7832 1 0.0 0 9.3672 8 6.5733 2 23.3617 3 2.3456 1 14.7964 2 6.6074 2 0.1777 2 21.451 2)
Average genome size in population (length): 38.307
Average program size in population (points): 39.307
Average percent parens in population: 0.026
Minimum age in population: 174.2596854568668
Maximum age in population: 178.8152474658695
Average age in population: 176.8896374884976
Median age in population: 176.949822182402
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 225
Genome diversity (% unique Plush genomes):	 0.509
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 225
Syntactic diversity (% unique Push programs):	 0.509
Total error diversity:				 0.18
Error (vector) diversity:			 0.182
Behavioral diversity:				 0.182
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 124250290
--- Timings ---
Current time: 1529615573160 milliseconds
Total Time:         399.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.8 seconds, 43.6%
Fitness Testing:    180.4 seconds, 45.2%
Report:              44.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2050.8235709999994
Median total errors in population: 887.3679000000001
Error averages by case: (103.92531800000049 10.127 108.79077289999911 10.364 80.0074345000002 9.217 110.6723443000011 10.102 48.690552299999524 10.943 61.61051620000035 9.092 59.94104379999973 8.505 57.15270859999935 10.881 46.51366510000036 10.268 68.08521679999933 11.567 57.877208100001425 9.907 84.49505290000101 10.189 60.34372650000111 10.577 72.15729630000028 10.313 82.40255219999945 10.375 55.427474700000005 9.446 44.55649279999975 9.183 125.83951549999774 10.286 73.04603639999901 10.927 77.19246889999975 10.777 42.01611850000039 9.959 70.85838250000015 9.212 70.12569069999994 10.793 63.48611230000022 9.646 73.74087020000044 9.213)
Error minima by case: (2.0792 3 24.2717 2 0.4576 1 27.0 2 1.3037 2 0.0756 3 19.9859 1 4.3399 2 5.175 8 6.0847 2 2.0 1 19.7099 2 0.0701 1 34.2983 9 28.9909 3 0.2168 8 0.0 0 42.4444 2 6.5733 2 23.3617 3 2.3456 2 14.7964 2 6.6074 2 0.1777 2 21.451 1)
Average genome size in population (length): 38.336
Average program size in population (points): 39.336
Average percent parens in population: 0.026
Minimum age in population: 175.3342239299093
Maximum age in population: 180.1456128356379
Average age in population: 178.3208913626695
Median age in population: 178.34511708378
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 216
Genome diversity (% unique Plush genomes):	 0.5
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 216
Syntactic diversity (% unique Push programs):	 0.5
Total error diversity:				 0.167
Error (vector) diversity:			 0.167
Behavioral diversity:				 0.167
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 125208715
--- Timings ---
Current time: 1529615576568 milliseconds
Total Time:         402.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.3 seconds, 43.6%
Fitness Testing:    181.9 seconds, 45.2%
Report:              45.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2095.9756343999993
Median total errors in population: 887.3679000000001
Error averages by case: (104.45376210000026 10.171 111.3359065999991 10.406 82.60574180000019 9.26 113.1534029000009 10.184 51.14830459999961 10.971 64.11797680000018 9.149 61.085421599999684 8.562 58.25898519999956 10.898 47.81316900000037 10.328 68.78652499999913 11.583 59.30022250000125 9.962 86.22012860000102 10.258 62.96081750000102 10.62 72.70513600000054 10.364 83.67946029999953 10.38 56.02026529999997 9.532 47.27643029999974 9.244 128.4201074999979 10.299 74.885689199999 10.986 79.2970296999999 10.866 43.277992300000435 10.01 72.82352209999993 9.28 72.3498353000002 10.864 66.12861150000022 9.657 74.77419070000049 9.263)
Error minima by case: (1.0792 3 17.0912 9 1.0 1 28.0 2 2.3575 1 0.2495 3 3.4532 2 3.3399 2 5.4513 8 6.0847 2 3.0 1 19.7099 3 1.0 1 35.3614 2 15.0962 3 0.2168 7 0.0 0 35.2639 8 6.5733 2 23.3617 3 2.3456 1 14.7964 3 6.6074 2 0.1777 3 7.098 2)
Average genome size in population (length): 38.39
Average program size in population (points): 39.39
Average percent parens in population: 0.026
Minimum age in population: 176.8107352630172
Maximum age in population: 182.0511207524811
Average age in population: 179.7409765904956
Median age in population: 179.798062584102
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 215
Genome diversity (% unique Plush genomes):	 0.528
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 215
Syntactic diversity (% unique Push programs):	 0.528
Total error diversity:				 0.181
Error (vector) diversity:			 0.182
Behavioral diversity:				 0.182
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 126168490
--- Timings ---
Current time: 1529615579893 milliseconds
Total Time:         405.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.8 seconds, 43.6%
Fitness Testing:    183.4 seconds, 45.2%
Report:              45.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2111.6126563000003
Median total errors in population: 887.3679000000001
Error averages by case: (104.15151890000035 10.205 111.70915899999913 10.4 81.95816290000022 9.278 111.43698570000069 10.195 50.69965549999959 10.98 65.01091750000022 9.128 65.3453863999997 8.548 61.48232559999941 10.915 51.77369120000038 10.307 73.07756709999936 11.59 58.88678080000106 9.992 83.92831040000108 10.256 62.38194310000095 10.631 76.20314979999971 10.388 86.53527939999955 10.405 59.72579379999998 9.53 46.511861799999764 9.244 128.68056979999798 10.341 72.48197749999922 11.015 77.63133389999958 10.885 46.9875642000004 9.988 71.05666250000007 9.276 69.94923839999998 10.879 66.71607230000019 9.678 73.9757488000005 9.261)
Error minima by case: (2.0792 3 21.5398 9 3.0 1 28.0 2 1.5572 8 0.1934 3 19.6556 2 2.3399 2 0.5605 9 14.3175 2 3.0 1 19.7099 3 3.0 1 33.3092 8 13.6496 3 0.2168 7 0.0 0 9.3672 3 6.5733 2 22.7298 3 2.0571 2 10.9495 2 4.7424 2 0.1777 2 8.098 2)
Average genome size in population (length): 38.3
Average program size in population (points): 39.3
Average percent parens in population: 0.026
Minimum age in population: 177.8107352630172
Maximum age in population: 183.4792928111886
Average age in population: 181.1580964063919
Median age in population: 181.2144062035193
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 180
Genome diversity (% unique Plush genomes):	 0.54
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 180
Syntactic diversity (% unique Push programs):	 0.54
Total error diversity:				 0.176
Error (vector) diversity:			 0.18
Behavioral diversity:				 0.18
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 127126065
--- Timings ---
Current time: 1529615583078 milliseconds
Total Time:         408.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.1 seconds, 43.6%
Fitness Testing:    184.9 seconds, 45.2%
Report:              45.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2216.2426374000015
Median total errors in population: 887.3679000000001
Error averages by case: (109.93995720000049 10.186 117.75844299999916 10.427 87.59271480000022 9.311 117.27086780000104 10.189 57.11074919999951 10.98 67.44723530000016 9.17 65.93757679999968 8.547 63.35455979999951 10.895 52.50735220000036 10.301 74.54942509999938 11.583 64.92938220000127 9.991 89.51612020000101 10.244 68.23603430000098 10.654 77.77615430000016 10.377 88.45426819999956 10.401 61.31377609999997 9.544 53.13447029999975 9.273 134.578689299998 10.39 78.30216569999904 11.023 83.46209599999978 10.875 48.057764600000404 9.995 77.07979490000021 9.257 75.56788800000004 10.864 68.95828180000025 9.677 79.99687030000044 9.256)
Error minima by case: (1.0792 3 25.2717 9 3.0 1 27.0 2 1.3037 8 0.1762 3 18.9859 2 0.342 2 0.7503 8 23.4868 2 2.0 1 17.7099 3 3.0 1 2.5831 2 28.2813 3 3.4785 7 0.0 0 43.1787 8 4.5733 2 21.3617 3 1.3456 2 12.7964 2 4.6074 2 0.0989 2 19.451 2)
Average genome size in population (length): 38.224
Average program size in population (points): 39.224
Average percent parens in population: 0.026
Minimum age in population: 179.7434690381492
Maximum age in population: 184.8251264849029
Average age in population: 182.5830504989108
Median age in population: 182.6173240683188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 177
Genome diversity (% unique Plush genomes):	 0.565
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 177
Syntactic diversity (% unique Push programs):	 0.565
Total error diversity:				 0.159
Error (vector) diversity:			 0.163
Behavioral diversity:				 0.163
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 128081715
--- Timings ---
Current time: 1529615586559 milliseconds
Total Time:         412.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.6 seconds, 43.6%
Fitness Testing:    186.5 seconds, 45.2%
Report:              46.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2344.7841378000016
Median total errors in population: 887.3679000000001
Error averages by case: (117.44261160000077 10.217 123.48104959999908 10.437 94.49131450000024 9.288 124.63343970000125 10.211 64.18063989999914 11.013 69.41932160000022 9.113 68.95481799999969 8.525 64.98896279999934 10.869 54.95928460000037 10.306 76.04254369999934 11.546 72.72464780000166 9.987 97.83305650000109 10.265 75.07951340000066 10.63 78.55211590000023 10.318 89.88898689999947 10.352 62.775449199999976 9.554 60.43703049999968 9.256 139.7677119999979 10.372 86.58368489999947 11.005 91.22828499999909 10.866 50.33574380000036 10.016 84.94932610000089 9.301 83.88750199999916 10.883 71.10838890000016 9.642 87.76970890000045 9.297)
Error minima by case: (1.0792 3 9.3933 9 4.0 1 29.0 2 2.1881 8 0.0377 2 13.1295 2 2.3399 2 0.1858 8 2.2709 2 4.0 2 18.7099 3 4.0 1 15.6105 2 27.5048 2 10.5814 7 0.0 0 27.566 3 5.5733 3 23.3617 3 2.3456 1 14.7964 3 6.6074 2 0.0989 2 20.451 2)
Average genome size in population (length): 38.284
Average program size in population (points): 39.284
Average percent parens in population: 0.026
Minimum age in population: 180.7434690381492
Maximum age in population: 185.8508437525918
Average age in population: 184.0457585645832
Median age in population: 184.1022591079095
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 158
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 158
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.181
Error (vector) diversity:			 0.183
Behavioral diversity:				 0.184
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 129038840
--- Timings ---
Current time: 1529615589785 milliseconds
Total Time:         415.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.9 seconds, 43.5%
Fitness Testing:    188.0 seconds, 45.2%
Report:              46.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1845.0116089000012
Median total errors in population: 887.3679000000001
Error averages by case: (92.8896787000001 10.097 99.08686529999909 10.379 69.90071220000019 9.156 101.85254140000063 10.083 38.19330220000013 10.937 56.91443140000015 9.09 55.063238199999695 8.492 52.89417819999945 10.861 41.21738570000035 10.328 62.70765569999923 11.537 47.541580800000965 9.895 74.06396650000102 10.156 50.353630700000934 10.535 64.32973980000094 10.36 78.13652269999949 10.345 48.20566189999999 9.515 34.124965499999824 9.083 116.04796679999794 10.303 62.59249709999864 10.929 67.49092560000055 10.8 36.982354400000425 9.986 60.93423349999954 9.204 60.108781000000484 10.811 58.64423660000019 9.647 63.02555700000048 9.18)
Error minima by case: (0.9208 3 25.2717 9 1.0 1 18.6965 2 0.1076 7 0.2495 3 20.3163 2 0.342 2 3.1865 8 1.5032 2 2.0 1 19.7099 3 1.0 1 3.6115 9 4.5811 3 1.4785 7 0.0 0 21.1015 6 6.5733 2 21.8267 3 2.6341 2 14.7964 2 6.6074 2 0.0989 3 8.098 2)
Average genome size in population (length): 38.434
Average program size in population (points): 39.434
Average percent parens in population: 0.025
Minimum age in population: 182.8830993298729
Maximum age in population: 187.4738805211839
Average age in population: 185.4918859140451
Median age in population: 185.5426636393984
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 137
Genome diversity (% unique Plush genomes):	 0.546
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 137
Syntactic diversity (% unique Push programs):	 0.546
Total error diversity:				 0.179
Error (vector) diversity:			 0.18
Behavioral diversity:				 0.18
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 129999715
--- Timings ---
Current time: 1529615593090 milliseconds
Total Time:         418.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.3 seconds, 43.5%
Fitness Testing:    189.5 seconds, 45.3%
Report:              46.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2149.664335400002
Median total errors in population: 887.3679000000001
Error averages by case: (108.20761040000049 10.191 112.47542229999911 10.394 83.6660519000002 9.25 115.99050660000104 10.218 52.31336469999941 10.992 64.60958230000037 9.086 64.62260809999965 8.592 61.2966669999992 10.904 50.42011230000039 10.271 72.83528279999928 11.592 62.97665890000162 10.04 87.88660460000104 10.27 63.951929200001224 10.628 75.24416780000027 10.361 86.11448389999946 10.384 58.65388539999998 9.49 48.45811749999974 9.244 128.77549489999765 10.352 76.35564629999911 11.05 81.88887889999938 10.915 46.044519300000424 10.035 75.26060190000032 9.296 73.94860879999982 10.934 66.14536520000019 9.618 78.12516440000049 9.29)
Error minima by case: (1.0792 3 24.3514 2 1.0 1 28.0 2 2.3037 7 0.0756 3 3.4532 2 1.925 2 3.6031 8 13.3175 2 3.0 1 19.7099 3 1.0 1 20.8608 9 25.7198 3 0.2168 7 0.0 0 42.1787 1 6.5733 2 23.3617 3 2.0571 2 14.7964 3 6.6074 2 0.0972 3 21.451 2)
Average genome size in population (length): 38.32
Average program size in population (points): 39.32
Average percent parens in population: 0.026
Minimum age in population: 183.9974990101214
Maximum age in population: 189.0043740476934
Average age in population: 186.9510990339234
Median age in population: 186.9886154493611
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 116
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 116
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.155
Error (vector) diversity:			 0.157
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 130957715
--- Timings ---
Current time: 1529615596373 milliseconds
Total Time:         422.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.6 seconds, 43.5%
Fitness Testing:    191.1 seconds, 45.3%
Report:              47.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction float_min} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add float_min float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1832.3856055000006
Median total errors in population: 887.3679000000001
Error averages by case: (93.95311819999982 10.089 100.37283009999918 10.359 72.02705440000018 9.156 102.21124020000045 10.073 39.83207430000002 10.945 53.692717899999906 9.005 51.23216089999973 8.448 49.361573999999855 10.795 37.7874680000003 10.292 60.55749879999934 11.469 48.29855800000074 9.883 74.85996610000088 10.139 52.071940900000605 10.539 63.611885600000896 10.31 75.13887859999942 10.285 46.75473409999999 9.478 35.72749919999985 9.128 117.58036759999825 10.308 63.32881919999874 10.91 68.04194740000047 10.787 33.287415200000304 9.928 61.473888799999585 9.183 60.8131857000005 10.791 55.59900700000017 9.546 63.76777530000038 9.156)
Error minima by case: (1.0792 3 9.4024 9 35.8666 1 28.0 2 1.0501 7 0.0377 2 19.9859 2 3.3399 2 4.3155 9 13.3175 1 3.0 1 19.7099 3 16.0086 1 2.6115 2 28.9304 2 0.7832 7 0.0 0 8.7703 8 6.5733 2 21.3617 3 2.3456 2 12.7964 3 4.6074 2 0.0989 3 7.6864 2)
Average genome size in population (length): 38.392
Average program size in population (points): 39.392
Average percent parens in population: 0.026
Minimum age in population: 185.4454897002512
Maximum age in population: 190.2639338893089
Average age in population: 188.4052907343905
Median age in population: 188.4438854609694
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 108
Genome diversity (% unique Plush genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 108
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.178
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.184
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 131917565
--- Timings ---
Current time: 1529615599653 milliseconds
Total Time:         425.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.0 seconds, 43.5%
Fitness Testing:    192.6 seconds, 45.3%
Report:              47.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_dup_times float_dec integer_yankdup float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1998.716346900001
Median total errors in population: 887.3679000000001
Error averages by case: (102.6258876000005 10.106 109.26258569999912 10.43 78.99950500000023 9.14 110.37595300000102 10.108 48.2195847999996 10.983 56.98141120000015 9.021 56.30845399999969 8.425 53.24394279999956 10.79 42.19933460000033 10.283 64.41875539999924 11.479 57.03004880000128 9.898 83.24945040000104 10.185 59.33859060000103 10.497 68.1014118000006 10.358 78.42893999999939 10.296 51.405831299999996 9.471 42.89113449999976 9.097 126.33713809999792 10.358 71.97235789999888 10.917 76.62226000000001 10.808 38.606102900000344 9.906 70.22441829999993 9.205 69.27893730000014 10.789 58.578576400000195 9.568 72.70973450000042 9.188)
Error minima by case: (1.0792 3 25.2717 9 2.0 1 28.0 2 1.5589 7 0.2176 3 16.5747 2 3.3399 2 5.3834 8 5.0847 2 3.0 1 19.7099 3 2.0 1 9.633 9 28.9304 3 8.2212 7 0.0 0 43.4444 8 6.5733 2 23.3617 3 1.9968 2 14.7964 3 6.6074 2 0.1777 3 8.098 2)
Average genome size in population (length): 38.334
Average program size in population (points): 39.334
Average percent parens in population: 0.026
Minimum age in population: 186.4454897002512
Maximum age in population: 191.6954204479401
Average age in population: 189.8228020878394
Median age in population: 189.8449349871292
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 117
Genome diversity (% unique Plush genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 117
Syntactic diversity (% unique Push programs):	 0.555
Total error diversity:				 0.163
Error (vector) diversity:			 0.165
Behavioral diversity:				 0.166
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 132875965
--- Timings ---
Current time: 1529615602974 milliseconds
Total Time:         428.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.5 seconds, 43.5%
Fitness Testing:    194.1 seconds, 45.3%
Report:              48.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2006.0084270999996
Median total errors in population: 887.3679000000001
Error averages by case: (101.83105200000024 10.204 109.1283768999991 10.389 80.20418150000019 9.284 109.87186800000072 10.196 48.818907899999836 10.951 58.4866124000001 9.128 57.223398499999696 8.566 54.23244979999972 10.916 43.27901360000036 10.318 64.99760989999918 11.606 56.18631190000103 9.999 82.969773700001 10.265 60.60672350000088 10.611 66.55025470000079 10.352 79.8301426999995 10.395 50.581191799999985 9.517 44.82166219999977 9.223 125.96000589999802 10.299 71.770389099999 10.992 76.06167840000033 10.854 38.3118365000004 10.072 69.7487680999998 9.28 68.99814430000029 10.88 60.2892115000002 9.652 71.99286230000045 9.307)
Error minima by case: (0.0792 3 6.1218 9 1.0 1 28.0 2 2.3575 8 0.0986 3 8.24 2 3.3399 2 6.2429 8 13.3175 2 3.0 1 19.7099 3 1.0 1 2.6115 2 27.9304 3 0.7832 8 0.0 0 5.3672 8 6.5733 2 23.3617 3 2.0571 2 14.7964 3 6.6074 2 0.1777 3 10.9671 2)
Average genome size in population (length): 38.279
Average program size in population (points): 39.279
Average percent parens in population: 0.026
Minimum age in population: 187.4454897002512
Maximum age in population: 193.1875274691545
Average age in population: 191.2516583843956
Median age in population: 191.2618176295571
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 113
Genome diversity (% unique Plush genomes):	 0.57
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 113
Syntactic diversity (% unique Push programs):	 0.57
Total error diversity:				 0.177
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.18
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 133833015
--- Timings ---
Current time: 1529615606275 milliseconds
Total Time:         432.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.9 seconds, 43.5%
Fitness Testing:    195.6 seconds, 45.3%
Report:              48.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup float_dup_times float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2152.4890419999983
Median total errors in population: 887.3679000000001
Error averages by case: (106.98044840000077 10.233 117.08579489999906 10.371 86.26991450000024 9.271 115.6608798000013 10.228 55.12788319999921 10.993 61.41449320000035 9.066 65.5666372999997 8.531 59.26271039999936 10.955 51.86235890000043 10.271 71.21080259999925 11.689 62.92339080000152 10.064 85.71442720000108 10.304 66.83866650000103 10.686 76.39371700000018 10.308 84.36125379999942 10.411 59.964272200000025 9.446 50.67789259999972 9.215 132.8937020999978 10.315 74.2684530999991 11.068 80.9645266999996 10.953 47.483867500000414 10.125 74.1260759000003 9.31 72.10266009999994 10.987 62.46038690000019 9.636 77.11782640000045 9.32)
Error minima by case: (1.0792 3 21.5398 8 2.0848 1 28.0 2 2.3575 9 0.2495 3 19.9859 2 4.1061 2 5.3834 8 3.1958 2 3.0 1 19.7099 3 2.8599 1 1.3771 2 28.0922 3 6.4263 7 0.0 0 9.3672 6 6.5733 2 23.3617 3 2.3057 2 14.7964 3 6.6074 2 0.0989 3 10.098 2)
Average genome size in population (length): 38.615
Average program size in population (points): 39.615
Average percent parens in population: 0.025
Minimum age in population: 189.7038309925613
Maximum age in population: 194.7005573908643
Average age in population: 192.6824789381603
Median age in population: 192.7263267587226
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 104
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 104
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.166
Error (vector) diversity:			 0.17
Behavioral diversity:				 0.171
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 134798440
--- Timings ---
Current time: 1529615609622 milliseconds
Total Time:         435.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.4 seconds, 43.5%
Fitness Testing:    197.1 seconds, 45.3%
Report:              48.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_sub} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth integer_flush integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_sub integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2094.102176600001
Median total errors in population: 887.3679000000001
Error averages by case: (107.40958250000065 10.115 114.10812429999916 10.436 84.32869010000023 9.204 115.04098590000089 10.119 53.253045699999404 10.98 60.03225480000017 9.114 57.70364469999973 8.487 55.324678399999605 10.826 44.050429100000294 10.301 66.28817269999932 11.54 61.88330720000137 9.916 88.51036500000102 10.188 65.00036540000102 10.52 69.22244520000044 10.356 80.6202269999995 10.358 52.498056999999974 9.493 48.837479199999706 9.142 130.28997789999792 10.366 77.08831069999944 10.92 81.69976369999932 10.784 39.50019250000032 9.98 75.26191950000053 9.216 74.50589089999957 10.804 61.84758330000019 9.642 77.7746839000004 9.215)
Error minima by case: (1.0792 3 23.5398 9 3.0 1 28.0 2 3.3037 8 0.1762 3 20.1673 2 3.3399 2 3.3155 9 6.594 2 3.0 1 19.7099 3 3.0 1 3.6115 9 28.9304 3 0.4785 7 0.0 0 11.3672 3 6.5733 2 21.3617 3 3.1533 1 12.7964 3 4.6074 2 0.1777 2 21.451 2)
Average genome size in population (length): 38.473
Average program size in population (points): 39.473
Average percent parens in population: 0.025
Minimum age in population: 191.4505759112743
Maximum age in population: 196.3035428797965
Average age in population: 194.125295221771
Median age in population: 194.1960723220836
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.602
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.602
Total error diversity:				 0.175
Error (vector) diversity:			 0.178
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 135760265
--- Timings ---
Current time: 1529615612944 milliseconds
Total Time:         438.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.8 seconds, 43.5%
Fitness Testing:    198.6 seconds, 45.3%
Report:              49.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_dup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_dup_items integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup float_dup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1853.6318647999988
Median total errors in population: 887.3679000000001
Error averages by case: (95.5218119000003 10.042 101.82310239999921 10.358 70.31672320000017 9.153 101.51952880000078 10.036 39.22743349999996 10.935 54.41005100000016 9.066 55.47020709999968 8.466 49.908299099999525 10.87 41.24562610000034 10.276 61.53555519999932 11.562 47.952798600001096 9.848 76.10108010000093 10.117 50.59084420000082 10.549 65.34617480000091 10.344 75.40033469999949 10.381 48.805991899999995 9.448 35.172303799999796 9.132 118.94811999999803 10.303 64.36480559999869 10.857 68.14323070000037 10.746 36.36675770000034 9.95 61.76891659999949 9.145 61.3984743000005 10.739 56.34601660000016 9.617 64.86267690000042 9.145)
Error minima by case: (1.0792 3 25.2717 9 4.0 1 28.0 2 2.0869 6 0.2495 3 19.9859 2 4.0352 2 5.2838 8 17.2064 2 3.0 1 20.7099 3 4.0 1 13.0614 2 28.7004 2 0.2168 7 0.0 0 43.1787 8 7.5733 2 23.3617 3 2.3456 1 14.7964 2 6.6074 2 0.0972 3 9.098 2)
Average genome size in population (length): 38.383
Average program size in population (points): 39.383
Average percent parens in population: 0.026
Minimum age in population: 192.8851779588835
Maximum age in population: 197.5466650258278
Average age in population: 195.5807734608333
Median age in population: 195.5978807684021
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 77
Genome diversity (% unique Plush genomes):	 0.603
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 77
Syntactic diversity (% unique Push programs):	 0.603
Total error diversity:				 0.182
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.184
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 136719890
--- Timings ---
Current time: 1529615616174 milliseconds
Total Time:         442.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.2 seconds, 43.5%
Fitness Testing:    200.1 seconds, 45.3%
Report:              49.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -45.8794600055293} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_dup_items integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -45.8794600055293 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1917.250524699999
Median total errors in population: 887.3679000000001
Error averages by case: (98.27934420000011 10.077 104.92808129999914 10.334 75.15749780000019 9.157 106.5982966000007 10.098 43.5688022999998 10.965 55.4009179000002 9.022 54.9474120999997 8.47 50.8688451999997 10.824 41.3079646000003 10.259 62.274884599999325 11.525 53.18728100000109 9.912 78.14537430000097 10.151 55.42671870000096 10.546 67.01353800000075 10.322 76.24076679999946 10.325 50.28821579999999 9.441 39.34430349999981 9.136 121.92523989999796 10.281 66.78354779999863 10.901 72.21549620000044 10.791 36.82520360000034 9.969 65.64360389999959 9.181 64.19237620000051 10.795 57.15808370000017 9.595 68.2747287000004 9.177)
Error minima by case: (0.0792 3 12.3697 8 4.0 1 28.0 2 1.9199 8 0.2495 3 4.0 1 3.3399 2 5.175 9 13.3175 2 3.0 1 14.3697 3 4.0 1 3.9065 9 28.3768 3 10.0144 7 0.0 0 18.3697 8 4.3697 2 23.3617 3 1.0571 2 14.7964 3 6.6074 2 0.0989 2 8.098 2)
Average genome size in population (length): 38.589
Average program size in population (points): 39.589
Average percent parens in population: 0.025
Minimum age in population: 193.8851779588835
Maximum age in population: 198.7545002810286
Average age in population: 197.0039097550086
Median age in population: 197.03768401591
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.594
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.594
Total error diversity:				 0.171
Error (vector) diversity:			 0.173
Behavioral diversity:				 0.173
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 137684640
--- Timings ---
Current time: 1529615619648 milliseconds
Total Time:         445.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.6 seconds, 43.5%
Fitness Testing:    201.7 seconds, 45.3%
Report:              49.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1993.2157863999996
Median total errors in population: 887.3679000000001
Error averages by case: (101.52721630000025 10.125 109.36107069999908 10.388 78.7717834000002 9.165 109.13631110000097 10.128 47.300241199999604 10.96 58.36574740000016 9.013 57.309867999999675 8.516 54.95122299999943 10.853 43.563772500000375 10.291 66.23600269999913 11.57 56.04851920000127 9.936 81.51375000000111 10.199 59.229080200001036 10.536 67.21461160000082 10.354 80.00893919999943 10.34 51.26886459999997 9.458 42.77626879999977 9.09 124.72099729999786 10.347 70.05237419999872 10.948 75.19673730000007 10.832 39.306674700000485 10.037 68.60845559999984 9.204 67.49885280000022 10.851 59.87162030000022 9.593 71.4308043000006 9.212)
Error minima by case: (1.0792 3 16.5401 9 0.0 0 26.0 2 2.3037 8 0.0377 3 6.248 2 3.3399 2 1.3748 8 6.0847 2 1.0 1 20.7099 3 0.0 0 9.2314 2 28.7198 3 0.3925 7 0.0 0 3.2098 8 7.5733 2 17.5191 2 3.3456 2 10.1026 3 5.8774 2 0.1777 3 4.2936 2)
Average genome size in population (length): 38.568
Average program size in population (points): 39.568
Average percent parens in population: 0.025
Minimum age in population: 195.9732785327133
Maximum age in population: 200.2186200984148
Average age in population: 198.4255488039086
Median age in population: 198.5087918354322
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.172
Error (vector) diversity:			 0.175
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 138648840
--- Timings ---
Current time: 1529615623004 milliseconds
Total Time:         448.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.1 seconds, 43.5%
Fitness Testing:    203.2 seconds, 45.3%
Report:              50.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add integer_add -47.18843063222216 float_frominteger float_pop print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1950.3635832
Median total errors in population: 887.3679000000001
Error averages by case: (100.25466450000005 10.084 108.14968119999915 10.42 78.14415270000019 9.156 107.40455710000063 10.063 47.16750389999989 10.974 54.780341700000044 9.051 54.078599099999735 8.474 50.97938939999979 10.895 41.01522160000034 10.305 62.74774109999932 11.562 55.030994100000754 9.862 80.46584310000092 10.134 58.634559800000694 10.543 66.71163670000085 10.357 75.66381709999945 10.348 50.029965 9.473 43.075840199999796 9.123 124.98428879999832 10.352 68.88777489999914 10.892 73.83057760000028 10.768 36.31580870000036 9.982 67.31060509999969 9.174 66.38911740000044 10.768 56.52026760000018 9.628 70.24463480000045 9.158)
Error minima by case: (1.0792 3 20.8357 9 3.0 1 28.0 2 1.8703 1 0.0963 3 3.4182 2 0.5737 2 6.2429 9 9.608 2 3.0 1 19.7099 3 3.0 1 1.8888 2 15.0962 3 7.1881 7 0.0 0 2.663 8 6.5733 2 18.0659 3 1.6341 2 12.7964 2 4.6074 2 0.1777 2 3.7468 2)
Average genome size in population (length): 38.615
Average program size in population (points): 39.615
Average percent parens in population: 0.025
Minimum age in population: 197.2519594614906
Maximum age in population: 201.6539794032424
Average age in population: 199.8324589677243
Median age in population: 199.8633153591999
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 52
Genome diversity (% unique Plush genomes):	 0.616
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 52
Syntactic diversity (% unique Push programs):	 0.616
Total error diversity:				 0.175
Error (vector) diversity:			 0.176
Behavioral diversity:				 0.176
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 139614265
--- Timings ---
Current time: 1529615626450 milliseconds
Total Time:         452.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.6 seconds, 43.5%
Fitness Testing:    204.8 seconds, 45.3%
Report:              50.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_mult integer_add integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1911.8120986999984
Median total errors in population: 887.3679000000001
Error averages by case: (94.79567830000005 10.104 102.95789799999916 10.337 71.0130125000002 9.2 103.02525790000078 10.102 40.05593660000003 10.925 60.822468500000234 9.087 59.78477739999974 8.516 56.228730999999584 10.881 46.33776940000034 10.28 66.49335779999929 11.58 49.19167120000081 9.933 74.92769720000096 10.152 51.376080100000635 10.561 69.3778599000007 10.342 82.03341439999947 10.378 53.478058000000004 9.481 35.916589799999834 9.121 118.92682789999797 10.257 63.313093699998596 10.91 68.5801576000005 10.782 41.62782000000034 9.963 61.94419589999955 9.177 60.84650820000052 10.809 62.43895990000023 9.627 64.61027750000038 9.203)
Error minima by case: (1.0792 3 21.5398 9 3.0 1 28.0 2 3.0501 7 0.0963 2 8.1936 2 5.3399 2 2.1379 8 6.0847 2 3.0 1 19.7099 3 3.0 1 3.6115 2 8.4418 2 6.4263 7 0.0 0 9.3672 8 6.5733 2 23.3617 3 3.0572 2 14.7964 3 6.6074 2 0.1777 2 8.098 2)
Average genome size in population (length): 38.381
Average program size in population (points): 39.381
Average percent parens in population: 0.026
Minimum age in population: 198.8460453830386
Maximum age in population: 203.2708431653173
Average age in population: 201.2250916147398
Median age in population: 201.2547091131427
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.609
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.609
Total error diversity:				 0.168
Error (vector) diversity:			 0.17
Behavioral diversity:				 0.17
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 140573890
--- Timings ---
Current time: 1529615629734 milliseconds
Total Time:         455.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.0 seconds, 43.5%
Fitness Testing:    206.3 seconds, 45.3%
Report:              51.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_swap integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2081.4309666999993
Median total errors in population: 887.3679000000001
Error averages by case: (106.22217660000024 10.241 111.81054739999914 10.444 83.19733890000023 9.279 114.16186290000097 10.257 51.63973439999976 10.961 61.45031600000017 9.153 56.628005899999714 8.535 56.2213599999996 10.915 43.30078330000033 10.339 66.64825199999926 11.545 60.24681270000135 10.026 88.47378440000105 10.323 63.74629750000104 10.604 68.46733000000076 10.393 81.82505309999948 10.383 51.822230099999956 9.526 47.42285949999976 9.23 128.67402019999798 10.341 77.27797669999887 11.024 80.83174570000014 10.903 38.87028170000034 9.978 74.59272320000005 9.352 74.4941739 10.921 63.21493020000019 9.681 76.49137040000049 9.345)
Error minima by case: (1.0792 3 24.5046 8 3.0 1 28.0 2 2.0877 8 0.2495 2 3.4532 2 0.342 2 6.7667 9 5.0847 2 3.0 1 18.7099 2 3.0 1 27.6112 9 16.0962 3 1.4785 7 0.0 0 29.0121 6 5.5733 2 23.3617 3 3.3456 2 14.7964 2 6.6074 2 0.0972 2 8.098 1)
Average genome size in population (length): 38.481
Average program size in population (points): 39.481
Average percent parens in population: 0.025
Minimum age in population: 200.0516588017852
Maximum age in population: 204.8518223511398
Average age in population: 202.5942858218136
Median age in population: 202.6197681118463
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.609
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.609
Total error diversity:				 0.196
Error (vector) diversity:			 0.197
Behavioral diversity:				 0.197
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 141535990
--- Timings ---
Current time: 1529615633255 milliseconds
Total Time:         459.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.4 seconds, 43.4%
Fitness Testing:    208.0 seconds, 45.3%
Report:              51.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_swap} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_dup_times float_yankdup float_dec integer_swap integer_add float_dec integer_yank integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2085.6395259000005
Median total errors in population: 887.3679000000001
Error averages by case: (105.85745350000012 10.106 111.0459832999991 10.424 82.52204730000017 9.112 114.47957110000075 10.092 51.4350440999996 10.981 61.1280684000002 9.023 60.1734821999997 8.463 56.45791019999939 10.822 46.2527062000004 10.309 67.29745529999919 11.491 61.21431910000117 9.873 86.76181320000101 10.153 62.89412430000091 10.484 71.02128150000047 10.325 81.70672189999937 10.303 54.48307279999998 9.517 47.836667099999765 9.099 127.9268915999979 10.364 75.37938809999932 10.949 80.47577969999955 10.805 41.80405070000039 9.937 73.91175920000009 9.212 72.9792836999999 10.803 62.97140300000018 9.581 76.21824840000048 9.177)
Error minima by case: (0.0792 3 21.5398 8 3.0 1 29.0 2 2.0667 8 0.0756 2 2.1395 2 0.0432 2 0.3155 8 0.4021 2 4.0 2 19.7099 3 3.0 1 1.8888 9 26.8758 3 0.2168 8 0.0 0 9.3672 8 6.5733 3 23.3617 3 1.1884 2 14.7964 3 6.6074 2 0.1777 2 21.451 2)
Average genome size in population (length): 38.533
Average program size in population (points): 39.533
Average percent parens in population: 0.025
Minimum age in population: 201.203256124858
Maximum age in population: 206.3834583495191
Average age in population: 204.0046629778592
Median age in population: 204.0135626530708
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.605
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.605
Total error diversity:				 0.176
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 142499315
--- Timings ---
Current time: 1529615636716 milliseconds
Total Time:         462.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.8 seconds, 43.4%
Fitness Testing:    209.7 seconds, 45.3%
Report:              51.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank float_dup_times float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_inc float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2156.1400100000005
Median total errors in population: 887.3679000000001
Error averages by case: (108.90123630000026 10.107 114.91341159999921 10.396 84.4651488000002 9.252 115.97861550000084 10.118 53.81684079999953 10.97 62.91249700000013 9.098 65.29084659999968 8.536 58.914778799999596 10.887 50.89648990000031 10.298 70.63259909999935 11.519 63.73087850000124 9.921 88.84106370000104 10.174 65.06510180000095 10.603 74.73706280000034 10.373 84.23900449999952 10.38 58.44275360000001 9.509 49.71967629999977 9.217 131.60599469999792 10.385 77.35701789999939 10.941 82.52221559999985 10.823 46.29987250000034 10.011 76.03390760000022 9.207 74.8925199999999 10.815 64.53634680000023 9.64 79.01712930000048 9.197)
Error minima by case: (1.0792 3 3.0 1 2.0 1 27.0 2 2.3575 1 0.0963 3 19.9859 2 1.9417 2 6.7667 2 13.3175 2 2.0 1 18.7099 3 2.0 1 2.6115 8 24.6136 3 0.5215 7 0.0 0 3.0 1 5.5733 2 23.3617 3 2.3456 2 14.7964 2 6.6074 2 0.0131 3 8.098 2)
Average genome size in population (length): 38.425
Average program size in population (points): 39.425
Average percent parens in population: 0.026
Minimum age in population: 203.3458783379797
Maximum age in population: 207.5045252688934
Average age in population: 205.4339400359287
Median age in population: 205.4674519215351
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.204
Error (vector) diversity:			 0.207
Behavioral diversity:				 0.208
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 143459965
--- Timings ---
Current time: 1529615639831 milliseconds
Total Time:         465.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.0 seconds, 43.4%
Fitness Testing:    211.2 seconds, 45.4%
Report:              52.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_dup_times float_dec integer_yankdup float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2150.7011533
Median total errors in population: 887.3679000000001
Error averages by case: (108.10370180000038 10.186 115.6846823999991 10.41 86.93641520000023 9.221 116.2827661000009 10.191 55.68549599999949 10.975 63.70647470000014 9.185 60.58325999999969 8.613 58.78325819999963 10.92 47.08994320000034 10.269 69.4761689999993 11.583 63.03430060000128 9.973 89.342496700001 10.242 67.47305550000104 10.548 72.14212920000048 10.343 84.64879769999948 10.437 55.64841389999998 9.463 51.671094499999754 9.181 132.41624989999798 10.337 77.92508239999928 11.001 82.62120959999969 10.856 42.56888790000034 10.055 76.17001020000023 9.289 75.46701219999984 10.855 65.63720430000019 9.709 78.48304210000046 9.278)
Error minima by case: (0.0792 3 19.5398 8 3.0 1 27.0 2 3.2361 8 0.0963 2 20.9859 2 4.723 2 6.3834 2 13.3175 2 0.2395 1 19.7099 3 3.0 1 0.6386 2 17.0962 2 1.4785 1 0.0 0 7.3672 8 6.5733 3 23.3617 3 3.3456 2 14.7964 2 6.6074 2 0.0989 2 21.451 2)
Average genome size in population (length): 38.212
Average program size in population (points): 39.212
Average percent parens in population: 0.026
Minimum age in population: 204.4030610581157
Maximum age in population: 208.9748152073014
Average age in population: 206.8221204495901
Median age in population: 206.8406119547885
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.634
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.634
Total error diversity:				 0.156
Error (vector) diversity:			 0.158
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 144415265
--- Timings ---
Current time: 1529615643226 milliseconds
Total Time:         469.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.6 seconds, 43.4%
Fitness Testing:    212.7 seconds, 45.3%
Report:              52.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times float_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2154.4280372999992
Median total errors in population: 887.3679000000001
Error averages by case: (106.53213870000074 10.192 112.6791763999991 10.374 82.85605010000025 9.31 114.67529120000135 10.219 51.940044299999165 10.972 66.29853680000022 9.133 65.57536909999969 8.554 62.32660359999931 10.949 52.51838270000038 10.346 73.5586428999993 11.623 61.87209570000176 10.01 86.72377700000106 10.3 63.45833050000133 10.681 77.8786360999998 10.388 87.52163959999955 10.416 61.49382149999998 9.548 47.6191379999997 9.255 129.49974619999765 10.333 75.33565019999926 11.031 80.61782779999926 10.909 47.9126307000004 10.079 74.07576170000041 9.299 72.94038079999984 10.926 68.01384950000022 9.67 76.70251620000047 9.285)
Error minima by case: (0.0792 3 5.9615 8 1.0 1 28.0 2 2.3037 1 0.2495 3 19.6556 2 2.3399 2 7.0054 2 6.0847 2 3.0 1 17.7099 3 1.0 1 20.8608 2 28.2813 3 12.886 7 0.0 0 9.3672 8 4.5733 2 23.3617 3 2.0571 2 14.7964 2 6.6074 2 0.0989 2 8.098 2)
Average genome size in population (length): 38.573
Average program size in population (points): 39.573
Average percent parens in population: 0.025
Minimum age in population: 205.8352261452681
Maximum age in population: 210.4456522894714
Average age in population: 208.2048881951633
Median age in population: 208.2258690570966
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.625
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.625
Total error diversity:				 0.177
Error (vector) diversity:			 0.18
Behavioral diversity:				 0.18
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 145379615
--- Timings ---
Current time: 1529615646587 milliseconds
Total Time:         472.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.1 seconds, 43.4%
Fitness Testing:    214.2 seconds, 45.3%
Report:              53.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -46.625140350257105} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_mult integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add integer_max float_yankdup integer_add -46.625140350257105 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2306.9551225000005
Median total errors in population: 887.3679000000001
Error averages by case: (116.39616380000075 10.222 122.67643109999918 10.465 92.13947390000024 9.28 124.47202400000131 10.212 61.98924539999908 11.005 68.10707880000034 9.17 65.3570303999997 8.59 64.16029529999919 10.898 51.547565800000356 10.282 74.29042459999931 11.561 71.88127210000174 9.997 97.01690900000108 10.276 72.8729703000008 10.613 75.78933530000012 10.345 88.96387129999944 10.415 59.289568099999975 9.49 58.055361699999736 9.211 139.28267489999803 10.417 85.76321369999991 11.027 91.07432489999889 10.86 47.13173110000035 10.081 84.57358160000123 9.298 83.43562959999886 10.904 70.02906070000017 9.714 87.00988510000049 9.317)
Error minima by case: (1.0792 3 4.8407 8 3.0 1 28.0 2 1.3037 8 0.0963 2 19.3163 2 3.3399 2 0.9736 8 13.3175 2 3.0 1 2.8407 3 3.0 1 22.111 2 22.3513 3 2.4785 8 0.0 0 1.1593 8 6.5733 2 23.3617 3 1.6341 2 14.7964 2 6.6074 2 0.0989 2 8.098 2)
Average genome size in population (length): 38.3
Average program size in population (points): 39.3
Average percent parens in population: 0.026
Minimum age in population: 207.2396165776742
Maximum age in population: 211.8010118978564
Average age in population: 209.6551527591488
Median age in population: 209.6895156913325
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.177
Error (vector) diversity:			 0.181
Behavioral diversity:				 0.181
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 146337115
--- Timings ---
Current time: 1529615650119 milliseconds
Total Time:         475.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.5 seconds, 43.4%
Fitness Testing:    215.9 seconds, 45.4%
Report:              53.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_dup_times float_yankdup float_dec float_dec integer_yank float_mod float_frominteger float_mod integer_max float_yankdup float_yankdup integer_add -47.18843063222216 integer_yank integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2395.0902598000002
Median total errors in population: 887.3679000000001
Error averages by case: (118.2250964000008 10.36 125.5819290999992 10.437 97.90410450000022 9.433 127.77270480000143 10.372 66.5746583999992 11.002 70.59972740000009 9.192 69.40236259999973 8.623 67.07557469999927 10.992 56.080753900000325 10.295 77.92564739999935 11.707 75.10022230000166 10.15 99.04059180000102 10.42 78.56148810000049 10.781 80.89594269999995 10.372 92.0034849999995 10.483 64.5145943 9.524 62.3984068999997 9.4 142.20457239999837 10.39 87.84951699999958 11.189 93.64440639999904 11.013 51.64651420000033 10.127 87.00953800000087 9.45 85.67078149999912 11.01 72.39734120000021 9.735 89.12129880000046 9.432)
Error minima by case: (0.0792 3 11.6992 2 7.5974 1 18.6965 2 2.2636 1 0.2495 3 2.1395 2 4.2241 2 3.747 8 13.3175 2 3.0 1 19.7099 3 17.9385 1 1.8888 9 15.0962 3 0.4785 7 0.0 0 9.3672 1 6.5733 2 21.8267 3 2.3456 1 14.7964 2 6.6074 2 0.0989 2 21.451 2)
Average genome size in population (length): 38.304
Average program size in population (points): 39.304
Average percent parens in population: 0.026
Minimum age in population: 208.2396165776742
Maximum age in population: 213.1781377626375
Average age in population: 211.0547398257148
Median age in population: 211.0720892553831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.629
Total error diversity:				 0.173
Error (vector) diversity:			 0.177
Behavioral diversity:				 0.178
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 147294740
--- Timings ---
Current time: 1529615653360 milliseconds
Total Time:         479.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       207.9 seconds, 43.4%
Fitness Testing:    217.4 seconds, 45.4%
Report:              53.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1969.9587486
Median total errors in population: 887.3679000000001
Error averages by case: (100.77257920000027 10.137 108.21545319999912 10.405 78.87530080000018 9.174 107.94208540000093 10.126 47.26670759999967 10.989 55.82792270000015 9.003 56.35362489999971 8.546 53.027940799999485 10.877 43.23561840000042 10.277 64.73263409999922 11.575 55.90245590000123 9.937 79.15267650000106 10.193 59.3266081000011 10.609 69.27089790000079 10.32 77.88392649999939 10.334 52.62342559999999 9.455 42.801636199999756 9.144 125.18170089999771 10.35 67.41071829999852 10.997 73.63652980000032 10.869 38.81537020000043 10.066 66.91150799999963 9.213 65.10333120000053 10.843 57.19552490000015 9.604 70.26457150000053 9.185)
Error minima by case: (1.0792 3 3.0 1 1.0 1 29.0 2 2.3575 1 0.0846 3 7.9489 2 3.3399 2 6.3834 2 6.0847 2 4.0 2 18.7099 3 1.0 1 2.6115 9 28.9909 3 8.1881 7 0.0 0 3.0 1 5.5733 3 23.3617 3 1.1378 2 14.7964 2 6.6074 2 0.0989 2 8.098 2)
Average genome size in population (length): 38.497
Average program size in population (points): 39.497
Average percent parens in population: 0.025
Minimum age in population: 209.4054604958152
Maximum age in population: 214.5186796265769
Average age in population: 212.5003596512045
Median age in population: 212.539878127509
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.157
Error (vector) diversity:			 0.159
Behavioral diversity:				 0.159
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 148257265
--- Timings ---
Current time: 1529615656670 milliseconds
Total Time:         482.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.2 seconds, 43.4%
Fitness Testing:    219.0 seconds, 45.4%
Report:              54.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_min} {:instruction float_yankdup} {:instruction integer_rot} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_min float_yankdup integer_rot -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1969.2236923999988
Median total errors in population: 887.3679000000001
Error averages by case: (100.36707680000008 10.063 107.51968939999914 10.376 78.27865840000023 9.161 108.20923130000071 10.056 46.84499590000006 10.971 57.342303500000064 9.085 56.13058249999968 8.494 53.05692919999989 10.91 42.814038500000365 10.274 63.23373519999937 11.559 55.114949100000935 9.883 80.781337400001 10.115 58.649977100000804 10.559 67.27856530000079 10.336 78.0907944999994 10.345 50.7554754 9.469 42.7822850999998 9.131 124.47419309999813 10.307 69.28388129999891 10.876 74.41563100000032 10.754 38.19656560000038 9.998 67.86636999999963 9.171 66.76382500000052 10.746 59.06727240000022 9.617 70.4913294000004 9.158)
Error minima by case: (1.0792 3 10.5816 8 0.0 0 26.0 2 2.3575 8 0.2495 3 10.6854 2 4.3399 2 1.589 2 0.287 2 1.0 1 19.7099 3 0.0 0 28.5033 2 29.3768 3 9.7037 1 0.0 0 28.7543 6 6.5733 2 23.3617 2 2.3456 2 14.7964 2 6.6074 2 0.0989 2 21.451 2)
Average genome size in population (length): 38.365
Average program size in population (points): 39.365
Average percent parens in population: 0.026
Minimum age in population: 211.5922454970379
Maximum age in population: 216.0336544302238
Average age in population: 213.9580055584099
Median age in population: 213.9976346456179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.168
Error (vector) diversity:			 0.171
Behavioral diversity:				 0.171
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 149216565
--- Timings ---
Current time: 1529615660238 milliseconds
Total Time:         486.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.6 seconds, 43.3%
Fitness Testing:    220.8 seconds, 45.4%
Report:              54.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_div} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction float_pop} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_div integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_add -47.18843063222216 float_frominteger float_pop print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2167.3160667
Median total errors in population: 887.3679000000001
Error averages by case: (110.94508870000062 10.145 117.6217196999992 10.388 88.34855290000024 9.245 118.24061250000106 10.179 57.04473099999927 10.995 61.44783510000027 9.109 60.23080679999972 8.54 57.37741309999947 10.874 46.59911770000031 10.294 68.50182629999935 11.56 65.68663930000149 9.969 90.86007630000103 10.223 69.09903500000091 10.615 71.57766440000044 10.377 82.90685589999948 10.397 55.07766949999998 9.479 52.88452999999973 9.202 134.34146619999797 10.38 79.5700942999993 10.969 84.51118829999942 10.856 42.091752300000344 10.019 78.15444770000045 9.248 76.90349729999966 10.856 63.39775780000018 9.629 81.09068860000042 9.257)
Error minima by case: (0.0792 3 21.5398 9 4.0 1 28.0 2 0.4926 7 0.2495 3 7.9489 2 3.723 2 6.2429 9 6.0847 2 3.0 1 19.7099 3 4.0 1 0.953 2 28.6868 3 3.4785 7 0.0 0 9.3672 8 6.5733 2 23.3617 3 1.3238 2 14.7964 2 6.6074 2 0.0989 2 8.098 2)
Average genome size in population (length): 38.422
Average program size in population (points): 39.422
Average percent parens in population: 0.026
Minimum age in population: 212.7682820485291
Maximum age in population: 217.3876473966077
Average age in population: 215.3859172946099
Median age in population: 215.4476343444069
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.617
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.617
Total error diversity:				 0.198
Error (vector) diversity:			 0.199
Behavioral diversity:				 0.199
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 150177315
--- Timings ---
Current time: 1529615663449 milliseconds
Total Time:         489.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.9 seconds, 43.3%
Fitness Testing:    222.2 seconds, 45.4%
Report:              55.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2026.3676606999998
Median total errors in population: 887.3679000000001
Error averages by case: (104.67740140000039 10.144 111.22688399999906 10.368 79.2722345000002 9.177 112.89307460000089 10.171 48.82641579999955 11.006 54.81403120000013 9.006 59.62016579999966 8.508 51.744156299999545 10.914 45.64693330000034 10.277 64.09185899999925 11.608 60.161400000001265 9.997 83.12842340000108 10.188 59.67959170000101 10.648 70.99959790000052 10.348 77.1417226999994 10.362 54.30195579999999 9.439 44.70049749999977 9.157 128.0708956999979 10.33 71.53017919999898 10.989 78.28173219999994 10.892 41.1652093000004 10.045 71.4109937 9.246 69.31451510000035 10.905 56.49124130000018 9.614 74.61854930000052 9.219)
Error minima by case: (0.0792 3 14.1793 9 1.0 1 27.0 2 2.543 7 0.2495 3 19.9859 2 1.9874 2 1.5805 8 13.3175 2 2.0 1 19.7099 3 1.0 1 2.8888 2 28.9909 3 2.4785 7 0.0 0 3.9934 7 6.5733 2 21.3617 3 2.3456 2 12.7964 2 4.6074 2 0.0989 3 2.9096 2)
Average genome size in population (length): 38.502
Average program size in population (points): 39.502
Average percent parens in population: 0.026
Minimum age in population: 214.2008763376698
Maximum age in population: 218.9525029875995
Average age in population: 216.7660344706555
Median age in population: 216.7758443522067
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.183
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.184
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 151140165
--- Timings ---
Current time: 1529615666757 milliseconds
Total Time:         492.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.4 seconds, 43.3%
Fitness Testing:    223.7 seconds, 45.4%
Report:              55.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mod integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_mult float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2179.9771366
Median total errors in population: 887.3679000000001
Error averages by case: (109.76222900000081 10.147 117.04654629999915 10.423 86.5385277000002 9.222 117.34329680000131 10.13 56.0209405999992 10.997 64.62365580000036 9.095 63.459717399999654 8.482 60.3920881999993 10.867 50.136611500000384 10.278 71.50723089999933 11.593 64.95990020000148 9.951 89.14571060000108 10.183 67.15329250000094 10.607 75.02291370000017 10.342 85.34704939999945 10.368 58.42000489999998 9.476 52.04510629999973 9.15 133.78347869999806 10.371 77.68750389999946 10.974 83.44165519999947 10.822 45.611751100000376 10.013 76.81409840000032 9.226 75.32836179999973 10.841 66.21236280000022 9.66 79.73410290000048 9.221)
Error minima by case: (1.0792 3 25.2717 9 4.0 1 23.813 2 1.4645 8 0.1761 3 16.5747 1 2.3399 2 6.2429 8 6.0847 2 3.198 2 19.5922 2 4.0 1 35.5484 9 28.2813 3 6.4263 8 0.0 0 43.4444 8 6.5733 3 23.3617 3 1.9968 1 14.7964 2 0.9095 2 0.1777 2 8.098 1)
Average genome size in population (length): 38.433
Average program size in population (points): 39.433
Average percent parens in population: 0.026
Minimum age in population: 215.2008763376698
Maximum age in population: 220.3155435007449
Average age in population: 218.2327764371319
Median age in population: 218.2634702371936
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.629
Total error diversity:				 0.166
Error (vector) diversity:			 0.168
Behavioral diversity:				 0.168
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 152101065
--- Timings ---
Current time: 1529615670230 milliseconds
Total Time:         496.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.0 seconds, 43.3%
Fitness Testing:    225.2 seconds, 45.4%
Report:              55.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2047.2070069999995
Median total errors in population: 887.3679000000001
Error averages by case: (104.5489590000003 10.164 113.39251559999917 10.406 83.13348850000024 9.178 111.38116770000082 10.164 52.29973599999982 11.018 56.9181592000001 9.066 58.68745839999964 8.512 54.1061529999996 10.942 45.17774340000034 10.258 66.3875049999993 11.614 59.75039240000117 9.998 82.64455110000104 10.201 63.876683700001024 10.628 70.68499800000059 10.372 78.76295829999941 10.39 54.1743575 9.443 47.84289419999976 9.141 130.07362299999798 10.349 70.9963317999989 11.022 77.17769739999999 10.892 40.847478500000406 10.045 70.57834959999994 9.251 68.52756720000025 10.898 58.12453160000018 9.634 74.29070690000052 9.235)
Error minima by case: (1.0792 3 21.5398 9 2.0848 1 18.6965 2 2.3037 8 0.2495 3 20.3163 2 3.3399 2 6.2429 9 6.7906 2 2.0 1 19.7099 3 2.8599 1 2.8888 8 27.5048 3 6.4263 7 0.0 0 9.3672 7 6.5733 2 21.8267 3 2.6341 2 14.7964 3 6.6074 2 0.1777 2 21.451 2)
Average genome size in population (length): 38.396
Average program size in population (points): 39.396
Average percent parens in population: 0.026
Minimum age in population: 217.3211407346626
Maximum age in population: 221.9823987528182
Average age in population: 219.6374254454583
Median age in population: 219.7073384645388
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.615
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.615
Total error diversity:				 0.173
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 153061115
--- Timings ---
Current time: 1529615673868 milliseconds
Total Time:         499.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.5 seconds, 43.3%
Fitness Testing:    226.9 seconds, 45.4%
Report:              56.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_dec} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times float_frominteger in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank integer_yank float_mod integer_max float_yankdup integer_dec -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2225.9299476999995
Median total errors in population: 887.3679000000001
Error averages by case: (113.7130078000007 10.149 120.47953179999912 10.456 88.38594990000024 9.159 122.19565180000116 10.182 58.84672039999928 11.001 62.0652936000002 9.137 63.73866489999968 8.543 57.895081599999386 10.92 49.40852990000038 10.294 70.1264295999993 11.556 69.68636140000154 9.976 94.01375580000108 10.215 69.02794320000099 10.541 73.84828180000036 10.376 82.44731429999935 10.425 57.3834741 9.463 54.83056619999973 9.102 136.93350689999804 10.397 82.90907509999926 10.957 88.90707649999946 10.856 44.7887714000004 10.066 82.41528980000047 9.269 81.16478669999958 10.888 63.613305900000164 9.675 84.25857730000045 9.244)
Error minima by case: (0.0792 3 21.5398 8 4.0 1 28.0 2 3.2361 7 0.1762 3 20.9859 2 4.3399 2 5.175 9 0.6339 2 3.0 1 19.7099 3 4.0 1 27.6112 8 27.5048 3 0.4785 7 0.0 0 9.3672 8 6.5733 2 23.3617 3 3.3456 1 14.7964 3 6.6074 2 0.0989 3 21.451 2)
Average genome size in population (length): 38.522
Average program size in population (points): 39.522
Average percent parens in population: 0.025
Minimum age in population: 218.6344749888017
Maximum age in population: 222.999542042859
Average age in population: 221.0750319797412
Median age in population: 221.0791634738759
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.616
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.616
Total error diversity:				 0.199
Error (vector) diversity:			 0.2
Behavioral diversity:				 0.2
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 154024215
--- Timings ---
Current time: 1529615677478 milliseconds
Total Time:         503.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.0 seconds, 43.3%
Fitness Testing:    228.5 seconds, 45.4%
Report:              56.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_max} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_mult float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_max integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2064.1567158
Median total errors in population: 887.3679000000001
Error averages by case: (105.73151610000042 10.062 110.70221059999915 10.381 79.26714790000023 9.123 113.29448590000088 10.092 48.34717859999958 10.963 60.0269151000002 9.059 60.707616199999684 8.46 56.091877699999586 10.858 46.93428460000038 10.222 67.36660999999927 11.552 59.87118000000128 9.9 85.96441630000103 10.151 59.73850210000101 10.488 71.59289560000032 10.317 81.32905609999945 10.361 55.147272799999975 9.406 43.94652769999974 9.01 127.67508329999794 10.311 74.68137879999944 10.885 79.5666864999996 10.776 42.55415830000037 10.017 73.07906810000037 9.184 71.98408229999987 10.813 61.54360330000016 9.641 75.80196190000048 9.179)
Error minima by case: (1.0792 3 25.2717 9 2.0 1 28.0 2 2.0586 8 0.2242 2 0.5468 2 4.1061 1 6.4513 2 5.0847 2 3.0 1 18.7099 3 2.0 1 24.3611 2 28.0922 2 1.4785 1 0.0 0 43.4444 7 5.5733 2 23.3617 3 2.0572 2 14.7964 2 6.6074 2 0.1777 2 6.098 2)
Average genome size in population (length): 38.459
Average program size in population (points): 39.459
Average percent parens in population: 0.026
Minimum age in population: 219.835587591082
Maximum age in population: 224.5025729710515
Average age in population: 222.488108704719
Median age in population: 222.5137350639697
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.619
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.619
Total error diversity:				 0.185
Error (vector) diversity:			 0.188
Behavioral diversity:				 0.189
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 154985715
--- Timings ---
Current time: 1529615680755 milliseconds
Total Time:         506.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.4 seconds, 43.3%
Fitness Testing:    230.1 seconds, 45.4%
Report:              57.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction -47.18843063222216} {:instruction 66} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_dup_times float_mod integer_yank float_mod integer_max -47.18843063222216 66 integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2054.090798999999
Median total errors in population: 887.3679000000001
Error averages by case: (103.60615700000012 10.109 109.14966229999916 10.375 78.3808892000002 9.203 111.46167910000067 10.112 47.91556589999979 10.976 60.4165478 9.051 64.49851349999967 8.568 57.05641669999972 10.915 49.57314540000034 10.314 68.77367089999933 11.573 58.86342840000093 9.952 82.52119790000097 10.162 58.89761320000066 10.638 73.60129030000037 10.381 81.91026079999946 10.364 57.1335239 9.512 43.868912999999786 9.181 125.74449679999817 10.333 71.01314679999915 10.952 77.17203569999984 10.842 45.271843200000376 10.043 70.50567249999986 9.208 68.82772450000022 10.836 61.94328800000015 9.628 73.56111620000047 9.195)
Error minima by case: (0.0792 3 3.0 1 1.0 1 29.0 2 2.0586 1 0.1762 3 19.9859 2 4.3399 2 6.7667 2 5.0847 2 4.0 2 17.7099 3 1.0 1 1.8888 2 28.9304 2 0.2741 7 0.0 0 3.0 1 4.5733 3 23.3617 3 2.3456 2 14.7964 2 6.6074 2 0.1777 2 7.098 2)
Average genome size in population (length): 38.593
Average program size in population (points): 39.593
Average percent parens in population: 0.025
Minimum age in population: 221.3211407346626
Maximum age in population: 226.0289588878619
Average age in population: 223.9190615428712
Median age in population: 223.9660786171754
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.593
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.186
Error (vector) diversity:			 0.187
Behavioral diversity:				 0.187
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 155950565
--- Timings ---
Current time: 1529615684006 milliseconds
Total Time:         509.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.8 seconds, 43.3%
Fitness Testing:    231.6 seconds, 45.4%
Report:              57.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -46.53760550001207} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add -46.53760550001207 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2182.4627293000012
Median total errors in population: 887.3679000000001
Error averages by case: (110.08628900000043 10.118 117.19688789999915 10.44 87.36055360000022 9.152 118.47468050000099 10.143 56.79698439999948 10.95 64.7634399000002 9.172 60.84593769999971 8.613 59.67594769999951 10.854 47.39873770000036 10.324 69.0457047999993 11.522 64.65713320000141 9.937 92.21802490000104 10.214 68.07688910000093 10.462 71.99414210000063 10.384 84.92279929999947 10.414 55.48650310000001 9.484 52.83741789999976 9.088 133.87443139999803 10.395 81.00726499999948 10.956 85.31911259999958 10.812 43.01665400000039 10.061 78.92089640000039 9.235 78.48762019999967 10.828 66.57563640000019 9.711 80.93504050000044 9.219)
Error minima by case: (0.0792 3 12.8407 9 1.0 1 27.0 2 2.5572 8 0.0963 3 2.2323 2 2.3399 2 4.7667 8 13.3175 2 2.0 1 17.7099 3 1.0 1 0.2012 7 28.2813 2 1.7832 8 0.0 0 42.186 7 4.5733 2 23.3617 3 1.9968 1 14.7964 3 6.6074 2 0.0962 2 19.451 2)
Average genome size in population (length): 38.489
Average program size in population (points): 39.489
Average percent parens in population: 0.026
Minimum age in population: 222.3211407346626
Maximum age in population: 227.6963455816954
Average age in population: 225.4233028340291
Median age in population: 225.4853470001913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.639
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.639
Total error diversity:				 0.196
Error (vector) diversity:			 0.198
Behavioral diversity:				 0.198
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 156912840
--- Timings ---
Current time: 1529615687485 milliseconds
Total Time:         513.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.1 seconds, 43.3%
Fitness Testing:    233.3 seconds, 45.5%
Report:              57.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 44349.40799999995
Test mean error for best: 22.17470
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -1.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction float_min} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add float_min float_dup in1 float_dec float_sin float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_max float_mod integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 73.5398 10 39.591 9 65.8849 10 6.4428 11 0.7505 8 21.9859 8 8.1061 11 8.4513 10 27.4868 12 15.7801 10 22.7099 10 19.0615 11 38.3614 10 32.0922 10 20.5072 9 0.2431 9 91.3672 10 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.1777 9 24.451 9]
Total: 887.3679000000001
Mean: 17.747358
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2012.8407989999998
Median total errors in population: 887.3679000000001
Error averages by case: (102.7465587000004 10.067 111.82666679999915 10.365 81.15055230000026 9.188 110.35481450000088 10.072 50.367398199999535 10.984 58.50367920000015 9.102 55.01373419999968 8.522 54.98389919999963 10.903 41.712717700000354 10.259 65.7380309999993 11.615 57.83328870000128 9.91 81.6669975000011 10.115 61.78262760000111 10.562 67.97997230000053 10.354 80.1575724999995 10.401 51.17661399999998 9.427 46.01864509999977 9.144 128.50127719999776 10.343 70.01361819999916 10.911 76.1081983999998 10.79 37.288083700000335 10.058 69.4555234000001 9.155 67.69504430000003 10.774 60.22488400000017 9.657 72.69640030000052 9.166)
Error minima by case: (1.0792 3 22.5923 8 3.0 1 29.0 2 3.2361 8 0.0963 3 16.5747 2 4.3399 2 6.191 9 13.3175 2 4.0 2 19.7099 3 3.0 1 3.6115 9 15.0962 2 7.1881 7 0.0 0 21.1015 8 6.5733 3 21.3617 3 1.1884 2 12.7964 2 4.6074 2 0.0989 2 8.098 2)
Average genome size in population (length): 38.461
Average program size in population (points): 39.461
Average percent parens in population: 0.026
Minimum age in population: 223.3211407346626
Maximum age in population: 228.9246244284449
Average age in population: 226.8373566904349
Median age in population: 226.8808923581353
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.645
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.645
Total error diversity:				 0.181
Error (vector) diversity:			 0.185
Behavioral diversity:				 0.185
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 157874365
--- Timings ---
Current time: 1529615690903 milliseconds
Total Time:         516.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.5 seconds, 43.2%
Fitness Testing:    235.1 seconds, 45.5%
Report:              58.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 44415.91159999997
Test mean error for best: 22.20796
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -52.6138760391
Correct output: -72.4601683407 | Program output: 1.0796633187  
Correct output: 40.4089903884  | Program output: 0.8179807768  
Correct output: -123.8848837001 | Program output: -187.7697674002
Correct output: -5.5572409402  | Program output: 0.8855181196  
Correct output: 132.8237835559 | Program output: 132.0732582594
Correct output: -23.655607388  | Program output: -2.6696703894 
Correct output: 85.8723285783  | Program output: 93.978450015  
Correct output: 7.3833649895   | Program output: -2.0679149283 
Correct output: 66.4021182413  | Program output: 38.9153465354 
Correct output: -23.7801401349 | Program output: -37.5602802697
Correct output: -167.2900974766 | Program output: -142.5801949532
Correct output: 20.9384936831  | Program output: 1.8769873662  
Correct output: 37.1112256226  | Program output: -2.250133636  
Correct output: 119.9031170612 | Program output: 151.9953235191
Correct output: 20.2024981978  | Program output: -1.3046772984 
Correct output: 1.7569467681   | Program output: 1.5138935362  
Correct output: -90.6328406884 | Program output: 0.7343186231  
Correct output: -160.4267163377 | Program output: -148.8534326754
Correct output: -111.361734735 | Program output: -134.7234694699
Correct output: -6.0571083203  | Program output: -2.711496689  
Correct output: -112.796431795 | Program output: -127.59286359 
Correct output: -148.6073793052 | Program output: -155.2147586103
Correct output: 142.6041620334 | Program output: 142.781911706 
Correct output: -89.5489990384 | Program output: -63.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_sub} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_yankdup float_add in2 float_sub integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank tagged_198 float_dec integer_yank integer_add float_dup_times in2 float_dec float_yankdup integer_rot float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max float_yankdup integer_add float_stackdepth float_frominteger integer_fromfloat print_float)
Errors: [59.6931 9 73.5398 10 39.591 9 63.8849 10 6.4428 11 0.7505 8 20.9859 7 8.1061 11 9.4513 10 27.4868 12 13.7801 10 24.7099 10 19.0615 11 39.3614 10 32.0922 10 21.5072 10 0.2431 9 91.3672 10 11.5733 12 23.3617 11 3.3456 10 14.7964 9 6.6074 11 0.1777 9 26.451 9]
Total: 886.3679000000001
Mean: 17.727358
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2160.764030299999
Median total errors in population: 887.3679000000001
Error averages by case: (108.32524290000057 10.054 117.5168084999991 10.398 85.62030870000024 9.115 115.51511060000117 10.053 55.75324149999923 11.016 63.260130800000276 9.0 65.99394129999966 8.526 60.31136409999936 10.852 51.25594130000039 10.29 71.22000459999927 11.506 63.710458400001635 9.875 86.81713720000106 10.101 66.32366090000109 10.53 74.65942060000044 10.364 84.62013759999941 10.356 58.3585281 9.46 50.051370499999734 9.049 134.28112129999795 10.372 75.34752479999875 10.904 81.66818069999984 10.801 47.55971980000041 10.027 75.04989320000006 9.163 73.07682030000015 10.789 64.76593200000016 9.612 78.36603060000056 9.123)
Error minima by case: (0.0792 3 3.4072 9 1.0 1 28.0 2 2.3037 7 0.2495 3 2.1395 2 2.3399 2 5.3834 9 3.9543 2 3.0 1 18.7099 2 1.0 1 7.8696 2 15.0962 2 0.4785 6 0.0 0 9.3672 2 5.5733 2 23.3617 3 1.6802 2 14.7964 2 6.6074 2 0.1777 2 7.098 1)
Average genome size in population (length): 38.199
Average program size in population (points): 39.199
Average percent parens in population: 0.026
Minimum age in population: 225.4557574671118
Maximum age in population: 230.1973203650583
Average age in population: 228.2759573679122
Median age in population: 228.3151953499077
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.614
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.614
Total error diversity:				 0.176
Error (vector) diversity:			 0.179
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 158829390
--- Timings ---
Current time: 1529615694003 milliseconds
Total Time:         519.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.7 seconds, 43.2%
Fitness Testing:    236.5 seconds, 45.5%
Report:              58.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 44311.72540000002
Test mean error for best: 22.15586
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 132.3544930606
Correct output: -23.655607388  | Program output: -0.0053272566 
Correct output: 85.8723285783  | Program output: 93.6937417318 
Correct output: 7.3833649895   | Program output: -1.1355162412 
Correct output: 66.4021182413  | Program output: 37.6730742029 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.5156355633 
Correct output: 119.9031170612 | Program output: 147.8940295917
Correct output: 20.2024981978  | Program output: -5.463891E-4  
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.9999224325 
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 141.2086242836
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction integer_add} {:instruction tagged_244} {:instruction float_dup} {:instruction integer_mult} {:instruction float_dup} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 integer_add tagged_244 float_dup integer_mult float_dup float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 0.4693 9 23.6503 10 7.8214 11 8.5189 11 28.729 11 15.7801 10 22.7099 10 21.0364 8 37.6269 10 27.9909 11 20.203 10 1.7697 12 90.3636 7 9.5733 11 25.3617 11 4.0572 10 16.7964 9 8.6074 11 1.3955 8 24.451 9]
Total: 885.5533999999999
Mean: 17.711067
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2038.4204755
Median total errors in population: 887.3679000000001
Error averages by case: (104.26083190000058 10.091 112.96546809999914 10.396 80.46310260000021 9.132 110.88286680000101 10.119 49.63421139999951 10.976 58.71168730000033 9.093 59.14813799999972 8.531 54.03732639999932 10.871 46.09477820000038 10.278 65.36704489999929 11.543 58.128308800001264 9.918 84.129575300001 10.157 60.998258600001066 10.546 69.65036060000035 10.341 78.80602739999945 10.37 53.1736114 9.468 45.03762039999978 9.102 128.22340559999785 10.352 73.38904839999908 10.929 77.82171109999973 10.813 40.62922140000035 10.024 71.01314780000016 9.209 69.89979280000007 10.834 59.93870670000014 9.635 74.09722360000042 9.191)
Error minima by case: (23.534 3 16.3127 8 2.0848 1 28.0 2 3.2361 7 0.0756 2 3.4532 2 0.6601 2 6.2429 2 3.0847 2 3.0 1 11.3111 3 2.8599 1 3.6115 2 15.6272 2 1.4785 1 0.0 0 1.8599 7 4.4478 2 22.5888 3 2.1884 2 14.7964 2 6.6074 2 0.0989 2 0.7761 2)
Average genome size in population (length): 38.319
Average program size in population (points): 39.319
Average percent parens in population: 0.026
Minimum age in population: 226.4557574671118
Maximum age in population: 231.6906535154822
Average age in population: 229.7107600477056
Median age in population: 229.7868608638996
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.637
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.637
Total error diversity:				 0.211
Error (vector) diversity:			 0.216
Behavioral diversity:				 0.216
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 159787390
--- Timings ---
Current time: 1529615697437 milliseconds
Total Time:         523.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       226.0 seconds, 43.2%
Fitness Testing:    238.2 seconds, 45.5%
Report:              58.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 44337.8179
Test mean error for best: 22.16891
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 132.4861770482
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 92.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 37.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.2182518621 
Correct output: 119.9031170612 | Program output: 150.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 144.3412969119
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 0.3376 9 21.9859 8 7.1061 11 8.4513 10 28.4868 12 15.7801 10 22.7099 10 21.0364 8 37.3295 9 31.0922 10 20.5072 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 1.7371 10 24.451 9]
Total: 883.4703000000002
Mean: 17.669407
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2386.6649080999987
Median total errors in population: 887.3679000000001
Error averages by case: (117.86702290000065 10.206 124.83466979999908 10.427 94.55019540000028 9.281 124.89631080000107 10.233 64.30703809999928 11.016 71.12844899999989 9.059 74.24994959999967 8.539 68.72574519999952 10.946 60.668919400000455 10.334 80.24171999999932 11.619 73.45233690000154 10.053 96.2774307000012 10.31 75.52281450000075 10.636 84.24529619999984 10.393 93.30783659999939 10.402 68.06426169999968 9.545 59.992969699999726 9.21 141.2180153999984 10.369 85.00734529999932 11.086 90.96351389999933 10.901 56.15891710000042 10.087 84.45971970000073 9.306 82.35136659999941 10.982 72.2025297000002 9.614 88.08153390000054 9.335)
Error minima by case: (1.0792 3 6.1761 8 0.0 0 26.0 2 2.3037 9 0.1363 2 18.6556 2 2.0432 2 6.8669 2 13.3175 2 1.0 1 8.7608 3 0.0 0 2.8888 2 24.8758 3 2.4785 2 0.0 0 9.496 7 1.2392 2 22.6777 2 1.0571 2 14.7964 2 6.5399 2 0.0131 2 21.451 2)
Average genome size in population (length): 38.484
Average program size in population (points): 39.484
Average percent parens in population: 0.026
Minimum age in population: 227.4557574671118
Maximum age in population: 233.1583121044022
Average age in population: 231.124700094006
Median age in population: 231.1806978926623
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.179
Error (vector) diversity:			 0.18
Behavioral diversity:				 0.18
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 160749615
--- Timings ---
Current time: 1529615700958 milliseconds
Total Time:         526.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.4 seconds, 43.2%
Fitness Testing:    239.9 seconds, 45.5%
Report:              59.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 44337.8179
Test mean error for best: 22.16891
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 132.4861770482
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 92.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 37.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.2182518621 
Correct output: 119.9031170612 | Program output: 150.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 144.3412969119
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 0.3376 9 21.9859 8 7.1061 11 8.4513 10 28.4868 12 15.7801 10 22.7099 10 21.0364 8 37.3295 9 31.0922 10 20.5072 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 1.7371 10 24.451 9]
Total: 883.4703000000002
Mean: 17.669407
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2172.1888727999994
Median total errors in population: 887.3679000000001
Error averages by case: (108.76000320000037 10.015 117.60550359999921 10.396 86.74140770000018 9.285 116.52155570000096 10.156 56.027245699999625 10.933 64.23276890000015 9.166 63.24552899999971 8.478 60.8840791999995 10.894 49.732598600000316 10.274 72.17042359999942 11.563 63.64719310000129 9.963 88.03651740000097 10.176 67.43550390000073 10.57 75.46922339999998 10.333 85.39197129999944 10.409 58.91235070000001 9.577 51.84448539999978 9.257 134.26162029999824 10.336 76.61845939999955 11.118 82.33003879999947 10.85 45.08749920000033 10.048 75.64450100000047 9.255 73.94293479999958 10.881 65.79411470000015 9.668 79.04834420000043 9.202)
Error minima by case: (0.0792 3 13.7747 8 4.0 1 27.0 2 1.6252 1 0.0753 3 17.0801 2 0.6601 2 6.3834 9 13.3175 2 2.0 1 11.7747 3 4.0 1 1.8888 2 18.5017 3 3.9793 7 0.0 0 7.7747 6 5.5733 3 23.3617 3 0.46 2 14.7964 3 6.6074 2 0.1777 3 7.098 2)
Average genome size in population (length): 39.667
Average program size in population (points): 40.667
Average percent parens in population: 0.025
Minimum age in population: 230.250204485567
Maximum age in population: 234.4051234134432
Average age in population: 232.6226910036188
Median age in population: 232.6581237497934
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.616
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.616
Total error diversity:				 0.206
Error (vector) diversity:			 0.212
Behavioral diversity:				 0.212
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 161741465
--- Timings ---
Current time: 1529615704193 milliseconds
Total Time:         529.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.7 seconds, 43.2%
Fitness Testing:    241.4 seconds, 45.6%
Report:              59.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 44337.8179
Test mean error for best: 22.16891
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 132.4861770482
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 92.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 37.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.2182518621 
Correct output: 119.9031170612 | Program output: 150.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 144.3412969119
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 0.3376 9 21.9859 8 7.1061 11 8.4513 10 28.4868 12 15.7801 10 22.7099 10 21.0364 8 37.3295 9 31.0922 10 20.5072 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 1.7371 10 24.451 9]
Total: 883.4703000000002
Mean: 17.669407
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2806.6310265000025
Median total errors in population: 887.3679000000001
Error averages by case: (135.13503180000086 9.891 142.53749879999913 10.419 111.31334580000026 9.392 140.5695846000012 10.264 81.8588265000003 10.877 88.09808049999918 9.328 89.40004899999963 8.453 85.04962150000043 10.908 76.0220895000004 10.416 96.3083667999996 11.539 89.50389960000155 10.034 114.61202070000104 10.303 92.41858049999999 10.476 100.39143809999946 10.442 108.69100669999966 10.548 84.30087379999887 9.96 78.08488430000065 9.454 158.96258259999948 10.24 103.35566539999995 11.414 107.74811859999882 10.927 71.13432190000042 10.058 101.28991970000133 9.339 99.63028649999879 11.015 89.5065607000001 9.712 105.97637260000052 9.323)
Error minima by case: (1.0792 2 10.8407 9 4.0 1 27.0 2 2.3037 1 0.0827 3 19.6952 1 3.3399 2 2.7525 8 4.7264 2 2.0 1 18.7099 2 4.0 1 2.8888 9 10.9915 3 1.7839 7 0.0 0 43.4444 7 5.5733 2 23.3617 3 2.0572 1 14.7964 2 6.6074 2 0.1777 3 7.098 2)
Average genome size in population (length): 42.246
Average program size in population (points): 43.246
Average percent parens in population: 0.024
Minimum age in population: 231.7242229503145
Maximum age in population: 236.001024672377
Average age in population: 234.0522366763605
Median age in population: 234.0774114647696
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 225
Genome diversity (% unique Plush genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 225
Syntactic diversity (% unique Push programs):	 0.555
Total error diversity:				 0.224
Error (vector) diversity:			 0.226
Behavioral diversity:				 0.227
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 162797665
--- Timings ---
Current time: 1529615707880 milliseconds
Total Time:         533.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.2 seconds, 43.1%
Fitness Testing:    243.0 seconds, 45.6%
Report:              60.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 44430.607400000015
Test mean error for best: 22.21530
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.651441742  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.8992497478 
Correct output: 132.8237835559 | Program output: 130.4861770482
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 90.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 35.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.2182518621 
Correct output: 119.9031170612 | Program output: 148.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.985220653  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.3412969119
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_dec float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 41.0604 11 65.8849 10 4.658 8 2.3376 10 21.9859 8 5.1061 11 8.4513 10 30.4868 12 15.7801 10 22.7099 10 21.0364 8 37.3295 9 29.0922 10 20.5072 9 1.7697 12 89.6476 9 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.2629 9 24.451 9]
Total: 883.0597000000001
Mean: 17.661194
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3202.9682050000038
Median total errors in population: 886.3679000000001
Error averages by case: (152.80078190000114 10.02 157.67142719999904 10.335 128.36302640000017 9.745 158.2741532000014 10.439 99.33625280000078 10.585 103.31590219999916 9.77 102.42797879999947 8.882 97.83590160000055 10.986 88.81053790000011 10.578 108.33851480000008 11.397 108.35772460000169 10.168 132.68138830000083 10.474 110.30758819999947 10.198 111.10689339999985 10.473 121.37360189999988 10.751 95.74105719999854 10.217 96.7125010000011 10.199 173.36890530000034 9.903 121.59971400000055 11.648 125.87748109999826 11.061 83.7554910000002 10.148 119.5199853000019 9.52 117.80744709999819 11.163 105.31539249999999 9.828 124.2935573000004 9.487)
Error minima by case: (0.9208 3 17.6195 2 1.0 1 26.0 2 1.3037 1 0.0451 3 17.0 2 0.9587 2 6.3834 8 21.4021 2 1.0 1 17.7099 3 1.0 1 1.3932 8 20.0787 3 2.9793 7 0.0 0 7.1015 1 4.5733 2 22.0458 2 1.0572 1 11.873 2 2.2584 2 0.1777 2 6.098 2)
Average genome size in population (length): 49.507
Average program size in population (points): 50.507
Average percent parens in population: 0.021
Minimum age in population: 233.1200675077745
Maximum age in population: 237.3770622448578
Average age in population: 235.5005120732222
Median age in population: 235.5242535008553
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 216
Genome diversity (% unique Plush genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 216
Syntactic diversity (% unique Push programs):	 0.555
Total error diversity:				 0.269
Error (vector) diversity:			 0.275
Behavioral diversity:				 0.276
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 164035340
--- Timings ---
Current time: 1529615711452 milliseconds
Total Time:         537.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.7 seconds, 43.1%
Fitness Testing:    244.6 seconds, 45.5%
Report:              60.8 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 44430.607400000015
Test mean error for best: 22.21530
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.651441742  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.8992497478 
Correct output: 132.8237835559 | Program output: 130.4861770482
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 90.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 35.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.2182518621 
Correct output: 119.9031170612 | Program output: 148.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.985220653  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.3412969119
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_swap} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max integer_inc integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec integer_swap float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_dec float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 41.0604 11 65.8849 10 4.658 8 2.3376 10 21.9859 8 5.1061 11 8.4513 10 30.4868 12 15.7801 10 22.7099 10 21.0364 8 37.3295 9 29.0922 10 20.5072 9 1.7697 12 89.6476 9 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.2629 9 24.451 9]
Total: 883.0597000000001
Mean: 17.661194
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3005.9611321
Median total errors in population: 887.7284500000001
Error averages by case: (139.28433680000128 10.229 145.65290579999905 10.105 118.38969470000004 10.039 146.66339050000153 10.385 87.330449100001 10.021 103.81119069999926 10.124 96.87045479999935 9.507 97.58760370000056 10.956 83.81277030000011 10.771 107.35549010000042 11.278 95.17660280000185 10.144 120.84598190000098 10.428 100.38334289999926 9.503 108.23519880000087 10.406 120.6559664000001 10.858 92.73519689999878 10.172 85.1269986000003 11.008 161.90963980000024 9.215 110.0711328000003 11.401 114.27246309999842 11.037 79.29491830000019 10.194 108.16580420000172 9.473 107.3003694999983 11.057 106.62003259999975 9.971 110.69119700000044 9.436)
Error minima by case: (1.0792 2 1.4602 1 2.364 1 27.0 2 0.3037 1 0.0054 3 7.869 2 0.3399 2 1.6846 2 9.0849 2 2.0 1 18.7099 3 4.0 1 2.8888 9 22.0787 2 4.5215 7 0.2431 1 1.6328 1 5.5733 2 23.3617 2 1.941 1 14.7964 1 6.6074 2 0.1777 2 20.451 2)
Average genome size in population (length): 60.409
Average program size in population (points): 61.409
Average percent parens in population: 0.017
Minimum age in population: 234.326965688342
Maximum age in population: 238.7032925361724
Average age in population: 236.9030962392259
Median age in population: 236.9536763086134
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 124
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 124
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.33
Error (vector) diversity:			 0.335
Behavioral diversity:				 0.335
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 165545715
--- Timings ---
Current time: 1529615715096 milliseconds
Total Time:         540.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.1 seconds, 43.1%
Fitness Testing:    246.4 seconds, 45.6%
Report:              61.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 44430.607400000015
Test mean error for best: 22.21530
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.651441742  
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.8992497478 
Correct output: 132.8237835559 | Program output: 130.4861770482
Correct output: -23.655607388  | Program output: -1.6696703894 
Correct output: 85.8723285783  | Program output: 90.978450015  
Correct output: 7.3833649895   | Program output: -1.0679149283 
Correct output: 66.4021182413  | Program output: 35.9153465354 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -0.2182518621 
Correct output: 119.9031170612 | Program output: 148.9953235191
Correct output: 20.2024981978  | Program output: -0.3046772984 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.985220653  
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -1.711496689  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.3412969119
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_max integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod integer_max integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 41.0604 11 65.8849 10 4.658 8 2.3376 10 21.9859 8 5.1061 11 8.4513 10 30.4868 12 15.7801 10 22.7099 10 21.0364 8 37.3295 9 29.0922 10 20.5072 9 1.7697 12 89.6476 9 9.5733 11 25.3617 11 4.3456 10 16.7964 9 8.6074 11 0.2629 9 24.451 9]
Total: 883.0597000000001
Mean: 17.661194
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2447.3628977999924
Median total errors in population: 885.5533999999999
Error averages by case: (120.54374590000091 10.224 124.35535619999996 9.852 96.30558099999989 10.127 128.14083810000153 10.244 63.77788870000111 9.645 79.37671559999934 10.054 72.1526190999998 9.071 71.73673199999978 10.873 57.22605000000042 10.47 82.25801019999984 11.36 75.84350780000176 9.996 102.71440780000111 10.317 77.96050459999917 9.031 82.49488260000116 10.006 96.49223979999985 10.722 66.60769870000014 9.758 62.14872999999906 11.355 140.27918459999924 8.692 91.51366640000013 11.165 95.51589109999867 10.933 54.38603410000043 10.019 89.26812240000139 9.373 89.02387729999859 10.885 82.38997889999939 10.087 91.28763490000057 9.304)
Error minima by case: (1.0792 2 21.5398 2 3.636 1 26.0 2 0.5762 1 0.0054 3 19.6689 1 3.723 2 6.094 7 15.206 2 1.0 1 18.7099 1 1.754 1 1.7367 7 24.0787 2 0.1628 7 0.0 0 9.3672 1 5.5733 2 21.3617 2 0.0573 1 12.7964 3 4.6074 2 0.0239 3 20.451 2)
Average genome size in population (length): 66.226
Average program size in population (points): 67.226
Average percent parens in population: 0.015
Minimum age in population: 235.326965688342
Maximum age in population: 240.1979455606555
Average age in population: 238.2831808837437
Median age in population: 238.3298056865515
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.677
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.677
Total error diversity:				 0.311
Error (vector) diversity:			 0.313
Behavioral diversity:				 0.313
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 167201465
--- Timings ---
Current time: 1529615719328 milliseconds
Total Time:         544.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.7 seconds, 43.1%
Fitness Testing:    248.4 seconds, 45.6%
Report:              61.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 44474.49789999997
Test mean error for best: 22.23725
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 131.199022622 
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 91.5953464442 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 37.4709015618 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -1.4683854981 
Correct output: 119.9031170612 | Program output: 150.5898682174
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.6280907314
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 1.6248 11 20.3163 7 5.723 11 9.5192 10 28.9312 9 15.7801 10 22.7099 10 21.0364 8 38.5796 11 30.6868 12 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 0.0239 7 24.451 9]
Total: 879.9418000000001
Mean: 17.598837
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2517.8733794999944
Median total errors in population: 885.5533999999999
Error averages by case: (120.39343620000079 10.266 125.57293899999995 9.963 98.91756340000005 10.203 129.63379980000124 10.299 65.98083120000096 9.728 86.42432269999951 10.195 74.44744179999974 8.836 77.90009570000002 10.976 61.38712660000032 10.387 86.92799259999954 11.516 76.14060120000156 10.063 103.39691530000101 10.402 80.61380409999941 9.047 87.28819360000092 9.984 101.67144489999963 10.681 71.32705339999949 9.643 63.858207999999244 11.39 142.90645409999934 8.732 92.3851819999998 11.21 96.56577009999917 10.975 57.688665700000364 9.998 90.21169710000096 9.403 90.18353499999905 11.008 89.80073759999945 10.458 91.49556840000047 9.391)
Error minima by case: (0.0792 2 23.5398 2 4.0 1 25.0 2 1.3037 1 0.002 3 6.1951 1 0.9568 2 6.2429 8 10.4021 2 0.0 0 18.7099 2 4.0 1 18.8888 8 26.0348 3 1.4785 7 0.2431 1 11.3672 1 5.5733 2 23.3617 3 1.8858 1 14.7964 2 6.6074 2 0.0239 2 8.098 2)
Average genome size in population (length): 67.186
Average program size in population (points): 68.186
Average percent parens in population: 0.015
Minimum age in population: 237.3133303877036
Maximum age in population: 241.6657791242414
Average age in population: 239.7157580488219
Median age in population: 239.756716718686
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 80
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 80
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.303
Error (vector) diversity:			 0.304
Behavioral diversity:				 0.305
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 168881215
--- Timings ---
Current time: 1529615723146 milliseconds
Total Time:         548.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.0 seconds, 43.0%
Fitness Testing:    250.4 seconds, 45.6%
Report:              62.3 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 44474.49789999997
Test mean error for best: 22.23725
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 131.199022622 
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 91.5953464442 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 37.4709015618 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -1.4683854981 
Correct output: 119.9031170612 | Program output: 150.5898682174
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.6280907314
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 1.6248 11 20.3163 7 5.723 11 9.5192 10 28.9312 9 15.7801 10 22.7099 10 21.0364 8 38.5796 11 30.6868 12 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 0.0239 7 24.451 9]
Total: 879.9418000000001
Mean: 17.598837
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2535.460820099995
Median total errors in population: 884.0556000000001
Error averages by case: (121.06013750000052 10.265 126.45413090000002 9.897 99.71209540000004 10.199 128.37924420000098 10.289 66.21388760000087 9.654 86.75429019999959 10.195 77.85565869999974 8.875 78.54011380000009 10.954 64.7457392000003 10.385 88.70274999999953 11.491 75.7925870000014 10.048 102.91607390000092 10.366 81.9315876999994 9.013 89.14463240000069 9.984 103.36190529999966 10.738 73.41497959999957 9.63 64.06954039999931 11.394 143.65064429999921 8.738 91.62083379999963 11.207 95.8554708999992 10.979 60.39316130000035 10.101 89.62321510000056 9.373 89.28178489999947 10.963 89.79160099999957 10.436 91.6717550000004 9.349)
Error minima by case: (1.0792 3 13.6668 2 4.0 1 27.0 2 1.8552 1 0.0054 3 18.3163 1 1.3399 2 6.2429 8 12.4868 2 2.0 1 16.7099 2 4.0 1 35.2665 8 25.9565 3 19.2486 7 0.2431 1 33.4942 1 3.5733 2 23.3617 3 0.6341 1 14.7964 2 6.6074 2 0.0239 2 18.451 1)
Average genome size in population (length): 67.448
Average program size in population (points): 68.448
Average percent parens in population: 0.015
Minimum age in population: 238.6067010516209
Maximum age in population: 243.0569516370892
Average age in population: 241.0727678476243
Median age in population: 241.1184853715731
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.758
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.758
Total error diversity:				 0.301
Error (vector) diversity:			 0.305
Behavioral diversity:				 0.305
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 170567440
--- Timings ---
Current time: 1529615727201 milliseconds
Total Time:         552.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.4 seconds, 43.0%
Fitness Testing:    252.4 seconds, 45.7%
Report:              62.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 44474.49789999997
Test mean error for best: 22.23725
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 131.199022622 
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 91.5953464442 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 37.4709015618 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -1.4683854981 
Correct output: 119.9031170612 | Program output: 150.5898682174
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.6280907314
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 1.6248 11 20.3163 7 5.723 11 9.5192 10 28.9312 9 15.7801 10 22.7099 10 21.0364 8 38.5796 11 30.6868 12 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 0.0239 7 24.451 9]
Total: 879.9418000000001
Mean: 17.598837
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2450.689389699995
Median total errors in population: 884.0556000000001
Error averages by case: (119.7338316000008 10.263 121.99749150000004 9.9 94.73880130000019 10.282 127.93823450000124 10.309 61.09824430000096 9.54 84.20423639999956 10.209 72.22319619999976 8.795 75.78882069999979 10.904 58.25217660000032 10.359 86.30060679999951 11.449 75.78880290000163 10.072 100.17585780000105 10.347 76.23853879999935 9.008 84.0237980000008 9.953 101.13252659999966 10.704 67.98896049999989 9.6 58.979599899999236 11.436 138.92212529999907 8.917 88.96211759999949 11.218 94.64563229999929 11.006 54.406610600000356 10.005 88.1665289000008 9.384 86.94227789999921 10.971 87.30926869999965 10.311 90.43710400000052 9.352)
Error minima by case: (1.0792 3 8.6748 1 20.409 7 26.0 2 0.6394 1 0.0054 3 19.6689 1 3.1061 2 5.15 8 13.2646 2 1.0 1 15.7099 3 0.9385 7 20.8608 2 26.0348 3 2.4785 7 0.0044 7 9.3672 2 2.5733 2 23.3617 2 0.0383 1 14.7964 3 6.6074 2 0.0239 2 17.451 2)
Average genome size in population (length): 68.459
Average program size in population (points): 69.459
Average percent parens in population: 0.014
Minimum age in population: 239.7770980186769
Maximum age in population: 244.2326448706626
Average age in population: 242.4299523721878
Median age in population: 242.4716843375543
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.306
Error (vector) diversity:			 0.311
Behavioral diversity:				 0.312
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 172278915
--- Timings ---
Current time: 1529615731094 milliseconds
Total Time:         556.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.9 seconds, 42.9%
Fitness Testing:    254.3 seconds, 45.7%
Report:              63.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 44474.49789999997
Test mean error for best: 22.23725
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 131.199022622 
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 91.5953464442 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 37.4709015618 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -1.4683854981 
Correct output: 119.9031170612 | Program output: 150.5898682174
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 142.6280907314
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_add} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_sub} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add integer_add integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_sub in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_max float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 1.6248 11 20.3163 7 5.723 11 9.5192 10 28.9312 9 15.7801 10 22.7099 10 21.0364 8 38.5796 11 30.6868 12 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 0.0239 7 24.451 9]
Total: 879.9418000000001
Mean: 17.598837
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2075.916315199996
Median total errors in population: 885.7329500000001
Error averages by case: (101.84775660000072 10.17 106.91151100000009 9.773 79.93198150000033 10.383 110.98012970000119 10.195 45.763737900000834 9.31 72.96490689999952 10.444 59.24087419999973 8.734 62.63763399999944 10.861 45.09737070000025 10.309 72.57670569999945 11.393 56.42118680000159 9.938 84.61240220000096 10.27 61.038802899999254 8.965 70.28646060000031 10.008 88.25562759999973 10.609 54.26886269999997 9.592 44.006294799999296 11.328 123.9302436999987 9.238 73.32089839999902 11.119 77.5594406999996 10.905 41.009101900000324 9.941 71.15590620000009 9.318 71.06467439999989 10.861 75.69855570000014 10.104 72.32124840000044 9.246)
Error minima by case: (0.0792 3 21.5398 2 29.6903 5 27.0 2 0.5611 1 0.0054 3 19.1673 1 0.3399 2 3.3353 8 8.0847 2 2.0 1 16.7099 3 0.5654 5 0.8888 9 25.6136 3 0.4785 7 0.2431 6 9.3672 1 3.5733 2 23.3617 3 2.0 1 14.7964 3 6.6074 2 0.0239 2 7.098 2)
Average genome size in population (length): 70.656
Average program size in population (points): 71.656
Average percent parens in population: 0.014
Minimum age in population: 241.2645099034339
Maximum age in population: 245.8653124483988
Average age in population: 243.7525809979244
Median age in population: 243.7863978750212
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.342
Error (vector) diversity:			 0.345
Behavioral diversity:				 0.345
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 174045390
--- Timings ---
Current time: 1529615735003 milliseconds
Total Time:         560.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.3 seconds, 42.9%
Fitness Testing:    256.4 seconds, 45.7%
Report:              63.9 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2171.2316529999966
Median total errors in population: 885.4076000000001
Error averages by case: (107.41135400000046 10.194 109.52383700000009 9.876 83.60298350000035 10.573 116.08360910000098 10.208 49.56046110000052 9.258 73.88625789999945 10.64 62.31093919999975 8.733 63.6120155999995 10.911 48.64849410000033 10.358 75.43556159999943 11.359 62.337935900001405 9.976 90.49709580000105 10.297 64.39749119999946 9.018 73.91290030000046 10.062 89.77641999999955 10.709 57.952075999999984 9.635 47.96204879999943 11.303 125.95788469999859 9.563 79.18819579999925 11.113 83.06196849999955 10.89 44.52850320000038 9.982 76.78177980000038 9.326 76.91115759999958 10.899 75.82703890000045 9.869 78.02164340000051 9.29)
Error minima by case: (0.0792 2 3.5638 7 2.4576 1 24.0 2 0.4428 1 0.0377 3 17.5739 1 0.5737 2 5.6458 8 3.1958 2 1.0 1 16.7099 2 0.246 1 0.5507 8 16.0962 3 1.5215 7 0.2431 1 1.2991 7 3.5733 2 23.3617 3 0.6341 1 14.7964 2 6.6074 2 0.0239 2 8.098 2)
Average genome size in population (length): 72.462
Average program size in population (points): 73.462
Average percent parens in population: 0.014
Minimum age in population: 242.2645099034339
Maximum age in population: 247.2076831436902
Average age in population: 245.0692280438555
Median age in population: 245.0806598072425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.339
Error (vector) diversity:			 0.339
Behavioral diversity:				 0.339
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 175857015
--- Timings ---
Current time: 1529615738873 milliseconds
Total Time:         564.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.7 seconds, 42.8%
Fitness Testing:    258.4 seconds, 45.8%
Report:              64.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2465.310905299996
Median total errors in population: 885.4076000000001
Error averages by case: (114.82630420000059 10.288 122.32473830000016 9.83 95.87540460000034 10.602 126.84423850000114 10.284 63.74750810000081 9.304 85.14944079999952 10.737 75.57296679999979 8.667 76.22490799999966 10.913 63.303410100000384 10.352 88.45378179999966 11.116 71.8630844000015 10.015 99.29304070000099 10.375 77.80653459999922 9.089 87.67505330000044 10.222 101.0504482999997 10.84 72.05676589999992 9.68 63.80338559999921 11.408 138.3020846999988 9.519 88.45304989999974 11.185 92.93547159999895 10.946 58.24744860000042 10.032 86.54348420000093 9.416 86.72141089999899 10.94 86.8250105000004 9.689 86.58693090000045 9.376)
Error minima by case: (0.0792 3 4.0 1 0.8909 1 19.9511 2 1.0 1 0.2236 3 15.1686 1 0.0432 2 2.8368 2 11.3228 2 1.8986 1 10.3716 3 2.7391 1 0.0596 4 23.8505 3 5.1881 7 0.2431 1 4.0 1 3.5082 2 7.7567 2 0.5199 1 14.7964 1 6.6074 2 0.0018 2 8.098 2)
Average genome size in population (length): 71.915
Average program size in population (points): 72.915
Average percent parens in population: 0.014
Minimum age in population: 243.6548460579094
Maximum age in population: 248.6682115036011
Average age in population: 246.5698724013919
Median age in population: 246.623922821366
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.349
Error (vector) diversity:			 0.351
Behavioral diversity:				 0.351
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 177654915
--- Timings ---
Current time: 1529615742847 milliseconds
Total Time:         568.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.2 seconds, 42.8%
Fitness Testing:    260.5 seconds, 45.8%
Report:              64.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2498.7922169999974
Median total errors in population: 886.9958
Error averages by case: (116.31798790000049 10.358 126.01685570000008 9.937 97.16920190000015 10.389 136.85150670000138 10.408 67.87793800000091 9.524 82.47401359999985 10.869 74.19831809999977 8.328 72.71639639999974 10.906 60.39434770000058 10.331 83.10692890000004 10.481 77.82747590000169 10.076 103.52140540000096 10.437 78.67938999999917 9.096 81.85949739999974 10.661 98.52926249999972 11.052 65.98814810000012 9.623 68.5114772999994 11.398 141.02289309999912 9.318 93.8200781999998 11.249 100.416927099999 11.027 54.72204990000071 10.082 93.48946980000095 9.528 93.19885439999906 11.082 84.6234966000001 9.387 90.46329640000042 9.448)
Error minima by case: (0.0792 3 21.5398 2 0.3576 1 27.0 2 0.0152 1 0.0377 3 17.9859 1 0.0432 2 6.9508 8 11.3228 2 1.4277 1 2.8127 3 0.4471 1 1.8888 4 26.6136 3 1.1738 7 0.2431 1 6.1015 1 1.9343 2 23.3617 3 0.0769 1 14.7964 3 6.6074 2 0.0163 2 8.098 2)
Average genome size in population (length): 70.281
Average program size in population (points): 71.281
Average percent parens in population: 0.014
Minimum age in population: 245.8444403626881
Maximum age in population: 249.9614698782295
Average age in population: 248.0190648940723
Median age in population: 248.0488892815496
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.383
Error (vector) diversity:			 0.387
Behavioral diversity:				 0.387
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 179411940
--- Timings ---
Current time: 1529615746576 milliseconds
Total Time:         572.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.5 seconds, 42.7%
Fitness Testing:    262.4 seconds, 45.9%
Report:              65.3 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_pop} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec float_yankdup float_yankdup float_dec float_yankdup integer_add float_dec float_dup_items integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_pop float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2396.3576957999967
Median total errors in population: 886.30685
Error averages by case: (107.51344570000035 10.294 121.42062050000014 9.89 91.19996879999991 10.239 130.31529650000115 10.371 64.51523790000101 9.661 80.35394059999993 10.85 73.9134978999998 8.21 71.77437169999989 10.859 61.23235910000061 10.377 83.3509802999998 9.969 70.22523070000152 10.02 95.32245100000095 10.401 72.87776279999923 9.046 83.08804179999944 11.03 97.41973109999975 11.149 67.10407870000031 9.616 65.91985359999917 11.473 136.33550189999897 8.938 85.80884859999965 11.157 93.01202009999916 10.989 54.44484380000059 10.096 85.8530328000007 9.465 85.38901629999926 11.03 82.11152299999972 9.138 82.16604060000044 9.422)
Error minima by case: (0.0792 3 21.5398 2 2.0 1 18.9937 2 1.0501 7 0.0377 3 18.3163 2 0.0116 2 5.1025 8 1.1958 2 1.198 2 16.7099 3 2.0 1 0.9222 8 23.0873 2 2.1738 8 0.2431 2 6.1015 1 3.5733 3 17.0776 3 0.6341 1 14.7964 2 6.6074 2 0.0163 2 7.098 2)
Average genome size in population (length): 68.825
Average program size in population (points): 69.825
Average percent parens in population: 0.014
Minimum age in population: 246.8761338646802
Maximum age in population: 251.4234129237544
Average age in population: 249.4386536915322
Median age in population: 249.4609920441431
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.724
Total error diversity:				 0.357
Error (vector) diversity:			 0.358
Behavioral diversity:				 0.358
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 181132590
--- Timings ---
Current time: 1529615750736 milliseconds
Total Time:         576.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.0 seconds, 42.7%
Fitness Testing:    264.5 seconds, 45.9%
Report:              65.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2411.579135699995
Median total errors in population: 883.9132000000001
Error averages by case: (113.7218943000004 10.362 124.6852325000002 9.9 94.2200439999999 10.233 132.53382690000134 10.38 66.92280560000123 9.669 76.0720388999996 10.482 72.80725159999986 7.959 67.11116159999979 10.617 60.29519660000068 10.392 79.92818069999957 9.603 75.37766850000172 10.072 97.23930100000103 10.409 75.75183719999917 9.057 81.5616920999993 11.123 92.90812070000007 10.431 65.19665700000036 9.596 67.87812939999924 11.467 139.91015559999923 8.876 87.2675445999994 11.225 95.4505347999994 11.059 52.86711780000075 10.169 88.29149730000071 9.463 86.67509869999934 11.057 77.78605139999928 9.4 86.70109690000044 9.418)
Error minima by case: (0.0792 2 7.8962 2 1.8502 3 27.0 2 0.2138 1 0.0377 1 2.9772 2 0.0235 2 5.5733 8 14.8201 2 2.0 1 7.5739 3 1.8502 3 11.7977 9 23.0873 2 5.1111 7 0.1187 4 5.3672 1 5.5733 2 23.3617 3 0.1057 1 14.7964 3 6.6074 2 0.0163 2 5.098 2)
Average genome size in population (length): 69.225
Average program size in population (points): 70.225
Average percent parens in population: 0.014
Minimum age in population: 248.390272491418
Maximum age in population: 252.851805417582
Average age in population: 250.8453343296802
Median age in population: 250.8814016667778
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 101
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 101
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.344
Error (vector) diversity:			 0.345
Behavioral diversity:				 0.345
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 182863240
--- Timings ---
Current time: 1529615754594 milliseconds
Total Time:         580.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       247.4 seconds, 42.6%
Fitness Testing:    266.5 seconds, 45.9%
Report:              66.3 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_shove float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2644.8403807000013
Median total errors in population: 884.7409500000001
Error averages by case: (119.40314160000041 10.352 132.23025130000013 9.928 102.06759299999989 10.282 140.3872173000011 10.362 75.2720113000012 9.659 87.91500879999933 10.226 83.97887540000042 7.884 77.44970230000007 10.475 71.48701990000039 10.389 90.21222279999905 9.522 80.98692570000162 10.009 107.50634930000099 10.416 83.73908789999898 9.08 92.63896019999942 11.168 103.77873669999961 9.776 76.3966671000003 9.638 76.28631309999994 11.497 147.16679609999952 8.918 97.88895559999996 11.161 104.12256809999899 10.978 64.1883521000012 10.112 97.08263890000117 9.507 97.19654569999891 11.036 90.1290926999987 9.814 93.70434780000036 9.436)
Error minima by case: (0.0792 3 5.4344 2 0.3576 7 27.0 2 0.0501 1 0.0377 1 16.9769 1 0.1906 2 5.2125 8 6.5291 2 1.6688 1 5.2315 3 0.5711 7 9.6852 9 17.3126 2 6.9379 7 0.1187 6 3.6753 1 5.5733 2 17.0536 3 0.3456 1 9.4883 3 4.6074 2 0.0163 2 3.098 2)
Average genome size in population (length): 70.165
Average program size in population (points): 71.165
Average percent parens in population: 0.014
Minimum age in population: 249.7352846325464
Maximum age in population: 254.070455312344
Average age in population: 252.2511837700798
Median age in population: 252.2622080037841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 128
Genome diversity (% unique Plush genomes):	 0.71
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 128
Syntactic diversity (% unique Push programs):	 0.71
Total error diversity:				 0.314
Error (vector) diversity:			 0.316
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 184617415
--- Timings ---
Current time: 1529615758342 milliseconds
Total Time:         584.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.7 seconds, 42.6%
Fitness Testing:    268.4 seconds, 46.0%
Report:              66.7 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2558.265431300003
Median total errors in population: 883.8236
Error averages by case: (118.42047660000043 10.375 129.57553130000016 9.927 98.30111419999984 10.24 138.32832180000108 10.409 72.73646430000083 9.688 83.61346209999951 10.096 80.81043860000001 7.851 72.51578470000001 10.382 66.95372830000045 10.312 85.36023989999913 9.433 80.64357530000132 10.118 103.34076110000099 10.454 79.93858059999926 9.047 87.44645689999946 11.094 98.8556207999996 9.513 71.17367430000029 9.524 73.91046349999978 11.526 144.49321719999926 8.869 93.3916640999997 11.248 101.49916749999919 11.073 60.2272571000008 10.155 94.39238210000076 9.517 93.02154079999939 11.111 85.84275539999881 9.844 92.20075280000046 9.466)
Error minima by case: (1.0792 3 20.5398 2 0.6456 2 27.0 2 0.3937 1 0.1331 3 16.3163 2 0.0235 2 5.806 8 13.9312 2 1.4277 1 6.0266 3 0.488 2 3.5561 2 2.2096 2 1.1309 7 0.1187 1 8.3672 1 5.5733 2 21.3617 3 0.6192 1 12.7964 3 4.6074 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.524
Average program size in population (points): 71.524
Average percent parens in population: 0.014
Minimum age in population: 251.0539024459498
Maximum age in population: 255.6765878039359
Average age in population: 253.6072294187484
Median age in population: 253.628041723857
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 110
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 110
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.303
Error (vector) diversity:			 0.306
Behavioral diversity:				 0.306
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 186380515
--- Timings ---
Current time: 1529615762450 milliseconds
Total Time:         588.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       250.2 seconds, 42.6%
Fitness Testing:    270.5 seconds, 46.0%
Report:              67.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2384.208755600003
Median total errors in population: 888.0901500000001
Error averages by case: (108.36893720000016 10.266 120.00451500000021 9.979 90.70461999999988 10.19 129.33528800000084 10.267 62.57990300000073 9.671 80.99878569999969 10.178 74.80754819999996 7.799 69.05561680000004 10.374 61.55588300000062 10.336 81.35715399999924 9.565 70.00092550000109 9.903 96.11992290000087 10.323 72.35803139999955 9.056 82.91648639999954 11.141 96.48624229999993 9.606 66.50286140000037 9.572 64.04193869999946 11.389 135.09157819999902 8.901 86.55085169999964 11.111 92.87627249999969 10.915 54.31834820000065 10.148 85.92319390000033 9.409 85.99852899999973 10.916 83.48279119999896 9.879 82.53153140000035 9.347)
Error minima by case: (0.0792 3 2.3513 2 0.3576 1 24.2361 2 1.3216 7 0.0377 1 6.0535 2 0.0235 2 3.4159 8 11.9894 2 1.0 1 6.7105 3 0.5711 1 1.8888 8 17.718 2 1.9392 7 0.1187 1 5.2925 1 5.5733 2 17.1099 2 0.6341 1 12.7395 3 2.4828 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.641
Average program size in population (points): 71.641
Average percent parens in population: 0.014
Minimum age in population: 252.1791906723328
Maximum age in population: 257.3572191197153
Average age in population: 254.9735226412117
Median age in population: 254.999927907274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.313
Error (vector) diversity:			 0.315
Behavioral diversity:				 0.316
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 188146615
--- Timings ---
Current time: 1529615766408 milliseconds
Total Time:         592.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.6 seconds, 42.5%
Fitness Testing:    272.6 seconds, 46.0%
Report:              67.8 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_rot integer_stackdepth float_dec float_yankdup float_add float_yankdup in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2234.2280150000042
Median total errors in population: 883.5520000000001
Error averages by case: (106.1764357000005 10.288 118.53093040000007 9.884 88.58782829999991 10.202 125.53693560000106 10.294 60.04907720000105 9.612 67.98074379999946 10.054 67.72246169999934 7.732 57.678269800000045 10.339 54.52831150000077 10.341 70.63826389999903 9.374 66.79740710000145 9.977 91.86187310000099 10.338 70.17502749999915 8.986 72.84219339999953 11.1 85.90639220000017 9.446 56.826285200000385 9.517 61.10719069999908 11.499 133.41013649999877 8.735 81.81724729999928 11.111 88.68304979999954 10.944 46.031076400000536 10.123 81.6234087000003 9.407 80.97914199999968 10.972 69.84411019999887 9.812 79.44921700000042 9.358)
Error minima by case: (0.0792 3 17.6195 2 0.6456 1 27.5304 2 0.5572 1 0.3376 1 16.3163 2 0.0235 2 5.1025 8 5.6243 2 3.0 1 16.7099 3 0.569 1 6.2528 8 22.1131 2 1.7995 7 0.2431 1 9.3672 1 3.5733 2 23.3617 3 0.6341 1 14.7964 3 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 70.389
Average program size in population (points): 71.389
Average percent parens in population: 0.014
Minimum age in population: 253.5306579692208
Maximum age in population: 258.2239539218005
Average age in population: 256.3714420435095
Median age in population: 256.4233326245281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 69
Genome diversity (% unique Plush genomes):	 0.756
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 69
Syntactic diversity (% unique Push programs):	 0.756
Total error diversity:				 0.312
Error (vector) diversity:			 0.313
Behavioral diversity:				 0.313
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 189906415
--- Timings ---
Current time: 1529615770292 milliseconds
Total Time:         596.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       253.0 seconds, 42.5%
Fitness Testing:    274.6 seconds, 46.1%
Report:              68.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_max} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_sub integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add integer_max integer_add integer_max float_yankdup float_dup_times -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2461.6718597000036
Median total errors in population: 883.8684000000001
Error averages by case: (113.09163550000036 10.308 127.79891430000013 9.948 98.17104839999989 10.218 135.82515650000136 10.309 71.5123791000012 9.695 78.73933579999955 10.057 71.89901849999963 7.732 66.88469580000002 10.358 59.47389990000071 10.332 79.99066809999897 9.477 76.1743797000016 9.952 101.10295510000091 10.365 80.12117659999915 9.068 81.8523057999995 11.116 93.46261429999981 9.526 65.20670410000035 9.551 73.39714369999953 11.469 142.5178551999993 8.865 91.77934279999968 11.146 98.71329939999923 10.96 52.17667970000067 10.096 91.64211380000083 9.463 91.30742549999917 10.988 80.76928699999871 9.831 87.86882510000042 9.363)
Error minima by case: (0.0792 3 9.0719 2 2.6743 1 18.7935 2 1.3037 1 0.2495 3 16.3163 2 0.1906 2 3.1726 8 10.9894 2 2.0 1 15.0443 3 1.1845 1 1.8888 9 18.3126 3 0.4356 9 0.1187 1 6.7025 1 4.1916 2 21.6309 3 0.13 1 14.7964 3 6.2154 2 0.0239 2 6.098 2)
Average genome size in population (length): 70.477
Average program size in population (points): 71.477
Average percent parens in population: 0.014
Minimum age in population: 254.9701118026024
Maximum age in population: 259.8970209213753
Average age in population: 257.7343320111296
Median age in population: 257.742813206399
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.311
Error (vector) diversity:			 0.312
Behavioral diversity:				 0.312
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 191668390
--- Timings ---
Current time: 1529615774219 milliseconds
Total Time:         599.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.3 seconds, 42.4%
Fitness Testing:    276.6 seconds, 46.1%
Report:              68.7 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction -35} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min -35 float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_max integer_add float_dec integer_sub float_mod integer_yank float_mod float_yankdup integer_rot integer_sub integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_swap float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2512.1363723000036
Median total errors in population: 887.2528000000001
Error averages by case: (112.92738840000035 10.338 125.79206550000019 9.979 96.90095239999985 10.244 132.2825843000014 10.332 69.45620480000125 9.689 86.37449819999945 10.146 79.57559409999998 7.836 75.28087899999996 10.405 67.55506770000088 10.356 88.24370269999902 9.545 74.77223160000163 9.97 99.14235490000095 10.386 78.64295139999925 9.117 89.25921119999961 11.089 101.39405109999961 9.604 72.85593030000037 9.603 70.88936179999916 11.468 140.87007709999907 8.912 89.3003449999996 11.184 96.01633749999912 10.969 60.41024470000078 10.186 89.05129340000074 9.471 88.51340209999921 10.964 88.82613309999863 9.94 86.66151000000045 9.409)
Error minima by case: (0.0792 3 24.2883 2 1.4576 1 21.8427 2 0.3037 1 0.0807 1 17.6466 2 0.0432 2 4.7507 8 4.439 2 1.0 1 5.5621 3 1.0701 1 21.3236 8 18.1235 2 0.4356 7 0.1187 1 21.1015 1 1.3012 2 23.3617 2 0.0573 1 14.7964 3 6.6074 2 0.0163 2 7.098 2)
Average genome size in population (length): 70.473
Average program size in population (points): 71.473
Average percent parens in population: 0.014
Minimum age in population: 256.4628780782239
Maximum age in population: 261.0502661640999
Average age in population: 259.0906121886557
Median age in population: 259.1372488562874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.316
Error (vector) diversity:			 0.317
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 193430215
--- Timings ---
Current time: 1529615778125 milliseconds
Total Time:         603.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.7 seconds, 42.4%
Fitness Testing:    278.6 seconds, 46.1%
Report:              69.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec integer_add float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2565.2162987000033
Median total errors in population: 887.74785
Error averages by case: (116.66526010000061 10.35 129.55267720000012 9.937 98.32387209999996 10.207 137.07010740000146 10.345 71.6758696000011 9.681 86.29633499999942 10.091 81.46436740000027 7.875 74.05088980000002 10.315 68.7747420000007 10.324 86.78876569999902 9.508 78.8877641000016 9.993 103.20613750000092 10.381 80.50959399999931 9.1 88.26525199999952 11.076 101.5486013999995 9.57 72.68136520000033 9.583 73.90454439999951 11.456 143.43208399999924 8.886 93.59514209999995 11.192 100.73770119999871 10.982 61.07635220000089 10.163 93.50760040000111 9.496 92.94590719999886 11.004 88.81266359999867 9.849 90.66870310000044 9.41)
Error minima by case: (0.0792 3 17.8678 4 1.8607 1 27.0 2 1.6301 1 0.0753 1 16.3163 2 0.0235 2 2.5309 8 2.1958 2 1.4277 1 17.7099 3 1.4289 7 3.8904 8 14.2794 2 1.7402 7 0.1187 6 5.2925 7 4.3465 2 11.8637 3 0.0774 1 7.5031 3 6.6074 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.117
Average program size in population (points): 71.117
Average percent parens in population: 0.014
Minimum age in population: 257.5155013288561
Maximum age in population: 262.6156919849976
Average age in population: 260.49110133522
Median age in population: 260.5612531333022
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.812
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.812
Total error diversity:				 0.328
Error (vector) diversity:			 0.329
Behavioral diversity:				 0.33
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 195183265
--- Timings ---
Current time: 1529615782320 milliseconds
Total Time:         607.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       257.3 seconds, 42.3%
Fitness Testing:    280.6 seconds, 46.2%
Report:              69.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mod float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2415.281605100004
Median total errors in population: 883.2562500000001
Error averages by case: (108.44968570000012 10.288 122.87203430000021 9.874 91.79729479999993 10.203 129.26399820000094 10.295 64.62619070000095 9.657 82.3981796999996 10.042 78.22318019999997 7.84 71.43848759999997 10.374 65.44597510000064 10.358 84.4933108999991 9.422 70.83939640000122 9.943 93.8886864000009 10.342 73.29016039999938 9.002 85.98995679999959 11.115 98.98592849999983 9.486 69.8113334000003 9.574 65.78372139999932 11.505 138.08917109999905 8.757 84.24121189999954 11.139 91.98984839999939 10.946 57.92242230000075 10.166 84.8418699000005 9.418 83.69552969999951 10.972 84.68896149999892 9.843 82.29706980000037 9.357)
Error minima by case: (0.0792 3 22.4602 1 0.3576 1 26.0 2 1.9037 1 0.0782 3 14.3163 2 0.0235 2 5.1025 8 7.418 2 1.0 1 3.2862 2 0.569 1 7.756 8 17.7978 3 5.5123 8 0.1187 1 9.6328 1 3.0664 2 17.527 2 0.6341 1 8.0519 2 7.6074 2 0.0239 2 3.098 1)
Average genome size in population (length): 70.707
Average program size in population (points): 71.707
Average percent parens in population: 0.014
Minimum age in population: 259.5408878083473
Maximum age in population: 263.7339222520393
Average age in population: 261.8276906637032
Median age in population: 261.8577799858646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.305
Error (vector) diversity:			 0.305
Behavioral diversity:				 0.306
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 196951015
--- Timings ---
Current time: 1529615786259 milliseconds
Total Time:         611.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.7 seconds, 42.3%
Fitness Testing:    282.6 seconds, 46.2%
Report:              70.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_dup_times float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2378.3998004000036
Median total errors in population: 884.3757
Error averages by case: (110.78966310000061 10.293 123.29129370000014 9.916 94.56735159999994 10.213 129.70769320000116 10.314 65.90022430000101 9.702 76.2601695999995 10.049 73.07597209999986 7.837 65.14458860000003 10.293 61.36371330000075 10.295 78.52999599999912 9.403 72.60012920000139 10.012 95.25927600000091 10.356 76.4980489999993 9.024 80.10354879999957 11.073 93.54246649999959 9.495 64.11716600000038 9.536 66.48486909999934 11.463 138.5494679999992 8.849 85.23168120000014 11.206 92.9503942999987 10.995 52.10673280000082 10.134 85.85169180000108 9.447 84.56531899999896 10.984 77.58404289999892 9.838 84.2213003000004 9.376)
Error minima by case: (0.0792 3 8.839 8 0.3576 1 27.0 2 1.9499 1 0.3376 3 16.3163 2 0.012 2 2.5309 2 0.5482 2 2.0 1 19.7099 3 0.5711 1 2.3901 2 2.6467 3 0.5644 2 0.1187 1 5.2925 6 6.5733 3 5.8591 3 0.2878 1 13.4513 2 6.5685 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.553
Average program size in population (points): 71.553
Average percent parens in population: 0.014
Minimum age in population: 260.7117541721871
Maximum age in population: 265.1782552815705
Average age in population: 263.1626720671395
Median age in population: 263.194192129376
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.821
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.821
Total error diversity:				 0.318
Error (vector) diversity:			 0.319
Behavioral diversity:				 0.319
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 198714890
--- Timings ---
Current time: 1529615790368 milliseconds
Total Time:         616.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       260.3 seconds, 42.2%
Fitness Testing:    284.6 seconds, 46.2%
Report:              71.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_add} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add integer_add integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_yank float_mod float_add integer_add integer_max float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2324.671899700005
Median total errors in population: 885.7328
Error averages by case: (107.3733503000003 10.247 120.14179020000009 9.963 90.34487509999995 10.194 131.29580040000124 10.305 61.921858600000924 9.698 75.32823029999943 10.093 67.90127129999938 7.85 63.53049860000001 10.379 54.92698900000044 10.273 76.41838449999905 9.464 70.40106560000142 9.947 95.65107000000093 10.338 71.93444779999928 9.065 77.2745421999996 11.089 91.08418239999979 9.527 60.552061100000344 9.533 62.64743159999928 11.458 135.46866479999892 8.856 86.26427939999952 11.122 93.56637449999916 10.959 48.03420460000038 10.147 86.31971230000057 9.448 85.96001669999943 10.996 78.01693739999878 9.825 82.18886100000034 9.349)
Error minima by case: (0.9208 3 25.0745 8 2.0 1 27.0 2 1.0667 1 0.0782 3 16.9769 2 0.0235 2 0.5684 8 11.9894 2 1.4277 1 16.7099 3 1.4289 1 6.8888 9 22.1226 3 1.8691 8 0.0 0 29.8361 7 3.5733 2 23.3617 3 0.6341 1 14.7964 3 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 70.475
Average program size in population (points): 71.475
Average percent parens in population: 0.014
Minimum age in population: 262.1461646840692
Maximum age in population: 266.964963752887
Average age in population: 264.5229471648264
Median age in population: 264.5586622933392
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.316
Error (vector) diversity:			 0.318
Behavioral diversity:				 0.318
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 200476815
--- Timings ---
Current time: 1529615794401 milliseconds
Total Time:         620.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.8 seconds, 42.2%
Fitness Testing:    286.6 seconds, 46.2%
Report:              71.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_dup_times float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2517.553580600003
Median total errors in population: 888.9390000000001
Error averages by case: (113.9240404000004 10.33 127.27569400000012 9.974 95.62834849999987 10.22 133.86541290000116 10.34 69.96457050000102 9.765 85.00037759999947 10.18 79.74984610000021 7.891 73.76778150000004 10.413 66.95460510000078 10.389 86.73422339999908 9.581 75.70247320000142 10.005 100.8404913000009 10.388 77.31513419999943 9.17 87.96046569999963 11.119 100.62983179999983 9.626 71.5561252000004 9.605 71.8074688999994 11.456 141.50873719999922 8.969 91.13462029999985 11.19 97.86154169999926 10.971 59.73896020000099 10.188 90.83001630000088 9.479 90.47668259999904 11.001 87.59170499999884 9.958 88.10642700000038 9.42)
Error minima by case: (0.0792 3 17.5398 2 0.3576 1 26.9612 2 1.5978 2 0.2495 1 16.3163 2 0.0235 2 3.4664 8 5.9735 2 1.4277 1 18.7099 3 0.501 1 2.0764 8 22.1226 2 1.4356 7 0.0246 2 5.3672 1 5.3722 2 23.3617 3 0.6341 1 14.7964 3 4.3705 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.166
Average program size in population (points): 71.166
Average percent parens in population: 0.014
Minimum age in population: 263.6914708398553
Maximum age in population: 267.9973144585209
Average age in population: 265.910182196055
Median age in population: 265.9570540369291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.825
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.825
Total error diversity:				 0.331
Error (vector) diversity:			 0.331
Behavioral diversity:				 0.331
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 202231090
--- Timings ---
Current time: 1529615798306 milliseconds
Total Time:         624.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       263.3 seconds, 42.2%
Fitness Testing:    288.6 seconds, 46.3%
Report:              72.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_dec integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2004.4821771000022
Median total errors in population: 886.8431
Error averages by case: (92.04801489999994 10.205 105.84698150000018 9.891 74.79375459999989 10.163 116.52017130000095 10.2 48.32222320000074 9.64 63.34296369999949 10.018 60.73303489999927 7.768 52.68044200000002 10.323 47.756415100000396 10.286 66.90434169999915 9.431 54.785027100001244 9.88 80.02127900000092 10.259 56.10237159999952 9.026 69.70534459999965 11.055 80.34108090000001 9.481 52.89269850000034 9.523 50.35964189999945 11.401 120.90443579999878 8.858 70.52927119999892 11.079 78.04091029999995 10.876 40.32531290000019 10.099 70.7520862999998 9.357 70.32124710000025 10.881 65.30869709999898 9.787 66.37742990000027 9.28)
Error minima by case: (0.0792 3 19.5398 2 0.6456 1 27.0 2 0.4428 1 0.2495 3 10.8982 2 0.0235 2 0.6097 8 2.1958 2 1.4277 1 12.7099 3 0.569 1 30.1112 3 17.3126 3 0.4356 7 0.1187 1 7.3672 2 0.4267 2 23.3617 3 0.6341 1 14.7964 3 6.6074 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.396
Average program size in population (points): 71.396
Average percent parens in population: 0.014
Minimum age in population: 264.7334778035375
Maximum age in population: 269.3369690065798
Average age in population: 267.2933675583999
Median age in population: 267.3276088123873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.822
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.822
Total error diversity:				 0.327
Error (vector) diversity:			 0.327
Behavioral diversity:				 0.327
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 203991140
--- Timings ---
Current time: 1529615802457 milliseconds
Total Time:         628.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       264.8 seconds, 42.2%
Fitness Testing:    290.8 seconds, 46.3%
Report:              72.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.905670556096574} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_flush integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_add float_frominteger float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.905670556096574 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2306.778145200005
Median total errors in population: 886.7915999999999
Error averages by case: (108.0370602000004 10.295 121.86269590000023 9.935 90.6821308999999 10.278 129.4933025000011 10.313 64.08670740000096 9.661 72.27724749999958 10.071 69.02025499999945 7.81 60.150685000000024 10.301 54.6771121000005 10.324 72.68125229999923 9.474 69.90318010000134 9.979 94.95840020000094 10.333 72.35566859999938 9.085 75.37369719999954 11.125 87.51855439999999 9.504 58.90865970000041 9.554 65.61483279999929 11.464 136.719153399999 8.891 85.2906584999998 11.153 92.3685894999992 10.973 47.5435328000004 10.156 85.24302830000069 9.45 84.7354743999993 10.991 74.81555129999893 9.82 82.13071520000041 9.39)
Error minima by case: (0.9208 3 22.5398 2 0.3576 1 27.0 2 2.1778 1 0.2495 1 16.3163 2 0.0235 2 0.6166 8 13.9312 2 1.4277 1 16.7099 3 0.5711 1 5.5747 8 23.0873 2 1.8691 7 0.1187 1 6.1015 1 3.5733 2 21.4378 3 0.6341 1 14.7964 2 0.9461 2 0.0239 2 5.098 2)
Average genome size in population (length): 70.149
Average program size in population (points): 71.149
Average percent parens in population: 0.014
Minimum age in population: 265.7334778035375
Maximum age in population: 270.8449642632635
Average age in population: 268.6497746822178
Median age in population: 268.6753760244747
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.336
Error (vector) diversity:			 0.338
Behavioral diversity:				 0.339
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 205744930
--- Timings ---
Current time: 1529615806200 milliseconds
Total Time:         631.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       266.1 seconds, 42.1%
Fitness Testing:    292.8 seconds, 46.3%
Report:              72.9 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction float_min} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 float_mult integer_stackdepth float_dec float_yankdup float_add in2 float_min float_min float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2313.067213400003
Median total errors in population: 884.2528000000001
Error averages by case: (109.72991370000062 10.312 123.19660040000012 9.914 92.53523430000001 10.253 130.39975520000155 10.316 65.04683060000121 9.7 70.49788069999947 10.067 67.36405809999934 7.857 59.44217240000004 10.322 53.87482510000068 10.286 73.09593309999902 9.448 71.90226440000174 10.027 94.9302505000011 10.35 74.3212627999991 9.085 75.26780539999956 11.083 86.82050159999993 9.5 58.694227100000354 9.516 66.6763219999991 11.46 138.16602279999887 8.84 85.0181105999996 11.186 92.96542249999875 10.989 46.62853910000068 10.182 85.74441070000104 9.426 84.51619439999891 10.996 72.57583549999882 9.811 83.3548404000005 9.376)
Error minima by case: (0.0792 3 10.5658 4 2.2696 1 26.9612 2 2.3037 7 0.2495 3 16.6098 2 0.0235 2 5.1025 8 2.1958 2 1.4277 2 18.7099 3 0.488 1 21.9517 8 18.561 3 5.5123 7 0.1187 1 7.1015 4 5.5733 3 23.3617 3 0.0774 1 14.7964 3 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 70.106
Average program size in population (points): 71.106
Average percent parens in population: 0.014
Minimum age in population: 267.7818589415026
Maximum age in population: 272.1671235463592
Average age in population: 270.0263754068768
Median age in population: 270.0219590223684
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.799
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.799
Total error diversity:				 0.317
Error (vector) diversity:			 0.319
Behavioral diversity:				 0.32
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 207497580
--- Timings ---
Current time: 1529615810624 milliseconds
Total Time:         636.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.6 seconds, 42.1%
Fitness Testing:    295.1 seconds, 46.4%
Report:              73.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_pop} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_mult integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_max float_dup_times integer_pop integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup float_dup_times float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_dup_times integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2360.2919690000035
Median total errors in population: 883.8236
Error averages by case: (111.75697270000013 10.264 123.38105750000013 9.891 92.60145409999991 10.258 130.31230760000102 10.294 65.47733900000098 9.677 74.84885549999954 10.054 70.31728449999943 7.778 63.85176110000002 10.357 57.3318080000006 10.324 77.13585129999915 9.418 73.52265140000137 9.998 95.59631810000096 10.298 74.22156079999924 9.013 79.04367689999953 11.11 90.63865329999996 9.48 62.40016120000034 9.522 67.08787599999926 11.482 138.33535879999894 8.809 85.47882679999955 11.128 93.53505519999945 10.933 50.02062470000056 10.141 86.43882920000065 9.4 84.8002271999994 10.977 77.22936749999887 9.837 85.15309060000038 9.332)
Error minima by case: (1.0792 3 19.5398 2 0.3576 1 27.5817 2 0.4092 7 0.1331 3 12.6789 2 0.0235 2 5.1025 8 5.5291 2 3.0 1 7.597 3 0.5711 1 2.4868 8 17.3126 3 0.4356 7 0.0 0 7.3672 1 5.3722 2 23.3617 3 0.0907 1 14.7964 3 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 70.242
Average program size in population (points): 71.242
Average percent parens in population: 0.014
Minimum age in population: 268.7838495161397
Maximum age in population: 273.3812799070552
Average age in population: 271.4285275932934
Median age in population: 271.4632818783518
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.321
Error (vector) diversity:			 0.321
Behavioral diversity:				 0.322
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 209253705
--- Timings ---
Current time: 1529615814491 milliseconds
Total Time:         640.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       268.9 seconds, 42.0%
Fitness Testing:    297.1 seconds, 46.4%
Report:              74.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_add float_frominteger float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add in2 float_yankdup integer_add -47.18843063222216 integer_fromfloat integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2533.4173870000022
Median total errors in population: 887.4993000000001
Error averages by case: (114.80602170000074 10.376 130.7190113000002 9.973 99.17304539999985 10.326 137.35948390000155 10.43 72.78318080000119 9.713 82.65593029999951 10.191 80.0739456000005 7.953 71.80727460000006 10.406 66.36664480000063 10.394 84.30527099999917 9.556 77.97087150000169 10.107 100.62628180000092 10.46 80.87793529999908 9.133 86.47809389999956 11.167 98.7913164999996 9.639 70.27359980000031 9.6 74.05160039999984 11.482 145.11032529999957 8.952 91.07393699999999 11.28 99.63245099999867 11.091 58.90582290000105 10.262 92.22671120000123 9.515 90.8808196999988 11.11 84.82679429999881 9.919 89.13101700000037 9.475)
Error minima by case: (0.0792 3 13.8785 2 0.3576 7 27.0 2 0.3824 1 0.0377 1 12.1239 2 0.0235 2 5.1025 8 1.1958 2 2.0 1 13.178 3 0.5711 7 1.8888 8 17.4704 2 10.7975 7 0.1187 6 4.2942 1 3.586 2 23.3617 3 0.0573 1 14.7964 3 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 69.667
Average program size in population (points): 70.667
Average percent parens in population: 0.014
Minimum age in population: 270.5727644678091
Maximum age in population: 275.3812799070552
Average age in population: 272.8316316260648
Median age in population: 272.8747469243436
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.332
Error (vector) diversity:			 0.334
Behavioral diversity:				 0.335
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 210995405
--- Timings ---
Current time: 1529615818416 milliseconds
Total Time:         644.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.3 seconds, 42.0%
Fitness Testing:    299.2 seconds, 46.4%
Report:              74.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_max} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add float_yankdup in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_max integer_add float_dec integer_sub float_mod integer_yank float_mod float_yankdup float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_mult float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2168.114787100002
Median total errors in population: 883.9379500000001
Error averages by case: (99.48523510000005 10.247 113.62539480000018 9.87 83.12892789999991 10.251 119.25254750000099 10.261 54.32138160000076 9.663 72.03781939999963 10.08 67.41856479999952 7.79 61.524761600000055 10.293 54.95811160000068 10.298 75.70695029999926 9.434 60.82354790000125 9.975 84.00846380000092 10.302 64.73046789999943 9.047 76.92777329999952 11.139 87.8697920999999 9.492 60.237045800000374 9.534 55.237848799999426 11.473 129.15110149999862 8.787 73.93438699999935 11.142 81.88828199999975 10.954 47.69168290000057 10.165 74.73878710000025 9.384 73.47716139999986 10.963 73.494507999999 9.797 72.76524300000044 9.338)
Error minima by case: (0.0792 2 21.5398 2 0.3576 8 25.0 2 1.5589 1 0.0407 1 16.3163 2 0.0235 2 5.3834 1 2.1196 2 0.0 0 17.7099 2 0.5711 7 6.1118 2 17.3126 2 1.6552 1 0.2431 7 9.3672 1 1.4196 2 20.6339 3 0.6341 1 7.1879 3 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 69.469
Average program size in population (points): 70.469
Average percent parens in population: 0.014
Minimum age in population: 271.5727644678091
Maximum age in population: 276.1720281560892
Average age in population: 274.1907239771475
Median age in population: 274.2166885049309
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.329
Error (vector) diversity:			 0.329
Behavioral diversity:				 0.329
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 212732155
--- Timings ---
Current time: 1529615822388 milliseconds
Total Time:         648.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       271.8 seconds, 41.9%
Fitness Testing:    301.1 seconds, 46.5%
Report:              75.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction float_yankdup} {:instruction -47.25226763347382} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add float_yankdup -47.25226763347382 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2368.9881472000034
Median total errors in population: 887.5226
Error averages by case: (108.95464170000034 10.313 121.36541620000011 9.916 91.27803499999987 10.215 128.80337190000108 10.325 64.22364330000096 9.686 78.04528139999954 10.121 74.0770313999999 7.852 67.1079125 10.36 61.62742000000069 10.312 80.58050509999907 9.5 70.79241110000143 9.997 94.38346610000096 10.36 72.82633439999934 9.037 82.1308993999996 11.107 93.7825386999998 9.554 65.90952070000034 9.596 65.69536319999929 11.461 136.4161868999991 8.869 84.40172419999945 11.158 91.76797689999941 10.978 53.67510890000071 10.175 84.69444170000061 9.456 83.67910519999958 10.986 79.67389169999882 9.881 82.4949196000004 9.386)
Error minima by case: (0.0792 3 14.9928 2 0.3576 1 26.0 2 1.5093 1 0.0407 1 16.3163 2 0.0235 2 5.1025 8 7.4021 2 1.0 1 8.4135 3 0.569 1 0.8888 8 17.3126 2 5.2349 8 0.1187 1 10.3672 1 1.5501 2 23.3617 2 0.6341 1 14.7964 2 6.6074 2 0.0239 2 6.098 2)
Average genome size in population (length): 69.529
Average program size in population (points): 70.529
Average percent parens in population: 0.014
Minimum age in population: 272.882674041662
Maximum age in population: 277.7070128807469
Average age in population: 275.5109667555415
Median age in population: 275.5570137039065
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.822
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.822
Total error diversity:				 0.324
Error (vector) diversity:			 0.327
Behavioral diversity:				 0.327
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 214470455
--- Timings ---
Current time: 1529615826252 milliseconds
Total Time:         652.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.3 seconds, 41.9%
Fitness Testing:    303.1 seconds, 46.5%
Report:              75.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction -35} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_sub} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min -35 float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_sub float_dup_times integer_yank integer_add float_dup_times integer_add integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_yank float_mod float_add integer_add integer_max float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2470.6655488000047
Median total errors in population: 886.4734000000002
Error averages by case: (111.91979550000055 10.296 125.2294526000001 9.924 95.11489939999989 10.256 134.30527340000123 10.297 67.91626650000106 9.689 82.30743049999955 10.087 80.68662700000051 7.795 70.13299540000001 10.337 66.44116280000063 10.32 82.62848619999912 9.473 74.90132960000157 9.976 98.10039540000086 10.335 76.86534349999924 9.091 84.78729609999947 11.096 97.44117699999948 9.523 68.75088320000032 9.539 69.2450067999996 11.448 140.0622575999992 8.891 88.48206339999999 11.154 96.76647989999884 10.972 59.427172600001064 10.133 89.45218170000105 9.442 88.28877459999907 10.942 84.8340015999987 9.865 86.3177965000004 9.38)
Error minima by case: (0.0792 3 1.2623 2 0.3576 2 18.6965 2 0.3037 7 0.0782 1 14.1489 2 0.0235 2 5.1025 8 2.2536 2 3.0 1 18.7099 3 0.5711 2 3.6392 8 18.1235 2 0.4356 7 0.1187 6 9.3672 1 5.5733 2 6.2974 3 0.0769 1 14.7964 3 2.386 2 0.0239 2 5.098 2)
Average genome size in population (length): 69.706
Average program size in population (points): 70.706
Average percent parens in population: 0.014
Minimum age in population: 273.882674041662
Maximum age in population: 279.2531062189991
Average age in population: 276.8788135979966
Median age in population: 276.9048389790649
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.32
Error (vector) diversity:			 0.322
Behavioral diversity:				 0.323
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 216213155
--- Timings ---
Current time: 1529615830218 milliseconds
Total Time:         655.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       274.6 seconds, 41.9%
Fitness Testing:    305.2 seconds, 46.5%
Report:              75.9 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_dec} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_div} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yankdup integer_add float_dup_times integer_yank integer_dec float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_add integer_sub float_mod float_mod integer_max float_yankdup integer_add float_dup_times float_frominteger float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec integer_add float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_div float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2388.181763200004
Median total errors in population: 886.6325
Error averages by case: (108.68480560000013 10.321 122.55876190000016 9.959 91.67516569999985 10.285 130.73012010000105 10.344 65.06277480000098 9.709 78.13478519999964 10.109 75.48908899999984 7.907 67.2592393 10.376 62.2836541000006 10.372 80.20825029999912 9.504 71.07085750000131 10.007 95.64497970000093 10.403 73.4923971999993 9.11 81.53001949999957 11.115 94.48152499999972 9.524 65.46438310000039 9.621 66.69195999999931 11.478 137.2324454999991 8.918 86.23973339999954 11.199 93.33279339999955 11.004 54.77025800000057 10.191 86.33888960000033 9.476 85.47353239999983 11.038 80.14360749999891 9.833 82.95673540000041 9.428)
Error minima by case: (0.0792 3 17.8678 2 0.3576 4 24.0125 2 1.0501 1 0.0505 1 18.3163 2 0.1906 2 2.5309 9 13.9312 2 1.4277 1 8.7182 3 0.2888 7 3.8904 9 17.3126 2 14.063 7 0.107 6 5.2925 1 4.5733 2 23.3617 3 0.6341 1 14.7964 3 6.6074 2 0.0239 2 5.098 2)
Average genome size in population (length): 69.657
Average program size in population (points): 70.657
Average percent parens in population: 0.014
Minimum age in population: 275.9254076566212
Maximum age in population: 280.3168982163967
Average age in population: 278.2818506642215
Median age in population: 278.3067464439359
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.82
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.82
Total error diversity:				 0.326
Error (vector) diversity:			 0.327
Behavioral diversity:				 0.328
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 217954655
--- Timings ---
Current time: 1529615834479 milliseconds
Total Time:         660.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.2 seconds, 41.8%
Fitness Testing:    307.4 seconds, 46.6%
Report:              76.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_add} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_add} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_flush integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_add float_frominteger float_dec integer_add integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add integer_div float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_dec integer_yank float_mod float_add integer_add integer_max float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2911.969008400003
Median total errors in population: 889.4993999999999
Error averages by case: (131.3834180000005 10.471 144.57848359999946 10.067 114.28199139999988 10.317 151.24130160000132 10.48 88.86455780000105 9.776 97.09095549999947 10.168 94.06009360000083 8.04 86.30025629999999 10.447 80.8865592999997 10.421 98.8681013999991 9.543 93.83135970000136 10.135 117.78337390000087 10.522 96.3800012999993 9.185 99.47968419999953 11.176 112.22147089999959 9.667 83.74533910000028 9.689 90.25356490000024 11.483 158.94641460000025 9.048 108.24226780000025 11.274 115.41767179999867 11.078 73.26293200000028 10.3 108.4776008000013 9.584 107.62548189999872 11.119 99.21711129999883 9.955 106.01701570000037 9.567)
Error minima by case: (0.9208 3 11.8783 2 0.3576 1 27.0 2 0.5572 1 0.0377 1 16.6466 2 0.0235 2 3.4726 8 11.9841 2 1.4277 1 0.4686 3 0.569 1 6.1436 8 23.0873 2 1.8691 7 0.1187 1 6.1015 1 5.5733 2 23.3617 3 0.6341 1 14.7964 2 6.6074 2 0.0239 2 5.2062 2)
Average genome size in population (length): 69.454
Average program size in population (points): 70.454
Average percent parens in population: 0.014
Minimum age in population: 276.9806653644116
Maximum age in population: 281.6490420986545
Average age in population: 279.6723764721009
Median age in population: 279.7053764405792
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.842
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.343
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 219691070
--- Timings ---
Current time: 1529615838244 milliseconds
Total Time:         663.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       277.4 seconds, 41.8%
Fitness Testing:    309.4 seconds, 46.6%
Report:              77.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_div} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_mult} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add integer_div integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_mult float_mod float_add integer_add integer_max float_yankdup float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2330.3954217000037
Median total errors in population: 882.5226500000001
Error averages by case: (107.95931620000042 10.318 123.13971100000009 9.899 91.19615379999983 10.236 127.89213080000124 10.339 65.05761940000116 9.704 73.61595079999948 10.108 71.8148132999996 7.82 63.257176100000024 10.392 58.2932901000007 10.364 77.31773739999912 9.42 69.57808260000162 10.032 92.66085690000097 10.347 72.65017689999918 8.998 79.73135819999955 11.158 90.05984489999975 9.5 63.23585880000039 9.537 67.6287715999993 11.494 137.3907599999989 8.832 82.57606919999968 11.176 90.76601499999902 11.02 50.915332200000734 10.173 83.42491390000086 9.429 82.00350669999924 11.011 76.1085076999988 9.88 81.52246820000047 9.412)
Error minima by case: (0.0792 3 19.4142 3 0.3576 1 27.5817 2 1.3575 7 0.0782 3 15.3073 2 0.0235 2 2.1826 8 6.5291 2 1.4277 1 18.7099 3 0.5711 1 7.6653 8 21.0765 3 12.9098 7 0.2431 1 7.356 7 3.7454 2 24.3617 3 0.6341 1 15.7964 3 7.6074 2 0.0239 2 7.098 2)
Average genome size in population (length): 69.724
Average program size in population (points): 70.724
Average percent parens in population: 0.014
Minimum age in population: 278.9323317365742
Maximum age in population: 282.9548844146499
Average age in population: 281.0030170195547
Median age in population: 281.041019575844
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.787
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.787
Total error diversity:				 0.316
Error (vector) diversity:			 0.316
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 221434220
--- Timings ---
Current time: 1529615842567 milliseconds
Total Time:         668.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       278.9 seconds, 41.7%
Fitness Testing:    311.6 seconds, 46.6%
Report:              77.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction integer_min} {:instruction integer_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_mult} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec integer_min integer_add float_dec integer_dup_times integer_sub float_mod integer_yank float_mod integer_max float_yankdup integer_add float_dup_times integer_mult in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2576.159364400004
Median total errors in population: 886.30685
Error averages by case: (117.2992228000005 10.373 132.4868681000002 9.962 101.71916529999982 10.337 138.6014049000013 10.385 74.35840110000119 9.737 83.16853219999943 10.12 81.62767040000014 7.898 73.25664750000006 10.385 68.70380560000073 10.402 86.58032049999902 9.541 80.61395790000164 10.088 101.96371290000096 10.424 83.48178849999911 9.117 88.7400759999996 11.142 100.23480569999965 9.575 72.71888220000034 9.631 75.80669199999934 11.522 146.2319799999991 8.912 92.16528840000015 11.183 101.07305029999885 11.023 61.04477530000086 10.205 93.69153500000121 9.475 91.97753459999876 11.063 85.22124699999885 9.918 91.5160002000004 9.458)
Error minima by case: (0.0792 3 21.5398 2 0.3576 4 25.2218 2 1.3037 1 0.0505 1 8.5893 2 0.0235 2 5.1025 8 3.4703 2 2.0 1 16.2357 3 0.493 4 0.8888 7 17.3126 2 0.7176 7 0.1187 5 9.3672 1 3.5733 2 3.8323 3 0.3893 1 4.733 2 6.6074 2 0.0239 2 2.7782 2)
Average genome size in population (length): 69.525
Average program size in population (points): 70.525
Average percent parens in population: 0.014
Minimum age in population: 280.1158001735365
Maximum age in population: 284.2541776632674
Average age in population: 282.4473817867378
Median age in population: 282.4772342347137
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.328
Error (vector) diversity:			 0.331
Behavioral diversity:				 0.331
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 223172395
--- Timings ---
Current time: 1529615846458 milliseconds
Total Time:         672.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.3 seconds, 41.7%
Fitness Testing:    313.6 seconds, 46.7%
Report:              78.1 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_yank float_mod float_add integer_add integer_max float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2514.632116200003
Median total errors in population: 883.3861000000002
Error averages by case: (115.25592890000067 10.427 129.48958530000021 9.958 99.66548879999986 10.279 135.72709190000143 10.423 72.34552020000108 9.704 82.24317559999943 10.041 76.9807396 7.856 71.11789049999994 10.371 64.31180860000079 10.352 84.266724299999 9.406 77.87552200000157 10.105 100.68485010000093 10.466 81.63744069999926 9.053 85.1151864999995 11.139 98.5971652999997 9.44 68.80471550000033 9.575 73.4302228999996 11.507 143.90043369999913 8.858 90.8688566000001 11.276 98.61771569999885 11.072 56.90198120000082 10.24 91.47496580000126 9.538 90.34923419999893 11.099 84.29985169999868 9.865 89.13202060000043 9.488)
Error minima by case: (0.0792 3 21.5398 3 1.636 1 19.6965 2 1.2364 7 0.3376 1 14.3205 2 0.1532 2 5.5806 8 1.1958 2 0.6258 2 16.7913 3 0.6411 1 7.5769 8 3.1494 2 5.5123 7 0.1187 1 9.3672 3 5.5733 3 20.8267 3 0.0571 1 14.7964 3 6.6074 2 0.0239 2 5.098 2)
Average genome size in population (length): 69.83
Average program size in population (points): 70.83
Average percent parens in population: 0.014
Minimum age in population: 281.6525368905196
Maximum age in population: 285.9643217996682
Average age in population: 283.7819213240475
Median age in population: 283.7925400823154
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.301
Error (vector) diversity:			 0.304
Behavioral diversity:				 0.304
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 224918295
--- Timings ---
Current time: 1529615850672 milliseconds
Total Time:         676.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       281.6 seconds, 41.6%
Fitness Testing:    315.9 seconds, 46.7%
Report:              78.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction tagged_378} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_add} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_dup integer_dec float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup float_yankdup float_yankdup integer_add float_yankdup integer_add float_yankdup integer_add float_dec integer_rot float_mod integer_yank float_mod float_add integer_add tagged_378 float_mod float_add integer_add integer_max float_yankdup integer_add -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2404.220990900005
Median total errors in population: 887.5508
Error averages by case: (111.69350970000043 10.367 122.20662770000008 9.877 91.24546019999987 10.271 131.14334670000133 10.383 64.3549942000011 9.696 77.5404550999994 10.085 77.56161059999988 7.906 66.63995069999997 10.309 64.09567000000094 10.347 81.47931749999896 9.445 73.5091083000016 10.064 96.24902950000097 10.416 72.94594019999924 9.145 84.12335459999953 11.105 93.49794769999976 9.525 67.79151970000035 9.558 65.78639709999915 11.492 137.16816139999895 8.867 86.25328259999958 11.248 94.09681099999922 11.028 56.659896900000824 10.212 86.93462300000076 9.483 85.53310519999921 11.036 79.42961639999874 9.894 85.07925490000046 9.443)
Error minima by case: (0.0792 3 20.1345 2 0.3576 6 16.6965 2 0.4041 1 0.0054 1 11.6556 2 0.0235 2 3.1397 8 1.1958 2 1.0 1 18.7099 3 0.5711 7 0.8888 9 16.0268 2 3.5123 2 0.1187 6 9.3672 1 5.5733 2 23.3617 2 0.6341 1 14.7964 3 6.6074 2 0.0239 2 5.098 2)
Average genome size in population (length): 69.518
Average program size in population (points): 70.518
Average percent parens in population: 0.014
Minimum age in population: 282.7139209450756
Maximum age in population: 287.2867348697109
Average age in population: 285.1735280350254
Median age in population: 285.1984261352808
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.841
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.841
Total error diversity:				 0.332
Error (vector) diversity:			 0.338
Behavioral diversity:				 0.338
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 226656560
--- Timings ---
Current time: 1529615854787 milliseconds
Total Time:         680.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       283.1 seconds, 41.6%
Fitness Testing:    318.1 seconds, 46.7%
Report:              79.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 44933.10869999998
Test mean error for best: 22.46655
;;------------------------------
Outputs of best individual on training cases:
Correct output: -112.3069380196 | Program output: -54.6138760391
Correct output: -72.4601683407 | Program output: -0.3354873417 
Correct output: 40.4089903884  | Program output: -0.1872079253 
Correct output: -123.8848837001 | Program output: -189.7697674002
Correct output: -5.5572409402  | Program output: -0.2145954242 
Correct output: 132.8237835559 | Program output: 128.6247137696
Correct output: -23.655607388  | Program output: -3.3393407788 
Correct output: 85.8723285783  | Program output: 88.8291393026 
Correct output: 7.3833649895   | Program output: -2.1358298566 
Correct output: 66.4021182413  | Program output: 36.5820116146 
Correct output: -23.7801401349 | Program output: -39.5602802697
Correct output: -167.2900974766 | Program output: -144.5801949532
Correct output: 20.9384936831  | Program output: -0.0979398306 
Correct output: 37.1112256226  | Program output: -2.5002672719 
Correct output: 119.9031170612 | Program output: 149.7789576142
Correct output: 20.2024981978  | Program output: -0.6093545969 
Correct output: 1.7569467681   | Program output: -0.0127224202 
Correct output: -90.6328406884 | Program output: -0.2692894964 
Correct output: -160.4267163377 | Program output: -150.8534326754
Correct output: -111.361734735 | Program output: -136.7234694699
Correct output: -6.0571083203  | Program output: -3.422993378  
Correct output: -112.796431795 | Program output: -129.59286359 
Correct output: -148.6073793052 | Program output: -157.2147586103
Correct output: 142.6041620334 | Program output: 139.2016783706
Correct output: -89.5489990384 | Program output: -65.0979980767
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction in2} {:instruction float_min} {:instruction integer_mult} {:instruction float_dup} {:instruction in1} {:instruction float_dec} {:instruction float_sin} {:instruction tagged_198} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction integer_add} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_max} {:instruction tag_integer_262} {:instruction float_dup_times} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_yank} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_yankdup} {:instruction integer_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_mod} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_yank} {:instruction float_mod} {:instruction float_add} {:instruction integer_add} {:instruction integer_max} {:instruction float_yankdup} {:instruction -47.18843063222216} {:instruction float_frominteger} {:instruction integer_fromfloat} {:instruction print_float})
Best program: (in1 integer_yank integer_stackdepth float_dec float_yankdup float_add in2 float_min integer_mult float_dup in1 float_dec float_sin tagged_198 float_dec integer_yank integer_add float_dup_times integer_yank integer_add float_dup_times integer_yank in2 float_dec integer_yank float_yankdup in2 float_dec integer_yank float_yankdup float_dec float_yankdup integer_add float_dec integer_sub float_mod integer_yank float_mod integer_max tag_integer_262 float_dup_times integer_yank in2 float_dec integer_yank float_yankdup float_dec float_yankdup float_yankdup integer_add float_yankdup integer_add float_dec integer_yank float_mod integer_yank float_mod float_add integer_add integer_yank float_mod float_add integer_add integer_max float_yankdup -47.18843063222216 float_frominteger integer_fromfloat print_float)
Errors: [57.6931 10 72.1247 9 40.5962 10 65.8849 10 5.3426 9 4.1991 9 20.3163 7 2.9568 10 9.5192 10 29.8201 8 15.7801 10 22.7099 10 21.0364 8 39.6115 11 29.8758 8 20.8119 9 1.7697 12 90.3636 7 9.5733 11 25.3617 11 2.6341 10 16.7964 9 8.6074 11 3.4025 9 24.451 9]
Total: 878.2383000000001
Mean: 17.564766
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2475.5447527000024
Median total errors in population: 883.8236
Error averages by case: (114.13003820000033 10.302 127.12585500000019 9.926 96.25614869999988 10.271 136.09453330000107 10.329 69.64934030000107 9.633 79.02144439999957 10.079 74.95612249999994 7.813 68.9710805 10.339 62.815285500000755 10.334 83.63778119999898 9.477 76.86857360000147 10.013 100.245510700001 10.364 77.94034419999926 9.068 84.93037389999954 11.122 95.50122019999978 9.517 68.31187720000038 9.562 70.91143499999973 11.551 141.39970739999944 8.832 90.70120449999976 11.18 98.69298729999919 11.005 55.467999200000776 10.177 91.44226060000081 9.465 90.28484329999921 11.019 81.08536929999883 9.866 88.4524167000004 9.407)
Error minima by case: (0.0792 3 21.4602 2 0.3576 7 25.8272 2 0.1297 1 0.0054 1 18.3163 2 0.0235 2 5.1025 8 3.7936 2 1.4277 1 10.5866 3 0.2182 7 1.8888 8 18.1235 2 0.4356 7 0.0057 6 9.3672 1 5.5733 2 22.3617 3 0.6341 1 13.7964 3 5.6074 2 0.0239 2 4.2191 2)
Average genome size in population (length): 70.173
Average program size in population (points): 71.173
Average percent parens in population: 0.014
Minimum age in population: 284.0492523658379
Maximum age in population: 288.3160804620698
Average age in population: 286.455693659233
Median age in population: 286.4847840217612
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.317
Error (vector) diversity:			 0.318
Behavioral diversity:				 0.319
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 228411360
--- Timings ---
Current time: 1529615858820 milliseconds
Total Time:         684.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       284.3 seconds, 41.5%
Fitness Testing:    320.2 seconds, 46.8%
Report:              79.7 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
