Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-36.3143767388852 7] -29.3143767388852]
Train Case:   1 | Input/Output: [[-52.97631958770101 -50] -102.97631958770101]
Train Case:   2 | Input/Output: [[94.27333997290987 39] 133.27333997290987]
Train Case:   3 | Input/Output: [[-13.39375814891497 -97] -110.39375814891497]
Train Case:   4 | Input/Output: [[17.013965202878055 -48] -30.986034797121945]
Train Case:   5 | Input/Output: [[67.56142545379765 67] 134.56142545379765]
Train Case:   6 | Input/Output: [[-74.03480504593458 55] -19.034805045934576]
Train Case:   7 | Input/Output: [[15.304189193156262 46] 61.30418919315626]
Train Case:   8 | Input/Output: [[5.127592980296328 -67] -61.87240701970367]
Train Case:   9 | Input/Output: [[-93.52634609484183 -19] -112.52634609484183]
Train Case:  10 | Input/Output: [[54.229955955073194 -13] 41.229955955073194]
Train Case:  11 | Input/Output: [[-86.49912111748623 25] -61.499121117486226]
Train Case:  12 | Input/Output: [[-72.94265493588227 -74] -146.94265493588227]
Train Case:  13 | Input/Output: [[-34.839411799908774 -77] -111.83941179990877]
Train Case:  14 | Input/Output: [[-77.31626711051449 17] -60.31626711051449]
Train Case:  15 | Input/Output: [[-54.55782904153765 52] -2.5578290415376514]
Train Case:  16 | Input/Output: [[91.20810349463281 42] 133.2081034946328]
Train Case:  17 | Input/Output: [[18.86279409272329 -87] -68.13720590727671]
Train Case:  18 | Input/Output: [[-90.44435164346754 57] -33.44435164346754]
Train Case:  19 | Input/Output: [[-49.36075054330325 37] -12.360750543303247]
Train Case:  20 | Input/Output: [[-99.59921648896248 62] -37.59921648896248]
Train Case:  21 | Input/Output: [[52.88188145405215 83] 135.88188145405215]
Train Case:  22 | Input/Output: [[37.53730297398113 -25] 12.537302973981127]
Train Case:  23 | Input/Output: [[36.39919400271512 -10] 26.39919400271512]
Train Case:  24 | Input/Output: [[-66.94411743576683 45] -21.944117435766827]
Test Case:   0 | Input/Output: [[-36.59088177491028 -45] -81.59088177491029]
Test Case:   1 | Input/Output: [[-34.00153051459081 66] 31.99846948540919]
Test Case:   2 | Input/Output: [[64.02884483323231 -62] 2.028844833232313]
Test Case:   3 | Input/Output: [[68.63799926118298 -48] 20.637999261182983]
Test Case:   4 | Input/Output: [[-69.57053177069025 -51] -120.57053177069025]
Test Case:   5 | Input/Output: [[5.441278045835915 1] 6.441278045835915]
Test Case:   6 | Input/Output: [[-28.433311343996422 100] 71.56668865600358]
Test Case:   7 | Input/Output: [[25.50049145301125 4] 29.50049145301125]
Test Case:   8 | Input/Output: [[72.76892186283231 -21] 51.768921862832315]
Test Case:   9 | Input/Output: [[-68.9604998097537 16] -52.9604998097537]
Test Case:  10 | Input/Output: [[-34.24845087300632 83] 48.75154912699368]
Test Case:  11 | Input/Output: [[58.8291053246777 77] 135.8291053246777]
Test Case:  12 | Input/Output: [[-49.77014831243065 -53] -102.77014831243065]
Test Case:  13 | Input/Output: [[13.189403887280093 -46] -32.81059611271991]
Test Case:  14 | Input/Output: [[23.155729998351006 85] 108.155729998351]
Test Case:  15 | Input/Output: [[34.03967834220646 -16] 18.039678342206457]
Test Case:  16 | Input/Output: [[51.846718926309364 -66] -14.153281073690636]
Test Case:  17 | Input/Output: [[45.396920773105904 -86] -40.603079226894096]
Test Case:  18 | Input/Output: [[-55.41527980081655 97] 41.58472019918345]
Test Case:  19 | Input/Output: [[-3.639346960188135 57] 53.360653039811865]
Test Case:  20 | Input/Output: [[-58.24609162930319 54] -4.246091629303187]
Test Case:  21 | Input/Output: [[-9.40188396316725 28] 18.59811603683275]
Test Case:  22 | Input/Output: [[-24.385707816845766 79] 54.614292183154234]
Test Case:  23 | Input/Output: [[-3.9818358421814963 73] 69.0181641578185]
Test Case:  24 | Input/Output: [[29.308502158095052 -45] -15.691497841904948]
Test Case:  25 | Input/Output: [[-61.923670027375756 90] 28.076329972624244]
Test Case:  26 | Input/Output: [[-7.74829676451823 -13] -20.74829676451823]
Test Case:  27 | Input/Output: [[67.96226969510636 -52] 15.962269695106357]
Test Case:  28 | Input/Output: [[19.70082631111154 -78] -58.29917368888846]
Test Case:  29 | Input/Output: [[29.841977594108982 63] 92.84197759410898]
Test Case:  30 | Input/Output: [[-72.0274561218099 81] 8.972543878190095]
Test Case:  31 | Input/Output: [[13.338320657805184 -71] -57.661679342194816]
Test Case:  32 | Input/Output: [[73.25949297479673 -28] 45.25949297479673]
Test Case:  33 | Input/Output: [[-13.919753984285848 52] 38.08024601571415]
Test Case:  34 | Input/Output: [[-19.53295632899672 3] -16.53295632899672]
Test Case:  35 | Input/Output: [[31.84640005436009 13] 44.84640005436009]
Test Case:  36 | Input/Output: [[-71.87633421021312 22] -49.876334210213116]
Test Case:  37 | Input/Output: [[6.893405041872128 -93] -86.10659495812787]
Test Case:  38 | Input/Output: [[62.296428200343115 25] 87.29642820034312]
Test Case:  39 | Input/Output: [[68.36301008897019 -98] -29.636989911029815]
Test Case:  40 | Input/Output: [[-56.39818712707236 -35] -91.39818712707236]
Test Case:  41 | Input/Output: [[-33.49554562631066 35] 1.5044543736893417]
Test Case:  42 | Input/Output: [[12.563638637292314 -100] -87.43636136270769]
Test Case:  43 | Input/Output: [[38.88758932157526 -63] -24.112410678424737]
Test Case:  44 | Input/Output: [[63.334385663766824 -73] -9.665614336233176]
Test Case:  45 | Input/Output: [[-35.96371993491978 47] 11.03628006508022]
Test Case:  46 | Input/Output: [[-25.59634818258492 11] -14.596348182584919]
Test Case:  47 | Input/Output: [[-27.36558699566541 17] -10.36558699566541]
Test Case:  48 | Input/Output: [[84.94092192232924 -42] 42.94092192232924]
Test Case:  49 | Input/Output: [[-16.63167606795821 -99] -115.63167606795821]
Test Case:  50 | Input/Output: [[34.77197992323579 -11] 23.77197992323579]
Test Case:  51 | Input/Output: [[-80.27223900894688 88] 7.727760991053117]
Test Case:  52 | Input/Output: [[6.885628909371505 -79] -72.1143710906285]
Test Case:  53 | Input/Output: [[33.98737332909266 70] 103.98737332909266]
Test Case:  54 | Input/Output: [[63.731122592817 -10] 53.731122592817]
Test Case:  55 | Input/Output: [[68.28069285847883 55] 123.28069285847883]
Test Case:  56 | Input/Output: [[-19.450927578903276 83] 63.549072421096724]
Test Case:  57 | Input/Output: [[-50.77430296752161 -75] -125.7743029675216]
Test Case:  58 | Input/Output: [[-57.02842638509389 -41] -98.0284263850939]
Test Case:  59 | Input/Output: [[22.299364639621118 13] 35.29936463962112]
Test Case:  60 | Input/Output: [[1.6955072239637872 47] 48.69550722396379]
Test Case:  61 | Input/Output: [[17.006777295699678 -91] -73.99322270430032]
Test Case:  62 | Input/Output: [[49.63656422093359 8] 57.63656422093359]
Test Case:  63 | Input/Output: [[-87.66321088434015 69] -18.663210884340145]
Test Case:  64 | Input/Output: [[56.20581479671108 6] 62.20581479671108]
Test Case:  65 | Input/Output: [[-19.232998027754405 89] 69.7670019722456]
Test Case:  66 | Input/Output: [[57.03373196587458 85] 142.03373196587458]
Test Case:  67 | Input/Output: [[-60.061005328298634 -2] -62.061005328298634]
Test Case:  68 | Input/Output: [[48.409464805970885 -87] -38.590535194029115]
Test Case:  69 | Input/Output: [[-64.22567715011209 16] -48.22567715011209]
Test Case:  70 | Input/Output: [[-48.728931785481855 -2] -50.728931785481855]
Test Case:  71 | Input/Output: [[-94.39049938904513 -71] -165.39049938904515]
Test Case:  72 | Input/Output: [[-92.50244213188661 28] -64.50244213188661]
Test Case:  73 | Input/Output: [[-91.89708053473791 93] 1.1029194652620902]
Test Case:  74 | Input/Output: [[83.68405887681328 84] 167.68405887681328]
Test Case:  75 | Input/Output: [[94.93530447416057 -6] 88.93530447416057]
Test Case:  76 | Input/Output: [[-46.78883687149062 51] 4.2111631285093765]
Test Case:  77 | Input/Output: [[63.01331293043208 -36] 27.01331293043208]
Test Case:  78 | Input/Output: [[15.880557867469449 -75] -59.11944213253055]
Test Case:  79 | Input/Output: [[8.894139265694804 -14] -5.105860734305196]
Test Case:  80 | Input/Output: [[-34.357713212403354 -28] -62.357713212403354]
Test Case:  81 | Input/Output: [[86.41819908351582 53] 139.41819908351582]
Test Case:  82 | Input/Output: [[82.92165443221512 55] 137.92165443221512]
Test Case:  83 | Input/Output: [[1.5346365367352917 48] 49.53463653673529]
Test Case:  84 | Input/Output: [[-33.10109475304672 -2] -35.10109475304672]
Test Case:  85 | Input/Output: [[73.90340916875527 41] 114.90340916875527]
Test Case:  86 | Input/Output: [[3.0595107746660375 91] 94.05951077466604]
Test Case:  87 | Input/Output: [[-56.456724068969244 -40] -96.45672406896924]
Test Case:  88 | Input/Output: [[-65.98511445380275 29] -36.98511445380275]
Test Case:  89 | Input/Output: [[51.003962851408176 -34] 17.003962851408176]
Test Case:  90 | Input/Output: [[-28.089171902635513 87] 58.91082809736449]
Test Case:  91 | Input/Output: [[47.0795736509111 -67] -19.9204263490889]
Test Case:  92 | Input/Output: [[9.854033935734122 -44] -34.14596606426588]
Test Case:  93 | Input/Output: [[10.384519760605656 -19] -8.615480239394344]
Test Case:  94 | Input/Output: [[-18.59815181907834 -6] -24.59815181907834]
Test Case:  95 | Input/Output: [[13.388689009442231 -41] -27.61131099055777]
Test Case:  96 | Input/Output: [[93.46854563540322 -40] 53.46854563540322]
Test Case:  97 | Input/Output: [[-61.049775692282935 76] 14.950224307717065]
Test Case:  98 | Input/Output: [[9.466039716867542 24] 33.46603971686754]
Test Case:  99 | Input/Output: [[85.83601502049248 -2] 83.83601502049248]
Test Case: 100 | Input/Output: [[1.0363577244814763 100] 101.03635772448148]
Test Case: 101 | Input/Output: [[-60.18921439093905 -57] -117.18921439093904]
Test Case: 102 | Input/Output: [[77.69324308816334 -15] 62.69324308816334]
Test Case: 103 | Input/Output: [[-83.45339077901363 9] -74.45339077901363]
Test Case: 104 | Input/Output: [[-30.501309876116196 -90] -120.5013098761162]
Test Case: 105 | Input/Output: [[-20.49707397009996 -51] -71.49707397009996]
Test Case: 106 | Input/Output: [[1.3982889590878074 78] 79.39828895908781]
Test Case: 107 | Input/Output: [[-60.96810617877293 63] 2.0318938212270723]
Test Case: 108 | Input/Output: [[-60.718263831762506 12] -48.718263831762506]
Test Case: 109 | Input/Output: [[-48.021688773128915 71] 22.978311226871085]
Test Case: 110 | Input/Output: [[3.436656722508417 91] 94.43665672250842]
Test Case: 111 | Input/Output: [[63.80372727152968 -95] -31.19627272847032]
Test Case: 112 | Input/Output: [[61.311084998782206 3] 64.3110849987822]
Test Case: 113 | Input/Output: [[-34.91973313480305 46] 11.080266865196947]
Test Case: 114 | Input/Output: [[74.11020666244502 -28] 46.11020666244502]
Test Case: 115 | Input/Output: [[75.0346877090694 77] 152.0346877090694]
Test Case: 116 | Input/Output: [[22.523139850717115 -79] -56.476860149282885]
Test Case: 117 | Input/Output: [[-63.6427574696991 -72] -135.6427574696991]
Test Case: 118 | Input/Output: [[35.8186760695211 57] 92.8186760695211]
Test Case: 119 | Input/Output: [[97.04475319892475 -6] 91.04475319892475]
Test Case: 120 | Input/Output: [[-10.096461630929127 -19] -29.096461630929127]
Test Case: 121 | Input/Output: [[86.04508622802359 73] 159.0450862280236]
Test Case: 122 | Input/Output: [[40.166587637626776 -22] 18.166587637626776]
Test Case: 123 | Input/Output: [[79.32376137503317 -68] 11.323761375033172]
Test Case: 124 | Input/Output: [[-39.222071594604266 94] 54.777928405395734]
Test Case: 125 | Input/Output: [[58.01178866203793 -63] -4.9882113379620705]
Test Case: 126 | Input/Output: [[-27.481763813156974 16] -11.481763813156974]
Test Case: 127 | Input/Output: [[8.71536715991121 -62] -53.28463284008879]
Test Case: 128 | Input/Output: [[-28.730138622595675 -59] -87.73013862259567]
Test Case: 129 | Input/Output: [[6.753737973669743 -25] -18.246262026330257]
Test Case: 130 | Input/Output: [[-71.9093584375236 81] 9.090641562476407]
Test Case: 131 | Input/Output: [[-21.62662129766592 22] 0.37337870233407955]
Test Case: 132 | Input/Output: [[-72.13697611295578 -95] -167.13697611295578]
Test Case: 133 | Input/Output: [[91.81965138954024 0] 91.81965138954024]
Test Case: 134 | Input/Output: [[32.69702359791299 -32] 0.6970235979129882]
Test Case: 135 | Input/Output: [[-19.210133741044586 11] -8.210133741044586]
Test Case: 136 | Input/Output: [[13.532549824308475 91] 104.53254982430848]
Test Case: 137 | Input/Output: [[58.64163666547563 37] 95.64163666547563]
Test Case: 138 | Input/Output: [[-45.99749212017814 42] -3.997492120178137]
Test Case: 139 | Input/Output: [[40.40278488269939 60] 100.4027848826994]
Test Case: 140 | Input/Output: [[-18.058734434671408 75] 56.94126556532859]
Test Case: 141 | Input/Output: [[-24.01743685979092 10] -14.01743685979092]
Test Case: 142 | Input/Output: [[43.67927343728272 73] 116.67927343728272]
Test Case: 143 | Input/Output: [[-48.42308669079836 30] -18.423086690798357]
Test Case: 144 | Input/Output: [[-60.29015312377479 -78] -138.2901531237748]
Test Case: 145 | Input/Output: [[17.529129343187748 64] 81.52912934318775]
Test Case: 146 | Input/Output: [[-88.99171064284872 65] -23.991710642848716]
Test Case: 147 | Input/Output: [[-27.164245902267027 51] 23.835754097732973]
Test Case: 148 | Input/Output: [[-12.662552421279202 -80] -92.6625524212792]
Test Case: 149 | Input/Output: [[96.89588248023392 -54] 42.89588248023392]
Test Case: 150 | Input/Output: [[-3.147316328218878 -59] -62.14731632821888]
Test Case: 151 | Input/Output: [[67.33500201271892 -89] -21.664997987281083]
Test Case: 152 | Input/Output: [[-56.721163724582425 72] 15.278836275417575]
Test Case: 153 | Input/Output: [[2.9035845280025967 99] 101.9035845280026]
Test Case: 154 | Input/Output: [[33.269634284859194 30] 63.269634284859194]
Test Case: 155 | Input/Output: [[72.02026750143833 -16] 56.020267501438326]
Test Case: 156 | Input/Output: [[-11.384945281150209 -34] -45.38494528115021]
Test Case: 157 | Input/Output: [[37.80272758849949 11] 48.80272758849949]
Test Case: 158 | Input/Output: [[90.13671452072472 68] 158.13671452072472]
Test Case: 159 | Input/Output: [[10.95353986557383 78] 88.95353986557383]
Test Case: 160 | Input/Output: [[-37.98131017378565 13] -24.98131017378565]
Test Case: 161 | Input/Output: [[85.29298290194086 86] 171.29298290194086]
Test Case: 162 | Input/Output: [[26.515307472685464 4] 30.515307472685464]
Test Case: 163 | Input/Output: [[-35.77094335453528 58] 22.229056645464723]
Test Case: 164 | Input/Output: [[12.214767679572901 -18] -5.785232320427099]
Test Case: 165 | Input/Output: [[93.75898867219635 -97] -3.2410113278036476]
Test Case: 166 | Input/Output: [[97.63433521904014 96] 193.63433521904014]
Test Case: 167 | Input/Output: [[-86.15345559663243 83] -3.1534555966324262]
Test Case: 168 | Input/Output: [[-88.71095240086251 59] -29.71095240086251]
Test Case: 169 | Input/Output: [[51.63356605747916 -48] 3.6335660574791575]
Test Case: 170 | Input/Output: [[96.55791377093209 89] 185.5579137709321]
Test Case: 171 | Input/Output: [[-16.64633835380917 -70] -86.64633835380917]
Test Case: 172 | Input/Output: [[-8.975146462618383 -72] -80.97514646261838]
Test Case: 173 | Input/Output: [[-24.862924111222355 47] 22.137075888777645]
Test Case: 174 | Input/Output: [[0.7791641892276573 22] 22.779164189227657]
Test Case: 175 | Input/Output: [[27.084033976061832 14] 41.08403397606183]
Test Case: 176 | Input/Output: [[76.11419406301175 10] 86.11419406301175]
Test Case: 177 | Input/Output: [[36.92853396628237 13] 49.92853396628237]
Test Case: 178 | Input/Output: [[-89.45171674361572 90] 0.5482832563842805]
Test Case: 179 | Input/Output: [[-71.49178066294748 100] 28.508219337052523]
Test Case: 180 | Input/Output: [[71.56236991889077 -27] 44.56236991889077]
Test Case: 181 | Input/Output: [[-39.395117211172995 30] -9.395117211172995]
Test Case: 182 | Input/Output: [[-32.7800518141824 72] 39.2199481858176]
Test Case: 183 | Input/Output: [[-83.26645277161005 37] -46.26645277161005]
Test Case: 184 | Input/Output: [[-53.04101718218299 -83] -136.041017182183]
Test Case: 185 | Input/Output: [[85.2884086212226 67] 152.2884086212226]
Test Case: 186 | Input/Output: [[40.51694391017466 -48] -7.4830560898253395]
Test Case: 187 | Input/Output: [[-64.63461097613967 32] -32.63461097613967]
Test Case: 188 | Input/Output: [[-26.076320881487575 51] 24.923679118512425]
Test Case: 189 | Input/Output: [[-66.23847765104773 69] 2.761522348952269]
Test Case: 190 | Input/Output: [[19.10839366804231 -47] -27.89160633195769]
Test Case: 191 | Input/Output: [[89.24508314866421 -26] 63.24508314866421]
Test Case: 192 | Input/Output: [[-14.378277095556541 86] 71.62172290444346]
Test Case: 193 | Input/Output: [[-81.84877855472992 -8] -89.84877855472992]
Test Case: 194 | Input/Output: [[93.10863020168779 84] 177.1086302016878]
Test Case: 195 | Input/Output: [[76.92548794471378 41] 117.92548794471378]
Test Case: 196 | Input/Output: [[78.78435695692596 24] 102.78435695692596]
Test Case: 197 | Input/Output: [[5.5477393575337715 -8] -2.4522606424662285]
Test Case: 198 | Input/Output: [[23.75114410775312 12] 35.75114410775312]
Test Case: 199 | Input/Output: [[78.89607860149732 56] 134.89607860149732]
Test Case: 200 | Input/Output: [[-56.69902319742113 79] 22.300976802578873]
Test Case: 201 | Input/Output: [[3.355344946913007 -69] -65.64465505308699]
Test Case: 202 | Input/Output: [[-26.014755483687708 45] 18.985244516312292]
Test Case: 203 | Input/Output: [[-5.6640367353985255 60] 54.335963264601475]
Test Case: 204 | Input/Output: [[-13.925049497815365 -76] -89.92504949781537]
Test Case: 205 | Input/Output: [[-91.42356838843358 57] -34.42356838843358]
Test Case: 206 | Input/Output: [[86.86487289214452 -98] -11.135127107855482]
Test Case: 207 | Input/Output: [[-51.564496302214515 -32] -83.56449630221451]
Test Case: 208 | Input/Output: [[10.067838520396279 33] 43.06783852039628]
Test Case: 209 | Input/Output: [[-3.5856093504292232 75] 71.41439064957078]
Test Case: 210 | Input/Output: [[-70.16252525505888 -69] -139.16252525505888]
Test Case: 211 | Input/Output: [[89.17399142492158 -78] 11.173991424921581]
Test Case: 212 | Input/Output: [[-98.21831988455789 87] -11.218319884557886]
Test Case: 213 | Input/Output: [[0.3905818889370778 -8] -7.609418111062922]
Test Case: 214 | Input/Output: [[-42.33441180577964 13] -29.334411805779638]
Test Case: 215 | Input/Output: [[-75.20069439922203 55] -20.20069439922203]
Test Case: 216 | Input/Output: [[-3.5651945467861452 85] 81.43480545321385]
Test Case: 217 | Input/Output: [[23.116441401488757 -88] -64.88355859851124]
Test Case: 218 | Input/Output: [[-84.19891727337776 93] 8.80108272662224]
Test Case: 219 | Input/Output: [[50.36430841683418 -46] 4.364308416834177]
Test Case: 220 | Input/Output: [[14.531896928893133 1] 15.531896928893133]
Test Case: 221 | Input/Output: [[51.96284973864829 -30] 21.962849738648288]
Test Case: 222 | Input/Output: [[97.44960420120756 63] 160.44960420120756]
Test Case: 223 | Input/Output: [[-23.789247473664048 -18] -41.78924747366405]
Test Case: 224 | Input/Output: [[63.336160279784224 -38] 25.336160279784224]
Test Case: 225 | Input/Output: [[-98.95427179655123 97] -1.9542717965512253]
Test Case: 226 | Input/Output: [[43.86545555255819 -25] 18.86545555255819]
Test Case: 227 | Input/Output: [[-83.01487903422546 74] -9.014879034225459]
Test Case: 228 | Input/Output: [[90.07696143302272 24] 114.07696143302272]
Test Case: 229 | Input/Output: [[-77.55126190228256 -39] -116.55126190228256]
Test Case: 230 | Input/Output: [[-47.60692085652991 37] -10.60692085652991]
Test Case: 231 | Input/Output: [[22.259129605034246 59] 81.25912960503425]
Test Case: 232 | Input/Output: [[-22.720311964853096 56] 33.279688035146904]
Test Case: 233 | Input/Output: [[5.280364129570245 -41] -35.719635870429755]
Test Case: 234 | Input/Output: [[-91.5620268325205 -45] -136.5620268325205]
Test Case: 235 | Input/Output: [[15.972118393578398 81] 96.9721183935784]
Test Case: 236 | Input/Output: [[-17.153614533419614 62] 44.84638546658039]
Test Case: 237 | Input/Output: [[82.43611281263884 -51] 31.43611281263884]
Test Case: 238 | Input/Output: [[-26.983067170152026 -88] -114.98306717015203]
Test Case: 239 | Input/Output: [[18.064072209984687 59] 77.06407220998469]
Test Case: 240 | Input/Output: [[9.671883175622398 68] 77.6718831756224]
Test Case: 241 | Input/Output: [[-87.78979744892175 -26] -113.78979744892175]
Test Case: 242 | Input/Output: [[-64.33186264814316 58] -6.331862648143158]
Test Case: 243 | Input/Output: [[-70.71577994318937 -77] -147.71577994318937]
Test Case: 244 | Input/Output: [[-11.383067959657708 37] 25.61693204034229]
Test Case: 245 | Input/Output: [[69.75908399994177 -86] -16.240916000058235]
Test Case: 246 | Input/Output: [[-52.62569369034003 6] -46.62569369034003]
Test Case: 247 | Input/Output: [[-32.89501147506458 83] 50.10498852493542]
Test Case: 248 | Input/Output: [[-21.151068041152172 52] 30.848931958847828]
Test Case: 249 | Input/Output: [[76.21102430259128 35] 111.21102430259128]
Test Case: 250 | Input/Output: [[55.2026976099157 11] 66.2026976099157]
Test Case: 251 | Input/Output: [[-64.70486596450448 -22] -86.70486596450448]
Test Case: 252 | Input/Output: [[8.478513070216053 24] 32.47851307021605]
Test Case: 253 | Input/Output: [[9.97791802576593 -14] -4.022081974234069]
Test Case: 254 | Input/Output: [[76.68660608573418 -62] 14.686606085734184]
Test Case: 255 | Input/Output: [[-6.621491937235206 49] 42.378508062764794]
Test Case: 256 | Input/Output: [[45.60296378104516 3] 48.60296378104516]
Test Case: 257 | Input/Output: [[-62.676545050970645 83] 20.323454949029355]
Test Case: 258 | Input/Output: [[-35.25496103377648 86] 50.74503896622352]
Test Case: 259 | Input/Output: [[-93.06412362700327 -16] -109.06412362700327]
Test Case: 260 | Input/Output: [[-73.87766653259835 32] -41.877666532598354]
Test Case: 261 | Input/Output: [[-30.00490767301372 -39] -69.00490767301372]
Test Case: 262 | Input/Output: [[34.60886221950099 -83] -48.39113778049901]
Test Case: 263 | Input/Output: [[-27.22136193899773 -24] -51.22136193899773]
Test Case: 264 | Input/Output: [[11.428737230275914 -28] -16.571262769724086]
Test Case: 265 | Input/Output: [[49.601340979104094 -65] -15.398659020895906]
Test Case: 266 | Input/Output: [[-26.82911475387138 65] 38.17088524612862]
Test Case: 267 | Input/Output: [[-16.851736206124457 -23] -39.85173620612446]
Test Case: 268 | Input/Output: [[55.801516843348395 57] 112.8015168433484]
Test Case: 269 | Input/Output: [[-14.239758233516397 43] 28.760241766483603]
Test Case: 270 | Input/Output: [[42.52570062418701 97] 139.525700624187]
Test Case: 271 | Input/Output: [[-6.799086666049092 18] 11.200913333950908]
Test Case: 272 | Input/Output: [[19.60868323902865 30] 49.60868323902865]
Test Case: 273 | Input/Output: [[13.899221459514905 -73] -59.100778540485095]
Test Case: 274 | Input/Output: [[-71.98776101236743 -52] -123.98776101236743]
Test Case: 275 | Input/Output: [[22.43470054547987 -73] -50.56529945452013]
Test Case: 276 | Input/Output: [[-10.938418766141751 -99] -109.93841876614175]
Test Case: 277 | Input/Output: [[-86.8157649608004 -77] -163.81576496080038]
Test Case: 278 | Input/Output: [[61.49466236761228 -40] 21.49466236761228]
Test Case: 279 | Input/Output: [[-14.467948462367744 89] 74.53205153763226]
Test Case: 280 | Input/Output: [[-71.2233046453094 -81] -152.22330464530938]
Test Case: 281 | Input/Output: [[-48.95215778823043 59] 10.04784221176957]
Test Case: 282 | Input/Output: [[26.950699315430853 -94] -67.04930068456915]
Test Case: 283 | Input/Output: [[-12.824107311719828 77] 64.17589268828017]
Test Case: 284 | Input/Output: [[-7.5653761616272845 82] 74.43462383837272]
Test Case: 285 | Input/Output: [[-88.5776628905999 -38] -126.5776628905999]
Test Case: 286 | Input/Output: [[92.42217539767782 80] 172.42217539767782]
Test Case: 287 | Input/Output: [[-34.76424874507286 71] 36.23575125492714]
Test Case: 288 | Input/Output: [[7.178425823854013 20] 27.178425823854013]
Test Case: 289 | Input/Output: [[-83.55072103778309 -100] -183.5507210377831]
Test Case: 290 | Input/Output: [[-56.610821800907196 -77] -133.6108218009072]
Test Case: 291 | Input/Output: [[-90.83168904970857 -65] -155.8316890497086]
Test Case: 292 | Input/Output: [[48.05298074682668 -77] -28.947019253173323]
Test Case: 293 | Input/Output: [[52.830951599822754 76] 128.83095159982275]
Test Case: 294 | Input/Output: [[-98.28643628720127 -57] -155.28643628720127]
Test Case: 295 | Input/Output: [[-38.05799278625521 73] 34.94200721374479]
Test Case: 296 | Input/Output: [[-52.20014311959622 79] 26.79985688040378]
Test Case: 297 | Input/Output: [[-9.372494201611502 -15] -24.372494201611502]
Test Case: 298 | Input/Output: [[-29.959165306805872 53] 23.040834693194128]
Test Case: 299 | Input/Output: [[14.728181673025944 49] 63.728181673025944]
Test Case: 300 | Input/Output: [[-46.09573097248649 64] 17.904269027513507]
Test Case: 301 | Input/Output: [[-0.06492400626234485 -25] -25.064924006262345]
Test Case: 302 | Input/Output: [[-73.14137673552305 8] -65.14137673552305]
Test Case: 303 | Input/Output: [[66.1001973654233 81] 147.1001973654233]
Test Case: 304 | Input/Output: [[79.3363582602143 27] 106.3363582602143]
Test Case: 305 | Input/Output: [[43.914889018070255 -36] 7.914889018070255]
Test Case: 306 | Input/Output: [[10.51364034109234 62] 72.51364034109234]
Test Case: 307 | Input/Output: [[79.87311307900654 95] 174.87311307900654]
Test Case: 308 | Input/Output: [[-17.926073405741533 -70] -87.92607340574153]
Test Case: 309 | Input/Output: [[19.37784467628812 -26] -6.62215532371188]
Test Case: 310 | Input/Output: [[54.72280477924065 -65] -10.277195220759353]
Test Case: 311 | Input/Output: [[59.95277274603126 -5] 54.95277274603126]
Test Case: 312 | Input/Output: [[24.643930280471253 -63] -38.35606971952875]
Test Case: 313 | Input/Output: [[-67.59571184672055 83] 15.404288153279452]
Test Case: 314 | Input/Output: [[-76.41914694468855 43] -33.41914694468855]
Test Case: 315 | Input/Output: [[53.61955329978764 -81] -27.38044670021236]
Test Case: 316 | Input/Output: [[41.00203218281797 48] 89.00203218281797]
Test Case: 317 | Input/Output: [[85.20963734718083 67] 152.20963734718083]
Test Case: 318 | Input/Output: [[-88.18734177132094 -33] -121.18734177132094]
Test Case: 319 | Input/Output: [[-59.54460869523419 55] -4.544608695234189]
Test Case: 320 | Input/Output: [[-85.58524041397256 -84] -169.58524041397254]
Test Case: 321 | Input/Output: [[-79.0628812094954 47] -32.0628812094954]
Test Case: 322 | Input/Output: [[75.87234432064312 11] 86.87234432064312]
Test Case: 323 | Input/Output: [[-42.618165792019 -36] -78.618165792019]
Test Case: 324 | Input/Output: [[-46.494557799153014 12] -34.494557799153014]
Test Case: 325 | Input/Output: [[-96.16321310087024 -14] -110.16321310087024]
Test Case: 326 | Input/Output: [[-59.72831443660949 -22] -81.72831443660948]
Test Case: 327 | Input/Output: [[75.75832599008709 -60] 15.758325990087087]
Test Case: 328 | Input/Output: [[-77.57541874144265 64] -13.575418741442647]
Test Case: 329 | Input/Output: [[-10.664464707941448 -55] -65.66446470794145]
Test Case: 330 | Input/Output: [[-88.71385933602755 48] -40.713859336027554]
Test Case: 331 | Input/Output: [[64.38623673458943 -15] 49.38623673458943]
Test Case: 332 | Input/Output: [[-24.996189953612628 0] -24.996189953612628]
Test Case: 333 | Input/Output: [[-45.105402814728926 -79] -124.10540281472893]
Test Case: 334 | Input/Output: [[27.092844929132525 -91] -63.907155070867475]
Test Case: 335 | Input/Output: [[-55.15809892274457 98] 42.84190107725543]
Test Case: 336 | Input/Output: [[-83.08007539746718 -9] -92.08007539746718]
Test Case: 337 | Input/Output: [[-58.441559487530114 38] -20.441559487530114]
Test Case: 338 | Input/Output: [[-65.90412284447564 -78] -143.90412284447564]
Test Case: 339 | Input/Output: [[19.288014464603947 47] 66.28801446460395]
Test Case: 340 | Input/Output: [[15.972407778872437 -27] -11.027592221127563]
Test Case: 341 | Input/Output: [[-26.99804540125126 52] 25.00195459874874]
Test Case: 342 | Input/Output: [[-12.189639394416332 63] 50.81036060558367]
Test Case: 343 | Input/Output: [[48.32420777187056 46] 94.32420777187056]
Test Case: 344 | Input/Output: [[-57.2664311266756 38] -19.2664311266756]
Test Case: 345 | Input/Output: [[53.66088424024181 70] 123.66088424024181]
Test Case: 346 | Input/Output: [[2.7596294010118925 -51] -48.24037059898811]
Test Case: 347 | Input/Output: [[-59.950831404585884 66] 6.049168595414116]
Test Case: 348 | Input/Output: [[-61.591463451686934 -45] -106.59146345168693]
Test Case: 349 | Input/Output: [[-5.543345052654885 -8] -13.543345052654885]
Test Case: 350 | Input/Output: [[2.484060263265661 -33] -30.51593973673434]
Test Case: 351 | Input/Output: [[-75.86692170083879 5] -70.86692170083879]
Test Case: 352 | Input/Output: [[55.20980409581824 -74] -18.790195904181758]
Test Case: 353 | Input/Output: [[89.65075559281189 41] 130.6507555928119]
Test Case: 354 | Input/Output: [[89.55580448307128 -44] 45.555804483071284]
Test Case: 355 | Input/Output: [[4.082044382610036 -7] -2.917955617389964]
Test Case: 356 | Input/Output: [[-77.89873702541885 -16] -93.89873702541885]
Test Case: 357 | Input/Output: [[67.36266583381342 48] 115.36266583381342]
Test Case: 358 | Input/Output: [[-72.52058404937998 -33] -105.52058404937998]
Test Case: 359 | Input/Output: [[-13.235284667099378 77] 63.76471533290062]
Test Case: 360 | Input/Output: [[0.5619752782445744 -80] -79.43802472175543]
Test Case: 361 | Input/Output: [[5.351886766353857 -59] -53.64811323364614]
Test Case: 362 | Input/Output: [[-77.71316806022475 -80] -157.71316806022475]
Test Case: 363 | Input/Output: [[-61.17700977783507 48] -13.177009777835067]
Test Case: 364 | Input/Output: [[90.83834596377514 32] 122.83834596377514]
Test Case: 365 | Input/Output: [[-46.08790213086606 36] -10.087902130866063]
Test Case: 366 | Input/Output: [[-28.174065125569996 19] -9.174065125569996]
Test Case: 367 | Input/Output: [[56.913286928402954 100] 156.91328692840295]
Test Case: 368 | Input/Output: [[94.97538179300332 -10] 84.97538179300332]
Test Case: 369 | Input/Output: [[94.60182389227128 43] 137.60182389227128]
Test Case: 370 | Input/Output: [[-13.05026483429117 -85] -98.05026483429117]
Test Case: 371 | Input/Output: [[0.26608693446613074 49] 49.26608693446613]
Test Case: 372 | Input/Output: [[18.468184476103588 -81] -62.53181552389641]
Test Case: 373 | Input/Output: [[-53.404507650676834 30] -23.404507650676834]
Test Case: 374 | Input/Output: [[73.54574498675666 -38] 35.54574498675666]
Test Case: 375 | Input/Output: [[99.0043257297261 -72] 27.004325729726105]
Test Case: 376 | Input/Output: [[90.6079195870553 -41] 49.60791958705531]
Test Case: 377 | Input/Output: [[-19.94755199081024 85] 65.05244800918976]
Test Case: 378 | Input/Output: [[33.98453131511437 -13] 20.984531315114367]
Test Case: 379 | Input/Output: [[-5.732933452454446 -22] -27.732933452454446]
Test Case: 380 | Input/Output: [[52.2413623546974 -83] -30.7586376453026]
Test Case: 381 | Input/Output: [[-93.4741483526546 -3] -96.4741483526546]
Test Case: 382 | Input/Output: [[-31.054176525585802 -92] -123.0541765255858]
Test Case: 383 | Input/Output: [[10.98976623667194 -29] -18.01023376332806]
Test Case: 384 | Input/Output: [[-42.094378642384214 4] -38.094378642384214]
Test Case: 385 | Input/Output: [[81.2736855837027 71] 152.2736855837027]
Test Case: 386 | Input/Output: [[2.028790906508874 -68] -65.97120909349113]
Test Case: 387 | Input/Output: [[-56.132963723364824 -85] -141.1329637233648]
Test Case: 388 | Input/Output: [[67.52340807245204 61] 128.52340807245204]
Test Case: 389 | Input/Output: [[74.9878290469716 -23] 51.9878290469716]
Test Case: 390 | Input/Output: [[-27.33240700503194 -37] -64.33240700503194]
Test Case: 391 | Input/Output: [[-14.687712484424239 55] 40.31228751557576]
Test Case: 392 | Input/Output: [[-29.06109079668768 65] 35.93890920331232]
Test Case: 393 | Input/Output: [[51.59752871199382 -80] -28.402471288006183]
Test Case: 394 | Input/Output: [[34.27237646971005 -22] 12.272376469710053]
Test Case: 395 | Input/Output: [[-26.512028049753994 -36] -62.512028049753994]
Test Case: 396 | Input/Output: [[36.67698965534251 9] 45.67698965534251]
Test Case: 397 | Input/Output: [[-9.075482716824254 -90] -99.07548271682425]
Test Case: 398 | Input/Output: [[-73.2490136836182 58] -15.249013683618202]
Test Case: 399 | Input/Output: [[-87.04324363153779 78] -9.043243631537791]
Test Case: 400 | Input/Output: [[-13.771550842944166 36] 22.228449157055834]
Test Case: 401 | Input/Output: [[76.94808609494933 80] 156.94808609494933]
Test Case: 402 | Input/Output: [[71.69675436602839 94] 165.6967543660284]
Test Case: 403 | Input/Output: [[60.934504611625584 -45] 15.934504611625584]
Test Case: 404 | Input/Output: [[18.343378725776134 15] 33.343378725776134]
Test Case: 405 | Input/Output: [[43.0103331547094 24] 67.0103331547094]
Test Case: 406 | Input/Output: [[39.968822631980004 76] 115.96882263198]
Test Case: 407 | Input/Output: [[-99.69594200118301 -83] -182.69594200118303]
Test Case: 408 | Input/Output: [[-69.43020382139278 21] -48.43020382139278]
Test Case: 409 | Input/Output: [[-61.24146837403555 -81] -142.24146837403555]
Test Case: 410 | Input/Output: [[-97.48856992514598 -69] -166.48856992514598]
Test Case: 411 | Input/Output: [[46.25251096155611 62] 108.25251096155611]
Test Case: 412 | Input/Output: [[-61.66487558664837 69] 7.335124413351629]
Test Case: 413 | Input/Output: [[-72.37317319179554 -27] -99.37317319179554]
Test Case: 414 | Input/Output: [[25.61527126855738 56] 81.61527126855738]
Test Case: 415 | Input/Output: [[13.147258959071834 2] 15.147258959071834]
Test Case: 416 | Input/Output: [[-18.32756855904249 -93] -111.32756855904249]
Test Case: 417 | Input/Output: [[15.649015272800497 -32] -16.350984727199503]
Test Case: 418 | Input/Output: [[-87.11458915459795 3] -84.11458915459795]
Test Case: 419 | Input/Output: [[37.00125030592014 -28] 9.001250305920138]
Test Case: 420 | Input/Output: [[-56.442288066932676 -58] -114.44228806693268]
Test Case: 421 | Input/Output: [[86.04598272968192 -91] -4.954017270318076]
Test Case: 422 | Input/Output: [[99.75966161573052 15] 114.75966161573052]
Test Case: 423 | Input/Output: [[83.81941046992733 -92] -8.180589530072666]
Test Case: 424 | Input/Output: [[53.884677051808325 -96] -42.115322948191675]
Test Case: 425 | Input/Output: [[-16.67134012011769 -82] -98.67134012011769]
Test Case: 426 | Input/Output: [[94.21616525320718 -21] 73.21616525320718]
Test Case: 427 | Input/Output: [[-14.529546442910728 -76] -90.52954644291073]
Test Case: 428 | Input/Output: [[-61.543727875848894 -38] -99.5437278758489]
Test Case: 429 | Input/Output: [[95.2004528097678 53] 148.2004528097678]
Test Case: 430 | Input/Output: [[94.91819133979132 69] 163.91819133979132]
Test Case: 431 | Input/Output: [[63.218887800119916 95] 158.21888780011992]
Test Case: 432 | Input/Output: [[21.614843463219472 78] 99.61484346321947]
Test Case: 433 | Input/Output: [[41.542553323714884 -37] 4.542553323714884]
Test Case: 434 | Input/Output: [[86.3832321320134 -7] 79.3832321320134]
Test Case: 435 | Input/Output: [[-72.30333073561681 38] -34.30333073561681]
Test Case: 436 | Input/Output: [[25.814413511463002 3] 28.814413511463002]
Test Case: 437 | Input/Output: [[-33.6578831215856 71] 37.3421168784144]
Test Case: 438 | Input/Output: [[-60.405188696542545 28] -32.405188696542545]
Test Case: 439 | Input/Output: [[-45.899797611546674 49] 3.100202388453326]
Test Case: 440 | Input/Output: [[-82.35419362285015 -30] -112.35419362285015]
Test Case: 441 | Input/Output: [[24.074585622032373 15] 39.07458562203237]
Test Case: 442 | Input/Output: [[-90.49735021694812 77] -13.49735021694812]
Test Case: 443 | Input/Output: [[-69.10031032104635 43] -26.10031032104635]
Test Case: 444 | Input/Output: [[68.08375322525708 37] 105.08375322525708]
Test Case: 445 | Input/Output: [[-41.010078579241885 -26] -67.01007857924188]
Test Case: 446 | Input/Output: [[27.105935442133358 84] 111.10593544213336]
Test Case: 447 | Input/Output: [[-14.67881596155027 14] -0.6788159615502707]
Test Case: 448 | Input/Output: [[-53.23082018777392 25] -28.230820187773922]
Test Case: 449 | Input/Output: [[91.27448438618427 2] 93.27448438618427]
Test Case: 450 | Input/Output: [[31.343081682837862 70] 101.34308168283786]
Test Case: 451 | Input/Output: [[-44.89466722035538 -75] -119.89466722035539]
Test Case: 452 | Input/Output: [[-54.4703752465626 -70] -124.4703752465626]
Test Case: 453 | Input/Output: [[19.375639594894835 46] 65.37563959489484]
Test Case: 454 | Input/Output: [[5.602752724604954 -67] -61.397247275395046]
Test Case: 455 | Input/Output: [[-52.222292958753954 23] -29.222292958753954]
Test Case: 456 | Input/Output: [[60.256499750129734 -64] -3.743500249870266]
Test Case: 457 | Input/Output: [[-59.09349547053815 -62] -121.09349547053816]
Test Case: 458 | Input/Output: [[30.70390959196999 65] 95.70390959196999]
Test Case: 459 | Input/Output: [[-95.86591513979828 -40] -135.8659151397983]
Test Case: 460 | Input/Output: [[-62.10195085468433 88] 25.898049145315667]
Test Case: 461 | Input/Output: [[44.81922935426445 27] 71.81922935426445]
Test Case: 462 | Input/Output: [[18.560175207088577 74] 92.56017520708858]
Test Case: 463 | Input/Output: [[-75.93329755537948 44] -31.933297555379482]
Test Case: 464 | Input/Output: [[-30.092654938353576 -55] -85.09265493835358]
Test Case: 465 | Input/Output: [[12.789539926869779 -88] -75.21046007313022]
Test Case: 466 | Input/Output: [[-92.98677559430224 43] -49.986775594302244]
Test Case: 467 | Input/Output: [[84.2758918435957 65] 149.2758918435957]
Test Case: 468 | Input/Output: [[-52.119133730974674 -38] -90.11913373097468]
Test Case: 469 | Input/Output: [[-82.4022626799896 61] -21.402262679989605]
Test Case: 470 | Input/Output: [[-95.76082920889026 -52] -147.76082920889024]
Test Case: 471 | Input/Output: [[21.273752930643752 -98] -76.72624706935625]
Test Case: 472 | Input/Output: [[20.82162762120585 -12] 8.821627621205849]
Test Case: 473 | Input/Output: [[-33.14671575562154 60] 26.853284244378457]
Test Case: 474 | Input/Output: [[82.8049489686197 -26] 56.8049489686197]
Test Case: 475 | Input/Output: [[-77.65800494798114 2] -75.65800494798114]
Test Case: 476 | Input/Output: [[16.871818138622046 39] 55.87181813862205]
Test Case: 477 | Input/Output: [[89.23143010624634 63] 152.23143010624634]
Test Case: 478 | Input/Output: [[19.356679915181687 59] 78.35667991518169]
Test Case: 479 | Input/Output: [[-10.233571552044339 -23] -33.23357155204434]
Test Case: 480 | Input/Output: [[59.523971053241866 -50] 9.523971053241866]
Test Case: 481 | Input/Output: [[-50.10313864514628 -29] -79.10313864514629]
Test Case: 482 | Input/Output: [[47.770067532318535 72] 119.77006753231854]
Test Case: 483 | Input/Output: [[-30.297433769927125 24] -6.297433769927125]
Test Case: 484 | Input/Output: [[-26.645309263105887 65] 38.35469073689411]
Test Case: 485 | Input/Output: [[-90.6663183312527 -90] -180.66631833125268]
Test Case: 486 | Input/Output: [[-81.65992924778521 68] -13.659929247785215]
Test Case: 487 | Input/Output: [[70.14258240656724 -57] 13.142582406567243]
Test Case: 488 | Input/Output: [[62.97658737033177 77] 139.97658737033177]
Test Case: 489 | Input/Output: [[48.6517044020942 86] 134.6517044020942]
Test Case: 490 | Input/Output: [[93.14334696240084 -71] 22.14334696240084]
Test Case: 491 | Input/Output: [[-45.23128879430658 1] -44.23128879430658]
Test Case: 492 | Input/Output: [[34.02624246698801 -76] -41.97375753301199]
Test Case: 493 | Input/Output: [[-79.0851359071134 -86] -165.0851359071134]
Test Case: 494 | Input/Output: [[87.02200128690444 0] 87.02200128690444]
Test Case: 495 | Input/Output: [[6.4073386807887545 -21] -14.592661319211246]
Test Case: 496 | Input/Output: [[49.455509008333024 89] 138.45550900833302]
Test Case: 497 | Input/Output: [[71.97911691006217 -96] -24.020883089937826]
Test Case: 498 | Input/Output: [[55.331045629849484 -55] 0.33104562984948416]
Test Case: 499 | Input/Output: [[-92.29597507666809 69] -23.295975076668086]
Test Case: 500 | Input/Output: [[81.59885735096412 -6] 75.59885735096412]
Test Case: 501 | Input/Output: [[-32.44445692067745 -99] -131.44445692067745]
Test Case: 502 | Input/Output: [[-76.37213336513942 -74] -150.3721333651394]
Test Case: 503 | Input/Output: [[90.20037072977632 97] 187.20037072977632]
Test Case: 504 | Input/Output: [[42.87399113824267 42] 84.87399113824267]
Test Case: 505 | Input/Output: [[7.838904669227404 92] 99.8389046692274]
Test Case: 506 | Input/Output: [[63.76654020251149 97] 160.7665402025115]
Test Case: 507 | Input/Output: [[-53.93343441915781 -66] -119.9334344191578]
Test Case: 508 | Input/Output: [[9.09226475958107 14] 23.09226475958107]
Test Case: 509 | Input/Output: [[64.8645500446658 -62] 2.8645500446658048]
Test Case: 510 | Input/Output: [[55.79275257247568 99] 154.79275257247568]
Test Case: 511 | Input/Output: [[-25.380569234941788 -9] -34.38056923494179]
Test Case: 512 | Input/Output: [[92.13491465288038 -52] 40.13491465288038]
Test Case: 513 | Input/Output: [[77.61836523979849 97] 174.6183652397985]
Test Case: 514 | Input/Output: [[43.56097508637441 32] 75.56097508637441]
Test Case: 515 | Input/Output: [[83.27977220159676 85] 168.27977220159676]
Test Case: 516 | Input/Output: [[-25.310356276390465 -67] -92.31035627639046]
Test Case: 517 | Input/Output: [[38.36601067069546 37] 75.36601067069546]
Test Case: 518 | Input/Output: [[66.54669817101652 -44] 22.546698171016516]
Test Case: 519 | Input/Output: [[-25.84712917459484 16] -9.84712917459484]
Test Case: 520 | Input/Output: [[62.36968059342817 66] 128.36968059342817]
Test Case: 521 | Input/Output: [[87.65473776697391 -62] 25.65473776697391]
Test Case: 522 | Input/Output: [[41.218480969491566 27] 68.21848096949157]
Test Case: 523 | Input/Output: [[-59.662176216255915 -18] -77.66217621625592]
Test Case: 524 | Input/Output: [[-73.83458500437447 -45] -118.83458500437447]
Test Case: 525 | Input/Output: [[-64.61845597994525 67] 2.381544020054747]
Test Case: 526 | Input/Output: [[-90.49290206389918 -59] -149.49290206389918]
Test Case: 527 | Input/Output: [[-77.44748333727149 -14] -91.44748333727149]
Test Case: 528 | Input/Output: [[39.13533493393726 8] 47.13533493393726]
Test Case: 529 | Input/Output: [[-28.486507911386383 9] -19.486507911386383]
Test Case: 530 | Input/Output: [[26.163990352858505 3] 29.163990352858505]
Test Case: 531 | Input/Output: [[-47.01214346955209 -75] -122.01214346955209]
Test Case: 532 | Input/Output: [[-98.21472636036623 12] -86.21472636036623]
Test Case: 533 | Input/Output: [[52.578085943114786 -55] -2.421914056885214]
Test Case: 534 | Input/Output: [[99.17019216074047 11] 110.17019216074047]
Test Case: 535 | Input/Output: [[64.18110681853994 30] 94.18110681853994]
Test Case: 536 | Input/Output: [[-54.01721035280544 24] -30.017210352805442]
Test Case: 537 | Input/Output: [[48.54968162006378 -6] 42.54968162006378]
Test Case: 538 | Input/Output: [[-91.67552324181369 -22] -113.67552324181369]
Test Case: 539 | Input/Output: [[-61.95684183751793 -44] -105.95684183751793]
Test Case: 540 | Input/Output: [[99.16112399444566 21] 120.16112399444566]
Test Case: 541 | Input/Output: [[-93.74995861733728 -29] -122.74995861733728]
Test Case: 542 | Input/Output: [[-45.90215849739974 42] -3.902158497399739]
Test Case: 543 | Input/Output: [[63.962540363762145 56] 119.96254036376214]
Test Case: 544 | Input/Output: [[65.79322781492053 -29] 36.79322781492053]
Test Case: 545 | Input/Output: [[60.83404343958958 -96] -35.16595656041042]
Test Case: 546 | Input/Output: [[24.692445640845335 -77] -52.307554359154665]
Test Case: 547 | Input/Output: [[70.0948593098052 42] 112.0948593098052]
Test Case: 548 | Input/Output: [[-56.96173943351659 -64] -120.96173943351658]
Test Case: 549 | Input/Output: [[-2.7337033668884487 -54] -56.73370336688845]
Test Case: 550 | Input/Output: [[37.815346844071314 -89] -51.184653155928686]
Test Case: 551 | Input/Output: [[-30.070199911946574 -60] -90.07019991194657]
Test Case: 552 | Input/Output: [[-16.768841538201713 -37] -53.76884153820171]
Test Case: 553 | Input/Output: [[-27.165876688793006 18] -9.165876688793006]
Test Case: 554 | Input/Output: [[38.43818815760437 66] 104.43818815760437]
Test Case: 555 | Input/Output: [[-44.57685981468706 -95] -139.57685981468705]
Test Case: 556 | Input/Output: [[49.41658710213193 83] 132.41658710213193]
Test Case: 557 | Input/Output: [[0.9179041263729317 85] 85.91790412637293]
Test Case: 558 | Input/Output: [[-45.0776024846554 95] 49.9223975153446]
Test Case: 559 | Input/Output: [[23.319569747200106 37] 60.319569747200106]
Test Case: 560 | Input/Output: [[-79.66067812055182 65] -14.660678120551822]
Test Case: 561 | Input/Output: [[38.525068071408356 -61] -22.474931928591644]
Test Case: 562 | Input/Output: [[66.45910649849452 -87] -20.54089350150548]
Test Case: 563 | Input/Output: [[3.1452052338974568 66] 69.14520523389746]
Test Case: 564 | Input/Output: [[94.58203719340952 -84] 10.58203719340952]
Test Case: 565 | Input/Output: [[-35.715717440217205 83] 47.284282559782795]
Test Case: 566 | Input/Output: [[-79.57379023068584 42] -37.573790230685844]
Test Case: 567 | Input/Output: [[22.270916070830495 -19] 3.270916070830495]
Test Case: 568 | Input/Output: [[-57.88240488918619 -75] -132.8824048891862]
Test Case: 569 | Input/Output: [[38.456938741623446 -32] 6.456938741623446]
Test Case: 570 | Input/Output: [[-95.41040917905492 -66] -161.4104091790549]
Test Case: 571 | Input/Output: [[13.062445806834575 13] 26.062445806834575]
Test Case: 572 | Input/Output: [[-33.558468119815416 -46] -79.55846811981542]
Test Case: 573 | Input/Output: [[-7.365707413303284 24] 16.634292586696716]
Test Case: 574 | Input/Output: [[-68.43926370584627 54] -14.439263705846273]
Test Case: 575 | Input/Output: [[49.414178103744376 -24] 25.414178103744376]
Test Case: 576 | Input/Output: [[20.831766086926734 -73] -52.168233913073266]
Test Case: 577 | Input/Output: [[95.57705800702635 -14] 81.57705800702635]
Test Case: 578 | Input/Output: [[27.648454139256856 75] 102.64845413925686]
Test Case: 579 | Input/Output: [[-77.25421894439013 -32] -109.25421894439013]
Test Case: 580 | Input/Output: [[-18.00444285203872 -16] -34.00444285203872]
Test Case: 581 | Input/Output: [[22.372919390856197 12] 34.3729193908562]
Test Case: 582 | Input/Output: [[-0.8027893258780097 71] 70.19721067412199]
Test Case: 583 | Input/Output: [[52.327006170394725 -69] -16.672993829605275]
Test Case: 584 | Input/Output: [[98.72017385341195 85] 183.72017385341195]
Test Case: 585 | Input/Output: [[-85.82878823898214 -88] -173.82878823898216]
Test Case: 586 | Input/Output: [[-38.83597703589976 10] -28.83597703589976]
Test Case: 587 | Input/Output: [[-62.78952774402664 -73] -135.78952774402666]
Test Case: 588 | Input/Output: [[-18.887280047088467 88] 69.11271995291153]
Test Case: 589 | Input/Output: [[6.817599096796229 -98] -91.18240090320377]
Test Case: 590 | Input/Output: [[-69.115906452343 -94] -163.11590645234298]
Test Case: 591 | Input/Output: [[-5.175679027358797 38] 32.8243209726412]
Test Case: 592 | Input/Output: [[71.1418615925912 84] 155.1418615925912]
Test Case: 593 | Input/Output: [[-75.44025270478127 -6] -81.44025270478127]
Test Case: 594 | Input/Output: [[-95.49669608653628 87] -8.496696086536275]
Test Case: 595 | Input/Output: [[-85.66521483468996 -58] -143.66521483468995]
Test Case: 596 | Input/Output: [[-60.89254691198778 -40] -100.89254691198778]
Test Case: 597 | Input/Output: [[80.26569104602825 15] 95.26569104602825]
Test Case: 598 | Input/Output: [[58.45812351746213 -73] -14.541876482537873]
Test Case: 599 | Input/Output: [[1.7920661649103948 -46] -44.207933835089605]
Test Case: 600 | Input/Output: [[6.813022921253591 41] 47.81302292125359]
Test Case: 601 | Input/Output: [[-84.1401092764483 71] -13.1401092764483]
Test Case: 602 | Input/Output: [[-82.99562140365468 11] -71.99562140365468]
Test Case: 603 | Input/Output: [[50.95524273025978 46] 96.95524273025978]
Test Case: 604 | Input/Output: [[30.97148847819227 48] 78.97148847819227]
Test Case: 605 | Input/Output: [[-72.43535990781464 -80] -152.43535990781464]
Test Case: 606 | Input/Output: [[65.59678652459948 -98] -32.40321347540052]
Test Case: 607 | Input/Output: [[97.14427691416543 -71] 26.14427691416543]
Test Case: 608 | Input/Output: [[-7.520883630943544 -56] -63.520883630943544]
Test Case: 609 | Input/Output: [[-32.003718090129226 17] -15.003718090129226]
Test Case: 610 | Input/Output: [[-65.88271387607202 53] -12.882713876072017]
Test Case: 611 | Input/Output: [[-27.1126454131241 17] -10.112645413124099]
Test Case: 612 | Input/Output: [[-74.2887804693445 26] -48.2887804693445]
Test Case: 613 | Input/Output: [[-59.11480101821971 -80] -139.1148010182197]
Test Case: 614 | Input/Output: [[-55.91875964413981 -83] -138.9187596441398]
Test Case: 615 | Input/Output: [[56.838700231607135 95] 151.83870023160713]
Test Case: 616 | Input/Output: [[-19.437195343474826 38] 18.562804656525174]
Test Case: 617 | Input/Output: [[6.361841957049236 7] 13.361841957049236]
Test Case: 618 | Input/Output: [[0.7109898093779634 13] 13.710989809377963]
Test Case: 619 | Input/Output: [[-67.38805728467332 85] 17.611942715326677]
Test Case: 620 | Input/Output: [[37.424249686498314 0] 37.424249686498314]
Test Case: 621 | Input/Output: [[61.77076757997938 26] 87.77076757997938]
Test Case: 622 | Input/Output: [[-89.88280285694734 -92] -181.88280285694734]
Test Case: 623 | Input/Output: [[-31.716858066959958 12] -19.716858066959958]
Test Case: 624 | Input/Output: [[94.77467984553877 -80] 14.77467984553877]
Test Case: 625 | Input/Output: [[74.93792931650219 56] 130.9379293165022]
Test Case: 626 | Input/Output: [[-22.39484134485224 -4] -26.39484134485224]
Test Case: 627 | Input/Output: [[98.75537225078821 86] 184.7553722507882]
Test Case: 628 | Input/Output: [[39.91008671061621 -97] -57.08991328938379]
Test Case: 629 | Input/Output: [[77.46571038467462 -59] 18.465710384674622]
Test Case: 630 | Input/Output: [[-22.139993201519516 -77] -99.13999320151952]
Test Case: 631 | Input/Output: [[-16.151095924413795 -26] -42.151095924413795]
Test Case: 632 | Input/Output: [[62.58446585698272 36] 98.58446585698272]
Test Case: 633 | Input/Output: [[12.898836885145059 46] 58.89883688514506]
Test Case: 634 | Input/Output: [[-79.54249708792096 73] -6.542497087920964]
Test Case: 635 | Input/Output: [[2.4455675997005812 -60] -57.55443240029942]
Test Case: 636 | Input/Output: [[22.401249833828032 -48] -25.598750166171968]
Test Case: 637 | Input/Output: [[3.9100814531055335 18] 21.910081453105533]
Test Case: 638 | Input/Output: [[-76.00607892741344 -45] -121.00607892741344]
Test Case: 639 | Input/Output: [[7.975438828883497 -9] -1.0245611711165026]
Test Case: 640 | Input/Output: [[-83.02284293584464 73] -10.022842935844636]
Test Case: 641 | Input/Output: [[-48.7990527994171 -29] -77.7990527994171]
Test Case: 642 | Input/Output: [[-7.124629311034951 53] 45.87537068896505]
Test Case: 643 | Input/Output: [[-80.86610402719586 -25] -105.86610402719586]
Test Case: 644 | Input/Output: [[3.9733012401600263 -91] -87.02669875983997]
Test Case: 645 | Input/Output: [[28.353491671417146 33] 61.353491671417146]
Test Case: 646 | Input/Output: [[-83.76192922210649 -87] -170.7619292221065]
Test Case: 647 | Input/Output: [[61.290172596237824 78] 139.29017259623782]
Test Case: 648 | Input/Output: [[89.67829144815786 -17] 72.67829144815786]
Test Case: 649 | Input/Output: [[-10.347563823844126 -51] -61.347563823844126]
Test Case: 650 | Input/Output: [[-59.653285435299395 39] -20.653285435299395]
Test Case: 651 | Input/Output: [[9.18299980286237 38] 47.18299980286237]
Test Case: 652 | Input/Output: [[35.282590030515166 11] 46.282590030515166]
Test Case: 653 | Input/Output: [[29.455407181231607 53] 82.4554071812316]
Test Case: 654 | Input/Output: [[45.861547653730554 -100] -54.138452346269446]
Test Case: 655 | Input/Output: [[-8.036444933479927 18] 9.963555066520073]
Test Case: 656 | Input/Output: [[68.01526287412389 -55] 13.015262874123891]
Test Case: 657 | Input/Output: [[13.437202318072877 -32] -18.562797681927123]
Test Case: 658 | Input/Output: [[-95.7130428823501 -33] -128.7130428823501]
Test Case: 659 | Input/Output: [[-44.131666044740015 40] -4.131666044740015]
Test Case: 660 | Input/Output: [[74.76435818066079 -10] 64.76435818066079]
Test Case: 661 | Input/Output: [[86.08574772237466 -19] 67.08574772237466]
Test Case: 662 | Input/Output: [[-88.22912749559862 77] -11.229127495598618]
Test Case: 663 | Input/Output: [[70.57636931862248 2] 72.57636931862248]
Test Case: 664 | Input/Output: [[-6.432876051150814 20] 13.567123948849186]
Test Case: 665 | Input/Output: [[-94.34004493067877 -28] -122.34004493067877]
Test Case: 666 | Input/Output: [[-91.74045218479203 -93] -184.74045218479205]
Test Case: 667 | Input/Output: [[75.1245033463224 14] 89.1245033463224]
Test Case: 668 | Input/Output: [[28.687967973530476 52] 80.68796797353048]
Test Case: 669 | Input/Output: [[-80.78457854583642 96] 15.215421454163575]
Test Case: 670 | Input/Output: [[-30.557215556778388 1] -29.557215556778388]
Test Case: 671 | Input/Output: [[-86.13496533087732 -80] -166.13496533087732]
Test Case: 672 | Input/Output: [[64.76960966703004 72] 136.76960966703004]
Test Case: 673 | Input/Output: [[-18.261617112300257 5] -13.261617112300257]
Test Case: 674 | Input/Output: [[98.19702703321929 69] 167.19702703321929]
Test Case: 675 | Input/Output: [[98.99491536137722 31] 129.99491536137722]
Test Case: 676 | Input/Output: [[-77.13623491790251 34] -43.13623491790251]
Test Case: 677 | Input/Output: [[71.9050473306877 -45] 26.905047330687694]
Test Case: 678 | Input/Output: [[38.33843442678028 -70] -31.66156557321972]
Test Case: 679 | Input/Output: [[-48.45587221593603 -31] -79.45587221593604]
Test Case: 680 | Input/Output: [[-99.18802415037908 83] -16.18802415037908]
Test Case: 681 | Input/Output: [[79.5705245611241 78] 157.5705245611241]
Test Case: 682 | Input/Output: [[-15.041872182821422 -5] -20.04187218282142]
Test Case: 683 | Input/Output: [[-78.65756549880365 71] -7.657565498803649]
Test Case: 684 | Input/Output: [[6.311079744373586 -25] -18.688920255626414]
Test Case: 685 | Input/Output: [[97.45543179127105 100] 197.45543179127105]
Test Case: 686 | Input/Output: [[-57.71571969704734 71] 13.28428030295266]
Test Case: 687 | Input/Output: [[-60.75691350234757 -60] -120.75691350234757]
Test Case: 688 | Input/Output: [[30.524372525648744 -69] -38.475627474351256]
Test Case: 689 | Input/Output: [[-95.00228319098518 -22] -117.00228319098518]
Test Case: 690 | Input/Output: [[-53.896128813463484 -42] -95.89612881346349]
Test Case: 691 | Input/Output: [[-47.28925192794073 -48] -95.28925192794074]
Test Case: 692 | Input/Output: [[-0.8374459003946129 -79] -79.83744590039461]
Test Case: 693 | Input/Output: [[-71.70468665386537 52] -19.704686653865366]
Test Case: 694 | Input/Output: [[19.818832431995844 65] 84.81883243199584]
Test Case: 695 | Input/Output: [[36.49845423852028 20] 56.49845423852028]
Test Case: 696 | Input/Output: [[-1.5038028699701158 75] 73.49619713002988]
Test Case: 697 | Input/Output: [[-46.845049367903435 -6] -52.845049367903435]
Test Case: 698 | Input/Output: [[80.0960626242072 22] 102.0960626242072]
Test Case: 699 | Input/Output: [[-58.353162655200094 -85] -143.3531626552001]
Test Case: 700 | Input/Output: [[-80.80633531786437 98] 17.193664682135633]
Test Case: 701 | Input/Output: [[-35.7800418695398 -66] -101.7800418695398]
Test Case: 702 | Input/Output: [[-46.91739125054435 28] -18.91739125054435]
Test Case: 703 | Input/Output: [[-15.638169847872291 -81] -96.63816984787229]
Test Case: 704 | Input/Output: [[63.96014604130028 12] 75.96014604130028]
Test Case: 705 | Input/Output: [[41.94491283042842 44] 85.94491283042842]
Test Case: 706 | Input/Output: [[-64.5090688353526 -30] -94.5090688353526]
Test Case: 707 | Input/Output: [[-55.56200320477811 100] 44.43799679522189]
Test Case: 708 | Input/Output: [[40.29669514268625 38] 78.29669514268625]
Test Case: 709 | Input/Output: [[18.226604073212755 -13] 5.226604073212755]
Test Case: 710 | Input/Output: [[10.649957068292352 -62] -51.35004293170765]
Test Case: 711 | Input/Output: [[11.056244890806923 81] 92.05624489080692]
Test Case: 712 | Input/Output: [[60.11160111921225 88] 148.11160111921225]
Test Case: 713 | Input/Output: [[-3.030311840836646 -95] -98.03031184083665]
Test Case: 714 | Input/Output: [[-55.79617515929183 78] 22.203824840708172]
Test Case: 715 | Input/Output: [[-20.175800460836868 94] 73.82419953916313]
Test Case: 716 | Input/Output: [[6.074298151601738 97] 103.07429815160174]
Test Case: 717 | Input/Output: [[-40.543225777120774 -44] -84.54322577712077]
Test Case: 718 | Input/Output: [[70.42381467450272 -15] 55.42381467450272]
Test Case: 719 | Input/Output: [[67.47459180281328 -20] 47.47459180281328]
Test Case: 720 | Input/Output: [[-74.26186768886967 33] -41.26186768886967]
Test Case: 721 | Input/Output: [[95.13132202376963 -46] 49.13132202376963]
Test Case: 722 | Input/Output: [[-73.34452536748537 45] -28.344525367485375]
Test Case: 723 | Input/Output: [[38.792655912515045 -96] -57.207344087484955]
Test Case: 724 | Input/Output: [[-69.03993461520245 -66] -135.03993461520247]
Test Case: 725 | Input/Output: [[-94.77959806276142 27] -67.77959806276142]
Test Case: 726 | Input/Output: [[61.559875000962535 -29] 32.559875000962535]
Test Case: 727 | Input/Output: [[32.87581685174814 12] 44.87581685174814]
Test Case: 728 | Input/Output: [[69.53160702866614 65] 134.53160702866614]
Test Case: 729 | Input/Output: [[-60.52369430327309 -27] -87.52369430327309]
Test Case: 730 | Input/Output: [[73.58748265447241 -18] 55.58748265447241]
Test Case: 731 | Input/Output: [[-51.04237063794781 21] -30.042370637947812]
Test Case: 732 | Input/Output: [[-7.465452900306474 3] -4.465452900306474]
Test Case: 733 | Input/Output: [[15.572207248494706 -5] 10.572207248494706]
Test Case: 734 | Input/Output: [[-91.8960820222743 27] -64.8960820222743]
Test Case: 735 | Input/Output: [[44.39876196882378 92] 136.39876196882378]
Test Case: 736 | Input/Output: [[56.72385807033544 52] 108.72385807033544]
Test Case: 737 | Input/Output: [[56.066606530970034 -73] -16.933393469029966]
Test Case: 738 | Input/Output: [[78.28526370395576 20] 98.28526370395576]
Test Case: 739 | Input/Output: [[-89.46964857598896 15] -74.46964857598896]
Test Case: 740 | Input/Output: [[12.341383350067048 -57] -44.65861664993295]
Test Case: 741 | Input/Output: [[44.324781546875926 42] 86.32478154687593]
Test Case: 742 | Input/Output: [[5.120488470693459 0] 5.120488470693459]
Test Case: 743 | Input/Output: [[-59.515813361901394 -29] -88.5158133619014]
Test Case: 744 | Input/Output: [[-35.68672838627987 -96] -131.68672838627987]
Test Case: 745 | Input/Output: [[13.674337957952304 -48] -34.325662042047696]
Test Case: 746 | Input/Output: [[-5.614131431552266 -81] -86.61413143155227]
Test Case: 747 | Input/Output: [[-45.086594768522794 -11] -56.086594768522794]
Test Case: 748 | Input/Output: [[55.14808924058923 27] 82.14808924058923]
Test Case: 749 | Input/Output: [[-97.24328808109189 -45] -142.2432880810919]
Test Case: 750 | Input/Output: [[3.0682407521912154 80] 83.06824075219122]
Test Case: 751 | Input/Output: [[-25.60623122907775 -53] -78.60623122907775]
Test Case: 752 | Input/Output: [[56.7992417484418 -91] -34.2007582515582]
Test Case: 753 | Input/Output: [[58.47326408184733 12] 70.47326408184733]
Test Case: 754 | Input/Output: [[-20.67794710237783 35] 14.322052897622171]
Test Case: 755 | Input/Output: [[20.684360286111584 88] 108.68436028611158]
Test Case: 756 | Input/Output: [[-37.9235425579036 -75] -112.9235425579036]
Test Case: 757 | Input/Output: [[-83.54581637122857 -77] -160.54581637122857]
Test Case: 758 | Input/Output: [[-68.46679272445735 37] -31.46679272445735]
Test Case: 759 | Input/Output: [[-72.46761400377748 57] -15.467614003777484]
Test Case: 760 | Input/Output: [[69.29810486740053 -36] 33.298104867400525]
Test Case: 761 | Input/Output: [[73.18475560047389 19] 92.18475560047389]
Test Case: 762 | Input/Output: [[-35.66788904926635 -56] -91.66788904926635]
Test Case: 763 | Input/Output: [[-0.05384268478468357 -92] -92.05384268478468]
Test Case: 764 | Input/Output: [[63.89322006344332 72] 135.89322006344332]
Test Case: 765 | Input/Output: [[38.806748693395036 -8] 30.806748693395036]
Test Case: 766 | Input/Output: [[-41.559707880098905 55] 13.440292119901095]
Test Case: 767 | Input/Output: [[-31.552499581623138 -85] -116.55249958162314]
Test Case: 768 | Input/Output: [[-56.849878046673005 -28] -84.84987804667301]
Test Case: 769 | Input/Output: [[7.905756619623759 20] 27.90575661962376]
Test Case: 770 | Input/Output: [[-79.80091415501715 55] -24.800914155017153]
Test Case: 771 | Input/Output: [[47.156152637185016 42] 89.15615263718502]
Test Case: 772 | Input/Output: [[-53.38251960176723 60] 6.617480398232772]
Test Case: 773 | Input/Output: [[42.701450097190786 85] 127.70145009719079]
Test Case: 774 | Input/Output: [[-57.946654176780285 -67] -124.94665417678029]
Test Case: 775 | Input/Output: [[-25.49517840293028 -11] -36.49517840293028]
Test Case: 776 | Input/Output: [[19.72640973998527 12] 31.72640973998527]
Test Case: 777 | Input/Output: [[61.12317327974358 -11] 50.12317327974358]
Test Case: 778 | Input/Output: [[-90.20645674294889 -60] -150.2064567429489]
Test Case: 779 | Input/Output: [[64.5650951866541 47] 111.5650951866541]
Test Case: 780 | Input/Output: [[63.39204498514525 -50] 13.392044985145247]
Test Case: 781 | Input/Output: [[-32.87090858140115 -54] -86.87090858140115]
Test Case: 782 | Input/Output: [[17.253196409153844 8] 25.253196409153844]
Test Case: 783 | Input/Output: [[34.95666891853202 44] 78.95666891853202]
Test Case: 784 | Input/Output: [[-78.17579087060088 -39] -117.17579087060088]
Test Case: 785 | Input/Output: [[19.037347978126746 94] 113.03734797812675]
Test Case: 786 | Input/Output: [[19.349605156455468 -83] -63.65039484354453]
Test Case: 787 | Input/Output: [[-16.858663809401108 54] 37.14133619059889]
Test Case: 788 | Input/Output: [[68.3817121870978 69] 137.3817121870978]
Test Case: 789 | Input/Output: [[-37.48250206549193 68] 30.51749793450807]
Test Case: 790 | Input/Output: [[5.34349746073957 -39] -33.65650253926043]
Test Case: 791 | Input/Output: [[-20.116857197548114 26] 5.883142802451886]
Test Case: 792 | Input/Output: [[-22.208513634512727 21] -1.2085136345127268]
Test Case: 793 | Input/Output: [[-13.888416190565778 78] 64.11158380943422]
Test Case: 794 | Input/Output: [[58.00385729123275 -11] 47.00385729123275]
Test Case: 795 | Input/Output: [[83.92661459791475 -67] 16.92661459791475]
Test Case: 796 | Input/Output: [[-52.84612275207237 4] -48.84612275207237]
Test Case: 797 | Input/Output: [[-93.69461309652844 40] -53.69461309652844]
Test Case: 798 | Input/Output: [[51.18681243878871 -65] -13.813187561211294]
Test Case: 799 | Input/Output: [[-28.730778058553085 48] 19.269221941446915]
Test Case: 800 | Input/Output: [[-31.826232945165216 77] 45.173767054834784]
Test Case: 801 | Input/Output: [[-60.881154515680855 66] 5.118845484319145]
Test Case: 802 | Input/Output: [[-64.07490082395876 52] -12.074900823958757]
Test Case: 803 | Input/Output: [[-74.72634516791332 41] -33.72634516791332]
Test Case: 804 | Input/Output: [[-74.04514366191998 45] -29.04514366191998]
Test Case: 805 | Input/Output: [[88.54440736244337 69] 157.54440736244337]
Test Case: 806 | Input/Output: [[77.19921820610628 -47] 30.19921820610628]
Test Case: 807 | Input/Output: [[-59.63033432324809 -13] -72.63033432324809]
Test Case: 808 | Input/Output: [[87.50708836685811 -7] 80.50708836685811]
Test Case: 809 | Input/Output: [[-98.4345761150585 -57] -155.43457611505852]
Test Case: 810 | Input/Output: [[48.88255374996953 33] 81.88255374996953]
Test Case: 811 | Input/Output: [[89.74896333253602 -50] 39.74896333253602]
Test Case: 812 | Input/Output: [[-31.786788307155618 -99] -130.78678830715563]
Test Case: 813 | Input/Output: [[5.089554288258142 94] 99.08955428825814]
Test Case: 814 | Input/Output: [[-85.47224508459914 48] -37.47224508459914]
Test Case: 815 | Input/Output: [[-63.26360990198854 71] 7.736390098011462]
Test Case: 816 | Input/Output: [[-17.0167198123343 -3] -20.0167198123343]
Test Case: 817 | Input/Output: [[-57.516119979562234 30] -27.516119979562234]
Test Case: 818 | Input/Output: [[64.32911325736194 63] 127.32911325736194]
Test Case: 819 | Input/Output: [[-5.506286742804292 11] 5.493713257195708]
Test Case: 820 | Input/Output: [[-33.68847298658267 35] 1.311527013417333]
Test Case: 821 | Input/Output: [[86.60858070224694 -11] 75.60858070224694]
Test Case: 822 | Input/Output: [[86.02543053115551 83] 169.0254305311555]
Test Case: 823 | Input/Output: [[43.304386703663 84] 127.304386703663]
Test Case: 824 | Input/Output: [[9.998333741900936 -79] -69.00166625809906]
Test Case: 825 | Input/Output: [[52.95229737369499 70] 122.95229737369499]
Test Case: 826 | Input/Output: [[21.90993866731796 -55] -33.09006133268204]
Test Case: 827 | Input/Output: [[85.119183508466 17] 102.119183508466]
Test Case: 828 | Input/Output: [[37.102958262084286 34] 71.10295826208429]
Test Case: 829 | Input/Output: [[-57.26638626718146 -96] -153.26638626718147]
Test Case: 830 | Input/Output: [[-56.206421921322125 57] 0.793578078677875]
Test Case: 831 | Input/Output: [[61.064880105902574 84] 145.06488010590257]
Test Case: 832 | Input/Output: [[-87.45327056045105 -47] -134.45327056045105]
Test Case: 833 | Input/Output: [[-74.7420912669021 4] -70.7420912669021]
Test Case: 834 | Input/Output: [[29.167652013502646 80] 109.16765201350265]
Test Case: 835 | Input/Output: [[-3.518256331172239 65] 61.48174366882776]
Test Case: 836 | Input/Output: [[-58.947460107866334 -35] -93.94746010786633]
Test Case: 837 | Input/Output: [[-9.454966841086303 10] 0.5450331589136965]
Test Case: 838 | Input/Output: [[-75.72760699737381 -33] -108.72760699737381]
Test Case: 839 | Input/Output: [[-51.64107398305355 -46] -97.64107398305356]
Test Case: 840 | Input/Output: [[18.367438114800123 85] 103.36743811480012]
Test Case: 841 | Input/Output: [[-76.82427228483783 91] 14.175727715162168]
Test Case: 842 | Input/Output: [[-99.22293198835168 15] -84.22293198835168]
Test Case: 843 | Input/Output: [[11.253016537417466 76] 87.25301653741747]
Test Case: 844 | Input/Output: [[-53.67435417281965 -75] -128.67435417281965]
Test Case: 845 | Input/Output: [[-25.941877319591185 -76] -101.94187731959119]
Test Case: 846 | Input/Output: [[28.52727509596471 -90] -61.47272490403529]
Test Case: 847 | Input/Output: [[61.53579781337368 -93] -31.464202186626324]
Test Case: 848 | Input/Output: [[-58.742133022481546 -54] -112.74213302248154]
Test Case: 849 | Input/Output: [[24.602892623783035 -68] -43.397107376216965]
Test Case: 850 | Input/Output: [[-6.7654684780126075 -8] -14.765468478012608]
Test Case: 851 | Input/Output: [[78.8626088924515 69] 147.8626088924515]
Test Case: 852 | Input/Output: [[-67.10118018637961 -56] -123.10118018637961]
Test Case: 853 | Input/Output: [[18.630771580909467 -78] -59.36922841909053]
Test Case: 854 | Input/Output: [[71.03576919579118 -55] 16.035769195791175]
Test Case: 855 | Input/Output: [[35.38107880099432 98] 133.38107880099432]
Test Case: 856 | Input/Output: [[56.865423773212626 -87] -30.134576226787374]
Test Case: 857 | Input/Output: [[94.57334855844394 45] 139.57334855844394]
Test Case: 858 | Input/Output: [[84.4761728724965 -76] 8.476172872496505]
Test Case: 859 | Input/Output: [[-60.88046764491277 -21] -81.88046764491277]
Test Case: 860 | Input/Output: [[-52.59416032784432 35] -17.59416032784432]
Test Case: 861 | Input/Output: [[20.365897460009833 14] 34.36589746000983]
Test Case: 862 | Input/Output: [[-28.419600437471985 98] 69.58039956252802]
Test Case: 863 | Input/Output: [[15.402995813294055 69] 84.40299581329405]
Test Case: 864 | Input/Output: [[-86.6482892208045 -55] -141.6482892208045]
Test Case: 865 | Input/Output: [[-94.05207292786115 1] -93.05207292786115]
Test Case: 866 | Input/Output: [[-57.262477033593925 71] 13.737522966406075]
Test Case: 867 | Input/Output: [[-41.94398622474957 -59] -100.94398622474958]
Test Case: 868 | Input/Output: [[12.94910549283776 17] 29.94910549283776]
Test Case: 869 | Input/Output: [[8.125234333224114 -98] -89.87476566677589]
Test Case: 870 | Input/Output: [[-80.04580239815293 28] -52.04580239815293]
Test Case: 871 | Input/Output: [[-58.6768419779436 -59] -117.67684197794361]
Test Case: 872 | Input/Output: [[10.445887791015181 -40] -29.55411220898482]
Test Case: 873 | Input/Output: [[-21.997120338461414 74] 52.002879661538586]
Test Case: 874 | Input/Output: [[-76.66227697582798 -76] -152.66227697582798]
Test Case: 875 | Input/Output: [[-7.208088635044291 -72] -79.20808863504429]
Test Case: 876 | Input/Output: [[-63.97277623730042 27] -36.97277623730042]
Test Case: 877 | Input/Output: [[-60.539057788766556 -2] -62.539057788766556]
Test Case: 878 | Input/Output: [[-1.8213715654379996 37] 35.178628434562]
Test Case: 879 | Input/Output: [[9.370489660808687 75] 84.37048966080869]
Test Case: 880 | Input/Output: [[-8.394666600079077 -52] -60.39466660007908]
Test Case: 881 | Input/Output: [[-6.610065345021752 -51] -57.61006534502175]
Test Case: 882 | Input/Output: [[56.129039913124814 -35] 21.129039913124814]
Test Case: 883 | Input/Output: [[12.914087000260864 -71] -58.085912999739136]
Test Case: 884 | Input/Output: [[19.331121943640667 -42] -22.668878056359333]
Test Case: 885 | Input/Output: [[-5.779557587211357 56] 50.22044241278864]
Test Case: 886 | Input/Output: [[6.6965074047977 -88] -81.3034925952023]
Test Case: 887 | Input/Output: [[49.105358255511334 -19] 30.105358255511334]
Test Case: 888 | Input/Output: [[24.174322460566884 -46] -21.825677539433116]
Test Case: 889 | Input/Output: [[-89.1343746072208 95] 5.865625392779194]
Test Case: 890 | Input/Output: [[10.73502211675897 26] 36.73502211675897]
Test Case: 891 | Input/Output: [[-31.626308907075227 20] -11.626308907075227]
Test Case: 892 | Input/Output: [[98.12673289136814 96] 194.12673289136814]
Test Case: 893 | Input/Output: [[-61.28002492411806 29] -32.28002492411806]
Test Case: 894 | Input/Output: [[-83.55234839346433 63] -20.552348393464328]
Test Case: 895 | Input/Output: [[51.1149244213799 -78] -26.885075578620103]
Test Case: 896 | Input/Output: [[-6.549756195587662 -96] -102.54975619558766]
Test Case: 897 | Input/Output: [[42.16359704467391 -73] -30.836402955326093]
Test Case: 898 | Input/Output: [[-48.8446280123576 57] 8.155371987642397]
Test Case: 899 | Input/Output: [[91.16582564078254 -82] 9.165825640782543]
Test Case: 900 | Input/Output: [[34.44364054507716 -92] -57.55635945492284]
Test Case: 901 | Input/Output: [[-32.089633645293375 -69] -101.08963364529338]
Test Case: 902 | Input/Output: [[11.16324564195341 -53] -41.83675435804659]
Test Case: 903 | Input/Output: [[96.52967119917022 34] 130.52967119917022]
Test Case: 904 | Input/Output: [[27.500382471463 -63] -35.499617528537]
Test Case: 905 | Input/Output: [[-14.5123556662693 81] 66.4876443337307]
Test Case: 906 | Input/Output: [[-89.15505371634981 40] -49.15505371634981]
Test Case: 907 | Input/Output: [[15.526914454787374 -91] -75.47308554521263]
Test Case: 908 | Input/Output: [[42.2266389501427 -98] -55.7733610498573]
Test Case: 909 | Input/Output: [[-93.84604604958535 81] -12.846046049585354]
Test Case: 910 | Input/Output: [[-33.56981573351857 -51] -84.56981573351857]
Test Case: 911 | Input/Output: [[-58.70681033809184 0] -58.70681033809184]
Test Case: 912 | Input/Output: [[-65.52268270566073 3] -62.52268270566073]
Test Case: 913 | Input/Output: [[7.78535798288533 72] 79.78535798288533]
Test Case: 914 | Input/Output: [[-11.464561488629329 63] 51.53543851137067]
Test Case: 915 | Input/Output: [[40.73037064740987 -19] 21.73037064740987]
Test Case: 916 | Input/Output: [[-30.8657207121624 -2] -32.8657207121624]
Test Case: 917 | Input/Output: [[-76.82305832630914 -96] -172.82305832630914]
Test Case: 918 | Input/Output: [[72.57114233154837 21] 93.57114233154837]
Test Case: 919 | Input/Output: [[64.71276625252568 -94] -29.287233747474318]
Test Case: 920 | Input/Output: [[-55.516287337273674 -93] -148.51628733727367]
Test Case: 921 | Input/Output: [[55.85331457150818 89] 144.85331457150818]
Test Case: 922 | Input/Output: [[-93.49446473858625 -31] -124.49446473858625]
Test Case: 923 | Input/Output: [[-33.32944517886777 50] 16.670554821132228]
Test Case: 924 | Input/Output: [[-22.31484603575464 59] 36.68515396424536]
Test Case: 925 | Input/Output: [[34.32333171251415 -56] -21.676668287485853]
Test Case: 926 | Input/Output: [[47.39651000542483 -94] -46.60348999457517]
Test Case: 927 | Input/Output: [[-45.46892256845776 -3] -48.46892256845776]
Test Case: 928 | Input/Output: [[-78.24072235269621 77] -1.24072235269621]
Test Case: 929 | Input/Output: [[70.70910955992312 29] 99.70910955992312]
Test Case: 930 | Input/Output: [[43.983818465409115 31] 74.98381846540912]
Test Case: 931 | Input/Output: [[-55.204684577787624 67] 11.795315422212376]
Test Case: 932 | Input/Output: [[33.529515011237436 7] 40.529515011237436]
Test Case: 933 | Input/Output: [[83.68793265211636 -97] -13.31206734788364]
Test Case: 934 | Input/Output: [[-5.550640160040388 67] 61.44935983995961]
Test Case: 935 | Input/Output: [[56.25157298407859 33] 89.25157298407859]
Test Case: 936 | Input/Output: [[85.04662870685172 91] 176.04662870685172]
Test Case: 937 | Input/Output: [[75.45515162871217 -2] 73.45515162871217]
Test Case: 938 | Input/Output: [[-38.70639078704847 -28] -66.70639078704846]
Test Case: 939 | Input/Output: [[-4.444829019068905 55] 50.555170980931095]
Test Case: 940 | Input/Output: [[9.823872978093135 -40] -30.176127021906865]
Test Case: 941 | Input/Output: [[83.08297247510339 -33] 50.08297247510339]
Test Case: 942 | Input/Output: [[31.118198736031843 23] 54.11819873603184]
Test Case: 943 | Input/Output: [[-95.73894899359622 -46] -141.73894899359624]
Test Case: 944 | Input/Output: [[-59.08776518011223 -54] -113.08776518011223]
Test Case: 945 | Input/Output: [[7.5569786358238105 27] 34.55697863582381]
Test Case: 946 | Input/Output: [[-72.24614376758132 56] -16.246143767581316]
Test Case: 947 | Input/Output: [[-35.0560753146614 -47] -82.0560753146614]
Test Case: 948 | Input/Output: [[79.81108149592089 39] 118.81108149592089]
Test Case: 949 | Input/Output: [[70.01367268359425 -69] 1.0136726835942511]
Test Case: 950 | Input/Output: [[7.131335172813678 44] 51.13133517281368]
Test Case: 951 | Input/Output: [[33.89093234443024 42] 75.89093234443024]
Test Case: 952 | Input/Output: [[4.560830993872813 85] 89.56083099387281]
Test Case: 953 | Input/Output: [[-92.16298087397765 86] -6.162980873977645]
Test Case: 954 | Input/Output: [[35.0268837200787 -35] 0.026883720078700435]
Test Case: 955 | Input/Output: [[17.799999221623338 26] 43.79999922162334]
Test Case: 956 | Input/Output: [[92.46058578511415 80] 172.46058578511415]
Test Case: 957 | Input/Output: [[26.31403745476824 42] 68.31403745476824]
Test Case: 958 | Input/Output: [[-69.38460632174557 36] -33.384606321745565]
Test Case: 959 | Input/Output: [[-28.861224517781835 3] -25.861224517781835]
Test Case: 960 | Input/Output: [[-88.15613182197129 -87] -175.1561318219713]
Test Case: 961 | Input/Output: [[23.050513002637942 -73] -49.94948699736206]
Test Case: 962 | Input/Output: [[-79.77914797848334 -52] -131.77914797848334]
Test Case: 963 | Input/Output: [[71.97139382356869 -57] 14.97139382356869]
Test Case: 964 | Input/Output: [[0.2854410285877691 54] 54.28544102858777]
Test Case: 965 | Input/Output: [[-86.8498337309677 -80] -166.8498337309677]
Test Case: 966 | Input/Output: [[86.95777258000291 -68] 18.95777258000291]
Test Case: 967 | Input/Output: [[-75.61261044432021 -35] -110.61261044432021]
Test Case: 968 | Input/Output: [[-75.19303295645639 54] -21.193032956456392]
Test Case: 969 | Input/Output: [[55.323083534342516 14] 69.32308353434252]
Test Case: 970 | Input/Output: [[20.029259571319045 10] 30.029259571319045]
Test Case: 971 | Input/Output: [[32.54386556117325 88] 120.54386556117325]
Test Case: 972 | Input/Output: [[-90.3027324109649 -81] -171.3027324109649]
Test Case: 973 | Input/Output: [[-27.97423139452397 75] 47.02576860547603]
Test Case: 974 | Input/Output: [[10.964352056581745 56] 66.96435205658175]
Test Case: 975 | Input/Output: [[85.69361957803952 -51] 34.69361957803952]
Test Case: 976 | Input/Output: [[-47.09004094423839 -32] -79.09004094423838]
Test Case: 977 | Input/Output: [[85.98625109270981 61] 146.9862510927098]
Test Case: 978 | Input/Output: [[1.0014507422747272 -10] -8.998549257725273]
Test Case: 979 | Input/Output: [[-2.796696799271942 59] 56.20330320072806]
Test Case: 980 | Input/Output: [[58.367800244764055 -91] -32.632199755235945]
Test Case: 981 | Input/Output: [[-38.24432676694598 -55] -93.24432676694599]
Test Case: 982 | Input/Output: [[-54.15538915739238 -4] -58.15538915739238]
Test Case: 983 | Input/Output: [[60.564022238197225 -63] -2.435977761802775]
Test Case: 984 | Input/Output: [[-22.899815516412687 -77] -99.89981551641269]
Test Case: 985 | Input/Output: [[-74.25941778141514 -83] -157.25941778141515]
Test Case: 986 | Input/Output: [[-90.79560890938265 55] -35.79560890938265]
Test Case: 987 | Input/Output: [[1.46908942350872 -82] -80.53091057649128]
Test Case: 988 | Input/Output: [[33.28632076360876 -16] 17.286320763608757]
Test Case: 989 | Input/Output: [[12.154662705210455 -74] -61.845337294789545]
Test Case: 990 | Input/Output: [[-98.85446244059139 -8] -106.85446244059139]
Test Case: 991 | Input/Output: [[14.197595715536451 -2] 12.197595715536451]
Test Case: 992 | Input/Output: [[-51.04727641456588 23] -28.04727641456588]
Test Case: 993 | Input/Output: [[47.145897862573634 -50] -2.8541021374263664]
Test Case: 994 | Input/Output: [[80.53217491899335 100] 180.53217491899335]
Test Case: 995 | Input/Output: [[-2.3030951340451224 28] 25.696904865954878]
Test Case: 996 | Input/Output: [[33.314113567642124 -17] 16.314113567642124]
Test Case: 997 | Input/Output: [[-34.890323838371515 -92] -126.89032383837151]
Test Case: 998 | Input/Output: [[97.42188964582598 -49] 48.421889645825985]
Test Case: 999 | Input/Output: [[-45.49299302050773 97] 51.50700697949227]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -79 -13 -72 13 -104 -85 -46 -64 48 118 -74 -109 -21 70 -35 -108
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 56264.0
Test mean error for best: 28.13200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -36.3143767389
Correct output: -102.9763195877 | Program output: -52.9763195877
Correct output: 133.2733399729 | Program output: 94.2733399729 
Correct output: -110.3937581489 | Program output: -13.3937581489
Correct output: -30.9860347971 | Program output: 17.0139652029 
Correct output: 134.5614254538 | Program output: 67.5614254538 
Correct output: -19.0348050459 | Program output: -74.0348050459
Correct output: 61.3041891932  | Program output: 15.3041891932 
Correct output: -61.8724070197 | Program output: 5.1275929803  
Correct output: -112.5263460948 | Program output: -93.5263460948
Correct output: 41.2299559551  | Program output: 54.2299559551 
Correct output: -61.4991211175 | Program output: -86.4991211175
Correct output: -146.9426549359 | Program output: -72.9426549359
Correct output: -111.8394117999 | Program output: -34.8394117999
Correct output: -60.3162671105 | Program output: -77.3162671105
Correct output: -2.5578290415  | Program output: -54.5578290415
Correct output: 133.2081034946 | Program output: 91.2081034946 
Correct output: -68.1372059073 | Program output: 18.8627940927 
Correct output: -33.4443516435 | Program output: -90.4443516435
Correct output: -12.3607505433 | Program output: -49.3607505433
Correct output: -37.599216489  | Program output: -99.599216489 
Correct output: 135.8818814541 | Program output: 52.8818814541 
Correct output: 12.537302974   | Program output: 37.537302974  
Correct output: 26.3991940027  | Program output: 36.3991940027 
Correct output: -21.9441174358 | Program output: -66.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction float_cos} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_dup_items} {:instruction in1} {:instruction float_mult} {:instruction integer_add} {:instruction float_yank} {:instruction integer_min} {:instruction print_float} {:instruction integer_max} {:instruction integer_inc} {:instruction tagged_978} {:instruction float_tan} {:instruction float_max} {:instruction integer_div} {:instruction 9} {:instruction float_swap} {:instruction float_flush} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_dup_times} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_div} {:instruction integer_add} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_add} {:instruction float_tan} {:instruction integer_dup_items} {:instruction float_yankdup} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_inc} {:instruction float_cos} {:instruction integer_add} {:instruction float_dec} {:instruction float_max} {:instruction float_dup} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_dec} {:instruction integer_div} {:instruction integer_add} {:instruction integer_min} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction 11} {:instruction integer_dup_items} {:instruction integer_flush} {:instruction float_shove} {:instruction integer_flush} {:instruction float_dec} {:instruction float_pop} {:instruction float_tan} {:instruction float_frominteger} {:instruction float_swap} {:instruction float_flush} {:instruction float_max} {:instruction float_shove} {:instruction -94.82469034536784} {:instruction integer_mult} {:instruction integer_shove} {:instruction float_sub} {:instruction float_rot} {:instruction integer_flush} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_max} {:instruction integer_sub} {:instruction -19} {:instruction float_shove} {:instruction integer_shove} {:instruction float_mult} {:instruction tag_float_293} {:instruction integer_min} {:instruction integer_fromfloat})
Best program: (float_cos float_cos print_float float_stackdepth integer_dup_items in1 float_mult integer_add float_yank integer_min print_float integer_max integer_inc tagged_978 float_tan float_max integer_div 9 float_swap float_flush float_add integer_add float_swap float_yank integer_pop integer_dup_times integer_sub float_pop integer_div integer_add integer_yank integer_fromfloat float_add float_tan integer_dup_items float_yankdup integer_mult integer_div integer_inc float_sin integer_pop integer_mult float_inc float_cos integer_add float_dec float_max float_dup integer_mod integer_shove integer_mult float_frominteger integer_stackdepth float_inc float_dec integer_div integer_add integer_min float_dup_times integer_dup_times integer_min integer_fromfloat integer_yankdup float_yankdup 11 integer_dup_items integer_flush float_shove integer_flush float_dec float_pop float_tan float_frominteger float_swap float_flush float_max float_shove -94.82469034536784 integer_mult integer_shove float_sub float_rot integer_flush integer_inc float_dup_times integer_max integer_sub -19 float_shove integer_shove float_mult tag_float_293 integer_min integer_fromfloat)
Errors: [7.0 2 50.0 2 39.0 3 97.0 2 48.0 12 67.0 3 55.0 2 46.0 2 67.0 12 19.0 3 13.0 2 25.0 2 74.0 3 77.0 3 17.0 2 52.0 2 42.0 3 87.0 10 57.0 2 37.0 2 62.0 2 83.0 3 25.0 2 10.0 1 45.0 2]
Total: 1285.0
Mean: 25.7
Genome size: 94
Size: 95
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 18311.992053399998
Median total errors in population: 25348.0
Error averages by case: (704.0810950000001 13.372 727.543245699998 13.976 729.1259735000002 13.447 729.2890494999991 13.944 709.4018843999995 13.761 732.8535508000008 13.469 712.2578052000018 13.235 711.033829400002 12.482 713.4809084999996 13.7 728.6209025000028 14.044 712.1943801999984 12.657 719.0048332000011 13.413 739.6586643000018 14.154 731.0369123000023 14.24 716.3726408999985 13.211 710.195149399999 12.42 729.2828950000014 13.321 717.4405811999997 13.647 713.6084489000006 13.496 710.2229549000018 13.244 716.5981227000019 12.605 731.7970607000007 13.446 708.5550465999994 11.655 712.6016975999988 12.409 713.0284209999993 13.358)
Error minima by case: (0.5056 2 2.9763 2 5.7267 3 10.3938 2 0.7261 8 32.4076 3 0.9652 2 1.2945 2 0.1276 8 12.5263 3 0.6654 2 0.5009 2 4.0573 3 8.8394 3 0.3163 2 0.2488 2 8.7919 3 0.9927 8 0.5556 2 2.3608 2 1.3525 2 28.3302 3 0.4627 2 0.3992 1 1.9441 2)
Average genome size in population (length): 50.801
Average program size in population (points): 51.801
Average percent parens in population: 0.041
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.328
Error (vector) diversity:			 0.355
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1274573
--- Timings ---
Current time: 1529616056556 milliseconds
Total Time:           4.1 seconds
Initialization:       0.1 seconds,  2.8%
Reproduction:         0.6 seconds, 15.8%
Fitness Testing:      3.3 seconds, 81.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 56238.0
Test mean error for best: 28.11900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -35.3143767389
Correct output: -102.9763195877 | Program output: -51.9763195877
Correct output: 133.2733399729 | Program output: 95.2733399729 
Correct output: -110.3937581489 | Program output: -12.3937581489
Correct output: -30.9860347971 | Program output: 18.0139652029 
Correct output: 134.5614254538 | Program output: 68.5614254538 
Correct output: -19.0348050459 | Program output: -73.0348050459
Correct output: 61.3041891932  | Program output: 16.3041891932 
Correct output: -61.8724070197 | Program output: 6.1275929803  
Correct output: -112.5263460948 | Program output: -92.5263460948
Correct output: 41.2299559551  | Program output: 55.2299559551 
Correct output: -61.4991211175 | Program output: -85.4991211175
Correct output: -146.9426549359 | Program output: -71.9426549359
Correct output: -111.8394117999 | Program output: -33.8394117999
Correct output: -60.3162671105 | Program output: -76.3162671105
Correct output: -2.5578290415  | Program output: -53.5578290415
Correct output: 133.2081034946 | Program output: 92.2081034946 
Correct output: -68.1372059073 | Program output: 19.8627940927 
Correct output: -33.4443516435 | Program output: -89.4443516435
Correct output: -12.3607505433 | Program output: -48.3607505433
Correct output: -37.599216489  | Program output: -98.599216489 
Correct output: 135.8818814541 | Program output: 53.8818814541 
Correct output: 12.537302974   | Program output: 38.537302974  
Correct output: 26.3991940027  | Program output: 37.3991940027 
Correct output: -21.9441174358 | Program output: -65.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [6.0 2 51.0 3 38.0 3 98.0 2 49.0 12 66.0 3 54.0 2 45.0 2 68.0 12 20.0 2 14.0 2 24.0 2 75.0 3 78.0 3 16.0 2 51.0 2 41.0 3 88.0 11 56.0 2 36.0 2 61.0 2 82.0 2 26.0 2 11.0 2 44.0 2]
Total: 1283.0
Mean: 25.66
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 6400.462976799995
Median total errors in population: 1999.1404000000002
Error averages by case: (212.0174829000008 10.712 261.22461480000095 10.999 274.1787121000005 10.904 268.8193224999993 10.745 224.53796410000018 12.483 277.1987698000013 10.983 230.2593423999993 10.366 231.6929035000014 9.939 234.4488466999996 12.356 264.19023029999926 11.129 229.16483920000087 10.195 238.54444839999874 10.647 289.38196050000244 11.379 270.094500999999 11.436 234.52603590000095 10.358 222.84196250000053 9.73 274.1093506999986 10.741 247.97180719999983 11.907 236.96370480000041 10.864 221.08017959999916 10.416 240.84329689999933 10.083 280.3637279000002 10.97 219.3983109999996 9.354 220.01746630000125 9.653 227.65019579999895 10.594)
Error minima by case: (0.5056 2 2.5478 2 36.6872 3 9.9652 2 0.7261 8 37.9753 3 0.9652 2 1.2945 2 0.1276 8 12.0978 2 0.6654 2 0.5009 2 0.0573 3 8.8394 3 0.4166 2 0.2488 2 36.622 3 2.6097 8 0.5556 2 1.6392 2 1.3525 2 39.2957 2 0.5005 2 0.3992 1 1.9441 2)
Average genome size in population (length): 57.191
Average program size in population (points): 58.191
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.498
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.773
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.773
Total error diversity:				 0.288
Error (vector) diversity:			 0.308
Behavioral diversity:				 0.331
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2709146
--- Timings ---
Current time: 1529616060740 milliseconds
Total Time:           8.8 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         2.9 seconds, 33.6%
Fitness Testing:      4.9 seconds, 56.3%
Report:               0.8 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 56238.0
Test mean error for best: 28.11900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -35.3143767389
Correct output: -102.9763195877 | Program output: -51.9763195877
Correct output: 133.2733399729 | Program output: 95.2733399729 
Correct output: -110.3937581489 | Program output: -12.3937581489
Correct output: -30.9860347971 | Program output: 18.0139652029 
Correct output: 134.5614254538 | Program output: 68.5614254538 
Correct output: -19.0348050459 | Program output: -73.0348050459
Correct output: 61.3041891932  | Program output: 16.3041891932 
Correct output: -61.8724070197 | Program output: 6.1275929803  
Correct output: -112.5263460948 | Program output: -92.5263460948
Correct output: 41.2299559551  | Program output: 55.2299559551 
Correct output: -61.4991211175 | Program output: -85.4991211175
Correct output: -146.9426549359 | Program output: -71.9426549359
Correct output: -111.8394117999 | Program output: -33.8394117999
Correct output: -60.3162671105 | Program output: -76.3162671105
Correct output: -2.5578290415  | Program output: -53.5578290415
Correct output: 133.2081034946 | Program output: 92.2081034946 
Correct output: -68.1372059073 | Program output: 19.8627940927 
Correct output: -33.4443516435 | Program output: -89.4443516435
Correct output: -12.3607505433 | Program output: -48.3607505433
Correct output: -37.599216489  | Program output: -98.599216489 
Correct output: 135.8818814541 | Program output: 53.8818814541 
Correct output: 12.537302974   | Program output: 38.537302974  
Correct output: 26.3991940027  | Program output: 37.3991940027 
Correct output: -21.9441174358 | Program output: -65.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_flush} {:instruction integer_rot} {:instruction float_yank} {:instruction float_mult} {:instruction float_inc} {:instruction integer_max} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_shove float_max integer_dup_times float_dup_items float_shove integer_flush integer_rot float_yank float_mult float_inc integer_max integer_mult float_dup_items float_sub integer_sub integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [6.0 2 51.0 3 38.0 3 98.0 2 49.0 12 66.0 3 54.0 2 45.0 2 68.0 12 20.0 2 14.0 2 24.0 2 75.0 3 78.0 3 16.0 2 51.0 2 41.0 3 88.0 11 56.0 2 36.0 2 61.0 2 82.0 2 26.0 2 11.0 2 44.0 2]
Total: 1283.0
Mean: 25.66
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 4109.768113000003
Median total errors in population: 1307.0
Error averages by case: (121.31376210000015 5.755 163.84482910000006 5.904 157.53639490000006 6.183 194.95266079999968 5.68 153.69191969999991 12.652 175.85510450000046 6.262 159.76209989999973 5.674 150.81984160000016 5.279 166.35480330000027 12.51 145.41549269999976 6.469 132.4386567999999 5.495 141.62295749999996 5.727 185.85488830000062 6.593 182.34726289999972 6.608 134.71278000000027 5.664 155.4240188 5.45 159.45681320000006 6.225 184.32397770000014 11.014 163.27416699999998 5.8 144.36036839999983 5.685 167.96477589999975 5.559 186.20749910000012 6.164 138.70889379999994 5.166 127.61504159999998 4.716 151.9621033999997 5.713)
Error minima by case: (0.5056 2 26.9763 2 38.0 3 12.3938 2 0.7261 8 33.0 3 5.0348 2 11.17 2 0.1276 9 18.0 2 12.0 2 10.366 2 46.9427 3 8.8394 3 9.1831 2 0.3188 2 41.0 3 13.8628 9 0.5556 2 1.6392 2 1.3525 2 17.0 2 9.5373 2 9.0 1 3.0909 2)
Average genome size in population (length): 54.278
Average program size in population (points): 55.278
Average percent parens in population: 0.024
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9865
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.686
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.686
Total error diversity:				 0.117
Error (vector) diversity:			 0.124
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4069446
--- Timings ---
Current time: 1529616064343 milliseconds
Total Time:          12.2 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         4.5 seconds, 36.8%
Fitness Testing:      6.6 seconds, 53.6%
Report:               1.1 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 56238.0
Test mean error for best: 28.11900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -35.3143767389
Correct output: -102.9763195877 | Program output: -51.9763195877
Correct output: 133.2733399729 | Program output: 95.2733399729 
Correct output: -110.3937581489 | Program output: -12.3937581489
Correct output: -30.9860347971 | Program output: 18.0139652029 
Correct output: 134.5614254538 | Program output: 68.5614254538 
Correct output: -19.0348050459 | Program output: -73.0348050459
Correct output: 61.3041891932  | Program output: 16.3041891932 
Correct output: -61.8724070197 | Program output: 6.1275929803  
Correct output: -112.5263460948 | Program output: -92.5263460948
Correct output: 41.2299559551  | Program output: 55.2299559551 
Correct output: -61.4991211175 | Program output: -85.4991211175
Correct output: -146.9426549359 | Program output: -71.9426549359
Correct output: -111.8394117999 | Program output: -33.8394117999
Correct output: -60.3162671105 | Program output: -76.3162671105
Correct output: -2.5578290415  | Program output: -53.5578290415
Correct output: 133.2081034946 | Program output: 92.2081034946 
Correct output: -68.1372059073 | Program output: 19.8627940927 
Correct output: -33.4443516435 | Program output: -89.4443516435
Correct output: -12.3607505433 | Program output: -48.3607505433
Correct output: -37.599216489  | Program output: -98.599216489 
Correct output: 135.8818814541 | Program output: 53.8818814541 
Correct output: 12.537302974   | Program output: 38.537302974  
Correct output: 26.3991940027  | Program output: 37.3991940027 
Correct output: -21.9441174358 | Program output: -65.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_sub float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [6.0 2 51.0 3 38.0 3 98.0 2 49.0 12 66.0 3 54.0 2 45.0 2 68.0 12 20.0 2 14.0 2 24.0 2 75.0 3 78.0 3 16.0 2 51.0 2 41.0 3 88.0 11 56.0 2 36.0 2 61.0 2 82.0 2 26.0 2 11.0 2 44.0 2]
Total: 1283.0
Mean: 25.66
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 3558.5228827
Median total errors in population: 1285.0
Error averages by case: (101.449116 3.31 139.704169 3.429 130.01271540000002 4.116 181.9687696 3.345 136.54326070000002 12.452 155.5719146 4.114 144.5560101 3.312 135.8085408 3.152 153.4545157 12.387 111.94337510000001 4.196 105.14389170000001 3.196 117.8283802 3.303 161.6087319 4.256 164.0218375 4.262 110.6206504 3.295 141.7886742 3.255 132.70276530000004 4.113 171.7748699 10.661 146.418694 3.295 128.3436697 3.334 150.9396756 3.245 169.6168787 4.038 115.7744967 3.123 102.47741559999999 2.369 135.57386430000003 3.318)
Error minima by case: (1.7077 2 25.4439 2 38.0 3 32.8613 2 3.3794 8 66.0 3 8.5718 2 45.0 2 15.66 9 19.0 2 13.0 2 16.0333 2 69.4102 3 34.307 3 16.0 2 2.5578 2 41.0 3 9.3952 9 5.8377 2 12.3608 2 9.9926 2 82.0 2 9.5373 2 10.0 1 5.6625 2)
Average genome size in population (length): 46.191
Average program size in population (points): 47.191
Average percent parens in population: 0.033
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.50025
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5226485
--- Timings ---
Current time: 1529616067778 milliseconds
Total Time:          15.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         5.8 seconds, 37.0%
Fitness Testing:      8.3 seconds, 52.8%
Report:               1.5 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 56238.0
Test mean error for best: 28.11900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -35.3143767389
Correct output: -102.9763195877 | Program output: -51.9763195877
Correct output: 133.2733399729 | Program output: 95.2733399729 
Correct output: -110.3937581489 | Program output: -12.3937581489
Correct output: -30.9860347971 | Program output: 18.0139652029 
Correct output: 134.5614254538 | Program output: 68.5614254538 
Correct output: -19.0348050459 | Program output: -73.0348050459
Correct output: 61.3041891932  | Program output: 16.3041891932 
Correct output: -61.8724070197 | Program output: 6.1275929803  
Correct output: -112.5263460948 | Program output: -92.5263460948
Correct output: 41.2299559551  | Program output: 55.2299559551 
Correct output: -61.4991211175 | Program output: -85.4991211175
Correct output: -146.9426549359 | Program output: -71.9426549359
Correct output: -111.8394117999 | Program output: -33.8394117999
Correct output: -60.3162671105 | Program output: -76.3162671105
Correct output: -2.5578290415  | Program output: -53.5578290415
Correct output: 133.2081034946 | Program output: 92.2081034946 
Correct output: -68.1372059073 | Program output: 19.8627940927 
Correct output: -33.4443516435 | Program output: -89.4443516435
Correct output: -12.3607505433 | Program output: -48.3607505433
Correct output: -37.599216489  | Program output: -98.599216489 
Correct output: 135.8818814541 | Program output: 53.8818814541 
Correct output: 12.537302974   | Program output: 38.537302974  
Correct output: 26.3991940027  | Program output: 37.3991940027 
Correct output: -21.9441174358 | Program output: -65.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction integer_mod} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_sub} {:instruction float_cos} {:instruction float_pop} {:instruction float_yank} {:instruction integer_inc} {:instruction float_swap} {:instruction float_rot} {:instruction integer_fromfloat} {:instruction integer_div} {:instruction integer_min} {:instruction -10.349618627970898} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_mult print_integer integer_fromfloat float_shove integer_mod float_yankdup integer_yankdup float_tan integer_shove integer_max integer_sub float_cos float_pop float_yank integer_inc float_swap float_rot integer_fromfloat integer_div integer_min -10.349618627970898 integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [6.0 2 51.0 3 38.0 3 98.0 2 49.0 12 66.0 3 54.0 2 45.0 2 68.0 12 20.0 2 14.0 2 24.0 2 75.0 3 78.0 3 16.0 2 51.0 2 41.0 3 88.0 11 56.0 2 36.0 2 61.0 2 82.0 2 26.0 2 11.0 2 44.0 2]
Total: 1283.0
Mean: 25.66
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 3294.5995376
Median total errors in population: 1285.0
Error averages by case: (89.1609898 3.042 131.27199660000002 3.438 117.7729953 3.93 174.13304350000004 3.103 128.2428426 12.274 143.3987538 3.932 132.9453307 3.041 123.9485099 2.952 145.6817338 12.24 103.0704088 3.7 96.3148619 2.953 105.7220858 3.033 153.31173869999998 4.015 155.9044803 4.02 98.4129858 3.022 130.1721156 2.976 120.5194845 3.931 163.96609940000002 10.779 134.8267632 3.031 116.49861109999999 3.059 139.4091654 2.979 158.04258640000003 3.601 107.16877460000002 2.878 93.53784580000001 2.366 123.82433430000002 3.046)
Error minima by case: (6.0 2 49.0 2 38.0 2 96.0 2 30.1316 11 66.0 3 0.9815 2 45.0 2 61.23 9 18.0 2 7.0163 2 24.0 2 73.0 3 76.0 3 16.0 2 1.9382 2 41.0 3 68.1372 10 13.4281 2 7.6555 2 17.583 2 82.0 2 4.9837 2 9.0 1 1.9279 2)
Average genome size in population (length): 37.889
Average program size in population (points): 38.889
Average percent parens in population: 0.036
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.008375
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 90
Genome diversity (% unique Plush genomes):	 0.563
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 90
Syntactic diversity (% unique Push programs):	 0.563
Total error diversity:				 0.017
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6175099
--- Timings ---
Current time: 1529616070975 milliseconds
Total Time:          19.0 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.1 seconds, 37.1%
Fitness Testing:     10.0 seconds, 52.6%
Report:               1.8 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 56238.0
Test mean error for best: 28.11900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -35.3143767389
Correct output: -102.9763195877 | Program output: -51.9763195877
Correct output: 133.2733399729 | Program output: 95.2733399729 
Correct output: -110.3937581489 | Program output: -12.3937581489
Correct output: -30.9860347971 | Program output: 18.0139652029 
Correct output: 134.5614254538 | Program output: 68.5614254538 
Correct output: -19.0348050459 | Program output: -73.0348050459
Correct output: 61.3041891932  | Program output: 16.3041891932 
Correct output: -61.8724070197 | Program output: 6.1275929803  
Correct output: -112.5263460948 | Program output: -92.5263460948
Correct output: 41.2299559551  | Program output: 55.2299559551 
Correct output: -61.4991211175 | Program output: -85.4991211175
Correct output: -146.9426549359 | Program output: -71.9426549359
Correct output: -111.8394117999 | Program output: -33.8394117999
Correct output: -60.3162671105 | Program output: -76.3162671105
Correct output: -2.5578290415  | Program output: -53.5578290415
Correct output: 133.2081034946 | Program output: 92.2081034946 
Correct output: -68.1372059073 | Program output: 19.8627940927 
Correct output: -33.4443516435 | Program output: -89.4443516435
Correct output: -12.3607505433 | Program output: -48.3607505433
Correct output: -37.599216489  | Program output: -98.599216489 
Correct output: 135.8818814541 | Program output: 53.8818814541 
Correct output: 12.537302974   | Program output: 38.537302974  
Correct output: 26.3991940027  | Program output: 37.3991940027 
Correct output: -21.9441174358 | Program output: -65.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_rot} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_integer} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_stackdepth integer_rot float_rot integer_rot integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc print_float print_integer float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [6.0 2 51.0 3 38.0 3 98.0 2 49.0 12 66.0 3 54.0 2 45.0 2 68.0 12 20.0 2 14.0 2 24.0 2 75.0 3 78.0 3 16.0 2 51.0 2 41.0 3 88.0 11 56.0 2 36.0 2 61.0 2 82.0 2 26.0 2 11.0 2 44.0 2]
Total: 1283.0
Mean: 25.66
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2828.0788519000002
Median total errors in population: 1283.0
Error averages by case: (69.83825660000001 2.842 111.8456323 3.752 100.33985530000001 3.733 155.6023845 2.876 109.69838619999999 12.219 126.3895202 3.733 114.4574589 2.837 106.42134469999999 2.753 127.4313479 12.201 83.07542439999999 2.962 77.338492 2.763 86.6426527 2.829 134.4295765 3.795 137.0086122 3.807 79.1992268 2.82 111.6338258 2.787 103.13275860000002 3.733 146.0485487 11.244 116.3448595 2.824 97.70518650000001 2.856 121.00586659999999 2.791 141.27932030000002 2.869 88.323717 2.701 74.4578902 2.698 105.16270750000001 2.841)
Error minima by case: (6.0 2 34.5741 2 38.0 3 41.9916 2 28.9721 9 66.0 3 17.0696 2 45.0 2 4.0105 8 19.0 2 13.0 2 4.3837 2 74.0 3 43.4372 3 5.5666 2 1.1157 2 41.0 3 0.265 10 31.8887 2 10.7215 2 28.2837 2 82.0 2 9.8686 1 10.0 1 20.8882 2)
Average genome size in population (length): 30.393
Average program size in population (points): 31.393
Average percent parens in population: 0.034
Minimum age in population: 5.0
Maximum age in population: 9.375
Average age in population: 7.5561875
Median age in population: 7.625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 171
Genome diversity (% unique Plush genomes):	 0.487
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 171
Syntactic diversity (% unique Push programs):	 0.487
Total error diversity:				 0.013
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6935049
--- Timings ---
Current time: 1529616073733 milliseconds
Total Time:          21.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.2 seconds, 37.7%
Fitness Testing:     11.3 seconds, 52.1%
Report:               2.1 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 56238.0
Test mean error for best: 28.11900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -35.3143767389
Correct output: -102.9763195877 | Program output: -51.9763195877
Correct output: 133.2733399729 | Program output: 95.2733399729 
Correct output: -110.3937581489 | Program output: -12.3937581489
Correct output: -30.9860347971 | Program output: 18.0139652029 
Correct output: 134.5614254538 | Program output: 68.5614254538 
Correct output: -19.0348050459 | Program output: -73.0348050459
Correct output: 61.3041891932  | Program output: 16.3041891932 
Correct output: -61.8724070197 | Program output: 6.1275929803  
Correct output: -112.5263460948 | Program output: -92.5263460948
Correct output: 41.2299559551  | Program output: 55.2299559551 
Correct output: -61.4991211175 | Program output: -85.4991211175
Correct output: -146.9426549359 | Program output: -71.9426549359
Correct output: -111.8394117999 | Program output: -33.8394117999
Correct output: -60.3162671105 | Program output: -76.3162671105
Correct output: -2.5578290415  | Program output: -53.5578290415
Correct output: 133.2081034946 | Program output: 92.2081034946 
Correct output: -68.1372059073 | Program output: 19.8627940927 
Correct output: -33.4443516435 | Program output: -89.4443516435
Correct output: -12.3607505433 | Program output: -48.3607505433
Correct output: -37.599216489  | Program output: -98.599216489 
Correct output: 135.8818814541 | Program output: 53.8818814541 
Correct output: 12.537302974   | Program output: 38.537302974  
Correct output: 26.3991940027  | Program output: 37.3991940027 
Correct output: -21.9441174358 | Program output: -65.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_flush} {:instruction float_pop} {:instruction float_yank} {:instruction integer_inc} {:instruction float_swap} {:instruction float_rot} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_min} {:instruction -10.349618627970898} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_shove float_max integer_dup_times float_dup_items float_shove integer_flush float_pop float_yank integer_inc float_swap float_rot integer_inc integer_div integer_min -10.349618627970898 integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [6.0 2 51.0 3 38.0 3 98.0 2 49.0 12 66.0 3 54.0 2 45.0 2 68.0 12 20.0 2 14.0 2 24.0 2 75.0 3 78.0 3 16.0 2 51.0 2 41.0 3 88.0 11 56.0 2 36.0 2 61.0 2 82.0 2 26.0 2 11.0 2 44.0 2]
Total: 1283.0
Mean: 25.66
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2729.1569654
Median total errors in population: 1283.0
Error averages by case: (65.70292389999999 2.753 108.0339947 3.731 96.0147007 3.678 152.1329636 2.791 105.9997491 12.188 122.31380589999999 3.678 110.705801 2.756 102.3578786 2.686 123.88950200000001 12.174 78.97659279999999 2.815 73.2322768 2.702 82.6554522 2.754 130.6337001 3.72 133.37766739999998 3.732 75.14045540000001 2.742 107.8517897 2.704 98.82555550000001 3.675 142.65150620000003 11.264 112.60505320000001 2.743 93.8047802 2.764 117.3053469 2.707 137.2506555 2.751 84.390868 2.643 70.38169380000001 2.694 101.32525220000001 2.752)
Error minima by case: (6.0 2 50.0 2 38.0 3 97.0 2 30.0209 8 66.0 3 20.0134 2 45.0 2 59.604 9 19.0 2 13.0 2 24.0 2 74.0 3 77.0 3 16.0 2 0.3188 2 41.0 3 68.1504 10 32.8298 2 13.147 2 38.4019 2 82.0 2 12.4691 2 10.0 1 20.4828 2)
Average genome size in population (length): 30.088
Average program size in population (points): 31.088
Average percent parens in population: 0.033
Minimum age in population: 6.0
Maximum age in population: 11.03125
Average age in population: 9.02171875
Median age in population: 9.09375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 118
Genome diversity (% unique Plush genomes):	 0.58
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 118
Syntactic diversity (% unique Push programs):	 0.58
Total error diversity:				 0.011
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7687274
--- Timings ---
Current time: 1529616076997 milliseconds
Total Time:          25.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.8 seconds, 39.3%
Fitness Testing:     12.7 seconds, 50.7%
Report:               2.4 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2850.3239427
Median total errors in population: 1283.0
Error averages by case: (70.73227690000002 2.819 112.6720312 3.803 100.9847178 3.738 156.49828349999999 2.863 110.7946051 12.187 127.0845821 3.73 115.4785564 2.818 107.29281040000001 2.744 128.4717188 12.176 83.8086812 2.879 78.3285877 2.759 87.47609200000001 2.818 135.1719301 3.791 137.8626204 3.8 80.021275 2.805 112.69903330000001 2.763 103.7805221 3.735 147.10545399999998 11.269 117.3281468 2.809 98.7092304 2.829 121.983992 2.762 142.0005434 2.811 89.42650970000001 2.694 75.48809539999999 2.75 106.155647 2.816)
Error minima by case: (5.0 2 11.3162 2 37.0 3 18.7336 1 31.3327 10 65.0 3 19.3815 2 44.0 2 9.7119 9 19.0 2 13.0 2 10.0852 2 55.2825 3 20.1792 3 11.2681 2 2.9045 1 40.0 2 3.4471 10 33.791 2 12.7074 2 33.9851 1 81.0 2 12.1906 2 10.0 1 22.2908 2)
Average genome size in population (length): 29.845
Average program size in population (points): 30.845
Average percent parens in population: 0.034
Minimum age in population: 7.5
Maximum age in population: 12.28125
Average age in population: 10.5415
Median age in population: 10.609375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 72
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 72
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.011
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8433424
--- Timings ---
Current time: 1529616080084 milliseconds
Total Time:          28.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.3 seconds, 40.1%
Fitness Testing:     14.0 seconds, 49.9%
Report:               2.7 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2899.0969257
Median total errors in population: 1283.0
Error averages by case: (72.70701990000002 2.876 114.7886453 3.839 102.8359403 3.77 158.4800377 2.904 112.64525359999999 12.248 128.9137273 3.772 117.25734560000002 2.874 109.051877 2.786 130.41429449999998 12.224 86.0311472 2.937 80.1630191 2.809 89.5618843 2.875 137.26124070000003 3.823 139.9076016 3.845 82.1146532 2.861 114.3969936 2.817 105.6239146 3.763 149.02366690000002 11.341 119.1655389 2.862 100.50503749999999 2.891 123.83108330000002 2.821 143.72311100000002 2.859 91.19553549999999 2.736 77.3212871 2.799 107.97206999999999 2.873)
Error minima by case: (5.0 2 50.0 2 37.0 3 97.0 1 30.0209 8 65.0 3 20.0134 2 44.0 2 60.604 9 19.0 2 13.0 2 23.0 2 74.0 3 77.0 3 15.0 2 1.3188 1 40.0 2 68.1504 10 32.8298 2 13.147 2 38.4019 1 81.0 2 10.997 2 10.0 1 21.4828 2)
Average genome size in population (length): 29.728
Average program size in population (points): 30.728
Average percent parens in population: 0.034
Minimum age in population: 8.5
Maximum age in population: 13.859375
Average age in population: 12.054953125
Median age in population: 12.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 59
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.013
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 9176624
--- Timings ---
Current time: 1529616082981 milliseconds
Total Time:          31.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.5 seconds, 40.4%
Fitness Testing:     15.4 seconds, 49.7%
Report:               3.0 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2789.157776
Median total errors in population: 1283.0
Error averages by case: (68.63832219999999 2.764 110.926646 3.705 97.79885320000001 3.684 154.88648100000003 2.768 107.9616654 12.177 124.00942939999999 3.675 113.497763 2.763 104.206915 2.683 125.42169340000001 12.167 81.960746 2.82 75.2167666 2.703 85.5326916 2.765 133.45457860000002 3.731 136.1893722 3.747 78.050326 2.752 110.65980900000001 2.67 100.60672279999999 3.641 144.5399678 11.249 115.396582 2.755 96.6544148 2.773 120.0798918 2.67 138.9880704 2.796 86.3913812 2.645 72.379105 2.694 104.15358160000001 2.759)
Error minima by case: (5.0 2 50.0 2 37.0 3 97.0 1 32.3327 11 65.0 3 20.3815 2 44.0 2 63.2191 12 19.0 2 13.0 2 23.0 2 74.0 3 77.0 3 15.0 2 3.9045 1 40.0 2 69.4839 10 34.791 2 13.7074 2 38.9459 1 81.0 2 11.1906 2 10.0 1 23.2908 2)
Average genome size in population (length): 29.964
Average program size in population (points): 30.964
Average percent parens in population: 0.034
Minimum age in population: 10.4375
Maximum age in population: 15.40625
Average age in population: 13.5172578125
Median age in population: 13.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.011
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 9925724
--- Timings ---
Current time: 1529616085873 milliseconds
Total Time:          33.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.8 seconds, 40.7%
Fitness Testing:     16.7 seconds, 49.3%
Report:               3.3 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float print_float integer_dup integer_min integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2558.1320247
Median total errors in population: 1283.0
Error averages by case: (58.4502728 2.662 101.5453892 3.415 88.9781342 3.591 146.01480660000001 2.461 99.5641232 12.173 115.4416928 3.588 103.86855229999999 2.663 95.45111510000001 2.604 117.5815611 12.155 72.2289392 2.705 66.5717272 2.621 75.50791199999999 2.662 124.2933555 3.635 127.09625229999999 3.642 67.9387291 2.651 101.04702929999999 2.386 91.8149981 3.355 136.4946872 11.233 105.7518572 2.65 86.8472264 2.672 110.4860121 2.378 130.5652161 2.884 77.8526748 2.564 63.7061179 2.617 94.405643 2.661)
Error minima by case: (1.2728 2 50.0 2 37.0 3 79.8066 1 0.3989 7 65.0 3 11.5523 2 44.0 2 31.2853 9 19.0 2 13.0 2 23.0 2 74.0 3 77.0 3 15.0 2 28.0293 1 40.0 2 37.5501 10 2.8572 2 18.2264 2 7.0121 1 81.0 2 11.5504 2 10.0 1 8.643 2)
Average genome size in population (length): 29.866
Average program size in population (points): 30.866
Average percent parens in population: 0.034
Minimum age in population: 12.0
Maximum age in population: 16.9375
Average age in population: 15.0148671875
Median age in population: 15.029296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 98
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 98
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.013
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 10672374
--- Timings ---
Current time: 1529616088764 milliseconds
Total Time:          36.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.0 seconds, 40.9%
Fitness Testing:     18.1 seconds, 49.2%
Report:               3.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_yank} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_cos} {:instruction in1} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup float_yank integer_min integer_mult float_dup_times float_cos in1 float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_swap float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2411.1770613000003
Median total errors in population: 1276.0
Error averages by case: (52.032715 2.606 96.53362630000001 2.825 82.5772148 3.545 141.2465859 1.864 94.4884561 12.153 109.207459 3.544 97.6601706 2.608 89.0916225 2.557 112.61954589999999 12.136 67.07171590000002 2.651 61.1405638 2.561 69.21503150000001 2.609 119.44474740000001 3.597 122.22773910000001 3.592 61.6060531 2.601 94.7739403 1.793 85.4310549 2.768 131.6516167 11.199 99.5917929 2.605 80.529207 2.613 104.3546586 1.785 124.4278399 3.366 72.55214439999999 2.513 58.2868578 2.559 88.1557019 2.609)
Error minima by case: (4.0 2 50.0 2 36.0 3 97.0 1 31.6568 10 64.0 3 18.3226 2 13.4909 2 62.8603 11 19.0 2 6.5833 2 22.0 2 74.0 3 77.0 2 14.0 2 1.5692 1 39.0 2 68.6663 10 33.5353 2 12.033 2 37.2461 1 80.0 2 11.8685 2 10.0 1 20.9445 2)
Average genome size in population (length): 29.301
Average program size in population (points): 30.301
Average percent parens in population: 0.034
Minimum age in population: 14.2734375
Maximum age in population: 18.498046875
Average age in population: 16.4977255859375
Median age in population: 16.52490234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 269
Genome diversity (% unique Plush genomes):	 0.496
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 269
Syntactic diversity (% unique Push programs):	 0.496
Total error diversity:				 0.013
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 11404899
--- Timings ---
Current time: 1529616091536 milliseconds
Total Time:          39.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.2 seconds, 40.9%
Fitness Testing:     19.4 seconds, 49.1%
Report:               3.8 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction integer_swap} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max integer_swap float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2723.7608704
Median total errors in population: 1276.0
Error averages by case: (64.8635874 2.751 109.1208348 2.837 95.12772079999999 3.687 153.14218590000002 1.88 106.960326 12.187 121.34189839999999 3.683 109.75046490000003 2.754 101.4026696 2.697 124.4821769 12.167 80.1441128 2.808 74.19164719999999 2.704 81.840338 2.754 131.76175099999998 3.741 134.4289829 3.744 74.3456718 2.745 106.9059684 1.793 97.935587 2.774 143.6139091 11.238 111.6785098 2.754 92.88544739999999 2.756 116.37654659999998 1.79 136.3216791 3.66 85.3656898 2.648 71.354216 2.706 100.40194880000001 2.759)
Error minima by case: (4.0 2 50.0 2 36.0 3 93.0975 1 13.6897 10 64.0 3 1.7385 2 5.5964 2 44.5761 8 19.0 2 13.0 2 22.0 2 74.0 3 77.0 2 14.0 2 2.3006 1 39.0 2 50.8409 9 16.148 2 4.9356 2 20.3029 1 68.9813 2 10.6984 2 10.0 1 4.6478 2)
Average genome size in population (length): 29.23
Average program size in population (points): 30.23
Average percent parens in population: 0.034
Minimum age in population: 15.58203125
Maximum age in population: 19.8779296875
Average age in population: 17.991556640625
Median age in population: 18.046630859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 223
Genome diversity (% unique Plush genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 223
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.018
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 12135649
--- Timings ---
Current time: 1529616094446 milliseconds
Total Time:          42.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.3 seconds, 40.8%
Fitness Testing:     20.8 seconds, 49.2%
Report:               4.1 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2790.6734505000004
Median total errors in population: 1276.0
Error averages by case: (68.07120080000001 2.852 112.3707941 2.93 97.4358834 3.755 156.01042560000002 1.974 108.85686650000002 12.223 123.46718240000001 3.748 112.46440849999999 2.852 103.31027600000003 2.772 126.7881947 12.186 83.7241438 2.917 76.24202960000001 2.78 85.0790052 2.852 135.05579200000003 3.825 137.4845202 3.815 77.64255569999999 2.838 109.5174969 1.898 100.2260942 2.841 145.4307232 11.284 114.44406910000001 2.843 95.710261 2.863 119.1378762 1.888 138.33824429999999 3.728 87.24124989999999 2.718 73.37637269999999 2.783 103.22178450000001 2.861)
Error minima by case: (4.0 2 50.0 2 36.0 3 97.0 1 30.0209 8 64.0 3 19.0491 2 7.9556 2 60.9574 10 19.0 2 5.5833 2 22.0 2 74.0 3 77.0 2 14.0 2 2.708 1 39.0 2 68.1504 10 23.4904 2 10.4783 2 35.9501 1 66.6221 2 2.3864 2 10.0 1 21.9148 2)
Average genome size in population (length): 29.416
Average program size in population (points): 30.416
Average percent parens in population: 0.033
Minimum age in population: 16.6484375
Maximum age in population: 21.17333984375
Average age in population: 19.48802197265625
Median age in population: 19.50390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 152
Genome diversity (% unique Plush genomes):	 0.618
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 152
Syntactic diversity (% unique Push programs):	 0.618
Total error diversity:				 0.022
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 12871049
--- Timings ---
Current time: 1529616097388 milliseconds
Total Time:          45.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.5 seconds, 40.9%
Fitness Testing:     22.2 seconds, 49.0%
Report:               4.5 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush float_tan integer_mod integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2944.4661157000005
Median total errors in population: 1276.0
Error averages by case: (73.8891983 2.916 117.89450829999998 3.013 104.28510899999999 3.833 161.29565839999998 2.065 115.3967365 12.181 130.1213835 3.826 118.1487217 2.919 110.10123740000002 2.838 133.19701360000002 12.164 89.3946048 3.005 83.2317176 2.846 90.8106945 2.912 140.4137186 3.902 142.862872 3.888 83.4061082 2.915 115.2269144 1.952 107.06020919999999 2.93 151.6995233 11.253 120.11284529999999 2.914 101.45636830000001 2.919 124.78366319999999 1.953 144.8861665 3.806 94.0501672 2.772 80.31899370000001 2.852 108.9329822 2.915)
Error minima by case: (4.0 2 50.0 2 36.0 3 97.0 1 16.6428 11 64.0 3 19.0491 2 43.0 2 59.7327 10 19.0 2 13.0 2 22.0 2 74.0 3 77.0 2 14.0 2 3.15 1 39.0 2 51.8035 10 23.4904 2 10.4783 2 35.9501 1 80.0 2 9.5504 2 10.0 1 22.3794 2)
Average genome size in population (length): 29.589
Average program size in population (points): 30.589
Average percent parens in population: 0.033
Minimum age in population: 17.6484375
Maximum age in population: 22.9105224609375
Average age in population: 20.98570178222656
Median age in population: 21.0372314453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 101
Genome diversity (% unique Plush genomes):	 0.662
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 101
Syntactic diversity (% unique Push programs):	 0.662
Total error diversity:				 0.019
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 13610774
--- Timings ---
Current time: 1529616100243 milliseconds
Total Time:          48.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.8 seconds, 41.0%
Fitness Testing:     23.5 seconds, 48.7%
Report:               4.8 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_yank} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times float_yank float_cos in1 integer_dup_items float_inc integer_yank float_inc print_float print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2627.6394457
Median total errors in population: 1276.0
Error averages by case: (60.8368747 2.714 105.280274 2.796 91.177475 3.652 149.52952630000001 1.818 103.2235463 12.202 117.5293393 3.649 105.9945951 2.718 97.56586449999999 2.664 121.1539623 12.175 76.137924 2.783 70.2967903 2.666 77.82684239999999 2.716 127.99617300000001 3.698 130.71386329999999 3.677 70.29529379999998 2.704 103.15511810000001 1.762 94.00027920000001 2.733 139.99275669999997 11.252 107.8910047 2.713 89.0499211 2.723 112.60015949999999 1.754 132.5893006 3.619 81.5600976 2.619 67.45895949999999 2.67 96.5875044 2.719)
Error minima by case: (3.0 2 50.0 2 35.0 3 58.7861 1 20.6216 10 63.0 3 20.0348 2 8.6485 2 10.2648 10 19.0 2 13.0 2 9.8915 2 74.0 3 60.2318 2 8.7086 2 3.5578 1 38.0 2 16.5296 10 18.1633 2 13.3608 2 14.0084 1 65.9292 2 11.5373 2 10.0 1 22.9441 2)
Average genome size in population (length): 29.436
Average program size in population (points): 30.436
Average percent parens in population: 0.034
Minimum age in population: 19.77392578125
Maximum age in population: 24.3038330078125
Average age in population: 22.47810211181641
Median age in population: 22.55462646484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.68
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.68
Total error diversity:				 0.017
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 14346674
--- Timings ---
Current time: 1529616103147 milliseconds
Total Time:          51.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.0 seconds, 41.0%
Fitness Testing:     24.9 seconds, 48.7%
Report:               5.1 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction integer_sub} {:instruction tagged_261} {:instruction float_tan} {:instruction float_dec} {:instruction in2} {:instruction float_yank} {:instruction float_inc} {:instruction integer_yank} {:instruction float_flush} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_stackdepth integer_rot float_max integer_min integer_sub tagged_261 float_tan float_dec in2 float_yank float_inc integer_yank float_flush float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2628.2970922000004
Median total errors in population: 1276.0
Error averages by case: (60.82716860000001 2.734 105.3710681 2.826 91.3752918 3.664 149.54602490000002 1.853 103.13518189999999 12.207 117.6767408 3.661 105.84782150000001 2.74 97.59435210000001 2.677 121.1327342 12.185 76.3149546 2.817 70.3082274 2.684 77.8898303 2.737 128.127333 3.718 130.76823389999998 3.69 70.3705202 2.737 102.9465449 1.793 94.1980996 2.758 139.9457436 11.259 107.79478180000001 2.737 88.91372679999999 2.744 112.5148432 1.788 132.7100767 3.614 81.4276532 2.632 67.4141506 2.684 96.46998850000001 2.737)
Error minima by case: (3.0 2 50.0 2 35.0 3 97.0 1 31.6568 10 63.0 3 18.3226 2 42.0 2 62.8603 9 19.0 2 13.0 2 21.0 2 74.0 3 77.0 2 13.0 2 1.5692 1 38.0 2 68.6663 9 33.5353 2 12.033 2 37.2461 1 79.0 2 9.5504 2 10.0 1 20.9445 2)
Average genome size in population (length): 29.259
Average program size in population (points): 30.259
Average percent parens in population: 0.034
Minimum age in population: 20.77392578125
Maximum age in population: 25.96786499023438
Average age in population: 23.93528771972656
Median age in population: 23.95382690429688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 49
Genome diversity (% unique Plush genomes):	 0.685
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 49
Syntactic diversity (% unique Push programs):	 0.685
Total error diversity:				 0.02
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 15078149
--- Timings ---
Current time: 1529616105943 milliseconds
Total Time:          54.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.1 seconds, 41.0%
Fitness Testing:     26.2 seconds, 48.6%
Report:               5.5 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_max} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction float_shove})
Best program: (float_pop integer_max float_yankdup integer_shove integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float float_shove)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2677.2718002000006
Median total errors in population: 1276.0
Error averages by case: (62.8816752 2.754 107.372076 2.868 93.34478240000001 3.69 151.4106907 1.883 105.06793440000001 12.15 119.564925 3.682 107.74802569999999 2.754 99.46756850000001 2.687 123.03860459999999 12.139 78.41917039999998 2.857 72.28070929999998 2.695 79.92266649999999 2.759 130.1027921 3.743 132.6989264 3.703 72.4218343 2.753 104.83986739999999 1.819 96.1563871 2.802 141.79964990000002 11.214 109.7006042 2.753 90.8602515 2.758 114.41168459999999 1.819 134.5466589 3.629 83.39341569999999 2.636 69.4122262 2.701 98.4036732 2.757)
Error minima by case: (4.0 2 51.0 2 36.0 3 98.0 1 30.2443 10 64.0 3 19.7368 2 13.4909 2 61.7174 8 20.0 2 6.5833 2 22.0 2 75.0 3 78.0 2 14.0 2 2.708 1 39.0 2 68.9858 11 32.4485 2 13.3055 2 38.5348 1 80.0 2 9.5504 2 11.0 2 21.9148 2)
Average genome size in population (length): 29.465
Average program size in population (points): 30.465
Average percent parens in population: 0.034
Minimum age in population: 23.01025390625
Maximum age in population: 27.32073974609375
Average age in population: 25.44956457519531
Median age in population: 25.49285125732422
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.016
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 15814774
--- Timings ---
Current time: 1529616108768 milliseconds
Total Time:          56.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.4 seconds, 41.1%
Fitness Testing:     27.6 seconds, 48.5%
Report:               5.8 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 3037.3786116
Median total errors in population: 1276.0
Error averages by case: (77.77795079999999 2.922 121.5075425 3.04 107.58378839999999 3.827 164.9173493 2.066 119.3759186 12.229 133.4934522 3.825 122.0405692 2.924 113.765394 2.846 137.0311095 12.199 92.93545019999999 3.028 87.0170928 2.848 94.5245839 2.918 143.8352819 3.893 146.46375260000002 3.857 87.12695889999999 2.912 119.1974672 1.992 110.3545072 2.952 155.51923979999998 11.297 123.93723619999999 2.916 105.39628630000001 2.929 128.57207 1.988 148.2088253 3.77 98.0344022 2.773 84.2222235 2.851 112.8141591 2.924)
Error minima by case: (3.0 2 50.0 2 35.0 3 97.0 1 31.0209 10 63.0 3 20.2407 2 3.2233 2 61.9574 10 19.0 2 13.0 2 21.0 2 74.0 3 77.0 2 13.0 2 3.15 1 38.0 2 69.1504 10 33.6555 2 13.9786 2 39.1956 1 71.3544 2 9.7005 2 10.0 1 22.3794 2)
Average genome size in population (length): 29.371
Average program size in population (points): 30.371
Average percent parens in population: 0.034
Minimum age in population: 24.05697631835938
Maximum age in population: 29.11451721191406
Average age in population: 26.9033755569458
Median age in population: 26.93267059326172
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.017
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 16549049
--- Timings ---
Current time: 1529616111795 milliseconds
Total Time:          59.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.7 seconds, 41.3%
Fitness Testing:     28.9 seconds, 48.4%
Report:               6.0 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction print_float} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_flush float_tan integer_max integer_flush float_frominteger float_yankdup integer_yankdup print_float float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float print_float integer_dup float_sin integer_yankdup float_dup_times integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2774.5938975
Median total errors in population: 1276.0
Error averages by case: (66.8433346 2.847 111.12695760000001 2.966 97.23810690000002 3.763 154.97342680000003 1.965 108.8688538 12.24 123.34712880000001 3.759 111.5381976 2.839 103.3371745 2.784 126.72112500000001 12.207 82.28368799999998 2.948 76.28435889999999 2.789 83.7651109 2.84 133.7524018 3.83 136.3377561 3.771 76.30102679999999 2.832 108.6764604 1.93 100.03953430000001 2.883 145.402312 11.305 113.44879269999998 2.84 94.7340498 2.857 118.13521400000002 1.921 138.26863789999996 3.694 87.3467927 2.725 73.4244384 2.788 102.2300172 2.846)
Error minima by case: (3.815 2 49.9679 2 35.0003 3 57.3854 1 22.0223 9 63.9828 3 20.0491 2 13.4909 2 8.864 10 19.0 2 6.5833 2 8.4907 2 74.0 3 58.831 2 7.3079 2 3.15 1 39.0 2 15.1288 10 19.564 2 11.4783 2 15.4092 1 80.0 2 9.4257 2 10.0 1 22.3794 2)
Average genome size in population (length): 29.726
Average program size in population (points): 30.726
Average percent parens in population: 0.034
Minimum age in population: 25.05697631835938
Maximum age in population: 30.39053344726562
Average age in population: 28.39951132965088
Median age in population: 28.44735527038574
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 17292199
--- Timings ---
Current time: 1529616114648 milliseconds
Total Time:          62.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.9 seconds, 41.3%
Fitness Testing:     30.3 seconds, 48.3%
Report:               6.4 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction integer_flush} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_min integer_flush float_yankdup float_yankdup integer_yankdup integer_dup_times integer_min integer_mult integer_dup_items float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup integer_pop integer_shove integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 3156.7530078
Median total errors in population: 1276.0
Error averages by case: (82.66177400000001 2.996 126.0316708 3.117 112.28955889999999 3.897 169.3287984 2.138 124.11913789999998 12.261 137.9700736 3.897 126.83892909999999 2.993 118.5493084 2.913 141.65000650000002 12.232 97.63292259999999 3.1 91.96801760000001 2.921 99.33635500000001 2.991 148.1789604 3.974 150.9068687 3.931 91.9666392 2.981 124.0268354 2.069 115.0433282 3.026 160.07640899999998 11.341 128.7259557 2.992 110.24087940000001 3.006 133.3415909 2.056 152.70089370000002 3.842 102.93518720000002 2.846 89.16076699999999 2.92 117.63814020000001 2.994)
Error minima by case: (4.0 2 1.0237 2 36.0 3 87.6062 1 32.7288 11 4.5614 3 20.3226 2 26.6958 2 63.6152 10 19.0 2 13.0 2 22.0 2 5.0573 3 46.1606 2 14.0 2 3.5692 1 39.0 2 69.88 10 35.1871 2 14.033 2 39.2461 1 26.1181 2 9.8685 2 10.0 1 22.9445 2)
Average genome size in population (length): 29.634
Average program size in population (points): 30.634
Average percent parens in population: 0.034
Minimum age in population: 26.90678024291992
Maximum age in population: 31.59089660644531
Average age in population: 29.91090530204773
Median age in population: 29.97527503967285
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.019
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 18033049
--- Timings ---
Current time: 1529616117492 milliseconds
Total Time:          65.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.2 seconds, 41.4%
Fitness Testing:     31.6 seconds, 48.2%
Report:               6.7 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_yank} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max integer_flush integer_yank float_yankdup integer_flush float_yankdup integer_yankdup integer_dup_times float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float print_float integer_dup float_sin integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2721.236
Median total errors in population: 1276.0
Error averages by case: (64.658 2.749 108.922 2.868 94.738 3.672 153.102 1.856 107.042 12.236 121.058 3.67 109.778 2.748 101.318 2.693 124.902 12.206 79.782 2.849 74.142 2.695 81.578 2.747 131.482 3.731 134.302 3.675 74.058 2.737 106.958 1.837 97.558 2.803 143.702 11.287 111.658 2.742 92.858 2.757 116.358 1.825 136.098 3.603 85.422 2.64 71.322 2.688 100.378 2.748)
Error minima by case: (3.0 2 50.0 2 35.0 3 97.0 1 48.0 12 63.0 3 51.0 2 42.0 2 67.0 12 19.0 2 13.0 2 21.0 2 74.0 3 77.0 2 13.0 2 48.0 1 38.0 2 87.0 10 53.0 2 33.0 2 58.0 1 79.0 2 25.0 2 10.0 1 41.0 2)
Average genome size in population (length): 29.63
Average program size in population (points): 30.63
Average percent parens in population: 0.034
Minimum age in population: 28.67851257324219
Maximum age in population: 33.39445209503174
Average age in population: 31.42574023723602
Median age in population: 31.47122430801392
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.018
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 18773799
--- Timings ---
Current time: 1529616120651 milliseconds
Total Time:          68.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.5 seconds, 41.6%
Fitness Testing:     33.0 seconds, 48.1%
Report:               6.9 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_max} {:instruction integer_max} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_dup_items integer_shove integer_max float_yankdup print_float integer_flush float_max integer_max float_dup_times float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_cos in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2816.2025124
Median total errors in population: 1276.0
Error averages by case: (68.7248467 2.817 112.8826983 2.936 99.00794090000001 3.725 155.9932059 1.936 110.09456150000001 12.213 125.16906639999999 3.731 113.439756 2.815 104.43508680000001 2.751 127.6544242 12.183 84.032126 2.92 78.2293516 2.757 85.60781949999999 2.813 135.42602649999998 3.789 138.0817304 3.738 78.1389178 2.809 110.6029595 1.896 101.8063296 2.855 146.67248690000002 11.272 115.3264962 2.81 96.64743909999999 2.825 119.99796579999999 1.894 140.0292088 3.665 89.2973101 2.691 75.3774804 2.756 104.11827749999999 2.812)
Error minima by case: (3.0 2 51.0 2 35.0 3 68.1767 1 11.2311 10 63.0 3 19.8166 2 42.0 2 19.6553 9 20.0 2 14.0 2 19.282 2 75.0 3 69.6223 2 13.0 2 2.3188 1 38.0 2 25.9201 9 8.7728 2 13.5933 2 4.6179 1 79.0 2 10.7005 2 11.0 2 20.273 2)
Average genome size in population (length): 29.305
Average program size in population (points): 30.305
Average percent parens in population: 0.034
Minimum age in population: 30.42827033996582
Maximum age in population: 34.83849906921387
Average age in population: 32.88575837564468
Median age in population: 32.93136858940125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.721
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.721
Total error diversity:				 0.02
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 19506424
--- Timings ---
Current time: 1529616123493 milliseconds
Total Time:          71.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.7 seconds, 41.6%
Fitness Testing:     34.4 seconds, 48.0%
Report:               7.3 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_max} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_max} {:instruction float_min} {:instruction 46} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction print_float} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (float_dup_items integer_max float_yankdup float_max integer_flush float_tan integer_max float_yankdup float_stackdepth integer_flush float_tan integer_max float_min 46 float_yankdup integer_yankdup integer_dup_times float_dec integer_max in1 integer_dup_items float_inc integer_dup_items float_inc print_float print_float integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 3013.2240588
Median total errors in population: 1276.0
Error averages by case: (76.7315821 2.898 120.4937052 3.022 106.6884815 3.807 163.94913889999998 2.037 118.36065339999999 12.269 132.6235335 3.807 121.1378951 2.902 112.86822570000001 2.83 136.0339704 12.23 91.8877325 2.988 86.07462539999999 2.835 93.5325024 2.901 142.84433140000002 3.875 145.476493 3.837 86.11308460000001 2.89 118.28724480000001 1.979 109.45932530000002 2.931 154.5411471 11.333 123.04382900000002 2.89 104.4395296 2.91 127.69056730000001 1.969 147.3547015 3.747 97.0737377 2.767 83.2423964 2.837 111.883625 2.901)
Error minima by case: (3.0 2 50.0 2 35.0 3 97.0 1 15.9586 10 63.0 3 21.0134 2 42.0 2 58.409 10 19.0 2 13.0 2 21.0 2 74.0 3 77.0 2 13.0 2 2.3188 1 38.0 2 49.8463 10 33.8298 2 14.147 2 39.4019 1 79.0 2 10.7005 2 10.0 1 22.4828 2)
Average genome size in population (length): 29.353
Average program size in population (points): 30.353
Average percent parens in population: 0.034
Minimum age in population: 31.55083847045898
Maximum age in population: 36.19105410575867
Average age in population: 34.34899265384674
Median age in population: 34.38156354427338
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.721
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.721
Total error diversity:				 0.022
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 20240249
--- Timings ---
Current time: 1529616126262 milliseconds
Total Time:          74.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.9 seconds, 41.6%
Fitness Testing:     35.7 seconds, 48.0%
Report:               7.6 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_tan} {:instruction float_sin} {:instruction integer_max} {:instruction float_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_cos} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_rot} {:instruction float_inc} {:instruction print_float})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush integer_mod float_tan float_sin integer_max float_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_yankdup integer_dup_times float_dec float_cos in1 integer_dup_items float_inc float_rot float_inc print_float)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2748.533167400001
Median total errors in population: 1276.0
Error averages by case: (65.78721 2.794 110.1128169 2.897 96.18876060000001 3.708 154.0570381 1.907 107.88841989999999 12.235 122.34797360000002 3.703 110.56786739999997 2.796 102.4113173 2.731 125.79223119999999 12.193 81.21274039999999 2.886 75.24875499999999 2.735 82.75992570000001 2.795 132.7535041 3.769 135.36886100000004 3.722 75.2806925 2.781 107.68216639999999 1.864 98.99735420000002 2.817 144.5022312 11.284 112.50399359999999 2.779 93.72359430000002 2.807 117.19973159999998 1.861 137.2923368 3.654 86.3106774 2.676 72.36789280000002 2.741 101.24107539999999 2.799)
Error minima by case: (3.0 2 49.0 2 35.0 2 96.0 1 31.1497 11 63.0 3 18.8148 2 42.0 2 62.62 10 18.0 2 12.0 2 21.0 2 73.0 3 76.0 2 13.0 2 1.807 1 38.0 2 66.0265 10 32.924 2 12.1194 2 37.3862 1 79.0 2 10.5504 2 9.0 1 21.0872 2)
Average genome size in population (length): 29.429
Average program size in population (points): 30.429
Average percent parens in population: 0.034
Minimum age in population: 32.80358362197876
Maximum age in population: 37.94259858131409
Average age in population: 35.82190116322041
Median age in population: 35.86325567960739
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.711
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.711
Total error diversity:				 0.02
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 20975974
--- Timings ---
Current time: 1529616129270 milliseconds
Total Time:          77.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.2 seconds, 41.6%
Fitness Testing:     37.1 seconds, 48.0%
Report:               7.9 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 56179.0
Test mean error for best: 28.08950
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -34.3143767389
Correct output: -102.9763195877 | Program output: -50.9763195877
Correct output: 133.2733399729 | Program output: 96.2733399729 
Correct output: -110.3937581489 | Program output: -11.3937581489
Correct output: -30.9860347971 | Program output: 19.0139652029 
Correct output: 134.5614254538 | Program output: 69.5614254538 
Correct output: -19.0348050459 | Program output: -72.0348050459
Correct output: 61.3041891932  | Program output: 17.3041891932 
Correct output: -61.8724070197 | Program output: 7.1275929803  
Correct output: -112.5263460948 | Program output: -91.5263460948
Correct output: 41.2299559551  | Program output: 56.2299559551 
Correct output: -61.4991211175 | Program output: -84.4991211175
Correct output: -146.9426549359 | Program output: -70.9426549359
Correct output: -111.8394117999 | Program output: -32.8394117999
Correct output: -60.3162671105 | Program output: -75.3162671105
Correct output: -2.5578290415  | Program output: -52.5578290415
Correct output: 133.2081034946 | Program output: 93.2081034946 
Correct output: -68.1372059073 | Program output: 20.8627940927 
Correct output: -33.4443516435 | Program output: -88.4443516435
Correct output: -12.3607505433 | Program output: -47.3607505433
Correct output: -37.599216489  | Program output: -97.599216489 
Correct output: 135.8818814541 | Program output: 54.8818814541 
Correct output: 12.537302974   | Program output: 39.537302974  
Correct output: 26.3991940027  | Program output: 38.3991940027 
Correct output: -21.9441174358 | Program output: -64.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction tag_float_43} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_fromfloat})
Best program: (integer_shove integer_max float_yankdup print_float integer_flush float_tan integer_pop integer_flush float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult tag_float_43 integer_dup_items in1 integer_dup_items float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_yankdup float_stackdepth integer_shove integer_swap integer_fromfloat)
Errors: [5.0 2 52.0 2 37.0 3 99.0 1 50.0 12 65.0 3 53.0 2 44.0 2 69.0 12 21.0 2 15.0 2 23.0 2 76.0 3 79.0 3 15.0 2 50.0 1 40.0 2 89.0 11 55.0 2 35.0 2 60.0 1 81.0 3 27.0 2 12.0 2 43.0 2]
Total: 1276.0
Mean: 25.52
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2916.2268962000003
Median total errors in population: 1276.0
Error averages by case: (72.77614670000001 2.857 116.7267945 2.971 102.81020419999999 3.769 160.3724642 1.984 114.58283339999998 12.248 128.79935650000002 3.767 117.2790283 2.856 109.0183276 2.791 131.95363390000003 12.211 87.99699460000001 2.948 82.08119719999999 2.797 89.6088857 2.859 139.17465980000003 3.831 141.8182469 3.795 82.18015420000002 2.849 114.45118860000001 1.935 105.5939433 2.887 150.92343789999998 11.307 119.1926666 2.851 100.5507944 2.868 123.8492861 1.924 143.65263829999998 3.706 93.15981189999998 2.734 79.26753570000001 2.796 108.0106657 2.855)
Error minima by case: (3.0 2 50.0 2 35.0 3 96.8019 1 17.3942 10 63.0 3 5.4429 2 12.4909 2 48.2805 11 19.0 2 7.5833 2 21.0 2 74.0 3 77.0 2 13.0 2 3.3006 1 38.0 2 54.5453 10 19.8525 2 1.2311 2 24.0073 1 79.0 2 9.6123 2 10.0 1 8.3522 2)
Average genome size in population (length): 29.462
Average program size in population (points): 30.462
Average percent parens in population: 0.034
Minimum age in population: 34.7074089050293
Maximum age in population: 39.43378150463104
Average age in population: 37.34099410772324
Median age in population: 37.38745993375778
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.708
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.708
Total error diversity:				 0.02
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 21712524
--- Timings ---
Current time: 1529616132188 milliseconds
Total Time:          80.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.4 seconds, 41.6%
Fitness Testing:     38.5 seconds, 48.0%
Report:               8.2 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 56088.0
Test mean error for best: 28.04400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -31.3143767389
Correct output: -102.9763195877 | Program output: -47.9763195877
Correct output: 133.2733399729 | Program output: 99.2733399729 
Correct output: -110.3937581489 | Program output: -8.3937581489 
Correct output: -30.9860347971 | Program output: 22.0139652029 
Correct output: 134.5614254538 | Program output: 72.5614254538 
Correct output: -19.0348050459 | Program output: -69.0348050459
Correct output: 61.3041891932  | Program output: 20.3041891932 
Correct output: -61.8724070197 | Program output: 10.1275929803 
Correct output: -112.5263460948 | Program output: -88.5263460948
Correct output: 41.2299559551  | Program output: 59.2299559551 
Correct output: -61.4991211175 | Program output: -81.4991211175
Correct output: -146.9426549359 | Program output: -67.9426549359
Correct output: -111.8394117999 | Program output: -29.8394117999
Correct output: -60.3162671105 | Program output: -72.3162671105
Correct output: -2.5578290415  | Program output: -49.5578290415
Correct output: 133.2081034946 | Program output: 96.2081034946 
Correct output: -68.1372059073 | Program output: 23.8627940927 
Correct output: -33.4443516435 | Program output: -85.4443516435
Correct output: -12.3607505433 | Program output: -44.3607505433
Correct output: -37.599216489  | Program output: -94.599216489 
Correct output: 135.8818814541 | Program output: 57.8818814541 
Correct output: 12.537302974   | Program output: 42.537302974  
Correct output: 26.3991940027  | Program output: 41.3991940027 
Correct output: -21.9441174358 | Program output: -61.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_yankdup)
Errors: [2.0 2 55.0 3 34.0 3 102.0 3 53.0 12 62.0 3 50.0 1 41.0 2 72.0 13 24.0 3 18.0 2 20.0 1 79.0 3 82.0 3 12.0 2 47.0 2 37.0 3 92.0 11 52.0 2 32.0 2 57.0 2 78.0 3 30.0 1 15.0 2 40.0 1]
Total: 1271.0
Mean: 25.42
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 3136.1198807000005
Median total errors in population: 1276.0
Error averages by case: (81.82242370000002 3.004 125.4331155 3.111 111.8846631 3.89 168.50488760000002 2.131 123.0796179 12.302 137.517018 3.878 125.68084409999999 3.004 117.72286919999999 2.925 140.66592369999998 12.25 97.1493458 3.101 91.1070666 2.932 98.4976738 2.998 147.74322519999998 3.962 150.2073446 3.923 91.170353 2.987 122.83449969999998 2.08 114.63738780000001 3.012 159.01664810000003 11.371 127.59638519999999 2.991 109.1729602 3.019 132.19926510000002 2.068 152.17448549999995 3.837 101.90899069999999 2.866 88.2685553 2.934 116.5453313 3.003)
Error minima by case: (2.0 2 47.7307 2 34.0 3 55.1481 1 24.2596 11 62.0 3 18.8148 1 13.4909 2 6.6268 10 19.0 2 6.5833 2 6.2535 1 74.0 3 56.5938 2 5.0706 2 1.807 1 37.0 2 12.8916 10 21.8013 2 12.5954 2 17.6464 1 78.0 2 10.5504 1 10.0 1 21.0872 1)
Average genome size in population (length): 29.274
Average program size in population (points): 30.274
Average percent parens in population: 0.034
Minimum age in population: 36.0903377532959
Maximum age in population: 40.63132244348526
Average age in population: 38.78405549919605
Median age in population: 38.83065974712372
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.029
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 22444374
--- Timings ---
Current time: 1529616134931 milliseconds
Total Time:          83.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.5 seconds, 41.6%
Fitness Testing:     39.9 seconds, 48.1%
Report:               8.5 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 56088.0
Test mean error for best: 28.04400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -31.3143767389
Correct output: -102.9763195877 | Program output: -47.9763195877
Correct output: 133.2733399729 | Program output: 99.2733399729 
Correct output: -110.3937581489 | Program output: -8.3937581489 
Correct output: -30.9860347971 | Program output: 22.0139652029 
Correct output: 134.5614254538 | Program output: 72.5614254538 
Correct output: -19.0348050459 | Program output: -69.0348050459
Correct output: 61.3041891932  | Program output: 20.3041891932 
Correct output: -61.8724070197 | Program output: 10.1275929803 
Correct output: -112.5263460948 | Program output: -88.5263460948
Correct output: 41.2299559551  | Program output: 59.2299559551 
Correct output: -61.4991211175 | Program output: -81.4991211175
Correct output: -146.9426549359 | Program output: -67.9426549359
Correct output: -111.8394117999 | Program output: -29.8394117999
Correct output: -60.3162671105 | Program output: -72.3162671105
Correct output: -2.5578290415  | Program output: -49.5578290415
Correct output: 133.2081034946 | Program output: 96.2081034946 
Correct output: -68.1372059073 | Program output: 23.8627940927 
Correct output: -33.4443516435 | Program output: -85.4443516435
Correct output: -12.3607505433 | Program output: -44.3607505433
Correct output: -37.599216489  | Program output: -94.599216489 
Correct output: 135.8818814541 | Program output: 57.8818814541 
Correct output: 12.537302974   | Program output: 42.537302974  
Correct output: 26.3991940027  | Program output: 41.3991940027 
Correct output: -21.9441174358 | Program output: -61.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_yankdup)
Errors: [2.0 2 55.0 3 34.0 3 102.0 3 53.0 12 62.0 3 50.0 1 41.0 2 72.0 13 24.0 3 18.0 2 20.0 1 79.0 3 82.0 3 12.0 2 47.0 2 37.0 3 92.0 11 52.0 2 32.0 2 57.0 2 78.0 3 30.0 1 15.0 2 40.0 1]
Total: 1271.0
Mean: 25.42
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 3181.6837198000003
Median total errors in population: 1276.0
Error averages by case: (83.69754730000001 2.995 127.12646389999999 3.136 113.57192939999999 3.9 170.22144679999997 2.162 124.999496 12.271 139.2296663 3.89 127.63478629999999 2.996 119.6312155 2.915 142.4985748 12.229 98.7839731 3.115 93.04363910000001 2.927 100.2818058 2.996 149.3304823 3.968 151.9023862 3.923 92.9491919 2.986 124.83512819999999 2.084 116.3268658 3.037 160.8511279 11.338 129.5068393 2.99 111.12832819999998 3.009 134.1039602 2.082 153.89593660000003 3.828 103.88624119999999 2.847 90.2179492 2.927 118.4807385 2.997)
Error minima by case: (2.0 2 40.7623 2 34.0 3 48.1797 1 31.1497 11 62.0 3 18.8148 1 41.0 2 0.3416 9 19.0 2 13.0 2 0.7149 1 74.0 3 49.6254 2 1.8978 2 1.807 1 37.0 2 5.9232 9 28.7697 2 12.5954 2 24.6148 1 78.0 2 9.5504 1 10.0 1 21.0872 1)
Average genome size in population (length): 28.795
Average program size in population (points): 29.795
Average percent parens in population: 0.035
Minimum age in population: 37.80774784088135
Maximum age in population: 42.40158121287823
Average age in population: 40.29800141061842
Median age in population: 40.3570956364274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.7
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.7
Total error diversity:				 0.022
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 23164249
--- Timings ---
Current time: 1529616137789 milliseconds
Total Time:          85.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.7 seconds, 41.6%
Fitness Testing:     41.3 seconds, 48.1%
Report:               8.8 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 56088.0
Test mean error for best: 28.04400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -31.3143767389
Correct output: -102.9763195877 | Program output: -47.9763195877
Correct output: 133.2733399729 | Program output: 99.2733399729 
Correct output: -110.3937581489 | Program output: -8.3937581489 
Correct output: -30.9860347971 | Program output: 22.0139652029 
Correct output: 134.5614254538 | Program output: 72.5614254538 
Correct output: -19.0348050459 | Program output: -69.0348050459
Correct output: 61.3041891932  | Program output: 20.3041891932 
Correct output: -61.8724070197 | Program output: 10.1275929803 
Correct output: -112.5263460948 | Program output: -88.5263460948
Correct output: 41.2299559551  | Program output: 59.2299559551 
Correct output: -61.4991211175 | Program output: -81.4991211175
Correct output: -146.9426549359 | Program output: -67.9426549359
Correct output: -111.8394117999 | Program output: -29.8394117999
Correct output: -60.3162671105 | Program output: -72.3162671105
Correct output: -2.5578290415  | Program output: -49.5578290415
Correct output: 133.2081034946 | Program output: 96.2081034946 
Correct output: -68.1372059073 | Program output: 23.8627940927 
Correct output: -33.4443516435 | Program output: -85.4443516435
Correct output: -12.3607505433 | Program output: -44.3607505433
Correct output: -37.599216489  | Program output: -94.599216489 
Correct output: 135.8818814541 | Program output: 57.8818814541 
Correct output: 12.537302974   | Program output: 42.537302974  
Correct output: 26.3991940027  | Program output: 41.3991940027 
Correct output: -21.9441174358 | Program output: -61.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_yankdup)
Errors: [2.0 2 55.0 3 34.0 3 102.0 3 53.0 12 62.0 3 50.0 1 41.0 2 72.0 13 24.0 3 18.0 2 20.0 1 79.0 3 82.0 3 12.0 2 47.0 2 37.0 3 92.0 11 52.0 2 32.0 2 57.0 2 78.0 3 30.0 1 15.0 2 40.0 1]
Total: 1271.0
Mean: 25.42
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 3089.8441915000003
Median total errors in population: 1276.0
Error averages by case: (79.75927500000002 2.997 123.778361 3.159 110.1625521 3.908 166.8204162 2.194 121.1595963 12.216 135.771027 3.908 123.61424919999997 2.965 115.77287779999999 2.92 138.86624859999995 12.219 95.55360940000001 3.146 89.33945950000002 2.93 96.6011099 2.974 146.1982675 3.983 148.5536017 3.921 89.25810799999998 2.988 120.7241582 2.102 112.90792470000001 3.078 157.216946 11.303 125.60176039999999 2.995 107.05770919999998 2.992 130.23122229999998 2.101 150.41108099999997 3.84 100.01274799999999 2.821 86.42691679999999 2.93 114.48396569999997 2.971)
Error minima by case: (2.0 2 51.0 2 34.0 3 95.9937 1 15.2034 9 62.0 3 4.6348 1 41.0 2 47.4724 9 20.0 2 14.0 2 20.0 1 75.0 3 78.0 2 12.0 2 1.5692 1 37.0 2 50.8703 9 19.0443 2 1.184 2 23.1992 1 78.0 2 8.8773 1 11.0 2 7.5441 1)
Average genome size in population (length): 28.506
Average program size in population (points): 29.506
Average percent parens in population: 0.036
Minimum age in population: 39.36368244886398
Maximum age in population: 43.49340885132551
Average age in population: 41.7777609455809
Median age in population: 41.81988380104303
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.666
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.666
Total error diversity:				 0.027
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 23876899
--- Timings ---
Current time: 1529616140665 milliseconds
Total Time:          88.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.0 seconds, 41.6%
Fitness Testing:     42.6 seconds, 48.0%
Report:               9.1 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 56105.0
Test mean error for best: 28.05250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -30.3143767389
Correct output: -102.9763195877 | Program output: -46.9763195877
Correct output: 133.2733399729 | Program output: 100.2733399729
Correct output: -110.3937581489 | Program output: -7.3937581489 
Correct output: -30.9860347971 | Program output: 23.0139652029 
Correct output: 134.5614254538 | Program output: 73.5614254538 
Correct output: -19.0348050459 | Program output: -68.0348050459
Correct output: 61.3041891932  | Program output: 21.3041891932 
Correct output: -61.8724070197 | Program output: 11.1275929803 
Correct output: -112.5263460948 | Program output: -87.5263460948
Correct output: 41.2299559551  | Program output: 60.2299559551 
Correct output: -61.4991211175 | Program output: -80.4991211175
Correct output: -146.9426549359 | Program output: -66.9426549359
Correct output: -111.8394117999 | Program output: -28.8394117999
Correct output: -60.3162671105 | Program output: -71.3162671105
Correct output: -2.5578290415  | Program output: -48.5578290415
Correct output: 133.2081034946 | Program output: 97.2081034946 
Correct output: -68.1372059073 | Program output: 24.8627940927 
Correct output: -33.4443516435 | Program output: -84.4443516435
Correct output: -12.3607505433 | Program output: -43.3607505433
Correct output: -37.599216489  | Program output: -93.599216489 
Correct output: 135.8818814541 | Program output: 58.8818814541 
Correct output: 12.537302974   | Program output: 43.537302974  
Correct output: 26.3991940027  | Program output: 42.3991940027 
Correct output: -21.9441174358 | Program output: -60.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_yankdup)
Errors: [1.0 2 56.0 3 33.0 2 103.0 3 54.0 11 61.0 2 49.0 2 40.0 1 73.0 12 25.0 3 19.0 2 19.0 2 80.0 2 83.0 3 11.0 2 46.0 2 36.0 3 93.0 11 51.0 2 31.0 2 56.0 2 77.0 3 31.0 2 16.0 2 39.0 2]
Total: 1266.0
Mean: 25.32
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2917.0241339
Median total errors in population: 1276.0
Error averages by case: (72.35593550000002 2.875 117.27936109999999 3.153 102.646986 3.786 160.76018 2.29 114.95715550000001 12.266 128.55851260000003 3.782 116.68399019999997 2.727 108.61931680000001 2.804 132.70625719999998 12.371 88.70540559999998 3.132 82.65438459999999 2.816 89.2311763 2.725 139.7649251 3.844 142.2904688 3.79 81.81940949999999 2.86 113.79300239999999 2.113 105.42350130000001 3.074 151.25959369999998 11.328 118.63142899999998 2.872 99.98732989999999 2.88 123.2890061 2.111 143.3661391 3.713 93.56314349999998 2.603 79.77209709999998 2.81 107.45342699999999 2.727)
Error minima by case: (1.0 2 50.0 2 33.0 2 15.3938 1 15.014 10 61.0 2 19.6408 1 40.0 1 3.1276 10 19.0 2 13.0 2 19.0 1 74.0 2 36.8394 2 11.0 2 3.5154 1 36.0 2 16.8628 10 33.4949 2 12.5519 2 37.8168 1 77.0 2 6.5504 1 10.0 1 22.9378 1)
Average genome size in population (length): 28.278
Average program size in population (points): 29.278
Average percent parens in population: 0.036
Minimum age in population: 40.36368244886398
Maximum age in population: 45.28490213304758
Average age in population: 43.30226461030543
Median age in population: 43.35843572020531
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 99
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 99
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.032
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 24583849
--- Timings ---
Current time: 1529616143569 milliseconds
Total Time:          91.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.2 seconds, 41.7%
Fitness Testing:     43.9 seconds, 48.0%
Report:               9.3 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 56106.0
Test mean error for best: 28.05300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -28.3143767389
Correct output: -102.9763195877 | Program output: -44.9763195877
Correct output: 133.2733399729 | Program output: 102.2733399729
Correct output: -110.3937581489 | Program output: -5.3937581489 
Correct output: -30.9860347971 | Program output: 25.0139652029 
Correct output: 134.5614254538 | Program output: 75.5614254538 
Correct output: -19.0348050459 | Program output: -66.0348050459
Correct output: 61.3041891932  | Program output: 23.3041891932 
Correct output: -61.8724070197 | Program output: 13.1275929803 
Correct output: -112.5263460948 | Program output: -85.5263460948
Correct output: 41.2299559551  | Program output: 62.2299559551 
Correct output: -61.4991211175 | Program output: -78.4991211175
Correct output: -146.9426549359 | Program output: -64.9426549359
Correct output: -111.8394117999 | Program output: -26.8394117999
Correct output: -60.3162671105 | Program output: -69.3162671105
Correct output: -2.5578290415  | Program output: -46.5578290415
Correct output: 133.2081034946 | Program output: 99.2081034946 
Correct output: -68.1372059073 | Program output: 26.8627940927 
Correct output: -33.4443516435 | Program output: -82.4443516435
Correct output: -12.3607505433 | Program output: -41.3607505433
Correct output: -37.599216489  | Program output: -91.599216489 
Correct output: 135.8818814541 | Program output: 60.8818814541 
Correct output: 12.537302974   | Program output: 45.537302974  
Correct output: 26.3991940027  | Program output: 44.3991940027 
Correct output: -21.9441174358 | Program output: -58.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_yankdup)
Errors: [1.0 1 58.0 3 31.0 2 105.0 3 56.0 12 59.0 3 47.0 2 38.0 2 75.0 13 27.0 3 21.0 2 17.0 2 82.0 2 85.0 3 9.0 1 44.0 2 34.0 3 95.0 10 49.0 2 29.0 2 54.0 2 75.0 3 33.0 2 18.0 2 37.0 2]
Total: 1263.0
Mean: 25.26
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2626.4774179999995
Median total errors in population: 1271.0
Error averages by case: (59.1148574 2.738 107.24304219999999 3.439 89.7107776 3.656 151.3790897 3.06 104.8870437 12.13 116.07028960000001 3.653 104.0613498 2.183 95.8177219 2.663 122.9174031 12.688 78.20178630000001 3.425 72.1156375 2.684 76.2373831 2.185 130.0953594 3.717 132.6336211 3.703 68.6981435 2.731 101.1295122 2.386 92.51708500000001 3.376 141.7185046 11.198 105.98297409999999 2.74 87.1049216 2.734 110.7025114 2.388 131.0115788 3.622 83.1719932 2.064 69.2256909 2.678 94.70414029999998 2.184)
Error minima by case: (1.0 1 50.0 2 31.0 2 97.0 1 17.6938 10 59.0 2 20.0348 1 38.0 1 58.786 11 19.0 2 13.0 2 17.0 1 74.0 2 77.0 2 9.0 1 3.5578 1 34.0 2 69.1372 10 26.4904 2 13.3608 2 38.5992 1 75.0 2 4.3414 1 10.0 1 22.9441 1)
Average genome size in population (length): 28.12
Average program size in population (points): 29.12
Average percent parens in population: 0.035
Minimum age in population: 41.72546148300171
Maximum age in population: 46.74560186825693
Average age in population: 44.88925776962191
Median age in population: 44.91185326967388
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 278
Genome diversity (% unique Plush genomes):	 0.549
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 278
Syntactic diversity (% unique Push programs):	 0.549
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 25286849
--- Timings ---
Current time: 1529616146399 milliseconds
Total Time:          94.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.3 seconds, 41.7%
Fitness Testing:     45.4 seconds, 48.0%
Report:               9.6 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 56107.0
Test mean error for best: 28.05350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -29.3143767389
Correct output: -102.9763195877 | Program output: -45.9763195877
Correct output: 133.2733399729 | Program output: 101.2733399729
Correct output: -110.3937581489 | Program output: -6.3937581489 
Correct output: -30.9860347971 | Program output: 24.0139652029 
Correct output: 134.5614254538 | Program output: 74.5614254538 
Correct output: -19.0348050459 | Program output: -67.0348050459
Correct output: 61.3041891932  | Program output: 22.3041891932 
Correct output: -61.8724070197 | Program output: 12.1275929803 
Correct output: -112.5263460948 | Program output: -86.5263460948
Correct output: 41.2299559551  | Program output: 61.2299559551 
Correct output: -61.4991211175 | Program output: -79.4991211175
Correct output: -146.9426549359 | Program output: -65.9426549359
Correct output: -111.8394117999 | Program output: -27.8394117999
Correct output: -60.3162671105 | Program output: -70.3162671105
Correct output: -2.5578290415  | Program output: -47.5578290415
Correct output: 133.2081034946 | Program output: 98.2081034946 
Correct output: -68.1372059073 | Program output: 25.8627940927 
Correct output: -33.4443516435 | Program output: -83.4443516435
Correct output: -12.3607505433 | Program output: -42.3607505433
Correct output: -37.599216489  | Program output: -92.599216489 
Correct output: 135.8818814541 | Program output: 59.8818814541 
Correct output: 12.537302974   | Program output: 44.537302974  
Correct output: 26.3991940027  | Program output: 43.3991940027 
Correct output: -21.9441174358 | Program output: -59.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_max} {:instruction float_yankdup} {:instruction float_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_mult} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (integer_shove integer_max float_yankdup float_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_dup_times integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_mult float_sin integer_yankdup)
Errors: [0.0 0 57.0 3 32.0 2 104.0 3 55.0 12 60.0 2 48.0 2 39.0 2 74.0 13 26.0 3 20.0 1 18.0 2 81.0 3 84.0 3 10.0 1 45.0 2 35.0 3 94.0 11 50.0 1 30.0 1 55.0 2 76.0 3 32.0 2 17.0 2 38.0 2]
Total: 1261.0
Mean: 25.22
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2326.2624567999987
Median total errors in population: 1271.0
Error averages by case: (46.293486500000014 2.617 97.3085675 3.64 76.70661690000001 3.465 140.98810530000003 3.612 93.01524380000001 11.993 103.07357570000003 3.48 91.42552599999998 1.859 81.59038139999998 2.493 111.04977869999998 12.893 68.27886709999997 3.63 60.630152800000026 2.581 63.70023720000001 1.869 120.484383 3.526 122.89609329999998 3.644 56.133116799999996 2.617 88.3639968 2.582 79.52743280000003 3.571 130.4300782 11.125 93.50715469999996 2.646 74.3381966 2.634 98.2917617 2.595 118.19416459999998 3.578 71.5646748 1.749 57.5841332 2.585 82.02773139999998 1.875)
Error minima by case: (0.0 0 4.0237 2 31.0 2 90.6062 1 32.8803 9 7.5614 2 21.0491 1 23.6958 1 64.7155 10 19.0 2 13.0 1 17.0 1 8.0573 2 49.1606 2 9.0 1 4.8973 1 34.0 2 70.7091 10 25.4904 1 12.4783 1 37.9501 1 23.1181 2 6.5373 1 10.0 1 24.4287 1)
Average genome size in population (length): 28.024
Average program size in population (points): 29.024
Average percent parens in population: 0.035
Minimum age in population: 43.61465509235859
Maximum age in population: 48.18541566096246
Average age in population: 46.38439303151984
Median age in population: 46.41829296993092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 290
Genome diversity (% unique Plush genomes):	 0.451
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 290
Syntactic diversity (% unique Push programs):	 0.451
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 25987449
--- Timings ---
Current time: 1529616149300 milliseconds
Total Time:          97.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.6 seconds, 41.7%
Fitness Testing:     46.7 seconds, 48.0%
Report:               9.9 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 56162.0
Test mean error for best: 28.08100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -26.3143767389
Correct output: -102.9763195877 | Program output: -42.9763195877
Correct output: 133.2733399729 | Program output: 104.2733399729
Correct output: -110.3937581489 | Program output: -3.3937581489 
Correct output: -30.9860347971 | Program output: 27.0139652029 
Correct output: 134.5614254538 | Program output: 77.5614254538 
Correct output: -19.0348050459 | Program output: -64.0348050459
Correct output: 61.3041891932  | Program output: 25.3041891932 
Correct output: -61.8724070197 | Program output: 15.1275929803 
Correct output: -112.5263460948 | Program output: -83.5263460948
Correct output: 41.2299559551  | Program output: 64.2299559551 
Correct output: -61.4991211175 | Program output: -76.4991211175
Correct output: -146.9426549359 | Program output: -62.9426549359
Correct output: -111.8394117999 | Program output: -24.8394117999
Correct output: -60.3162671105 | Program output: -67.3162671105
Correct output: -2.5578290415  | Program output: -44.5578290415
Correct output: 133.2081034946 | Program output: 101.2081034946
Correct output: -68.1372059073 | Program output: 28.8627940927 
Correct output: -33.4443516435 | Program output: -80.4443516435
Correct output: -12.3607505433 | Program output: -39.3607505433
Correct output: -37.599216489  | Program output: -89.599216489 
Correct output: 135.8818814541 | Program output: 62.8818814541 
Correct output: 12.537302974   | Program output: 47.537302974  
Correct output: 26.3991940027  | Program output: 46.3991940027 
Correct output: -21.9441174358 | Program output: -56.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items integer_mult integer_dup_items float_inc integer_dup_items integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_dup float_sin integer_yankdup)
Errors: [3.0 1 60.0 2 29.0 2 107.0 3 58.0 12 57.0 3 45.0 2 36.0 2 77.0 13 29.0 3 23.0 2 15.0 2 84.0 3 87.0 3 7.0 1 42.0 2 32.0 2 97.0 10 47.0 2 27.0 2 52.0 2 73.0 3 35.0 2 20.0 1 35.0 2]
Total: 1259.0
Mean: 25.18
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2616.4352694999993
Median total errors in population: 1266.0
Error averages by case: (57.86391410000001 2.53 109.4470724 3.757 87.51629790000001 3.181 153.300699 3.75 105.7058521 11.77 113.62024070000002 3.286 102.21012129999998 2.362 93.1923454 2.351 123.81039859999998 12.678 80.71055009999999 3.759 73.0235736 2.64 74.83323990000001 2.372 132.3594959 3.326 134.6974022 3.765 67.3705536 2.594 99.19609839999998 2.702 90.31331250000002 3.678 142.5339826 11.085 104.2588856 2.704 85.3643431 2.693 108.96744379999998 2.706 128.56209479999998 3.689 83.8922974 2.241 70.0714914 2.697 92.93256309999998 2.365)
Error minima by case: (0.0 0 50.0 2 29.0 1 97.0 1 32.986 11 31.2113 2 21.0348 1 36.0 1 61.3093 10 19.0 2 13.0 1 15.0 1 74.0 2 77.0 2 7.0 1 2.0598 1 29.858 2 70.1372 9 35.4444 1 14.3608 1 39.5992 1 32.5318 2 1.5373 1 10.0 1 22.9183 1)
Average genome size in population (length): 29.313
Average program size in population (points): 30.313
Average percent parens in population: 0.033
Minimum age in population: 45.50456455629319
Maximum age in population: 49.90577457193285
Average age in population: 47.96370604075491
Median age in population: 48.02779669663869
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 101
Genome diversity (% unique Plush genomes):	 0.517
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 101
Syntactic diversity (% unique Push programs):	 0.517
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 26720274
--- Timings ---
Current time: 1529616152191 milliseconds
Total Time:         100.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.8 seconds, 41.7%
Fitness Testing:     48.0 seconds, 47.9%
Report:              10.2 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 56357.0
Test mean error for best: 28.17850
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -23.3143767389
Correct output: -102.9763195877 | Program output: -39.9763195877
Correct output: 133.2733399729 | Program output: 107.2733399729
Correct output: -110.3937581489 | Program output: -0.3937581489 
Correct output: -30.9860347971 | Program output: 30.0139652029 
Correct output: 134.5614254538 | Program output: 80.5614254538 
Correct output: -19.0348050459 | Program output: -61.0348050459
Correct output: 61.3041891932  | Program output: 28.3041891932 
Correct output: -61.8724070197 | Program output: 18.1275929803 
Correct output: -112.5263460948 | Program output: -80.5263460948
Correct output: 41.2299559551  | Program output: 67.2299559551 
Correct output: -61.4991211175 | Program output: -73.4991211175
Correct output: -146.9426549359 | Program output: -59.9426549359
Correct output: -111.8394117999 | Program output: -21.8394117999
Correct output: -60.3162671105 | Program output: -64.3162671105
Correct output: -2.5578290415  | Program output: -41.5578290415
Correct output: 133.2081034946 | Program output: 104.2081034946
Correct output: -68.1372059073 | Program output: 31.8627940927 
Correct output: -33.4443516435 | Program output: -77.4443516435
Correct output: -12.3607505433 | Program output: -36.3607505433
Correct output: -37.599216489  | Program output: -86.599216489 
Correct output: 135.8818814541 | Program output: 65.8818814541 
Correct output: 12.537302974   | Program output: 50.537302974  
Correct output: 26.3991940027  | Program output: 49.3991940027 
Correct output: -21.9441174358 | Program output: -53.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_yankdup})
Best program: (float_stackdepth integer_rot float_max integer_min float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc float_inc integer_mult integer_dup_items float_inc integer_dup_items float_inc float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_yankdup)
Errors: [6.0 1 63.0 3 26.0 2 110.0 2 61.0 11 54.0 3 42.0 2 33.0 2 80.0 13 32.0 3 26.0 2 12.0 2 87.0 3 90.0 2 4.0 1 39.0 2 29.0 2 100.0 11 44.0 2 24.0 2 49.0 2 70.0 2 38.0 2 23.0 2 32.0 2]
Total: 1255.0
Mean: 25.1
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2333.6816645999993
Median total errors in population: 1263.0
Error averages by case: (45.18922360000001 1.643 99.24318569999998 3.654 75.9064332 2.676 143.6165769 3.645 96.346292 11.851 102.30092170000002 3.004 89.52523929999998 2.632 81.49233729999999 2.359 114.67730139999995 12.768 70.05868269999998 3.645 63.38010860000002 2.253 61.860054100000006 2.638 122.4624978 3.137 124.79795769999997 3.654 54.30865879999998 1.983 86.47011939999999 2.597 78.72960180000004 3.554 133.6052933 10.849 91.63410489999997 2.309 72.47179990000001 2.297 96.37579149999996 2.603 117.39069689999995 3.58 74.2743549 2.516 60.338519700000006 2.59 80.14791149999999 2.641)
Error minima by case: (0.0 0 51.0 2 26.0 1 98.0 1 30.5041 10 54.0 2 18.7222 1 33.0 1 62.5662 11 2.9653 2 14.0 1 12.0 1 75.0 2 78.0 2 4.0 1 3.2569 1 29.0 2 69.1372 10 34.4444 1 8.226 1 34.1138 1 70.0 2 4.5373 1 11.0 1 22.8314 1)
Average genome size in population (length): 31.577
Average program size in population (points): 32.577
Average percent parens in population: 0.031
Minimum age in population: 47.37750470731407
Maximum age in population: 51.25548871932551
Average age in population: 49.5369130110722
Median age in population: 49.55884452571627
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 59
Genome diversity (% unique Plush genomes):	 0.518
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.518
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 27509699
--- Timings ---
Current time: 1529616155105 milliseconds
Total Time:         103.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.0 seconds, 41.7%
Fitness Testing:     49.4 seconds, 47.9%
Report:              10.6 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 9014.0
Test mean error for best: 4.50700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -22.3143767389
Correct output: -102.9763195877 | Program output: -95.9763195877
Correct output: 133.2733399729 | Program output: 140.2733399729
Correct output: -110.3937581489 | Program output: -103.3937581489
Correct output: -30.9860347971 | Program output: -23.9860347971
Correct output: 134.5614254538 | Program output: 141.5614254538
Correct output: -19.0348050459 | Program output: -12.0348050459
Correct output: 61.3041891932  | Program output: 68.3041891932 
Correct output: -61.8724070197 | Program output: -54.8724070197
Correct output: -112.5263460948 | Program output: -105.5263460948
Correct output: 41.2299559551  | Program output: 48.2299559551 
Correct output: -61.4991211175 | Program output: -54.4991211175
Correct output: -146.9426549359 | Program output: -139.9426549359
Correct output: -111.8394117999 | Program output: -104.8394117999
Correct output: -60.3162671105 | Program output: -53.3162671105
Correct output: -2.5578290415  | Program output: 4.4421709585  
Correct output: 133.2081034946 | Program output: 140.2081034946
Correct output: -68.1372059073 | Program output: -61.1372059073
Correct output: -33.4443516435 | Program output: -26.4443516435
Correct output: -12.3607505433 | Program output: -5.3607505433 
Correct output: -37.599216489  | Program output: -30.599216489 
Correct output: 135.8818814541 | Program output: 142.8818814541
Correct output: 12.537302974   | Program output: 19.537302974  
Correct output: 26.3991940027  | Program output: 33.3991940027 
Correct output: -21.9441174358 | Program output: -14.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult float_add float_inc integer_dup_items integer_dup_items float_inc integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_dup)
Errors: [7.0 1 7.0 3 7.0 2 7.0 2 7.0 2 7.0 2 7.0 1 7.0 1 7.0 2 7.0 2 7.0 1 7.0 2 7.0 2 7.0 2 7.0 2 7.0 11 7.0 2 7.0 1 7.0 2 7.0 2 7.0 1 7.0 2 7.0 1 7.0 2 7.0 2]
Total: 228.0
Mean: 4.56
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2296.1429967
Median total errors in population: 1261.0
Error averages by case: (43.90045340000002 1.014 98.48008619999999 3.592 73.717304 2.634 142.84657190000001 3.627 94.63222810000002 12.034 100.1418472 2.796 88.23629899999999 2.63 79.31555019999999 2.548 113.08779589999999 12.946 69.2861279 3.602 61.74147020000001 1.854 60.53954880000001 2.637 121.6914232 3.545 124.02803379999999 3.631 52.98505990000001 1.744 85.45644279999999 2.593 76.5471734 3.47 131.9343573 11.039 90.29933329999997 1.905 71.20755040000002 1.89 95.0531856 2.592 115.25121569999996 3.54 72.6708078 2.529 58.6884347 2.54 78.83969599999999 2.633)
Error minima by case: (0.0 0 7.0 2 7.0 1 7.0 1 3.8756 2 7.0 2 7.0 1 7.0 1 7.0 2 3.9653 2 7.0 1 7.0 1 7.0 2 7.0 2 2.0 1 3.9783 2 7.0 2 7.0 1 6.3339 1 7.0 1 7.0 1 7.0 2 5.2385 1 1.478 1 4.9619 1)
Average genome size in population (length): 32.593
Average program size in population (points): 33.593
Average percent parens in population: 0.030
Minimum age in population: 48.65530980797485
Maximum age in population: 52.76836762949824
Average age in population: 50.96384645000519
Median age in population: 51.00660361867631
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.471
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.471
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 28324524
--- Timings ---
Current time: 1529616157886 milliseconds
Total Time:         105.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.1 seconds, 41.7%
Fitness Testing:     50.7 seconds, 47.9%
Report:              10.9 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 9014.0
Test mean error for best: 4.50700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -22.3143767389
Correct output: -102.9763195877 | Program output: -95.9763195877
Correct output: 133.2733399729 | Program output: 140.2733399729
Correct output: -110.3937581489 | Program output: -103.3937581489
Correct output: -30.9860347971 | Program output: -23.9860347971
Correct output: 134.5614254538 | Program output: 141.5614254538
Correct output: -19.0348050459 | Program output: -12.0348050459
Correct output: 61.3041891932  | Program output: 68.3041891932 
Correct output: -61.8724070197 | Program output: -54.8724070197
Correct output: -112.5263460948 | Program output: -105.5263460948
Correct output: 41.2299559551  | Program output: 48.2299559551 
Correct output: -61.4991211175 | Program output: -54.4991211175
Correct output: -146.9426549359 | Program output: -139.9426549359
Correct output: -111.8394117999 | Program output: -104.8394117999
Correct output: -60.3162671105 | Program output: -53.3162671105
Correct output: -2.5578290415  | Program output: 4.4421709585  
Correct output: 133.2081034946 | Program output: 140.2081034946
Correct output: -68.1372059073 | Program output: -61.1372059073
Correct output: -33.4443516435 | Program output: -26.4443516435
Correct output: -12.3607505433 | Program output: -5.3607505433 
Correct output: -37.599216489  | Program output: -30.599216489 
Correct output: 135.8818814541 | Program output: 142.8818814541
Correct output: 12.537302974   | Program output: 19.537302974  
Correct output: 26.3991940027  | Program output: 33.3991940027 
Correct output: -21.9441174358 | Program output: -14.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult float_add float_inc integer_dup_items integer_dup_items float_inc integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_dup)
Errors: [7.0 1 7.0 3 7.0 2 7.0 2 7.0 2 7.0 2 7.0 1 7.0 1 7.0 2 7.0 2 7.0 1 7.0 2 7.0 2 7.0 2 7.0 2 7.0 11 7.0 2 7.0 1 7.0 2 7.0 2 7.0 1 7.0 2 7.0 1 7.0 2 7.0 2]
Total: 228.0
Mean: 4.56
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2904.371619899999
Median total errors in population: 1261.0
Error averages by case: (70.10473510000001 1.616 122.94590019999995 3.791 97.9827308 2.983 165.74672499999997 3.982 119.92064760000002 12.014 123.59096030000003 3.378 110.7701183 2.941 103.10820939999998 2.854 137.67541859999994 12.796 94.9622263 3.807 88.1077653 2.4 84.2673156 2.952 145.4818576 3.923 147.5505886 3.936 76.96383060000002 2.095 107.73901299999997 2.941 100.70660590000001 3.489 155.94708619999997 10.961 112.81800919999998 2.498 94.30074899999997 2.486 117.43005329999998 2.88 137.97724639999996 3.714 98.52747359999998 2.78 85.15160639999998 2.705 101.71674759999996 2.956)
Error minima by case: (0.0 0 7.0 2 7.0 1 7.0 1 7.0 2 7.0 2 7.0 1 7.0 1 7.0 2 7.0 2 7.0 1 7.0 1 7.0 2 7.0 2 2.0 1 2.0598 1 7.0 1 7.0 1 7.0 1 7.0 1 7.0 1 7.0 2 1.5373 1 7.0 1 7.0 1)
Average genome size in population (length): 34.776
Average program size in population (points): 35.776
Average percent parens in population: 0.029
Minimum age in population: 50.34943892504089
Maximum age in population: 54.22415227029705
Average age in population: 52.3665695472412
Median age in population: 52.4333878676116
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 29193924
--- Timings ---
Current time: 1529616160920 milliseconds
Total Time:         108.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.4 seconds, 41.7%
Fitness Testing:     52.2 seconds, 47.9%
Report:              11.2 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 7871.0
Test mean error for best: 3.93550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -23.3143767389
Correct output: -102.9763195877 | Program output: -96.9763195877
Correct output: 133.2733399729 | Program output: 139.2733399729
Correct output: -110.3937581489 | Program output: -104.3937581489
Correct output: -30.9860347971 | Program output: -24.9860347971
Correct output: 134.5614254538 | Program output: 140.5614254538
Correct output: -19.0348050459 | Program output: -13.0348050459
Correct output: 61.3041891932  | Program output: 67.3041891932 
Correct output: -61.8724070197 | Program output: -55.8724070197
Correct output: -112.5263460948 | Program output: -106.5263460948
Correct output: 41.2299559551  | Program output: 47.2299559551 
Correct output: -61.4991211175 | Program output: -55.4991211175
Correct output: -146.9426549359 | Program output: -140.9426549359
Correct output: -111.8394117999 | Program output: -105.8394117999
Correct output: -60.3162671105 | Program output: -54.3162671105
Correct output: -2.5578290415  | Program output: 3.4421709585  
Correct output: 133.2081034946 | Program output: 139.2081034946
Correct output: -68.1372059073 | Program output: -62.1372059073
Correct output: -33.4443516435 | Program output: -27.4443516435
Correct output: -12.3607505433 | Program output: -6.3607505433 
Correct output: -37.599216489  | Program output: -31.599216489 
Correct output: 135.8818814541 | Program output: 141.8818814541
Correct output: 12.537302974   | Program output: 18.537302974  
Correct output: 26.3991940027  | Program output: 32.3991940027 
Correct output: -21.9441174358 | Program output: -15.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_rot} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_rot integer_dup_items float_inc integer_mult float_add float_inc integer_dup_items integer_dup_items float_inc integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_dup)
Errors: [6.0 1 6.0 3 6.0 1 6.0 2 6.0 2 6.0 2 6.0 1 6.0 1 6.0 2 6.0 2 6.0 1 6.0 2 6.0 1 6.0 2 6.0 2 6.0 11 6.0 1 6.0 1 6.0 2 6.0 2 6.0 1 6.0 2 6.0 1 6.0 2 6.0 2]
Total: 200.0
Mean: 4.0
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2991.3904984
Median total errors in population: 1258.0
Error averages by case: (78.52177240000002 2.118 128.86063609999997 3.804 99.6205458 3.031 169.3514494 3.986 123.7949878 11.58 123.72875919999998 3.863 112.93893519999999 2.989 103.97472699999997 2.915 140.65841260000002 12.156 102.4713544 3.532 93.86119249999999 2.897 87.8673432 3.036 150.46304290000006 3.971 152.23500549999997 3.869 80.96116389999997 2.192 110.08048620000001 3.297 102.19625100000002 3.052 158.00508899999994 10.614 114.88926629999996 3.012 97.34235 3.0 119.27172669999997 2.86 137.511199 3.411 103.60096819999998 2.823 90.93046779999999 2.81 104.39036630000001 3.045)
Error minima by case: (0.0 0 6.0 2 6.0 1 6.0 1 5.014 2 6.0 2 6.0 1 3.3042 1 1.5583 2 6.0 2 6.0 1 1.9316 1 6.0 1 6.0 2 0.0 0 3.0135 1 6.0 1 3.7065 1 6.0 1 6.0 1 6.0 1 6.0 2 0.3016 1 4.8166 1 6.0 1)
Average genome size in population (length): 39.178
Average program size in population (points): 40.178
Average percent parens in population: 0.025
Minimum age in population: 51.708229136304
Maximum age in population: 55.90247207836364
Average age in population: 53.94574423017981
Median age in population: 53.95167686518107
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.545
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.545
Total error diversity:				 0.048
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 30173374
--- Timings ---
Current time: 1529616163848 milliseconds
Total Time:         111.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.7 seconds, 41.7%
Fitness Testing:     53.6 seconds, 47.9%
Report:              11.5 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 5566.0
Test mean error for best: 2.78300
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -25.3143767389
Correct output: -102.9763195877 | Program output: -98.9763195877
Correct output: 133.2733399729 | Program output: 137.2733399729
Correct output: -110.3937581489 | Program output: -106.3937581489
Correct output: -30.9860347971 | Program output: -26.9860347971
Correct output: 134.5614254538 | Program output: 138.5614254538
Correct output: -19.0348050459 | Program output: -15.0348050459
Correct output: 61.3041891932  | Program output: 65.3041891932 
Correct output: -61.8724070197 | Program output: -57.8724070197
Correct output: -112.5263460948 | Program output: -108.5263460948
Correct output: 41.2299559551  | Program output: 45.2299559551 
Correct output: -61.4991211175 | Program output: -57.4991211175
Correct output: -146.9426549359 | Program output: -142.9426549359
Correct output: -111.8394117999 | Program output: -107.8394117999
Correct output: -60.3162671105 | Program output: -56.3162671105
Correct output: -2.5578290415  | Program output: 1.4421709585  
Correct output: 133.2081034946 | Program output: 137.2081034946
Correct output: -68.1372059073 | Program output: -64.1372059073
Correct output: -33.4443516435 | Program output: -29.4443516435
Correct output: -12.3607505433 | Program output: -8.3607505433 
Correct output: -37.599216489  | Program output: -33.599216489 
Correct output: 135.8818814541 | Program output: 139.8818814541
Correct output: 12.537302974   | Program output: 16.537302974  
Correct output: 26.3991940027  | Program output: 30.3991940027 
Correct output: -21.9441174358 | Program output: -17.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult float_add float_inc integer_dup_items float_inc print_float integer_dup float_sin integer_dup)
Errors: [4.0 1 4.0 3 4.0 1 4.0 2 4.0 2 4.0 1 4.0 1 4.0 1 4.0 2 4.0 2 4.0 1 4.0 2 4.0 1 4.0 2 4.0 2 4.0 11 4.0 1 4.0 1 4.0 2 4.0 2 4.0 1 4.0 1 4.0 1 4.0 2 4.0 2]
Total: 148.0
Mean: 2.96
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2625.9606681
Median total errors in population: 1255.0
Error averages by case: (72.05000150000004 2.129 112.85089169999998 3.754 87.2982423 3.01 145.6460518 3.619 108.11957110000002 9.74 106.4369551 3.679 98.61295539999999 2.808 90.42797979999999 2.729 122.04023429999998 10.495 92.09030159999998 3.429 83.7761519 2.706 78.85794550000001 3.03 130.4049611 3.785 131.72043399999995 3.6 73.2410127 2.351 96.3012112 4.659 89.29622800000004 2.78 136.088395 9.009 100.41667639999997 3.038 85.87520549999999 3.039 104.05447059999997 2.505 117.66863479999998 3.394 91.5902321 2.624 81.54461099999999 2.899 91.70131369999997 3.039)
Error minima by case: (0.0 0 4.0 2 4.0 1 4.0 1 3.044 2 4.0 1 4.0 1 2.3042 1 1.8724 2 4.0 2 1.4951 1 4.0 1 3.9427 1 4.0 2 0.0 0 0.8356 1 4.0 1 4.0 1 4.0 1 2.4507 1 4.0 1 4.0 1 0.4627 1 1.6008 1 4.0 1)
Average genome size in population (length): 39.346
Average program size in population (points): 40.346
Average percent parens in population: 0.025
Minimum age in population: 53.28587866213638
Maximum age in population: 57.2029288529593
Average age in population: 55.44869158281863
Median age in population: 55.4890341142891
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 119
Genome diversity (% unique Plush genomes):	 0.503
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 119
Syntactic diversity (% unique Push programs):	 0.503
Total error diversity:				 0.061
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 31157024
--- Timings ---
Current time: 1529616166790 milliseconds
Total Time:         114.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.9 seconds, 41.7%
Fitness Testing:     55.0 seconds, 47.9%
Report:              11.8 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 4416.0
Test mean error for best: 2.20800
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -26.3143767389
Correct output: -102.9763195877 | Program output: -99.9763195877
Correct output: 133.2733399729 | Program output: 136.2733399729
Correct output: -110.3937581489 | Program output: -107.3937581489
Correct output: -30.9860347971 | Program output: -27.9860347971
Correct output: 134.5614254538 | Program output: 137.5614254538
Correct output: -19.0348050459 | Program output: -16.0348050459
Correct output: 61.3041891932  | Program output: 64.3041891932 
Correct output: -61.8724070197 | Program output: -58.8724070197
Correct output: -112.5263460948 | Program output: -109.5263460948
Correct output: 41.2299559551  | Program output: 44.2299559551 
Correct output: -61.4991211175 | Program output: -58.4991211175
Correct output: -146.9426549359 | Program output: -143.9426549359
Correct output: -111.8394117999 | Program output: -108.8394117999
Correct output: -60.3162671105 | Program output: -57.3162671105
Correct output: -2.5578290415  | Program output: 0.4421709585  
Correct output: 133.2081034946 | Program output: 136.2081034946
Correct output: -68.1372059073 | Program output: -65.1372059073
Correct output: -33.4443516435 | Program output: -30.4443516435
Correct output: -12.3607505433 | Program output: -9.3607505433 
Correct output: -37.599216489  | Program output: -34.599216489 
Correct output: 135.8818814541 | Program output: 138.8818814541
Correct output: 12.537302974   | Program output: 15.537302974  
Correct output: 26.3991940027  | Program output: 29.3991940027 
Correct output: -21.9441174358 | Program output: -18.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_inc integer_dup_items float_inc integer_mult float_add float_inc integer_dup_items print_float integer_dup float_sin integer_dup)
Errors: [3.0 1 3.0 3 3.0 1 3.0 2 3.0 2 3.0 1 3.0 1 3.0 1 3.0 2 3.0 2 3.0 1 3.0 2 3.0 1 3.0 2 3.0 2 3.0 11 3.0 1 3.0 1 3.0 1 3.0 2 3.0 1 3.0 1 3.0 1 3.0 1 3.0 2]
Total: 121.0
Mean: 2.42
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 1614.6723267
Median total errors in population: 228.0
Error averages by case: (49.508593 1.764 65.3384273 3.586 57.26242330000001 2.613 76.40174480000002 2.927 62.07895500000003 5.107 62.91567739999999 2.868 62.747212400000016 2.001 56.4779418 1.985 65.61587770000001 5.299 59.46237529999998 2.841 54.00104010000003 1.949 56.09554180000002 2.697 72.2444143 2.857 71.5999634 3.022 53.87158749999998 2.498 60.66525470000002 8.748 57.856509900000034 2.522 72.22231930000004 4.196 63.7597261 2.683 57.250464100000016 2.69 65.20818709999998 1.875 66.680349 2.939 56.57204240000003 1.932 51.769028299999995 2.623 60.13767070000001 2.707)
Error minima by case: (0.0 0 3.0 2 3.0 1 3.0 1 1.9212 1 3.0 1 3.0 1 3.0 1 0.1276 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 2.0 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1)
Average genome size in population (length): 34.911
Average program size in population (points): 35.911
Average percent parens in population: 0.028
Minimum age in population: 54.81140261265682
Maximum age in population: 58.84162068917067
Average age in population: 57.02886181769945
Median age in population: 57.07292448310181
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 274
Genome diversity (% unique Plush genomes):	 0.467
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 274
Syntactic diversity (% unique Push programs):	 0.467
Total error diversity:				 0.063
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 32029799
--- Timings ---
Current time: 1529616169706 milliseconds
Total Time:         117.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.0 seconds, 41.7%
Fitness Testing:     56.5 seconds, 48.0%
Report:              12.1 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 2113.0
Test mean error for best: 1.05650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -28.3143767389
Correct output: -102.9763195877 | Program output: -101.9763195877
Correct output: 133.2733399729 | Program output: 134.2733399729
Correct output: -110.3937581489 | Program output: -109.3937581489
Correct output: -30.9860347971 | Program output: -29.9860347971
Correct output: 134.5614254538 | Program output: 135.5614254538
Correct output: -19.0348050459 | Program output: -18.0348050459
Correct output: 61.3041891932  | Program output: 62.3041891932 
Correct output: -61.8724070197 | Program output: -60.8724070197
Correct output: -112.5263460948 | Program output: -111.5263460948
Correct output: 41.2299559551  | Program output: 42.2299559551 
Correct output: -61.4991211175 | Program output: -60.4991211175
Correct output: -146.9426549359 | Program output: -145.9426549359
Correct output: -111.8394117999 | Program output: -110.8394117999
Correct output: -60.3162671105 | Program output: -59.3162671105
Correct output: -2.5578290415  | Program output: -1.5578290415 
Correct output: 133.2081034946 | Program output: 134.2081034946
Correct output: -68.1372059073 | Program output: -67.1372059073
Correct output: -33.4443516435 | Program output: -32.4443516435
Correct output: -12.3607505433 | Program output: -11.3607505433
Correct output: -37.599216489  | Program output: -36.599216489 
Correct output: 135.8818814541 | Program output: 136.8818814541
Correct output: 12.537302974   | Program output: 13.537302974  
Correct output: 26.3991940027  | Program output: 27.3991940027 
Correct output: -21.9441174358 | Program output: -20.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_shove} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_add integer_shove float_yankdup integer_mult float_add float_inc integer_dup_items integer_dup_items print_float integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_dup)
Errors: [1.0 1 1.0 1 1.0 1 1.0 2 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 53.0
Mean: 1.06
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1011.1826992000001
Median total errors in population: 200.0
Error averages by case: (34.821432900000005 1.674 38.0502499 3.589 37.418703300000004 2.086 40.836927500000016 2.717 36.48442000000001 3.142 37.712890099999996 2.436 38.95008350000003 1.676 35.68548100000002 1.643 37.619477399999994 3.164 37.99608210000001 2.659 35.39685250000001 1.69 37.662813200000016 2.577 39.9554769 2.148 39.63710280000002 2.739 36.86496879999998 2.578 38.111862099999996 10.343 37.43560440000001 2.104 39.36513870000001 2.222 39.652929600000014 2.59 37.01623819999998 2.566 40.277794499999985 1.701 38.7493961 2.589 35.40523590000002 1.652 34.5314117 2.545 38.11412610000001 2.6)
Error minima by case: (0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 0.4386 1 1.0 1 1.0 1 0.0426 1 1.0 1 1.0 1 1.0 1 0.0573 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1)
Average genome size in population (length): 32.79
Average program size in population (points): 33.79
Average percent parens in population: 0.030
Minimum age in population: 55.87190954829566
Maximum age in population: 60.83413594654121
Average age in population: 58.52799832969316
Median age in population: 58.57090545770916
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 117
Genome diversity (% unique Plush genomes):	 0.478
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 117
Syntactic diversity (% unique Push programs):	 0.478
Total error diversity:				 0.058
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 32849549
--- Timings ---
Current time: 1529616172704 milliseconds
Total Time:         120.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.2 seconds, 41.6%
Fitness Testing:     57.9 seconds, 48.0%
Report:              12.4 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 2113.0
Test mean error for best: 1.05650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -28.3143767389
Correct output: -102.9763195877 | Program output: -101.9763195877
Correct output: 133.2733399729 | Program output: 134.2733399729
Correct output: -110.3937581489 | Program output: -109.3937581489
Correct output: -30.9860347971 | Program output: -29.9860347971
Correct output: 134.5614254538 | Program output: 135.5614254538
Correct output: -19.0348050459 | Program output: -18.0348050459
Correct output: 61.3041891932  | Program output: 62.3041891932 
Correct output: -61.8724070197 | Program output: -60.8724070197
Correct output: -112.5263460948 | Program output: -111.5263460948
Correct output: 41.2299559551  | Program output: 42.2299559551 
Correct output: -61.4991211175 | Program output: -60.4991211175
Correct output: -146.9426549359 | Program output: -145.9426549359
Correct output: -111.8394117999 | Program output: -110.8394117999
Correct output: -60.3162671105 | Program output: -59.3162671105
Correct output: -2.5578290415  | Program output: -1.5578290415 
Correct output: 133.2081034946 | Program output: 134.2081034946
Correct output: -68.1372059073 | Program output: -67.1372059073
Correct output: -33.4443516435 | Program output: -32.4443516435
Correct output: -12.3607505433 | Program output: -11.3607505433
Correct output: -37.599216489  | Program output: -36.599216489 
Correct output: 135.8818814541 | Program output: 136.8818814541
Correct output: 12.537302974   | Program output: 13.537302974  
Correct output: 26.3991940027  | Program output: 27.3991940027 
Correct output: -21.9441174358 | Program output: -20.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_shove} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_add} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction print_float} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction print_float} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_dup})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_add integer_shove float_yankdup integer_mult float_add float_inc integer_dup_items integer_dup_items print_float integer_dup_items float_inc integer_dup_items float_inc float_inc print_float integer_dup float_sin integer_dup)
Errors: [1.0 1 1.0 1 1.0 1 1.0 2 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 53.0
Mean: 1.06
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1339.2574059
Median total errors in population: 173.0
Error averages by case: (47.006442300000046 2.058 50.73306290000004 3.851 49.78086820000003 2.11 54.610852200000004 2.99 49.22368430000004 3.49 50.20175079999999 2.227 52.52526680000003 2.032 47.9975737 1.933 50.68025349999999 3.492 50.73949839999997 2.971 47.537346700000036 1.953 50.72861980000003 2.884 53.08484979999998 2.198 52.858507700000004 3.028 49.684016199999974 2.895 51.40770290000003 10.012 49.81379980000004 2.096 52.93478370000003 2.576 53.439630200000025 2.862 49.969430600000024 2.917 54.25562919999995 2.036 51.57357460000001 2.577 47.84885810000005 1.879 46.554976399999994 2.661 51.407427100000014 2.931)
Error minima by case: (0.0 0 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 0.9126 1 0.1276 1 1.0 1 1.0 1 1.0 1 0.9427 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1)
Average genome size in population (length): 30.693
Average program size in population (points): 31.693
Average percent parens in population: 0.032
Minimum age in population: 57.03686152899172
Maximum age in population: 61.95506907209347
Average age in population: 60.05786000589408
Median age in population: 60.13956174593841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 80
Genome diversity (% unique Plush genomes):	 0.489
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 80
Syntactic diversity (% unique Push programs):	 0.489
Total error diversity:				 0.058
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 33616874
--- Timings ---
Current time: 1529616175891 milliseconds
Total Time:         123.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.5 seconds, 41.6%
Fitness Testing:     59.4 seconds, 48.0%
Report:              12.8 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -29.3143767389
Correct output: -102.9763195877 | Program output: -102.9763195877
Correct output: 133.2733399729 | Program output: 133.2733399729
Correct output: -110.3937581489 | Program output: -110.3937581489
Correct output: -30.9860347971 | Program output: -30.9860347971
Correct output: 134.5614254538 | Program output: 134.5614254538
Correct output: -19.0348050459 | Program output: -19.0348050459
Correct output: 61.3041891932  | Program output: 61.3041891932 
Correct output: -61.8724070197 | Program output: -61.8724070197
Correct output: -112.5263460948 | Program output: -112.5263460948
Correct output: 41.2299559551  | Program output: 41.2299559551 
Correct output: -61.4991211175 | Program output: -61.4991211175
Correct output: -146.9426549359 | Program output: -146.9426549359
Correct output: -111.8394117999 | Program output: -111.8394117999
Correct output: -60.3162671105 | Program output: -60.3162671105
Correct output: -2.5578290415  | Program output: -2.5578290415 
Correct output: 133.2081034946 | Program output: 133.2081034946
Correct output: -68.1372059073 | Program output: -68.1372059073
Correct output: -33.4443516435 | Program output: -33.4443516435
Correct output: -12.3607505433 | Program output: -12.3607505433
Correct output: -37.599216489  | Program output: -37.599216489 
Correct output: 135.8818814541 | Program output: 135.8818814541
Correct output: 12.537302974   | Program output: 12.537302974  
Correct output: 26.3991940027  | Program output: 26.3991940027 
Correct output: -21.9441174358 | Program output: -21.9441174358
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_max} {:instruction in2} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_dup_items} {:instruction float_add} {:instruction integer_shove} {:instruction float_yankdup} {:instruction integer_mult} {:instruction float_add} {:instruction integer_mult} {:instruction float_add} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_div})
Best program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_add integer_shove float_yankdup integer_mult float_add integer_mult float_add print_float integer_dup_items integer_dup_items float_inc integer_dup_items float_div)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 1229.8120728000001
Median total errors in population: 148.0
Error averages by case: (42.57361130000002 1.849 45.803413500000005 3.446 46.27246270000002 1.906 49.675426699999996 2.763 45.838620000000034 3.408 46.927444099999995 1.925 48.15554870000002 1.839 44.796343900000004 1.793 47.10577939999999 3.371 45.51790469999998 2.671 44.15224710000003 1.784 45.96419990000002 2.641 47.9607565 1.98 48.02066440000001 2.776 44.92998959999998 2.698 47.189838200000025 9.393 46.33487730000004 1.904 49.33290800000004 2.484 48.92206870000001 2.28 45.68358470000001 2.633 49.692266399999966 1.832 48.2391603 1.926 44.55793330000004 1.756 43.25136779999999 2.129 47.01965560000002 2.707)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 29.504
Average program size in population (points): 30.504
Average percent parens in population: 0.034
Minimum age in population: 59.06277311016311
Maximum age in population: 63.77235915827987
Average age in population: 61.60554023832375
Median age in population: 61.64264824631755
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.455
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.455
Total error diversity:				 0.053
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 34354474
--- Timings ---
Current time: 1529616178843 milliseconds
Total Time:         126.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.7 seconds, 41.6%
Fitness Testing:     60.8 seconds, 48.0%
Report:              13.2 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 41
Successful program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_add integer_shove float_yankdup integer_mult float_add integer_mult float_add print_float integer_dup_items integer_dup_items float_inc integer_dup_items float_div)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 28


Auto-simplifying with starting size: 28
step: 0
program: (float_stackdepth integer_rot float_max in2 float_frominteger float_yankdup integer_yankdup integer_dup_times integer_min integer_mult float_dec float_pop in1 integer_dup_items float_add integer_shove float_yankdup integer_mult float_add integer_mult float_add print_float integer_dup_items integer_dup_items float_inc integer_dup_items float_div)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 28

step: 500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -29.3143767389 | Program output: -29.3143767389
Correct output: -102.9763195877 | Program output: -102.9763195877
Correct output: 133.2733399729 | Program output: 133.2733399729
Correct output: -110.3937581489 | Program output: -110.3937581489
Correct output: -30.9860347971 | Program output: -30.9860347971
Correct output: 134.5614254538 | Program output: 134.5614254538
Correct output: -19.0348050459 | Program output: -19.0348050459
Correct output: 61.3041891932  | Program output: 61.3041891932 
Correct output: -61.8724070197 | Program output: -61.8724070197
Correct output: -112.5263460948 | Program output: -112.5263460948
Correct output: 41.2299559551  | Program output: 41.2299559551 
Correct output: -61.4991211175 | Program output: -61.4991211175
Correct output: -146.9426549359 | Program output: -146.9426549359
Correct output: -111.8394117999 | Program output: -111.8394117999
Correct output: -60.3162671105 | Program output: -60.3162671105
Correct output: -2.5578290415  | Program output: -2.5578290415 
Correct output: 133.2081034946 | Program output: 133.2081034946
Correct output: -68.1372059073 | Program output: -68.1372059073
Correct output: -33.4443516435 | Program output: -33.4443516435
Correct output: -12.3607505433 | Program output: -12.3607505433
Correct output: -37.599216489  | Program output: -37.599216489 
Correct output: 135.8818814541 | Program output: 135.8818814541
Correct output: 12.537302974   | Program output: 12.537302974  
Correct output: 26.3991940027  | Program output: 26.3991940027 
Correct output: -21.9441174358 | Program output: -21.9441174358
;;******************************
