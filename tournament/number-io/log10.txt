Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-83.11288654930445 100] 16.88711345069555]
Train Case:   1 | Input/Output: [[12.43788525583092 -70] -57.56211474416908]
Train Case:   2 | Input/Output: [[-48.04035572299619 -54] -102.0403557229962]
Train Case:   3 | Input/Output: [[-30.215288934557492 -31] -61.21528893455749]
Train Case:   4 | Input/Output: [[39.69626528906548 -34] 5.6962652890654795]
Train Case:   5 | Input/Output: [[71.65031592264 -83] -11.349684077359996]
Train Case:   6 | Input/Output: [[70.10543520408535 10] 80.10543520408535]
Train Case:   7 | Input/Output: [[12.160449563855707 -27] -14.839550436144293]
Train Case:   8 | Input/Output: [[11.766255840906908 63] 74.76625584090691]
Train Case:   9 | Input/Output: [[71.39159991499383 -15] 56.39159991499383]
Train Case:  10 | Input/Output: [[-41.56403423490475 -41] -82.56403423490475]
Train Case:  11 | Input/Output: [[-95.68828935333846 -35] -130.68828935333846]
Train Case:  12 | Input/Output: [[49.89737671351082 91] 140.89737671351082]
Train Case:  13 | Input/Output: [[-40.05083598530088 -11] -51.05083598530088]
Train Case:  14 | Input/Output: [[45.54186772849599 -36] 9.541867728495987]
Train Case:  15 | Input/Output: [[-44.76478922433802 87] 42.23521077566198]
Train Case:  16 | Input/Output: [[84.24730788656709 -8] 76.24730788656709]
Train Case:  17 | Input/Output: [[10.665171187477867 -95] -84.33482881252213]
Train Case:  18 | Input/Output: [[-16.38626460471184 57] 40.61373539528816]
Train Case:  19 | Input/Output: [[61.03173478767846 52] 113.03173478767846]
Train Case:  20 | Input/Output: [[55.37062245842202 8] 63.37062245842202]
Train Case:  21 | Input/Output: [[-30.739367548115155 74] 43.260632451884845]
Train Case:  22 | Input/Output: [[-36.889529728753764 -55] -91.88952972875376]
Train Case:  23 | Input/Output: [[-98.02565366354624 45] -53.02565366354624]
Train Case:  24 | Input/Output: [[-11.698557004233209 22] 10.301442995766791]
Test Case:   0 | Input/Output: [[-10.288592546999212 57] 46.71140745300079]
Test Case:   1 | Input/Output: [[8.608325013462519 -86] -77.39167498653748]
Test Case:   2 | Input/Output: [[-44.186932513585965 -27] -71.18693251358596]
Test Case:   3 | Input/Output: [[-21.782192440249503 -77] -98.7821924402495]
Test Case:   4 | Input/Output: [[24.4049255959562 -69] -44.5950744040438]
Test Case:   5 | Input/Output: [[-13.22612924679882 50] 36.77387075320118]
Test Case:   6 | Input/Output: [[40.75593918004569 91] 131.7559391800457]
Test Case:   7 | Input/Output: [[0.07999879320004766 -75] -74.92000120679995]
Test Case:   8 | Input/Output: [[-12.7316129353499 81] 68.2683870646501]
Test Case:   9 | Input/Output: [[-71.91446381516029 100] 28.08553618483971]
Test Case:  10 | Input/Output: [[67.84630130108775 29] 96.84630130108775]
Test Case:  11 | Input/Output: [[58.150503706439 60] 118.150503706439]
Test Case:  12 | Input/Output: [[-51.641748021115454 -72] -123.64174802111546]
Test Case:  13 | Input/Output: [[-3.983468892465922 -33] -36.98346889246592]
Test Case:  14 | Input/Output: [[-13.093182349060655 78] 64.90681765093935]
Test Case:  15 | Input/Output: [[99.6433294759731 -97] 2.643329475973104]
Test Case:  16 | Input/Output: [[91.81965582596087 -36] 55.819655825960865]
Test Case:  17 | Input/Output: [[-58.11374872161665 -80] -138.11374872161664]
Test Case:  18 | Input/Output: [[-74.89402675245003 19] -55.89402675245003]
Test Case:  19 | Input/Output: [[-30.98063596077047 1] -29.98063596077047]
Test Case:  20 | Input/Output: [[10.594123324085118 -67] -56.40587667591488]
Test Case:  21 | Input/Output: [[-21.1638385102475 61] 39.8361614897525]
Test Case:  22 | Input/Output: [[-10.800978761212974 -84] -94.80097876121297]
Test Case:  23 | Input/Output: [[77.763379137333 47] 124.763379137333]
Test Case:  24 | Input/Output: [[60.46293343144447 20] 80.46293343144447]
Test Case:  25 | Input/Output: [[-97.39453332691006 62] -35.394533326910064]
Test Case:  26 | Input/Output: [[-12.944631649907606 64] 51.055368350092394]
Test Case:  27 | Input/Output: [[16.203422504878446 56] 72.20342250487845]
Test Case:  28 | Input/Output: [[-52.9509484013605 92] 39.0490515986395]
Test Case:  29 | Input/Output: [[-49.93904223642394 32] -17.939042236423937]
Test Case:  30 | Input/Output: [[-86.36310986596682 81] -5.36310986596682]
Test Case:  31 | Input/Output: [[40.08870567129631 -41] -0.9112943287036899]
Test Case:  32 | Input/Output: [[87.98375150485845 -80] 7.983751504858446]
Test Case:  33 | Input/Output: [[84.05398289744977 -34] 50.05398289744977]
Test Case:  34 | Input/Output: [[-23.905700292102992 45] 21.094299707897008]
Test Case:  35 | Input/Output: [[-7.178627377580327 -59] -66.17862737758033]
Test Case:  36 | Input/Output: [[-15.346358456206374 49] 33.653641543793626]
Test Case:  37 | Input/Output: [[33.97458410125108 62] 95.97458410125108]
Test Case:  38 | Input/Output: [[74.45994225308334 -73] 1.4599422530833408]
Test Case:  39 | Input/Output: [[-51.5727432982344 -96] -147.5727432982344]
Test Case:  40 | Input/Output: [[26.091551663888524 56] 82.09155166388852]
Test Case:  41 | Input/Output: [[-99.16745294469752 -45] -144.16745294469752]
Test Case:  42 | Input/Output: [[-23.172099259609723 -78] -101.17209925960972]
Test Case:  43 | Input/Output: [[-7.413251329721888 -65] -72.41325132972189]
Test Case:  44 | Input/Output: [[25.38138850854135 -83] -57.61861149145865]
Test Case:  45 | Input/Output: [[91.66484881108678 -77] 14.664848811086785]
Test Case:  46 | Input/Output: [[33.09941290374175 -22] 11.09941290374175]
Test Case:  47 | Input/Output: [[-99.17518318352631 46] -53.175183183526315]
Test Case:  48 | Input/Output: [[4.453158816264718 -39] -34.54684118373528]
Test Case:  49 | Input/Output: [[6.3209113366498 74] 80.3209113366498]
Test Case:  50 | Input/Output: [[-56.319623227090766 22] -34.319623227090766]
Test Case:  51 | Input/Output: [[16.506143113406324 -87] -70.49385688659368]
Test Case:  52 | Input/Output: [[-40.928828871017764 -95] -135.92882887101777]
Test Case:  53 | Input/Output: [[84.09844085350971 -9] 75.09844085350971]
Test Case:  54 | Input/Output: [[-77.5659885592396 -44] -121.5659885592396]
Test Case:  55 | Input/Output: [[77.94134269412339 -15] 62.94134269412339]
Test Case:  56 | Input/Output: [[86.03957790748956 100] 186.03957790748956]
Test Case:  57 | Input/Output: [[-90.90595805975757 -98] -188.90595805975755]
Test Case:  58 | Input/Output: [[22.48735076936694 -64] -41.51264923063306]
Test Case:  59 | Input/Output: [[-84.79011755638548 -50] -134.7901175563855]
Test Case:  60 | Input/Output: [[-8.390103889504005 -22] -30.390103889504005]
Test Case:  61 | Input/Output: [[18.375599281140637 13] 31.375599281140637]
Test Case:  62 | Input/Output: [[60.35247164252897 -3] 57.35247164252897]
Test Case:  63 | Input/Output: [[52.51074946472292 -40] 12.51074946472292]
Test Case:  64 | Input/Output: [[42.00498514121 28] 70.00498514121]
Test Case:  65 | Input/Output: [[-17.437609591068252 -97] -114.43760959106825]
Test Case:  66 | Input/Output: [[-19.556232546292904 -47] -66.5562325462929]
Test Case:  67 | Input/Output: [[23.65050168393597 -65] -41.34949831606403]
Test Case:  68 | Input/Output: [[59.58750741209093 31] 90.58750741209093]
Test Case:  69 | Input/Output: [[37.14191922444462 -35] 2.141919224444621]
Test Case:  70 | Input/Output: [[-44.934300395036075 -64] -108.93430039503608]
Test Case:  71 | Input/Output: [[-89.60569232125496 8] -81.60569232125496]
Test Case:  72 | Input/Output: [[-89.74278756344899 -47] -136.74278756344899]
Test Case:  73 | Input/Output: [[24.650349517729026 21] 45.650349517729026]
Test Case:  74 | Input/Output: [[-13.912634442750374 97] 83.08736555724963]
Test Case:  75 | Input/Output: [[7.731020898061146 22] 29.731020898061146]
Test Case:  76 | Input/Output: [[-28.82503780003063 -74] -102.82503780003063]
Test Case:  77 | Input/Output: [[-45.31620141495583 100] 54.68379858504417]
Test Case:  78 | Input/Output: [[45.43089923728397 -47] -1.5691007627160332]
Test Case:  79 | Input/Output: [[-45.45708629476126 83] 37.54291370523874]
Test Case:  80 | Input/Output: [[56.76237359159765 -23] 33.76237359159765]
Test Case:  81 | Input/Output: [[-81.20981207186809 73] -8.209812071868086]
Test Case:  82 | Input/Output: [[-45.52965662021855 95] 49.47034337978145]
Test Case:  83 | Input/Output: [[79.58774555297799 99] 178.587745552978]
Test Case:  84 | Input/Output: [[41.72948685785215 -23] 18.72948685785215]
Test Case:  85 | Input/Output: [[19.5881535647533 91] 110.5881535647533]
Test Case:  86 | Input/Output: [[6.9059053410618105 20] 26.90590534106181]
Test Case:  87 | Input/Output: [[-13.20235179436473 67] 53.79764820563527]
Test Case:  88 | Input/Output: [[98.15445716441647 76] 174.15445716441647]
Test Case:  89 | Input/Output: [[-28.28743877499194 -63] -91.28743877499194]
Test Case:  90 | Input/Output: [[64.26372017262975 -49] 15.263720172629746]
Test Case:  91 | Input/Output: [[-64.28828999740215 -25] -89.28828999740215]
Test Case:  92 | Input/Output: [[-3.7126360306086923 -28] -31.712636030608692]
Test Case:  93 | Input/Output: [[-59.82776170472184 -57] -116.82776170472184]
Test Case:  94 | Input/Output: [[-34.74676273594777 99] 64.25323726405223]
Test Case:  95 | Input/Output: [[6.996336737147828 25] 31.99633673714783]
Test Case:  96 | Input/Output: [[-88.09882013563669 -53] -141.0988201356367]
Test Case:  97 | Input/Output: [[-90.20987667096698 41] -49.20987667096698]
Test Case:  98 | Input/Output: [[12.999404668749932 43] 55.99940466874993]
Test Case:  99 | Input/Output: [[-37.35394650666333 -77] -114.35394650666333]
Test Case: 100 | Input/Output: [[-38.93131637184774 43] 4.068683628152257]
Test Case: 101 | Input/Output: [[38.64157005075265 38] 76.64157005075265]
Test Case: 102 | Input/Output: [[-87.97059936824651 -37] -124.97059936824651]
Test Case: 103 | Input/Output: [[92.01824030634006 -40] 52.01824030634006]
Test Case: 104 | Input/Output: [[4.305368208873588 69] 73.30536820887359]
Test Case: 105 | Input/Output: [[-72.63708072695721 -17] -89.63708072695721]
Test Case: 106 | Input/Output: [[-52.06351238393179 -82] -134.0635123839318]
Test Case: 107 | Input/Output: [[-53.42980825881356 -97] -150.42980825881355]
Test Case: 108 | Input/Output: [[-6.1169583218334935 -9] -15.116958321833494]
Test Case: 109 | Input/Output: [[28.025302980346254 44] 72.02530298034625]
Test Case: 110 | Input/Output: [[-17.21478151889295 -82] -99.21478151889295]
Test Case: 111 | Input/Output: [[31.02061750643577 -65] -33.97938249356423]
Test Case: 112 | Input/Output: [[84.12428592248659 -9] 75.12428592248659]
Test Case: 113 | Input/Output: [[90.06563173636454 88] 178.06563173636454]
Test Case: 114 | Input/Output: [[57.71665309259242 -39] 18.716653092592423]
Test Case: 115 | Input/Output: [[78.25415121826765 -46] 32.25415121826765]
Test Case: 116 | Input/Output: [[-27.955329788445752 88] 60.04467021155425]
Test Case: 117 | Input/Output: [[92.12533341745896 41] 133.12533341745896]
Test Case: 118 | Input/Output: [[77.72950479020167 93] 170.72950479020167]
Test Case: 119 | Input/Output: [[-69.30086501264529 -3] -72.30086501264529]
Test Case: 120 | Input/Output: [[57.43495185658696 -31] 26.434951856586963]
Test Case: 121 | Input/Output: [[59.21049377277555 -97] -37.78950622722445]
Test Case: 122 | Input/Output: [[90.24192269284026 1] 91.24192269284026]
Test Case: 123 | Input/Output: [[-80.45046396952691 -85] -165.4504639695269]
Test Case: 124 | Input/Output: [[-36.13856386991476 56] 19.861436130085238]
Test Case: 125 | Input/Output: [[52.68809714188137 -19] 33.68809714188137]
Test Case: 126 | Input/Output: [[-4.921316166597961 2] -2.9213161665979612]
Test Case: 127 | Input/Output: [[-86.73796811578582 -34] -120.73796811578582]
Test Case: 128 | Input/Output: [[68.02296604330053 6] 74.02296604330053]
Test Case: 129 | Input/Output: [[11.931395799257544 23] 34.931395799257544]
Test Case: 130 | Input/Output: [[-91.38512330513038 -47] -138.38512330513038]
Test Case: 131 | Input/Output: [[-17.721080130865047 -38] -55.72108013086505]
Test Case: 132 | Input/Output: [[51.356073082277874 16] 67.35607308227787]
Test Case: 133 | Input/Output: [[-87.72444532733832 42] -45.724445327338316]
Test Case: 134 | Input/Output: [[-32.20568688885763 98] 65.79431311114237]
Test Case: 135 | Input/Output: [[14.571910107712412 18] 32.57191010771241]
Test Case: 136 | Input/Output: [[18.225461558911917 -65] -46.77453844108808]
Test Case: 137 | Input/Output: [[-15.072967060095223 12] -3.0729670600952232]
Test Case: 138 | Input/Output: [[-49.322212812561176 -5] -54.322212812561176]
Test Case: 139 | Input/Output: [[-0.18751871630311712 32] 31.812481283696883]
Test Case: 140 | Input/Output: [[30.38412118716022 43] 73.38412118716022]
Test Case: 141 | Input/Output: [[11.682507049152946 -93] -81.31749295084705]
Test Case: 142 | Input/Output: [[-31.14751363223833 88] 56.85248636776167]
Test Case: 143 | Input/Output: [[87.68669136356641 36] 123.68669136356641]
Test Case: 144 | Input/Output: [[-15.717162297573424 -93] -108.71716229757342]
Test Case: 145 | Input/Output: [[49.91968269083878 -39] 10.919682690838783]
Test Case: 146 | Input/Output: [[-48.87006675314141 -39] -87.8700667531414]
Test Case: 147 | Input/Output: [[-86.82936442294262 52] -34.82936442294262]
Test Case: 148 | Input/Output: [[62.53144138467263 31] 93.53144138467263]
Test Case: 149 | Input/Output: [[14.782086087272631 -21] -6.217913912727369]
Test Case: 150 | Input/Output: [[93.63762402352239 11] 104.63762402352239]
Test Case: 151 | Input/Output: [[-53.618287714108284 -83] -136.61828771410828]
Test Case: 152 | Input/Output: [[40.77437886479075 64] 104.77437886479075]
Test Case: 153 | Input/Output: [[-95.84113776945118 -100] -195.84113776945117]
Test Case: 154 | Input/Output: [[-74.18431446101899 -24] -98.18431446101899]
Test Case: 155 | Input/Output: [[-40.75008015399688 16] -24.750080153996883]
Test Case: 156 | Input/Output: [[29.61463698330934 -35] -5.385363016690661]
Test Case: 157 | Input/Output: [[96.37500769059096 79] 175.37500769059096]
Test Case: 158 | Input/Output: [[-37.83965118791826 -33] -70.83965118791826]
Test Case: 159 | Input/Output: [[73.35824665314951 16] 89.35824665314951]
Test Case: 160 | Input/Output: [[-61.61609912265109 -24] -85.6160991226511]
Test Case: 161 | Input/Output: [[-46.1978286258872 -21] -67.1978286258872]
Test Case: 162 | Input/Output: [[-4.53714122680617 91] 86.46285877319383]
Test Case: 163 | Input/Output: [[-89.07982630738726 -96] -185.07982630738726]
Test Case: 164 | Input/Output: [[78.0792574540965 -4] 74.0792574540965]
Test Case: 165 | Input/Output: [[-81.99969945806696 -18] -99.99969945806696]
Test Case: 166 | Input/Output: [[-55.649752497929185 -6] -61.649752497929185]
Test Case: 167 | Input/Output: [[93.38059313819241 53] 146.3805931381924]
Test Case: 168 | Input/Output: [[-9.3689330219446 18] 8.6310669780554]
Test Case: 169 | Input/Output: [[-49.767859238892086 -92] -141.76785923889207]
Test Case: 170 | Input/Output: [[80.03670263366416 -71] 9.036702633664163]
Test Case: 171 | Input/Output: [[50.722518264069635 -64] -13.277481735930365]
Test Case: 172 | Input/Output: [[-22.17416056262236 -81] -103.17416056262236]
Test Case: 173 | Input/Output: [[-78.25938587910031 -79] -157.2593858791003]
Test Case: 174 | Input/Output: [[-34.79181698504247 -58] -92.79181698504247]
Test Case: 175 | Input/Output: [[-64.43309532619935 -9] -73.43309532619935]
Test Case: 176 | Input/Output: [[7.7399640224380875 -9] -1.2600359775619125]
Test Case: 177 | Input/Output: [[62.795786575534265 -70] -7.204213424465735]
Test Case: 178 | Input/Output: [[-9.20352416205526 -100] -109.20352416205526]
Test Case: 179 | Input/Output: [[20.71483484264138 99] 119.71483484264138]
Test Case: 180 | Input/Output: [[-43.62396679225553 -62] -105.62396679225553]
Test Case: 181 | Input/Output: [[-84.63517822854985 -3] -87.63517822854985]
Test Case: 182 | Input/Output: [[-83.10431749182207 -19] -102.10431749182207]
Test Case: 183 | Input/Output: [[-69.10904959794324 2] -67.10904959794324]
Test Case: 184 | Input/Output: [[2.225178154597046 -66] -63.774821845402954]
Test Case: 185 | Input/Output: [[67.51087839581061 -9] 58.51087839581061]
Test Case: 186 | Input/Output: [[84.76182786225439 39] 123.76182786225439]
Test Case: 187 | Input/Output: [[-80.86520628878533 -31] -111.86520628878533]
Test Case: 188 | Input/Output: [[-35.103954503735665 -24] -59.103954503735665]
Test Case: 189 | Input/Output: [[15.984689236339662 18] 33.98468923633966]
Test Case: 190 | Input/Output: [[26.312626529934718 55] 81.31262652993472]
Test Case: 191 | Input/Output: [[-8.512991061622529 -77] -85.51299106162253]
Test Case: 192 | Input/Output: [[-69.43643723351548 -7] -76.43643723351548]
Test Case: 193 | Input/Output: [[6.448896970523705 -94] -87.5511030294763]
Test Case: 194 | Input/Output: [[91.76514136654737 17] 108.76514136654737]
Test Case: 195 | Input/Output: [[-89.60887782765661 -39] -128.6088778276566]
Test Case: 196 | Input/Output: [[-76.99398970861589 -49] -125.99398970861589]
Test Case: 197 | Input/Output: [[-24.44506495981294 45] 20.55493504018706]
Test Case: 198 | Input/Output: [[-6.187668635483817 -32] -38.18766863548382]
Test Case: 199 | Input/Output: [[55.980628270807955 64] 119.98062827080796]
Test Case: 200 | Input/Output: [[-53.956299941233034 -61] -114.95629994123303]
Test Case: 201 | Input/Output: [[-55.23912342052921 100] 44.76087657947079]
Test Case: 202 | Input/Output: [[11.918623089938691 22] 33.91862308993869]
Test Case: 203 | Input/Output: [[1.8704755244677784 -86] -84.12952447553222]
Test Case: 204 | Input/Output: [[-71.21682988030878 63] -8.21682988030878]
Test Case: 205 | Input/Output: [[-38.21688000245413 56] 17.783119997545867]
Test Case: 206 | Input/Output: [[-90.01830411692981 25] -65.01830411692981]
Test Case: 207 | Input/Output: [[17.87050886986536 -73] -55.12949113013464]
Test Case: 208 | Input/Output: [[12.217884920465423 -47] -34.78211507953458]
Test Case: 209 | Input/Output: [[-83.3193962604732 2] -81.3193962604732]
Test Case: 210 | Input/Output: [[-20.054374155116776 100] 79.94562584488322]
Test Case: 211 | Input/Output: [[46.529990679569835 25] 71.52999067956983]
Test Case: 212 | Input/Output: [[93.26443728378487 -97] -3.735562716215128]
Test Case: 213 | Input/Output: [[68.7158746841171 -41] 27.715874684117097]
Test Case: 214 | Input/Output: [[-97.47265836493904 -49] -146.47265836493904]
Test Case: 215 | Input/Output: [[-0.5079768658937382 -74] -74.50797686589374]
Test Case: 216 | Input/Output: [[-92.92103794818196 -47] -139.92103794818195]
Test Case: 217 | Input/Output: [[41.68192128539201 -74] -32.31807871460799]
Test Case: 218 | Input/Output: [[-19.49916212796245 -71] -90.49916212796245]
Test Case: 219 | Input/Output: [[-68.87417444999502 98] 29.125825550004976]
Test Case: 220 | Input/Output: [[-16.496361784093068 -8] -24.496361784093068]
Test Case: 221 | Input/Output: [[-10.711433739292445 52] 41.288566260707555]
Test Case: 222 | Input/Output: [[-93.20699088464028 91] -2.206990884640277]
Test Case: 223 | Input/Output: [[-20.640548942280915 -11] -31.640548942280915]
Test Case: 224 | Input/Output: [[29.72340114795341 -97] -67.27659885204659]
Test Case: 225 | Input/Output: [[50.145208231641845 -13] 37.145208231641845]
Test Case: 226 | Input/Output: [[-65.43221630131615 -95] -160.43221630131615]
Test Case: 227 | Input/Output: [[97.37078788241135 26] 123.37078788241135]
Test Case: 228 | Input/Output: [[-81.31036724279676 69] -12.310367242796758]
Test Case: 229 | Input/Output: [[92.71501153446377 94] 186.71501153446377]
Test Case: 230 | Input/Output: [[-96.98616056201206 -69] -165.98616056201206]
Test Case: 231 | Input/Output: [[-97.5260242101498 97] -0.5260242101497994]
Test Case: 232 | Input/Output: [[-44.86116906822917 59] 14.138830931770833]
Test Case: 233 | Input/Output: [[83.47154782756766 -76] 7.471547827567662]
Test Case: 234 | Input/Output: [[-41.962751808308795 63] 21.037248191691205]
Test Case: 235 | Input/Output: [[-1.3414051135123657 19] 17.658594886487634]
Test Case: 236 | Input/Output: [[-45.66699986864773 -23] -68.66699986864774]
Test Case: 237 | Input/Output: [[97.30148690604864 -82] 15.301486906048638]
Test Case: 238 | Input/Output: [[-26.269938546659446 -92] -118.26993854665945]
Test Case: 239 | Input/Output: [[-70.39352577723244 34] -36.39352577723244]
Test Case: 240 | Input/Output: [[79.91909894382974 41] 120.91909894382974]
Test Case: 241 | Input/Output: [[-27.2078143350803 -58] -85.2078143350803]
Test Case: 242 | Input/Output: [[60.48753076563523 -35] 25.487530765635228]
Test Case: 243 | Input/Output: [[81.39043740835154 -39] 42.390437408351545]
Test Case: 244 | Input/Output: [[-51.42782053720889 16] -35.42782053720889]
Test Case: 245 | Input/Output: [[-29.05540662409112 25] -4.05540662409112]
Test Case: 246 | Input/Output: [[-44.04155099408833 87] 42.95844900591167]
Test Case: 247 | Input/Output: [[-88.3960291363692 -21] -109.3960291363692]
Test Case: 248 | Input/Output: [[51.94617254254186 4] 55.94617254254186]
Test Case: 249 | Input/Output: [[8.768837765347342 -22] -13.231162234652658]
Test Case: 250 | Input/Output: [[-16.270374238847765 -35] -51.270374238847765]
Test Case: 251 | Input/Output: [[-40.207987858198926 -91] -131.20798785819892]
Test Case: 252 | Input/Output: [[73.98153805063225 43] 116.98153805063225]
Test Case: 253 | Input/Output: [[59.63459559348158 85] 144.63459559348158]
Test Case: 254 | Input/Output: [[91.11891206919677 -25] 66.11891206919677]
Test Case: 255 | Input/Output: [[46.69689924033014 -42] 4.69689924033014]
Test Case: 256 | Input/Output: [[-49.152243694554976 -89] -138.15224369455498]
Test Case: 257 | Input/Output: [[67.9628068351546 -65] 2.962806835154595]
Test Case: 258 | Input/Output: [[21.504061946211635 17] 38.504061946211635]
Test Case: 259 | Input/Output: [[46.29849774076135 -65] -18.70150225923865]
Test Case: 260 | Input/Output: [[-34.396074836850005 -11] -45.396074836850005]
Test Case: 261 | Input/Output: [[-67.21273082507136 18] -49.21273082507136]
Test Case: 262 | Input/Output: [[-86.65083035037114 -10] -96.65083035037114]
Test Case: 263 | Input/Output: [[-79.97917586583455 91] 11.020824134165451]
Test Case: 264 | Input/Output: [[64.73905391256272 -62] 2.7390539125627242]
Test Case: 265 | Input/Output: [[-84.3415090041808 36] -48.34150900418081]
Test Case: 266 | Input/Output: [[2.8049917918143024 -26] -23.195008208185698]
Test Case: 267 | Input/Output: [[-56.79220284152224 53] -3.79220284152224]
Test Case: 268 | Input/Output: [[-96.44840231273164 33] -63.448402312731645]
Test Case: 269 | Input/Output: [[76.42736877331379 -2] 74.42736877331379]
Test Case: 270 | Input/Output: [[23.393649047831616 -4] 19.393649047831616]
Test Case: 271 | Input/Output: [[66.62540176625197 -98] -31.37459823374803]
Test Case: 272 | Input/Output: [[30.854730736648293 19] 49.85473073664829]
Test Case: 273 | Input/Output: [[13.390361814493005 28] 41.390361814493005]
Test Case: 274 | Input/Output: [[65.3375866707103 14] 79.3375866707103]
Test Case: 275 | Input/Output: [[-84.08763726596567 -14] -98.08763726596567]
Test Case: 276 | Input/Output: [[-9.660828439984854 52] 42.339171560015146]
Test Case: 277 | Input/Output: [[90.16790635961166 -48] 42.16790635961166]
Test Case: 278 | Input/Output: [[43.90996139296746 -85] -41.09003860703254]
Test Case: 279 | Input/Output: [[-0.14290823714340206 -29] -29.142908237143402]
Test Case: 280 | Input/Output: [[-17.104086443929134 -18] -35.104086443929134]
Test Case: 281 | Input/Output: [[64.99925560806844 45] 109.99925560806844]
Test Case: 282 | Input/Output: [[51.02622554794152 86] 137.02622554794152]
Test Case: 283 | Input/Output: [[58.82198994654064 33] 91.82198994654064]
Test Case: 284 | Input/Output: [[41.47241767845205 -50] -8.527582321547953]
Test Case: 285 | Input/Output: [[60.82376233302381 59] 119.82376233302381]
Test Case: 286 | Input/Output: [[5.041077676577771 -63] -57.95892232342223]
Test Case: 287 | Input/Output: [[8.219502009317694 76] 84.2195020093177]
Test Case: 288 | Input/Output: [[52.786529865119036 95] 147.78652986511904]
Test Case: 289 | Input/Output: [[97.01420009408335 -23] 74.01420009408335]
Test Case: 290 | Input/Output: [[-65.49574840048085 -42] -107.49574840048085]
Test Case: 291 | Input/Output: [[-97.5271567565847 45] -52.5271567565847]
Test Case: 292 | Input/Output: [[-79.06428654215765 -40] -119.06428654215765]
Test Case: 293 | Input/Output: [[-5.120667880468915 84] 78.87933211953109]
Test Case: 294 | Input/Output: [[84.69699240501066 46] 130.69699240501066]
Test Case: 295 | Input/Output: [[57.81867904419923 58] 115.81867904419923]
Test Case: 296 | Input/Output: [[-54.95710248339425 82] 27.04289751660575]
Test Case: 297 | Input/Output: [[84.9599125713195 99] 183.9599125713195]
Test Case: 298 | Input/Output: [[-26.725131529787575 -88] -114.72513152978757]
Test Case: 299 | Input/Output: [[98.51228996519839 23] 121.51228996519839]
Test Case: 300 | Input/Output: [[84.6510860697451 -68] 16.651086069745105]
Test Case: 301 | Input/Output: [[60.410427159761554 88] 148.41042715976155]
Test Case: 302 | Input/Output: [[80.86330993848588 14] 94.86330993848588]
Test Case: 303 | Input/Output: [[73.85256592846349 -74] -0.14743407153650878]
Test Case: 304 | Input/Output: [[-82.54433449907101 -17] -99.54433449907101]
Test Case: 305 | Input/Output: [[-47.27958120939202 -9] -56.27958120939202]
Test Case: 306 | Input/Output: [[18.167087500869656 52] 70.16708750086966]
Test Case: 307 | Input/Output: [[-11.437374769492862 -73] -84.43737476949286]
Test Case: 308 | Input/Output: [[-96.2856017640914 13] -83.2856017640914]
Test Case: 309 | Input/Output: [[-38.518867202305614 38] -0.5188672023056142]
Test Case: 310 | Input/Output: [[-59.22706931598534 -49] -108.22706931598535]
Test Case: 311 | Input/Output: [[-2.3135505717788476 4] 1.6864494282211524]
Test Case: 312 | Input/Output: [[83.2613284367709 67] 150.2613284367709]
Test Case: 313 | Input/Output: [[10.329995962926859 -41] -30.67000403707314]
Test Case: 314 | Input/Output: [[77.25481640418474 -61] 16.254816404184737]
Test Case: 315 | Input/Output: [[49.1195054713053 -72] -22.880494528694697]
Test Case: 316 | Input/Output: [[47.513502142467615 -83] -35.486497857532385]
Test Case: 317 | Input/Output: [[-24.790955797450096 37] 12.209044202549904]
Test Case: 318 | Input/Output: [[79.39471096243196 29] 108.39471096243196]
Test Case: 319 | Input/Output: [[-94.06610050555355 44] -50.06610050555355]
Test Case: 320 | Input/Output: [[59.982069184009845 9] 68.98206918400984]
Test Case: 321 | Input/Output: [[92.763926145737 93] 185.763926145737]
Test Case: 322 | Input/Output: [[46.60380380360189 79] 125.60380380360189]
Test Case: 323 | Input/Output: [[-53.617992747970966 95] 41.382007252029034]
Test Case: 324 | Input/Output: [[71.9734561564637 35] 106.9734561564637]
Test Case: 325 | Input/Output: [[4.41987381157287 27] 31.41987381157287]
Test Case: 326 | Input/Output: [[-14.437481131976043 -76] -90.43748113197604]
Test Case: 327 | Input/Output: [[-7.146905579999 42] 34.853094420001]
Test Case: 328 | Input/Output: [[-89.04180089449447 -55] -144.0418008944945]
Test Case: 329 | Input/Output: [[21.377764135872027 83] 104.37776413587203]
Test Case: 330 | Input/Output: [[-80.99808374409325 91] 10.00191625590675]
Test Case: 331 | Input/Output: [[88.32854346277509 89] 177.3285434627751]
Test Case: 332 | Input/Output: [[-12.496010071840047 78] 65.50398992815995]
Test Case: 333 | Input/Output: [[67.20935648283782 -2] 65.20935648283782]
Test Case: 334 | Input/Output: [[53.53231910549604 -41] 12.532319105496043]
Test Case: 335 | Input/Output: [[-10.64535905452884 -79] -89.64535905452884]
Test Case: 336 | Input/Output: [[-14.532715787125355 -90] -104.53271578712535]
Test Case: 337 | Input/Output: [[82.46915131067541 -56] 26.469151310675414]
Test Case: 338 | Input/Output: [[59.59486673328249 -90] -30.405133266717513]
Test Case: 339 | Input/Output: [[57.47319935019465 37] 94.47319935019465]
Test Case: 340 | Input/Output: [[-44.1927036564022 -63] -107.1927036564022]
Test Case: 341 | Input/Output: [[44.09758250815375 -63] -18.90241749184625]
Test Case: 342 | Input/Output: [[-54.74448514767452 7] -47.74448514767452]
Test Case: 343 | Input/Output: [[-8.65226219732233 -63] -71.65226219732233]
Test Case: 344 | Input/Output: [[62.39608606308107 63] 125.39608606308107]
Test Case: 345 | Input/Output: [[29.975542279891414 -16] 13.975542279891414]
Test Case: 346 | Input/Output: [[48.03475651543937 -71] -22.96524348456063]
Test Case: 347 | Input/Output: [[-82.24995706288034 5] -77.24995706288034]
Test Case: 348 | Input/Output: [[89.82778315640459 40] 129.8277831564046]
Test Case: 349 | Input/Output: [[35.76756672349504 23] 58.76756672349504]
Test Case: 350 | Input/Output: [[38.356870260830135 -44] -5.643129739169865]
Test Case: 351 | Input/Output: [[-71.22990990473808 -84] -155.22990990473807]
Test Case: 352 | Input/Output: [[-38.65813440225268 -44] -82.65813440225267]
Test Case: 353 | Input/Output: [[-71.08126864483786 42] -29.081268644837863]
Test Case: 354 | Input/Output: [[29.21607965080358 -78] -48.78392034919642]
Test Case: 355 | Input/Output: [[89.33541816714862 -4] 85.33541816714862]
Test Case: 356 | Input/Output: [[28.65722702872654 -2] 26.65722702872654]
Test Case: 357 | Input/Output: [[-84.65128247488829 69] -15.65128247488829]
Test Case: 358 | Input/Output: [[-95.03357242967047 70] -25.03357242967047]
Test Case: 359 | Input/Output: [[-78.16562110831222 -32] -110.16562110831222]
Test Case: 360 | Input/Output: [[-46.67064709749014 62] 15.32935290250986]
Test Case: 361 | Input/Output: [[-60.23436207937267 -77] -137.23436207937266]
Test Case: 362 | Input/Output: [[86.8615749216809 38] 124.8615749216809]
Test Case: 363 | Input/Output: [[65.82285518640492 54] 119.82285518640492]
Test Case: 364 | Input/Output: [[87.92127251423935 44] 131.92127251423935]
Test Case: 365 | Input/Output: [[-36.05398974852998 -87] -123.05398974852997]
Test Case: 366 | Input/Output: [[65.35299285140769 -16] 49.35299285140769]
Test Case: 367 | Input/Output: [[76.32527467506617 -46] 30.32527467506617]
Test Case: 368 | Input/Output: [[-7.672073644008549 65] 57.32792635599145]
Test Case: 369 | Input/Output: [[-10.675902977480604 88] 77.3240970225194]
Test Case: 370 | Input/Output: [[56.74957902723534 -53] 3.7495790272353418]
Test Case: 371 | Input/Output: [[56.74803748363894 -97] -40.25196251636106]
Test Case: 372 | Input/Output: [[45.36051855738299 -45] 0.36051855738298855]
Test Case: 373 | Input/Output: [[57.464279694764286 6] 63.464279694764286]
Test Case: 374 | Input/Output: [[-67.0176954084701 71] 3.9823045915298962]
Test Case: 375 | Input/Output: [[34.580926804561216 77] 111.58092680456122]
Test Case: 376 | Input/Output: [[44.69560821327272 76] 120.69560821327272]
Test Case: 377 | Input/Output: [[-30.97040437367764 30] -0.9704043736776384]
Test Case: 378 | Input/Output: [[-40.14095754540956 18] -22.140957545409563]
Test Case: 379 | Input/Output: [[9.96387377288093 -14] -4.03612622711907]
Test Case: 380 | Input/Output: [[-75.7040999046634 58] -17.704099904663394]
Test Case: 381 | Input/Output: [[-45.65296646233807 -91] -136.65296646233807]
Test Case: 382 | Input/Output: [[-77.55541227412475 -87] -164.55541227412476]
Test Case: 383 | Input/Output: [[-78.73014580619504 -4] -82.73014580619504]
Test Case: 384 | Input/Output: [[60.11119661550373 -80] -19.88880338449627]
Test Case: 385 | Input/Output: [[58.805974168532856 -29] 29.805974168532856]
Test Case: 386 | Input/Output: [[71.69533219006604 -54] 17.69533219006604]
Test Case: 387 | Input/Output: [[-31.025090841741758 -26] -57.02509084174176]
Test Case: 388 | Input/Output: [[40.59407784649193 0] 40.59407784649193]
Test Case: 389 | Input/Output: [[-37.73476828063171 67] 29.265231719368288]
Test Case: 390 | Input/Output: [[-10.592188508732718 78] 67.40781149126728]
Test Case: 391 | Input/Output: [[57.951001808176926 -87] -29.048998191823074]
Test Case: 392 | Input/Output: [[-40.105210216188624 -90] -130.10521021618862]
Test Case: 393 | Input/Output: [[-68.11266563871187 13] -55.112665638711874]
Test Case: 394 | Input/Output: [[21.68029998786794 7] 28.68029998786794]
Test Case: 395 | Input/Output: [[61.71670832294885 73] 134.71670832294885]
Test Case: 396 | Input/Output: [[52.403083390342516 73] 125.40308339034252]
Test Case: 397 | Input/Output: [[91.27934761671196 6] 97.27934761671196]
Test Case: 398 | Input/Output: [[-56.35469903343715 -85] -141.35469903343716]
Test Case: 399 | Input/Output: [[73.23220761922994 19] 92.23220761922994]
Test Case: 400 | Input/Output: [[55.471823473588955 47] 102.47182347358896]
Test Case: 401 | Input/Output: [[38.40751930087245 16] 54.40751930087245]
Test Case: 402 | Input/Output: [[24.858180182910104 48] 72.8581801829101]
Test Case: 403 | Input/Output: [[-99.84628918349081 -65] -164.8462891834908]
Test Case: 404 | Input/Output: [[-28.142789560804317 67] 38.85721043919568]
Test Case: 405 | Input/Output: [[-86.98586223299955 39] -47.98586223299955]
Test Case: 406 | Input/Output: [[-83.48040010334215 -48] -131.48040010334216]
Test Case: 407 | Input/Output: [[-49.02270476135953 20] -29.022704761359527]
Test Case: 408 | Input/Output: [[80.34266066277976 -83] -2.657339337220236]
Test Case: 409 | Input/Output: [[5.087424605569012 -15] -9.912575394430988]
Test Case: 410 | Input/Output: [[76.15511968949392 -25] 51.155119689493915]
Test Case: 411 | Input/Output: [[33.331993939956305 -65] -31.668006060043695]
Test Case: 412 | Input/Output: [[20.153127564990484 61] 81.15312756499048]
Test Case: 413 | Input/Output: [[32.735652556466505 21] 53.735652556466505]
Test Case: 414 | Input/Output: [[-23.564117508985035 51] 27.435882491014965]
Test Case: 415 | Input/Output: [[-8.675444240645277 95] 86.32455575935472]
Test Case: 416 | Input/Output: [[75.99446479347424 -11] 64.99446479347424]
Test Case: 417 | Input/Output: [[24.307558247800017 -99] -74.69244175219998]
Test Case: 418 | Input/Output: [[90.49840224756304 99] 189.49840224756304]
Test Case: 419 | Input/Output: [[-5.756934051803981 68] 62.24306594819602]
Test Case: 420 | Input/Output: [[49.234299431700066 63] 112.23429943170007]
Test Case: 421 | Input/Output: [[-0.11137112590159859 -33] -33.1113711259016]
Test Case: 422 | Input/Output: [[-12.564328754113134 -95] -107.56432875411313]
Test Case: 423 | Input/Output: [[-13.986855747226954 -22] -35.986855747226954]
Test Case: 424 | Input/Output: [[99.55957521399421 -87] 12.559575213994208]
Test Case: 425 | Input/Output: [[-19.42356173104558 -91] -110.42356173104558]
Test Case: 426 | Input/Output: [[-60.311078079663496 16] -44.311078079663496]
Test Case: 427 | Input/Output: [[-44.72219442093475 57] 12.277805579065252]
Test Case: 428 | Input/Output: [[65.16287304893004 -9] 56.16287304893004]
Test Case: 429 | Input/Output: [[7.347882686405299 -84] -76.6521173135947]
Test Case: 430 | Input/Output: [[76.49004039198414 -36] 40.49004039198414]
Test Case: 431 | Input/Output: [[95.51998644404458 18] 113.51998644404458]
Test Case: 432 | Input/Output: [[84.68152854758989 -48] 36.68152854758989]
Test Case: 433 | Input/Output: [[-83.17727675922629 -11] -94.17727675922629]
Test Case: 434 | Input/Output: [[89.48604037255427 69] 158.48604037255427]
Test Case: 435 | Input/Output: [[-30.845827652436512 -66] -96.84582765243651]
Test Case: 436 | Input/Output: [[90.7521420406699 18] 108.7521420406699]
Test Case: 437 | Input/Output: [[49.80340145840577 73] 122.80340145840577]
Test Case: 438 | Input/Output: [[82.75158313500327 -40] 42.75158313500327]
Test Case: 439 | Input/Output: [[74.68192402635282 -55] 19.681924026352817]
Test Case: 440 | Input/Output: [[-40.747709755952876 56] 15.252290244047124]
Test Case: 441 | Input/Output: [[-26.577508386500725 -34] -60.577508386500725]
Test Case: 442 | Input/Output: [[55.57714827720699 -13] 42.57714827720699]
Test Case: 443 | Input/Output: [[6.282463101688492 49] 55.28246310168849]
Test Case: 444 | Input/Output: [[-8.965452686187717 -77] -85.96545268618772]
Test Case: 445 | Input/Output: [[45.25146902152571 29] 74.25146902152571]
Test Case: 446 | Input/Output: [[66.16847366116468 68] 134.16847366116468]
Test Case: 447 | Input/Output: [[47.81347592093405 -80] -32.18652407906595]
Test Case: 448 | Input/Output: [[-31.506780757273447 -72] -103.50678075727345]
Test Case: 449 | Input/Output: [[69.97460218537361 77] 146.9746021853736]
Test Case: 450 | Input/Output: [[-44.529499154197595 -77] -121.5294991541976]
Test Case: 451 | Input/Output: [[-53.50779044711611 84] 30.492209552883892]
Test Case: 452 | Input/Output: [[-86.0401332048091 -99] -185.04013320480908]
Test Case: 453 | Input/Output: [[19.80679715910418 -66] -46.19320284089582]
Test Case: 454 | Input/Output: [[91.26955788507297 35] 126.26955788507297]
Test Case: 455 | Input/Output: [[-95.29178968568088 40] -55.29178968568088]
Test Case: 456 | Input/Output: [[-31.74209186193633 97] 65.25790813806367]
Test Case: 457 | Input/Output: [[57.41817476397179 -65] -7.581825236028209]
Test Case: 458 | Input/Output: [[57.14713714302599 -65] -7.8528628569740135]
Test Case: 459 | Input/Output: [[-41.777806316210906 -3] -44.777806316210906]
Test Case: 460 | Input/Output: [[-68.9158690896112 -82] -150.9158690896112]
Test Case: 461 | Input/Output: [[33.69833675932006 44] 77.69833675932006]
Test Case: 462 | Input/Output: [[-5.669286343245091 72] 66.33071365675491]
Test Case: 463 | Input/Output: [[-55.79129297862701 -5] -60.79129297862701]
Test Case: 464 | Input/Output: [[41.933723428766854 28] 69.93372342876685]
Test Case: 465 | Input/Output: [[-58.94377551960055 13] -45.94377551960055]
Test Case: 466 | Input/Output: [[36.81760831961671 -15] 21.81760831961671]
Test Case: 467 | Input/Output: [[64.32168381002893 -43] 21.32168381002893]
Test Case: 468 | Input/Output: [[-33.29661655494772 0] -33.29661655494772]
Test Case: 469 | Input/Output: [[46.571598007959636 1] 47.571598007959636]
Test Case: 470 | Input/Output: [[67.21682876617953 -51] 16.216828766179532]
Test Case: 471 | Input/Output: [[-23.27502101047996 -89] -112.27502101047996]
Test Case: 472 | Input/Output: [[-57.56715985309193 -79] -136.56715985309194]
Test Case: 473 | Input/Output: [[-84.45514667948927 59] -25.455146679489275]
Test Case: 474 | Input/Output: [[48.833332539517556 -84] -35.166667460482444]
Test Case: 475 | Input/Output: [[-19.003268401169265 88] 68.99673159883073]
Test Case: 476 | Input/Output: [[29.52176556433841 -80] -50.47823443566159]
Test Case: 477 | Input/Output: [[-32.4444141659245 -7] -39.4444141659245]
Test Case: 478 | Input/Output: [[63.598456771106925 63] 126.59845677110692]
Test Case: 479 | Input/Output: [[-19.948492042468786 88] 68.05150795753121]
Test Case: 480 | Input/Output: [[11.701032163856667 50] 61.70103216385667]
Test Case: 481 | Input/Output: [[-75.22541715812446 -75] -150.22541715812446]
Test Case: 482 | Input/Output: [[-82.9224852375458 -34] -116.9224852375458]
Test Case: 483 | Input/Output: [[19.32913796483227 44] 63.32913796483227]
Test Case: 484 | Input/Output: [[25.030484799685766 -80] -54.969515200314234]
Test Case: 485 | Input/Output: [[90.10555346434455 61] 151.10555346434455]
Test Case: 486 | Input/Output: [[-90.91236574975254 -60] -150.91236574975255]
Test Case: 487 | Input/Output: [[-98.70166233067334 -66] -164.70166233067334]
Test Case: 488 | Input/Output: [[-5.954671496525066 -99] -104.95467149652507]
Test Case: 489 | Input/Output: [[-62.69056406022624 -86] -148.69056406022622]
Test Case: 490 | Input/Output: [[-56.51322793767666 87] 30.48677206232334]
Test Case: 491 | Input/Output: [[43.71238267571678 91] 134.71238267571678]
Test Case: 492 | Input/Output: [[-27.541798604976407 -43] -70.5417986049764]
Test Case: 493 | Input/Output: [[88.196366535045 -94] -5.8036334649549985]
Test Case: 494 | Input/Output: [[-54.834531752239066 49] -5.834531752239066]
Test Case: 495 | Input/Output: [[30.128710088255986 83] 113.12871008825599]
Test Case: 496 | Input/Output: [[-36.5504020954391 87] 50.4495979045609]
Test Case: 497 | Input/Output: [[35.49727208466467 -25] 10.497272084664672]
Test Case: 498 | Input/Output: [[-25.246004789820418 -89] -114.24600478982042]
Test Case: 499 | Input/Output: [[13.068341010567977 5] 18.068341010567977]
Test Case: 500 | Input/Output: [[3.766309566433449 -40] -36.23369043356655]
Test Case: 501 | Input/Output: [[47.95033655497369 -45] 2.9503365549736884]
Test Case: 502 | Input/Output: [[-43.42894645598414 -62] -105.42894645598415]
Test Case: 503 | Input/Output: [[75.65588395137067 49] 124.65588395137067]
Test Case: 504 | Input/Output: [[18.07605455957912 55] 73.07605455957912]
Test Case: 505 | Input/Output: [[24.557397922753935 -89] -64.44260207724606]
Test Case: 506 | Input/Output: [[21.550050567718955 75] 96.55005056771896]
Test Case: 507 | Input/Output: [[98.74168831223162 75] 173.74168831223162]
Test Case: 508 | Input/Output: [[-57.24962157101356 86] 28.750378428986437]
Test Case: 509 | Input/Output: [[33.33725172494189 29] 62.33725172494189]
Test Case: 510 | Input/Output: [[40.812805949622884 -24] 16.812805949622884]
Test Case: 511 | Input/Output: [[-48.63460917802889 -33] -81.63460917802888]
Test Case: 512 | Input/Output: [[-23.125874297742826 0] -23.125874297742826]
Test Case: 513 | Input/Output: [[-90.37394939481602 -17] -107.37394939481602]
Test Case: 514 | Input/Output: [[-97.68324843892341 80] -17.683248438923414]
Test Case: 515 | Input/Output: [[83.28510428495505 -86] -2.714895715044946]
Test Case: 516 | Input/Output: [[3.5706748700811204 -18] -14.42932512991888]
Test Case: 517 | Input/Output: [[71.55569119910908 -79] -7.444308800890923]
Test Case: 518 | Input/Output: [[-56.54363943573695 72] 15.45636056426305]
Test Case: 519 | Input/Output: [[89.5422701089484 92] 181.5422701089484]
Test Case: 520 | Input/Output: [[-20.211645472104863 18] -2.2116454721048626]
Test Case: 521 | Input/Output: [[-88.81993420339444 68] -20.81993420339444]
Test Case: 522 | Input/Output: [[93.83335317362369 -54] 39.83335317362369]
Test Case: 523 | Input/Output: [[24.45283849712891 -82] -57.54716150287109]
Test Case: 524 | Input/Output: [[-2.1755963565426697 71] 68.82440364345733]
Test Case: 525 | Input/Output: [[-31.450340504585995 -70] -101.450340504586]
Test Case: 526 | Input/Output: [[-94.48895374598972 -59] -153.4889537459897]
Test Case: 527 | Input/Output: [[-65.16399577606805 16] -49.16399577606805]
Test Case: 528 | Input/Output: [[-30.672771411396283 -86] -116.67277141139628]
Test Case: 529 | Input/Output: [[-3.8658944336718406 61] 57.13410556632816]
Test Case: 530 | Input/Output: [[11.01172152799343 -26] -14.98827847200657]
Test Case: 531 | Input/Output: [[-41.4485826284088 -15] -56.4485826284088]
Test Case: 532 | Input/Output: [[31.675419021902485 -84] -52.324580978097515]
Test Case: 533 | Input/Output: [[85.72687123045185 37] 122.72687123045185]
Test Case: 534 | Input/Output: [[7.495668185154585 -36] -28.504331814845415]
Test Case: 535 | Input/Output: [[25.19221713088487 -93] -67.80778286911513]
Test Case: 536 | Input/Output: [[4.67909026400433 -60] -55.32090973599567]
Test Case: 537 | Input/Output: [[-28.00648076036667 33] 4.993519239633329]
Test Case: 538 | Input/Output: [[43.430658946996346 98] 141.43065894699635]
Test Case: 539 | Input/Output: [[98.6428411335018 18] 116.6428411335018]
Test Case: 540 | Input/Output: [[-3.3105141196974017 -72] -75.3105141196974]
Test Case: 541 | Input/Output: [[1.2513630664672633 98] 99.25136306646726]
Test Case: 542 | Input/Output: [[-61.53841271795353 83] 21.461587282046473]
Test Case: 543 | Input/Output: [[14.745188334138533 74] 88.74518833413853]
Test Case: 544 | Input/Output: [[0.12602158976812916 0] 0.12602158976812916]
Test Case: 545 | Input/Output: [[98.43576967068486 -73] 25.435769670684863]
Test Case: 546 | Input/Output: [[-4.388393112444589 29] 24.61160688755541]
Test Case: 547 | Input/Output: [[-40.26395946419727 39] -1.2639594641972707]
Test Case: 548 | Input/Output: [[-58.04114146600505 -66] -124.04114146600506]
Test Case: 549 | Input/Output: [[-28.3456762188258 -4] -32.3456762188258]
Test Case: 550 | Input/Output: [[-87.56788013644574 -52] -139.56788013644575]
Test Case: 551 | Input/Output: [[-97.62768550798451 45] -52.62768550798451]
Test Case: 552 | Input/Output: [[75.49590841628688 -2] 73.49590841628688]
Test Case: 553 | Input/Output: [[26.247778948329852 44] 70.24777894832985]
Test Case: 554 | Input/Output: [[90.22930808041951 61] 151.22930808041951]
Test Case: 555 | Input/Output: [[82.88799530843849 83] 165.8879953084385]
Test Case: 556 | Input/Output: [[-63.5190364956709 -88] -151.5190364956709]
Test Case: 557 | Input/Output: [[9.800140520317811 -33] -23.19985947968219]
Test Case: 558 | Input/Output: [[82.38308329349874 -95] -12.616916706501257]
Test Case: 559 | Input/Output: [[2.6071028228243733 -13] -10.392897177175627]
Test Case: 560 | Input/Output: [[73.67561575470515 -30] 43.67561575470515]
Test Case: 561 | Input/Output: [[95.17118486639137 -8] 87.17118486639137]
Test Case: 562 | Input/Output: [[-86.91372112310312 -64] -150.91372112310313]
Test Case: 563 | Input/Output: [[43.99717256347651 41] 84.99717256347651]
Test Case: 564 | Input/Output: [[62.881139205267885 83] 145.88113920526789]
Test Case: 565 | Input/Output: [[-38.63147213067044 48] 9.368527869329561]
Test Case: 566 | Input/Output: [[-23.31396755561947 -40] -63.31396755561947]
Test Case: 567 | Input/Output: [[-19.557673031797577 -63] -82.55767303179758]
Test Case: 568 | Input/Output: [[97.82087762276379 -14] 83.82087762276379]
Test Case: 569 | Input/Output: [[36.12678152783178 20] 56.12678152783178]
Test Case: 570 | Input/Output: [[97.34334976132007 41] 138.34334976132007]
Test Case: 571 | Input/Output: [[59.022531744604436 32] 91.02253174460444]
Test Case: 572 | Input/Output: [[54.71911952578898 -4] 50.71911952578898]
Test Case: 573 | Input/Output: [[38.62681196836999 -42] -3.373188031630008]
Test Case: 574 | Input/Output: [[31.483123606532416 41] 72.48312360653242]
Test Case: 575 | Input/Output: [[-30.608971651264156 -29] -59.608971651264156]
Test Case: 576 | Input/Output: [[75.23892939062202 17] 92.23892939062202]
Test Case: 577 | Input/Output: [[71.90776999662958 80] 151.90776999662958]
Test Case: 578 | Input/Output: [[-73.45412344298114 -12] -85.45412344298114]
Test Case: 579 | Input/Output: [[12.271203228739196 -16] -3.7287967712608037]
Test Case: 580 | Input/Output: [[-71.31697047358188 100] 28.683029526418125]
Test Case: 581 | Input/Output: [[-13.345405487951226 -46] -59.345405487951226]
Test Case: 582 | Input/Output: [[75.07848002015055 -43] 32.07848002015055]
Test Case: 583 | Input/Output: [[-86.85560676457604 49] -37.85560676457604]
Test Case: 584 | Input/Output: [[-26.613123739662853 -5] -31.613123739662853]
Test Case: 585 | Input/Output: [[87.28881504023096 -15] 72.28881504023096]
Test Case: 586 | Input/Output: [[5.520261274957889 67] 72.52026127495789]
Test Case: 587 | Input/Output: [[-48.842645988746746 -59] -107.84264598874674]
Test Case: 588 | Input/Output: [[77.06340279453349 7] 84.06340279453349]
Test Case: 589 | Input/Output: [[-26.345385496854036 92] 65.65461450314596]
Test Case: 590 | Input/Output: [[72.18757947947654 5] 77.18757947947654]
Test Case: 591 | Input/Output: [[62.43314742891735 1] 63.43314742891735]
Test Case: 592 | Input/Output: [[71.7929794051405 81] 152.7929794051405]
Test Case: 593 | Input/Output: [[59.93310830941559 -14] 45.93310830941559]
Test Case: 594 | Input/Output: [[-55.2334521692222 -90] -145.2334521692222]
Test Case: 595 | Input/Output: [[-99.70657162808136 53] -46.70657162808136]
Test Case: 596 | Input/Output: [[-87.7693146751769 -74] -161.7693146751769]
Test Case: 597 | Input/Output: [[-29.170073479051695 95] 65.8299265209483]
Test Case: 598 | Input/Output: [[0.4653962963389091 -92] -91.53460370366109]
Test Case: 599 | Input/Output: [[13.932002080915822 -62] -48.06799791908418]
Test Case: 600 | Input/Output: [[-59.40119890612701 -20] -79.40119890612701]
Test Case: 601 | Input/Output: [[57.60439401813778 -95] -37.39560598186222]
Test Case: 602 | Input/Output: [[19.78660074855854 -82] -62.21339925144146]
Test Case: 603 | Input/Output: [[-97.09826189885307 50] -47.09826189885307]
Test Case: 604 | Input/Output: [[37.85395732102276 85] 122.85395732102276]
Test Case: 605 | Input/Output: [[-47.03659970690515 94] 46.96340029309485]
Test Case: 606 | Input/Output: [[37.43912392936073 -89] -51.56087607063927]
Test Case: 607 | Input/Output: [[17.3647114524355 -14] 3.3647114524355004]
Test Case: 608 | Input/Output: [[26.467968722934927 4] 30.467968722934927]
Test Case: 609 | Input/Output: [[39.445361046278265 25] 64.44536104627826]
Test Case: 610 | Input/Output: [[-58.38259176733192 13] -45.38259176733192]
Test Case: 611 | Input/Output: [[-10.992794991416119 83] 72.00720500858388]
Test Case: 612 | Input/Output: [[-0.01761137879501007 -37] -37.01761137879501]
Test Case: 613 | Input/Output: [[48.340049114412636 28] 76.34004911441264]
Test Case: 614 | Input/Output: [[32.47947359539066 40] 72.47947359539066]
Test Case: 615 | Input/Output: [[53.456777306663525 -25] 28.456777306663525]
Test Case: 616 | Input/Output: [[-80.49008234798951 82] 1.5099176520104862]
Test Case: 617 | Input/Output: [[-66.71893236560611 67] 0.28106763439389226]
Test Case: 618 | Input/Output: [[39.79446788481505 46] 85.79446788481505]
Test Case: 619 | Input/Output: [[-96.8270512629691 23] -73.8270512629691]
Test Case: 620 | Input/Output: [[38.152116350136765 -68] -29.847883649863235]
Test Case: 621 | Input/Output: [[72.22569427054964 -99] -26.77430572945036]
Test Case: 622 | Input/Output: [[94.01940967922746 -30] 64.01940967922746]
Test Case: 623 | Input/Output: [[-0.3219143532159734 76] 75.67808564678403]
Test Case: 624 | Input/Output: [[34.6463187825685 36] 70.6463187825685]
Test Case: 625 | Input/Output: [[-21.378991935519622 52] 30.621008064480378]
Test Case: 626 | Input/Output: [[25.125856434860168 -11] 14.125856434860168]
Test Case: 627 | Input/Output: [[69.72915646600225 80] 149.72915646600225]
Test Case: 628 | Input/Output: [[13.178853673774427 -27] -13.821146326225573]
Test Case: 629 | Input/Output: [[-83.58677833360532 73] -10.586778333605324]
Test Case: 630 | Input/Output: [[-14.473750525524352 83] 68.52624947447565]
Test Case: 631 | Input/Output: [[1.9632413657063097 -47] -45.03675863429369]
Test Case: 632 | Input/Output: [[16.86275159536359 5] 21.86275159536359]
Test Case: 633 | Input/Output: [[9.373602310943127 76] 85.37360231094313]
Test Case: 634 | Input/Output: [[-29.59517200538903 -63] -92.59517200538903]
Test Case: 635 | Input/Output: [[69.73897040403713 80] 149.73897040403713]
Test Case: 636 | Input/Output: [[-16.623969157329228 -95] -111.62396915732923]
Test Case: 637 | Input/Output: [[25.86118612089892 14] 39.86118612089892]
Test Case: 638 | Input/Output: [[-18.613095896045692 -80] -98.61309589604569]
Test Case: 639 | Input/Output: [[97.64973925296707 88] 185.64973925296707]
Test Case: 640 | Input/Output: [[44.838905424077325 -54] -9.161094575922675]
Test Case: 641 | Input/Output: [[3.1703193677125086 -5] -1.8296806322874914]
Test Case: 642 | Input/Output: [[36.69564598273905 32] 68.69564598273905]
Test Case: 643 | Input/Output: [[42.675283955964716 -29] 13.675283955964716]
Test Case: 644 | Input/Output: [[46.29663348424586 72] 118.29663348424586]
Test Case: 645 | Input/Output: [[65.30914438562428 90] 155.30914438562428]
Test Case: 646 | Input/Output: [[-84.77348915259763 -3] -87.77348915259763]
Test Case: 647 | Input/Output: [[49.13306796011895 -71] -21.86693203988105]
Test Case: 648 | Input/Output: [[81.48209226187245 -46] 35.48209226187245]
Test Case: 649 | Input/Output: [[51.50525957463003 23] 74.50525957463003]
Test Case: 650 | Input/Output: [[-49.36355585519856 -29] -78.36355585519857]
Test Case: 651 | Input/Output: [[62.69257397368153 22] 84.69257397368153]
Test Case: 652 | Input/Output: [[-99.33742629788713 -54] -153.33742629788713]
Test Case: 653 | Input/Output: [[50.68284278529808 -97] -46.31715721470192]
Test Case: 654 | Input/Output: [[-96.99387240401603 87] -9.993872404016031]
Test Case: 655 | Input/Output: [[8.90937805946605 -61] -52.09062194053395]
Test Case: 656 | Input/Output: [[-13.987290943563522 -49] -62.98729094356352]
Test Case: 657 | Input/Output: [[19.4828429087369 27] 46.4828429087369]
Test Case: 658 | Input/Output: [[-34.78409701022012 -32] -66.78409701022012]
Test Case: 659 | Input/Output: [[41.343932137194344 -96] -54.656067862805656]
Test Case: 660 | Input/Output: [[75.27087156987832 -66] 9.270871569878324]
Test Case: 661 | Input/Output: [[72.31139502556618 -4] 68.31139502556618]
Test Case: 662 | Input/Output: [[74.940923679457 -18] 56.940923679457]
Test Case: 663 | Input/Output: [[30.619244877123634 25] 55.619244877123634]
Test Case: 664 | Input/Output: [[69.49414299604001 42] 111.49414299604001]
Test Case: 665 | Input/Output: [[-67.39212760473455 5] -62.392127604734554]
Test Case: 666 | Input/Output: [[7.4009655586772425 -26] -18.599034441322758]
Test Case: 667 | Input/Output: [[-70.89966408335775 -63] -133.89966408335775]
Test Case: 668 | Input/Output: [[69.67540585287779 -17] 52.67540585287779]
Test Case: 669 | Input/Output: [[60.87380570901436 -100] -39.12619429098564]
Test Case: 670 | Input/Output: [[-84.53649134217017 71] -13.536491342170166]
Test Case: 671 | Input/Output: [[-22.13391303353221 -70] -92.13391303353221]
Test Case: 672 | Input/Output: [[74.82567626928008 -44] 30.82567626928008]
Test Case: 673 | Input/Output: [[-9.428417898581912 28] 18.571582101418088]
Test Case: 674 | Input/Output: [[28.18693741066477 37] 65.18693741066477]
Test Case: 675 | Input/Output: [[75.70759205945075 66] 141.70759205945075]
Test Case: 676 | Input/Output: [[-39.469539831172185 95] 55.530460168827815]
Test Case: 677 | Input/Output: [[-95.12952941498813 -76] -171.12952941498813]
Test Case: 678 | Input/Output: [[-75.40425578884643 -21] -96.40425578884643]
Test Case: 679 | Input/Output: [[64.415025349133 -29] 35.415025349133]
Test Case: 680 | Input/Output: [[97.62718026835176 59] 156.62718026835176]
Test Case: 681 | Input/Output: [[-37.952590994905066 -33] -70.95259099490507]
Test Case: 682 | Input/Output: [[56.2489248292614 -94] -37.7510751707386]
Test Case: 683 | Input/Output: [[49.465566447407525 -11] 38.465566447407525]
Test Case: 684 | Input/Output: [[0.5914847788614139 -64] -63.408515221138586]
Test Case: 685 | Input/Output: [[4.938528102783209 79] 83.93852810278321]
Test Case: 686 | Input/Output: [[79.44272531512618 -57] 22.442725315126182]
Test Case: 687 | Input/Output: [[-57.618430679149114 -41] -98.61843067914911]
Test Case: 688 | Input/Output: [[-34.98030560161109 -93] -127.9803056016111]
Test Case: 689 | Input/Output: [[53.89414939522476 58] 111.89414939522476]
Test Case: 690 | Input/Output: [[-88.9370091001519 82] -6.937009100151897]
Test Case: 691 | Input/Output: [[-76.3320776460163 2] -74.3320776460163]
Test Case: 692 | Input/Output: [[-59.69932086891043 -61] -120.69932086891043]
Test Case: 693 | Input/Output: [[78.06927876806776 36] 114.06927876806776]
Test Case: 694 | Input/Output: [[16.4049902039483 -92] -75.5950097960517]
Test Case: 695 | Input/Output: [[-68.31124531491628 -79] -147.31124531491628]
Test Case: 696 | Input/Output: [[-93.42732466918473 61] -32.42732466918473]
Test Case: 697 | Input/Output: [[3.7003487120706495 -3] 0.7003487120706495]
Test Case: 698 | Input/Output: [[-38.40858837478969 7] -31.408588374789687]
Test Case: 699 | Input/Output: [[-1.7057353235390167 26] 24.294264676460983]
Test Case: 700 | Input/Output: [[-82.17966786395088 10] -72.17966786395088]
Test Case: 701 | Input/Output: [[55.309188519105845 -79] -23.690811480894155]
Test Case: 702 | Input/Output: [[-23.146661801941832 54] 30.853338198058168]
Test Case: 703 | Input/Output: [[-69.93877142735785 -17] -86.93877142735785]
Test Case: 704 | Input/Output: [[-23.06008311073778 21] -2.0600831107377786]
Test Case: 705 | Input/Output: [[-67.43152797282237 -27] -94.43152797282237]
Test Case: 706 | Input/Output: [[-53.89760009471289 66] 12.102399905287108]
Test Case: 707 | Input/Output: [[86.56284460320165 89] 175.56284460320165]
Test Case: 708 | Input/Output: [[86.38429693086132 -46] 40.384296930861325]
Test Case: 709 | Input/Output: [[17.09913546862427 30] 47.09913546862427]
Test Case: 710 | Input/Output: [[97.82475671883682 91] 188.82475671883682]
Test Case: 711 | Input/Output: [[-86.28510844845339 55] -31.285108448453386]
Test Case: 712 | Input/Output: [[20.672543465007507 37] 57.67254346500751]
Test Case: 713 | Input/Output: [[16.96700700739811 -28] -11.03299299260189]
Test Case: 714 | Input/Output: [[37.93308380128789 -27] 10.933083801287893]
Test Case: 715 | Input/Output: [[74.15850023527278 -38] 36.15850023527278]
Test Case: 716 | Input/Output: [[-67.49924682002471 -91] -158.49924682002472]
Test Case: 717 | Input/Output: [[9.492103901188557 45] 54.49210390118856]
Test Case: 718 | Input/Output: [[79.72259418007323 100] 179.72259418007323]
Test Case: 719 | Input/Output: [[-70.77292738662342 32] -38.77292738662342]
Test Case: 720 | Input/Output: [[74.03283613167562 -9] 65.03283613167562]
Test Case: 721 | Input/Output: [[-28.28664102526224 -88] -116.28664102526224]
Test Case: 722 | Input/Output: [[-11.615156477888604 77] 65.3848435221114]
Test Case: 723 | Input/Output: [[92.65534593550896 -32] 60.65534593550896]
Test Case: 724 | Input/Output: [[24.52864463973998 26] 50.52864463973998]
Test Case: 725 | Input/Output: [[66.39301470391464 -54] 12.393014703914645]
Test Case: 726 | Input/Output: [[70.65146059323874 -51] 19.65146059323874]
Test Case: 727 | Input/Output: [[90.35303449180674 79] 169.35303449180674]
Test Case: 728 | Input/Output: [[57.197022313715024 30] 87.19702231371502]
Test Case: 729 | Input/Output: [[-5.241691711379431 -89] -94.24169171137943]
Test Case: 730 | Input/Output: [[72.61806938273918 57] 129.61806938273918]
Test Case: 731 | Input/Output: [[-62.08457258665998 98] 35.91542741334002]
Test Case: 732 | Input/Output: [[-49.85618934801936 -18] -67.85618934801937]
Test Case: 733 | Input/Output: [[-53.98400660879599 48] -5.984006608795987]
Test Case: 734 | Input/Output: [[-59.8188835691245 -87] -146.8188835691245]
Test Case: 735 | Input/Output: [[35.500191893317634 -32] 3.500191893317634]
Test Case: 736 | Input/Output: [[-16.118927196594584 -63] -79.11892719659458]
Test Case: 737 | Input/Output: [[13.410462235303328 -54] -40.58953776469667]
Test Case: 738 | Input/Output: [[28.93364920197493 26] 54.93364920197493]
Test Case: 739 | Input/Output: [[-91.72236414384778 61] -30.722364143847784]
Test Case: 740 | Input/Output: [[58.1600620926169 96] 154.1600620926169]
Test Case: 741 | Input/Output: [[29.741038084231974 -72] -42.258961915768026]
Test Case: 742 | Input/Output: [[89.4426720025215 -57] 32.442672002521505]
Test Case: 743 | Input/Output: [[-68.2390039573795 -7] -75.2390039573795]
Test Case: 744 | Input/Output: [[-40.71444756498865 43] 2.285552435011347]
Test Case: 745 | Input/Output: [[19.452096585805776 62] 81.45209658580578]
Test Case: 746 | Input/Output: [[-11.973796927998535 -52] -63.973796927998535]
Test Case: 747 | Input/Output: [[78.61788203760688 81] 159.61788203760688]
Test Case: 748 | Input/Output: [[-90.6223005775843 0] -90.6223005775843]
Test Case: 749 | Input/Output: [[14.731271738709466 -73] -58.26872826129053]
Test Case: 750 | Input/Output: [[86.44737590562238 77] 163.44737590562238]
Test Case: 751 | Input/Output: [[-97.30891162058306 -50] -147.30891162058305]
Test Case: 752 | Input/Output: [[-41.98794891643096 -53] -94.98794891643095]
Test Case: 753 | Input/Output: [[-68.93411786910286 84] 15.065882130897137]
Test Case: 754 | Input/Output: [[53.361224459605154 -97] -43.638775540394846]
Test Case: 755 | Input/Output: [[62.8828974654173 78] 140.8828974654173]
Test Case: 756 | Input/Output: [[-73.90859830778176 -63] -136.90859830778174]
Test Case: 757 | Input/Output: [[45.85906565800778 -93] -47.14093434199222]
Test Case: 758 | Input/Output: [[55.27294413354102 43] 98.27294413354102]
Test Case: 759 | Input/Output: [[-24.910029564898494 6] -18.910029564898494]
Test Case: 760 | Input/Output: [[-39.281103367924544 77] 37.718896632075456]
Test Case: 761 | Input/Output: [[9.690233491986191 -24] -14.309766508013809]
Test Case: 762 | Input/Output: [[-28.666932474216082 24] -4.6669324742160825]
Test Case: 763 | Input/Output: [[87.36270010577744 -97] -9.637299894222565]
Test Case: 764 | Input/Output: [[-92.12673441133761 75] -17.12673441133761]
Test Case: 765 | Input/Output: [[-29.07681796098278 28] -1.0768179609827797]
Test Case: 766 | Input/Output: [[-67.32355463772328 -66] -133.32355463772328]
Test Case: 767 | Input/Output: [[43.70908661020766 -26] 17.709086610207663]
Test Case: 768 | Input/Output: [[78.66773347471198 -48] 30.66773347471198]
Test Case: 769 | Input/Output: [[90.4324484557284 -65] 25.432448455728405]
Test Case: 770 | Input/Output: [[-11.453064600347702 -79] -90.4530646003477]
Test Case: 771 | Input/Output: [[69.70335774592357 -3] 66.70335774592357]
Test Case: 772 | Input/Output: [[-36.731232784801506 91] 54.268767215198494]
Test Case: 773 | Input/Output: [[-52.40097584546795 39] -13.400975845467947]
Test Case: 774 | Input/Output: [[53.273656592353916 -4] 49.273656592353916]
Test Case: 775 | Input/Output: [[-86.66130507429104 17] -69.66130507429104]
Test Case: 776 | Input/Output: [[-35.74358697654485 5] -30.743586976544847]
Test Case: 777 | Input/Output: [[86.44439474239121 46] 132.4443947423912]
Test Case: 778 | Input/Output: [[-36.928763103102405 3] -33.928763103102405]
Test Case: 779 | Input/Output: [[-31.565122928167582 11] -20.565122928167582]
Test Case: 780 | Input/Output: [[-2.745816353643974 -75] -77.74581635364397]
Test Case: 781 | Input/Output: [[-0.11008214208018785 -96] -96.11008214208019]
Test Case: 782 | Input/Output: [[65.80354473887212 19] 84.80354473887212]
Test Case: 783 | Input/Output: [[-59.492306569795915 -46] -105.49230656979591]
Test Case: 784 | Input/Output: [[77.66361347063793 62] 139.66361347063793]
Test Case: 785 | Input/Output: [[53.161161949674806 94] 147.1611619496748]
Test Case: 786 | Input/Output: [[41.13181127881296 -17] 24.13181127881296]
Test Case: 787 | Input/Output: [[26.3016429073095 86] 112.3016429073095]
Test Case: 788 | Input/Output: [[56.25239246806436 72] 128.25239246806436]
Test Case: 789 | Input/Output: [[86.46804586086475 -20] 66.46804586086475]
Test Case: 790 | Input/Output: [[-88.1748052170736 18] -70.1748052170736]
Test Case: 791 | Input/Output: [[-36.725551140639844 -27] -63.725551140639844]
Test Case: 792 | Input/Output: [[0.1947092257594818 21] 21.194709225759482]
Test Case: 793 | Input/Output: [[5.07330422770535 51] 56.07330422770535]
Test Case: 794 | Input/Output: [[-29.788716783429223 8] -21.788716783429223]
Test Case: 795 | Input/Output: [[38.59529981088542 19] 57.59529981088542]
Test Case: 796 | Input/Output: [[-59.975807296592706 95] 35.024192703407294]
Test Case: 797 | Input/Output: [[-78.8392293885135 85] 6.160770611486498]
Test Case: 798 | Input/Output: [[41.51147927270327 66] 107.51147927270327]
Test Case: 799 | Input/Output: [[28.655157900364514 -15] 13.655157900364514]
Test Case: 800 | Input/Output: [[26.97621192053458 -34] -7.023788079465419]
Test Case: 801 | Input/Output: [[19.631685032187022 -7] 12.631685032187022]
Test Case: 802 | Input/Output: [[-36.69903852888403 -36] -72.69903852888403]
Test Case: 803 | Input/Output: [[37.40959254149263 -15] 22.40959254149263]
Test Case: 804 | Input/Output: [[-94.57906488917915 -4] -98.57906488917915]
Test Case: 805 | Input/Output: [[-66.9126683184092 -29] -95.9126683184092]
Test Case: 806 | Input/Output: [[-67.77431606080637 50] -17.77431606080637]
Test Case: 807 | Input/Output: [[-24.5526543153579 -96] -120.5526543153579]
Test Case: 808 | Input/Output: [[-67.00232858331952 27] -40.002328583319525]
Test Case: 809 | Input/Output: [[58.401131803382725 -95] -36.598868196617275]
Test Case: 810 | Input/Output: [[-66.80112975416377 46] -20.801129754163767]
Test Case: 811 | Input/Output: [[-19.26857849175265 29] 9.731421508247351]
Test Case: 812 | Input/Output: [[30.463414612745368 -15] 15.463414612745368]
Test Case: 813 | Input/Output: [[-2.0858814337352243 -58] -60.085881433735224]
Test Case: 814 | Input/Output: [[-47.137087401342704 98] 50.862912598657296]
Test Case: 815 | Input/Output: [[-48.60305360558797 26] -22.603053605587967]
Test Case: 816 | Input/Output: [[-98.66412579143852 22] -76.66412579143852]
Test Case: 817 | Input/Output: [[-69.53242783817532 80] 10.467572161824677]
Test Case: 818 | Input/Output: [[-47.487408746069804 55] 7.5125912539301964]
Test Case: 819 | Input/Output: [[50.49852908311797 77] 127.49852908311797]
Test Case: 820 | Input/Output: [[36.4135867446216 -21] 15.413586744621597]
Test Case: 821 | Input/Output: [[-80.51275900435911 76] -4.512759004359111]
Test Case: 822 | Input/Output: [[-22.002873402514254 -34] -56.002873402514254]
Test Case: 823 | Input/Output: [[93.26121474303042 32] 125.26121474303042]
Test Case: 824 | Input/Output: [[2.02320323691778 20] 22.02320323691778]
Test Case: 825 | Input/Output: [[-98.11438772013106 -67] -165.11438772013105]
Test Case: 826 | Input/Output: [[-45.198162924327924 -36] -81.19816292432793]
Test Case: 827 | Input/Output: [[93.0970576993926 81] 174.0970576993926]
Test Case: 828 | Input/Output: [[54.11424815346038 71] 125.11424815346038]
Test Case: 829 | Input/Output: [[45.36520133043507 66] 111.36520133043507]
Test Case: 830 | Input/Output: [[90.03221901695179 -80] 10.032219016951785]
Test Case: 831 | Input/Output: [[-46.820251644966746 -22] -68.82025164496675]
Test Case: 832 | Input/Output: [[44.834104314289874 9] 53.834104314289874]
Test Case: 833 | Input/Output: [[69.1281367403626 -87] -17.871863259637394]
Test Case: 834 | Input/Output: [[56.64331666058396 15] 71.64331666058396]
Test Case: 835 | Input/Output: [[-83.92179519135522 70] -13.921795191355216]
Test Case: 836 | Input/Output: [[-39.780254820356895 -10] -49.780254820356895]
Test Case: 837 | Input/Output: [[-22.29762833320254 100] 77.70237166679746]
Test Case: 838 | Input/Output: [[25.902210444136315 -8] 17.902210444136315]
Test Case: 839 | Input/Output: [[90.45429590831003 25] 115.45429590831003]
Test Case: 840 | Input/Output: [[-84.47356082774824 -73] -157.47356082774826]
Test Case: 841 | Input/Output: [[-95.09488780664064 -84] -179.09488780664066]
Test Case: 842 | Input/Output: [[-45.40356448427993 10] -35.40356448427993]
Test Case: 843 | Input/Output: [[91.38098938522984 -96] -4.619010614770161]
Test Case: 844 | Input/Output: [[74.21770383585152 28] 102.21770383585152]
Test Case: 845 | Input/Output: [[-20.097290243339657 56] 35.90270975666034]
Test Case: 846 | Input/Output: [[46.80018489646923 49] 95.80018489646923]
Test Case: 847 | Input/Output: [[-71.36815337079867 -16] -87.36815337079867]
Test Case: 848 | Input/Output: [[88.09955789785039 -16] 72.09955789785039]
Test Case: 849 | Input/Output: [[-12.102044506306612 79] 66.89795549369339]
Test Case: 850 | Input/Output: [[95.9790710888258 -91] 4.979071088825805]
Test Case: 851 | Input/Output: [[-99.29456866790483 -90] -189.29456866790483]
Test Case: 852 | Input/Output: [[67.12777779807166 3] 70.12777779807166]
Test Case: 853 | Input/Output: [[-87.80481223865769 -54] -141.8048122386577]
Test Case: 854 | Input/Output: [[99.68570199817026 13] 112.68570199817026]
Test Case: 855 | Input/Output: [[-46.948379421076616 -25] -71.94837942107662]
Test Case: 856 | Input/Output: [[-30.45647742596023 55] 24.54352257403977]
Test Case: 857 | Input/Output: [[82.26055339704055 -70] 12.260553397040553]
Test Case: 858 | Input/Output: [[1.285760218470216 6] 7.285760218470216]
Test Case: 859 | Input/Output: [[68.8142090308325 -10] 58.8142090308325]
Test Case: 860 | Input/Output: [[-98.65325208371334 -16] -114.65325208371334]
Test Case: 861 | Input/Output: [[-49.057942105626815 -55] -104.05794210562681]
Test Case: 862 | Input/Output: [[-93.7619729427387 -36] -129.76197294273868]
Test Case: 863 | Input/Output: [[-26.31391266705107 68] 41.68608733294893]
Test Case: 864 | Input/Output: [[-91.28487861303 -98] -189.28487861303]
Test Case: 865 | Input/Output: [[-23.035125452160003 52] 28.964874547839997]
Test Case: 866 | Input/Output: [[-58.11129755209772 1] -57.11129755209772]
Test Case: 867 | Input/Output: [[-6.659619137922633 -74] -80.65961913792263]
Test Case: 868 | Input/Output: [[13.016591478458267 -35] -21.983408521541733]
Test Case: 869 | Input/Output: [[-39.8523323408148 -42] -81.8523323408148]
Test Case: 870 | Input/Output: [[-82.19604724788125 -88] -170.19604724788127]
Test Case: 871 | Input/Output: [[-19.037542007325598 -75] -94.0375420073256]
Test Case: 872 | Input/Output: [[-17.59558486712878 76] 58.40441513287122]
Test Case: 873 | Input/Output: [[-38.62623879171194 -49] -87.62623879171194]
Test Case: 874 | Input/Output: [[15.983391235496015 -10] 5.983391235496015]
Test Case: 875 | Input/Output: [[-23.5986080653404 -19] -42.5986080653404]
Test Case: 876 | Input/Output: [[47.29005740435028 98] 145.29005740435028]
Test Case: 877 | Input/Output: [[-74.92853719567856 78] 3.071462804321442]
Test Case: 878 | Input/Output: [[14.9925317397322 -96] -81.0074682602678]
Test Case: 879 | Input/Output: [[21.050411936428716 -35] -13.949588063571284]
Test Case: 880 | Input/Output: [[85.20530638221601 58] 143.205306382216]
Test Case: 881 | Input/Output: [[69.74389810939024 -99] -29.256101890609756]
Test Case: 882 | Input/Output: [[97.62495921569902 70] 167.62495921569902]
Test Case: 883 | Input/Output: [[-95.02742734157658 -45] -140.02742734157658]
Test Case: 884 | Input/Output: [[8.072107805643242 -78] -69.92789219435676]
Test Case: 885 | Input/Output: [[25.14570492103887 70] 95.14570492103887]
Test Case: 886 | Input/Output: [[-52.782120139771216 27] -25.782120139771216]
Test Case: 887 | Input/Output: [[78.98379903714982 34] 112.98379903714982]
Test Case: 888 | Input/Output: [[-61.96947813190368 -52] -113.96947813190368]
Test Case: 889 | Input/Output: [[-69.35741013225908 2] -67.35741013225908]
Test Case: 890 | Input/Output: [[-17.79039420718324 80] 62.20960579281676]
Test Case: 891 | Input/Output: [[69.09842434607839 37] 106.09842434607839]
Test Case: 892 | Input/Output: [[83.12686129171581 -88] -4.873138708284188]
Test Case: 893 | Input/Output: [[-17.79486706793611 49] 31.20513293206389]
Test Case: 894 | Input/Output: [[-38.935042399803834 -19] -57.935042399803834]
Test Case: 895 | Input/Output: [[72.46275373093664 -36] 36.46275373093664]
Test Case: 896 | Input/Output: [[23.534036335293692 42] 65.53403633529369]
Test Case: 897 | Input/Output: [[40.688018384743856 14] 54.688018384743856]
Test Case: 898 | Input/Output: [[-99.75151672539975 -79] -178.75151672539977]
Test Case: 899 | Input/Output: [[41.76278443709941 16] 57.76278443709941]
Test Case: 900 | Input/Output: [[63.13978167827176 14] 77.13978167827176]
Test Case: 901 | Input/Output: [[-45.8377681047254 11] -34.8377681047254]
Test Case: 902 | Input/Output: [[-60.18359898798307 0] -60.18359898798307]
Test Case: 903 | Input/Output: [[44.794078036288965 -27] 17.794078036288965]
Test Case: 904 | Input/Output: [[-56.17858759687391 20] -36.17858759687391]
Test Case: 905 | Input/Output: [[-50.81242218971258 7] -43.81242218971258]
Test Case: 906 | Input/Output: [[-27.42773605789195 39] 11.572263942108052]
Test Case: 907 | Input/Output: [[33.76343311145561 -34] -0.23656688854438812]
Test Case: 908 | Input/Output: [[-81.02694207661597 -32] -113.02694207661597]
Test Case: 909 | Input/Output: [[-95.21447525003252 -68] -163.21447525003254]
Test Case: 910 | Input/Output: [[-43.49684198007604 -7] -50.49684198007604]
Test Case: 911 | Input/Output: [[55.218654821176074 28] 83.21865482117607]
Test Case: 912 | Input/Output: [[53.97905378359718 39] 92.97905378359718]
Test Case: 913 | Input/Output: [[-90.39432136554255 -35] -125.39432136554255]
Test Case: 914 | Input/Output: [[-94.67902259208958 17] -77.67902259208958]
Test Case: 915 | Input/Output: [[-73.64785235247946 6] -67.64785235247946]
Test Case: 916 | Input/Output: [[53.971482977415036 22] 75.97148297741504]
Test Case: 917 | Input/Output: [[-13.440420664292049 14] 0.5595793357079515]
Test Case: 918 | Input/Output: [[-36.860693527743635 -60] -96.86069352774363]
Test Case: 919 | Input/Output: [[55.605045612602396 60] 115.6050456126024]
Test Case: 920 | Input/Output: [[21.609747674790384 -90] -68.39025232520962]
Test Case: 921 | Input/Output: [[-57.81687286136745 -2] -59.81687286136745]
Test Case: 922 | Input/Output: [[6.7280592757555695 68] 74.72805927575557]
Test Case: 923 | Input/Output: [[-10.84200950637431 -81] -91.84200950637431]
Test Case: 924 | Input/Output: [[-9.779120053841012 -19] -28.779120053841012]
Test Case: 925 | Input/Output: [[-3.929969048389026 73] 69.07003095161097]
Test Case: 926 | Input/Output: [[10.599908525857927 -25] -14.400091474142073]
Test Case: 927 | Input/Output: [[-73.44498292659405 -42] -115.44498292659405]
Test Case: 928 | Input/Output: [[-31.3664806939028 90] 58.6335193060972]
Test Case: 929 | Input/Output: [[-6.019451210875218 -87] -93.01945121087522]
Test Case: 930 | Input/Output: [[-57.91334266393986 -5] -62.91334266393986]
Test Case: 931 | Input/Output: [[99.62732042309247 12] 111.62732042309247]
Test Case: 932 | Input/Output: [[-71.90374945226151 -100] -171.9037494522615]
Test Case: 933 | Input/Output: [[-94.67737816992603 -51] -145.67737816992604]
Test Case: 934 | Input/Output: [[93.53728604731162 -49] 44.537286047311625]
Test Case: 935 | Input/Output: [[-46.5767792529209 -5] -51.5767792529209]
Test Case: 936 | Input/Output: [[55.408727551595376 -43] 12.408727551595376]
Test Case: 937 | Input/Output: [[98.11601362831331 91] 189.1160136283133]
Test Case: 938 | Input/Output: [[99.5335364866682 1] 100.5335364866682]
Test Case: 939 | Input/Output: [[-54.942494302236234 -41] -95.94249430223624]
Test Case: 940 | Input/Output: [[8.029700306230936 100] 108.02970030623094]
Test Case: 941 | Input/Output: [[-20.90605612709615 10] -10.90605612709615]
Test Case: 942 | Input/Output: [[-50.67985541197337 -61] -111.67985541197336]
Test Case: 943 | Input/Output: [[96.63776401941041 69] 165.6377640194104]
Test Case: 944 | Input/Output: [[-72.42542727443313 82] 9.574572725566867]
Test Case: 945 | Input/Output: [[21.62689453774489 -60] -38.37310546225511]
Test Case: 946 | Input/Output: [[32.895536308847795 65] 97.8955363088478]
Test Case: 947 | Input/Output: [[-39.026038348025935 49] 9.973961651974065]
Test Case: 948 | Input/Output: [[-84.47125073668313 -46] -130.47125073668315]
Test Case: 949 | Input/Output: [[12.84776174387008 -7] 5.84776174387008]
Test Case: 950 | Input/Output: [[-41.406991355702246 -79] -120.40699135570225]
Test Case: 951 | Input/Output: [[-43.30310443312213 8] -35.30310443312213]
Test Case: 952 | Input/Output: [[-4.178083108942985 7] 2.8219168910570147]
Test Case: 953 | Input/Output: [[71.11626093267171 56] 127.11626093267171]
Test Case: 954 | Input/Output: [[-9.87398494934233 31] 21.12601505065767]
Test Case: 955 | Input/Output: [[-56.18315736841713 -96] -152.18315736841714]
Test Case: 956 | Input/Output: [[-95.24254018671657 41] -54.24254018671657]
Test Case: 957 | Input/Output: [[29.9601011631934 65] 94.9601011631934]
Test Case: 958 | Input/Output: [[-15.82396735062261 45] 29.17603264937739]
Test Case: 959 | Input/Output: [[-48.33853356222582 -24] -72.33853356222582]
Test Case: 960 | Input/Output: [[-55.90566119975977 -50] -105.90566119975978]
Test Case: 961 | Input/Output: [[12.511772691053707 29] 41.51177269105371]
Test Case: 962 | Input/Output: [[-18.872272432290302 67] 48.1277275677097]
Test Case: 963 | Input/Output: [[63.065036983563175 56] 119.06503698356317]
Test Case: 964 | Input/Output: [[-69.02339043963025 82] 12.976609560369752]
Test Case: 965 | Input/Output: [[-70.42644518495584 46] -24.42644518495584]
Test Case: 966 | Input/Output: [[-12.689533611237437 41] 28.310466388762563]
Test Case: 967 | Input/Output: [[84.2262191905848 -15] 69.2262191905848]
Test Case: 968 | Input/Output: [[31.020414753405873 68] 99.02041475340587]
Test Case: 969 | Input/Output: [[-59.475995103121136 -17] -76.47599510312114]
Test Case: 970 | Input/Output: [[3.6696742054356406 -57] -53.33032579456436]
Test Case: 971 | Input/Output: [[63.907206823246554 -36] 27.907206823246554]
Test Case: 972 | Input/Output: [[-20.397528070257565 51] 30.602471929742435]
Test Case: 973 | Input/Output: [[-88.39742366952024 5] -83.39742366952024]
Test Case: 974 | Input/Output: [[5.04101152830998 43] 48.04101152830998]
Test Case: 975 | Input/Output: [[62.1070341823328 74] 136.1070341823328]
Test Case: 976 | Input/Output: [[-68.13368883807127 24] -44.133688838071265]
Test Case: 977 | Input/Output: [[79.51148912792621 -95] -15.488510872073789]
Test Case: 978 | Input/Output: [[-22.503704873659288 -45] -67.50370487365929]
Test Case: 979 | Input/Output: [[8.739464561316666 33] 41.739464561316666]
Test Case: 980 | Input/Output: [[92.2473894897976 -20] 72.2473894897976]
Test Case: 981 | Input/Output: [[33.20415299047539 -37] -3.795847009524607]
Test Case: 982 | Input/Output: [[71.82266500696593 89] 160.82266500696593]
Test Case: 983 | Input/Output: [[-48.692263692117166 18] -30.692263692117166]
Test Case: 984 | Input/Output: [[94.09846642245978 -4] 90.09846642245978]
Test Case: 985 | Input/Output: [[-49.85491173323637 77] 27.14508826676363]
Test Case: 986 | Input/Output: [[77.97292810823316 -99] -21.027071891766838]
Test Case: 987 | Input/Output: [[65.81641024347203 -82] -16.183589756527965]
Test Case: 988 | Input/Output: [[-85.48808999679633 -84] -169.48808999679633]
Test Case: 989 | Input/Output: [[83.5950944601392 63] 146.5950944601392]
Test Case: 990 | Input/Output: [[-69.37094380533426 -56] -125.37094380533426]
Test Case: 991 | Input/Output: [[64.30074548065025 -48] 16.30074548065025]
Test Case: 992 | Input/Output: [[65.87329285886963 -77] -11.126707141130368]
Test Case: 993 | Input/Output: [[-62.37793309537827 -66] -128.37793309537827]
Test Case: 994 | Input/Output: [[71.42803584121904 -77] -5.571964158780958]
Test Case: 995 | Input/Output: [[-48.27661380304649 51] 2.7233861969535127]
Test Case: 996 | Input/Output: [[81.41207200522967 -92] -10.587927994770325]
Test Case: 997 | Input/Output: [[46.71910924613658 -43] 3.7191092461365827]
Test Case: 998 | Input/Output: [[10.23018772877083 -48] -37.76981227122917]
Test Case: 999 | Input/Output: [[52.521462785620685 31] 83.52146278562068]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -106 -105 -32 -102 50 -67 10 35 64 -124 71 124 -111 80 -43 83
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 55255.0
Test mean error for best: 27.62750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: -84.1128865493
Correct output: -57.5621147442 | Program output: 11.4378852558 
Correct output: -102.040355723 | Program output: -49.040355723 
Correct output: -61.2152889346 | Program output: -31.2152889346
Correct output: 5.6962652891   | Program output: 38.6962652891 
Correct output: -11.3496840774 | Program output: 70.6503159226 
Correct output: 80.1054352041  | Program output: 69.1054352041 
Correct output: -14.8395504361 | Program output: 11.1604495639 
Correct output: 74.7662558409  | Program output: 10.7662558409 
Correct output: 56.391599915   | Program output: 70.391599915  
Correct output: -82.5640342349 | Program output: -42.5640342349
Correct output: -130.6882893533 | Program output: -96.6882893533
Correct output: 140.8973767135 | Program output: 48.8973767135 
Correct output: -51.0508359853 | Program output: -41.0508359853
Correct output: 9.5418677285   | Program output: 44.5418677285 
Correct output: 42.2352107757  | Program output: -45.7647892243
Correct output: 76.2473078866  | Program output: 83.2473078866 
Correct output: -84.3348288125 | Program output: 9.6651711875  
Correct output: 40.6137353953  | Program output: -17.3862646047
Correct output: 113.0317347877 | Program output: 60.0317347877 
Correct output: 63.3706224584  | Program output: 54.3706224584 
Correct output: 43.2606324519  | Program output: -31.7393675481
Correct output: -91.8895297288 | Program output: -37.8895297288
Correct output: -53.0256536635 | Program output: -99.0256536635
Correct output: 10.3014429958  | Program output: -12.6985570042
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction float_min} {:instruction integer_pop} {:instruction in1} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction integer_yank} {:instruction float_sin} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction in1} {:instruction float_min} {:instruction float_dec} {:instruction integer_rot} {:instruction integer_shove} {:instruction integer_mod} {:instruction print_float} {:instruction integer_max} {:instruction tag_float_56})
Best program: (float_pop integer_dec integer_div integer_sub float_min integer_pop in1 integer_shove integer_fromfloat float_mult integer_yank float_sin float_tan integer_swap integer_dup_times float_stackdepth in1 float_min float_dec integer_rot integer_shove integer_mod print_float integer_max tag_float_56)
Errors: [101.0 12 69.0 13 53.0 3 30.0 1 33.0 2 82.0 13 11.0 2 26.0 12 64.0 2 14.0 2 40.0 1 34.0 3 92.0 2 10.0 1 35.0 2 88.0 12 7.0 2 94.0 12 58.0 13 53.0 3 9.0 2 75.0 10 54.0 2 46.0 2 23.0 12]
Total: 1342.0
Mean: 26.84
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 18573.6134974
Median total errors in population: 25336.0
Error averages by case: (726.1986020000006 12.994 732.7731169999989 13.875 742.9377123000023 13.118 732.2936674000008 13.139 723.699985599999 11.722 730.3015439000009 13.703 723.3593866 12.145 723.6234297999987 13.684 724.8729634000014 12.407 729.5153150999976 11.583 737.2389944000017 13.099 748.6927878000009 13.935 743.0650752000016 13.027 730.5702859999997 13.075 724.6858708999993 11.672 724.9082978 13.107 732.4907008000014 12.392 737.937947499999 13.881 720.7061911999995 13.097 733.9588674000021 13.235 720.2803531000017 12.359 724.7169710000005 12.911 740.9929371000014 13.175 726.4543268000001 13.171 713.8421673000001 12.99)
Error minima by case: (0.1129 8 0.6782 9 4.5865 3 0.5143 1 0.3037 2 1.9287 8 0.1054 1 0.6427 9 1.7635 2 1.1981 2 1.2447 1 6.6883 3 3.8048 2 2.0508 1 0.4581 2 2.4086 7 0.2824 2 0.3348 8 0.7871 9 18.0317 2 0.3706 2 2.2606 8 1.0852 2 0.9743 2 0.3014 8)
Average genome size in population (length): 49.223
Average program size in population (points): 50.223
Average percent parens in population: 0.045
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.284
Error (vector) diversity:			 0.312
Behavioral diversity:				 0.333
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1234458
--- Timings ---
Current time: 1529614832643 milliseconds
Total Time:           3.7 seconds
Initialization:       0.1 seconds,  3.1%
Reproduction:         0.6 seconds, 15.0%
Fitness Testing:      3.0 seconds, 81.9%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 61077.0247
Test mean error for best: 30.53851
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: 12.4378852558 
Correct output: -102.040355723 | Program output: -48.040355723 
Correct output: -61.2152889346 | Program output: -30.2152889346
Correct output: 5.6962652891   | Program output: 39.6962652891 
Correct output: -11.3496840774 | Program output: 71.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: 12.1604495639 
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 71.391599915  
Correct output: -82.5640342349 | Program output: -41.5640342349
Correct output: -130.6882893533 | Program output: -95.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -40.0508359853
Correct output: 9.5418677285   | Program output: 45.5418677285 
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 84.2473078866 
Correct output: -84.3348288125 | Program output: 10.6651711875 
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -36.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction integer_swap})
Best program: (integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult integer_swap)
Errors: [16.1449 11 70.0 13 54.0 3 31.0 2 34.0 2 83.0 12 47.0734 9 27.0 12 41.7343 11 15.0 2 41.0 2 35.0 3 107.8654 12 11.0 2 36.0 2 9.2032 10 8.0 2 95.0 12 7.5817 11 79.9997 10 30.3386 9 10.2286 8 55.0 2 86.0577 10 22.7306 10]
Total: 1235.9581000000003
Mean: 24.719162
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 6692.650297900009
Median total errors in population: 1823.4067000000002
Error averages by case: (263.9017019 12.188 256.3498869000005 13.196 283.5278260999993 10.621 258.90715750000174 10.579 232.69488320000127 9.803 254.3906508999996 12.769 244.36760840000017 9.456 227.17203420000035 12.714 248.11977139999843 10.062 245.91932340000093 9.486 270.91967300000243 10.442 296.34034260000004 11.196 291.5154731999988 10.32 250.43269169999903 10.473 233.79473680000106 9.609 257.9368870999996 12.419 252.81820139999817 10.105 272.0321003000007 13.0 246.36747929999942 12.541 271.08533599999913 10.817 234.0140830999985 10.048 255.83486270000017 11.81 278.4169402999982 10.648 263.5914636999995 10.644 225.00218279999999 12.251)
Error minima by case: (0.1129 8 3.1388 9 4.5865 3 0.5143 1 1.6963 2 1.9287 8 0.1054 1 0.53 9 1.7635 2 1.1981 2 1.436 1 6.6883 3 9.0 1 1.9492 1 0.4581 2 0.2352 7 0.2824 2 0.3348 8 0.7871 8 16.0317 2 0.3706 2 1.2606 8 1.0852 2 0.0257 2 0.3014 8)
Average genome size in population (length): 57.195
Average program size in population (points): 58.195
Average percent parens in population: 0.024
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.497
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.764
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.764
Total error diversity:				 0.286
Error (vector) diversity:			 0.309
Behavioral diversity:				 0.334
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2670043
--- Timings ---
Current time: 1529614838115 milliseconds
Total Time:           9.4 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.0 seconds, 42.3%
Fitness Testing:      4.7 seconds, 50.0%
Report:               0.6 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 61077.0247
Test mean error for best: 30.53851
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: 12.4378852558 
Correct output: -102.040355723 | Program output: -48.040355723 
Correct output: -61.2152889346 | Program output: -30.2152889346
Correct output: 5.6962652891   | Program output: 39.6962652891 
Correct output: -11.3496840774 | Program output: 71.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: 12.1604495639 
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 71.391599915  
Correct output: -82.5640342349 | Program output: -41.5640342349
Correct output: -130.6882893533 | Program output: -95.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -40.0508359853
Correct output: 9.5418677285   | Program output: 45.5418677285 
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 84.2473078866 
Correct output: -84.3348288125 | Program output: 10.6651711875 
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -36.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction integer_swap})
Best program: (integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_yankdup float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult integer_swap)
Errors: [16.1449 11 70.0 13 54.0 3 31.0 2 34.0 2 83.0 12 47.0734 9 27.0 12 41.7343 11 15.0 2 41.0 2 35.0 3 107.8654 12 11.0 2 36.0 2 9.2032 10 8.0 2 95.0 12 7.5817 11 79.9997 10 30.3386 9 10.2286 8 55.0 2 86.0577 10 22.7306 10]
Total: 1235.9581000000003
Mean: 24.719162
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 4244.0601357
Median total errors in population: 1368.0
Error averages by case: (198.60007480000021 12.3 174.08724039999984 13.317 171.14068949999975 6.467 150.8905667000001 5.717 151.52811620000008 5.579 190.6224410000001 12.732 133.83504740000006 4.99 142.73495179999955 12.515 162.28868399999988 5.678 145.12564600000027 5.312 160.31326560000028 5.698 166.7838934 6.638 190.7815963999995 5.59 138.22692029999968 5.705 153.94411159999999 5.405 183.97443230000027 12.655 143.1062305 5.712 192.31172409999976 12.719 158.5484267000002 13.165 164.0208372000002 6.19 127.19866449999955 5.682 172.65418949999994 11.096 169.67692479999985 5.83 164.03743879999976 5.933 132.40902220000038 12.594)
Error minima by case: (6.8871 9 1.4379 8 6.9596 3 1.6745 1 3.1389 2 7.3497 9 1.8946 1 4.8396 9 4.6441 2 0.3916 2 0.436 1 34.0 3 29.1026 2 7.9492 1 0.4581 2 9.2032 7 5.2473 2 7.166 7 7.5817 8 17.9683 2 6.7515 2 2.2606 8 0.3887 2 5.9743 2 0.3014 9)
Average genome size in population (length): 48.279
Average program size in population (points): 49.279
Average percent parens in population: 0.027
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.0075
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 52
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 52
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.116
Error (vector) diversity:			 0.122
Behavioral diversity:				 0.131
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3882229
--- Timings ---
Current time: 1529614841556 milliseconds
Total Time:          12.8 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.5 seconds, 42.8%
Fitness Testing:      6.2 seconds, 48.6%
Report:               1.0 seconds,  7.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 61077.0247
Test mean error for best: 30.53851
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: 12.4378852558 
Correct output: -102.040355723 | Program output: -48.040355723 
Correct output: -61.2152889346 | Program output: -30.2152889346
Correct output: 5.6962652891   | Program output: 39.6962652891 
Correct output: -11.3496840774 | Program output: 71.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: 12.1604495639 
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 71.391599915  
Correct output: -82.5640342349 | Program output: -41.5640342349
Correct output: -130.6882893533 | Program output: -95.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -40.0508359853
Correct output: 9.5418677285   | Program output: 45.5418677285 
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 84.2473078866 
Correct output: -84.3348288125 | Program output: 10.6651711875 
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -36.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction integer_swap})
Best program: (integer_stackdepth float_mult float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_yankdup float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult integer_swap)
Errors: [16.1449 11 70.0 13 54.0 3 31.0 2 34.0 2 83.0 12 47.0734 9 27.0 12 41.7343 11 15.0 2 41.0 2 35.0 3 107.8654 12 11.0 2 36.0 2 9.2032 10 8.0 2 95.0 12 7.5817 11 79.9997 10 30.3386 9 10.2286 8 55.0 2 86.0577 10 22.7306 10]
Total: 1235.9581000000003
Mean: 24.719162
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3967.683877300001
Median total errors in population: 1345.0
Error averages by case: (195.92218220000004 12.189 170.90876850000004 13.14 158.36867969999997 4.308 137.72314749999998 3.061 138.46897249999998 3.341 181.1953864 12.67 119.50419899999994 3.079 132.59802080000003 12.223 164.46747699999997 3.596 122.87680759999999 3.368 146.7339217 3.064 141.93174029999997 4.437 190.8927299999999 3.674 120.0166359 3.057 140.26800540000002 3.351 184.7072505 12.202 117.21172070000003 3.453 192.4018758 12.27 158.865604 13.07 156.5999760999999 4.067 116.96081720000001 3.559 173.55441170000003 10.443 159.14919329999998 3.457 150.55571360000002 3.59 128.95063989999997 12.181)
Error minima by case: (13.8671 6 55.2922 6 52.0 2 29.0 1 3.0817 2 7.2721 6 7.3371 1 12.3276 6 1.9979 2 7.6586 2 39.0 1 33.0 3 68.129 2 9.0 1 8.6944 2 0.1295 6 3.4789 2 81.9485 6 1.3844 6 40.2634 2 7.0 1 0.8959 6 53.0 2 44.0 2 7.2814 6)
Average genome size in population (length): 33.446
Average program size in population (points): 34.446
Average percent parens in population: 0.036
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.4915
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 178
Genome diversity (% unique Plush genomes):	 0.502
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 178
Syntactic diversity (% unique Push programs):	 0.502
Total error diversity:				 0.044
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4718954
--- Timings ---
Current time: 1529614845158 milliseconds
Total Time:          16.3 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.2 seconds, 43.7%
Fitness Testing:      7.7 seconds, 47.0%
Report:               1.4 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 61077.0247
Test mean error for best: 30.53851
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: 12.4378852558 
Correct output: -102.040355723 | Program output: -48.040355723 
Correct output: -61.2152889346 | Program output: -30.2152889346
Correct output: 5.6962652891   | Program output: 39.6962652891 
Correct output: -11.3496840774 | Program output: 71.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: 12.1604495639 
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 71.391599915  
Correct output: -82.5640342349 | Program output: -41.5640342349
Correct output: -130.6882893533 | Program output: -95.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -40.0508359853
Correct output: 9.5418677285   | Program output: 45.5418677285 
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 84.2473078866 
Correct output: -84.3348288125 | Program output: 10.6651711875 
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -36.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction integer_swap})
Best program: (integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_yankdup float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult integer_swap)
Errors: [16.1449 11 70.0 13 54.0 3 31.0 2 34.0 2 83.0 12 47.0734 9 27.0 12 41.7343 11 15.0 2 41.0 2 35.0 3 107.8654 12 11.0 2 36.0 2 9.2032 10 8.0 2 95.0 12 7.5817 11 79.9997 10 30.3386 9 10.2286 8 55.0 2 86.0577 10 22.7306 10]
Total: 1235.9581000000003
Mean: 24.719162
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2682.4654302000013
Median total errors in population: 1342.0
Error averages by case: (141.67914379999988 11.924 118.96149559999996 12.996 107.76227039999998 3.793 85.8632566 2.131 84.5110409 2.949 129.37413930000005 12.8 72.17394600000003 3.726 78.32685650000002 12.043 113.01937549999991 4.064 69.0996694 2.954 95.43827709999998 2.124 90.59609389999997 3.883 145.41442869999983 4.212 67.20627679999998 2.12 86.53656459999998 2.915 130.6076617 11.792 63.484688400000024 2.999 141.83831709999995 12.076 106.14811499999995 12.749 110.37327840000016 4.735 68.00816400000011 3.859 120.24501540000004 9.987 108.56123280000004 2.903 106.38760420000004 3.862 79.39351810000007 11.859)
Error minima by case: (15.1129 10 12.4379 9 6.0 2 1.0 1 4.1486 2 8.6562 9 10.0 1 7.8294 8 11.7343 2 13.0 2 0.0 0 33.0 1 49.8654 2 9.0 1 8.5419 1 9.2032 8 6.0 2 10.6652 9 7.5817 10 52.0 2 8.0 1 10.2286 8 19.0 2 44.4033 2 5.3019 9)
Average genome size in population (length): 28.385
Average program size in population (points): 29.385
Average percent parens in population: 0.036
Minimum age in population: 4.0
Maximum age in population: 7.875
Average age in population: 6.034
Median age in population: 6.0625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 259
Genome diversity (% unique Plush genomes):	 0.434
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 259
Syntactic diversity (% unique Push programs):	 0.434
Total error diversity:				 0.046
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5428754
--- Timings ---
Current time: 1529614848709 milliseconds
Total Time:          20.0 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.9 seconds, 44.4%
Fitness Testing:      9.2 seconds, 45.7%
Report:               1.9 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 51617.72519999993
Test mean error for best: 25.80886
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: -46.0498502397
Correct output: -102.040355723 | Program output: -106.5280912185
Correct output: -61.2152889346 | Program output: -88.7030244301
Correct output: 5.6962652891   | Program output: -18.7914702064
Correct output: -11.3496840774 | Program output: 13.1625804271 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: -46.3272859316
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 12.9038644195 
Correct output: -82.5640342349 | Program output: -100.0517697304
Correct output: -130.6882893533 | Program output: -154.1760248488
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -98.5385714808
Correct output: 9.5418677285   | Program output: -12.945867767 
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 25.7595723911 
Correct output: -84.3348288125 | Program output: -47.822564308 
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -95.3772652243
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_tan} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction print_integer} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_swap})
Best program: (integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_tan integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max print_integer float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_swap)
Errors: [16.1449 11 11.5123 12 4.4877 10 27.4877 11 24.4877 11 24.5123 10 47.0734 9 31.4877 11 41.7343 11 43.4877 10 17.4877 12 23.4877 12 107.8654 12 47.4877 10 22.4877 8 9.2032 10 50.4877 12 36.5123 12 7.5817 11 79.9997 10 30.3386 9 10.2286 8 3.4877 10 86.0577 10 22.7306 10]
Total: 1089.8597000000002
Mean: 21.797194
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2851.7781948999996
Median total errors in population: 1340.0
Error averages by case: (111.22233559999943 11.53 128.87391419999992 13.005 117.48380809999988 4.358 95.76642860000001 3.245 95.5738936 3.688 138.65270720000012 12.412 94.3421890999993 6.83 89.54457720000005 12.057 109.56642559999949 7.912 82.42050850000003 3.643 105.33034499999992 3.193 102.58264309999987 4.554 157.12882979999986 8.338 78.14095109999988 3.188 97.57327829999996 3.637 102.69316690000042 10.941 77.91516600000007 3.729 151.87984359999993 12.142 89.6896446999998 11.935 127.20076450000062 7.779 84.15046360000046 7.045 97.96424590000045 9.322 117.94754550000009 3.632 126.46848240000057 7.347 85.00503680000014 11.199)
Error minima by case: (13.1419 10 11.5123 10 4.4877 2 0.7847 1 3.6963 2 0.6503 9 10.0 1 2.8396 9 11.7663 2 12.0 2 0.0 0 23.4877 1 42.1026 2 8.0 1 7.5419 1 9.2022 8 5.0 2 1.6652 7 7.5807 9 8.0317 2 8.0 1 10.2276 8 3.4877 2 44.9743 2 6.3019 8)
Average genome size in population (length): 36.089
Average program size in population (points): 37.089
Average percent parens in population: 0.029
Minimum age in population: 5.25
Maximum age in population: 9.25
Average age in population: 7.478125
Median age in population: 7.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 85
Genome diversity (% unique Plush genomes):	 0.583
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 85
Syntactic diversity (% unique Push programs):	 0.583
Total error diversity:				 0.1
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6331804
--- Timings ---
Current time: 1529614851812 milliseconds
Total Time:          23.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.3 seconds, 44.5%
Fitness Testing:     10.5 seconds, 45.4%
Report:               2.2 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 51617.72519999993
Test mean error for best: 25.80886
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: -46.0498502397
Correct output: -102.040355723 | Program output: -106.5280912185
Correct output: -61.2152889346 | Program output: -88.7030244301
Correct output: 5.6962652891   | Program output: -18.7914702064
Correct output: -11.3496840774 | Program output: 13.1625804271 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: -46.3272859316
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 12.9038644195 
Correct output: -82.5640342349 | Program output: -100.0517697304
Correct output: -130.6882893533 | Program output: -154.1760248488
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -98.5385714808
Correct output: 9.5418677285   | Program output: -12.945867767 
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 25.7595723911 
Correct output: -84.3348288125 | Program output: -47.822564308 
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -95.3772652243
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_tan} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction print_integer} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_swap})
Best program: (integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_div integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_tan integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max print_integer float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_swap)
Errors: [16.1449 11 11.5123 12 4.4877 10 27.4877 11 24.4877 11 24.5123 10 47.0734 9 31.4877 11 41.7343 11 43.4877 10 17.4877 12 23.4877 12 107.8654 12 47.4877 10 22.4877 8 9.2032 10 50.4877 12 36.5123 12 7.5817 11 79.9997 10 30.3386 9 10.2286 8 3.4877 10 86.0577 10 22.7306 10]
Total: 1089.8597000000002
Mean: 21.797194
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2183.1202698000147
Median total errors in population: 1235.9581000000003
Error averages by case: (52.259615499999605 11.102 107.43322710000005 13.009 93.64025199999993 4.187 71.90145369999999 3.358 74.89357499999998 3.38 120.26327609999998 12.059 78.39725829999959 9.085 67.98003870000004 12.053 73.89268759999848 10.949 60.583704300000036 3.307 81.53276569999991 3.343 79.99638579999993 4.36 136.1410419999988 11.765 54.84845579999993 3.311 76.92863309999991 3.289 45.21396570000073 10.163 55.67516050000004 3.399 130.87007640000002 12.139 42.33361370000017 11.096 109.41004060000041 10.033 62.59780080000087 9.244 45.533015900000116 8.426 94.04308270000004 3.414 115.2240758000011 10.041 54.72106700000059 10.294)
Error minima by case: (13.1419 10 11.5123 9 3.9596 2 0.2153 1 1.6963 2 5.6503 10 9.0 1 2.1604 9 11.7043 2 13.0 2 0.0 0 23.4877 1 41.1026 2 9.0 1 5.5419 1 8.2022 8 6.0 2 10.6652 10 6.5807 9 7.0317 2 7.0 1 9.2276 8 3.4877 2 35.9937 2 10.2691 8)
Average genome size in population (length): 44.591
Average program size in population (points): 45.591
Average percent parens in population: 0.022
Minimum age in population: 6.25
Maximum age in population: 10.84375
Average age in population: 8.9144375
Median age in population: 8.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 110
Genome diversity (% unique Plush genomes):	 0.572
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 110
Syntactic diversity (% unique Push programs):	 0.572
Total error diversity:				 0.1
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7448254
--- Timings ---
Current time: 1529614855408 milliseconds
Total Time:          26.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.0 seconds, 45.0%
Fitness Testing:     12.0 seconds, 44.8%
Report:               2.6 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 51601.99619999989
Test mean error for best: 25.80100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.065        
Correct output: -57.5621147442 | Program output: -46.0498502397
Correct output: -102.040355723 | Program output: -106.5280912185
Correct output: -61.2152889346 | Program output: -88.7030244301
Correct output: 5.6962652891   | Program output: -18.7914702064
Correct output: -11.3496840774 | Program output: 13.1625804271 
Correct output: 80.1054352041  | Program output: 33.065        
Correct output: -14.8395504361 | Program output: -46.3272859316
Correct output: 74.7662558409  | Program output: 33.065        
Correct output: 56.391599915   | Program output: 12.9038644195 
Correct output: -82.5640342349 | Program output: -100.0517697304
Correct output: -130.6882893533 | Program output: -154.1760248488
Correct output: 140.8973767135 | Program output: 33.065        
Correct output: -51.0508359853 | Program output: -98.5385714808
Correct output: 9.5418677285   | Program output: -12.945867767 
Correct output: 42.2352107757  | Program output: 33.065        
Correct output: 76.2473078866  | Program output: 25.7595723911 
Correct output: -84.3348288125 | Program output: -47.822564308 
Correct output: 40.6137353953  | Program output: 33.065        
Correct output: 113.0317347877 | Program output: 33.065        
Correct output: 63.3706224584  | Program output: 33.065        
Correct output: 43.2606324519  | Program output: 33.065        
Correct output: -91.8895297288 | Program output: -95.3772652243
Correct output: -53.0256536635 | Program output: 33.065        
Correct output: 10.3014429958  | Program output: 33.065        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_mult} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_tan} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction print_integer} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_add} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_swap})
Best program: (integer_stackdepth integer_mult float_frominteger -58.4877354954972 in1 float_tan integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max print_integer float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_add float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_swap)
Errors: [16.1779 11 11.5123 12 4.4877 10 27.4877 11 24.4877 11 24.5123 10 47.0404 10 31.4877 11 41.7013 10 43.4877 10 17.4877 12 23.4877 12 107.8324 11 47.4877 10 22.4877 8 9.1702 10 50.4877 12 36.5123 12 7.5487 10 79.9667 11 30.3056 8 10.1956 8 3.4877 10 86.0907 9 22.7636 10]
Total: 1086.6947000000002
Mean: 21.733894
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2594.705102100013
Median total errors in population: 1235.9581000000003
Error averages by case: (68.94215979999959 11.093 118.3920036000001 12.984 107.07975779999987 4.842 88.45469349999995 4.181 89.44744929999995 4.242 130.0791049000001 11.982 97.74007029999909 9.237 83.86593129999994 12.039 91.55829409999883 11.009 78.86909760000006 4.113 96.75000799999982 4.22 96.98003749999987 5.167 153.02953999999988 11.899 74.57280309999987 4.066 91.18427679999988 3.979 61.91476420000103 10.239 75.60046030000008 4.351 141.2616846 12.192 59.4102113000008 11.015 127.05292730000055 10.122 82.10608490000085 9.282 62.379547700000664 8.501 107.27576709999995 4.16 132.1947381000011 10.088 73.28268900000039 10.278)
Error minima by case: (15.1129 10 0.9256 9 4.4877 3 0.2153 1 1.6963 2 10.3497 10 10.0 1 12.1604 10 11.7043 2 1.0961 2 0.564 1 23.4877 3 41.1026 2 7.4369 1 5.5419 1 8.2012 8 7.0 2 8.3348 9 6.5797 8 8.0317 2 5.8829 2 9.2266 8 3.4877 2 41.0257 2 0.6986 9)
Average genome size in population (length): 44.746
Average program size in population (points): 45.746
Average percent parens in population: 0.022
Minimum age in population: 7.25
Maximum age in population: 12.296875
Average age in population: 10.391828125
Median age in population: 10.4453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 80
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 80
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.116
Error (vector) diversity:			 0.116
Behavioral diversity:				 0.117
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8568979
--- Timings ---
Current time: 1529614859029 milliseconds
Total Time:          30.3 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.8 seconds, 45.4%
Fitness Testing:     13.4 seconds, 44.3%
Report:               3.0 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 47831.02470000001
Test mean error for best: 23.91551
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_swap})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_swap)
Errors: [16.1449 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0734 9 14.0 2 41.7343 11 26.0 2 0.0 0 6.0 1 107.8654 12 30.0 1 5.0 1 9.2032 10 33.0 2 54.0 2 7.5817 11 79.9997 10 30.3386 9 10.2286 8 14.0 2 86.0577 10 22.7306 10]
Total: 896.9580999999998
Mean: 17.939161
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2734.975926100016
Median total errors in population: 1234.9515000000001
Error averages by case: (81.72880729999933 11.082 105.0797785000003 12.735 102.20227229999959 6.581 94.4697864999996 6.368 87.11176919999969 6.826 114.11857930000053 11.492 106.92284229999888 9.553 85.82059309999977 11.774 102.1061591999995 11.055 87.93791659999984 6.413 98.00911759999957 6.657 100.50710589999954 7.36 162.63147439999983 11.937 89.81244089999956 6.018 88.0756101999995 5.788 75.27714050000107 10.292 88.85223019999985 7.122 128.18378550000034 12.218 72.90174580000046 10.948 136.9230781000006 10.314 91.30820870000085 9.609 75.78615170000054 8.844 101.9190739999997 6.134 144.18712100000067 10.32 85.24013730000043 10.423)
Error minima by case: (15.1129 10 0.9256 2 3.9968 3 0.2153 1 4.6963 2 7.6276 9 10.0 1 8.1604 2 8.7343 2 0.9291 2 0.0 0 6.0 1 18.8654 2 7.4369 1 5.0 1 5.2352 8 5.7527 2 3.6652 2 3.6137 8 8.0317 2 2.6614 2 6.2606 7 2.9968 2 5.4621 2 5.3019 9)
Average genome size in population (length): 43.266
Average program size in population (points): 44.266
Average percent parens in population: 0.023
Minimum age in population: 9.625
Maximum age in population: 13.6953125
Average age in population: 11.9289609375
Median age in population: 11.9609375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 89
Genome diversity (% unique Plush genomes):	 0.624
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.624
Total error diversity:				 0.157
Error (vector) diversity:			 0.163
Behavioral diversity:				 0.165
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 9653254
--- Timings ---
Current time: 1529614862297 milliseconds
Total Time:          33.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.2 seconds, 45.3%
Fitness Testing:     14.9 seconds, 44.4%
Report:               3.4 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 47831.02470000001
Test mean error for best: 23.91551
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_swap})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_swap)
Errors: [16.1449 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0734 9 14.0 2 41.7343 11 26.0 2 0.0 0 6.0 1 107.8654 12 30.0 1 5.0 1 9.2032 10 33.0 2 54.0 2 7.5817 11 79.9997 10 30.3386 9 10.2286 8 14.0 2 86.0577 10 22.7306 10]
Total: 896.9580999999998
Mean: 17.939161
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2461.9033235999914
Median total errors in population: 1091.8547
Error averages by case: (64.48908849999974 11.096 82.13336930000067 12.264 77.58442269999937 9.043 87.05640819999924 9.608 82.5538097999993 9.837 89.70475390000081 10.735 95.40844609999905 9.59 86.09704369999932 11.328 89.73382109999926 11.052 92.45610159999929 9.003 83.01871629999926 10.238 89.67120009999923 10.542 151.57182079999956 12.045 97.38452109999913 8.874 82.22346669999924 7.669 58.20190930000107 10.197 97.6845692999993 10.437 105.3399056000008 12.069 55.962129400000784 11.087 125.23761430000101 10.446 79.78255780000073 9.594 58.8192774000006 8.752 76.7210277999994 8.957 128.2144682000008 10.391 69.58987460000102 10.409)
Error minima by case: (15.1129 10 0.9256 2 3.1841 2 0.2153 1 1.6963 2 3.6503 9 10.0 1 0.1604 2 8.7663 1 13.8266 2 0.0 0 6.0 1 41.1026 2 7.4369 1 5.0 1 8.2012 8 7.0 2 0.6652 2 6.5797 2 8.0317 2 2.6294 2 9.2266 2 1.1105 2 5.4621 2 9.3014 2)
Average genome size in population (length): 42.478
Average program size in population (points): 43.478
Average percent parens in population: 0.023
Minimum age in population: 11.0703125
Maximum age in population: 15.25
Average age in population: 13.46284765625
Median age in population: 13.46484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 82
Genome diversity (% unique Plush genomes):	 0.551
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 82
Syntactic diversity (% unique Push programs):	 0.551
Total error diversity:				 0.137
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 10717304
--- Timings ---
Current time: 1529614865915 milliseconds
Total Time:          37.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.8 seconds, 45.2%
Fitness Testing:     16.4 seconds, 44.3%
Report:               3.8 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 47831.02470000001
Test mean error for best: 23.91551
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.032        
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.032        
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.032        
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.032        
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.032        
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.032        
Correct output: 113.0317347877 | Program output: 33.032        
Correct output: 63.3706224584  | Program output: 33.032        
Correct output: 43.2606324519  | Program output: 33.032        
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.032        
Correct output: 10.3014429958  | Program output: 33.032        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_swap})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_swap)
Errors: [16.1449 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0734 9 14.0 2 41.7343 11 26.0 2 0.0 0 6.0 1 107.8654 12 30.0 1 5.0 1 9.2032 10 33.0 2 54.0 2 7.5817 11 79.9997 10 30.3386 9 10.2286 8 14.0 2 86.0577 10 22.7306 10]
Total: 896.9580999999998
Mean: 17.939161
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2082.274579300004
Median total errors in population: 1089.8597000000002
Error averages by case: (50.57823049999964 11.063 65.15804380000051 11.95 59.148464599999606 9.223 70.72604929999943 9.845 69.05186159999944 10.16 78.60817820000071 10.691 78.30945809999956 9.359 72.40039009999937 11.046 72.51988959999898 10.993 82.70221939999928 9.027 65.62059609999942 10.475 73.4814692999993 10.727 135.2209957999993 11.826 83.56515919999907 9.085 68.39511509999939 7.662 43.32656170000067 10.203 88.28105099999928 10.52 88.46288960000088 11.739 40.802400000000404 10.758 108.91075890000064 10.159 62.30060190000089 9.221 43.80186230000022 8.442 58.128687199999575 9.161 115.18228520000109 9.956 54.08836080000085 10.212)
Error minima by case: (2.4671 9 0.9256 2 2.5669 2 0.7847 1 2.6963 2 10.6562 9 8.9855 1 12.1604 2 8.7343 2 2.0961 2 0.0 0 6.0 1 41.1026 2 7.4369 1 5.0 1 9.1492 9 6.4223 2 10.6652 2 7.5274 8 8.0317 2 1.6294 2 10.1876 8 1.5669 2 5.4621 2 9.3802 9)
Average genome size in population (length): 44.324
Average program size in population (points): 45.324
Average percent parens in population: 0.022
Minimum age in population: 12.9765625
Maximum age in population: 16.998046875
Average age in population: 15.014794921875
Median age in population: 15.044921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 83
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.127
Error (vector) diversity:			 0.129
Behavioral diversity:				 0.13
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 11827229
--- Timings ---
Current time: 1529614869302 milliseconds
Total Time:          40.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.2 seconds, 45.0%
Fitness Testing:     18.0 seconds, 44.2%
Report:               4.3 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 47736.98739999999
Test mean error for best: 23.86849
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.03233      
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.03233      
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.03233      
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.03233      
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.03233      
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.03233      
Correct output: 113.0317347877 | Program output: 33.03233      
Correct output: 63.3706224584  | Program output: 33.03233      
Correct output: 43.2606324519  | Program output: 33.03233      
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.03233      
Correct output: 10.3014429958  | Program output: 33.03233      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1452 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0731 9 14.0 2 41.7339 11 26.0 2 0.0 0 6.0 1 107.865 11 30.0 1 5.0 1 9.2029 10 33.0 2 54.0 2 7.5814 9 79.9994 9 30.3383 9 10.2283 8 14.0 2 86.058 9 22.7309 10]
Total: 891.9564
Mean: 17.839128
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2536.1329667000086
Median total errors in population: 1086.6947000000002
Error averages by case: (70.68136579999972 11.075 86.6153488000005 10.835 79.69230549999945 8.431 87.30271099999945 8.67 85.3439839999995 10.277 99.06541120000064 11.149 97.17294779999938 9.603 88.57865099999948 10.064 92.46641480000018 10.917 97.89324469999947 8.113 82.72989999999945 9.035 90.28488959999937 9.418 154.04417929999994 11.62 98.41471349999925 8.103 85.02019009999944 6.998 63.681993000000254 10.311 103.02538789999943 9.249 109.67560580000071 10.618 61.45909110000055 10.259 128.27036690000102 10.123 81.47182930000093 9.235 64.27359960000055 8.618 78.9008550999995 8.265 134.60186810000064 9.701 74.43811280000068 10.341)
Error minima by case: (15.1129 10 0.2124 2 2.5669 2 0.2153 1 1.6663 2 10.6562 9 10.0 1 12.1604 2 8.7343 2 13.8266 2 0.0 0 6.0 1 18.8974 2 6.7236 1 5.0 1 8.2019 8 7.0 2 10.6652 2 6.5804 8 9.0317 2 2.6604 1 9.2273 8 1.5669 2 44.4033 2 9.3014 9)
Average genome size in population (length): 45.548
Average program size in population (points): 46.548
Average percent parens in population: 0.022
Minimum age in population: 14.09375
Maximum age in population: 18.3544921875
Average age in population: 16.5338623046875
Median age in population: 16.576171875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.607
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.607
Total error diversity:				 0.157
Error (vector) diversity:			 0.159
Behavioral diversity:				 0.159
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 12967304
--- Timings ---
Current time: 1529614872705 milliseconds
Total Time:          43.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.7 seconds, 44.9%
Fitness Testing:     19.4 seconds, 44.3%
Report:               4.6 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 47629.950699999994
Test mean error for best: 23.81498
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.0326533    
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.0326533    
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.0326533    
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.0326533    
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.0326533    
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.0326533    
Correct output: 113.0317347877 | Program output: 33.0326533    
Correct output: 63.3706224584  | Program output: 33.0326533    
Correct output: 43.2606324519  | Program output: 33.0326533    
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.0326533    
Correct output: 10.3014429958  | Program output: 33.0326533    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_shove integer_add integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1455 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0728 10 14.0 2 41.7336 10 26.0 2 0.0 0 6.0 1 107.8647 10 30.0 1 5.0 1 9.2026 10 33.0 2 54.0 2 7.5811 8 79.9991 10 30.338 8 10.228 7 14.0 2 86.0583 7 22.7312 10]
Total: 886.9549
Mean: 17.739098
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2258.464301200006
Median total errors in population: 1076.4933
Error averages by case: (66.21604199999979 11.066 80.35684790000023 7.365 70.8963957999997 6.043 70.61408659999987 5.381 66.89966659999975 10.63 91.77442610000031 12.09 92.84521409999935 9.599 71.1560091999998 6.956 87.71618319999989 10.963 80.39985079999987 5.44 65.54627939999966 5.071 73.17945399999978 5.781 149.54225299999976 11.821 83.10125039999964 5.071 65.88980499999973 4.531 59.083167100000644 10.468 86.0741532999999 5.915 103.71480830000026 7.202 56.774775800000846 10.516 123.45106130000121 10.077 76.99311290000082 9.281 59.61564450000067 8.768 70.68546159999968 5.602 129.9608482000007 9.848 70.03450410000082 10.458)
Error minima by case: (14.1129 9 6.8099 2 2.5669 2 0.2153 1 1.6963 2 10.3497 8 10.0 1 1.8396 2 8.7343 2 13.8266 2 0.0 0 6.0 1 18.865 2 8.391 1 5.0 1 6.2002 9 7.0 2 2.3348 2 4.5787 8 8.0317 2 2.6604 2 7.2256 7 1.5669 2 11.9937 2 8.2361 9)
Average genome size in population (length): 47.765
Average program size in population (points): 48.765
Average percent parens in population: 0.021
Minimum age in population: 15.91015625
Maximum age in population: 20.01220703125
Average age in population: 17.95477978515625
Median age in population: 18.02392578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 120
Genome diversity (% unique Plush genomes):	 0.582
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 120
Syntactic diversity (% unique Push programs):	 0.582
Total error diversity:				 0.146
Error (vector) diversity:			 0.149
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 14161979
--- Timings ---
Current time: 1529614876143 milliseconds
Total Time:          47.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.2 seconds, 44.8%
Fitness Testing:     20.9 seconds, 44.2%
Report:               5.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 47629.950699999994
Test mean error for best: 23.81498
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.0326533    
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.0326533    
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.0326533    
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.0326533    
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.0326533    
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.0326533    
Correct output: 113.0317347877 | Program output: 33.0326533    
Correct output: 63.3706224584  | Program output: 33.0326533    
Correct output: 43.2606324519  | Program output: 33.0326533    
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.0326533    
Correct output: 10.3014429958  | Program output: 33.0326533    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_shove integer_add integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1455 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0728 10 14.0 2 41.7336 10 26.0 2 0.0 0 6.0 1 107.8647 10 30.0 1 5.0 1 9.2026 10 33.0 2 54.0 2 7.5811 8 79.9991 10 30.338 8 10.228 7 14.0 2 86.0583 7 22.7312 10]
Total: 886.9549
Mean: 17.739098
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2151.4975854999975
Median total errors in population: 896.9580999999998
Error averages by case: (61.751141299999624 11.064 84.48813370000006 5.068 72.66413719999993 4.367 65.8576297000001 2.859 63.48756910000002 10.735 97.20034839999997 12.762 87.15194919999946 9.217 66.77948590000001 4.869 83.52793799999904 10.979 76.43517950000009 3.47 61.02523299999992 2.13 68.16760970000004 3.15 143.72760549999938 11.726 78.44226179999993 2.827 61.85800549999993 2.707 53.77163810000079 10.35 81.72242100000012 3.554 107.77107780000004 4.896 51.2319279000005 10.776 118.09101130000064 9.892 71.48772960000109 9.136 54.22549600000048 8.533 72.97983109999996 3.632 124.77521660000099 9.863 64.00700860000086 10.308)
Error minima by case: (15.1129 10 0.9256 2 2.5669 2 0.7847 1 2.6963 2 11.3497 10 9.0 1 1.8396 2 8.7343 2 12.3916 2 0.0 0 6.0 1 41.1026 2 9.0508 1 5.0 1 1.7988 9 7.0 2 7.3348 2 3.4203 8 8.0317 2 2.6294 2 0.7734 7 1.5669 2 11.9933 2 6.2674 9)
Average genome size in population (length): 48.691
Average program size in population (points): 49.691
Average percent parens in population: 0.020
Minimum age in population: 17.048828125
Maximum age in population: 21.12255859375
Average age in population: 19.25738134765625
Median age in population: 19.3133544921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 158
Genome diversity (% unique Plush genomes):	 0.611
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 158
Syntactic diversity (% unique Push programs):	 0.611
Total error diversity:				 0.143
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 15379954
--- Timings ---
Current time: 1529614879792 milliseconds
Total Time:          50.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.7 seconds, 44.6%
Fitness Testing:     22.5 seconds, 44.2%
Report:               5.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 47629.950699999994
Test mean error for best: 23.81498
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.0326533    
Correct output: -57.5621147442 | Program output: -28.5621147442
Correct output: -102.040355723 | Program output: -89.040355723 
Correct output: -61.2152889346 | Program output: -71.2152889346
Correct output: 5.6962652891   | Program output: -1.3037347109 
Correct output: -11.3496840774 | Program output: 30.6503159226 
Correct output: 80.1054352041  | Program output: 33.0326533    
Correct output: -14.8395504361 | Program output: -28.8395504361
Correct output: 74.7662558409  | Program output: 33.0326533    
Correct output: 56.391599915   | Program output: 30.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -136.6882893533
Correct output: 140.8973767135 | Program output: 33.0326533    
Correct output: -51.0508359853 | Program output: -81.0508359853
Correct output: 9.5418677285   | Program output: 4.5418677285  
Correct output: 42.2352107757  | Program output: 33.0326533    
Correct output: 76.2473078866  | Program output: 43.2473078866 
Correct output: -84.3348288125 | Program output: -30.3348288125
Correct output: 40.6137353953  | Program output: 33.0326533    
Correct output: 113.0317347877 | Program output: 33.0326533    
Correct output: 63.3706224584  | Program output: 33.0326533    
Correct output: 43.2606324519  | Program output: 33.0326533    
Correct output: -91.8895297288 | Program output: -77.8895297288
Correct output: -53.0256536635 | Program output: 33.0326533    
Correct output: 10.3014429958  | Program output: 33.0326533    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_add} {:instruction float_yank} {:instruction integer_dup} {:instruction float_yank} {:instruction float_dup} {:instruction in1} {:instruction tagged_380} {:instruction integer_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_div} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_add} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger integer_rot integer_add float_yank integer_dup float_yank float_dup in1 tagged_380 integer_min float_max integer_dup_times float_dec float_div 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_dup_times integer_shove integer_add integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1455 11 29.0 2 13.0 3 10.0 1 7.0 12 42.0 13 47.0728 10 14.0 2 41.7336 10 26.0 2 0.0 0 6.0 1 107.8647 10 30.0 1 5.0 1 9.2026 10 33.0 2 54.0 2 7.5811 8 79.9991 10 30.338 8 10.228 7 14.0 2 86.0583 7 22.7312 10]
Total: 886.9549
Mean: 17.739098
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2189.482429900008
Median total errors in population: 896.9580999999998
Error averages by case: (69.19261819999949 11.0 80.34769560000008 4.695 69.13512159999993 4.357 62.453869100000084 2.804 59.2326838 11.082 92.61049079999994 12.842 96.35100689999908 9.237 63.23178809999999 4.512 90.2491241000003 11.034 73.5252699000001 3.433 57.094447399999915 2.029 66.76056830000007 3.046 152.3003366000003 11.396 75.87637399999991 2.755 57.64211469999997 2.663 62.06175089999987 10.274 79.42603510000014 3.534 103.58697350000003 4.56 59.29258720000072 9.961 126.55790570000067 9.61 80.66313670000117 9.147 62.55470290000071 8.345 69.02007009999996 3.601 132.48343110000116 9.447 72.2643276000004 10.204)
Error minima by case: (15.1129 9 11.5123 2 4.4877 2 0.2153 1 3.6963 2 10.5218 9 10.0 1 1.8396 2 8.7663 2 13.4033 2 0.0 0 6.0 1 41.1026 2 9.0508 1 5.0 1 8.2019 9 6.4459 2 6.3348 2 6.5804 8 8.0317 2 1.6294 2 9.2273 7 3.4877 2 11.9917 2 5.6956 9)
Average genome size in population (length): 47.714
Average program size in population (points): 48.714
Average percent parens in population: 0.021
Minimum age in population: 18.255859375
Maximum age in population: 22.68408203125
Average age in population: 20.64687158203125
Median age in population: 20.6630859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 61
Genome diversity (% unique Plush genomes):	 0.611
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 61
Syntactic diversity (% unique Push programs):	 0.611
Total error diversity:				 0.137
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.142
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 16573729
--- Timings ---
Current time: 1529614883323 milliseconds
Total Time:          54.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.2 seconds, 44.3%
Fitness Testing:     24.1 seconds, 44.1%
Report:               6.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 32179.986400000013
Test mean error for best: 16.08999
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.03233      
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 33.03233      
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 33.03233      
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 33.03233      
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 33.03233      
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 33.03233      
Correct output: 113.0317347877 | Program output: 33.03233      
Correct output: 63.3706224584  | Program output: 33.03233      
Correct output: 43.2606324519  | Program output: 33.03233      
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: 33.03233      
Correct output: 10.3014429958  | Program output: 33.03233      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_flush} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1452 11 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 47.0731 9 0.0 0 41.7339 11 0.0 0 0.0 0 0.0 0 107.865 11 0.0 0 0.0 0 9.2029 10 0.0 0 0.0 0 7.5814 9 79.9994 9 30.3383 9 10.2283 8 0.0 0 86.058 9 22.7309 10]
Total: 564.9564
Mean: 11.299128
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2347.9582143000102
Median total errors in population: 891.9564
Error averages by case: (75.74958189999948 11.091 86.4346293 4.671 75.27334669999995 4.238 68.98287140000005 2.682 66.0253028 10.947 99.1985157 12.809 102.75880629999905 9.367 69.50265379999999 4.472 97.75180240000125 10.921 80.09100530000008 3.291 63.46002989999993 1.91 70.82171849999999 2.911 158.97910730000072 10.93 82.11206899999989 2.62 64.88236859999996 2.53 69.01016909999896 10.285 85.7625701000001 3.384 109.41712450000004 4.526 66.66630660000095 9.187 133.1951776000006 9.413 86.8331293000015 9.03 69.53783780000099 8.273 75.51666739999999 3.468 138.45001740000086 8.854 79.47140560000001 10.264)
Error minima by case: (14.8548 10 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 10.0 1 0.0 0 2.2998 2 0.0 0 0.0 0 0.0 0 30.2998 2 0.0 0 0.0 0 8.2019 9 0.0 0 0.0 0 3.7002 8 8.0317 2 2.6294 2 9.2273 7 0.0 0 5.4621 2 8.2691 9)
Average genome size in population (length): 48.649
Average program size in population (points): 49.649
Average percent parens in population: 0.020
Minimum age in population: 19.48486328125
Maximum age in population: 24.03070068359375
Average age in population: 22.13402545166016
Median age in population: 22.17047119140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 59
Genome diversity (% unique Plush genomes):	 0.613
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.613
Total error diversity:				 0.137
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 17790654
--- Timings ---
Current time: 1529614886749 milliseconds
Total Time:          58.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.6 seconds, 44.2%
Fitness Testing:     25.6 seconds, 44.2%
Report:               6.6 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 32179.986400000013
Test mean error for best: 16.08999
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.03233      
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 33.03233      
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 33.03233      
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 33.03233      
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 33.03233      
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 33.03233      
Correct output: 113.0317347877 | Program output: 33.03233      
Correct output: 63.3706224584  | Program output: 33.03233      
Correct output: 43.2606324519  | Program output: 33.03233      
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: 33.03233      
Correct output: 10.3014429958  | Program output: 33.03233      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_flush} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1452 11 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 47.0731 9 0.0 0 41.7339 11 0.0 0 0.0 0 0.0 0 107.865 11 0.0 0 0.0 0 9.2029 10 0.0 0 0.0 0 7.5814 9 79.9994 9 30.3383 9 10.2283 8 0.0 0 86.058 9 22.7309 10]
Total: 564.9564
Mean: 11.299128
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2298.000352300006
Median total errors in population: 891.9564
Error averages by case: (74.71890939999935 11.071 85.0038523 4.693 73.93370979999992 4.257 67.1084551000001 2.64 63.3282926 10.912 97.64981940000004 12.789 100.93971039999869 9.659 66.96758720000001 4.525 95.87799400000164 10.576 76.67577990000002 3.298 61.86262379999994 1.886 68.76703610000001 2.921 156.8663170000008 10.632 79.44706479999994 2.621 62.36909009999997 2.547 67.64607589999896 10.299 82.05041350000012 3.386 108.10617710000002 4.544 65.04101360000108 8.903 131.01817530000076 9.761 85.20420900000171 8.656 68.04654030000088 7.937 74.34273739999999 3.461 136.9813163000012 8.142 77.67645199999997 10.255)
Error minima by case: (14.8548 10 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 10.0 1 0.0 0 8.7339 2 0.0 0 0.0 0 0.0 0 41.1026 2 0.0 0 0.0 0 8.2019 9 0.0 0 0.0 0 6.5804 7 8.0317 2 1.6294 2 9.2273 7 0.0 0 11.9803 2 8.2691 8)
Average genome size in population (length): 53.85
Average program size in population (points): 54.85
Average percent parens in population: 0.019
Minimum age in population: 21.4765625
Maximum age in population: 25.6693115234375
Average age in population: 23.71207070922852
Median age in population: 23.73574829101562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 113
Genome diversity (% unique Plush genomes):	 0.662
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 113
Syntactic diversity (% unique Push programs):	 0.662
Total error diversity:				 0.164
Error (vector) diversity:			 0.171
Behavioral diversity:				 0.171
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 19137579
--- Timings ---
Current time: 1529614890420 milliseconds
Total Time:          61.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.1 seconds, 44.0%
Fitness Testing:     27.3 seconds, 44.4%
Report:               7.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 32179.986400000013
Test mean error for best: 16.08999
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 33.03233      
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 33.03233      
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 33.03233      
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 33.03233      
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 33.03233      
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 33.03233      
Correct output: 113.0317347877 | Program output: 33.03233      
Correct output: 63.3706224584  | Program output: 33.03233      
Correct output: 43.2606324519  | Program output: 33.03233      
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: 33.03233      
Correct output: 10.3014429958  | Program output: 33.03233      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop integer_dec integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_frominteger print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [16.1452 11 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 47.0731 9 0.0 0 41.7339 11 0.0 0 0.0 0 0.0 0 107.865 11 0.0 0 0.0 0 9.2029 10 0.0 0 0.0 0 7.5814 9 79.9994 9 30.3383 9 10.2283 8 0.0 0 86.058 9 22.7309 10]
Total: 564.9564
Mean: 11.299128
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2284.8672935000054
Median total errors in population: 886.9549
Error averages by case: (77.50574889999929 11.12 82.36565550000003 4.56 70.77205669999998 3.982 64.30326880000004 2.367 60.744483599999995 10.658 94.5178122 12.686 102.91500789999895 9.904 64.7057178 4.373 99.63167440000174 10.387 73.75658600000004 3.034 58.82901609999995 1.612 65.08183490000002 2.609 159.0707282000016 10.322 76.81449729999994 2.336 59.60326749999997 2.277 70.65678929999925 10.198 78.96999650000006 3.11 105.34027510000001 4.415 68.41355050000074 8.715 133.21548340000064 10.013 87.32173490000149 8.399 71.24207680000097 7.607 71.23807449999998 3.161 140.6635500000012 7.649 81.51240669999945 10.182)
Error minima by case: (15.1129 10 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 10.0 2 0.0 0 11.7041 8 0.0 0 0.0 0 0.0 0 41.1026 3 0.0 0 0.0 0 8.2015 9 0.0 0 0.0 0 6.5801 7 9.0317 3 8.0 2 9.227 6 0.0 0 12.0257 2 5.3019 8)
Average genome size in population (length): 58.615
Average program size in population (points): 59.615
Average percent parens in population: 0.017
Minimum age in population: 23.0980224609375
Maximum age in population: 27.29580688476562
Average age in population: 25.26395527648926
Median age in population: 25.28013610839844
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 133
Genome diversity (% unique Plush genomes):	 0.653
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 133
Syntactic diversity (% unique Push programs):	 0.653
Total error diversity:				 0.135
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 20603904
--- Timings ---
Current time: 1529614894391 milliseconds
Total Time:          65.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.6 seconds, 43.7%
Fitness Testing:     29.2 seconds, 44.6%
Report:               7.5 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 1902.0
Test mean error for best: 0.95100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 16.88711345073233
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 80.10543520413233
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 74.76625584093233
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 140.89737671353233
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 42.23521077573233
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 40.61373539533233
Correct output: 113.0317347877 | Program output: 113.03173478773233
Correct output: 63.3706224584  | Program output: 63.37062245843233
Correct output: 43.2606324519  | Program output: 43.26063245193233
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: -53.02565366353233
Correct output: 10.3014429958  | Program output: 10.30144299583233
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_flush} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_dup} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction float_mult} {:instruction print_integer})
Best program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_dup print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer float_mult print_integer)
Errors: [0.0 4 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 4 0.0 0 0.0 4 0.0 0 0.0 0 0.0 0 0.0 4 0.0 0 0.0 0 0.0 4 0.0 0 0.0 0 0.0 4 0.0 4 0.0 4 0.0 4 0.0 0 0.0 4 0.0 4]
Total: 44.0
Mean: 0.88
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2070.062670000006
Median total errors in population: 886.9549
Error averages by case: (65.90325429999919 11.06 75.76899830000005 4.601 65.66663249999995 3.944 58.4889233000001 2.509 55.249271400000005 9.879 87.27580509999997 11.782 92.0309645999993 9.814 58.371461199999985 4.401 86.40048780000123 10.265 66.89024370000007 3.079 54.44290279999992 1.814 61.680886600000086 2.773 148.17165080000188 10.255 69.15232699999989 2.45 54.37987939999997 2.424 58.61452919999896 10.106 71.74563070000009 3.15 97.08276560000004 4.435 56.14801970000094 8.658 122.3667139000008 9.941 76.13320460000153 8.33 59.08716320000079 7.533 65.7591621999999 3.234 129.69231820000118 7.63 69.39047390000027 10.102)
Error minima by case: (0.0 4 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 1 0.0 0 0.0 0 0.0 0 0.0 2 0.0 0 0.0 0 0.0 4 0.0 0 0.0 0 0.0 2 0.0 2 0.0 2 0.0 2 0.0 0 0.0 2 0.0 2)
Average genome size in population (length): 58.554
Average program size in population (points): 59.554
Average percent parens in population: 0.017
Minimum age in population: 24.11306762695312
Maximum age in population: 28.67967987060547
Average age in population: 26.59084677124023
Median age in population: 26.63490676879883
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 86
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 86
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.152
Error (vector) diversity:			 0.163
Behavioral diversity:				 0.164
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 22070579
--- Timings ---
Current time: 1529614898162 milliseconds
Total Time:          69.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.1 seconds, 43.4%
Fitness Testing:     31.0 seconds, 44.8%
Report:               8.1 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 950.0
Test mean error for best: 0.47500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 16.887113450732
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 80.105435204132
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 74.766255840932
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 140.897376713532
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 42.235210775732
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 40.613735395332
Correct output: 113.0317347877 | Program output: 113.031734787732
Correct output: 63.3706224584  | Program output: 63.370622458432
Correct output: 43.2606324519  | Program output: 43.260632451932
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: -53.025653663532
Correct output: 10.3014429958  | Program output: 10.301442995832
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_flush} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_dup} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_inc} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_stackdepth})
Best program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_dup print_float integer_yankdup float_div integer_dup integer_dup_items float_sin float_inc integer_dec print_integer integer_stackdepth)
Errors: [0.0 2 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 2 0.0 0 0.0 2 0.0 0 0.0 0 0.0 0 0.0 2 0.0 0 0.0 0 0.0 2 0.0 0 0.0 0 0.0 2 0.0 2 0.0 2 0.0 2 0.0 0 0.0 2 0.0 2]
Total: 22.0
Mean: 0.44
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2289.3386015000046
Median total errors in population: 886.9549
Error averages by case: (69.71337079999928 10.964 86.57425440000002 3.82 80.73771629999997 3.34 74.02870850000008 2.401 71.98144709999995 7.249 93.7553298 8.56 96.42633309999945 9.504 72.9427326 3.68 90.87448490000088 10.51 78.53885780000003 2.713 72.84040709999991 1.906 78.93529940000002 2.599 151.00445900000153 10.476 80.25902059999993 2.358 71.4268391 2.332 62.41982509999921 10.035 81.92115560000009 2.799 101.21140479999998 3.706 61.10937300000065 8.96 125.55345680000053 9.654 79.02961750000155 8.637 63.92965680000065 7.843 80.57221689999999 2.935 133.83949830000108 8.244 74.41613620000038 10.072)
Error minima by case: (0.0 2 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 1 0.0 0 0.0 2 0.0 0 0.0 0 0.0 0 0.0 2 0.0 0 0.0 0 0.0 2 0.0 0 0.0 0 0.0 2 0.0 2 0.0 2 0.0 2 0.0 0 0.0 2 0.0 2)
Average genome size in population (length): 55.85
Average program size in population (points): 56.85
Average percent parens in population: 0.018
Minimum age in population: 25.11306762695312
Maximum age in population: 30.03666687011719
Average age in population: 27.79269130325317
Median age in population: 27.84479141235352
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 98
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 98
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.173
Error (vector) diversity:			 0.186
Behavioral diversity:				 0.186
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 23477054
--- Timings ---
Current time: 1529614901900 milliseconds
Total Time:          73.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.5 seconds, 43.1%
Fitness Testing:     32.9 seconds, 45.0%
Report:               8.6 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 16.8871134507 
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 80.1054352041 
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 74.7662558409 
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 140.8973767135
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 42.2352107757 
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 40.6137353953 
Correct output: 113.0317347877 | Program output: 113.0317347877
Correct output: 63.3706224584  | Program output: 63.3706224584 
Correct output: 43.2606324519  | Program output: 43.2606324519 
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: -53.0256536635
Correct output: 10.3014429958  | Program output: 10.3014429958 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction float_flush} {:instruction integer_div} {:instruction float_pop} {:instruction integer_dec} {:instruction integer_div} {:instruction integer_sub} {:instruction -41} {:instruction float_frominteger} {:instruction -58.4877354954972} {:instruction in1} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_dup} {:instruction integer_dup_items} {:instruction float_sub} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup} {:instruction float_frominteger} {:instruction integer_rot} {:instruction 33} {:instruction tagged_561} {:instruction tag_float_184} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction in1} {:instruction float_add} {:instruction float_dup} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup})
Best program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_dup print_float integer_yankdup float_div integer_dup)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2433.9040147000014
Median total errors in population: 564.9564
Error averages by case: (69.83078309999945 10.676 93.22826060000001 2.6 96.24630819999994 2.223 92.44668090000006 2.142 88.91778380000004 2.821 95.08319520000002 3.209 94.28677559999944 9.051 88.74597419999998 2.514 89.21338230000076 10.539 90.46234250000009 2.046 93.76378659999993 1.967 98.65853229999998 2.241 147.88646310000073 10.56 92.3713726999999 2.066 88.97112810000003 2.097 62.85741509999902 9.851 91.93236650000009 2.149 96.95971209999998 2.539 60.645295700000666 8.895 123.60354310000048 9.122 78.52686910000133 8.767 63.36114310000062 7.962 95.40322799999998 2.335 130.37045280000115 8.585 73.30122000000009 9.873)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 52.244
Average program size in population (points): 53.244
Average percent parens in population: 0.019
Minimum age in population: 26.1767578125
Maximum age in population: 31.1150074005127
Average age in population: 28.98325896644592
Median age in population: 29.03211116790771
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 153
Genome diversity (% unique Plush genomes):	 0.63
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 153
Syntactic diversity (% unique Push programs):	 0.63
Total error diversity:				 0.154
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.165
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 24806279
--- Timings ---
Current time: 1529614905504 milliseconds
Total Time:          76.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.0 seconds, 43.0%
Fitness Testing:     34.6 seconds, 45.0%
Report:               9.0 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 20
Successful program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_dup print_float integer_yankdup float_div integer_dup)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 44


Auto-simplifying with starting size: 44
step: 0
program: (float_pop float_flush integer_div float_pop integer_dec integer_div integer_sub -41 float_frominteger -58.4877354954972 in1 float_div integer_dup_items float_dup integer_dup_items float_sub integer_max integer_rot integer_stackdepth float_yank integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup float_frominteger integer_rot 33 tagged_561 tag_float_184 in2 integer_dup_times integer_dup_times in1 float_add float_dup print_float integer_yankdup float_div integer_dup)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 44

step: 500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 16.8871134507  | Program output: 16.8871134507 
Correct output: -57.5621147442 | Program output: -57.5621147442
Correct output: -102.040355723 | Program output: -102.040355723
Correct output: -61.2152889346 | Program output: -61.2152889346
Correct output: 5.6962652891   | Program output: 5.6962652891  
Correct output: -11.3496840774 | Program output: -11.3496840774
Correct output: 80.1054352041  | Program output: 80.1054352041 
Correct output: -14.8395504361 | Program output: -14.8395504361
Correct output: 74.7662558409  | Program output: 74.7662558409 
Correct output: 56.391599915   | Program output: 56.391599915  
Correct output: -82.5640342349 | Program output: -82.5640342349
Correct output: -130.6882893533 | Program output: -130.6882893533
Correct output: 140.8973767135 | Program output: 140.8973767135
Correct output: -51.0508359853 | Program output: -51.0508359853
Correct output: 9.5418677285   | Program output: 9.5418677285  
Correct output: 42.2352107757  | Program output: 42.2352107757 
Correct output: 76.2473078866  | Program output: 76.2473078866 
Correct output: -84.3348288125 | Program output: -84.3348288125
Correct output: 40.6137353953  | Program output: 40.6137353953 
Correct output: 113.0317347877 | Program output: 113.0317347877
Correct output: 63.3706224584  | Program output: 63.3706224584 
Correct output: 43.2606324519  | Program output: 43.2606324519 
Correct output: -91.8895297288 | Program output: -91.8895297288
Correct output: -53.0256536635 | Program output: -53.0256536635
Correct output: 10.3014429958  | Program output: 10.3014429958 
;;******************************
