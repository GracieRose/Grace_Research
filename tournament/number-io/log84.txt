Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-60.271684082435996 -85] -145.271684082436]
Train Case:   1 | Input/Output: [[31.330999334277323 -37] -5.6690006657226775]
Train Case:   2 | Input/Output: [[-25.215150867368123 -78] -103.21515086736812]
Train Case:   3 | Input/Output: [[0.33442812159123037 -83] -82.66557187840877]
Train Case:   4 | Input/Output: [[-4.258753929228746 -8] -12.258753929228746]
Train Case:   5 | Input/Output: [[2.0121956630015063 -14] -11.987804336998494]
Train Case:   6 | Input/Output: [[-32.10146315658133 -60] -92.10146315658133]
Train Case:   7 | Input/Output: [[72.89936500157023 81] 153.89936500157023]
Train Case:   8 | Input/Output: [[-15.294597475782396 57] 41.705402524217604]
Train Case:   9 | Input/Output: [[98.7793110649217 63] 161.7793110649217]
Train Case:  10 | Input/Output: [[65.82458273009561 5] 70.82458273009561]
Train Case:  11 | Input/Output: [[-70.22893400455001 10] -60.22893400455001]
Train Case:  12 | Input/Output: [[65.68009906556401 -35] 30.680099065564008]
Train Case:  13 | Input/Output: [[88.2517768137651 -94] -5.748223186234895]
Train Case:  14 | Input/Output: [[-42.84482411456272 72] 29.15517588543728]
Train Case:  15 | Input/Output: [[22.457820781991018 -56] -33.54217921800898]
Train Case:  16 | Input/Output: [[49.39630745552182 33] 82.39630745552182]
Train Case:  17 | Input/Output: [[30.078646730473054 26] 56.078646730473054]
Train Case:  18 | Input/Output: [[29.36867753267478 -57] -27.63132246732522]
Train Case:  19 | Input/Output: [[21.30021235803183 12] 33.30021235803183]
Train Case:  20 | Input/Output: [[-49.87162829109815 54] 4.128371708901852]
Train Case:  21 | Input/Output: [[-93.0000938254997 79] -14.000093825499704]
Train Case:  22 | Input/Output: [[15.851431742208106 -2] 13.851431742208106]
Train Case:  23 | Input/Output: [[73.99617932087946 99] 172.99617932087946]
Train Case:  24 | Input/Output: [[-27.59736796134385 13] -14.59736796134385]
Test Case:   0 | Input/Output: [[34.58281090802038 -72] -37.41718909197962]
Test Case:   1 | Input/Output: [[-70.97548401580781 -56] -126.97548401580781]
Test Case:   2 | Input/Output: [[17.804496567043017 -58] -40.19550343295698]
Test Case:   3 | Input/Output: [[-68.67963421512084 95] 26.320365784879158]
Test Case:   4 | Input/Output: [[17.39503171438419 -65] -47.60496828561581]
Test Case:   5 | Input/Output: [[70.2589312948613 85] 155.2589312948613]
Test Case:   6 | Input/Output: [[85.8133236228447 29] 114.8133236228447]
Test Case:   7 | Input/Output: [[24.84468279842298 -61] -36.15531720157702]
Test Case:   8 | Input/Output: [[18.89452160709581 -43] -24.10547839290419]
Test Case:   9 | Input/Output: [[85.00186942840838 -68] 17.001869428408384]
Test Case:  10 | Input/Output: [[93.69081532903971 50] 143.6908153290397]
Test Case:  11 | Input/Output: [[-50.13286673167359 7] -43.13286673167359]
Test Case:  12 | Input/Output: [[-42.14837673319698 42] -0.14837673319698297]
Test Case:  13 | Input/Output: [[-21.289905294224425 -12] -33.289905294224425]
Test Case:  14 | Input/Output: [[40.15894682511498 94] 134.15894682511498]
Test Case:  15 | Input/Output: [[87.43335875967983 26] 113.43335875967983]
Test Case:  16 | Input/Output: [[-16.233525714484102 -57] -73.2335257144841]
Test Case:  17 | Input/Output: [[-78.1204091317428 -34] -112.1204091317428]
Test Case:  18 | Input/Output: [[32.78309328780804 56] 88.78309328780804]
Test Case:  19 | Input/Output: [[98.03896648062124 76] 174.03896648062124]
Test Case:  20 | Input/Output: [[-38.54431128977003 40] 1.4556887102299712]
Test Case:  21 | Input/Output: [[44.730678432836385 3] 47.730678432836385]
Test Case:  22 | Input/Output: [[31.900231003064846 -5] 26.900231003064846]
Test Case:  23 | Input/Output: [[68.21666387344433 -41] 27.216663873444332]
Test Case:  24 | Input/Output: [[-8.998618076512031 62] 53.00138192348797]
Test Case:  25 | Input/Output: [[-36.162570066643255 94] 57.837429933356745]
Test Case:  26 | Input/Output: [[90.92647430496535 99] 189.92647430496535]
Test Case:  27 | Input/Output: [[-75.0097541809935 -58] -133.0097541809935]
Test Case:  28 | Input/Output: [[97.76956180891594 -88] 9.769561808915938]
Test Case:  29 | Input/Output: [[16.220547937531407 -76] -59.77945206246859]
Test Case:  30 | Input/Output: [[-40.82634540234753 74] 33.17365459765247]
Test Case:  31 | Input/Output: [[49.98641126678399 -40] 9.986411266783989]
Test Case:  32 | Input/Output: [[-25.354533646551076 98] 72.64546635344892]
Test Case:  33 | Input/Output: [[86.01696588253787 -10] 76.01696588253787]
Test Case:  34 | Input/Output: [[-25.80206025932827 -35] -60.80206025932827]
Test Case:  35 | Input/Output: [[-10.196099253953065 23] 12.803900746046935]
Test Case:  36 | Input/Output: [[-26.049212889576594 -91] -117.0492128895766]
Test Case:  37 | Input/Output: [[-52.68295083066612 -85] -137.68295083066613]
Test Case:  38 | Input/Output: [[18.144200433191827 -94] -75.85579956680817]
Test Case:  39 | Input/Output: [[-11.450261068163599 56] 44.5497389318364]
Test Case:  40 | Input/Output: [[-69.3999566163662 4] -65.3999566163662]
Test Case:  41 | Input/Output: [[55.997666153329334 -86] -30.002333846670666]
Test Case:  42 | Input/Output: [[-90.12605219754315 88] -2.126052197543146]
Test Case:  43 | Input/Output: [[-55.67530249336423 -4] -59.67530249336423]
Test Case:  44 | Input/Output: [[19.27758382045532 -70] -50.72241617954468]
Test Case:  45 | Input/Output: [[35.782272253970945 74] 109.78227225397094]
Test Case:  46 | Input/Output: [[93.39999436458697 -94] -0.6000056354130265]
Test Case:  47 | Input/Output: [[59.113550724172796 -30] 29.113550724172796]
Test Case:  48 | Input/Output: [[-3.9993701594111144 -84] -87.99937015941111]
Test Case:  49 | Input/Output: [[41.00942583993532 97] 138.00942583993532]
Test Case:  50 | Input/Output: [[93.56343102241675 51] 144.56343102241675]
Test Case:  51 | Input/Output: [[-96.31580177174537 -82] -178.31580177174538]
Test Case:  52 | Input/Output: [[-22.96632714790718 34] 11.03367285209282]
Test Case:  53 | Input/Output: [[-17.93551407391527 12] -5.935514073915272]
Test Case:  54 | Input/Output: [[-49.432785057090214 -57] -106.43278505709021]
Test Case:  55 | Input/Output: [[7.252442596717401 82] 89.2524425967174]
Test Case:  56 | Input/Output: [[-10.354457248732956 -4] -14.354457248732956]
Test Case:  57 | Input/Output: [[83.96370708834345 54] 137.96370708834345]
Test Case:  58 | Input/Output: [[58.82638631781242 -62] -3.173613682187579]
Test Case:  59 | Input/Output: [[52.83849443658005 -35] 17.83849443658005]
Test Case:  60 | Input/Output: [[3.0658327442338162 55] 58.065832744233816]
Test Case:  61 | Input/Output: [[24.47810725332002 -64] -39.52189274667998]
Test Case:  62 | Input/Output: [[-23.85438405611535 -48] -71.85438405611535]
Test Case:  63 | Input/Output: [[90.33299003573555 -42] 48.33299003573555]
Test Case:  64 | Input/Output: [[57.70467881933516 -93] -35.29532118066484]
Test Case:  65 | Input/Output: [[91.3218116237289 8] 99.3218116237289]
Test Case:  66 | Input/Output: [[23.817939308686718 61] 84.81793930868672]
Test Case:  67 | Input/Output: [[11.161568277552547 -78] -66.83843172244745]
Test Case:  68 | Input/Output: [[-7.97692898627372 -59] -66.97692898627372]
Test Case:  69 | Input/Output: [[-45.586826224247964 -84] -129.58682622424797]
Test Case:  70 | Input/Output: [[-9.361444861214352 -15] -24.361444861214352]
Test Case:  71 | Input/Output: [[-18.544682661228478 -33] -51.54468266122848]
Test Case:  72 | Input/Output: [[-97.37070913251493 -30] -127.37070913251493]
Test Case:  73 | Input/Output: [[-3.747834833448934 -54] -57.747834833448934]
Test Case:  74 | Input/Output: [[15.162167559440135 45] 60.162167559440135]
Test Case:  75 | Input/Output: [[-99.65286348585758 12] -87.65286348585758]
Test Case:  76 | Input/Output: [[-25.705059660221536 2] -23.705059660221536]
Test Case:  77 | Input/Output: [[-57.26950654124872 -99] -156.26950654124872]
Test Case:  78 | Input/Output: [[40.560089424727266 6] 46.560089424727266]
Test Case:  79 | Input/Output: [[-8.981524540903024 -4] -12.981524540903024]
Test Case:  80 | Input/Output: [[-31.924951237292333 -77] -108.92495123729233]
Test Case:  81 | Input/Output: [[-83.29380226211913 47] -36.29380226211913]
Test Case:  82 | Input/Output: [[-79.56718632923815 -16] -95.56718632923815]
Test Case:  83 | Input/Output: [[74.96385841798266 94] 168.96385841798266]
Test Case:  84 | Input/Output: [[32.147226701587385 -39] -6.852773298412615]
Test Case:  85 | Input/Output: [[38.20847284070078 3] 41.20847284070078]
Test Case:  86 | Input/Output: [[-55.34624567780884 -9] -64.34624567780884]
Test Case:  87 | Input/Output: [[72.76107311291025 73] 145.76107311291025]
Test Case:  88 | Input/Output: [[-34.36428469624528 -9] -43.36428469624528]
Test Case:  89 | Input/Output: [[-10.56897629679186 90] 79.43102370320814]
Test Case:  90 | Input/Output: [[-39.98421382677999 -97] -136.98421382677998]
Test Case:  91 | Input/Output: [[51.91751818803317 48] 99.91751818803317]
Test Case:  92 | Input/Output: [[31.096006425753643 47] 78.09600642575364]
Test Case:  93 | Input/Output: [[58.47248693878578 -81] -22.527513061214222]
Test Case:  94 | Input/Output: [[-90.27714501830337 -57] -147.27714501830337]
Test Case:  95 | Input/Output: [[-69.72882845665447 -61] -130.72882845665447]
Test Case:  96 | Input/Output: [[-81.78176025662533 13] -68.78176025662533]
Test Case:  97 | Input/Output: [[-77.03983637995341 -57] -134.0398363799534]
Test Case:  98 | Input/Output: [[-72.51773100436529 -94] -166.5177310043653]
Test Case:  99 | Input/Output: [[76.37466061744126 -16] 60.374660617441265]
Test Case: 100 | Input/Output: [[46.54443352711243 60] 106.54443352711243]
Test Case: 101 | Input/Output: [[-49.558169567814204 -66] -115.5581695678142]
Test Case: 102 | Input/Output: [[-33.83132965058884 33] -0.8313296505888417]
Test Case: 103 | Input/Output: [[35.11557025964069 67] 102.11557025964069]
Test Case: 104 | Input/Output: [[-81.17755182007231 -21] -102.17755182007231]
Test Case: 105 | Input/Output: [[51.05141971278019 -19] 32.05141971278019]
Test Case: 106 | Input/Output: [[-87.88303095311534 78] -9.883030953115338]
Test Case: 107 | Input/Output: [[62.89005142060299 50] 112.89005142060299]
Test Case: 108 | Input/Output: [[-64.71093414457229 -33] -97.71093414457229]
Test Case: 109 | Input/Output: [[-79.12767138517111 1] -78.12767138517111]
Test Case: 110 | Input/Output: [[95.53273645321804 76] 171.53273645321804]
Test Case: 111 | Input/Output: [[-40.69659149289635 -10] -50.69659149289635]
Test Case: 112 | Input/Output: [[-81.64292371445447 45] -36.64292371445447]
Test Case: 113 | Input/Output: [[-25.35837125825809 70] 44.64162874174191]
Test Case: 114 | Input/Output: [[-48.96500498566419 66] 17.034995014335813]
Test Case: 115 | Input/Output: [[80.70473181861962 -60] 20.70473181861962]
Test Case: 116 | Input/Output: [[-44.75068992681565 -91] -135.75068992681565]
Test Case: 117 | Input/Output: [[-97.67726440130771 38] -59.67726440130771]
Test Case: 118 | Input/Output: [[-28.334249252853837 -16] -44.33424925285384]
Test Case: 119 | Input/Output: [[9.233663325932824 -80] -70.76633667406718]
Test Case: 120 | Input/Output: [[-1.63656934943657 76] 74.36343065056343]
Test Case: 121 | Input/Output: [[15.881288291544678 -90] -74.11871170845532]
Test Case: 122 | Input/Output: [[40.41905105766838 25] 65.41905105766838]
Test Case: 123 | Input/Output: [[21.931924725681085 9] 30.931924725681085]
Test Case: 124 | Input/Output: [[27.684855130195814 88] 115.68485513019581]
Test Case: 125 | Input/Output: [[-22.009684337357015 27] 4.990315662642985]
Test Case: 126 | Input/Output: [[36.23854483298888 -88] -51.76145516701112]
Test Case: 127 | Input/Output: [[-0.28258559785021475 2] 1.7174144021497852]
Test Case: 128 | Input/Output: [[85.82238017145443 0] 85.82238017145443]
Test Case: 129 | Input/Output: [[-29.627454400556346 -20] -49.627454400556346]
Test Case: 130 | Input/Output: [[-12.453335468399843 91] 78.54666453160016]
Test Case: 131 | Input/Output: [[40.771674417668066 -60] -19.228325582331934]
Test Case: 132 | Input/Output: [[37.11139227958333 -50] -12.888607720416672]
Test Case: 133 | Input/Output: [[53.74924181263606 -70] -16.250758187363942]
Test Case: 134 | Input/Output: [[-78.79547063736148 13] -65.79547063736148]
Test Case: 135 | Input/Output: [[-30.696741617369 2] -28.696741617369]
Test Case: 136 | Input/Output: [[-21.323537983009302 -81] -102.3235379830093]
Test Case: 137 | Input/Output: [[26.3879335760475 60] 86.3879335760475]
Test Case: 138 | Input/Output: [[-80.20860977233745 -62] -142.20860977233747]
Test Case: 139 | Input/Output: [[82.47294294274116 -4] 78.47294294274116]
Test Case: 140 | Input/Output: [[68.74113757453554 35] 103.74113757453554]
Test Case: 141 | Input/Output: [[29.13130092160233 -91] -61.86869907839767]
Test Case: 142 | Input/Output: [[-54.895879488374646 71] 16.104120511625354]
Test Case: 143 | Input/Output: [[44.474209799418844 71] 115.47420979941884]
Test Case: 144 | Input/Output: [[-49.0211602757155 11] -38.0211602757155]
Test Case: 145 | Input/Output: [[-68.50458138290523 24] -44.50458138290523]
Test Case: 146 | Input/Output: [[96.18349893895854 -43] 53.183498938958536]
Test Case: 147 | Input/Output: [[24.357399726446033 -2] 22.357399726446033]
Test Case: 148 | Input/Output: [[-84.87522249920139 -20] -104.87522249920139]
Test Case: 149 | Input/Output: [[-36.71817537514455 -24] -60.71817537514455]
Test Case: 150 | Input/Output: [[-11.973656590791265 58] 46.026343409208735]
Test Case: 151 | Input/Output: [[-11.03199353543205 19] 7.968006464567949]
Test Case: 152 | Input/Output: [[-29.27612026765405 -86] -115.27612026765405]
Test Case: 153 | Input/Output: [[88.02295223281706 -99] -10.977047767182938]
Test Case: 154 | Input/Output: [[30.41147473696489 -18] 12.411474736964891]
Test Case: 155 | Input/Output: [[-63.74289800825341 -21] -84.7428980082534]
Test Case: 156 | Input/Output: [[29.91573348429563 -98] -68.08426651570437]
Test Case: 157 | Input/Output: [[-5.355058627067891 -15] -20.35505862706789]
Test Case: 158 | Input/Output: [[75.23173333813892 -24] 51.23173333813892]
Test Case: 159 | Input/Output: [[-32.24022306856152 10] -22.24022306856152]
Test Case: 160 | Input/Output: [[-38.93703272531652 -30] -68.93703272531653]
Test Case: 161 | Input/Output: [[-22.293053523166478 54] 31.706946476833522]
Test Case: 162 | Input/Output: [[-77.06561589792895 -33] -110.06561589792895]
Test Case: 163 | Input/Output: [[-53.65395278425395 19] -34.65395278425395]
Test Case: 164 | Input/Output: [[92.083191764016 27] 119.083191764016]
Test Case: 165 | Input/Output: [[-43.984012188872846 18] -25.984012188872846]
Test Case: 166 | Input/Output: [[-84.43879960621372 2] -82.43879960621372]
Test Case: 167 | Input/Output: [[53.21075901741867 100] 153.21075901741867]
Test Case: 168 | Input/Output: [[-71.56588284723034 31] -40.56588284723034]
Test Case: 169 | Input/Output: [[-89.22813645613365 -61] -150.22813645613365]
Test Case: 170 | Input/Output: [[-19.14146610495746 -68] -87.14146610495746]
Test Case: 171 | Input/Output: [[-55.30051709070123 69] 13.699482909298773]
Test Case: 172 | Input/Output: [[-62.41396381144817 -2] -64.41396381144817]
Test Case: 173 | Input/Output: [[62.95324491958513 19] 81.95324491958513]
Test Case: 174 | Input/Output: [[-75.05019174881069 37] -38.05019174881069]
Test Case: 175 | Input/Output: [[-99.78276099731363 -4] -103.78276099731363]
Test Case: 176 | Input/Output: [[0.5818426343056728 -44] -43.41815736569433]
Test Case: 177 | Input/Output: [[-32.2267714168283 -8] -40.2267714168283]
Test Case: 178 | Input/Output: [[-4.211884797484558 -32] -36.21188479748456]
Test Case: 179 | Input/Output: [[-86.74572897127237 96] 9.25427102872763]
Test Case: 180 | Input/Output: [[-78.76143325701696 -15] -93.76143325701696]
Test Case: 181 | Input/Output: [[-60.88047493320761 -14] -74.88047493320761]
Test Case: 182 | Input/Output: [[58.03775149494979 71] 129.0377514949498]
Test Case: 183 | Input/Output: [[30.227004879775137 47] 77.22700487977514]
Test Case: 184 | Input/Output: [[-98.08994455887112 52] -46.089944558871125]
Test Case: 185 | Input/Output: [[27.340434290435496 69] 96.3404342904355]
Test Case: 186 | Input/Output: [[-40.326203935619766 65] 24.673796064380234]
Test Case: 187 | Input/Output: [[13.636081090668611 -87] -73.36391890933139]
Test Case: 188 | Input/Output: [[17.30292030748008 84] 101.30292030748008]
Test Case: 189 | Input/Output: [[-75.02308797961933 -81] -156.02308797961933]
Test Case: 190 | Input/Output: [[-78.04363413873324 42] -36.04363413873324]
Test Case: 191 | Input/Output: [[65.2129425308749 79] 144.2129425308749]
Test Case: 192 | Input/Output: [[54.53524171051279 -35] 19.535241710512793]
Test Case: 193 | Input/Output: [[-69.0259236518103 44] -25.025923651810302]
Test Case: 194 | Input/Output: [[90.7629366560837 26] 116.7629366560837]
Test Case: 195 | Input/Output: [[28.65410661563132 47] 75.65410661563132]
Test Case: 196 | Input/Output: [[-35.85222710728797 -62] -97.85222710728797]
Test Case: 197 | Input/Output: [[34.59373838780073 89] 123.59373838780073]
Test Case: 198 | Input/Output: [[-69.49980662021156 -2] -71.49980662021156]
Test Case: 199 | Input/Output: [[-86.18793416343367 -97] -183.18793416343368]
Test Case: 200 | Input/Output: [[95.997303047575 62] 157.997303047575]
Test Case: 201 | Input/Output: [[79.69155935891808 -58] 21.691559358918084]
Test Case: 202 | Input/Output: [[56.909611357197264 -80] -23.090388642802736]
Test Case: 203 | Input/Output: [[-95.6435597108679 85] -10.643559710867905]
Test Case: 204 | Input/Output: [[-75.67410461345037 42] -33.67410461345037]
Test Case: 205 | Input/Output: [[66.7682557094036 8] 74.7682557094036]
Test Case: 206 | Input/Output: [[-57.394028432547486 -39] -96.39402843254749]
Test Case: 207 | Input/Output: [[41.36088233843432 -11] 30.360882338434322]
Test Case: 208 | Input/Output: [[76.57970518802699 4] 80.57970518802699]
Test Case: 209 | Input/Output: [[-70.19115808122727 62] -8.191158081227272]
Test Case: 210 | Input/Output: [[11.457011050307145 -39] -27.542988949692855]
Test Case: 211 | Input/Output: [[-15.783690835242453 -14] -29.783690835242453]
Test Case: 212 | Input/Output: [[70.97328680055958 22] 92.97328680055958]
Test Case: 213 | Input/Output: [[-28.70054336399535 36] 7.299456636004649]
Test Case: 214 | Input/Output: [[76.94188705334102 57] 133.94188705334102]
Test Case: 215 | Input/Output: [[61.05552330657409 -74] -12.944476693425912]
Test Case: 216 | Input/Output: [[-82.4541051604363 -42] -124.4541051604363]
Test Case: 217 | Input/Output: [[89.75268240832358 -9] 80.75268240832358]
Test Case: 218 | Input/Output: [[-93.80476674682774 -37] -130.80476674682774]
Test Case: 219 | Input/Output: [[-23.54559032312129 -73] -96.54559032312129]
Test Case: 220 | Input/Output: [[28.348922309842038 62] 90.34892230984204]
Test Case: 221 | Input/Output: [[83.77289146647371 28] 111.77289146647371]
Test Case: 222 | Input/Output: [[92.7487853968099 60] 152.7487853968099]
Test Case: 223 | Input/Output: [[21.60516899023135 7] 28.60516899023135]
Test Case: 224 | Input/Output: [[39.01087850726054 -97] -57.98912149273946]
Test Case: 225 | Input/Output: [[97.21606720859606 57] 154.21606720859606]
Test Case: 226 | Input/Output: [[11.807368616168105 -18] -6.192631383831895]
Test Case: 227 | Input/Output: [[-37.16995445484989 76] 38.83004554515011]
Test Case: 228 | Input/Output: [[15.260886654318881 36] 51.26088665431888]
Test Case: 229 | Input/Output: [[79.60731301050632 3] 82.60731301050632]
Test Case: 230 | Input/Output: [[-59.725436378971565 66] 6.274563621028435]
Test Case: 231 | Input/Output: [[95.47963899619421 -64] 31.47963899619421]
Test Case: 232 | Input/Output: [[-67.86715890153074 71] 3.1328410984692567]
Test Case: 233 | Input/Output: [[15.465426683247102 80] 95.4654266832471]
Test Case: 234 | Input/Output: [[20.072957967622543 -77] -56.92704203237746]
Test Case: 235 | Input/Output: [[-47.15054447998068 9] -38.15054447998068]
Test Case: 236 | Input/Output: [[-10.490317140756062 -72] -82.49031714075606]
Test Case: 237 | Input/Output: [[-36.752619465773925 76] 39.247380534226075]
Test Case: 238 | Input/Output: [[-54.25164220934269 -61] -115.25164220934269]
Test Case: 239 | Input/Output: [[38.83986943668768 71] 109.83986943668768]
Test Case: 240 | Input/Output: [[-31.727721170740068 83] 51.27227882925993]
Test Case: 241 | Input/Output: [[51.668299310537094 -13] 38.668299310537094]
Test Case: 242 | Input/Output: [[-42.38654423752797 -18] -60.38654423752797]
Test Case: 243 | Input/Output: [[85.80813112497162 8] 93.80813112497162]
Test Case: 244 | Input/Output: [[-51.26838321967786 -72] -123.26838321967786]
Test Case: 245 | Input/Output: [[21.319570172943997 -43] -21.680429827056003]
Test Case: 246 | Input/Output: [[97.14383810542725 86] 183.14383810542725]
Test Case: 247 | Input/Output: [[75.62751769915852 -36] 39.62751769915852]
Test Case: 248 | Input/Output: [[39.94389300597561 59] 98.94389300597561]
Test Case: 249 | Input/Output: [[98.65827789032889 -33] 65.65827789032889]
Test Case: 250 | Input/Output: [[18.037462455625075 -61] -42.962537544374925]
Test Case: 251 | Input/Output: [[-59.428883449982386 -3] -62.428883449982386]
Test Case: 252 | Input/Output: [[-48.79858883821291 -16] -64.79858883821291]
Test Case: 253 | Input/Output: [[8.651041915909104 -31] -22.348958084090896]
Test Case: 254 | Input/Output: [[76.42411520577127 60] 136.42411520577127]
Test Case: 255 | Input/Output: [[42.902568479480664 -12] 30.902568479480664]
Test Case: 256 | Input/Output: [[76.38700462751791 74] 150.3870046275179]
Test Case: 257 | Input/Output: [[-48.951409405564974 96] 47.048590594435026]
Test Case: 258 | Input/Output: [[-27.600935621213196 71] 43.399064378786804]
Test Case: 259 | Input/Output: [[-29.430563307629967 -5] -34.43056330762997]
Test Case: 260 | Input/Output: [[-26.557210783290458 98] 71.44278921670954]
Test Case: 261 | Input/Output: [[26.366748754653386 86] 112.36674875465339]
Test Case: 262 | Input/Output: [[12.936331682509987 64] 76.93633168250999]
Test Case: 263 | Input/Output: [[70.1687123780724 30] 100.1687123780724]
Test Case: 264 | Input/Output: [[31.75522364705006 58] 89.75522364705006]
Test Case: 265 | Input/Output: [[-31.322116762825928 -6] -37.32211676282593]
Test Case: 266 | Input/Output: [[-85.84447617966914 -67] -152.84447617966913]
Test Case: 267 | Input/Output: [[29.417082633933518 -7] 22.417082633933518]
Test Case: 268 | Input/Output: [[6.9573626392297285 5] 11.957362639229729]
Test Case: 269 | Input/Output: [[-27.36133378489481 62] 34.63866621510519]
Test Case: 270 | Input/Output: [[45.955004177972 -15] 30.955004177972]
Test Case: 271 | Input/Output: [[55.78071776311859 -34] 21.780717763118588]
Test Case: 272 | Input/Output: [[95.69321227714352 60] 155.69321227714352]
Test Case: 273 | Input/Output: [[1.6244485536348776 93] 94.62444855363488]
Test Case: 274 | Input/Output: [[-37.87207104083752 -68] -105.87207104083751]
Test Case: 275 | Input/Output: [[92.01562729310183 -64] 28.01562729310183]
Test Case: 276 | Input/Output: [[-69.8022457894494 65] -4.802245789449401]
Test Case: 277 | Input/Output: [[26.107388512703707 81] 107.10738851270371]
Test Case: 278 | Input/Output: [[-9.774691858235812 10] 0.225308141764188]
Test Case: 279 | Input/Output: [[69.09477153981649 -91] -21.90522846018351]
Test Case: 280 | Input/Output: [[-46.91514309580034 98] 51.08485690419966]
Test Case: 281 | Input/Output: [[-41.389767645305064 0] -41.389767645305064]
Test Case: 282 | Input/Output: [[28.48860082139089 -48] -19.51139917860911]
Test Case: 283 | Input/Output: [[-25.689255551800372 35] 9.310744448199628]
Test Case: 284 | Input/Output: [[60.16967287681112 78] 138.16967287681112]
Test Case: 285 | Input/Output: [[-49.830851474044714 88] 38.169148525955286]
Test Case: 286 | Input/Output: [[81.85247382525 24] 105.85247382525]
Test Case: 287 | Input/Output: [[13.461825706671277 53] 66.46182570667128]
Test Case: 288 | Input/Output: [[96.74658690834778 51] 147.74658690834778]
Test Case: 289 | Input/Output: [[-93.01243017714846 -44] -137.01243017714847]
Test Case: 290 | Input/Output: [[51.20568403108476 61] 112.20568403108476]
Test Case: 291 | Input/Output: [[-84.28927355824123 -53] -137.28927355824123]
Test Case: 292 | Input/Output: [[81.50117339699693 -88] -6.498826603003067]
Test Case: 293 | Input/Output: [[70.74362862610158 20] 90.74362862610158]
Test Case: 294 | Input/Output: [[41.86147668236066 6] 47.86147668236066]
Test Case: 295 | Input/Output: [[-29.456767134319065 11] -18.456767134319065]
Test Case: 296 | Input/Output: [[-86.61771340122331 36] -50.61771340122331]
Test Case: 297 | Input/Output: [[25.475811960894475 81] 106.47581196089448]
Test Case: 298 | Input/Output: [[87.10431081119896 -16] 71.10431081119896]
Test Case: 299 | Input/Output: [[-39.46536066856559 37] -2.4653606685655873]
Test Case: 300 | Input/Output: [[-23.2405770523534 42] 18.7594229476466]
Test Case: 301 | Input/Output: [[53.783496166028726 15] 68.78349616602873]
Test Case: 302 | Input/Output: [[44.20186812529363 -22] 22.20186812529363]
Test Case: 303 | Input/Output: [[-85.56320644169296 2] -83.56320644169296]
Test Case: 304 | Input/Output: [[27.22137886895473 -6] 21.22137886895473]
Test Case: 305 | Input/Output: [[61.486106821803645 5] 66.48610682180365]
Test Case: 306 | Input/Output: [[14.98840887461131 -58] -43.01159112538869]
Test Case: 307 | Input/Output: [[-14.81609283549055 -37] -51.81609283549055]
Test Case: 308 | Input/Output: [[2.142940534639081 -30] -27.85705946536092]
Test Case: 309 | Input/Output: [[-50.33458385981755 99] 48.66541614018245]
Test Case: 310 | Input/Output: [[-12.577166449734833 7] -5.5771664497348326]
Test Case: 311 | Input/Output: [[77.03160057099424 82] 159.03160057099424]
Test Case: 312 | Input/Output: [[-50.72855742831797 -60] -110.72855742831797]
Test Case: 313 | Input/Output: [[93.51043843945959 88] 181.5104384394596]
Test Case: 314 | Input/Output: [[65.51584881740894 -35] 30.515848817408937]
Test Case: 315 | Input/Output: [[-44.09905628666348 -12] -56.09905628666348]
Test Case: 316 | Input/Output: [[32.37224629898111 93] 125.37224629898111]
Test Case: 317 | Input/Output: [[92.4528389662868 -32] 60.452838966286805]
Test Case: 318 | Input/Output: [[-72.03477597583768 -63] -135.03477597583768]
Test Case: 319 | Input/Output: [[43.21486640224498 -45] -1.7851335977550207]
Test Case: 320 | Input/Output: [[-2.278114797097871 89] 86.72188520290213]
Test Case: 321 | Input/Output: [[29.28960826136941 16] 45.28960826136941]
Test Case: 322 | Input/Output: [[98.59712103654863 -100] -1.4028789634513714]
Test Case: 323 | Input/Output: [[-92.25444589022827 -78] -170.25444589022828]
Test Case: 324 | Input/Output: [[74.98014302155866 18] 92.98014302155866]
Test Case: 325 | Input/Output: [[33.11824483922453 52] 85.11824483922453]
Test Case: 326 | Input/Output: [[83.21107344749413 -3] 80.21107344749413]
Test Case: 327 | Input/Output: [[36.700164741626764 -81] -44.299835258373236]
Test Case: 328 | Input/Output: [[-24.94392650354 65] 40.05607349646]
Test Case: 329 | Input/Output: [[-69.32238496654004 -57] -126.32238496654004]
Test Case: 330 | Input/Output: [[85.8916777562763 -21] 64.8916777562763]
Test Case: 331 | Input/Output: [[-21.556737692330017 40] 18.443262307669983]
Test Case: 332 | Input/Output: [[30.088406193458496 -72] -41.911593806541504]
Test Case: 333 | Input/Output: [[32.633710753013446 -14] 18.633710753013446]
Test Case: 334 | Input/Output: [[-44.17116073006835 -96] -140.17116073006835]
Test Case: 335 | Input/Output: [[51.82072007194171 -2] 49.82072007194171]
Test Case: 336 | Input/Output: [[6.870016544489374 27] 33.870016544489374]
Test Case: 337 | Input/Output: [[12.917691452212352 -49] -36.08230854778765]
Test Case: 338 | Input/Output: [[-42.687154696634224 5] -37.687154696634224]
Test Case: 339 | Input/Output: [[76.01612380800307 23] 99.01612380800307]
Test Case: 340 | Input/Output: [[2.723787321347544 77] 79.72378732134754]
Test Case: 341 | Input/Output: [[-37.06793414029643 -63] -100.06793414029643]
Test Case: 342 | Input/Output: [[-49.67074764379733 11] -38.67074764379733]
Test Case: 343 | Input/Output: [[-37.8724153263482 -64] -101.8724153263482]
Test Case: 344 | Input/Output: [[-55.13693717738195 25] -30.136937177381952]
Test Case: 345 | Input/Output: [[69.81670048040763 29] 98.81670048040763]
Test Case: 346 | Input/Output: [[42.72396295611583 17] 59.72396295611583]
Test Case: 347 | Input/Output: [[-50.09394214265379 19] -31.093942142653788]
Test Case: 348 | Input/Output: [[6.0297766019989325 16] 22.029776601998933]
Test Case: 349 | Input/Output: [[66.38775297419178 -5] 61.387752974191784]
Test Case: 350 | Input/Output: [[-97.93075606836487 -30] -127.93075606836487]
Test Case: 351 | Input/Output: [[80.24997990959235 68] 148.24997990959235]
Test Case: 352 | Input/Output: [[-81.69252311764264 -99] -180.69252311764262]
Test Case: 353 | Input/Output: [[47.3289955105615 92] 139.3289955105615]
Test Case: 354 | Input/Output: [[-59.459404883236374 -13] -72.45940488323637]
Test Case: 355 | Input/Output: [[-63.44585698830802 10] -53.44585698830802]
Test Case: 356 | Input/Output: [[-9.478981035111929 22] 12.521018964888071]
Test Case: 357 | Input/Output: [[-98.06030042059544 -45] -143.06030042059544]
Test Case: 358 | Input/Output: [[9.458508038779229 40] 49.45850803877923]
Test Case: 359 | Input/Output: [[-98.24370037299583 98] -0.24370037299583203]
Test Case: 360 | Input/Output: [[-80.82516978045227 -68] -148.82516978045226]
Test Case: 361 | Input/Output: [[-84.31793415805271 -11] -95.31793415805271]
Test Case: 362 | Input/Output: [[63.0956511155602 82] 145.0956511155602]
Test Case: 363 | Input/Output: [[56.05472888247124 15] 71.05472888247124]
Test Case: 364 | Input/Output: [[-63.720912232438074 74] 10.279087767561926]
Test Case: 365 | Input/Output: [[-63.49647231956999 -69] -132.49647231957]
Test Case: 366 | Input/Output: [[87.14613466710969 89] 176.1461346671097]
Test Case: 367 | Input/Output: [[-8.555696602968155 55] 46.444303397031845]
Test Case: 368 | Input/Output: [[-42.924820261429986 1] -41.924820261429986]
Test Case: 369 | Input/Output: [[-68.89676797276655 88] 19.103232027233446]
Test Case: 370 | Input/Output: [[-5.2216325430627535 -50] -55.22163254306275]
Test Case: 371 | Input/Output: [[44.88574377329812 65] 109.88574377329812]
Test Case: 372 | Input/Output: [[15.169816764173177 8] 23.169816764173177]
Test Case: 373 | Input/Output: [[39.64174207271421 -7] 32.64174207271421]
Test Case: 374 | Input/Output: [[7.541070839156589 -95] -87.45892916084341]
Test Case: 375 | Input/Output: [[55.560659559391894 48] 103.5606595593919]
Test Case: 376 | Input/Output: [[-41.2423559212798 50] 8.757644078720197]
Test Case: 377 | Input/Output: [[84.2073189350316 -95] -10.792681064968406]
Test Case: 378 | Input/Output: [[-33.9589898022447 -19] -52.9589898022447]
Test Case: 379 | Input/Output: [[-1.8290498783380258 52] 50.170950121661974]
Test Case: 380 | Input/Output: [[64.90610501271212 -66] -1.0938949872878823]
Test Case: 381 | Input/Output: [[-86.46982891207418 -5] -91.46982891207418]
Test Case: 382 | Input/Output: [[-56.82784995497057 62] 5.172150045029433]
Test Case: 383 | Input/Output: [[83.7085168019731 -60] 23.708516801973104]
Test Case: 384 | Input/Output: [[44.014944600094964 -94] -49.985055399905036]
Test Case: 385 | Input/Output: [[-75.85688113450999 -96] -171.85688113451]
Test Case: 386 | Input/Output: [[-89.70248627450854 39] -50.702486274508544]
Test Case: 387 | Input/Output: [[-13.731876635402315 37] 23.268123364597685]
Test Case: 388 | Input/Output: [[79.71474089086371 71] 150.7147408908637]
Test Case: 389 | Input/Output: [[6.179686756186626 -64] -57.820313243813374]
Test Case: 390 | Input/Output: [[2.6770345570658662 0] 2.6770345570658662]
Test Case: 391 | Input/Output: [[-94.076732572254 -34] -128.076732572254]
Test Case: 392 | Input/Output: [[-14.440471334104046 11] -3.4404713341040463]
Test Case: 393 | Input/Output: [[-79.54284341375305 -83] -162.54284341375305]
Test Case: 394 | Input/Output: [[-58.437396740487536 -75] -133.43739674048754]
Test Case: 395 | Input/Output: [[-62.78115932810411 -84] -146.7811593281041]
Test Case: 396 | Input/Output: [[-60.74400097355714 75] 14.255999026442858]
Test Case: 397 | Input/Output: [[-59.35611689260121 -74] -133.35611689260122]
Test Case: 398 | Input/Output: [[-20.40941424892908 -33] -53.40941424892908]
Test Case: 399 | Input/Output: [[94.3483921349814 -22] 72.3483921349814]
Test Case: 400 | Input/Output: [[26.241172258513785 15] 41.241172258513785]
Test Case: 401 | Input/Output: [[88.70193890233088 29] 117.70193890233088]
Test Case: 402 | Input/Output: [[51.736886290303005 -33] 18.736886290303005]
Test Case: 403 | Input/Output: [[14.455960317680365 12] 26.455960317680365]
Test Case: 404 | Input/Output: [[74.58475547753292 -95] -20.415244522467077]
Test Case: 405 | Input/Output: [[-21.949087912757932 -3] -24.949087912757932]
Test Case: 406 | Input/Output: [[-0.4594224240966298 -90] -90.45942242409663]
Test Case: 407 | Input/Output: [[-51.67951405588218 -100] -151.67951405588218]
Test Case: 408 | Input/Output: [[77.14934858130869 -2] 75.14934858130869]
Test Case: 409 | Input/Output: [[-12.042729204315975 -57] -69.04272920431598]
Test Case: 410 | Input/Output: [[-43.36053278491274 37] -6.360532784912742]
Test Case: 411 | Input/Output: [[-49.147354508212175 45] -4.1473545082121746]
Test Case: 412 | Input/Output: [[73.8512675397437 -96] -22.148732460256298]
Test Case: 413 | Input/Output: [[-32.961317111958465 -38] -70.96131711195846]
Test Case: 414 | Input/Output: [[73.19965229082123 -84] -10.800347709178766]
Test Case: 415 | Input/Output: [[63.721626680160966 -87] -23.278373319839034]
Test Case: 416 | Input/Output: [[38.19938435902881 -87] -48.80061564097119]
Test Case: 417 | Input/Output: [[-23.10039844661003 -70] -93.10039844661003]
Test Case: 418 | Input/Output: [[-9.00908788438926 -51] -60.00908788438926]
Test Case: 419 | Input/Output: [[62.59146620236751 -15] 47.59146620236751]
Test Case: 420 | Input/Output: [[1.4882509653141796 -30] -28.51174903468582]
Test Case: 421 | Input/Output: [[-94.78219224754987 -39] -133.78219224754986]
Test Case: 422 | Input/Output: [[37.04203242535334 -96] -58.95796757464666]
Test Case: 423 | Input/Output: [[-86.59982654783522 14] -72.59982654783522]
Test Case: 424 | Input/Output: [[20.994328971153834 -44] -23.005671028846166]
Test Case: 425 | Input/Output: [[-57.480109591665055 -54] -111.48010959166506]
Test Case: 426 | Input/Output: [[-18.044631153021754 71] 52.955368846978246]
Test Case: 427 | Input/Output: [[-24.937103875203263 23] -1.9371038752032632]
Test Case: 428 | Input/Output: [[-33.25595927962138 56] 22.74404072037862]
Test Case: 429 | Input/Output: [[54.0863406989765 -50] 4.0863406989765]
Test Case: 430 | Input/Output: [[47.68253485592524 -97] -49.31746514407476]
Test Case: 431 | Input/Output: [[83.36515230358339 41] 124.36515230358339]
Test Case: 432 | Input/Output: [[70.65051822042 -89] -18.349481779580003]
Test Case: 433 | Input/Output: [[-91.30180440633461 -73] -164.3018044063346]
Test Case: 434 | Input/Output: [[-73.68972578316388 45] -28.68972578316388]
Test Case: 435 | Input/Output: [[-66.14186553842941 57] -9.141865538429414]
Test Case: 436 | Input/Output: [[93.73036383790148 15] 108.73036383790148]
Test Case: 437 | Input/Output: [[-62.637012350316866 -71] -133.63701235031687]
Test Case: 438 | Input/Output: [[-12.199122516814171 49] 36.80087748318583]
Test Case: 439 | Input/Output: [[-39.10410649068326 22] -17.104106490683257]
Test Case: 440 | Input/Output: [[65.95250601334783 -21] 44.95250601334783]
Test Case: 441 | Input/Output: [[-75.01087257415094 25] -50.01087257415094]
Test Case: 442 | Input/Output: [[-72.4948351255268 -42] -114.4948351255268]
Test Case: 443 | Input/Output: [[41.096122330095284 76] 117.09612233009528]
Test Case: 444 | Input/Output: [[-24.896635745998424 78] 53.103364254001576]
Test Case: 445 | Input/Output: [[22.80504957647682 -3] 19.80504957647682]
Test Case: 446 | Input/Output: [[-81.1905089019036 -70] -151.1905089019036]
Test Case: 447 | Input/Output: [[83.07748321676013 -83] 0.07748321676012893]
Test Case: 448 | Input/Output: [[-56.48886226470666 -86] -142.48886226470665]
Test Case: 449 | Input/Output: [[72.11474104194991 30] 102.11474104194991]
Test Case: 450 | Input/Output: [[75.3115940127102 -96] -20.688405987289798]
Test Case: 451 | Input/Output: [[92.50281489655049 22] 114.50281489655049]
Test Case: 452 | Input/Output: [[-92.96082146144032 79] -13.960821461440318]
Test Case: 453 | Input/Output: [[-91.01285151371776 -59] -150.01285151371775]
Test Case: 454 | Input/Output: [[62.50484902387083 -84] -21.495150976129167]
Test Case: 455 | Input/Output: [[-11.245916535942953 -78] -89.24591653594295]
Test Case: 456 | Input/Output: [[2.063878993310425 97] 99.06387899331042]
Test Case: 457 | Input/Output: [[86.17190950665099 -98] -11.82809049334901]
Test Case: 458 | Input/Output: [[-55.13464918026683 -99] -154.13464918026682]
Test Case: 459 | Input/Output: [[-95.26843567393793 -78] -173.26843567393792]
Test Case: 460 | Input/Output: [[73.2684200773235 -19] 54.2684200773235]
Test Case: 461 | Input/Output: [[91.44111817447885 -3] 88.44111817447885]
Test Case: 462 | Input/Output: [[58.58891845878125 92] 150.58891845878125]
Test Case: 463 | Input/Output: [[8.555892564643813 -20] -11.444107435356187]
Test Case: 464 | Input/Output: [[-82.50326900879796 64] -18.503269008797957]
Test Case: 465 | Input/Output: [[-3.9091056393536547 -53] -56.909105639353655]
Test Case: 466 | Input/Output: [[-32.61165145662915 -51] -83.61165145662915]
Test Case: 467 | Input/Output: [[-24.61190219619145 -44] -68.61190219619145]
Test Case: 468 | Input/Output: [[-0.7611337203400836 -98] -98.76113372034008]
Test Case: 469 | Input/Output: [[47.5611309780048 -27] 20.561130978004797]
Test Case: 470 | Input/Output: [[98.62400014359741 -59] 39.624000143597414]
Test Case: 471 | Input/Output: [[-19.940832836200514 -94] -113.94083283620051]
Test Case: 472 | Input/Output: [[48.1347590331701 -34] 14.134759033170099]
Test Case: 473 | Input/Output: [[-8.98786670087847 61] 52.01213329912153]
Test Case: 474 | Input/Output: [[-98.58473203649613 86] -12.584732036496135]
Test Case: 475 | Input/Output: [[9.27354269537561 46] 55.27354269537561]
Test Case: 476 | Input/Output: [[76.55674685189533 84] 160.55674685189533]
Test Case: 477 | Input/Output: [[-65.73883130049444 12] -53.73883130049444]
Test Case: 478 | Input/Output: [[4.127450836252038 -6] -1.872549163747962]
Test Case: 479 | Input/Output: [[-94.95261334188363 -78] -172.95261334188365]
Test Case: 480 | Input/Output: [[7.105882116409674 47] 54.105882116409674]
Test Case: 481 | Input/Output: [[-22.217242961928704 -23] -45.217242961928704]
Test Case: 482 | Input/Output: [[-37.630371229102224 47] 9.369628770897776]
Test Case: 483 | Input/Output: [[1.202127776432576 -46] -44.797872223567424]
Test Case: 484 | Input/Output: [[82.17387645475085 -23] 59.173876454750854]
Test Case: 485 | Input/Output: [[59.86711712884875 78] 137.86711712884875]
Test Case: 486 | Input/Output: [[-86.30712701985675 22] -64.30712701985675]
Test Case: 487 | Input/Output: [[-39.84261927815933 4] -35.84261927815933]
Test Case: 488 | Input/Output: [[57.353790432370175 -33] 24.353790432370175]
Test Case: 489 | Input/Output: [[10.859769519942787 -26] -15.140230480057213]
Test Case: 490 | Input/Output: [[10.373351004540794 -58] -47.626648995459206]
Test Case: 491 | Input/Output: [[-83.84005594463875 57] -26.84005594463875]
Test Case: 492 | Input/Output: [[78.903629983645 3] 81.903629983645]
Test Case: 493 | Input/Output: [[38.74791853891074 92] 130.74791853891074]
Test Case: 494 | Input/Output: [[95.99564643962964 88] 183.99564643962964]
Test Case: 495 | Input/Output: [[73.9309480801239 -14] 59.9309480801239]
Test Case: 496 | Input/Output: [[-32.83263246756664 -44] -76.83263246756664]
Test Case: 497 | Input/Output: [[-95.12266237245461 51] -44.12266237245461]
Test Case: 498 | Input/Output: [[57.65207496929 -50] 7.652074969289998]
Test Case: 499 | Input/Output: [[13.366120314974012 80] 93.36612031497401]
Test Case: 500 | Input/Output: [[76.7490798123722 -34] 42.7490798123722]
Test Case: 501 | Input/Output: [[-85.49748077561121 -66] -151.49748077561122]
Test Case: 502 | Input/Output: [[92.63874950928525 -78] 14.638749509285248]
Test Case: 503 | Input/Output: [[19.969405734341763 -55] -35.03059426565824]
Test Case: 504 | Input/Output: [[-74.68138497534386 -45] -119.68138497534386]
Test Case: 505 | Input/Output: [[81.6156698437525 -43] 38.6156698437525]
Test Case: 506 | Input/Output: [[-50.08200025014009 54] 3.9179997498599093]
Test Case: 507 | Input/Output: [[99.0610314371043 -89] 10.061031437104305]
Test Case: 508 | Input/Output: [[75.69279217585785 89] 164.69279217585785]
Test Case: 509 | Input/Output: [[-27.72800402219795 10] -17.72800402219795]
Test Case: 510 | Input/Output: [[-68.18449910646521 -11] -79.18449910646521]
Test Case: 511 | Input/Output: [[32.13395970562928 68] 100.13395970562928]
Test Case: 512 | Input/Output: [[-71.88738769369687 -36] -107.88738769369687]
Test Case: 513 | Input/Output: [[-60.57683587358973 59] -1.5768358735897294]
Test Case: 514 | Input/Output: [[81.46458281171999 12] 93.46458281171999]
Test Case: 515 | Input/Output: [[-12.916120631605793 11] -1.9161206316057928]
Test Case: 516 | Input/Output: [[-34.15129769311453 65] 30.84870230688547]
Test Case: 517 | Input/Output: [[65.96398460858157 -57] 8.963984608581569]
Test Case: 518 | Input/Output: [[-55.371923031512125 -20] -75.37192303151213]
Test Case: 519 | Input/Output: [[51.83278742085119 -91] -39.16721257914881]
Test Case: 520 | Input/Output: [[-29.663655456834476 81] 51.336344543165524]
Test Case: 521 | Input/Output: [[-16.888463586449575 96] 79.11153641355043]
Test Case: 522 | Input/Output: [[-71.48590329576837 52] -19.485903295768367]
Test Case: 523 | Input/Output: [[71.25944504548957 -27] 44.25944504548957]
Test Case: 524 | Input/Output: [[-84.65356580618106 -51] -135.65356580618106]
Test Case: 525 | Input/Output: [[26.742806638572915 56] 82.74280663857292]
Test Case: 526 | Input/Output: [[71.33493891285374 -92] -20.665061087146256]
Test Case: 527 | Input/Output: [[75.93202877517786 29] 104.93202877517786]
Test Case: 528 | Input/Output: [[-75.67208679242572 -23] -98.67208679242572]
Test Case: 529 | Input/Output: [[-36.56229063641243 -80] -116.56229063641243]
Test Case: 530 | Input/Output: [[93.77952654652515 93] 186.77952654652515]
Test Case: 531 | Input/Output: [[48.981827654977195 -38] 10.981827654977195]
Test Case: 532 | Input/Output: [[4.53421086999677 61] 65.53421086999677]
Test Case: 533 | Input/Output: [[-71.96969777276784 96] 24.030302227232156]
Test Case: 534 | Input/Output: [[-14.837608346538204 65] 50.162391653461796]
Test Case: 535 | Input/Output: [[-81.47807297196525 18] -63.47807297196525]
Test Case: 536 | Input/Output: [[-47.48067891110173 98] 50.51932108889827]
Test Case: 537 | Input/Output: [[-52.795619734591995 8] -44.795619734591995]
Test Case: 538 | Input/Output: [[-70.63555151994458 -24] -94.63555151994458]
Test Case: 539 | Input/Output: [[78.03345132427734 46] 124.03345132427734]
Test Case: 540 | Input/Output: [[-31.793246097685127 -43] -74.79324609768513]
Test Case: 541 | Input/Output: [[-27.67212025490926 -71] -98.67212025490926]
Test Case: 542 | Input/Output: [[62.771821006959414 69] 131.7718210069594]
Test Case: 543 | Input/Output: [[-3.9190971912159682 50] 46.08090280878403]
Test Case: 544 | Input/Output: [[-93.49104279240646 31] -62.49104279240646]
Test Case: 545 | Input/Output: [[-85.96870749014384 -57] -142.96870749014386]
Test Case: 546 | Input/Output: [[95.16224772595041 -88] 7.162247725950408]
Test Case: 547 | Input/Output: [[48.48471148246273 46] 94.48471148246273]
Test Case: 548 | Input/Output: [[36.65650016757007 11] 47.65650016757007]
Test Case: 549 | Input/Output: [[-36.95383809816406 -94] -130.95383809816406]
Test Case: 550 | Input/Output: [[95.76320698595856 -63] 32.76320698595856]
Test Case: 551 | Input/Output: [[93.02992979645535 49] 142.02992979645535]
Test Case: 552 | Input/Output: [[-77.97321993982906 -64] -141.97321993982905]
Test Case: 553 | Input/Output: [[-20.885677134642805 48] 27.114322865357195]
Test Case: 554 | Input/Output: [[25.212482211224383 56] 81.21248221122438]
Test Case: 555 | Input/Output: [[-55.91547339409226 -29] -84.91547339409226]
Test Case: 556 | Input/Output: [[-5.759343747798013 -12] -17.759343747798013]
Test Case: 557 | Input/Output: [[-27.534058861582395 39] 11.465941138417605]
Test Case: 558 | Input/Output: [[-73.28476043490745 10] -63.284760434907454]
Test Case: 559 | Input/Output: [[3.225407060077785 -66] -62.774592939922215]
Test Case: 560 | Input/Output: [[-15.214454754709166 -62] -77.21445475470917]
Test Case: 561 | Input/Output: [[-80.29057065497088 -49] -129.29057065497088]
Test Case: 562 | Input/Output: [[-60.42646216231855 -27] -87.42646216231856]
Test Case: 563 | Input/Output: [[-18.73030033390384 11] -7.730300333903841]
Test Case: 564 | Input/Output: [[-9.74111363985746 70] 60.25888636014254]
Test Case: 565 | Input/Output: [[-92.8421576419187 27] -65.8421576419187]
Test Case: 566 | Input/Output: [[-47.60176570934942 83] 35.39823429065058]
Test Case: 567 | Input/Output: [[47.21271512863618 18] 65.21271512863618]
Test Case: 568 | Input/Output: [[-27.83555227775632 28] 0.1644477222436791]
Test Case: 569 | Input/Output: [[-38.87748443114019 -5] -43.87748443114019]
Test Case: 570 | Input/Output: [[8.767353017405227 -82] -73.23264698259477]
Test Case: 571 | Input/Output: [[96.89961883086025 -41] 55.89961883086025]
Test Case: 572 | Input/Output: [[52.76667454076775 -48] 4.766674540767752]
Test Case: 573 | Input/Output: [[58.88953952500847 18] 76.88953952500847]
Test Case: 574 | Input/Output: [[44.90653505512191 -53] -8.093464944878093]
Test Case: 575 | Input/Output: [[7.0016703620345595 78] 85.00167036203456]
Test Case: 576 | Input/Output: [[-28.41858632757426 -4] -32.41858632757426]
Test Case: 577 | Input/Output: [[-39.26181479844608 -73] -112.26181479844608]
Test Case: 578 | Input/Output: [[70.98966573807675 71] 141.98966573807675]
Test Case: 579 | Input/Output: [[-32.276445874259025 -78] -110.27644587425903]
Test Case: 580 | Input/Output: [[38.78132059500575 -52] -13.218679404994248]
Test Case: 581 | Input/Output: [[-37.19966395822356 -87] -124.19966395822357]
Test Case: 582 | Input/Output: [[-28.22881656127197 32] 3.7711834387280305]
Test Case: 583 | Input/Output: [[-13.125464283750873 20] 6.874535716249127]
Test Case: 584 | Input/Output: [[59.86737837319623 81] 140.86737837319623]
Test Case: 585 | Input/Output: [[22.367979753563077 -63] -40.63202024643692]
Test Case: 586 | Input/Output: [[-28.514717821115994 -14] -42.514717821115994]
Test Case: 587 | Input/Output: [[42.9813233725674 91] 133.9813233725674]
Test Case: 588 | Input/Output: [[-0.8094330649368828 -89] -89.80943306493688]
Test Case: 589 | Input/Output: [[84.48139654108593 17] 101.48139654108593]
Test Case: 590 | Input/Output: [[29.601792047508127 -65] -35.39820795249187]
Test Case: 591 | Input/Output: [[-37.064834534305604 91] 53.935165465694396]
Test Case: 592 | Input/Output: [[-96.50826256183078 77] -19.508262561830776]
Test Case: 593 | Input/Output: [[-71.13574664486673 -23] -94.13574664486673]
Test Case: 594 | Input/Output: [[-12.99064746634619 10] -2.9906474663461893]
Test Case: 595 | Input/Output: [[-50.21896077602381 31] -19.218960776023813]
Test Case: 596 | Input/Output: [[0.5176086997809932 -17] -16.482391300219007]
Test Case: 597 | Input/Output: [[93.19686349137282 -60] 33.196863491372824]
Test Case: 598 | Input/Output: [[-98.50053249068893 71] -27.500532490688926]
Test Case: 599 | Input/Output: [[-65.4540567352182 -35] -100.4540567352182]
Test Case: 600 | Input/Output: [[-56.23538812566644 23] -33.23538812566644]
Test Case: 601 | Input/Output: [[57.353583075544805 -46] 11.353583075544805]
Test Case: 602 | Input/Output: [[-26.180960348403985 53] 26.819039651596015]
Test Case: 603 | Input/Output: [[0.6597664740922085 -3] -2.3402335259077915]
Test Case: 604 | Input/Output: [[-24.265261424557607 -23] -47.26526142455761]
Test Case: 605 | Input/Output: [[12.200425986201608 35] 47.20042598620161]
Test Case: 606 | Input/Output: [[98.14732239082977 -68] 30.14732239082977]
Test Case: 607 | Input/Output: [[-17.843782187277228 -13] -30.843782187277228]
Test Case: 608 | Input/Output: [[5.3583737904965005 48] 53.3583737904965]
Test Case: 609 | Input/Output: [[17.902284827939255 48] 65.90228482793925]
Test Case: 610 | Input/Output: [[-45.87665543500607 49] 3.1233445649939284]
Test Case: 611 | Input/Output: [[-55.11252924853993 20] -35.11252924853993]
Test Case: 612 | Input/Output: [[-3.411269642898546 11] 7.588730357101454]
Test Case: 613 | Input/Output: [[-56.99230477735371 -37] -93.99230477735371]
Test Case: 614 | Input/Output: [[-34.17082441117341 -67] -101.17082441117341]
Test Case: 615 | Input/Output: [[15.56068897949514 -79] -63.43931102050486]
Test Case: 616 | Input/Output: [[-3.571344012701985 -1] -4.571344012701985]
Test Case: 617 | Input/Output: [[-66.88153779814607 -31] -97.88153779814607]
Test Case: 618 | Input/Output: [[60.32883038586775 -87] -26.671169614132253]
Test Case: 619 | Input/Output: [[61.809189998689305 -58] 3.8091899986893054]
Test Case: 620 | Input/Output: [[77.60382864718153 51] 128.60382864718153]
Test Case: 621 | Input/Output: [[22.495527649154056 67] 89.49552764915406]
Test Case: 622 | Input/Output: [[50.734949923087385 15] 65.73494992308738]
Test Case: 623 | Input/Output: [[4.91201855958947 74] 78.91201855958947]
Test Case: 624 | Input/Output: [[61.212279364487415 31] 92.21227936448742]
Test Case: 625 | Input/Output: [[62.15247198147782 100] 162.15247198147782]
Test Case: 626 | Input/Output: [[-7.666869038708128 -9] -16.66686903870813]
Test Case: 627 | Input/Output: [[-81.06652085604686 50] -31.066520856046864]
Test Case: 628 | Input/Output: [[-87.49810452117129 47] -40.498104521171285]
Test Case: 629 | Input/Output: [[-82.90668557775906 29] -53.90668557775906]
Test Case: 630 | Input/Output: [[-57.23449419505522 -31] -88.23449419505522]
Test Case: 631 | Input/Output: [[-22.777883019239283 -73] -95.77788301923928]
Test Case: 632 | Input/Output: [[73.86710677882559 85] 158.8671067788256]
Test Case: 633 | Input/Output: [[94.08156190092902 65] 159.08156190092902]
Test Case: 634 | Input/Output: [[-60.007043552882465 88] 27.992956447117535]
Test Case: 635 | Input/Output: [[55.511963672691536 64] 119.51196367269154]
Test Case: 636 | Input/Output: [[97.6255021652374 -10] 87.6255021652374]
Test Case: 637 | Input/Output: [[29.776148387238663 36] 65.77614838723866]
Test Case: 638 | Input/Output: [[-36.811923373152936 96] 59.188076626847064]
Test Case: 639 | Input/Output: [[94.35453818578392 4] 98.35453818578392]
Test Case: 640 | Input/Output: [[-15.35844328132518 17] 1.6415567186748206]
Test Case: 641 | Input/Output: [[6.98362636776497 -27] -20.01637363223503]
Test Case: 642 | Input/Output: [[-98.5132998225408 83] -15.513299822540802]
Test Case: 643 | Input/Output: [[80.17784643270011 4] 84.17784643270011]
Test Case: 644 | Input/Output: [[-40.31791543708625 40] -0.31791543708624914]
Test Case: 645 | Input/Output: [[-56.96068255563156 78] 21.039317444368443]
Test Case: 646 | Input/Output: [[14.731682728536 -54] -39.268317271464]
Test Case: 647 | Input/Output: [[-48.914686570013835 -3] -51.914686570013835]
Test Case: 648 | Input/Output: [[39.32115034066942 -44] -4.678849659330581]
Test Case: 649 | Input/Output: [[89.28067850226867 55] 144.28067850226867]
Test Case: 650 | Input/Output: [[71.94890877594366 -40] 31.948908775943664]
Test Case: 651 | Input/Output: [[-36.929343772534295 32] -4.9293437725342955]
Test Case: 652 | Input/Output: [[-80.81082296688042 61] -19.810822966880423]
Test Case: 653 | Input/Output: [[80.47392831901462 -10] 70.47392831901462]
Test Case: 654 | Input/Output: [[-11.42929225704728 -24] -35.42929225704728]
Test Case: 655 | Input/Output: [[-55.93673057588664 -87] -142.93673057588666]
Test Case: 656 | Input/Output: [[79.1536839605717 -68] 11.153683960571698]
Test Case: 657 | Input/Output: [[-8.066444021893915 35] 26.933555978106085]
Test Case: 658 | Input/Output: [[94.40957274697419 97] 191.4095727469742]
Test Case: 659 | Input/Output: [[-77.78163180454555 -69] -146.78163180454555]
Test Case: 660 | Input/Output: [[64.06684400461879 10] 74.06684400461879]
Test Case: 661 | Input/Output: [[-44.18904388595575 64] 19.810956114044252]
Test Case: 662 | Input/Output: [[-55.492001834986546 -3] -58.492001834986546]
Test Case: 663 | Input/Output: [[17.77449243629161 -33] -15.22550756370839]
Test Case: 664 | Input/Output: [[58.59570904517392 -20] 38.59570904517392]
Test Case: 665 | Input/Output: [[-94.53800435717581 -14] -108.53800435717581]
Test Case: 666 | Input/Output: [[-43.629748118403924 -14] -57.629748118403924]
Test Case: 667 | Input/Output: [[16.71641290637973 -60] -43.28358709362027]
Test Case: 668 | Input/Output: [[64.11307547229026 -76] -11.886924527709738]
Test Case: 669 | Input/Output: [[61.9516853851037 34] 95.9516853851037]
Test Case: 670 | Input/Output: [[-95.3619127493526 78] -17.361912749352598]
Test Case: 671 | Input/Output: [[75.90023799392048 95] 170.90023799392048]
Test Case: 672 | Input/Output: [[-84.57040308949506 32] -52.57040308949506]
Test Case: 673 | Input/Output: [[-93.97421025801545 -49] -142.97421025801543]
Test Case: 674 | Input/Output: [[99.1071302238328 89] 188.1071302238328]
Test Case: 675 | Input/Output: [[47.74198213378361 83] 130.7419821337836]
Test Case: 676 | Input/Output: [[18.940659570954125 15] 33.940659570954125]
Test Case: 677 | Input/Output: [[40.25835542625302 -67] -26.74164457374698]
Test Case: 678 | Input/Output: [[-42.801007215626896 4] -38.801007215626896]
Test Case: 679 | Input/Output: [[-63.7512452960193 100] 36.2487547039807]
Test Case: 680 | Input/Output: [[61.72804720128687 9] 70.72804720128687]
Test Case: 681 | Input/Output: [[88.76466072855251 -11] 77.76466072855251]
Test Case: 682 | Input/Output: [[-71.80662327590525 9] -62.80662327590525]
Test Case: 683 | Input/Output: [[39.51105230009955 -75] -35.48894769990045]
Test Case: 684 | Input/Output: [[41.613484646481 -89] -47.386515353519]
Test Case: 685 | Input/Output: [[16.224324576766264 -78] -61.775675423233736]
Test Case: 686 | Input/Output: [[1.3524779997420069 46] 47.35247799974201]
Test Case: 687 | Input/Output: [[-7.213455573639266 98] 90.78654442636073]
Test Case: 688 | Input/Output: [[79.13301102911115 -65] 14.133011029111145]
Test Case: 689 | Input/Output: [[59.38553957994108 75] 134.38553957994108]
Test Case: 690 | Input/Output: [[-19.499735080720626 -9] -28.499735080720626]
Test Case: 691 | Input/Output: [[-48.01429986703174 15] -33.01429986703174]
Test Case: 692 | Input/Output: [[-43.88486826797215 -42] -85.88486826797215]
Test Case: 693 | Input/Output: [[-41.61073932565964 -39] -80.61073932565964]
Test Case: 694 | Input/Output: [[-26.630255754410115 77] 50.369744245589885]
Test Case: 695 | Input/Output: [[26.382681196645194 -32] -5.617318803354806]
Test Case: 696 | Input/Output: [[-57.792482073209726 24] -33.792482073209726]
Test Case: 697 | Input/Output: [[-53.63222508983314 64] 10.367774910166858]
Test Case: 698 | Input/Output: [[-16.68456416431168 86] 69.31543583568832]
Test Case: 699 | Input/Output: [[-93.37298484564876 -93] -186.37298484564877]
Test Case: 700 | Input/Output: [[19.577121465991752 -45] -25.422878534008248]
Test Case: 701 | Input/Output: [[-22.066945103784334 -19] -41.066945103784334]
Test Case: 702 | Input/Output: [[26.25643100965229 -57] -30.74356899034771]
Test Case: 703 | Input/Output: [[70.66708662567311 -77] -6.332913374326893]
Test Case: 704 | Input/Output: [[0.6244512214628344 -78] -77.37554877853717]
Test Case: 705 | Input/Output: [[97.1749621716163 -93] 4.174962171616301]
Test Case: 706 | Input/Output: [[-66.51935243381502 69] 2.4806475661849845]
Test Case: 707 | Input/Output: [[20.708803258928782 17] 37.70880325892878]
Test Case: 708 | Input/Output: [[64.38306553263163 12] 76.38306553263163]
Test Case: 709 | Input/Output: [[-74.26410735216784 86] 11.73589264783216]
Test Case: 710 | Input/Output: [[-60.30845178821353 24] -36.30845178821353]
Test Case: 711 | Input/Output: [[-43.0224926536432 -49] -92.0224926536432]
Test Case: 712 | Input/Output: [[-53.0310439289446 59] 5.968956071055402]
Test Case: 713 | Input/Output: [[-94.66420983144658 -7] -101.66420983144658]
Test Case: 714 | Input/Output: [[-71.05124917984895 25] -46.05124917984895]
Test Case: 715 | Input/Output: [[-23.457682683485288 35] 11.542317316514712]
Test Case: 716 | Input/Output: [[60.90374342045749 -21] 39.90374342045749]
Test Case: 717 | Input/Output: [[-25.48102495654983 45] 19.51897504345017]
Test Case: 718 | Input/Output: [[-78.5430858488727 -34] -112.5430858488727]
Test Case: 719 | Input/Output: [[73.26246947627916 -20] 53.262469476279165]
Test Case: 720 | Input/Output: [[20.942653264288765 -46] -25.057346735711235]
Test Case: 721 | Input/Output: [[3.5974280413561246 10] 13.597428041356125]
Test Case: 722 | Input/Output: [[-80.2798907159498 75] -5.279890715949804]
Test Case: 723 | Input/Output: [[98.97934545859886 28] 126.97934545859886]
Test Case: 724 | Input/Output: [[4.390771380547449 94] 98.39077138054745]
Test Case: 725 | Input/Output: [[12.411048247603347 -52] -39.58895175239665]
Test Case: 726 | Input/Output: [[6.37005401796462 -72] -65.62994598203538]
Test Case: 727 | Input/Output: [[47.38459675160132 44] 91.38459675160132]
Test Case: 728 | Input/Output: [[59.738538287358125 91] 150.73853828735812]
Test Case: 729 | Input/Output: [[-88.62358630210687 94] 5.376413697893128]
Test Case: 730 | Input/Output: [[22.44746996256208 88] 110.44746996256208]
Test Case: 731 | Input/Output: [[-29.00786268202819 47] 17.99213731797181]
Test Case: 732 | Input/Output: [[-79.39512787392493 -91] -170.39512787392493]
Test Case: 733 | Input/Output: [[-49.217742222023865 42] -7.217742222023865]
Test Case: 734 | Input/Output: [[-32.211990937492985 -94] -126.21199093749298]
Test Case: 735 | Input/Output: [[-71.51918756861835 -72] -143.51918756861835]
Test Case: 736 | Input/Output: [[-53.23007591256066 -75] -128.23007591256066]
Test Case: 737 | Input/Output: [[-5.919007244135585 56] 50.080992755864415]
Test Case: 738 | Input/Output: [[97.66369562304152 49] 146.66369562304152]
Test Case: 739 | Input/Output: [[-17.688568882800965 99] 81.31143111719904]
Test Case: 740 | Input/Output: [[1.3077813456492606 37] 38.30778134564926]
Test Case: 741 | Input/Output: [[-28.76025209611342 -75] -103.76025209611342]
Test Case: 742 | Input/Output: [[33.321484488868236 -93] -59.678515511131764]
Test Case: 743 | Input/Output: [[-9.297376216341164 77] 67.70262378365884]
Test Case: 744 | Input/Output: [[-76.53508498287542 3] -73.53508498287542]
Test Case: 745 | Input/Output: [[17.934673486908622 39] 56.93467348690862]
Test Case: 746 | Input/Output: [[-22.91556232648442 -4] -26.91556232648442]
Test Case: 747 | Input/Output: [[-17.254207342352544 -74] -91.25420734235254]
Test Case: 748 | Input/Output: [[-7.289686495686979 -71] -78.28968649568698]
Test Case: 749 | Input/Output: [[83.39607689643151 -80] 3.3960768964315093]
Test Case: 750 | Input/Output: [[9.346995435656027 -88] -78.65300456434397]
Test Case: 751 | Input/Output: [[5.827678608526583 69] 74.82767860852658]
Test Case: 752 | Input/Output: [[-76.72880493404195 17] -59.728804934041946]
Test Case: 753 | Input/Output: [[47.0508582888134 69] 116.0508582888134]
Test Case: 754 | Input/Output: [[78.7220715317535 -64] 14.7220715317535]
Test Case: 755 | Input/Output: [[5.074187922983711 -68] -62.92581207701629]
Test Case: 756 | Input/Output: [[-3.582830713856765 -80] -83.58283071385677]
Test Case: 757 | Input/Output: [[-69.3145726925404 88] 18.685427307459605]
Test Case: 758 | Input/Output: [[-89.02265387492503 -1] -90.02265387492503]
Test Case: 759 | Input/Output: [[57.0482356412663 -93] -35.9517643587337]
Test Case: 760 | Input/Output: [[-47.373743535143205 -89] -136.3737435351432]
Test Case: 761 | Input/Output: [[-22.99316404216654 49] 26.00683595783346]
Test Case: 762 | Input/Output: [[86.46302985007904 -36] 50.46302985007904]
Test Case: 763 | Input/Output: [[63.819161124173945 2] 65.81916112417395]
Test Case: 764 | Input/Output: [[41.72845486511548 -60] -18.27154513488452]
Test Case: 765 | Input/Output: [[20.41155769347543 -42] -21.58844230652457]
Test Case: 766 | Input/Output: [[-22.220317955728163 99] 76.77968204427184]
Test Case: 767 | Input/Output: [[58.68578256899241 -18] 40.68578256899241]
Test Case: 768 | Input/Output: [[20.710672253705525 -59] -38.289327746294475]
Test Case: 769 | Input/Output: [[-67.87099450523841 -77] -144.8709945052384]
Test Case: 770 | Input/Output: [[42.03426915771854 1] 43.03426915771854]
Test Case: 771 | Input/Output: [[92.82624656439475 -32] 60.82624656439475]
Test Case: 772 | Input/Output: [[-4.6186002739487435 47] 42.38139972605126]
Test Case: 773 | Input/Output: [[35.29960028588309 -24] 11.299600285883088]
Test Case: 774 | Input/Output: [[77.08560214116363 12] 89.08560214116363]
Test Case: 775 | Input/Output: [[85.89685829604423 -88] -2.103141703955771]
Test Case: 776 | Input/Output: [[78.32692521839962 44] 122.32692521839962]
Test Case: 777 | Input/Output: [[-90.76045245982023 -46] -136.76045245982021]
Test Case: 778 | Input/Output: [[84.03461057968283 -26] 58.034610579682834]
Test Case: 779 | Input/Output: [[64.48900357530897 -90] -25.51099642469103]
Test Case: 780 | Input/Output: [[98.36714295199468 -19] 79.36714295199468]
Test Case: 781 | Input/Output: [[45.47164708414206 -44] 1.471647084142063]
Test Case: 782 | Input/Output: [[-93.71811507360019 17] -76.71811507360019]
Test Case: 783 | Input/Output: [[13.931016578962812 84] 97.93101657896281]
Test Case: 784 | Input/Output: [[-62.905943700126784 50] -12.905943700126784]
Test Case: 785 | Input/Output: [[-84.74683407202639 54] -30.746834072026388]
Test Case: 786 | Input/Output: [[-75.46673618533954 79] 3.533263814660458]
Test Case: 787 | Input/Output: [[35.77216591678459 90] 125.77216591678459]
Test Case: 788 | Input/Output: [[3.4568704135091934 50] 53.45687041350919]
Test Case: 789 | Input/Output: [[-68.90043670508629 -40] -108.90043670508629]
Test Case: 790 | Input/Output: [[-98.98008985029814 -27] -125.98008985029814]
Test Case: 791 | Input/Output: [[91.70030505405634 -23] 68.70030505405634]
Test Case: 792 | Input/Output: [[-76.62706556310334 49] -27.627065563103343]
Test Case: 793 | Input/Output: [[-75.42599619464966 10] -65.42599619464966]
Test Case: 794 | Input/Output: [[50.67286650191113 -40] 10.67286650191113]
Test Case: 795 | Input/Output: [[82.499685900891 56] 138.499685900891]
Test Case: 796 | Input/Output: [[-75.95077078319956 -35] -110.95077078319956]
Test Case: 797 | Input/Output: [[-75.47715933133139 -49] -124.47715933133139]
Test Case: 798 | Input/Output: [[70.24417305726837 -99] -28.75582694273163]
Test Case: 799 | Input/Output: [[-26.991983600004858 -24] -50.99198360000486]
Test Case: 800 | Input/Output: [[69.53904693721552 41] 110.53904693721552]
Test Case: 801 | Input/Output: [[22.012205237403876 -80] -57.987794762596124]
Test Case: 802 | Input/Output: [[-40.09836255840102 4] -36.09836255840102]
Test Case: 803 | Input/Output: [[-91.72730938480262 -69] -160.72730938480262]
Test Case: 804 | Input/Output: [[18.856145674673826 82] 100.85614567467383]
Test Case: 805 | Input/Output: [[76.86896462068151 -20] 56.86896462068151]
Test Case: 806 | Input/Output: [[45.36112996078842 -100] -54.63887003921158]
Test Case: 807 | Input/Output: [[8.738175578601215 -61] -52.261824421398785]
Test Case: 808 | Input/Output: [[-6.140848466119337 -51] -57.14084846611934]
Test Case: 809 | Input/Output: [[35.26440450051297 48] 83.26440450051297]
Test Case: 810 | Input/Output: [[-15.725373878359036 -71] -86.72537387835904]
Test Case: 811 | Input/Output: [[52.85975650203949 -95] -42.14024349796051]
Test Case: 812 | Input/Output: [[-18.792960097387223 19] 0.20703990261277738]
Test Case: 813 | Input/Output: [[86.87695403766466 61] 147.87695403766466]
Test Case: 814 | Input/Output: [[-61.12011231097456 44] -17.120112310974562]
Test Case: 815 | Input/Output: [[33.63230097238667 21] 54.63230097238667]
Test Case: 816 | Input/Output: [[-43.307867613955686 -76] -119.3078676139557]
Test Case: 817 | Input/Output: [[-12.190842246437938 -11] -23.19084224643794]
Test Case: 818 | Input/Output: [[-15.284217462839521 -97] -112.28421746283952]
Test Case: 819 | Input/Output: [[34.17291138602161 -75] -40.82708861397839]
Test Case: 820 | Input/Output: [[-17.435152372654386 -17] -34.435152372654386]
Test Case: 821 | Input/Output: [[-96.3613211660545 -75] -171.3613211660545]
Test Case: 822 | Input/Output: [[-73.61766154845776 -27] -100.61766154845776]
Test Case: 823 | Input/Output: [[-4.672311199597544 65] 60.327688800402456]
Test Case: 824 | Input/Output: [[-2.668772878046809 -90] -92.66877287804681]
Test Case: 825 | Input/Output: [[-43.37538746362153 -38] -81.37538746362154]
Test Case: 826 | Input/Output: [[2.533536395257059 -7] -4.466463604742941]
Test Case: 827 | Input/Output: [[-49.945995874969974 49] -0.9459958749699737]
Test Case: 828 | Input/Output: [[96.97834863291024 -6] 90.97834863291024]
Test Case: 829 | Input/Output: [[32.07695105332121 -37] -4.92304894667879]
Test Case: 830 | Input/Output: [[-80.9799074854416 -29] -109.9799074854416]
Test Case: 831 | Input/Output: [[84.57356420701615 -1] 83.57356420701615]
Test Case: 832 | Input/Output: [[8.948904049678788 -1] 7.948904049678788]
Test Case: 833 | Input/Output: [[-67.72542221985742 -9] -76.72542221985742]
Test Case: 834 | Input/Output: [[46.55423417638244 -36] 10.554234176382437]
Test Case: 835 | Input/Output: [[-77.2706233619874 86] 8.729376638012596]
Test Case: 836 | Input/Output: [[-18.781650138315058 -72] -90.78165013831506]
Test Case: 837 | Input/Output: [[11.92950125559878 11] 22.92950125559878]
Test Case: 838 | Input/Output: [[24.75599804082745 77] 101.75599804082745]
Test Case: 839 | Input/Output: [[80.641285179042 98] 178.641285179042]
Test Case: 840 | Input/Output: [[66.29540559163539 5] 71.29540559163539]
Test Case: 841 | Input/Output: [[-9.1383846775488 -68] -77.1383846775488]
Test Case: 842 | Input/Output: [[83.70386569689089 -95] -11.296134303109113]
Test Case: 843 | Input/Output: [[-43.448562102339785 -94] -137.4485621023398]
Test Case: 844 | Input/Output: [[-83.62223796967947 38] -45.622237969679475]
Test Case: 845 | Input/Output: [[91.70318129144067 68] 159.70318129144067]
Test Case: 846 | Input/Output: [[-92.85209181794743 13] -79.85209181794743]
Test Case: 847 | Input/Output: [[69.7720284934021 -7] 62.772028493402104]
Test Case: 848 | Input/Output: [[-89.61061302420737 -5] -94.61061302420737]
Test Case: 849 | Input/Output: [[-16.9704719142201 91] 74.0295280857799]
Test Case: 850 | Input/Output: [[-0.9524763987301696 31] 30.04752360126983]
Test Case: 851 | Input/Output: [[56.042227945343114 47] 103.04222794534311]
Test Case: 852 | Input/Output: [[86.26898790467945 -88] -1.7310120953205512]
Test Case: 853 | Input/Output: [[-2.5846319788725083 38] 35.41536802112749]
Test Case: 854 | Input/Output: [[78.91003937402888 -73] 5.910039374028884]
Test Case: 855 | Input/Output: [[-74.51692305226906 -70] -144.51692305226908]
Test Case: 856 | Input/Output: [[-45.52304782974572 97] 51.47695217025428]
Test Case: 857 | Input/Output: [[-3.6482055042914965 -84] -87.6482055042915]
Test Case: 858 | Input/Output: [[58.28375633155903 -67] -8.716243668440967]
Test Case: 859 | Input/Output: [[-85.57431160560685 82] -3.5743116056068516]
Test Case: 860 | Input/Output: [[-17.330391692203207 13] -4.330391692203207]
Test Case: 861 | Input/Output: [[60.689803730786565 -81] -20.310196269213435]
Test Case: 862 | Input/Output: [[16.593895422923893 -15] 1.593895422923893]
Test Case: 863 | Input/Output: [[-90.829381303221 3] -87.829381303221]
Test Case: 864 | Input/Output: [[58.104383337410695 44] 102.1043833374107]
Test Case: 865 | Input/Output: [[9.600532261069404 92] 101.6005322610694]
Test Case: 866 | Input/Output: [[-54.45814913972662 33] -21.458149139726622]
Test Case: 867 | Input/Output: [[-57.92637070214892 -19] -76.92637070214892]
Test Case: 868 | Input/Output: [[-15.623301549061281 -75] -90.62330154906128]
Test Case: 869 | Input/Output: [[75.21162495923335 46] 121.21162495923335]
Test Case: 870 | Input/Output: [[43.55124238694279 -94] -50.44875761305721]
Test Case: 871 | Input/Output: [[30.190729931378627 84] 114.19072993137863]
Test Case: 872 | Input/Output: [[60.906470606885534 -66] -5.093529393114466]
Test Case: 873 | Input/Output: [[6.655125003520283 84] 90.65512500352028]
Test Case: 874 | Input/Output: [[-1.8911317416993683 1] -0.8911317416993683]
Test Case: 875 | Input/Output: [[-70.44996399926376 -29] -99.44996399926376]
Test Case: 876 | Input/Output: [[-55.32132070673199 26] -29.32132070673199]
Test Case: 877 | Input/Output: [[49.072891525644565 -67] -17.927108474355435]
Test Case: 878 | Input/Output: [[-32.814060127336035 91] 58.185939872663965]
Test Case: 879 | Input/Output: [[-35.008435612986204 83] 47.991564387013796]
Test Case: 880 | Input/Output: [[-10.350469830024053 84] 73.64953016997595]
Test Case: 881 | Input/Output: [[32.413351802680296 94] 126.4133518026803]
Test Case: 882 | Input/Output: [[23.26325454950205 23] 46.26325454950205]
Test Case: 883 | Input/Output: [[-99.66442055512941 -21] -120.66442055512941]
Test Case: 884 | Input/Output: [[-58.35006491284316 73] 14.649935087156841]
Test Case: 885 | Input/Output: [[-39.70322938473947 68] 28.296770615260527]
Test Case: 886 | Input/Output: [[-20.57064134708169 81] 60.42935865291831]
Test Case: 887 | Input/Output: [[-83.65964972598405 -17] -100.65964972598405]
Test Case: 888 | Input/Output: [[70.20735293436306 -54] 16.20735293436306]
Test Case: 889 | Input/Output: [[-6.423390705964891 49] 42.57660929403511]
Test Case: 890 | Input/Output: [[4.02264933988647 87] 91.02264933988647]
Test Case: 891 | Input/Output: [[-76.507779064662 61] -15.507779064662003]
Test Case: 892 | Input/Output: [[7.470040363369463 -23] -15.529959636630537]
Test Case: 893 | Input/Output: [[64.88085662887485 28] 92.88085662887485]
Test Case: 894 | Input/Output: [[73.10601705519872 -74] -0.8939829448012802]
Test Case: 895 | Input/Output: [[-78.46389125205235 8] -70.46389125205235]
Test Case: 896 | Input/Output: [[49.944540978736114 -31] 18.944540978736114]
Test Case: 897 | Input/Output: [[-53.85267008597165 87] 33.14732991402835]
Test Case: 898 | Input/Output: [[41.538374323861376 -60] -18.461625676138624]
Test Case: 899 | Input/Output: [[-75.1452185662169 55] -20.145218566216897]
Test Case: 900 | Input/Output: [[-72.04568714926165 -67] -139.04568714926165]
Test Case: 901 | Input/Output: [[-20.639646112092123 -73] -93.63964611209212]
Test Case: 902 | Input/Output: [[51.81657574893782 -22] 29.816575748937822]
Test Case: 903 | Input/Output: [[74.22853304012054 45] 119.22853304012054]
Test Case: 904 | Input/Output: [[-7.1981401820676325 -30] -37.19814018206763]
Test Case: 905 | Input/Output: [[-66.83544698975707 -59] -125.83544698975707]
Test Case: 906 | Input/Output: [[63.98579805168484 -44] 19.98579805168484]
Test Case: 907 | Input/Output: [[-35.10541529280134 52] 16.89458470719866]
Test Case: 908 | Input/Output: [[-80.79786071793586 31] -49.79786071793586]
Test Case: 909 | Input/Output: [[-30.681998513247137 74] 43.31800148675286]
Test Case: 910 | Input/Output: [[54.54162933762882 92] 146.54162933762882]
Test Case: 911 | Input/Output: [[26.565804810099934 88] 114.56580481009993]
Test Case: 912 | Input/Output: [[-12.875727001645814 80] 67.12427299835419]
Test Case: 913 | Input/Output: [[28.37094679177929 -65] -36.62905320822071]
Test Case: 914 | Input/Output: [[-3.5630410265917334 74] 70.43695897340827]
Test Case: 915 | Input/Output: [[32.69461477476119 -37] -4.305385225238808]
Test Case: 916 | Input/Output: [[92.58863461830614 -66] 26.588634618306145]
Test Case: 917 | Input/Output: [[-64.9592287480973 -10] -74.9592287480973]
Test Case: 918 | Input/Output: [[19.081492757111576 60] 79.08149275711158]
Test Case: 919 | Input/Output: [[28.26595767337008 -78] -49.73404232662992]
Test Case: 920 | Input/Output: [[-45.62522249540988 -27] -72.62522249540987]
Test Case: 921 | Input/Output: [[-97.16325422185443 -71] -168.16325422185443]
Test Case: 922 | Input/Output: [[-80.3633140517876 99] 18.636685948212403]
Test Case: 923 | Input/Output: [[-87.56484231160032 -86] -173.56484231160033]
Test Case: 924 | Input/Output: [[-90.48152820907688 -96] -186.48152820907688]
Test Case: 925 | Input/Output: [[29.66153097248005 1] 30.66153097248005]
Test Case: 926 | Input/Output: [[42.55628859846419 5] 47.55628859846419]
Test Case: 927 | Input/Output: [[43.11216741864655 -72] -28.88783258135345]
Test Case: 928 | Input/Output: [[95.78700378771507 91] 186.78700378771507]
Test Case: 929 | Input/Output: [[-99.52456485714802 27] -72.52456485714802]
Test Case: 930 | Input/Output: [[-51.514846890553834 29] -22.514846890553834]
Test Case: 931 | Input/Output: [[74.28712387475434 -99] -24.712876125245657]
Test Case: 932 | Input/Output: [[13.991367604145722 -31] -17.008632395854278]
Test Case: 933 | Input/Output: [[-93.31618198380734 -63] -156.31618198380733]
Test Case: 934 | Input/Output: [[-87.75591821586363 -10] -97.75591821586363]
Test Case: 935 | Input/Output: [[-71.7508770504462 -69] -140.7508770504462]
Test Case: 936 | Input/Output: [[-90.05784856752533 -64] -154.05784856752533]
Test Case: 937 | Input/Output: [[-29.877382640452126 -56] -85.87738264045213]
Test Case: 938 | Input/Output: [[57.937074188212506 -92] -34.062925811787494]
Test Case: 939 | Input/Output: [[-6.588989385765515 -51] -57.588989385765515]
Test Case: 940 | Input/Output: [[-30.72675776207501 -32] -62.72675776207501]
Test Case: 941 | Input/Output: [[99.99500599162684 91] 190.99500599162684]
Test Case: 942 | Input/Output: [[-80.61029413947398 63] -17.61029413947398]
Test Case: 943 | Input/Output: [[-42.565622218274825 56] 13.434377781725175]
Test Case: 944 | Input/Output: [[-18.15444714981689 29] 10.845552850183111]
Test Case: 945 | Input/Output: [[-67.31098366255549 18] -49.310983662555486]
Test Case: 946 | Input/Output: [[63.857557817400846 -32] 31.857557817400846]
Test Case: 947 | Input/Output: [[14.219486183475865 36] 50.219486183475865]
Test Case: 948 | Input/Output: [[92.69486788501985 67] 159.69486788501985]
Test Case: 949 | Input/Output: [[7.281394976169111 29] 36.28139497616911]
Test Case: 950 | Input/Output: [[-89.31337165973562 -28] -117.31337165973562]
Test Case: 951 | Input/Output: [[-66.86529456059738 -28] -94.86529456059738]
Test Case: 952 | Input/Output: [[41.62439523406158 14] 55.62439523406158]
Test Case: 953 | Input/Output: [[-92.01865349752576 10] -82.01865349752576]
Test Case: 954 | Input/Output: [[-47.34168359521269 -21] -68.34168359521269]
Test Case: 955 | Input/Output: [[-34.40086137513828 90] 55.59913862486172]
Test Case: 956 | Input/Output: [[83.91252778841732 30] 113.91252778841732]
Test Case: 957 | Input/Output: [[0.1779607995287904 -91] -90.82203920047121]
Test Case: 958 | Input/Output: [[-45.62634997445074 -74] -119.62634997445073]
Test Case: 959 | Input/Output: [[-60.113501315981964 23] -37.113501315981964]
Test Case: 960 | Input/Output: [[-15.05717886949975 -9] -24.05717886949975]
Test Case: 961 | Input/Output: [[14.046607099879864 10] 24.046607099879864]
Test Case: 962 | Input/Output: [[-67.43790221962232 26] -41.437902219622316]
Test Case: 963 | Input/Output: [[6.1209936000859955 -21] -14.879006399914005]
Test Case: 964 | Input/Output: [[-13.486507694340034 -7] -20.486507694340034]
Test Case: 965 | Input/Output: [[40.590917014216416 44] 84.59091701421642]
Test Case: 966 | Input/Output: [[50.53705226492835 -50] 0.5370522649283487]
Test Case: 967 | Input/Output: [[90.76058168400033 82] 172.76058168400033]
Test Case: 968 | Input/Output: [[-77.81507915024085 100] 22.184920849759152]
Test Case: 969 | Input/Output: [[-16.82759481580733 -86] -102.82759481580733]
Test Case: 970 | Input/Output: [[91.81601637960546 -34] 57.81601637960546]
Test Case: 971 | Input/Output: [[25.885177857922102 -8] 17.885177857922102]
Test Case: 972 | Input/Output: [[34.79570587432519 84] 118.7957058743252]
Test Case: 973 | Input/Output: [[-18.69584457118563 58] 39.30415542881437]
Test Case: 974 | Input/Output: [[77.18942771038414 45] 122.18942771038414]
Test Case: 975 | Input/Output: [[68.31522506464529 -83] -14.68477493535471]
Test Case: 976 | Input/Output: [[13.589287915535351 75] 88.58928791553535]
Test Case: 977 | Input/Output: [[-8.270239763066485 -93] -101.27023976306648]
Test Case: 978 | Input/Output: [[21.532375846605163 13] 34.53237584660516]
Test Case: 979 | Input/Output: [[79.38893705902848 -48] 31.38893705902848]
Test Case: 980 | Input/Output: [[81.68072209589798 -7] 74.68072209589798]
Test Case: 981 | Input/Output: [[-94.83925008178741 -63] -157.8392500817874]
Test Case: 982 | Input/Output: [[-34.22880275083067 -98] -132.22880275083065]
Test Case: 983 | Input/Output: [[26.104649886285003 48] 74.104649886285]
Test Case: 984 | Input/Output: [[-42.645351409229825 27] -15.645351409229825]
Test Case: 985 | Input/Output: [[-62.9591612056555 31] -31.959161205655498]
Test Case: 986 | Input/Output: [[69.54402547772148 77] 146.54402547772148]
Test Case: 987 | Input/Output: [[-61.44950813525249 -77] -138.4495081352525]
Test Case: 988 | Input/Output: [[84.2050053759894 96] 180.2050053759894]
Test Case: 989 | Input/Output: [[-76.06188761144512 -22] -98.06188761144512]
Test Case: 990 | Input/Output: [[27.5165318378223 57] 84.5165318378223]
Test Case: 991 | Input/Output: [[18.373096221359518 86] 104.37309622135952]
Test Case: 992 | Input/Output: [[1.37757932211737 80] 81.37757932211737]
Test Case: 993 | Input/Output: [[36.55365950374778 65] 101.55365950374778]
Test Case: 994 | Input/Output: [[-65.1264453887509 73] 7.873554611249105]
Test Case: 995 | Input/Output: [[52.761020716872935 24] 76.76102071687293]
Test Case: 996 | Input/Output: [[-75.6580272248444 -39] -114.6580272248444]
Test Case: 997 | Input/Output: [[98.51911652757116 88] 186.51911652757116]
Test Case: 998 | Input/Output: [[96.83533676361617 18] 114.83533676361617]
Test Case: 999 | Input/Output: [[36.00590556502229 -65] -28.99409443497771]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 57 82 87 102 1 113 66 -109 42 45 -3 -34 125 42 -5 86
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction integer_mod} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_pop} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction float_pop} {:instruction float_mod} {:instruction integer_mult} {:instruction float_sub} {:instruction tag_float_857} {:instruction in1} {:instruction float_dec} {:instruction print_float} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_add} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mult} {:instruction float_inc} {:instruction float_shove} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_max} {:instruction tag_integer_109} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction tag_integer_608} {:instruction print_integer})
Best program: (float_dup integer_mod integer_swap integer_flush float_pop float_dec float_stackdepth integer_inc float_dup_items float_yankdup float_inc float_yankdup integer_add in1 integer_mod float_inc float_pop float_mod integer_mult float_sub tag_float_857 in1 float_dec print_float integer_dec integer_dup_items integer_dup_items float_dup_times float_pop integer_add float_dup_items print_float integer_min float_flush integer_mult float_inc float_shove integer_min integer_fromfloat float_max float_dup_times in2 float_max tag_integer_109 float_dec integer_pop integer_inc float_dec float_add integer_yankdup integer_rot tag_integer_608 print_integer)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 18051.9744653
Median total errors in population: 25337.0
Error averages by case: (733.6745034000012 14.075 700.3228324999999 13.386 722.9255773999977 14.066 711.2619211999984 14.02 695.7874644999988 13.282 689.9232442000002 13.092 720.3589035999988 13.18 729.6302146999993 13.302 706.753812099999 13.283 732.2409251000022 13.321 699.652963800002 12.445 706.7517420999988 13.123 703.2791038999997 12.539 706.0063094000005 13.309 704.3767163000003 13.569 704.3771259000014 13.102 712.7546836000018 12.528 704.9267251000011 12.523 703.8290809000002 13.98 697.5229168000019 11.722 702.8772597000003 12.405 705.8011003999982 13.292 692.5923552000005 12.497 735.5825975000018 13.17 700.3203860000002 13.233)
Error minima by case: (48.7707 3 0.6428 8 6.7142 3 0.3344 2 0.9999 2 0.0122 8 0.3946 1 31.1006 2 0.1253 8 23.2207 3 1.3895 2 0.7711 1 1.5201 2 0.7482 7 1.1552 9 3.5422 8 2.6037 2 1.9313 2 0.2196 8 0.3002 2 0.1284 8 0.7414 1 1.0 1 12.0038 1 0.5974 2)
Average genome size in population (length): 52.055
Average program size in population (points): 53.055
Average percent parens in population: 0.040
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.319
Error (vector) diversity:			 0.353
Behavioral diversity:				 0.372
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1305350
--- Timings ---
Current time: 1529615933577 milliseconds
Total Time:           3.9 seconds
Initialization:       0.1 seconds,  2.8%
Reproduction:         0.6 seconds, 14.8%
Fitness Testing:      3.2 seconds, 82.3%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction float_pop})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 integer_mod float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult float_pop)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 5593.963184100003
Median total errors in population: 1750.7128000000005
Error averages by case: (270.43133810000205 11.173 192.46661499999976 12.201 244.35223530000178 11.179 227.1784103000005 12.758 184.33773160000123 10.558 175.80874830000025 11.714 235.99003199999805 10.203 259.36355099999827 10.531 202.5861316000005 12.085 265.38826089999844 10.557 189.42276619999978 9.804 206.41085179999783 10.206 203.86485019999938 9.906 217.30913190000038 12.136 207.1455847000005 12.705 203.82280329999975 11.553 215.1759123999979 9.795 198.23024230000075 9.929 206.21847540000044 12.48 179.40432589999944 9.111 194.22933739999937 11.238 213.07731290000154 10.537 172.19814460000154 9.822 275.04636849999804 10.21 181.6580224999994 10.455)
Error minima by case: (50.2717 3 0.6428 8 8.2152 3 0.3344 2 0.9999 2 0.0122 9 2.5028 1 19.0 2 0.7054 8 23.2207 2 1.3895 2 1.7711 1 0.6801 2 0.7482 7 3.8448 8 3.9479 8 2.6037 2 4.0786 2 0.2196 8 0.3002 2 0.1284 8 0.7414 1 0.0056 1 1.0 1 1.3387 2)
Average genome size in population (length): 55.528
Average program size in population (points): 56.528
Average percent parens in population: 0.024
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.524
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.767
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.767
Total error diversity:				 0.259
Error (vector) diversity:			 0.277
Behavioral diversity:				 0.297
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2697337
--- Timings ---
Current time: 1529615938622 milliseconds
Total Time:           9.3 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.6 seconds, 38.8%
Fitness Testing:      4.9 seconds, 52.2%
Report:               0.7 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction integer_mod} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_pop} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction integer_add} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction float_pop} {:instruction float_mod} {:instruction integer_mult} {:instruction float_sub} {:instruction tag_float_857} {:instruction in1} {:instruction float_dec} {:instruction print_float} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_add} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mult} {:instruction float_inc} {:instruction float_shove} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_max} {:instruction tag_integer_109} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction tag_integer_608} {:instruction print_integer})
Best program: (float_dup integer_mod integer_swap integer_flush float_pop float_dec float_stackdepth integer_inc float_dup_items float_yankdup float_inc float_yankdup integer_add in1 integer_mod float_inc float_pop float_mod integer_mult float_sub tag_float_857 in1 float_dec print_float integer_dec integer_dup_items integer_dup_items float_dup_times float_pop integer_add float_dup_items print_float integer_min float_flush integer_mult float_inc float_shove integer_min integer_fromfloat float_max float_dup_times in2 float_max tag_integer_109 float_dec integer_pop integer_inc float_dec float_add integer_yankdup integer_rot tag_integer_608 print_integer)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 4198.603664199993
Median total errors in population: 1366.1233000000002
Error averages by case: (193.7462693000005 6.745 149.3172006000004 12.312 180.71453180000063 6.822 176.43917710000014 12.273 125.73999829999983 5.858 123.86181669999965 11.769 169.76635499999983 5.342 188.5688884999994 6.327 160.00935629999944 12.333 181.4350012999994 6.349 131.04334800000072 5.659 140.39967830000015 5.364 155.18792369999971 5.735 198.7216208999997 12.173 175.7080552000001 13.138 160.9752264000002 10.667 149.2932809999992 5.528 139.9641020999996 5.647 163.12309580000024 11.754 127.67078009999973 5.207 164.08888760000016 10.901 189.46270440000052 5.963 119.04598349999996 5.065 201.61392409999925 5.565 132.37745819999975 5.833)
Error minima by case: (59.2717 3 2.2504 9 24.2152 3 0.3344 2 0.9999 2 0.0122 9 31.1015 1 20.0 1 6.2946 8 38.0 2 4.0 2 8.2887 1 17.3199 2 2.3297 8 16.4316 9 20.2835 9 32.0 2 8.0786 2 14.3727 9 11.0 2 2.1284 9 0.7414 1 1.0 1 2.0 1 1.3387 2)
Average genome size in population (length): 44.67
Average program size in population (points): 45.67
Average percent parens in population: 0.031
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.023
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.595
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.595
Total error diversity:				 0.096
Error (vector) diversity:			 0.103
Behavioral diversity:				 0.11
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3816762
--- Timings ---
Current time: 1529615941922 milliseconds
Total Time:          12.5 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.0 seconds, 39.9%
Fitness Testing:      6.3 seconds, 50.7%
Report:               1.1 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction float_pop})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_sub float_tan float_add float_flush tagged_365 integer_mod float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult float_pop)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 3334.3274629000007
Median total errors in population: 1351.0
Error averages by case: (165.09447849999998 4.022 112.96109799999998 12.28 158.06652099999997 4.029 155.44232449999996 9.583 93.2845414 3.035 88.73484180000001 11.864 141.98466829999998 2.669 155.14863010000002 3.77 140.04422259999998 12.274 138.9939688 3.946 84.67198160000002 2.989 98.8693431 2.474 111.3789647 2.99 164.90331990000007 12.227 154.27340339999998 13.218 130.0674893 10.174 111.06372369999998 3.021 104.31352199999999 3.003 131.28093439999998 11.53 91.0502187 2.916 137.8808789 10.34 160.5362585 2.775 78.86077899999998 2.063 171.59957969999996 2.7 100.845771 3.084)
Error minima by case: (60.2717 3 4.669 9 25.2152 3 0.3344 2 4.2588 2 2.0122 9 32.1015 1 20.0 1 14.6357 9 38.0 2 4.0 2 9.0 1 25.661 2 4.7482 9 26.9937 10 22.4578 9 26.0552 2 0.2625 2 26.1727 10 11.0 2 3.1284 8 13.0001 1 0.0 0 2.0 1 12.0 2)
Average genome size in population (length): 35.362
Average program size in population (points): 36.362
Average percent parens in population: 0.035
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.51475
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 110
Genome diversity (% unique Plush genomes):	 0.504
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 110
Syntactic diversity (% unique Push programs):	 0.504
Total error diversity:				 0.035
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4702487
--- Timings ---
Current time: 1529615945504 milliseconds
Total Time:          16.1 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.7 seconds, 41.3%
Fitness Testing:      7.9 seconds, 48.7%
Report:               1.5 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_mod} {:instruction float_dec} {:instruction float_shove} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction float_swap} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction float_pop})
Best program: (integer_mod float_dec float_shove integer_sub integer_fromfloat integer_dup float_swap integer_mod float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult float_pop)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2555.7002811
Median total errors in population: 1340.0
Error averages by case: (130.2783016 3.625 82.3765907 12.183 123.42220180000001 3.626 127.1125647 3.434 56.791625100000005 2.629 60.343943800000005 11.251 106.36233909999999 2.64 129.0851478 3.571 107.7186254 12.193 112.3199047 3.615 57.3365492 2.644 63.728679400000004 2.63 80.7133376 2.615 136.242451 12.157 121.7539299 13.174 100.523513 10.195 83.5904593 2.668 76.81944889999998 2.661 101.42943949999997 11.249 63.537070099999994 2.591 104.66650779999999 10.248 128.2926222 1.838 49.3764978 1.659 146.10750689999998 1.782 66.18702379999999 2.706)
Error minima by case: (23.7283 3 5.5839 8 51.7848 3 81.0 2 2.7412 2 9.8714 10 26.8985 1 9.1006 1 40.7054 10 34.7793 2 4.0 2 9.0 1 29.6801 2 5.7482 11 26.9937 10 32.6491 9 15.3963 2 3.0786 2 27.1727 8 8.3002 2 2.2049 9 14.0001 1 0.0 0 0.0 0 12.0 2)
Average genome size in population (length): 34.76
Average program size in population (points): 35.76
Average percent parens in population: 0.030
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.039875
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 222
Genome diversity (% unique Plush genomes):	 0.502
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 222
Syntactic diversity (% unique Push programs):	 0.502
Total error diversity:				 0.023
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5572412
--- Timings ---
Current time: 1529615948868 milliseconds
Total Time:          19.6 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.2 seconds, 42.0%
Fitness Testing:      9.4 seconds, 47.8%
Report:               1.9 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction float_dec} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_shove} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction float_pop} {:instruction float_mod} {:instruction integer_mult} {:instruction float_sub} {:instruction tag_float_857} {:instruction in1} {:instruction float_dec} {:instruction print_float} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction integer_dup_items} {:instruction float_dup_times} {:instruction float_pop} {:instruction integer_add} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_min} {:instruction float_flush} {:instruction integer_mult} {:instruction float_inc} {:instruction float_shove} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction float_max} {:instruction float_dup_times} {:instruction in2} {:instruction float_max} {:instruction tag_integer_109} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction integer_rot})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 float_dec float_stackdepth integer_inc float_dup_items float_yankdup float_inc float_yankdup float_shove in1 integer_mod float_inc float_pop float_mod integer_mult float_sub tag_float_857 in1 float_dec print_float integer_dec integer_dup_items integer_dup_items float_dup_times float_pop integer_add float_dup_items print_float integer_min float_flush integer_mult float_inc float_shove integer_min integer_fromfloat float_max float_dup_times in2 float_max tag_integer_109 float_dec integer_pop integer_inc float_dec float_add integer_yankdup integer_rot)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2614.806653
Median total errors in population: 1340.0
Error averages by case: (133.69390260000003 3.657 87.0322086 12.229 126.8609101 3.656 131.4365588 2.858 60.7369691 2.658 65.3911526 11.24 109.87368520000001 2.686 130.3062421 3.6 107.966956 12.203 113.39790980000001 3.585 58.2150443 2.622 63.5868182 2.664 85.33003629999999 2.644 140.6695552 12.182 122.00530679999999 13.187 104.951953 10.258 84.6613814 2.639 77.90967069999999 2.641 105.8806813 11.213 64.5833753 2.574 104.9176664 10.252 128.4252097 1.78 54.176444599999996 1.672 147.3772097 1.716 66.3188052 2.685)
Error minima by case: (78.1386 3 4.5842 10 36.0821 3 15.5325 2 0.7355 2 1.0064 9 24.9684 1 81.0 3 39.7054 9 63.0 2 5.0 2 6.9041 1 28.6801 2 5.0315 10 27.1552 10 20.5479 9 33.0 2 26.0 2 14.6371 8 12.0 2 2.1284 9 1.0058 1 0.0 0 99.0 1 1.6031 2)
Average genome size in population (length): 34.76
Average program size in population (points): 35.76
Average percent parens in population: 0.030
Minimum age in population: 5.0
Maximum age in population: 9.3125
Average age in population: 7.5390625
Median age in population: 7.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 171
Genome diversity (% unique Plush genomes):	 0.582
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 171
Syntactic diversity (% unique Push programs):	 0.582
Total error diversity:				 0.018
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6442412
--- Timings ---
Current time: 1529615952062 milliseconds
Total Time:          22.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.5 seconds, 42.0%
Fitness Testing:     10.8 seconds, 47.9%
Report:               2.2 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction float_yank} {:instruction float_mod} {:instruction integer_mult} {:instruction float_sub} {:instruction tag_float_857} {:instruction in1} {:instruction float_dec} {:instruction print_float} {:instruction integer_dec})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 integer_mod float_sub integer_swap integer_dup integer_flush in1 integer_mod float_inc float_yank float_mod integer_mult float_sub tag_float_857 in1 float_dec print_float integer_dec)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2433.0088149000003
Median total errors in population: 1340.0
Error averages by case: (127.31889600000001 3.573 78.4655742 12.122 120.4361325 3.571 125.0477522 2.814 53.83987589999999 2.573 56.5693259 11.171 103.32275619999999 2.574 122.9336275 3.527 102.2782563 12.118 105.9435048 3.514 50.3790141 2.544 57.703069299999996 2.564 76.70169709999999 2.556 132.55933170000003 12.107 116.41347760000001 13.089 96.5802584 10.18 76.97776859999999 2.556 70.16470910000001 2.554 97.51078869999999 11.151 56.744733499999995 2.503 99.2682458 10.16 122.9561994 1.678 45.301141 1.585 140.11413080000003 1.65 60.45354830000001 2.591)
Error minima by case: (69.0402 3 4.7847 7 26.9837 3 6.4341 2 6.0 2 11.9878 10 15.87 1 18.0 2 9.0855 9 36.0 2 5.0 2 6.9041 1 1.9398 2 5.0943 9 3.4647 10 32.6811 9 33.0 2 23.4588 2 26.6358 8 0.6803 2 3.3065 9 14.0001 1 0.0 0 0.0 0 13.0 2)
Average genome size in population (length): 34.788
Average program size in population (points): 35.788
Average percent parens in population: 0.030
Minimum age in population: 6.0
Maximum age in population: 11.09375
Average age in population: 9.04634375
Median age in population: 9.09375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 138
Genome diversity (% unique Plush genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 138
Syntactic diversity (% unique Push programs):	 0.627
Total error diversity:				 0.017
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7313362
--- Timings ---
Current time: 1529615955459 milliseconds
Total Time:          26.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.0 seconds, 42.2%
Fitness Testing:     12.3 seconds, 47.3%
Report:               2.6 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_swap} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction float_pop})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 integer_mod float_sub integer_swap integer_dup float_sub integer_swap float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult float_pop)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2622.7985869
Median total errors in population: 1340.0
Error averages by case: (134.8129557 3.687 86.10043250000001 12.163 127.82078340000001 3.683 131.42779839999997 2.871 61.7069824 2.69 63.2558715 11.206 110.87565490000001 2.697 130.32947099999998 3.623 109.8325243 12.143 113.4819903 3.59 58.38490470000001 2.638 65.676537 2.686 84.43402649999999 2.649 139.7390674 12.13 123.7839099 13.113 104.0170138 10.219 84.75248300000001 2.652 77.99704580000001 2.649 104.9435038 11.166 64.68318500000001 2.582 106.71899720000002 10.178 130.135605 1.809 53.2609575 1.674 147.3644432 1.762 68.2914427 2.711)
Error minima by case: (78.1386 3 3.7754 10 36.0821 3 15.5325 2 6.0 2 10.9878 9 24.9684 1 18.0 2 41.7054 10 36.0 2 5.0 2 6.9041 1 30.3909 2 4.7482 10 28.2476 10 4.5118 9 33.0 2 26.0 2 1.3991 8 12.0 2 3.7446 8 12.0001 1 0.0 0 0.0 0 12.5974 2)
Average genome size in population (length): 34.62
Average program size in population (points): 35.62
Average percent parens in population: 0.030
Minimum age in population: 8.3125
Maximum age in population: 12.609375
Average age in population: 10.531109375
Median age in population: 10.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 94
Genome diversity (% unique Plush genomes):	 0.674
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 94
Syntactic diversity (% unique Push programs):	 0.674
Total error diversity:				 0.022
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 8179962
--- Timings ---
Current time: 1529615958828 milliseconds
Total Time:          29.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.5 seconds, 42.2%
Fitness Testing:     13.9 seconds, 47.0%
Report:               3.1 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction float_shove} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction 75} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_flush} {:instruction integer_rot} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction float_pop})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush float_shove integer_mod float_sub integer_swap integer_dup integer_flush in1 integer_yankdup 75 83 integer_mult in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec integer_flush integer_rot print_float float_stackdepth float_mult float_pop)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2419.9846525000003
Median total errors in population: 1340.0
Error averages by case: (127.6917728 3.58 77.5242359 12.132 120.67940159999999 3.572 125.26598589999999 2.825 53.8262334 2.58 55.5712799 11.188 103.58416489999999 2.586 121.80479079999999 3.53 102.1273156 12.12 104.85704590000002 3.503 49.3472993 2.55 57.954036499999994 2.576 75.7050092 2.561 131.6188988 12.113 116.26810479999999 13.095 95.77952470000001 10.189 75.8712503 2.56 69.1005571 2.559 96.68192260000001 11.157 55.732694800000004 2.501 99.165856 10.15 122.90303109999999 1.696 44.3183365 1.578 138.96627969999997 1.668 60.4706244 2.6)
Error minima by case: (83.0 3 3.7754 10 76.0 3 81.0 2 6.0 2 10.9878 9 58.0 1 18.0 2 5.3786 10 36.0 2 5.0 2 10.0 1 5.6467 2 4.7482 10 7.1716 10 32.5422 9 1.0544 2 19.7519 2 26.6313 10 3.0266 2 3.1284 9 13.0001 1 0.0 0 0.0 0 13.0 2)
Average genome size in population (length): 34.014
Average program size in population (points): 35.014
Average percent parens in population: 0.030
Minimum age in population: 9.5625
Maximum age in population: 13.78125
Average age in population: 12.0217109375
Median age in population: 12.046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.017
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 9031237
--- Timings ---
Current time: 1529615961943 milliseconds
Total Time:          32.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.8 seconds, 42.4%
Fitness Testing:     15.3 seconds, 47.0%
Report:               3.4 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54934.0
Test mean error for best: 27.46700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -16.2945974758
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -71.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -43.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -50.8716282911
Correct output: -14.0000938255 | Program output: -94.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -28.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction float_yank} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_shove})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 float_yank integer_pop float_dec float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_shove)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 58.0 12 64.0 3 6.0 2 11.0 2 34.0 2 93.0 12 73.0 13 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 55.0 10 80.0 1 1.0 1 100.0 1 14.0 2]
Total: 1340.0
Mean: 26.8
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2814.2384187000002
Median total errors in population: 1340.0
Error averages by case: (140.35002339999997 3.795 94.5032634 12.174 133.26190400000002 3.792 137.07178989999997 2.962 66.6310388 2.794 72.19511490000002 11.242 116.6489567 2.817 139.50414829999997 3.747 115.49564210000001 12.167 122.81785679999999 3.712 68.16097340000002 2.759 72.72234789999999 2.816 92.8860405 2.759 147.61588160000002 12.147 130.1333616 13.133 111.9753986 10.259 94.29584759999999 2.776 87.40009409999999 2.775 113.20715469999999 11.212 73.77093189999998 2.694 113.19684219999998 10.217 136.5335363 1.96 61.2493217 1.785 156.41021449999997 1.909 74.9567338 2.841)
Error minima by case: (83.0 3 4.5839 10 76.0 3 81.0 2 6.0 2 8.8714 10 58.0 1 81.0 3 39.7054 9 63.0 2 5.0 2 10.0 1 28.6801 2 5.0436 9 27.1552 11 32.6491 9 33.0 2 26.0 2 27.1727 10 12.0 2 2.1284 9 14.0001 1 0.0 0 99.0 1 13.0 2)
Average genome size in population (length): 33.443
Average program size in population (points): 34.443
Average percent parens in population: 0.031
Minimum age in population: 11.0
Maximum age in population: 15.40234375
Average age in population: 13.509609375
Median age in population: 13.544921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.723
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.723
Total error diversity:				 0.018
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 9868337
--- Timings ---
Current time: 1529615965082 milliseconds
Total Time:          35.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.2 seconds, 42.5%
Fitness Testing:     16.7 seconds, 46.8%
Report:               3.7 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54440.0
Test mean error for best: 27.22000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 72.8993650016 
Correct output: 41.7054025242  | Program output: -15.2945974758
Correct output: 161.7793110649 | Program output: 98.7793110649 
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -70.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -42.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 49.3963074555 
Correct output: 56.0786467305  | Program output: 30.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 21.300212358  
Correct output: 4.1283717089   | Program output: -49.8716282911
Correct output: -14.0000938255 | Program output: -93.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 73.9961793209 
Correct output: -14.5973679613 | Program output: -27.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 81.0 3 57.0 12 63.0 3 5.0 2 10.0 1 34.0 2 93.0 12 72.0 13 55.0 10 33.0 2 26.0 2 56.0 11 12.0 2 54.0 10 79.0 2 1.0 1 99.0 2 13.0 2]
Total: 1328.0
Mean: 26.56
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2942.4265272000002
Median total errors in population: 1340.0
Error averages by case: (146.0655355 3.867 99.48492579999998 12.175 139.0533969 3.859 143.4391002 3.008 73.7481722 2.873 78.13524140000001 11.233 122.34512180000003 2.893 143.52565969999998 3.817 121.10696070000002 12.158 127.02342269999998 3.794 72.4969976 2.832 77.79193889999999 2.877 97.89591349999999 2.837 152.0976403 12.145 134.8213821 13.115 117.2055407 10.273 98.42312019999997 2.847 91.70855569999998 2.843 118.087715 11.23 78.56471330000001 2.764 118.0011411 10.221 141.0864199 2.009 67.2834786 1.886 160.3493379 1.997 80.23609549999998 2.896)
Error minima by case: (72.0278 3 3.7754 7 29.9713 3 9.4217 2 0.8535 2 0.5825 9 18.8576 1 63.6207 3 41.7054 9 63.0 2 5.0 2 6.9041 1 30.6801 2 4.7482 9 28.1646 10 22.1369 9 7.8824 2 26.0 2 16.2261 8 12.0 2 3.3065 9 2.5948 1 0.0 0 82.7175 1 3.1921 2)
Average genome size in population (length): 33.525
Average program size in population (points): 34.525
Average percent parens in population: 0.031
Minimum age in population: 12.59375
Maximum age in population: 16.958984375
Average age in population: 14.951740234375
Median age in population: 14.9873046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.021
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 10707912
--- Timings ---
Current time: 1529615968408 milliseconds
Total Time:          39.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.8 seconds, 42.8%
Fitness Testing:     18.3 seconds, 46.7%
Report:               4.0 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54440.0
Test mean error for best: 27.22000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 72.8993650016 
Correct output: 41.7054025242  | Program output: -15.2945974758
Correct output: 161.7793110649 | Program output: 98.7793110649 
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -70.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -42.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 49.3963074555 
Correct output: 56.0786467305  | Program output: 30.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 21.300212358  
Correct output: 4.1283717089   | Program output: -49.8716282911
Correct output: -14.0000938255 | Program output: -93.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 73.9961793209 
Correct output: -14.5973679613 | Program output: -27.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 81.0 3 57.0 12 63.0 3 5.0 2 10.0 1 34.0 2 93.0 12 72.0 13 55.0 10 33.0 2 26.0 2 56.0 11 12.0 2 54.0 10 79.0 2 1.0 1 99.0 2 13.0 2]
Total: 1328.0
Mean: 26.56
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2913.7977697
Median total errors in population: 1340.0
Error averages by case: (144.6380471 3.793 98.5849085 12.199 137.87084550000003 3.79 142.4367474 2.949 72.5902951 2.797 77.0247209 11.24 121.11494990000003 2.822 142.01600319999997 3.735 120.14620860000001 12.187 125.40017719999999 3.715 71.11613300000002 2.759 76.5437052 2.806 96.93940509999999 2.771 151.65301689999998 12.168 134.0853051 13.151 116.30308489999999 10.272 97.09165579999998 2.771 90.43464479999999 2.768 117.22885899999999 11.234 77.31795100000001 2.688 117.278083 10.239 140.59638640000003 1.927 66.09624639999998 1.81 158.83220179999998 1.893 79.15218789999999 2.822)
Error minima by case: (22.7283 3 3.7754 8 24.2152 3 1.3344 2 1.7412 2 3.0122 9 24.9684 1 10.1006 2 14.2946 10 33.7793 2 4.0 2 6.9041 1 29.6801 2 4.7482 10 29.0168 10 23.4578 9 14.3963 2 2.0786 2 26.6313 8 7.3002 2 4.8216 9 13.0001 1 0.0 0 27.0038 1 12.0 2)
Average genome size in population (length): 33.26
Average program size in population (points): 34.26
Average percent parens in population: 0.031
Minimum age in population: 13.7421875
Maximum age in population: 18.3681640625
Average age in population: 16.4692890625
Median age in population: 16.49267578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.719
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.719
Total error diversity:				 0.021
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 11540837
--- Timings ---
Current time: 1529615971486 milliseconds
Total Time:          42.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.1 seconds, 42.8%
Fitness Testing:     19.7 seconds, 46.7%
Report:               4.3 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54440.0
Test mean error for best: 27.22000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 72.8993650016 
Correct output: 41.7054025242  | Program output: -15.2945974758
Correct output: 161.7793110649 | Program output: 98.7793110649 
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -70.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -42.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 49.3963074555 
Correct output: 56.0786467305  | Program output: 30.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 21.300212358  
Correct output: 4.1283717089   | Program output: -49.8716282911
Correct output: -14.0000938255 | Program output: -93.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 73.9961793209 
Correct output: -14.5973679613 | Program output: -27.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_flush tagged_365 float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 81.0 3 57.0 12 63.0 3 5.0 2 10.0 1 34.0 2 93.0 12 72.0 13 55.0 10 33.0 2 26.0 2 56.0 11 12.0 2 54.0 10 79.0 2 1.0 1 99.0 2 13.0 2]
Total: 1328.0
Mean: 26.56
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 3010.520286300001
Median total errors in population: 1340.0
Error averages by case: (148.9391199 3.883 102.6630761 12.141 142.14678490000003 3.874 146.5939914 3.036 76.88087119999999 2.881 80.55674560000003 11.213 125.4617649 2.889 145.49099969999997 3.8 123.7712054 12.126 128.9148888 3.789 74.2763167 2.815 80.98015050000001 2.861 100.7176244 2.816 155.38878169999998 12.119 137.5740716 13.076 120.406708 10.251 100.6446131 2.821 94.20269540000001 2.825 121.29564 11.229 81.28776060000001 2.741 120.97175159999999 10.188 144.1141925 2.039 69.45519099999999 1.866 162.2577009 2.0 83.3336404 2.915)
Error minima by case: (83.0 3 4.7847 11 76.0 3 81.0 2 6.0 2 11.9878 10 58.0 1 70.8994 3 41.1518 9 63.0 2 5.0 2 10.0 1 29.7183 2 5.0943 9 29.0181 11 33.5422 10 0.6037 2 26.0 2 27.5371 10 12.0 2 4.1284 9 12.0001 1 0.0 0 89.9962 1 12.5974 2)
Average genome size in population (length): 32.868
Average program size in population (points): 33.868
Average percent parens in population: 0.031
Minimum age in population: 15.3671875
Maximum age in population: 20.056640625
Average age in population: 17.98275439453125
Median age in population: 18.021240234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.743
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.743
Total error diversity:				 0.016
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 12364087
--- Timings ---
Current time: 1529615974654 milliseconds
Total Time:          45.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.5 seconds, 43.0%
Fitness Testing:     21.1 seconds, 46.5%
Report:               4.7 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 54440.0
Test mean error for best: 27.22000
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 72.8993650016 
Correct output: 41.7054025242  | Program output: -15.2945974758
Correct output: 161.7793110649 | Program output: 98.7793110649 
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -70.2289340046
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -42.8448241146
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 49.3963074555 
Correct output: 56.0786467305  | Program output: 30.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 21.300212358  
Correct output: 4.1283717089   | Program output: -49.8716282911
Correct output: -14.0000938255 | Program output: -93.0000938255
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 73.9961793209 
Correct output: -14.5973679613 | Program output: -27.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_stackdepth} {:instruction float_add} {:instruction float_flush} {:instruction tagged_365} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_stackdepth float_add float_flush tagged_365 float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 81.0 3 57.0 12 63.0 3 5.0 2 10.0 1 34.0 2 93.0 12 72.0 13 55.0 10 33.0 2 26.0 2 56.0 11 12.0 2 54.0 10 79.0 2 1.0 1 99.0 2 13.0 2]
Total: 1328.0
Mean: 26.56
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2796.4364735000004
Median total errors in population: 1340.0
Error averages by case: (140.50769449999999 3.794 94.6479131 12.171 133.184486 3.794 136.3139679 3.059 65.82525319999999 2.793 71.3697888 11.238 116.80759949999998 2.806 138.38473929999998 3.754 113.56734099999998 12.151 121.80614069999999 3.73 67.09433090000002 2.767 71.9921621 2.696 92.9938353 2.759 147.86123980000002 12.148 128.9893105 13.115 111.668297 10.26 93.1597554 2.795 86.08589070000001 2.788 113.25103779999999 11.214 72.11448340000001 2.709 112.12594270000001 10.214 135.4362768 2.094 60.59684 1.807 155.3037436 2.05 73.78740349999998 2.855)
Error minima by case: (23.7283 3 4.5842 8 51.7848 3 81.0 2 2.7412 2 9.8714 9 26.8985 1 9.1006 3 20.7592 9 34.7793 2 5.0 2 10.0 1 30.6801 2 4.7482 9 26.9937 10 31.6491 9 0.6037 2 3.0786 2 25.7427 8 8.3002 2 3.7128 9 12.0001 1 0.0 0 26.0038 1 3.7537 2)
Average genome size in population (length): 32.209
Average program size in population (points): 33.209
Average percent parens in population: 0.032
Minimum age in population: 16.3671875
Maximum age in population: 21.373779296875
Average age in population: 19.548671875
Median age in population: 19.586669921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.026
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 13170212
--- Timings ---
Current time: 1529615978035 milliseconds
Total Time:          48.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.0 seconds, 43.1%
Fitness Testing:     22.6 seconds, 46.5%
Report:               5.0 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 51793.279899999994
Test mean error for best: 25.89664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 34.0 2 93.0 12 30.1552 12 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 5.1284 10 13.0001 10 1.0 1 100.0 1 13.5974 11]
Total: 1236.8154000000002
Mean: 24.736307
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2534.593592200001
Median total errors in population: 1328.0
Error averages by case: (133.3346296 3.654 82.23193429999999 12.149 126.26774830000002 3.65 130.7440285 2.965 59.8413075 2.659 60.532592300000005 11.195 109.3178135 2.664 125.60068179999996 3.653 106.11694280000002 12.117 108.96155199999997 3.644 53.2987108 2.663 62.91820820000001 2.168 80.52998029999999 2.637 135.9281382 12.128 119.92514909999998 13.092 100.3751804 10.212 79.57884150000001 2.688 72.66850620000001 2.68 101.2645287 11.191 59.29680969999999 2.612 102.86876230000001 10.172 126.33331850000003 2.369 49.3246675 1.684 142.72626259999996 2.327 64.8912976 2.743)
Error minima by case: (60.2717 3 1.6666 7 25.2152 3 0.3344 2 4.2588 2 2.0122 9 32.1015 1 18.0 2 15.2946 9 36.0 2 0.6061 2 9.0 1 30.3909 2 1.5874 9 26.9937 9 22.4578 9 0.6037 2 15.3521 2 20.2957 10 11.0 2 3.2049 8 6.6645 1 0.0 0 0.0 0 7.2618 2)
Average genome size in population (length): 32.279
Average program size in population (points): 33.279
Average percent parens in population: 0.031
Minimum age in population: 17.99169921875
Maximum age in population: 23.0521240234375
Average age in population: 21.1455771484375
Median age in population: 21.16436767578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 168
Genome diversity (% unique Plush genomes):	 0.597
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 168
Syntactic diversity (% unique Push programs):	 0.597
Total error diversity:				 0.036
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 13977812
--- Timings ---
Current time: 1529615981109 milliseconds
Total Time:          51.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.3 seconds, 43.0%
Fitness Testing:     24.0 seconds, 46.4%
Report:               5.4 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 51793.279899999994
Test mean error for best: 25.89664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -61.2716840824
Correct output: -5.6690006657  | Program output: 30.3309993343 
Correct output: -103.2151508674 | Program output: -26.2151508674
Correct output: -82.6655718784 | Program output: -0.6655718784 
Correct output: -12.2587539292 | Program output: -5.2587539292 
Correct output: -11.987804337  | Program output: 1.012195663   
Correct output: -92.1014631566 | Program output: -33.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 64.6800990656 
Correct output: -5.7482231862  | Program output: 87.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 21.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 28.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 14.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [84.0 3 36.0 12 77.0 3 82.0 2 7.0 2 13.0 11 59.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 34.0 2 93.0 12 30.1552 12 55.0 10 34.0 2 27.0 2 56.0 11 13.0 2 5.1284 10 13.0001 10 1.0 1 100.0 1 13.5974 11]
Total: 1236.8154000000002
Mean: 24.736307
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2363.5300634000014
Median total errors in population: 1328.0
Error averages by case: (124.17688129999999 3.644 77.25232489999999 12.093 116.89338270000003 3.637 120.74037799999996 2.933 48.96280420000001 2.649 54.62046310000001 11.157 99.971789 2.64 121.50809179999997 3.63 96.37698050000003 12.055 104.81016649999998 3.633 48.960346799999996 2.639 54.465436100000005 1.94 75.67943839999998 2.611 131.21918930000004 12.095 110.77304019999993 13.047 95.0905092 10.197 75.28265369999998 2.662 68.1692839 2.653 96.3172676 11.166 54.334143 2.585 93.44236300000003 10.151 116.97163830000004 2.771 43.49992019999999 1.664 138.748607 2.621 55.54496469999997 2.845)
Error minima by case: (23.7283 3 5.6654 8 51.7848 3 80.0 1 2.7412 2 10.5606 2 26.8985 1 8.1006 2 41.2946 9 34.7793 3 4.0 2 9.0 1 29.6801 2 5.7073 9 28.7353 10 31.6491 10 0.6037 2 3.0786 2 26.1727 8 8.3002 2 3.2049 9 13.0001 1 0.0 0 25.0038 1 12.0 2)
Average genome size in population (length): 32.286
Average program size in population (points): 33.286
Average percent parens in population: 0.030
Minimum age in population: 20.5172119140625
Maximum age in population: 24.67205810546875
Average age in population: 22.69373645019531
Median age in population: 22.73294067382812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 202
Genome diversity (% unique Plush genomes):	 0.489
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 202
Syntactic diversity (% unique Push programs):	 0.489
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 14785787
--- Timings ---
Current time: 1529615984361 milliseconds
Total Time:          55.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.6 seconds, 42.9%
Fitness Testing:     25.5 seconds, 46.5%
Report:               5.7 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 51025.0064
Test mean error for best: 25.51250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -62.2716840824
Correct output: -5.6690006657  | Program output: 29.3309993343 
Correct output: -103.2151508674 | Program output: -27.2151508674
Correct output: -82.6655718784 | Program output: -1.6655718784 
Correct output: -12.2587539292 | Program output: -6.2587539292 
Correct output: -11.987804337  | Program output: 0.012195663   
Correct output: -92.1014631566 | Program output: -34.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 63.6800990656 
Correct output: -5.7482231862  | Program output: 86.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 20.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 27.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 13.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [83.0 3 35.0 12 76.0 3 81.0 2 6.0 2 12.0 12 58.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 33.0 2 92.0 12 30.1552 12 54.0 10 34.0 2 27.0 2 55.0 10 13.0 2 5.1284 10 13.0001 10 0.0 0 100.0 1 13.5974 11]
Total: 1223.8154000000002
Mean: 24.476309
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2545.8228132000017
Median total errors in population: 1328.0
Error averages by case: (134.01456269999989 4.184 82.73203449999997 12.063 124.97548670000018 4.13 128.11195899999979 3.471 57.305308000000075 3.235 61.738247700000066 11.165 108.36544790000005 3.189 128.51786229999996 3.754 104.30766890000021 11.895 112.17440169999999 3.764 56.02926390000001 2.765 67.68116360000008 2.889 82.18599789999993 3.04 133.52639900000005 12.094 115.39614489999974 12.951 101.25294390000002 10.289 82.55916009999997 2.79 75.56522409999998 2.782 101.80718349999994 11.215 62.21432259999999 2.715 97.7240299000001 10.16 119.46064630000018 3.578 51.163598599999986 2.161 145.59506869999993 2.691 64.7326867999999 3.716)
Error minima by case: (60.2717 2 3.7754 10 25.2152 3 0.3344 1 4.0 2 2.0122 1 32.1015 1 18.0 2 15.2946 7 36.0 2 4.0 2 9.0 1 8.897 2 4.0943 10 26.9937 10 22.4578 7 0.6037 2 25.0 2 25.7427 10 11.0 2 3.1083 8 11.5323 1 0.0 0 0.0 0 10.1395 2)
Average genome size in population (length): 33.066
Average program size in population (points): 34.066
Average percent parens in population: 0.030
Minimum age in population: 21.5889892578125
Maximum age in population: 26.21707153320312
Average age in population: 24.27612756347656
Median age in population: 24.31007385253906
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 123
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 123
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.045
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 15613262
--- Timings ---
Current time: 1529615987827 milliseconds
Total Time:          58.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.0 seconds, 42.9%
Fitness Testing:     27.1 seconds, 46.4%
Report:               6.2 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 50623.1185
Test mean error for best: 25.31156
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -63.2716840824
Correct output: -5.6690006657  | Program output: 28.3309993343 
Correct output: -103.2151508674 | Program output: -28.2151508674
Correct output: -82.6655718784 | Program output: -2.6655718784 
Correct output: -12.2587539292 | Program output: -7.2587539292 
Correct output: -11.987804337  | Program output: -0.987804337  
Correct output: -92.1014631566 | Program output: -35.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 62.6800990656 
Correct output: -5.7482231862  | Program output: 85.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 19.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 26.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 12.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [82.0 3 34.0 12 75.0 3 80.0 1 5.0 2 11.0 2 57.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 32.0 2 91.0 11 30.1552 12 53.0 10 34.0 2 27.0 2 54.0 11 13.0 2 5.1284 10 13.0001 10 1.0 1 100.0 1 13.5974 11]
Total: 1203.8154000000002
Mean: 24.076307
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2627.6391701999987
Median total errors in population: 1315.0
Error averages by case: (147.6537585999999 5.471 83.12273629999999 11.938 133.6439832000005 5.326 130.4562651999994 4.969 61.60225280000027 4.659 62.988255200000175 11.122 118.70113900000023 4.507 134.15440809999993 3.856 102.19009500000078 11.185 118.08706879999995 3.898 61.59602569999999 2.914 89.0751520000003 6.314 86.44059379999985 4.087 126.64996580000026 12.075 106.48719059999914 12.573 101.3157433999999 10.543 87.68139959999995 2.951 79.78326089999995 2.94 102.02632599999961 11.352 64.82678549999997 2.852 86.25155550000049 10.129 102.45531490000053 6.315 55.14329999999993 3.495 151.39137779999996 2.525 69.12421649999956 6.795)
Error minima by case: (60.2717 2 3.5842 10 25.2152 3 0.3344 1 4.0 2 2.0122 1 32.1015 1 72.8994 2 15.2946 9 62.0 2 4.0 1 0.5821 1 14.9375 2 4.0315 8 13.4126 10 22.4578 9 32.0 2 25.0 2 24.7427 9 11.0 2 3.1284 9 12.0001 1 0.0 0 73.9962 1 10.1453 2)
Average genome size in population (length): 35.072
Average program size in population (points): 36.072
Average percent parens in population: 0.028
Minimum age in population: 23.82339477539062
Maximum age in population: 27.73648071289062
Average age in population: 25.87448110961914
Median age in population: 25.90512084960938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 132
Genome diversity (% unique Plush genomes):	 0.525
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 132
Syntactic diversity (% unique Push programs):	 0.525
Total error diversity:				 0.068
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 16490437
--- Timings ---
Current time: 1529615990980 milliseconds
Total Time:          61.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.4 seconds, 42.9%
Fitness Testing:     28.4 seconds, 46.2%
Report:               6.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 50623.1185
Test mean error for best: 25.31156
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -63.2716840824
Correct output: -5.6690006657  | Program output: 28.3309993343 
Correct output: -103.2151508674 | Program output: -28.2151508674
Correct output: -82.6655718784 | Program output: -2.6655718784 
Correct output: -12.2587539292 | Program output: -7.2587539292 
Correct output: -11.987804337  | Program output: -0.987804337  
Correct output: -92.1014631566 | Program output: -35.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 62.6800990656 
Correct output: -5.7482231862  | Program output: 85.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 19.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 26.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 12.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [82.0 3 34.0 12 75.0 3 80.0 1 5.0 2 11.0 2 57.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 32.0 2 91.0 11 30.1552 12 53.0 10 34.0 2 27.0 2 54.0 11 13.0 2 5.1284 10 13.0001 10 1.0 1 100.0 1 13.5974 11]
Total: 1203.8154000000002
Mean: 24.076307
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2195.2489703999954
Median total errors in population: 1236.8154000000002
Error averages by case: (127.60218139999981 4.732 69.06686480000005 11.967 115.80470130000022 4.633 117.06907669999973 4.125 45.53748990000007 3.861 49.491863000000066 11.075 99.47765690000003 3.764 120.49780549999993 3.879 80.72797730000046 10.413 104.68423839999993 3.882 47.038518499999995 2.884 89.3677291000007 9.923 70.28055989999991 3.411 117.23115930000017 12.058 71.97053119999997 12.157 87.94311020000002 10.361 73.11093779999999 2.932 65.20534220000002 2.917 88.44039239999988 11.296 50.866370899999986 2.841 48.868161100000684 10.088 58.745685099999356 9.209 39.73085099999996 2.706 137.94304709999992 2.138 51.230719399999415 10.064)
Error minima by case: (22.7283 3 2.7754 7 50.7848 3 80.0 1 1.7412 2 9.8714 2 25.8985 1 10.1006 2 25.4108 7 33.7793 2 4.0 1 4.0345 1 0.7188 2 3.8838 9 13.6896 9 31.9518 9 0.6037 2 2.0786 2 26.6358 9 7.3002 2 3.1083 8 11.4427 1 0.0 0 27.0038 1 9.9429 2)
Average genome size in population (length): 37.714
Average program size in population (points): 38.714
Average percent parens in population: 0.026
Minimum age in population: 25.62440490722656
Maximum age in population: 29.20805358886719
Average age in population: 27.46184097290039
Median age in population: 27.49631118774414
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 275
Genome diversity (% unique Plush genomes):	 0.486
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 275
Syntactic diversity (% unique Push programs):	 0.486
Total error diversity:				 0.079
Error (vector) diversity:			 0.08
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 17433312
--- Timings ---
Current time: 1529615994189 milliseconds
Total Time:          64.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.9 seconds, 43.0%
Fitness Testing:     29.8 seconds, 45.9%
Report:               7.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 58218.08980000001
Test mean error for best: 29.10904
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -26.3438020443
Correct output: -5.6690006657  | Program output: -26.3438020443
Correct output: -103.2151508674 | Program output: -26.3438020443
Correct output: -82.6655718784 | Program output: -26.3438020443
Correct output: -12.2587539292 | Program output: -26.3438020443
Correct output: -11.987804337  | Program output: -26.3438020443
Correct output: -92.1014631566 | Program output: -26.3438020443
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: -26.3438020443
Correct output: -5.7482231862  | Program output: -26.3438020443
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: -26.3438020443
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: -26.3438020443
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: -26.3438020443
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction -25.34380204429445} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup -25.34380204429445 float_yankdup float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [118.9279 12 20.6748 11 76.8713 12 56.3218 12 14.085 12 14.356 9 65.7577 12 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 57.0239 12 20.5956 10 30.1552 12 7.1984 11 34.0 2 27.0 2 1.2875 8 13.0 2 5.1284 10 13.0001 10 40.1952 12 100.0 1 13.5974 11]
Total: 1195.1105000000002
Mean: 23.90221
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2290.8000374999933
Median total errors in population: 1236.8154000000002
Error averages by case: (126.04521129999992 3.849 75.9971296 12.109 117.70490070000007 3.834 121.39808030000002 2.991 49.828091400000034 2.869 54.368039400000015 10.932 100.79106900000004 2.856 123.32998719999995 3.82 84.9888757000005 10.331 107.16928359999999 3.798 50.383692200000006 2.828 96.30249370000085 10.398 74.3090301 2.595 129.8081491 12.056 75.17836559999998 12.117 94.2834371 10.191 76.4488695 2.851 68.89384370000003 2.846 95.1438957 10.995 55.30304220000001 2.774 51.90149390000082 10.096 60.884255599999335 9.599 43.095593599999994 1.471 140.35924469999992 2.038 56.13296259999926 10.507)
Error minima by case: (81.0 2 3.7754 7 74.0 3 56.3218 1 4.0 2 10.0 1 56.0 1 9.1006 3 27.4108 9 34.7793 2 5.0 2 8.0 1 8.812 2 4.7482 9 12.6896 10 7.1984 9 0.6037 2 3.0786 2 1.2875 8 8.3002 2 3.1284 9 11.0001 1 0.0 0 26.0038 1 9.1963 2)
Average genome size in population (length): 39.662
Average program size in population (points): 40.662
Average percent parens in population: 0.025
Minimum age in population: 26.69221496582031
Maximum age in population: 31.04312133789062
Average age in population: 29.02881006240845
Median age in population: 29.07648658752441
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 205
Genome diversity (% unique Plush genomes):	 0.537
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 205
Syntactic diversity (% unique Push programs):	 0.537
Total error diversity:				 0.061
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 18424862
--- Timings ---
Current time: 1529615997521 milliseconds
Total Time:          68.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.4 seconds, 43.2%
Fitness Testing:     31.2 seconds, 45.7%
Report:               7.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 49900.981
Test mean error for best: 24.95049
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -64.2716840824
Correct output: -5.6690006657  | Program output: 27.3309993343 
Correct output: -103.2151508674 | Program output: -29.2151508674
Correct output: -82.6655718784 | Program output: -3.6655718784 
Correct output: -12.2587539292 | Program output: -8.2587539292 
Correct output: -11.987804337  | Program output: -1.987804337  
Correct output: -92.1014631566 | Program output: -36.1014631566
Correct output: 153.8993650016 | Program output: 72.8993650016 
Correct output: 41.7054025242  | Program output: 0.0           
Correct output: 161.7793110649 | Program output: 98.7793110649 
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: 0.0           
Correct output: 30.6800990656  | Program output: 61.6800990656 
Correct output: -5.7482231862  | Program output: 84.2517768138 
Correct output: 29.1551758854  | Program output: 0.0           
Correct output: -33.542179218  | Program output: 18.457820782  
Correct output: 82.3963074555  | Program output: 49.3963074555 
Correct output: 56.0786467305  | Program output: 30.0786467305 
Correct output: -27.6313224673 | Program output: 25.3686775327 
Correct output: 33.300212358   | Program output: 21.300212358  
Correct output: 4.1283717089   | Program output: 0.0           
Correct output: -14.0000938255 | Program output: 0.0           
Correct output: 13.8514317422  | Program output: 11.8514317422 
Correct output: 172.9961793209 | Program output: 73.9961793209 
Correct output: -14.5973679613 | Program output: 0.0           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction integer_shove} {:instruction print_float} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction float_inc} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float})
Best program: (tag_integer_36 float_shove integer_shove print_float float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_stackdepth integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 float_inc in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger integer_pop float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float)
Errors: [81.0 2 33.0 12 74.0 3 79.0 2 4.0 2 10.0 1 56.0 2 81.0 3 41.7054 11 63.0 3 5.0 2 60.2289 11 31.0 2 90.0 12 29.1552 12 52.0 10 33.0 2 26.0 2 53.0 11 12.0 2 4.1284 10 14.0001 12 2.0 1 99.0 2 14.5974 13]
Total: 1192.8154000000002
Mean: 23.856308
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2390.3945915999907
Median total errors in population: 1223.8154000000002
Error averages by case: (129.44411369999995 3.921 80.9587753 12.113 121.07027310000002 3.927 123.94721529999998 2.861 53.250508499999995 2.965 58.521143300000006 9.735 104.4723043 2.956 126.84918319999998 3.783 88.75196400000107 10.343 110.5601045 3.747 54.712630000000004 2.802 100.04452370000081 10.395 79.7836773 2.753 134.275076 11.892 79.02771539999925 12.101 98.47322199999998 10.221 80.6692467 2.822 73.4978059 2.819 99.65399289999999 10.686 60.03484649999999 2.753 55.93255040000071 10.091 64.85795149999907 9.624 48.27893710000001 1.347 143.96527419999998 2.014 60.1665567999993 10.524)
Error minima by case: (52.737 2 4.5839 8 10.6805 3 0.3344 1 4.0 2 2.0122 1 0.4332 1 11.1006 2 15.2946 9 32.7793 2 3.7454 2 9.0 1 14.3161 2 4.7369 8 14.6896 9 7.1984 9 7.8264 2 1.0786 2 1.2875 8 6.3002 2 3.1284 8 11.0001 1 0.0 0 28.0038 1 11.5974 2)
Average genome size in population (length): 43.026
Average program size in population (points): 44.026
Average percent parens in population: 0.023
Minimum age in population: 28.35846710205078
Maximum age in population: 32.4746150970459
Average age in population: 30.59737613677979
Median age in population: 30.61244678497314
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 84
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.077
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 19500512
--- Timings ---
Current time: 1529616000833 milliseconds
Total Time:          71.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.8 seconds, 43.1%
Fitness Testing:     32.7 seconds, 45.8%
Report:               7.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 49649.137899999994
Test mean error for best: 24.82457
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -65.2716840824
Correct output: -5.6690006657  | Program output: 26.3309993343 
Correct output: -103.2151508674 | Program output: -30.2151508674
Correct output: -82.6655718784 | Program output: -4.6655718784 
Correct output: -12.2587539292 | Program output: -9.2587539292 
Correct output: -11.987804337  | Program output: -2.987804337  
Correct output: -92.1014631566 | Program output: -37.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 60.6800990656 
Correct output: -5.7482231862  | Program output: 83.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 17.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 24.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 10.8514317422 
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_pop float_dec integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [80.0 2 32.0 12 73.0 2 78.0 2 3.0 2 9.0 2 55.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 30.0 1 89.0 12 30.1552 12 51.0 10 34.0 2 27.0 2 52.0 11 13.0 2 5.1284 10 13.0001 10 3.0 1 100.0 1 13.5974 11]
Total: 1182.8154000000002
Mean: 23.656307
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2370.4477243999922
Median total errors in population: 1203.8154000000002
Error averages by case: (127.67529869999989 3.986 80.62618769999997 12.078 118.58165030000005 4.032 121.02416500000007 2.553 50.47493740000003 3.089 55.82583319999999 5.285 102.06960500000002 3.087 129.33631919999996 3.973 86.93229670000119 10.385 113.47531899999991 3.941 57.278980700000005 3.015 97.93386210000084 10.292 80.4070037 2.899 133.37333429999998 11.449 77.45027779999941 12.138 96.35800829999998 10.225 82.59542289999995 3.021 74.32894009999998 3.007 98.46093440000006 10.866 59.497348899999984 2.926 54.42419690000076 10.108 63.874203499998934 9.549 47.666229200000004 1.755 146.2806355999999 2.265 58.131733799999274 10.441)
Error minima by case: (19.7283 2 2.5839 8 25.2152 2 0.3344 1 0.7412 2 2.0122 1 22.8985 1 9.1006 3 15.2946 7 32.7793 2 5.0 2 7.5944 1 6.1766 1 3.0436 9 13.6896 10 5.8487 9 13.3963 2 1.0786 2 1.2875 8 6.3002 2 0.1284 8 11.0001 1 0.0 0 26.0038 1 4.5944 2)
Average genome size in population (length): 47.172
Average program size in population (points): 48.172
Average percent parens in population: 0.021
Minimum age in population: 29.35846710205078
Maximum age in population: 34.06079196929932
Average age in population: 32.11608344364166
Median age in population: 32.13135623931885
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 148
Genome diversity (% unique Plush genomes):	 0.604
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 148
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.094
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 20679812
--- Timings ---
Current time: 1529616004378 milliseconds
Total Time:          75.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.4 seconds, 43.2%
Fitness Testing:     34.3 seconds, 45.7%
Report:               8.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 48182.753999999986
Test mean error for best: 24.09138
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -68.2716840824
Correct output: -5.6690006657  | Program output: 23.3309993343 
Correct output: -103.2151508674 | Program output: -33.2151508674
Correct output: -82.6655718784 | Program output: -7.6655718784 
Correct output: -12.2587539292 | Program output: -12.2587539292
Correct output: -11.987804337  | Program output: -5.987804337  
Correct output: -92.1014631566 | Program output: -40.1014631566
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: 57.6800990656 
Correct output: -5.7482231862  | Program output: 80.2517768138 
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: 14.457820782  
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: 21.3686775327 
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: 7.8514317422  
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_flush} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove integer_flush float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_pop float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup integer_pop float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [77.0 3 29.0 12 70.0 2 75.0 2 0.0 0 6.0 2 52.0 2 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 27.0 2 86.0 12 30.1552 12 48.0 10 34.0 2 27.0 2 49.0 11 13.0 2 5.1284 10 13.0001 10 6.0 2 100.0 1 13.5974 11]
Total: 1153.8154000000002
Mean: 23.076307
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2469.6457693999932
Median total errors in population: 1203.8154000000002
Error averages by case: (134.52903949999984 4.448 82.36804649999993 12.074 123.25285670000007 4.642 124.00043730000026 3.301 55.66793810000001 3.803 60.88080249999998 3.51 107.16731550000013 3.818 132.55284699999996 3.951 92.08244260000124 10.433 116.47690639999995 3.927 60.40599979999999 2.969 101.7359449000008 10.16 84.290993 3.53 131.10361710000004 11.424 83.18064949999918 12.165 96.99863329999985 10.328 86.08168679999997 2.997 78.20742959999998 2.981 97.91575790000014 10.927 63.92088719999996 2.894 60.13529810000069 10.108 69.77588649999934 9.436 55.19416540000007 2.686 149.51999979999994 2.225 63.148188399999334 10.315)
Error minima by case: (19.7283 2 2.4722 8 47.7848 2 54.3218 1 0.0 0 6.0 1 22.8985 1 11.1006 2 7.1784 7 31.7793 2 4.0 2 6.3434 1 27.0 1 0.3055 8 15.6896 9 5.1984 9 0.6037 2 0.0786 1 0.2875 7 5.3002 2 2.1284 8 10.0001 1 0.0 0 28.0038 1 0.1174 1)
Average genome size in population (length): 49.401
Average program size in population (points): 50.401
Average percent parens in population: 0.020
Minimum age in population: 30.96430587768555
Maximum age in population: 35.55489063262939
Average age in population: 33.60269256305695
Median age in population: 33.64230608940125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.112
Error (vector) diversity:			 0.12
Behavioral diversity:				 0.12
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 21914862
--- Timings ---
Current time: 1529616007842 milliseconds
Total Time:          78.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.8 seconds, 43.1%
Fitness Testing:     35.8 seconds, 45.7%
Report:               8.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 44482.022399999936
Test mean error for best: 22.24101
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -64.2716840824
Correct output: -5.6690006657  | Program output: 27.3309993343 
Correct output: -103.2151508674 | Program output: -29.2151508674
Correct output: -82.6655718784 | Program output: -3.6655718784 
Correct output: -12.2587539292 | Program output: -8.2587539292 
Correct output: -11.987804337  | Program output: -1.987804337  
Correct output: -92.1014631566 | Program output: -36.1014631566
Correct output: 153.8993650016 | Program output: 107.4825581185
Correct output: 41.7054025242  | Program output: 19.2885956412 
Correct output: 161.7793110649 | Program output: 133.3625041819
Correct output: 70.8245827301  | Program output: 100.4077758471
Correct output: -60.2289340046 | Program output: -35.6457408876
Correct output: 30.6800990656  | Program output: 61.6800990656 
Correct output: -5.7482231862  | Program output: 84.2517768138 
Correct output: 29.1551758854  | Program output: -8.2616309976 
Correct output: -33.542179218  | Program output: 18.457820782  
Correct output: 82.3963074555  | Program output: 83.9795005725 
Correct output: 56.0786467305  | Program output: 64.6618398474 
Correct output: -27.6313224673 | Program output: 25.3686775327 
Correct output: 33.300212358   | Program output: 55.883405475  
Correct output: 4.1283717089   | Program output: -15.2884351741
Correct output: -14.0000938255 | Program output: -58.4169007085
Correct output: 13.8514317422  | Program output: 11.8514317422 
Correct output: 172.9961793209 | Program output: 108.5793724378
Correct output: -14.5973679613 | Program output: 6.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_dup} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_mod float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_dec float_yankdup integer_dup float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [81.0 2 33.0 12 74.0 3 79.0 2 4.0 2 10.0 1 56.0 2 46.4168 11 22.4168 10 28.4168 11 29.5832 10 24.5832 10 31.0 2 90.0 12 37.4168 12 52.0 10 1.5832 9 8.5832 12 53.0 11 22.5832 10 19.4168 10 44.4168 10 2.0 1 64.4168 11 21.5832 12]
Total: 1134.4168
Mean: 22.688335
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2722.7564879999914
Median total errors in population: 1193.8154000000002
Error averages by case: (145.74316459999983 4.423 93.92343259999977 11.959 133.51996210000007 4.868 132.1921866000003 4.102 65.37223610000001 4.163 70.12713949999998 3.394 118.19451540000018 4.171 141.6591148999999 4.093 101.18871690000181 10.446 126.1384613999999 4.067 70.42657320000002 3.1 112.00305270000108 10.421 96.5158215 3.696 141.62220310000004 11.819 91.75508849999864 12.133 106.75726579999974 10.347 95.94296769999988 3.137 88.17779729999992 3.123 108.63460740000025 10.955 73.84943689999996 3.029 68.91099620000105 10.119 78.05064649999963 9.748 66.91148010000009 3.09 158.70018809999988 2.412 72.99843289999907 10.626)
Error minima by case: (15.7283 2 0.669 7 19.2152 2 0.3344 1 0.0 0 0.2969 1 8.1015 2 11.1006 2 15.2946 8 28.4168 2 4.0 1 8.0 1 4.4104 1 0.7482 8 12.6896 10 5.1984 8 1.5832 2 1.0786 2 0.2875 7 6.3002 2 0.8716 8 9.0001 1 0.0 0 28.0038 1 9.5974 2)
Average genome size in population (length): 52.346
Average program size in population (points): 53.346
Average percent parens in population: 0.019
Minimum age in population: 32.68041658401489
Maximum age in population: 36.93991184234619
Average age in population: 35.08565323424339
Median age in population: 35.12493693828583
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.682
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.682
Total error diversity:				 0.132
Error (vector) diversity:			 0.141
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 23223562
--- Timings ---
Current time: 1529616011582 milliseconds
Total Time:          82.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.4 seconds, 43.1%
Fitness Testing:     37.5 seconds, 45.7%
Report:               9.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 55683.313400000014
Test mean error for best: 27.84166
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -86.0         
Correct output: -5.6690006657  | Program output: -38.0         
Correct output: -103.2151508674 | Program output: -79.0         
Correct output: -82.6655718784 | Program output: -84.0         
Correct output: -12.2587539292 | Program output: -9.0          
Correct output: -11.987804337  | Program output: -15.0         
Correct output: -92.1014631566 | Program output: -61.0         
Correct output: 153.8993650016 | Program output: 71.8993650016 
Correct output: 41.7054025242  | Program output: -1.0          
Correct output: 161.7793110649 | Program output: 97.7793110649 
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -1.0          
Correct output: 30.6800990656  | Program output: -36.0         
Correct output: -5.7482231862  | Program output: -95.0         
Correct output: 29.1551758854  | Program output: -1.0          
Correct output: -33.542179218  | Program output: -57.0         
Correct output: 82.3963074555  | Program output: 48.3963074555 
Correct output: 56.0786467305  | Program output: 29.0786467305 
Correct output: -27.6313224673 | Program output: -58.0         
Correct output: 33.300212358   | Program output: 20.300212358  
Correct output: 4.1283717089   | Program output: -1.0          
Correct output: -14.0000938255 | Program output: -1.0          
Correct output: 13.8514317422  | Program output: -3.0          
Correct output: 172.9961793209 | Program output: 72.9961793209 
Correct output: -14.5973679613 | Program output: -1.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction tag_integer_36} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 83} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove tag_integer_36 float_inc float_yankdup in1 integer_mult integer_pop float_dec float_rot float_sub integer_swap integer_dup integer_flush in1 integer_yankdup float_mod 83 integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [59.2717 12 32.331 11 24.2152 12 1.3344 11 3.2588 12 3.0122 9 31.1015 11 82.0 3 42.7054 10 64.0 3 6.0 2 59.2289 11 66.6801 11 89.2518 11 30.1552 12 23.4578 10 34.0 2 27.0 2 30.3687 12 13.0 2 5.1284 10 13.0001 10 16.8514 11 100.0 1 13.5974 11]
Total: 1082.9500000000003
Mean: 21.659
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2540.4065727999923
Median total errors in population: 1182.8154000000002
Error averages by case: (134.73414679999996 3.654 86.42630849999998 11.974 125.3859645000001 3.841 125.53657580000007 3.358 55.54237020000006 3.138 60.562428399999995 2.828 109.06465620000007 3.362 136.08564740000003 4.001 93.54472030000163 10.484 120.25269239999996 3.973 64.93163870000001 3.049 105.62400310000072 10.417 87.03753409999999 2.574 140.9743069 12.088 84.91411119999898 12.147 101.74872549999996 10.244 90.37764809999994 3.062 81.850426 3.059 104.4316557 11.194 66.7760587 2.956 62.061869400000695 10.118 71.21914229999962 9.819 55.6774818 2.29 152.94358579999997 2.394 65.9558749999994 10.723)
Error minima by case: (12.7283 2 0.077 7 22.2152 2 0.3344 1 0.0 0 0.0122 1 15.8985 1 9.1006 2 5.1162 9 28.4168 2 4.0 1 8.0 1 25.0 1 0.0022 7 12.6896 10 7.1984 8 1.5832 2 0.9214 1 1.2875 8 4.3002 2 0.1284 9 2.0001 1 0.0 0 26.0038 1 1.3276 2)
Average genome size in population (length): 55.407
Average program size in population (points): 56.407
Average percent parens in population: 0.018
Minimum age in population: 33.68041658401489
Maximum age in population: 38.34759533405304
Average age in population: 36.5603582277298
Median age in population: 36.59243142604828
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.69
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.69
Total error diversity:				 0.146
Error (vector) diversity:			 0.161
Behavioral diversity:				 0.161
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 24608762
--- Timings ---
Current time: 1529616015207 milliseconds
Total Time:          85.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.9 seconds, 43.0%
Fitness Testing:     39.2 seconds, 45.7%
Report:               9.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 41820.02399999993
Test mean error for best: 20.91001
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -69.2716840824
Correct output: -5.6690006657  | Program output: 22.3309993343 
Correct output: -103.2151508674 | Program output: -34.2151508674
Correct output: -82.6655718784 | Program output: -8.6655718784 
Correct output: -12.2587539292 | Program output: -13.2587539292
Correct output: -11.987804337  | Program output: -6.987804337  
Correct output: -92.1014631566 | Program output: -41.1014631566
Correct output: 153.8993650016 | Program output: 107.4825581185
Correct output: 41.7054025242  | Program output: 19.2885956412 
Correct output: 161.7793110649 | Program output: 133.3625041819
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -35.6457408876
Correct output: 30.6800990656  | Program output: 56.6800990656 
Correct output: -5.7482231862  | Program output: 79.2517768138 
Correct output: 29.1551758854  | Program output: -8.2616309976 
Correct output: -33.542179218  | Program output: 13.457820782  
Correct output: 82.3963074555  | Program output: 83.9795005725 
Correct output: 56.0786467305  | Program output: 64.6618398474 
Correct output: -27.6313224673 | Program output: 20.3686775327 
Correct output: 33.300212358   | Program output: 55.883405475  
Correct output: 4.1283717089   | Program output: -15.2884351741
Correct output: -14.0000938255 | Program output: -58.4169007085
Correct output: 13.8514317422  | Program output: 6.8514317422  
Correct output: 172.9961793209 | Program output: 108.5793724378
Correct output: -14.5973679613 | Program output: 6.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_mod float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_dec float_yankdup in2 float_yankdup float_yankdup float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float)
Errors: [76.0 3 28.0 12 69.0 3 74.0 1 1.0 1 5.0 2 51.0 2 46.4168 11 22.4168 10 28.4168 11 5.0 2 24.5832 10 26.0 2 85.0 12 37.4168 12 47.0 9 1.5832 9 8.5832 12 48.0 11 22.5832 10 19.4168 10 44.4168 10 7.0 2 64.4168 11 21.5832 12]
Total: 1053.8336
Mean: 21.076672
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2589.1333455999916
Median total errors in population: 1174.8154000000002
Error averages by case: (135.21793039999994 3.876 86.59193729999998 11.853 126.55922450000011 3.785 128.88658300000003 3.201 59.458355700000055 2.445 64.60256179999999 2.901 110.27591420000006 3.166 135.34200299999998 4.233 97.61875660000113 10.517 119.58255120000003 4.196 65.49823560000002 3.215 108.09232780000075 10.292 85.86463439999997 2.758 139.5677571 12.153 89.24150189999912 12.162 103.92754929999998 10.266 89.50422829999992 3.256 82.72406789999995 3.32 105.12401159999999 11.27 70.18419979999996 3.169 66.75677560000081 10.124 76.71507319999999 9.735 61.40192649999999 2.644 152.2287017 2.637 70.34453719999924 10.648)
Error minima by case: (16.7283 2 1.529 8 18.2152 2 0.3344 1 0.0 0 2.0 1 19.8985 1 45.4168 2 15.2946 9 27.4168 2 4.0 1 8.0 1 23.0 1 1.6082 8 10.6896 10 22.4578 8 1.5832 2 5.1384 1 23.4913 9 11.0 1 2.7128 8 6.0001 1 0.0 0 63.4168 1 6.5974 2)
Average genome size in population (length): 59.399
Average program size in population (points): 60.399
Average percent parens in population: 0.017
Minimum age in population: 35.50121307373047
Maximum age in population: 39.79301875829697
Average age in population: 38.13505163609982
Median age in population: 38.1965226829052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.158
Error (vector) diversity:			 0.173
Behavioral diversity:				 0.173
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 26093812
--- Timings ---
Current time: 1529616018956 milliseconds
Total Time:          89.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.4 seconds, 42.9%
Fitness Testing:     41.0 seconds, 45.8%
Report:              10.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 42076.049399999945
Test mean error for best: 21.03802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -64.2716840824
Correct output: -5.6690006657  | Program output: -1.0          
Correct output: -103.2151508674 | Program output: -29.2151508674
Correct output: -82.6655718784 | Program output: -3.6655718784 
Correct output: -12.2587539292 | Program output: -8.2587539292 
Correct output: -11.987804337  | Program output: -2.975608674  
Correct output: -92.1014631566 | Program output: -36.1014631566
Correct output: 153.8993650016 | Program output: 106.4825581185
Correct output: 41.7054025242  | Program output: 18.2885956412 
Correct output: 161.7793110649 | Program output: 132.3625041819
Correct output: 70.8245827301  | Program output: 99.4077758471 
Correct output: -60.2289340046 | Program output: -36.6457408876
Correct output: 30.6800990656  | Program output: -1.0          
Correct output: -5.7482231862  | Program output: -1.0          
Correct output: 29.1551758854  | Program output: -9.2616309976 
Correct output: -33.542179218  | Program output: -1.0          
Correct output: 82.3963074555  | Program output: 82.9795005725 
Correct output: 56.0786467305  | Program output: 63.6618398474 
Correct output: -27.6313224673 | Program output: -1.0          
Correct output: 33.300212358   | Program output: 54.883405475  
Correct output: 4.1283717089   | Program output: -16.2884351741
Correct output: -14.0000938255 | Program output: -59.4169007085
Correct output: 13.8514317422  | Program output: -1.0          
Correct output: 172.9961793209 | Program output: 107.5793724378
Correct output: -14.5973679613 | Program output: 5.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup float_dec in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_mod float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup integer_flush integer_pop float_mod float_yankdup in2 float_yankdup integer_flush float_dec float_dec in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [81.0 2 4.669 10 74.0 3 79.0 2 4.0 2 9.0122 9 56.0 2 47.4168 11 23.4168 10 29.4168 11 28.5832 10 23.5832 10 31.6801 11 4.7482 11 38.4168 11 32.5422 11 0.5832 8 7.5832 12 26.6313 12 21.5832 10 20.4168 10 45.4168 10 14.8514 12 65.4168 11 20.5832 12]
Total: 1013.5512000000001
Mean: 20.271025
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3336.2934296999933
Median total errors in population: 1153.8154000000002
Error averages by case: (165.07571990000005 4.692 117.10287930000004 12.077 155.1571530000002 4.53 155.02696320000007 3.781 90.17757550000005 3.01 94.53443989999995 3.496 140.35317730000006 3.851 159.6998594000005 5.588 125.05634240000245 10.602 144.3541432000005 5.551 99.28059759999982 4.529 133.1114008000002 10.442 118.0336489999999 3.619 168.29038849999995 12.123 120.17947879999859 12.238 132.3862107 10.265 115.7335704999995 4.47 110.92999329999957 4.947 134.22918040000008 11.418 102.4155180999997 4.496 99.23716810000104 10.258 110.40473410000128 9.939 93.76885629999997 3.428 176.04700480000048 4.25 101.17242559999899 10.935)
Error minima by case: (18.7283 2 0.2153 8 18.2152 2 0.3344 1 0.0 0 1.0 1 21.8985 1 45.4168 2 8.1222 9 27.4168 2 0.3418 1 8.0 1 8.4867 1 0.0943 8 4.428 9 7.7704 7 0.4168 2 5.5832 1 1.8596 8 11.0 2 2.7128 9 8.0001 1 0.0 0 63.4168 1 5.0142 2)
Average genome size in population (length): 62.592
Average program size in population (points): 63.592
Average percent parens in population: 0.016
Minimum age in population: 37.3442770242691
Maximum age in population: 41.45678696036339
Average age in population: 39.68783449056745
Median age in population: 39.78008379042149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.205
Error (vector) diversity:			 0.224
Behavioral diversity:				 0.225
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 27658612
--- Timings ---
Current time: 1529616022923 milliseconds
Total Time:          93.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.9 seconds, 42.7%
Fitness Testing:     42.9 seconds, 46.0%
Report:              10.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 42076.049399999945
Test mean error for best: 21.03802
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -64.2716840824
Correct output: -5.6690006657  | Program output: -1.0          
Correct output: -103.2151508674 | Program output: -29.2151508674
Correct output: -82.6655718784 | Program output: -3.6655718784 
Correct output: -12.2587539292 | Program output: -8.2587539292 
Correct output: -11.987804337  | Program output: -2.975608674  
Correct output: -92.1014631566 | Program output: -36.1014631566
Correct output: 153.8993650016 | Program output: 106.4825581185
Correct output: 41.7054025242  | Program output: 18.2885956412 
Correct output: 161.7793110649 | Program output: 132.3625041819
Correct output: 70.8245827301  | Program output: 99.4077758471 
Correct output: -60.2289340046 | Program output: -36.6457408876
Correct output: 30.6800990656  | Program output: -1.0          
Correct output: -5.7482231862  | Program output: -1.0          
Correct output: 29.1551758854  | Program output: -9.2616309976 
Correct output: -33.542179218  | Program output: -1.0          
Correct output: 82.3963074555  | Program output: 82.9795005725 
Correct output: 56.0786467305  | Program output: 63.6618398474 
Correct output: -27.6313224673 | Program output: -1.0          
Correct output: 33.300212358   | Program output: 54.883405475  
Correct output: 4.1283717089   | Program output: -16.2884351741
Correct output: -14.0000938255 | Program output: -59.4169007085
Correct output: 13.8514317422  | Program output: -1.0          
Correct output: 172.9961793209 | Program output: 107.5793724378
Correct output: -14.5973679613 | Program output: 5.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup float_dec in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_mod float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup integer_flush integer_pop float_mod float_yankdup in2 float_yankdup integer_flush float_dec float_dec in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [81.0 2 4.669 10 74.0 3 79.0 2 4.0 2 9.0122 9 56.0 2 47.4168 11 23.4168 10 29.4168 11 28.5832 10 23.5832 10 31.6801 11 4.7482 11 38.4168 11 32.5422 11 0.5832 8 7.5832 12 26.6313 12 21.5832 10 20.4168 10 45.4168 10 14.8514 12 65.4168 11 20.5832 12]
Total: 1013.5512000000001
Mean: 20.271025
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3087.3399763999955
Median total errors in population: 1134.4168
Error averages by case: (151.58941040000005 5.238 107.55318810000016 11.894 139.6990468000004 5.324 138.12869280000032 4.479 80.35111430000006 4.164 84.16698499999978 4.113 126.74367680000019 4.528 143.80803370000132 8.0 108.90781710000155 10.55 128.46009960000117 7.946 100.2666737999995 6.556 114.59606039999939 10.281 113.1374842999998 4.511 158.1418571999998 11.951 111.96385710000021 12.236 120.10520760000007 10.266 100.44828899999939 6.543 98.84599429999939 7.943 122.65429330000025 11.471 97.11417169999955 6.907 93.01195700000073 10.288 110.00341870000142 10.033 84.94577799999993 4.28 160.31822830000152 7.224 94.36564109999928 11.287)
Error minima by case: (7.7283 2 0.0819 7 3.009 2 0.3344 1 0.0 0 0.0 0 8.1047 1 11.8336 2 5.1282 8 6.1664 2 4.0 1 8.3434 1 0.6232 1 0.093 7 2.8336 8 13.4833 8 0.4168 2 5.5832 1 7.5725 8 10.5665 2 0.1284 9 8.0001 1 0.0 0 29.8336 1 5.0142 2)
Average genome size in population (length): 60.483
Average program size in population (points): 61.483
Average percent parens in population: 0.017
Minimum age in population: 38.81387695670128
Maximum age in population: 43.1619318574667
Average age in population: 41.11566257090867
Median age in population: 41.17409577965736
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.263
Error (vector) diversity:			 0.278
Behavioral diversity:				 0.279
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 29170687
--- Timings ---
Current time: 1529616026537 milliseconds
Total Time:          97.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.2 seconds, 42.5%
Fitness Testing:     44.7 seconds, 46.1%
Report:              11.0 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 40842.17779999993
Test mean error for best: 20.42109
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -68.2716840824
Correct output: -5.6690006657  | Program output: -5.0          
Correct output: -103.2151508674 | Program output: -33.2151508674
Correct output: -82.6655718784 | Program output: -7.6655718784 
Correct output: -12.2587539292 | Program output: -12.2587539292
Correct output: -11.987804337  | Program output: -6.975608674  
Correct output: -92.1014631566 | Program output: -40.1014631566
Correct output: 153.8993650016 | Program output: 106.4825581185
Correct output: 41.7054025242  | Program output: 18.2885956412 
Correct output: 161.7793110649 | Program output: 132.3625041819
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -36.6457408876
Correct output: 30.6800990656  | Program output: -5.0          
Correct output: -5.7482231862  | Program output: -5.0          
Correct output: 29.1551758854  | Program output: -9.2616309976 
Correct output: -33.542179218  | Program output: -5.0          
Correct output: 82.3963074555  | Program output: 82.9795005725 
Correct output: 56.0786467305  | Program output: 63.6618398474 
Correct output: -27.6313224673 | Program output: -5.0          
Correct output: 33.300212358   | Program output: 54.883405475  
Correct output: 4.1283717089   | Program output: -16.2884351741
Correct output: -14.0000938255 | Program output: -59.4169007085
Correct output: 13.8514317422  | Program output: -5.0          
Correct output: 172.9961793209 | Program output: 107.5793724378
Correct output: -14.5973679613 | Program output: 5.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_dec} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_mod} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dec} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup float_dec in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_mod float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup integer_flush integer_pop float_mod float_yankdup in2 float_yankdup integer_flush float_dec float_dec in2 float_yankdup float_yankdup integer_flush float_dec float_yankdup in2 float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [77.0 3 0.669 9 70.0 2 75.0 2 0.0 0 5.0122 9 52.0 2 47.4168 11 23.4168 10 29.4168 11 5.0 2 23.5832 10 35.6801 11 0.7482 10 38.4168 11 28.5422 11 0.5832 8 7.5832 12 22.6313 12 21.5832 10 20.4168 10 45.4168 10 18.8514 12 65.4168 11 20.5832 12]
Total: 945.9680000000001
Mean: 18.91936
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2781.4955055000037
Median total errors in population: 1089.9500000000003
Error averages by case: (139.83373999999986 6.924 98.24589060000037 11.436 122.42078930000092 6.88 113.8686261000011 6.028 69.64551740000024 5.836 72.71215739999947 5.867 114.71260520000052 6.053 128.10534440000146 8.216 97.33178940000121 10.474 112.69659100000125 8.163 81.9192247999998 5.848 101.55690769999927 10.151 112.42823999999939 6.808 146.0479724999996 11.656 102.14085380000041 12.065 106.01365700000026 10.264 84.24968639999965 6.681 83.89456279999955 8.259 109.40139900000068 11.603 83.89856579999957 7.143 83.32018940000079 10.172 100.49595180000142 9.993 77.23914999999982 6.872 144.9367617000016 7.552 82.12233199999926 11.313)
Error minima by case: (16.7283 2 0.331 2 14.2152 2 0.3344 1 0.0 0 0.0 0 19.8985 1 9.1006 2 5.6836 8 6.1664 2 4.0 2 9.0 1 1.9031 1 0.2518 2 1.2822 7 6.0 1 0.4168 2 3.0786 1 6.0 2 1.4561 2 1.1284 8 8.8336 1 0.0 0 26.0038 1 5.0142 2)
Average genome size in population (length): 61.739
Average program size in population (points): 62.739
Average percent parens in population: 0.016
Minimum age in population: 40.15998473763466
Maximum age in population: 44.47220339626074
Average age in population: 42.64429795207083
Median age in population: 42.66437031701207
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.742
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.742
Total error diversity:				 0.26
Error (vector) diversity:			 0.272
Behavioral diversity:				 0.273
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 30714162
--- Timings ---
Current time: 1529616030481 milliseconds
Total Time:         100.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.7 seconds, 42.3%
Fitness Testing:     46.6 seconds, 46.2%
Report:              11.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 40146.37199999993
Test mean error for best: 20.07319
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -71.2716840824
Correct output: -5.6690006657  | Program output: -6.0          
Correct output: -103.2151508674 | Program output: -36.2151508674
Correct output: -82.6655718784 | Program output: -10.6655718784
Correct output: -12.2587539292 | Program output: -15.2587539292
Correct output: -11.987804337  | Program output: -8.987804337  
Correct output: -92.1014631566 | Program output: -43.1014631566
Correct output: 153.8993650016 | Program output: 106.4825581185
Correct output: 41.7054025242  | Program output: 18.2885956412 
Correct output: 161.7793110649 | Program output: 132.3625041819
Correct output: 70.8245827301  | Program output: 64.8245827301 
Correct output: -60.2289340046 | Program output: -36.6457408876
Correct output: 30.6800990656  | Program output: -6.0          
Correct output: -5.7482231862  | Program output: -6.0          
Correct output: 29.1551758854  | Program output: -9.2616309976 
Correct output: -33.542179218  | Program output: -6.0          
Correct output: 82.3963074555  | Program output: 82.9795005725 
Correct output: 56.0786467305  | Program output: 63.6618398474 
Correct output: -27.6313224673 | Program output: -6.0          
Correct output: 33.300212358   | Program output: 54.883405475  
Correct output: 4.1283717089   | Program output: -16.2884351741
Correct output: -14.0000938255 | Program output: -59.4169007085
Correct output: 13.8514317422  | Program output: -6.0          
Correct output: 172.9961793209 | Program output: 107.5793724378
Correct output: -14.5973679613 | Program output: 5.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction in1} {:instruction in1} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_div} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 in1 in1 float_dec integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup float_dec float_yankdup in2 float_yankdup float_dec float_yankdup float_mod float_dec float_yankdup float_dec float_yankdup in2 float_yankdup float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_dec float_yankdup integer_flush integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup integer_div float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [74.0 3 0.331 10 67.0 3 72.0 2 3.0 1 3.0 2 49.0 2 47.4168 11 23.4168 10 29.4168 11 6.0 2 23.5832 10 36.6801 11 0.2518 11 38.4168 11 27.5422 11 0.5832 8 7.5832 12 21.6313 12 21.5832 10 20.4168 10 45.4168 10 19.8514 12 65.4168 11 20.5832 12]
Total: 932.1214000000001
Mean: 18.642427
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2555.260144599999
Median total errors in population: 1053.8336
Error averages by case: (132.0235681999995 6.484 82.10678029999994 11.138 115.92638090000071 6.553 109.16357430000083 5.645 61.713627300000496 5.49 64.07823899999937 6.541 106.6819852000004 5.637 116.77761540000212 9.764 85.84554340000102 10.435 101.44607370000183 9.704 77.87438889999979 6.388 87.59647689999895 9.981 99.69798759999927 7.894 119.89863389999987 11.495 96.15905640000125 11.888 93.46287709999997 10.33 72.84670090000004 7.849 74.66410689999978 10.177 94.74630189999998 11.724 79.97922659999941 8.695 78.7640496000006 10.243 99.08792410000187 9.969 70.57333889999977 8.157 133.5434936000023 9.416 77.54419359999946 11.461)
Error minima by case: (9.7283 2 0.331 1 10.6716 2 0.3344 1 0.0 0 0.0 0 0.4421 1 11.8336 2 9.1222 8 5.1664 2 4.0 2 3.4008 1 1.9031 1 0.2518 1 2.8336 8 5.0 1 0.4168 2 3.5832 1 5.0 2 0.717 2 3.6987 8 9.8336 1 0.0 0 29.8336 1 6.0142 2)
Average genome size in population (length): 61.844
Average program size in population (points): 62.844
Average percent parens in population: 0.016
Minimum age in population: 41.82117676734924
Maximum age in population: 45.97107353061438
Average age in population: 43.94349843546748
Median age in population: 44.00155152380466
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 62
Genome diversity (% unique Plush genomes):	 0.741
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 62
Syntactic diversity (% unique Push programs):	 0.741
Total error diversity:				 0.287
Error (vector) diversity:			 0.303
Behavioral diversity:				 0.304
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 32260262
--- Timings ---
Current time: 1529616034380 milliseconds
Total Time:         104.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.2 seconds, 42.1%
Fitness Testing:     48.5 seconds, 46.2%
Report:              12.1 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 47382.85599999993
Test mean error for best: 23.69143
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -67.2716840824
Correct output: -5.6690006657  | Program output: -14.6690006657
Correct output: -103.2151508674 | Program output: -32.2151508674
Correct output: -82.6655718784 | Program output: -6.6655718784 
Correct output: -12.2587539292 | Program output: -11.2587539292
Correct output: -11.987804337  | Program output: -4.987804337  
Correct output: -92.1014631566 | Program output: -39.1014631566
Correct output: 153.8993650016 | Program output: 108.4825581185
Correct output: 41.7054025242  | Program output: 20.2885956412 
Correct output: 161.7793110649 | Program output: 134.3625041819
Correct output: 70.8245827301  | Program output: 65.8245827301 
Correct output: -60.2289340046 | Program output: -34.6457408876
Correct output: 30.6800990656  | Program output: -15.3199009344
Correct output: -5.7482231862  | Program output: -14.7482231862
Correct output: 29.1551758854  | Program output: -7.2616309976 
Correct output: -33.542179218  | Program output: -42.542179218 
Correct output: 82.3963074555  | Program output: 84.9795005725 
Correct output: 56.0786467305  | Program output: 65.6618398474 
Correct output: -27.6313224673 | Program output: -36.6313224673
Correct output: 33.300212358   | Program output: 56.883405475  
Correct output: 4.1283717089   | Program output: -14.2884351741
Correct output: -14.0000938255 | Program output: -57.4169007085
Correct output: 13.8514317422  | Program output: -3.1485682578 
Correct output: 172.9961793209 | Program output: 109.5793724378
Correct output: -14.5973679613 | Program output: 7.9858251556  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_shove} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_dec} {:instruction integer_flush} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_mult} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove integer_flush integer_flush float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult integer_pop -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 float_shove integer_pop float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup in2 float_dec integer_flush float_mod float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_yankdup integer_flush float_frominteger print_float float_stackdepth float_mult integer_div)
Errors: [78.0 3 9.0 2 71.0 3 76.0 2 1.0 1 7.0 2 53.0 2 45.4168 11 21.4168 10 27.4168 11 5.0 2 25.5832 10 46.0 12 9.0 2 36.4168 12 9.0 2 2.5832 9 9.5832 12 9.0 2 23.5832 10 18.4168 9 43.4168 10 17.0 10 63.4168 11 22.5832 12]
Total: 901.8336
Mean: 18.036673
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2671.982240299996
Median total errors in population: 1013.5512000000001
Error averages by case: (140.48323909999957 6.581 81.16372019999994 10.428 122.94220020000049 6.817 116.8446661000007 6.123 70.0613382000003 5.993 72.99299099999928 8.508 114.08818940000018 5.919 116.26014740000167 10.747 88.99795800000048 10.379 100.09485110000095 10.693 87.1187556999998 7.984 90.58306819999942 10.062 107.10247139999898 10.449 102.76354310000033 10.983 104.029356500001 11.655 95.28709359999998 10.556 72.45871660000026 8.437 77.01640029999994 11.414 93.98254269999961 11.796 85.85130929999967 9.686 87.51488240000047 10.286 109.3333843000014 10.034 80.34864429999965 10.94 132.42113980000204 10.608 83.48363139999968 11.68)
Error minima by case: (16.7283 2 0.134 1 19.2152 2 0.3344 1 0.0 0 1.0 1 5.4343 1 11.8336 2 6.6836 8 5.1664 2 4.0 1 5.7678 1 7.2974 1 0.2518 1 2.8336 8 4.0 1 9.0E-4 2 5.5832 2 4.0 1 0.4561 2 3.1284 9 9.8336 1 0.0 0 29.8336 1 3.6115 2)
Average genome size in population (length): 58.517
Average program size in population (points): 59.517
Average percent parens in population: 0.017
Minimum age in population: 42.82117676734924
Maximum age in population: 47.08593662641943
Average age in population: 45.27283887543902
Median age in population: 45.3421735605225
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 110
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 110
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.269
Error (vector) diversity:			 0.284
Behavioral diversity:				 0.285
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 33723212
--- Timings ---
Current time: 1529616038065 milliseconds
Total Time:         108.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.6 seconds, 42.0%
Fitness Testing:     50.2 seconds, 46.3%
Report:              12.6 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 24848.51920000002
Test mean error for best: 12.42426
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -151.2716840824
Correct output: -5.6690006657  | Program output: -11.6690006657
Correct output: -103.2151508674 | Program output: -109.2151508674
Correct output: -82.6655718784 | Program output: -88.6655718784
Correct output: -12.2587539292 | Program output: -18.2587539292
Correct output: -11.987804337  | Program output: -17.987804337 
Correct output: -92.1014631566 | Program output: -98.1014631566
Correct output: 153.8993650016 | Program output: 186.4825581185
Correct output: 41.7054025242  | Program output: 74.2885956412 
Correct output: 161.7793110649 | Program output: 194.3625041819
Correct output: 70.8245827301  | Program output: 103.4077758471
Correct output: -60.2289340046 | Program output: -27.6457408876
Correct output: 30.6800990656  | Program output: 24.6800990656 
Correct output: -5.7482231862  | Program output: -11.7482231862
Correct output: 29.1551758854  | Program output: 61.7383690024 
Correct output: -33.542179218  | Program output: -39.542179218 
Correct output: 82.3963074555  | Program output: 114.9795005725
Correct output: 56.0786467305  | Program output: 88.6618398474 
Correct output: -27.6313224673 | Program output: -33.6313224673
Correct output: 33.300212358   | Program output: 65.883405475  
Correct output: 4.1283717089   | Program output: 36.7115648259 
Correct output: -14.0000938255 | Program output: 18.5830992915 
Correct output: 13.8514317422  | Program output: 7.8514317422  
Correct output: 172.9961793209 | Program output: 205.5793724378
Correct output: -14.5973679613 | Program output: 17.9858251556 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction float_flush} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_pop} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth float_flush integer_shove float_tan float_add integer_stackdepth float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec integer_mult integer_pop float_dec integer_mult integer_flush integer_pop in2 integer_inc float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [6.0 2 6.0 2 6.0 1 6.0 1 6.0 1 6.0 1 6.0 1 32.5832 11 32.5832 10 32.5832 11 32.5832 10 32.5832 10 6.0 2 6.0 2 32.5832 11 6.0 1 32.5832 11 32.5832 12 6.0 2 32.5832 10 32.5832 11 32.5832 9 6.0 2 32.5832 12 32.5832 12]
Total: 653.5816
Mean: 13.071632
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2800.1128380999967
Median total errors in population: 993.9682000000001
Error averages by case: (144.30482869999983 6.828 85.80250880000004 10.0 128.0581771000008 6.738 120.74295640000093 6.243 75.1787909000002 5.695 77.65855289999918 8.451 119.13529320000039 5.972 122.10032480000174 10.708 96.58477040000135 10.428 106.68539480000155 10.652 88.30521089999958 5.913 95.38270799999871 9.938 115.0243784999987 10.858 104.56716960000026 10.561 109.04500300000157 11.706 98.63679260000013 10.314 79.0366606999996 8.45 83.2126289999994 11.332 97.65308489999977 11.576 92.75288139999871 9.654 92.59770030000132 10.328 114.68501070000174 9.958 88.14893579999969 11.306 138.7060363000023 10.581 90.3640383999988 11.553)
Error minima by case: (6.0 2 0.331 1 6.0 1 0.2292 1 0.0 0 2.0 1 0.1015 1 2.0 1 2.0 2 2.0 2 3.0 1 2.0 1 3.6375 1 0.2518 1 2.0 1 4.041 1 9.0E-4 1 2.0 1 1.4132 1 0.283 1 2.0 1 2.0 1 0.0 0 2.0 1 2.0 1)
Average genome size in population (length): 64.982
Average program size in population (points): 65.982
Average percent parens in population: 0.015
Minimum age in population: 44.20208125561476
Maximum age in population: 48.68449302110821
Average age in population: 46.60599660270102
Median age in population: 46.66411907039583
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.31
Error (vector) diversity:			 0.334
Behavioral diversity:				 0.335
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 35347762
--- Timings ---
Current time: 1529616042103 milliseconds
Total Time:         112.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.1 seconds, 41.8%
Fitness Testing:     52.2 seconds, 46.4%
Report:              13.1 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 24848.51920000002
Test mean error for best: 12.42426
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -151.2716840824
Correct output: -5.6690006657  | Program output: -11.6690006657
Correct output: -103.2151508674 | Program output: -109.2151508674
Correct output: -82.6655718784 | Program output: -88.6655718784
Correct output: -12.2587539292 | Program output: -18.2587539292
Correct output: -11.987804337  | Program output: -17.987804337 
Correct output: -92.1014631566 | Program output: -98.1014631566
Correct output: 153.8993650016 | Program output: 186.4825581185
Correct output: 41.7054025242  | Program output: 74.2885956412 
Correct output: 161.7793110649 | Program output: 194.3625041819
Correct output: 70.8245827301  | Program output: 103.4077758471
Correct output: -60.2289340046 | Program output: -27.6457408876
Correct output: 30.6800990656  | Program output: 24.6800990656 
Correct output: -5.7482231862  | Program output: -11.7482231862
Correct output: 29.1551758854  | Program output: 61.7383690024 
Correct output: -33.542179218  | Program output: -39.542179218 
Correct output: 82.3963074555  | Program output: 114.9795005725
Correct output: 56.0786467305  | Program output: 88.6618398474 
Correct output: -27.6313224673 | Program output: -33.6313224673
Correct output: 33.300212358   | Program output: 65.883405475  
Correct output: 4.1283717089   | Program output: 36.7115648259 
Correct output: -14.0000938255 | Program output: 18.5830992915 
Correct output: 13.8514317422  | Program output: 7.8514317422  
Correct output: 172.9961793209 | Program output: 205.5793724378
Correct output: -14.5973679613 | Program output: 17.9858251556 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction float_flush} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_pop} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth float_flush integer_shove float_tan float_add integer_stackdepth float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec integer_mult integer_pop float_dec integer_mult integer_flush integer_pop in2 integer_inc float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [6.0 2 6.0 2 6.0 1 6.0 1 6.0 1 6.0 1 6.0 1 32.5832 11 32.5832 10 32.5832 11 32.5832 10 32.5832 10 6.0 2 6.0 2 32.5832 11 6.0 1 32.5832 11 32.5832 12 6.0 2 32.5832 10 32.5832 11 32.5832 9 6.0 2 32.5832 12 32.5832 12]
Total: 653.5816
Mean: 13.071632
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2457.269233799998
Median total errors in population: 962.9558000000001
Error averages by case: (137.0109031999999 5.342 65.09996690000045 8.896 126.15919150000015 5.062 123.26395540000024 4.624 61.03108780000014 3.548 63.90882699999956 7.724 111.95807950000004 4.375 109.87245230000157 10.894 83.55303220000093 10.409 94.7654552000012 10.82 73.44694929999991 5.343 80.85526729999916 9.892 96.61210219999911 10.994 72.98422520000052 9.596 95.98089530000124 11.589 83.29139310000006 9.696 65.91566640000045 8.512 69.9431679000001 11.566 80.2348168999995 10.635 79.71691809999925 9.801 79.39246130000072 10.238 101.58319330000145 9.906 75.01419229999973 11.385 126.62220920000185 10.78 75.87782499999956 11.548)
Error minima by case: (6.0 2 0.0 0 3.4204 1 0.3344 1 0.0 0 0.0366 1 6.0 1 1.0 1 1.0 1 1.0 1 3.0 2 1.0 1 1.0969 1 0.0 0 1.0 1 0.1344 1 0.4168 1 1.0 1 1.4132 1 0.283 1 1.0 1 1.0 1 2.0 1 1.0 1 1.0 1)
Average genome size in population (length): 70.336
Average program size in population (points): 71.336
Average percent parens in population: 0.014
Minimum age in population: 45.20208125561476
Maximum age in population: 50.41981562878937
Average age in population: 47.93656801268412
Median age in population: 47.97404286311939
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 59
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.343
Error (vector) diversity:			 0.379
Behavioral diversity:				 0.379
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 37106162
--- Timings ---
Current time: 1529616046023 milliseconds
Total Time:         116.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.5 seconds, 41.6%
Fitness Testing:     54.2 seconds, 46.5%
Report:              13.7 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 5966.2488
Test mean error for best: 2.98312
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -151.2716840824
Correct output: -5.6690006657  | Program output: -11.6690006657
Correct output: -103.2151508674 | Program output: -109.2151508674
Correct output: -82.6655718784 | Program output: -88.6655718784
Correct output: -12.2587539292 | Program output: -18.2587539292
Correct output: -11.987804337  | Program output: -17.987804337 
Correct output: -92.1014631566 | Program output: -98.1014631566
Correct output: 153.8993650016 | Program output: 151.8993650016
Correct output: 41.7054025242  | Program output: 39.7054025242 
Correct output: 161.7793110649 | Program output: 159.7793110649
Correct output: 70.8245827301  | Program output: 68.8245827301 
Correct output: -60.2289340046 | Program output: -62.2289340046
Correct output: 30.6800990656  | Program output: 24.6800990656 
Correct output: -5.7482231862  | Program output: -11.7482231862
Correct output: 29.1551758854  | Program output: 27.1551758854 
Correct output: -33.542179218  | Program output: -39.542179218 
Correct output: 82.3963074555  | Program output: 80.3963074555 
Correct output: 56.0786467305  | Program output: 54.0786467305 
Correct output: -27.6313224673 | Program output: -33.6313224673
Correct output: 33.300212358   | Program output: 31.300212358  
Correct output: 4.1283717089   | Program output: 2.1283717089  
Correct output: -14.0000938255 | Program output: -16.0000938255
Correct output: 13.8514317422  | Program output: 7.8514317422  
Correct output: 172.9961793209 | Program output: 170.9961793209
Correct output: -14.5973679613 | Program output: -16.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction float_flush} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction float_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_pop} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth float_flush integer_shove float_tan float_add integer_stackdepth float_yankdup float_inc float_yankdup in1 integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult float_swap in1 integer_mult integer_pop float_dec integer_mult integer_pop float_dec integer_mult integer_flush integer_pop in2 integer_inc float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [6.0 2 6.0 2 6.0 1 6.0 1 6.0 1 6.0 1 6.0 1 2.0 1 2.0 2 2.0 2 2.0 2 2.0 1 6.0 2 6.0 2 2.0 1 6.0 1 2.0 1 2.0 1 6.0 2 2.0 1 2.0 1 2.0 1 6.0 2 2.0 1 2.0 1]
Total: 132.0
Mean: 2.64
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2525.3393550000023
Median total errors in population: 938.9558000000001
Error averages by case: (136.66313539999993 5.11 70.91703140000014 6.803 130.40297669999975 5.044 130.95067960000026 4.311 64.87703330000019 3.41 67.67718889999979 5.301 114.23789039999986 4.083 111.01185760000185 10.827 85.79448470000085 10.35 95.91121770000143 10.745 76.98917409999989 5.742 86.07047219999909 9.88 101.87504089999938 11.092 77.13341890000021 7.294 98.58009470000141 11.599 84.11641870000018 7.238 68.70784900000035 8.541 73.29424759999988 11.521 82.04561719999973 7.83 83.73427539999929 9.739 84.10420750000071 10.144 106.08697560000168 9.915 78.38756329999981 10.9 127.53655420000216 10.729 78.52994999999953 11.556)
Error minima by case: (3.7283 2 0.007 1 6.0 1 0.3344 1 0.0 0 0.0 0 6.0 1 1.0 1 1.0 1 1.0 1 2.0 2 1.0 1 0.7035 1 0.0436 1 1.0 1 1.1664 1 0.4168 1 1.0 1 0.1664 1 1.0 1 1.0 1 1.0 1 0.0 0 1.0 1 1.0 1)
Average genome size in population (length): 71.166
Average program size in population (points): 72.166
Average percent parens in population: 0.014
Minimum age in population: 46.20208125561476
Maximum age in population: 51.8184351939708
Average age in population: 49.64028098081541
Median age in population: 49.72973539959639
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.361
Error (vector) diversity:			 0.407
Behavioral diversity:				 0.408
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 38885312
--- Timings ---
Current time: 1529616050013 milliseconds
Total Time:         120.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.9 seconds, 41.4%
Fitness Testing:     56.5 seconds, 46.8%
Report:              14.1 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 5199.1112
Test mean error for best: 2.59956
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -149.2716840824
Correct output: -5.6690006657  | Program output: -9.6690006657 
Correct output: -103.2151508674 | Program output: -107.2151508674
Correct output: -82.6655718784 | Program output: -86.6655718784
Correct output: -12.2587539292 | Program output: -16.2587539292
Correct output: -11.987804337  | Program output: -15.987804337 
Correct output: -92.1014631566 | Program output: -96.1014631566
Correct output: 153.8993650016 | Program output: 151.8993650016
Correct output: 41.7054025242  | Program output: 39.7054025242 
Correct output: 161.7793110649 | Program output: 159.7793110649
Correct output: 70.8245827301  | Program output: 68.8245827301 
Correct output: -60.2289340046 | Program output: -62.2289340046
Correct output: 30.6800990656  | Program output: 26.6800990656 
Correct output: -5.7482231862  | Program output: -9.7482231862 
Correct output: 29.1551758854  | Program output: 27.1551758854 
Correct output: -33.542179218  | Program output: -37.542179218 
Correct output: 82.3963074555  | Program output: 80.3963074555 
Correct output: 56.0786467305  | Program output: 54.0786467305 
Correct output: -27.6313224673 | Program output: -31.6313224673
Correct output: 33.300212358   | Program output: 31.300212358  
Correct output: 4.1283717089   | Program output: 2.1283717089  
Correct output: -14.0000938255 | Program output: -16.0000938255
Correct output: 13.8514317422  | Program output: 9.8514317422  
Correct output: 172.9961793209 | Program output: 170.9961793209
Correct output: -14.5973679613 | Program output: -16.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction float_flush} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction float_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction in1} {:instruction integer_pop} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth float_flush integer_shove float_tan float_add integer_stackdepth float_yankdup float_inc float_yankdup float_tan integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult float_swap in1 integer_mult integer_pop float_dec integer_mult integer_pop float_dec integer_mult in1 integer_pop in2 integer_inc float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [4.0 1 4.0 1 4.0 1 4.0 1 4.0 1 4.0 1 4.0 1 2.0 1 2.0 2 2.0 2 2.0 2 2.0 1 4.0 2 4.0 1 2.0 1 4.0 1 2.0 1 2.0 1 4.0 2 2.0 1 2.0 1 2.0 1 4.0 2 2.0 1 2.0 1]
Total: 105.0
Mean: 2.1
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2067.0773570000038
Median total errors in population: 908.5804
Error averages by case: (115.18035720000012 5.081 54.235533400000016 4.803 108.46885089999985 5.125 111.1538506000004 4.347 47.46717190000007 3.527 51.27612149999996 3.94 92.85617319999997 4.053 94.7253826000011 10.688 68.57160230000001 10.204 79.70220260000065 10.641 61.24820620000015 5.161 69.62711979999982 9.727 85.53793609999978 11.208 60.561206800000065 5.083 80.98312090000064 11.557 61.46558950000017 4.889 52.948597300000344 8.486 57.406375900000405 11.392 60.82571140000006 5.201 67.65174250000018 9.623 65.40510539999956 9.922 89.15627260000089 9.732 59.20123989999989 10.384 111.1880991000017 10.597 63.44978740000048 11.413)
Error minima by case: (3.7283 1 0.331 1 4.0 1 0.3344 1 0.0 0 0.0366 1 4.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 4.0 1 0.2518 1 1.0 1 1.8656 1 0.4168 1 1.0 1 0.6593 1 0.283 1 1.0 1 1.0 1 0.8514 1 1.0 1 1.0 1)
Average genome size in population (length): 72.795
Average program size in population (points): 73.795
Average percent parens in population: 0.014
Minimum age in population: 48.74943552631885
Maximum age in population: 53.23965415381826
Average age in population: 51.30277960307768
Median age in population: 51.34607203881023
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.769
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.769
Total error diversity:				 0.334
Error (vector) diversity:			 0.404
Behavioral diversity:				 0.404
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 40705187
--- Timings ---
Current time: 1529616054097 milliseconds
Total Time:         124.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.3 seconds, 41.2%
Fitness Testing:     58.6 seconds, 47.0%
Report:              14.6 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 5199.1112
Test mean error for best: 2.59956
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -149.2716840824
Correct output: -5.6690006657  | Program output: -9.6690006657 
Correct output: -103.2151508674 | Program output: -107.2151508674
Correct output: -82.6655718784 | Program output: -86.6655718784
Correct output: -12.2587539292 | Program output: -16.2587539292
Correct output: -11.987804337  | Program output: -15.987804337 
Correct output: -92.1014631566 | Program output: -96.1014631566
Correct output: 153.8993650016 | Program output: 151.8993650016
Correct output: 41.7054025242  | Program output: 39.7054025242 
Correct output: 161.7793110649 | Program output: 159.7793110649
Correct output: 70.8245827301  | Program output: 68.8245827301 
Correct output: -60.2289340046 | Program output: -62.2289340046
Correct output: 30.6800990656  | Program output: 26.6800990656 
Correct output: -5.7482231862  | Program output: -9.7482231862 
Correct output: 29.1551758854  | Program output: 27.1551758854 
Correct output: -33.542179218  | Program output: -37.542179218 
Correct output: 82.3963074555  | Program output: 80.3963074555 
Correct output: 56.0786467305  | Program output: 54.0786467305 
Correct output: -27.6313224673 | Program output: -31.6313224673
Correct output: 33.300212358   | Program output: 31.300212358  
Correct output: 4.1283717089   | Program output: 2.1283717089  
Correct output: -14.0000938255 | Program output: -16.0000938255
Correct output: 13.8514317422  | Program output: 9.8514317422  
Correct output: 172.9961793209 | Program output: 170.9961793209
Correct output: -14.5973679613 | Program output: -16.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction float_flush} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction integer_stackdepth} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_tan} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction float_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction in1} {:instruction integer_pop} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth float_flush integer_shove float_tan float_add integer_stackdepth float_yankdup float_inc float_yankdup float_tan integer_mult integer_pop float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult float_swap in1 integer_mult integer_pop float_dec integer_mult integer_pop float_dec integer_mult in1 integer_pop in2 integer_inc float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec float_yankdup in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [4.0 1 4.0 1 4.0 1 4.0 1 4.0 1 4.0 1 4.0 1 2.0 1 2.0 2 2.0 2 2.0 2 2.0 1 4.0 2 4.0 1 2.0 1 4.0 1 2.0 1 2.0 1 4.0 2 2.0 1 2.0 1 2.0 1 4.0 2 2.0 1 2.0 1]
Total: 105.0
Mean: 2.1
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2368.524895500005
Median total errors in population: 901.8336
Error averages by case: (121.38597810000003 5.064 69.20692470000002 4.62 115.53158099999985 5.001 113.56903350000019 4.321 64.84631000000024 3.685 66.4240069 3.811 102.24376369999987 4.105 104.68058710000133 10.069 81.98776410000055 9.815 92.40177680000102 10.129 73.31042599999998 5.211 84.65492739999911 9.174 95.66815149999971 9.947 74.48058370000001 4.836 95.99617630000115 10.996 73.69311890000013 4.548 69.36423810000021 8.334 72.53762680000006 10.659 73.22626609999996 5.014 80.37420359999928 9.079 82.8813780000006 9.448 101.82181180000129 9.147 74.80933159999992 9.316 118.50601680000163 10.072 77.81891299999957 10.703)
Error minima by case: (2.0 1 0.2017 1 2.0 1 0.3344 1 0.0 0 0.0122 1 2.0 1 1.0 1 0.994 1 1.0 1 1.0 1 1.0 1 2.0 1 0.2417 1 0.8336 1 2.0 1 0.4168 1 1.0 1 2.0 1 0.283 1 1.0 1 1.0 1 0.8514 1 1.0 1 1.0 1)
Average genome size in population (length): 70.112
Average program size in population (points): 71.112
Average percent parens in population: 0.014
Minimum age in population: 50.20808068383485
Maximum age in population: 54.78075124009047
Average age in population: 52.78414403663774
Median age in population: 52.84369592892472
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.753
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.753
Total error diversity:				 0.318
Error (vector) diversity:			 0.384
Behavioral diversity:				 0.385
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 42457987
--- Timings ---
Current time: 1529616058347 milliseconds
Total Time:         128.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.9 seconds, 41.0%
Fitness Testing:     60.8 seconds, 47.2%
Report:              15.0 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 2151.0
Test mean error for best: 1.07550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -146.2716840824
Correct output: -5.6690006657  | Program output: -6.6690006657 
Correct output: -103.2151508674 | Program output: -104.2151508674
Correct output: -82.6655718784 | Program output: -83.6655718784
Correct output: -12.2587539292 | Program output: -13.2587539292
Correct output: -11.987804337  | Program output: -12.987804337 
Correct output: -92.1014631566 | Program output: -93.1014631566
Correct output: 153.8993650016 | Program output: 152.8993650016
Correct output: 41.7054025242  | Program output: 40.7054025242 
Correct output: 161.7793110649 | Program output: 160.7793110649
Correct output: 70.8245827301  | Program output: 69.8245827301 
Correct output: -60.2289340046 | Program output: -61.2289340046
Correct output: 30.6800990656  | Program output: 29.6800990656 
Correct output: -5.7482231862  | Program output: -6.7482231862 
Correct output: 29.1551758854  | Program output: 28.1551758854 
Correct output: -33.542179218  | Program output: -34.542179218 
Correct output: 82.3963074555  | Program output: 81.3963074555 
Correct output: 56.0786467305  | Program output: 55.0786467305 
Correct output: -27.6313224673 | Program output: -28.6313224673
Correct output: 33.300212358   | Program output: 32.300212358  
Correct output: 4.1283717089   | Program output: 3.1283717089  
Correct output: -14.0000938255 | Program output: -15.0000938255
Correct output: 13.8514317422  | Program output: 12.8514317422 
Correct output: 172.9961793209 | Program output: 171.9961793209
Correct output: -14.5973679613 | Program output: -15.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction tag_integer_36} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction float_yankdup} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_shove} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction in1} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove tag_integer_36 float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult float_yankdup float_dec -35.58319311696867 float_sub integer_swap integer_dup float_shove in1 integer_mult integer_mult in1 integer_mult integer_pop integer_mult integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 float_shove integer_pop float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec in1 in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 52.0
Mean: 1.04
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2036.1116387000025
Median total errors in population: 653.5816
Error averages by case: (84.26403660000007 4.481 66.47771159999995 4.276 83.16314819999992 4.184 77.63947600000004 3.722 62.830318600000126 3.514 62.92522070000001 3.301 77.7045956 3.592 85.93116690000012 7.371 75.49294420000012 7.453 82.24002050000014 7.671 75.19219220000004 6.03 76.09207279999995 6.78 78.85767489999989 6.139 73.68916989999997 4.466 82.0194492000001 7.804 69.10801650000006 3.881 71.61325690000008 6.626 71.91755340000009 7.667 69.41729550000001 4.621 73.53345390000001 6.663 75.5756538000001 7.436 85.87800260000006 6.576 66.91358769999995 5.992 91.49314720000005 7.571 70.61347330000005 7.712)
Error minima by case: (0.8947 1 0.331 1 1.0 1 0.3344 1 0.0 0 0.0122 1 1.0 1 1.0 1 0.994 1 1.0 1 1.0 1 1.0 1 1.0 1 0.2518 1 1.0 1 1.0 1 0.4168 1 0.0786 1 1.0 1 1.0 1 0.1284 1 5.0E-4 1 0.0 0 1.0 1 1.0 1)
Average genome size in population (length): 62.153
Average program size in population (points): 63.153
Average percent parens in population: 0.016
Minimum age in population: 51.96897017140873
Maximum age in population: 56.16672208622913
Average age in population: 54.41864896899901
Median age in population: 54.47884839930339
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.278
Error (vector) diversity:			 0.31
Behavioral diversity:				 0.311
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 44011812
--- Timings ---
Current time: 1529616062228 milliseconds
Total Time:         132.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.3 seconds, 40.9%
Fitness Testing:     62.7 seconds, 47.3%
Report:              15.6 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 2151.0
Test mean error for best: 1.07550
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -146.2716840824
Correct output: -5.6690006657  | Program output: -6.6690006657 
Correct output: -103.2151508674 | Program output: -104.2151508674
Correct output: -82.6655718784 | Program output: -83.6655718784
Correct output: -12.2587539292 | Program output: -13.2587539292
Correct output: -11.987804337  | Program output: -12.987804337 
Correct output: -92.1014631566 | Program output: -93.1014631566
Correct output: 153.8993650016 | Program output: 152.8993650016
Correct output: 41.7054025242  | Program output: 40.7054025242 
Correct output: 161.7793110649 | Program output: 160.7793110649
Correct output: 70.8245827301  | Program output: 69.8245827301 
Correct output: -60.2289340046 | Program output: -61.2289340046
Correct output: 30.6800990656  | Program output: 29.6800990656 
Correct output: -5.7482231862  | Program output: -6.7482231862 
Correct output: 29.1551758854  | Program output: 28.1551758854 
Correct output: -33.542179218  | Program output: -34.542179218 
Correct output: 82.3963074555  | Program output: 81.3963074555 
Correct output: 56.0786467305  | Program output: 55.0786467305 
Correct output: -27.6313224673 | Program output: -28.6313224673
Correct output: 33.300212358   | Program output: 32.300212358  
Correct output: 4.1283717089   | Program output: 3.1283717089  
Correct output: -14.0000938255 | Program output: -15.0000938255
Correct output: 13.8514317422  | Program output: 12.8514317422 
Correct output: 172.9961793209 | Program output: 171.9961793209
Correct output: -14.5973679613 | Program output: -15.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction in2} {:instruction float_shove} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_dec} {:instruction in1} {:instruction in2} {:instruction float_frominteger} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (float_yankdup float_dec -35.58319311696867 float_sub integer_swap integer_dup float_shove in1 integer_mult integer_mult in1 integer_mult integer_pop integer_mult integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 integer_pop float_dec float_yankdup in2 float_yankdup float_yankdup in2 float_shove integer_pop float_dec float_yankdup in2 float_yankdup integer_pop float_dec float_yankdup in2 float_yankdup integer_flush float_dec in1 in2 float_frominteger float_dec float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 52.0
Mean: 1.04
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 1433.1415011000001
Median total errors in population: 132.0
Error averages by case: (55.661776799999984 3.193 54.41927189999998 3.119 53.693281600000006 2.684 53.0863984 2.48 49.74523030000002 2.49 50.24131069999996 2.311 53.29781049999997 2.508 56.56988340000004 2.966 50.94152600000001 3.663 57.97224740000004 3.702 55.64171790000003 3.676 54.95110980000005 2.874 57.17890599999997 3.427 60.87650899999996 3.213 55.12501060000001 3.015 53.80005929999994 2.58 54.51704280000001 2.941 52.76871910000004 2.908 54.8958734 3.374 50.66814529999998 2.743 54.44333419999999 3.15 58.27856099999998 2.843 49.92238689999998 3.261 57.23628420000002 3.072 52.085104600000015 2.931)
Error minima by case: (1.0 1 1.0 1 1.0 1 0.3344 1 0.1132 1 0.9392 1 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 1.0 1 1.0 1 0.0 0 1.0 1 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0 0.0 0 1.0 1 0.0 0 0.0 0)
Average genome size in population (length): 59.268
Average program size in population (points): 60.268
Average percent parens in population: 0.017
Minimum age in population: 53.89785204792861
Maximum age in population: 57.55494309967617
Average age in population: 55.91970692444245
Median age in population: 55.95401056695118
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.701
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.701
Total error diversity:				 0.198
Error (vector) diversity:			 0.212
Behavioral diversity:				 0.213
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 45493512
--- Timings ---
Current time: 1529616066139 milliseconds
Total Time:         136.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.9 seconds, 40.9%
Fitness Testing:     64.6 seconds, 47.2%
Report:              16.2 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 1520.6656000000003
Test mean error for best: 0.76033
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -148.2716840824
Correct output: -5.6690006657  | Program output: -5.6690006657 
Correct output: -103.2151508674 | Program output: -106.2151508674
Correct output: -82.6655718784 | Program output: -85.6655718784
Correct output: -12.2587539292 | Program output: -15.2587539292
Correct output: -11.987804337  | Program output: -14.987804337 
Correct output: -92.1014631566 | Program output: -95.1014631566
Correct output: 153.8993650016 | Program output: 153.8993650016
Correct output: 41.7054025242  | Program output: 41.7054025242 
Correct output: 161.7793110649 | Program output: 161.7793110649
Correct output: 70.8245827301  | Program output: 70.8245827301 
Correct output: -60.2289340046 | Program output: -60.2289340046
Correct output: 30.6800990656  | Program output: 30.6800990656 
Correct output: -5.7482231862  | Program output: -5.7482231862 
Correct output: 29.1551758854  | Program output: 29.1551758854 
Correct output: -33.542179218  | Program output: -33.542179218 
Correct output: 82.3963074555  | Program output: 82.3963074555 
Correct output: 56.0786467305  | Program output: 56.0786467305 
Correct output: -27.6313224673 | Program output: -27.6313224673
Correct output: 33.300212358   | Program output: 33.300212358  
Correct output: 4.1283717089   | Program output: 4.1283717089  
Correct output: -14.0000938255 | Program output: -14.0000938255
Correct output: 13.8514317422  | Program output: 13.8514317422 
Correct output: 172.9961793209 | Program output: 172.9961793209
Correct output: -14.5973679613 | Program output: -14.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_tan} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_mult} {:instruction float_dec} {:instruction -35.58319311696867} {:instruction float_sub} {:instruction integer_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction in1} {:instruction integer_mult} {:instruction float_swap} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_pop} {:instruction in2} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction integer_pop} {:instruction integer_fromfloat} {:instruction float_yankdup} {:instruction in2} {:instruction in2} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove float_tan float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_mult float_dec -35.58319311696867 float_sub integer_swap integer_dup integer_flush in1 integer_mult float_swap in1 integer_mult integer_pop float_dec integer_mult integer_pop float_dec integer_mult integer_flush integer_pop in2 integer_inc float_dec float_yankdup in2 float_yankdup integer_pop integer_fromfloat float_yankdup in2 in2 float_yankdup integer_flush integer_dup_items float_yankdup in2 float_frominteger float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [3.0 1 0.0 0 3.0 1 3.0 1 3.0 1 3.0 1 3.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 24.0
Mean: 0.48
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 1674.3408511
Median total errors in population: 105.0
Error averages by case: (68.06403850000001 2.877 65.21129099999995 2.701 66.234785 2.65 64.92005010000001 2.566 60.59385030000001 2.517 60.75406599999996 2.41 65.3041685 2.547 64.78182880000003 2.671 61.56831820000002 3.319 65.93901880000003 3.282 63.38014030000002 3.384 63.519003500000025 2.631 67.21015689999997 3.389 71.64090079999995 2.778 63.40508359999999 2.803 65.77547969999993 2.52 62.32732510000004 2.621 61.04805930000004 2.577 66.56273059999998 3.222 60.10443879999999 2.467 61.96592639999998 2.709 67.06589549999997 2.631 60.87826569999999 2.979 65.73389740000003 2.734 60.7131323 2.654)
Error minima by case: (1.0 1 0.0 0 1.0 1 0.3344 1 0.2588 1 0.9878 1 1.0 1 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 59.208
Average program size in population (points): 60.208
Average percent parens in population: 0.017
Minimum age in population: 55.01817514930735
Maximum age in population: 59.5051186488563
Average age in population: 57.37444805900256
Median age in population: 57.41052212473733
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.157
Error (vector) diversity:			 0.173
Behavioral diversity:				 0.175
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 46973712
--- Timings ---
Current time: 1529616069931 milliseconds
Total Time:         140.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.2 seconds, 40.7%
Fitness Testing:     66.6 seconds, 47.4%
Report:              16.6 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -145.2716840824
Correct output: -5.6690006657  | Program output: -5.6690006657 
Correct output: -103.2151508674 | Program output: -103.2151508674
Correct output: -82.6655718784 | Program output: -82.6655718784
Correct output: -12.2587539292 | Program output: -12.2587539292
Correct output: -11.987804337  | Program output: -11.987804337 
Correct output: -92.1014631566 | Program output: -92.1014631566
Correct output: 153.8993650016 | Program output: 153.8993650016
Correct output: 41.7054025242  | Program output: 41.7054025242 
Correct output: 161.7793110649 | Program output: 161.7793110649
Correct output: 70.8245827301  | Program output: 70.8245827301 
Correct output: -60.2289340046 | Program output: -60.2289340046
Correct output: 30.6800990656  | Program output: 30.6800990656 
Correct output: -5.7482231862  | Program output: -5.7482231862 
Correct output: 29.1551758854  | Program output: 29.1551758854 
Correct output: -33.542179218  | Program output: -33.542179218 
Correct output: 82.3963074555  | Program output: 82.3963074555 
Correct output: 56.0786467305  | Program output: 56.0786467305 
Correct output: -27.6313224673 | Program output: -27.6313224673
Correct output: 33.300212358   | Program output: 33.300212358  
Correct output: 4.1283717089   | Program output: 4.1283717089  
Correct output: -14.0000938255 | Program output: -14.0000938255
Correct output: 13.8514317422  | Program output: 13.8514317422 
Correct output: 172.9961793209 | Program output: 172.9961793209
Correct output: -14.5973679613 | Program output: -14.5973679613
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_36} {:instruction float_shove} {:instruction float_stackdepth} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_flush} {:instruction float_add} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_yankdup} {:instruction in1} {:instruction integer_dup} {:instruction integer_pop} {:instruction in1} {:instruction integer_mult} {:instruction integer_mult} {:instruction in1} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_flush} {:instruction integer_pop} {:instruction integer_dup} {:instruction integer_inc} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction float_dec} {:instruction float_yankdup} {:instruction in2} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_frominteger} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_min} {:instruction integer_div})
Best program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove integer_flush integer_flush float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_dup integer_pop in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_pop float_dec integer_mult float_frominteger float_dec integer_mult integer_flush integer_pop integer_dup integer_inc float_dec float_yankdup in2 integer_flush integer_pop float_dec float_yankdup in2 float_yankdup float_stackdepth float_dec float_yankdup in2 float_frominteger float_stackdepth float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 1731.9821043000002
Median total errors in population: 77.0
Error averages by case: (66.57808260000003 2.839 65.49583599999994 2.76 66.0248016 2.783 66.4788687 2.719 62.05648230000002 2.666 62.47533589999996 2.606 64.92678930000004 2.645 67.65005720000002 2.792 65.34051290000008 3.172 69.10179230000004 3.071 67.29717850000004 3.508 67.15553970000005 2.817 67.95603909999996 3.537 72.33157029999992 2.888 68.25359079999997 3.017 66.07285539999991 2.748 65.76730300000003 2.72 64.31367350000006 2.738 66.5234019 3.042 63.32606279999999 2.576 67.67519899999994 2.911 71.83508259999994 2.706 62.798081799999984 2.808 68.54689150000004 2.817 64.30207559999998 2.813)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 58.134
Average program size in population (points): 59.134
Average percent parens in population: 0.017
Minimum age in population: 56.6519190084
Maximum age in population: 60.86524654060122
Average age in population: 58.83777870731144
Median age in population: 58.88742699428803
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.723
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.723
Total error diversity:				 0.155
Error (vector) diversity:			 0.169
Behavioral diversity:				 0.17
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 48427087
--- Timings ---
Current time: 1529616073702 milliseconds
Total Time:         144.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.7 seconds, 40.7%
Fitness Testing:     68.4 seconds, 47.4%
Report:              17.0 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 39
Successful program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove integer_flush integer_flush float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_dup integer_pop in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_pop float_dec integer_mult float_frominteger float_dec integer_mult integer_flush integer_pop integer_dup integer_inc float_dec float_yankdup in2 integer_flush integer_pop float_dec float_yankdup in2 float_yankdup float_stackdepth float_dec float_yankdup in2 float_frominteger float_stackdepth float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 59


Auto-simplifying with starting size: 59
step: 0
program: (tag_integer_36 float_shove float_stackdepth integer_fromfloat integer_shove integer_flush integer_flush float_add float_dup_items float_yankdup float_inc float_yankdup in1 integer_dup integer_pop in1 integer_mult integer_mult in1 integer_mult integer_pop float_dec float_yankdup integer_flush integer_pop float_dec integer_mult float_frominteger float_dec integer_mult integer_flush integer_pop integer_dup integer_inc float_dec float_yankdup in2 integer_flush integer_pop float_dec float_yankdup in2 float_yankdup float_stackdepth float_dec float_yankdup in2 float_frominteger float_stackdepth float_yankdup float_add float_yankdup integer_flush float_frominteger print_float float_stackdepth integer_min integer_div)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 59

step: 500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -145.2716840824 | Program output: -145.2716840824
Correct output: -5.6690006657  | Program output: -5.6690006657 
Correct output: -103.2151508674 | Program output: -103.2151508674
Correct output: -82.6655718784 | Program output: -82.6655718784
Correct output: -12.2587539292 | Program output: -12.2587539292
Correct output: -11.987804337  | Program output: -11.987804337 
Correct output: -92.1014631566 | Program output: -92.1014631566
Correct output: 153.8993650016 | Program output: 153.8993650016
Correct output: 41.7054025242  | Program output: 41.7054025242 
Correct output: 161.7793110649 | Program output: 161.7793110649
Correct output: 70.8245827301  | Program output: 70.8245827301 
Correct output: -60.2289340046 | Program output: -60.2289340046
Correct output: 30.6800990656  | Program output: 30.6800990656 
Correct output: -5.7482231862  | Program output: -5.7482231862 
Correct output: 29.1551758854  | Program output: 29.1551758854 
Correct output: -33.542179218  | Program output: -33.542179218 
Correct output: 82.3963074555  | Program output: 82.3963074555 
Correct output: 56.0786467305  | Program output: 56.0786467305 
Correct output: -27.6313224673 | Program output: -27.6313224673
Correct output: 33.300212358   | Program output: 33.300212358  
Correct output: 4.1283717089   | Program output: 4.1283717089  
Correct output: -14.0000938255 | Program output: -14.0000938255
Correct output: 13.8514317422  | Program output: 13.8514317422 
Correct output: 172.9961793209 | Program output: 172.9961793209
Correct output: -14.5973679613 | Program output: -14.5973679613
;;******************************
