Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[97.57456005681826 4] 101.57456005681826]
Train Case:   1 | Input/Output: [[87.41117213973936 89] 176.41117213973936]
Train Case:   2 | Input/Output: [[-50.98554701365898 5] -45.98554701365898]
Train Case:   3 | Input/Output: [[15.815786904119221 -85] -69.18421309588078]
Train Case:   4 | Input/Output: [[-16.75249744665925 80] 63.24750255334075]
Train Case:   5 | Input/Output: [[-36.285408071811446 -15] -51.285408071811446]
Train Case:   6 | Input/Output: [[40.21643948652101 -8] 32.21643948652101]
Train Case:   7 | Input/Output: [[-87.10819344440712 -44] -131.1081934444071]
Train Case:   8 | Input/Output: [[-87.38710216051963 -20] -107.38710216051963]
Train Case:   9 | Input/Output: [[49.256221645825946 91] 140.25622164582595]
Train Case:  10 | Input/Output: [[46.556612727847835 98] 144.55661272784783]
Train Case:  11 | Input/Output: [[34.55042189516627 76] 110.55042189516627]
Train Case:  12 | Input/Output: [[96.58533233293159 -27] 69.58533233293159]
Train Case:  13 | Input/Output: [[-75.42181745686034 -65] -140.42181745686034]
Train Case:  14 | Input/Output: [[64.3121025449947 -96] -31.6878974550053]
Train Case:  15 | Input/Output: [[-88.38169340344113 89] 0.6183065965588668]
Train Case:  16 | Input/Output: [[-28.488180556413113 -74] -102.48818055641311]
Train Case:  17 | Input/Output: [[61.14850361018637 5] 66.14850361018637]
Train Case:  18 | Input/Output: [[-40.639948542746666 -76] -116.63994854274667]
Train Case:  19 | Input/Output: [[-59.92021071017128 99] 39.07978928982872]
Train Case:  20 | Input/Output: [[-50.98438030962329 -72] -122.98438030962329]
Train Case:  21 | Input/Output: [[51.43571791344135 71] 122.43571791344135]
Train Case:  22 | Input/Output: [[-9.863197193108888 -26] -35.86319719310889]
Train Case:  23 | Input/Output: [[-29.4435740003087 55] 25.5564259996913]
Train Case:  24 | Input/Output: [[-74.04264823110458 -91] -165.04264823110458]
Test Case:   0 | Input/Output: [[-31.895602808912926 -67] -98.89560280891293]
Test Case:   1 | Input/Output: [[-55.232142041785636 35] -20.232142041785636]
Test Case:   2 | Input/Output: [[50.404637754469746 68] 118.40463775446975]
Test Case:   3 | Input/Output: [[-60.552348106311335 26] -34.552348106311335]
Test Case:   4 | Input/Output: [[98.33199286739494 74] 172.33199286739494]
Test Case:   5 | Input/Output: [[20.84010533938627 82] 102.84010533938627]
Test Case:   6 | Input/Output: [[-46.34744204245009 98] 51.65255795754991]
Test Case:   7 | Input/Output: [[86.67889975418123 -9] 77.67889975418123]
Test Case:   8 | Input/Output: [[-44.219904474028326 86] 41.780095525971674]
Test Case:   9 | Input/Output: [[58.54630721602538 -68] -9.453692783974617]
Test Case:  10 | Input/Output: [[1.5708853407393235 89] 90.57088534073932]
Test Case:  11 | Input/Output: [[-51.18084497942632 -1] -52.18084497942632]
Test Case:  12 | Input/Output: [[-70.93006193075709 -96] -166.9300619307571]
Test Case:  13 | Input/Output: [[92.6838712563227 -36] 56.6838712563227]
Test Case:  14 | Input/Output: [[-52.6780875230658 -71] -123.6780875230658]
Test Case:  15 | Input/Output: [[6.679325463104476 27] 33.679325463104476]
Test Case:  16 | Input/Output: [[59.128602404324994 -22] 37.128602404324994]
Test Case:  17 | Input/Output: [[19.752727424464254 59] 78.75272742446425]
Test Case:  18 | Input/Output: [[-91.3729538007503 60] -31.372953800750295]
Test Case:  19 | Input/Output: [[-69.67851892216692 82] 12.321481077833084]
Test Case:  20 | Input/Output: [[16.51519858357861 10] 26.51519858357861]
Test Case:  21 | Input/Output: [[72.84984996804488 -40] 32.84984996804488]
Test Case:  22 | Input/Output: [[1.3264674565320007 27] 28.326467456532]
Test Case:  23 | Input/Output: [[57.76029531562287 -66] -8.23970468437713]
Test Case:  24 | Input/Output: [[75.30189392094476 -38] 37.301893920944764]
Test Case:  25 | Input/Output: [[-32.85827898248512 40] 7.141721017514882]
Test Case:  26 | Input/Output: [[-60.9941620598643 52] -8.994162059864301]
Test Case:  27 | Input/Output: [[93.47022592535237 -73] 20.470225925352366]
Test Case:  28 | Input/Output: [[-59.46239135952618 -17] -76.46239135952618]
Test Case:  29 | Input/Output: [[33.509309081294106 -89] -55.490690918705894]
Test Case:  30 | Input/Output: [[16.057314778108193 -65] -48.94268522189181]
Test Case:  31 | Input/Output: [[-98.7523307322455 63] -35.7523307322455]
Test Case:  32 | Input/Output: [[-22.976291834198165 33] 10.023708165801835]
Test Case:  33 | Input/Output: [[28.31899813224564 69] 97.31899813224564]
Test Case:  34 | Input/Output: [[31.519437680284796 -73] -41.480562319715204]
Test Case:  35 | Input/Output: [[-90.62933531040471 -55] -145.6293353104047]
Test Case:  36 | Input/Output: [[-54.55795509343086 60] 5.442044906569137]
Test Case:  37 | Input/Output: [[-85.60847486738908 -85] -170.60847486738908]
Test Case:  38 | Input/Output: [[-32.84851140288443 -60] -92.84851140288443]
Test Case:  39 | Input/Output: [[63.50056224750628 -59] 4.500562247506281]
Test Case:  40 | Input/Output: [[-75.20168945776044 -99] -174.20168945776044]
Test Case:  41 | Input/Output: [[76.45893156766769 94] 170.4589315676677]
Test Case:  42 | Input/Output: [[-68.7158583067445 -97] -165.7158583067445]
Test Case:  43 | Input/Output: [[-78.30141133815815 -6] -84.30141133815815]
Test Case:  44 | Input/Output: [[-61.34296600791347 71] 9.657033992086532]
Test Case:  45 | Input/Output: [[-34.13445398252681 5] -29.134453982526807]
Test Case:  46 | Input/Output: [[67.75738544605744 10] 77.75738544605744]
Test Case:  47 | Input/Output: [[-5.413188947816863 44] 38.58681105218314]
Test Case:  48 | Input/Output: [[-8.2606828736196 25] 16.7393171263804]
Test Case:  49 | Input/Output: [[16.44762091207066 -51] -34.55237908792934]
Test Case:  50 | Input/Output: [[62.60557312018085 90] 152.60557312018085]
Test Case:  51 | Input/Output: [[-52.857557049638814 -75] -127.85755704963881]
Test Case:  52 | Input/Output: [[-75.94699622283841 47] -28.946996222838408]
Test Case:  53 | Input/Output: [[-69.52654960663287 -63] -132.52654960663287]
Test Case:  54 | Input/Output: [[92.7622691805197 95] 187.7622691805197]
Test Case:  55 | Input/Output: [[87.13085926567393 -25] 62.130859265673934]
Test Case:  56 | Input/Output: [[-70.34230546920945 37] -33.34230546920945]
Test Case:  57 | Input/Output: [[1.9932488814857265 1] 2.9932488814857265]
Test Case:  58 | Input/Output: [[26.71578528019998 -58] -31.28421471980002]
Test Case:  59 | Input/Output: [[-62.16725864690027 -93] -155.16725864690028]
Test Case:  60 | Input/Output: [[-21.438758597083336 -78] -99.43875859708334]
Test Case:  61 | Input/Output: [[67.23315090973648 72] 139.23315090973648]
Test Case:  62 | Input/Output: [[77.94500274659265 4] 81.94500274659265]
Test Case:  63 | Input/Output: [[14.331523667336498 30] 44.3315236673365]
Test Case:  64 | Input/Output: [[78.63528114196805 -85] -6.364718858031949]
Test Case:  65 | Input/Output: [[-10.182060100653032 -82] -92.18206010065303]
Test Case:  66 | Input/Output: [[11.51880386521988 77] 88.51880386521988]
Test Case:  67 | Input/Output: [[20.387655719177005 -49] -28.612344280822995]
Test Case:  68 | Input/Output: [[34.313977351845864 -16] 18.313977351845864]
Test Case:  69 | Input/Output: [[66.6741621336661 83] 149.6741621336661]
Test Case:  70 | Input/Output: [[6.238875112874581 -61] -54.76112488712542]
Test Case:  71 | Input/Output: [[32.977285149613664 94] 126.97728514961366]
Test Case:  72 | Input/Output: [[-35.06341713999829 -13] -48.06341713999829]
Test Case:  73 | Input/Output: [[-80.95953065456914 43] -37.959530654569136]
Test Case:  74 | Input/Output: [[37.03451466742064 31] 68.03451466742064]
Test Case:  75 | Input/Output: [[-49.661517166679346 -18] -67.66151716667935]
Test Case:  76 | Input/Output: [[28.557330091196974 43] 71.55733009119697]
Test Case:  77 | Input/Output: [[67.85859523171288 80] 147.85859523171288]
Test Case:  78 | Input/Output: [[69.93901053771589 -82] -12.060989462284113]
Test Case:  79 | Input/Output: [[-9.472353310627142 -74] -83.47235331062714]
Test Case:  80 | Input/Output: [[29.254054421047528 91] 120.25405442104753]
Test Case:  81 | Input/Output: [[15.059493371502057 -40] -24.940506628497943]
Test Case:  82 | Input/Output: [[-33.49828229017737 79] 45.50171770982263]
Test Case:  83 | Input/Output: [[46.50987909407206 75] 121.50987909407206]
Test Case:  84 | Input/Output: [[-25.774962978133303 74] 48.2250370218667]
Test Case:  85 | Input/Output: [[-70.20623187457431 24] -46.206231874574314]
Test Case:  86 | Input/Output: [[-41.92801731266458 87] 45.07198268733542]
Test Case:  87 | Input/Output: [[-81.18083000866616 -4] -85.18083000866616]
Test Case:  88 | Input/Output: [[44.17448442670104 61] 105.17448442670104]
Test Case:  89 | Input/Output: [[-84.26196185866566 32] -52.26196185866566]
Test Case:  90 | Input/Output: [[-48.14127902031642 -43] -91.14127902031642]
Test Case:  91 | Input/Output: [[46.40266360716518 60] 106.40266360716518]
Test Case:  92 | Input/Output: [[-75.58835125498575 -67] -142.58835125498575]
Test Case:  93 | Input/Output: [[69.04329608293688 -14] 55.04329608293688]
Test Case:  94 | Input/Output: [[-17.804786126396536 70] 52.195213873603464]
Test Case:  95 | Input/Output: [[61.26148961399048 16] 77.26148961399048]
Test Case:  96 | Input/Output: [[18.001283878405516 99] 117.00128387840552]
Test Case:  97 | Input/Output: [[33.633406160220176 -98] -64.36659383977982]
Test Case:  98 | Input/Output: [[-75.2650005277107 -81] -156.2650005277107]
Test Case:  99 | Input/Output: [[-48.839410665046735 -21] -69.83941066504673]
Test Case: 100 | Input/Output: [[48.10821314986674 -82] -33.89178685013326]
Test Case: 101 | Input/Output: [[-43.642861289320514 -7] -50.642861289320514]
Test Case: 102 | Input/Output: [[92.96218610576685 81] 173.96218610576685]
Test Case: 103 | Input/Output: [[-96.04703177960647 20] -76.04703177960647]
Test Case: 104 | Input/Output: [[76.16621663638239 -93] -16.833783363617613]
Test Case: 105 | Input/Output: [[33.1884985856465 -11] 22.1884985856465]
Test Case: 106 | Input/Output: [[-41.41739652180596 -36] -77.41739652180595]
Test Case: 107 | Input/Output: [[25.862664306292544 19] 44.862664306292544]
Test Case: 108 | Input/Output: [[-98.66992724459655 59] -39.66992724459655]
Test Case: 109 | Input/Output: [[52.40881051393424 -79] -26.59118948606576]
Test Case: 110 | Input/Output: [[40.01550542979206 99] 139.01550542979206]
Test Case: 111 | Input/Output: [[-10.541569831603042 81] 70.45843016839696]
Test Case: 112 | Input/Output: [[-78.92321963867698 -44] -122.92321963867698]
Test Case: 113 | Input/Output: [[88.41766866938596 -29] 59.41766866938596]
Test Case: 114 | Input/Output: [[58.12041112795245 -14] 44.12041112795245]
Test Case: 115 | Input/Output: [[5.708222547755668 -62] -56.29177745224433]
Test Case: 116 | Input/Output: [[72.83841516125204 -79] -6.161584838747956]
Test Case: 117 | Input/Output: [[2.9796932988821254 86] 88.97969329888213]
Test Case: 118 | Input/Output: [[-21.128316472020956 48] 26.871683527979044]
Test Case: 119 | Input/Output: [[80.61159177516785 88] 168.61159177516785]
Test Case: 120 | Input/Output: [[-39.65985414789168 -2] -41.65985414789168]
Test Case: 121 | Input/Output: [[37.97309795939887 -53] -15.02690204060113]
Test Case: 122 | Input/Output: [[-23.21232348414523 64] 40.78767651585477]
Test Case: 123 | Input/Output: [[21.88006842831804 -26] -4.11993157168196]
Test Case: 124 | Input/Output: [[75.21426817415241 -48] 27.21426817415241]
Test Case: 125 | Input/Output: [[-25.09481686623785 59] 33.90518313376215]
Test Case: 126 | Input/Output: [[55.87693543493546 22] 77.87693543493546]
Test Case: 127 | Input/Output: [[-48.61914849152789 -97] -145.61914849152788]
Test Case: 128 | Input/Output: [[37.9156937559255 -86] -48.0843062440745]
Test Case: 129 | Input/Output: [[-21.118286053343112 8] -13.118286053343112]
Test Case: 130 | Input/Output: [[17.809144875090666 -100] -82.19085512490933]
Test Case: 131 | Input/Output: [[-57.778247650760676 -54] -111.77824765076068]
Test Case: 132 | Input/Output: [[-43.984731831471954 35] -8.984731831471954]
Test Case: 133 | Input/Output: [[91.67025994839122 -35] 56.67025994839122]
Test Case: 134 | Input/Output: [[61.84423871994241 -86] -24.15576128005759]
Test Case: 135 | Input/Output: [[-73.63886068125083 4] -69.63886068125083]
Test Case: 136 | Input/Output: [[52.651900301937616 -8] 44.651900301937616]
Test Case: 137 | Input/Output: [[-62.72425588342716 -16] -78.72425588342716]
Test Case: 138 | Input/Output: [[86.8338868836127 32] 118.8338868836127]
Test Case: 139 | Input/Output: [[-65.82045282252717 -20] -85.82045282252717]
Test Case: 140 | Input/Output: [[31.925558112197052 42] 73.92555811219705]
Test Case: 141 | Input/Output: [[41.532719296945174 91] 132.53271929694517]
Test Case: 142 | Input/Output: [[-37.65493450986808 -20] -57.65493450986808]
Test Case: 143 | Input/Output: [[6.792302715656206 46] 52.792302715656206]
Test Case: 144 | Input/Output: [[28.129007109842377 76] 104.12900710984238]
Test Case: 145 | Input/Output: [[-53.60556354298212 99] 45.39443645701788]
Test Case: 146 | Input/Output: [[-16.8918197904446 -7] -23.8918197904446]
Test Case: 147 | Input/Output: [[-52.776940264340475 63] 10.223059735659525]
Test Case: 148 | Input/Output: [[52.163876252431095 -61] -8.836123747568905]
Test Case: 149 | Input/Output: [[-31.709122161913854 -24] -55.709122161913854]
Test Case: 150 | Input/Output: [[-47.87365651644211 -14] -61.87365651644211]
Test Case: 151 | Input/Output: [[-94.65163754424277 6] -88.65163754424277]
Test Case: 152 | Input/Output: [[-2.7564588947513613 -53] -55.75645889475136]
Test Case: 153 | Input/Output: [[-67.08264005681559 9] -58.08264005681559]
Test Case: 154 | Input/Output: [[27.83294810488377 34] 61.83294810488377]
Test Case: 155 | Input/Output: [[45.795333524350326 18] 63.795333524350326]
Test Case: 156 | Input/Output: [[-18.30387451976337 -58] -76.30387451976337]
Test Case: 157 | Input/Output: [[-52.14805158429756 52] -0.14805158429756204]
Test Case: 158 | Input/Output: [[47.24458645021582 27] 74.24458645021582]
Test Case: 159 | Input/Output: [[-64.95870553629015 -76] -140.95870553629015]
Test Case: 160 | Input/Output: [[24.99555527508062 25] 49.99555527508062]
Test Case: 161 | Input/Output: [[-18.180131291481175 -7] -25.180131291481175]
Test Case: 162 | Input/Output: [[-39.746642523392836 0] -39.746642523392836]
Test Case: 163 | Input/Output: [[-95.92054262912339 -50] -145.9205426291234]
Test Case: 164 | Input/Output: [[9.548103583742517 -75] -65.45189641625748]
Test Case: 165 | Input/Output: [[72.92391368304018 88] 160.92391368304018]
Test Case: 166 | Input/Output: [[24.81625652236181 -22] 2.8162565223618117]
Test Case: 167 | Input/Output: [[96.97482628295677 100] 196.97482628295677]
Test Case: 168 | Input/Output: [[64.91717181450471 97] 161.9171718145047]
Test Case: 169 | Input/Output: [[59.465829662104966 88] 147.46582966210497]
Test Case: 170 | Input/Output: [[64.92407462667015 47] 111.92407462667015]
Test Case: 171 | Input/Output: [[5.698027184410549 65] 70.69802718441055]
Test Case: 172 | Input/Output: [[58.409612834357915 -82] -23.590387165642085]
Test Case: 173 | Input/Output: [[79.86050081955364 -40] 39.860500819553636]
Test Case: 174 | Input/Output: [[49.068071836870246 0] 49.068071836870246]
Test Case: 175 | Input/Output: [[-31.12695779777394 56] 24.87304220222606]
Test Case: 176 | Input/Output: [[-82.34306812192982 87] 4.656931878070182]
Test Case: 177 | Input/Output: [[-11.158583802882788 93] 81.84141619711721]
Test Case: 178 | Input/Output: [[-47.34768265399596 -93] -140.34768265399595]
Test Case: 179 | Input/Output: [[-35.70579793212028 -74] -109.70579793212028]
Test Case: 180 | Input/Output: [[-5.592140314032662 74] 68.40785968596734]
Test Case: 181 | Input/Output: [[70.43942540151218 -6] 64.43942540151218]
Test Case: 182 | Input/Output: [[56.11173211250588 93] 149.11173211250588]
Test Case: 183 | Input/Output: [[41.70501200673985 -19] 22.70501200673985]
Test Case: 184 | Input/Output: [[8.926220351133509 -78] -69.07377964886649]
Test Case: 185 | Input/Output: [[-86.56295128046631 99] 12.437048719533692]
Test Case: 186 | Input/Output: [[-3.2260587374525898 -88] -91.22605873745259]
Test Case: 187 | Input/Output: [[22.245183422767425 -29] -6.754816577232575]
Test Case: 188 | Input/Output: [[-87.78705940010445 -63] -150.78705940010445]
Test Case: 189 | Input/Output: [[-23.4868952447018 91] 67.5131047552982]
Test Case: 190 | Input/Output: [[-23.629740777100523 79] 55.37025922289948]
Test Case: 191 | Input/Output: [[-67.95575610884376 -91] -158.95575610884376]
Test Case: 192 | Input/Output: [[99.53711881061548 -38] 61.53711881061548]
Test Case: 193 | Input/Output: [[96.32164669494091 -18] 78.32164669494091]
Test Case: 194 | Input/Output: [[-61.4688965722342 -58] -119.4688965722342]
Test Case: 195 | Input/Output: [[79.50042287121133 -80] -0.49957712878867255]
Test Case: 196 | Input/Output: [[1.784792754943851 -82] -80.21520724505615]
Test Case: 197 | Input/Output: [[9.329999527213232 -65] -55.67000047278677]
Test Case: 198 | Input/Output: [[-28.372202494857476 -45] -73.37220249485748]
Test Case: 199 | Input/Output: [[-40.00344392885167 25] -15.003443928851667]
Test Case: 200 | Input/Output: [[-22.575891394568742 -59] -81.57589139456874]
Test Case: 201 | Input/Output: [[-90.5470348100687 15] -75.5470348100687]
Test Case: 202 | Input/Output: [[18.705439747951473 98] 116.70543974795147]
Test Case: 203 | Input/Output: [[-63.134522834059624 -89] -152.13452283405962]
Test Case: 204 | Input/Output: [[-42.776751029733326 -50] -92.77675102973333]
Test Case: 205 | Input/Output: [[-15.58141810949094 -100] -115.58141810949094]
Test Case: 206 | Input/Output: [[50.94898185261408 -59] -8.051018147385918]
Test Case: 207 | Input/Output: [[75.83055971353167 1] 76.83055971353167]
Test Case: 208 | Input/Output: [[51.29055635520953 -18] 33.29055635520953]
Test Case: 209 | Input/Output: [[21.76371674950039 -58] -36.23628325049961]
Test Case: 210 | Input/Output: [[41.579442634694146 -81] -39.420557365305854]
Test Case: 211 | Input/Output: [[11.908994512427242 -35] -23.091005487572758]
Test Case: 212 | Input/Output: [[-32.44215152063272 93] 60.55784847936728]
Test Case: 213 | Input/Output: [[17.96123061922208 -91] -73.03876938077792]
Test Case: 214 | Input/Output: [[89.26581267261332 -99] -9.734187327386678]
Test Case: 215 | Input/Output: [[83.81975469542996 -26] 57.819754695429964]
Test Case: 216 | Input/Output: [[-35.459506693751464 72] 36.540493306248536]
Test Case: 217 | Input/Output: [[-56.26687602730285 39] -17.26687602730285]
Test Case: 218 | Input/Output: [[-3.646543814705879 97] 93.35345618529412]
Test Case: 219 | Input/Output: [[-98.90459508680303 -46] -144.90459508680303]
Test Case: 220 | Input/Output: [[-74.81765785112657 25] -49.81765785112657]
Test Case: 221 | Input/Output: [[-95.18739932570652 -56] -151.1873993257065]
Test Case: 222 | Input/Output: [[84.46183116084862 -1] 83.46183116084862]
Test Case: 223 | Input/Output: [[-17.160860397691096 -85] -102.1608603976911]
Test Case: 224 | Input/Output: [[-62.54244745786668 -63] -125.54244745786667]
Test Case: 225 | Input/Output: [[-42.52220497163049 21] -21.522204971630487]
Test Case: 226 | Input/Output: [[-49.973388585970646 57] 7.026611414029354]
Test Case: 227 | Input/Output: [[78.26485268390593 93] 171.26485268390593]
Test Case: 228 | Input/Output: [[-87.59452152139534 -40] -127.59452152139534]
Test Case: 229 | Input/Output: [[48.16349043195095 63] 111.16349043195095]
Test Case: 230 | Input/Output: [[-19.68311666045166 -39] -58.68311666045166]
Test Case: 231 | Input/Output: [[-19.029652301575624 45] 25.970347698424376]
Test Case: 232 | Input/Output: [[41.0678144778426 17] 58.0678144778426]
Test Case: 233 | Input/Output: [[-32.331701326643554 10] -22.331701326643554]
Test Case: 234 | Input/Output: [[-91.16109283451215 6] -85.16109283451215]
Test Case: 235 | Input/Output: [[61.473348377742326 -37] 24.473348377742326]
Test Case: 236 | Input/Output: [[64.83902216612387 15] 79.83902216612387]
Test Case: 237 | Input/Output: [[30.758764997508024 -41] -10.241235002491976]
Test Case: 238 | Input/Output: [[-11.405852469444696 76] 64.5941475305553]
Test Case: 239 | Input/Output: [[-57.42941367002392 -21] -78.42941367002392]
Test Case: 240 | Input/Output: [[-65.88159866190016 -100] -165.88159866190017]
Test Case: 241 | Input/Output: [[62.14729843611741 33] 95.14729843611741]
Test Case: 242 | Input/Output: [[-76.24980612266235 -9] -85.24980612266235]
Test Case: 243 | Input/Output: [[48.141963697914434 71] 119.14196369791443]
Test Case: 244 | Input/Output: [[-56.49054699083496 -25] -81.49054699083496]
Test Case: 245 | Input/Output: [[91.7672166660557 8] 99.7672166660557]
Test Case: 246 | Input/Output: [[-47.12747686469909 16] -31.12747686469909]
Test Case: 247 | Input/Output: [[-83.12917285128422 56] -27.129172851284224]
Test Case: 248 | Input/Output: [[-92.41143157067519 -72] -164.41143157067518]
Test Case: 249 | Input/Output: [[75.8470645123868 84] 159.8470645123868]
Test Case: 250 | Input/Output: [[-49.64064335976028 -62] -111.64064335976028]
Test Case: 251 | Input/Output: [[-8.27222854454979 94] 85.72777145545021]
Test Case: 252 | Input/Output: [[-68.9575280465618 68] -0.957528046561805]
Test Case: 253 | Input/Output: [[-55.25483411148302 -41] -96.25483411148302]
Test Case: 254 | Input/Output: [[-93.20472818993011 -91] -184.2047281899301]
Test Case: 255 | Input/Output: [[61.22909371898959 -59] 2.2290937189895885]
Test Case: 256 | Input/Output: [[72.1907982720034 -76] -3.8092017279965944]
Test Case: 257 | Input/Output: [[90.31324983159467 98] 188.31324983159467]
Test Case: 258 | Input/Output: [[84.31044506521809 57] 141.3104450652181]
Test Case: 259 | Input/Output: [[-37.40646435997714 57] 19.593535640022857]
Test Case: 260 | Input/Output: [[-20.767771672927452 15] -5.767771672927452]
Test Case: 261 | Input/Output: [[81.78036553201403 -58] 23.78036553201403]
Test Case: 262 | Input/Output: [[2.7030056858530713 -88] -85.29699431414693]
Test Case: 263 | Input/Output: [[-14.750533131203142 -80] -94.75053313120314]
Test Case: 264 | Input/Output: [[-78.53700450383295 94] 15.462995496167053]
Test Case: 265 | Input/Output: [[70.01964686462333 6] 76.01964686462333]
Test Case: 266 | Input/Output: [[45.3589316721914 -98] -52.6410683278086]
Test Case: 267 | Input/Output: [[90.0286283124793 -20] 70.0286283124793]
Test Case: 268 | Input/Output: [[61.180174632205876 -25] 36.180174632205876]
Test Case: 269 | Input/Output: [[2.065539695078897 -55] -52.9344603049211]
Test Case: 270 | Input/Output: [[-62.95773286262594 -48] -110.95773286262593]
Test Case: 271 | Input/Output: [[2.9120532927499028 -77] -74.0879467072501]
Test Case: 272 | Input/Output: [[-66.26630379432339 16] -50.26630379432339]
Test Case: 273 | Input/Output: [[52.8587583026532 -96] -43.1412416973468]
Test Case: 274 | Input/Output: [[57.48950650550259 -78] -20.51049349449741]
Test Case: 275 | Input/Output: [[99.38799476240155 -6] 93.38799476240155]
Test Case: 276 | Input/Output: [[72.6447215961692 -100] -27.355278403830795]
Test Case: 277 | Input/Output: [[-72.10026117424542 61] -11.100261174245418]
Test Case: 278 | Input/Output: [[-44.30767785814582 -17] -61.30767785814582]
Test Case: 279 | Input/Output: [[-55.162409148151895 70] 14.837590851848105]
Test Case: 280 | Input/Output: [[78.5555295662177 15] 93.5555295662177]
Test Case: 281 | Input/Output: [[39.571636577805464 3] 42.571636577805464]
Test Case: 282 | Input/Output: [[9.552011711435455 56] 65.55201171143545]
Test Case: 283 | Input/Output: [[-96.6661712854401 -7] -103.6661712854401]
Test Case: 284 | Input/Output: [[20.444808968191722 7] 27.444808968191722]
Test Case: 285 | Input/Output: [[-86.34956759611845 -42] -128.34956759611845]
Test Case: 286 | Input/Output: [[-0.1537069229839716 62] 61.84629307701603]
Test Case: 287 | Input/Output: [[16.383304543789606 -2] 14.383304543789606]
Test Case: 288 | Input/Output: [[62.41434134356774 -47] 15.414341343567742]
Test Case: 289 | Input/Output: [[-60.44704122878084 22] -38.44704122878084]
Test Case: 290 | Input/Output: [[-86.57709151972901 -47] -133.577091519729]
Test Case: 291 | Input/Output: [[-35.69162296127037 -10] -45.69162296127037]
Test Case: 292 | Input/Output: [[-37.9977979551418 -98] -135.9977979551418]
Test Case: 293 | Input/Output: [[-30.31046074166636 89] 58.68953925833364]
Test Case: 294 | Input/Output: [[-94.70137287667161 5] -89.70137287667161]
Test Case: 295 | Input/Output: [[85.38362201232113 -75] 10.383622012321126]
Test Case: 296 | Input/Output: [[74.95341593041377 -26] 48.95341593041377]
Test Case: 297 | Input/Output: [[-13.702659784121039 -20] -33.70265978412104]
Test Case: 298 | Input/Output: [[48.77579293884122 22] 70.77579293884122]
Test Case: 299 | Input/Output: [[11.641791254216429 76] 87.64179125421643]
Test Case: 300 | Input/Output: [[18.625347535923225 62] 80.62534753592323]
Test Case: 301 | Input/Output: [[95.67875948348586 -68] 27.678759483485862]
Test Case: 302 | Input/Output: [[-45.501006553084956 -27] -72.50100655308495]
Test Case: 303 | Input/Output: [[-37.28712394567375 -19] -56.28712394567375]
Test Case: 304 | Input/Output: [[4.591638825649653 -39] -34.40836117435035]
Test Case: 305 | Input/Output: [[19.97513315598765 94] 113.97513315598765]
Test Case: 306 | Input/Output: [[97.04684538915913 -42] 55.04684538915913]
Test Case: 307 | Input/Output: [[44.207519225812604 83] 127.2075192258126]
Test Case: 308 | Input/Output: [[-93.31557134396678 -29] -122.31557134396678]
Test Case: 309 | Input/Output: [[65.18052279104077 57] 122.18052279104077]
Test Case: 310 | Input/Output: [[-98.12580125757337 2] -96.12580125757337]
Test Case: 311 | Input/Output: [[-6.571850496485965 5] -1.5718504964859648]
Test Case: 312 | Input/Output: [[15.740558362292958 18] 33.74055836229296]
Test Case: 313 | Input/Output: [[68.99087850049801 16] 84.99087850049801]
Test Case: 314 | Input/Output: [[63.65613878502012 -84] -20.34386121497988]
Test Case: 315 | Input/Output: [[-67.44544270389389 0] -67.44544270389389]
Test Case: 316 | Input/Output: [[26.935640774009187 -8] 18.935640774009187]
Test Case: 317 | Input/Output: [[61.90203547486212 -50] 11.902035474862117]
Test Case: 318 | Input/Output: [[18.94968433949431 -57] -38.05031566050569]
Test Case: 319 | Input/Output: [[-56.88183063180501 0] -56.88183063180501]
Test Case: 320 | Input/Output: [[67.11365084208825 74] 141.11365084208825]
Test Case: 321 | Input/Output: [[75.11288417132747 -29] 46.112884171327465]
Test Case: 322 | Input/Output: [[-36.716478186009006 69] 32.283521813990994]
Test Case: 323 | Input/Output: [[30.822440553521204 46] 76.8224405535212]
Test Case: 324 | Input/Output: [[-5.000365569631697 -81] -86.0003655696317]
Test Case: 325 | Input/Output: [[4.0847520839971025 98] 102.0847520839971]
Test Case: 326 | Input/Output: [[86.12054816409554 -53] 33.12054816409554]
Test Case: 327 | Input/Output: [[33.41545204911924 -16] 17.41545204911924]
Test Case: 328 | Input/Output: [[73.19413628962215 22] 95.19413628962215]
Test Case: 329 | Input/Output: [[-93.83428819534625 49] -44.83428819534625]
Test Case: 330 | Input/Output: [[-61.80889764370168 29] -32.80889764370168]
Test Case: 331 | Input/Output: [[70.04652846565483 -78] -7.953471534345169]
Test Case: 332 | Input/Output: [[-54.42466283005372 5] -49.42466283005372]
Test Case: 333 | Input/Output: [[79.52398924786931 -95] -15.47601075213069]
Test Case: 334 | Input/Output: [[-82.16988773476426 16] -66.16988773476426]
Test Case: 335 | Input/Output: [[-6.408549741304228 27] 20.591450258695772]
Test Case: 336 | Input/Output: [[-37.49447515803978 76] 38.50552484196022]
Test Case: 337 | Input/Output: [[-59.17788180010386 16] -43.17788180010386]
Test Case: 338 | Input/Output: [[-63.04297513983697 -9] -72.04297513983697]
Test Case: 339 | Input/Output: [[-66.63857055738822 98] 31.36142944261178]
Test Case: 340 | Input/Output: [[48.30850862564813 -28] 20.30850862564813]
Test Case: 341 | Input/Output: [[-16.59630143094553 23] 6.40369856905447]
Test Case: 342 | Input/Output: [[-31.422683190152114 84] 52.577316809847886]
Test Case: 343 | Input/Output: [[-91.71892565353666 50] -41.71892565353666]
Test Case: 344 | Input/Output: [[86.1984663240882 -71] 15.198466324088201]
Test Case: 345 | Input/Output: [[37.71847026773963 86] 123.71847026773963]
Test Case: 346 | Input/Output: [[-49.938828805149015 1] -48.938828805149015]
Test Case: 347 | Input/Output: [[-53.728728848332 -79] -132.728728848332]
Test Case: 348 | Input/Output: [[85.9343600064455 -100] -14.065639993554498]
Test Case: 349 | Input/Output: [[77.74009352422587 14] 91.74009352422587]
Test Case: 350 | Input/Output: [[84.2450394497449 77] 161.2450394497449]
Test Case: 351 | Input/Output: [[-68.70046054900192 -45] -113.70046054900192]
Test Case: 352 | Input/Output: [[-57.48957416662424 59] 1.5104258333757627]
Test Case: 353 | Input/Output: [[31.908282752083636 14] 45.908282752083636]
Test Case: 354 | Input/Output: [[-88.45318464703868 98] 9.546815352961318]
Test Case: 355 | Input/Output: [[-9.35207755512009 52] 42.64792244487991]
Test Case: 356 | Input/Output: [[-41.83544140682862 -86] -127.83544140682862]
Test Case: 357 | Input/Output: [[50.122788379147664 78] 128.12278837914766]
Test Case: 358 | Input/Output: [[23.926751192098664 -21] 2.9267511920986635]
Test Case: 359 | Input/Output: [[-33.29689284278348 17] -16.29689284278348]
Test Case: 360 | Input/Output: [[42.81277459690227 15] 57.81277459690227]
Test Case: 361 | Input/Output: [[-8.776422524357912 76] 67.22357747564209]
Test Case: 362 | Input/Output: [[-66.75137592871509 76] 9.248624071284908]
Test Case: 363 | Input/Output: [[87.47581558694165 93] 180.47581558694165]
Test Case: 364 | Input/Output: [[56.325287076902185 92] 148.32528707690219]
Test Case: 365 | Input/Output: [[54.733736055859566 -53] 1.7337360558595662]
Test Case: 366 | Input/Output: [[-25.332320041506378 -48] -73.33232004150638]
Test Case: 367 | Input/Output: [[-67.67171534304914 40] -27.671715343049144]
Test Case: 368 | Input/Output: [[99.19866156923439 -3] 96.19866156923439]
Test Case: 369 | Input/Output: [[-25.003312390532926 -48] -73.00331239053293]
Test Case: 370 | Input/Output: [[90.71063251046522 65] 155.71063251046522]
Test Case: 371 | Input/Output: [[49.23967993586166 -25] 24.23967993586166]
Test Case: 372 | Input/Output: [[-59.485468785469834 3] -56.485468785469834]
Test Case: 373 | Input/Output: [[72.97629544089583 15] 87.97629544089583]
Test Case: 374 | Input/Output: [[-75.07506076213852 77] 1.92493923786148]
Test Case: 375 | Input/Output: [[59.8645111542088 -97] -37.1354888457912]
Test Case: 376 | Input/Output: [[-71.19220043615597 25] -46.19220043615597]
Test Case: 377 | Input/Output: [[69.36089082361707 -96] -26.63910917638293]
Test Case: 378 | Input/Output: [[-56.68604254814908 14] -42.68604254814908]
Test Case: 379 | Input/Output: [[39.3082978014489 16] 55.3082978014489]
Test Case: 380 | Input/Output: [[-26.09957611433451 -91] -117.09957611433451]
Test Case: 381 | Input/Output: [[37.300932563516966 8] 45.300932563516966]
Test Case: 382 | Input/Output: [[-40.601174751173865 -88] -128.60117475117386]
Test Case: 383 | Input/Output: [[36.71634702661771 -68] -31.28365297338229]
Test Case: 384 | Input/Output: [[-15.063711453288974 -98] -113.06371145328897]
Test Case: 385 | Input/Output: [[59.42881592871075 -97] -37.57118407128925]
Test Case: 386 | Input/Output: [[44.335380284016566 64] 108.33538028401657]
Test Case: 387 | Input/Output: [[-95.87550399508524 -42] -137.87550399508524]
Test Case: 388 | Input/Output: [[81.90784250213716 -59] 22.907842502137157]
Test Case: 389 | Input/Output: [[-44.160587698569145 -60] -104.16058769856915]
Test Case: 390 | Input/Output: [[-42.86961792921071 75] 32.13038207078929]
Test Case: 391 | Input/Output: [[-6.7454950038031 -25] -31.7454950038031]
Test Case: 392 | Input/Output: [[-88.44784149175406 6] -82.44784149175406]
Test Case: 393 | Input/Output: [[-59.73182514703428 -39] -98.73182514703427]
Test Case: 394 | Input/Output: [[-45.96918043676879 -32] -77.9691804367688]
Test Case: 395 | Input/Output: [[-49.96187484431465 18] -31.96187484431465]
Test Case: 396 | Input/Output: [[-30.14647862838804 31] 0.8535213716119614]
Test Case: 397 | Input/Output: [[11.205575901184545 99] 110.20557590118455]
Test Case: 398 | Input/Output: [[54.574901704259815 77] 131.57490170425982]
Test Case: 399 | Input/Output: [[-22.95445295778822 -100] -122.95445295778822]
Test Case: 400 | Input/Output: [[-11.750461458938048 -56] -67.75046145893805]
Test Case: 401 | Input/Output: [[-77.99264092411582 33] -44.99264092411582]
Test Case: 402 | Input/Output: [[97.57049786751855 -19] 78.57049786751855]
Test Case: 403 | Input/Output: [[15.424455217661233 20] 35.42445521766123]
Test Case: 404 | Input/Output: [[-32.75414483883776 -26] -58.75414483883776]
Test Case: 405 | Input/Output: [[-88.50739086170547 -68] -156.50739086170546]
Test Case: 406 | Input/Output: [[-13.83710635747309 31] 17.16289364252691]
Test Case: 407 | Input/Output: [[-5.53827243734051 11] 5.46172756265949]
Test Case: 408 | Input/Output: [[-28.457111970166522 12] -16.457111970166522]
Test Case: 409 | Input/Output: [[27.308281113097138 -93] -65.69171888690286]
Test Case: 410 | Input/Output: [[57.99115394059905 26] 83.99115394059905]
Test Case: 411 | Input/Output: [[47.79832366206219 -89] -41.20167633793781]
Test Case: 412 | Input/Output: [[-62.891657229737376 -57] -119.89165722973738]
Test Case: 413 | Input/Output: [[-40.48424031161046 -40] -80.48424031161046]
Test Case: 414 | Input/Output: [[-97.24252996623295 9] -88.24252996623295]
Test Case: 415 | Input/Output: [[-72.05398305920227 -62] -134.05398305920227]
Test Case: 416 | Input/Output: [[-90.67295582781756 -8] -98.67295582781756]
Test Case: 417 | Input/Output: [[82.91898785333345 7] 89.91898785333345]
Test Case: 418 | Input/Output: [[86.18182260062923 -3] 83.18182260062923]
Test Case: 419 | Input/Output: [[47.707665520631934 -71] -23.292334479368066]
Test Case: 420 | Input/Output: [[-42.69878939302334 -35] -77.69878939302333]
Test Case: 421 | Input/Output: [[48.777142951084585 59] 107.77714295108458]
Test Case: 422 | Input/Output: [[-0.26332629686326925 -36] -36.26332629686327]
Test Case: 423 | Input/Output: [[70.68756360674953 41] 111.68756360674953]
Test Case: 424 | Input/Output: [[-95.99598159228262 89] -6.995981592282618]
Test Case: 425 | Input/Output: [[-75.87110181934693 58] -17.871101819346933]
Test Case: 426 | Input/Output: [[-17.018539507403176 -53] -70.01853950740318]
Test Case: 427 | Input/Output: [[33.44786730104329 -77] -43.55213269895671]
Test Case: 428 | Input/Output: [[-41.14830402569074 41] -0.14830402569074153]
Test Case: 429 | Input/Output: [[-20.551171052861932 92] 71.44882894713807]
Test Case: 430 | Input/Output: [[-40.85889155730869 26] -14.858891557308688]
Test Case: 431 | Input/Output: [[-88.09673793303443 81] -7.096737933034433]
Test Case: 432 | Input/Output: [[-87.22259285516057 47] -40.22259285516057]
Test Case: 433 | Input/Output: [[-62.80596855246314 -83] -145.80596855246313]
Test Case: 434 | Input/Output: [[-54.293109500889926 37] -17.293109500889926]
Test Case: 435 | Input/Output: [[5.16096118202573 -20] -14.83903881797427]
Test Case: 436 | Input/Output: [[7.396369634016423 -35] -27.603630365983577]
Test Case: 437 | Input/Output: [[12.868512706201841 -49] -36.13148729379816]
Test Case: 438 | Input/Output: [[13.182865496257804 -66] -52.817134503742196]
Test Case: 439 | Input/Output: [[-95.71625065291289 -56] -151.7162506529129]
Test Case: 440 | Input/Output: [[49.29983280578563 20] 69.29983280578563]
Test Case: 441 | Input/Output: [[13.920417648962058 34] 47.92041764896206]
Test Case: 442 | Input/Output: [[-55.814366921184885 75] 19.185633078815115]
Test Case: 443 | Input/Output: [[85.66095086803315 76] 161.66095086803315]
Test Case: 444 | Input/Output: [[91.07419827554094 19] 110.07419827554094]
Test Case: 445 | Input/Output: [[3.749987202275591 52] 55.74998720227559]
Test Case: 446 | Input/Output: [[91.40391698619018 63] 154.40391698619018]
Test Case: 447 | Input/Output: [[71.00804796836036 -51] 20.00804796836036]
Test Case: 448 | Input/Output: [[-34.48126543367775 -77] -111.48126543367775]
Test Case: 449 | Input/Output: [[-68.93853806461996 10] -58.93853806461996]
Test Case: 450 | Input/Output: [[60.26093307775241 -8] 52.26093307775241]
Test Case: 451 | Input/Output: [[-7.448884867236345 -46] -53.448884867236345]
Test Case: 452 | Input/Output: [[13.854766553451341 95] 108.85476655345134]
Test Case: 453 | Input/Output: [[15.931621073356638 97] 112.93162107335664]
Test Case: 454 | Input/Output: [[-44.82418942640898 -53] -97.82418942640898]
Test Case: 455 | Input/Output: [[72.99484149030457 81] 153.99484149030457]
Test Case: 456 | Input/Output: [[78.03754583394519 -15] 63.03754583394519]
Test Case: 457 | Input/Output: [[-88.67706964999309 -7] -95.67706964999309]
Test Case: 458 | Input/Output: [[-80.64565599326612 15] -65.64565599326612]
Test Case: 459 | Input/Output: [[46.36916926230515 -11] 35.36916926230515]
Test Case: 460 | Input/Output: [[-7.03044405103735 -24] -31.03044405103735]
Test Case: 461 | Input/Output: [[42.18489890993391 29] 71.1848989099339]
Test Case: 462 | Input/Output: [[-41.526358865651744 -90] -131.52635886565173]
Test Case: 463 | Input/Output: [[-21.24514961815018 -87] -108.24514961815018]
Test Case: 464 | Input/Output: [[2.0626451573372435 43] 45.06264515733724]
Test Case: 465 | Input/Output: [[-28.650982929081366 43] 14.349017070918634]
Test Case: 466 | Input/Output: [[-53.82082531554251 -47] -100.8208253155425]
Test Case: 467 | Input/Output: [[86.76193679797785 90] 176.76193679797785]
Test Case: 468 | Input/Output: [[69.90957131465322 -10] 59.90957131465322]
Test Case: 469 | Input/Output: [[15.051721475137313 8] 23.051721475137313]
Test Case: 470 | Input/Output: [[-12.43495755985451 -38] -50.43495755985451]
Test Case: 471 | Input/Output: [[53.837049583294686 -58] -4.162950416705314]
Test Case: 472 | Input/Output: [[-86.7559213819151 32] -54.7559213819151]
Test Case: 473 | Input/Output: [[89.43023786623064 89] 178.43023786623064]
Test Case: 474 | Input/Output: [[69.15926004937609 -36] 33.15926004937609]
Test Case: 475 | Input/Output: [[92.0984689998592 10] 102.0984689998592]
Test Case: 476 | Input/Output: [[-30.638851738277495 19] -11.638851738277495]
Test Case: 477 | Input/Output: [[77.4774728511326 26] 103.4774728511326]
Test Case: 478 | Input/Output: [[-96.21846894931862 -32] -128.2184689493186]
Test Case: 479 | Input/Output: [[61.68235482353231 2] 63.68235482353231]
Test Case: 480 | Input/Output: [[-2.454053492374129 -81] -83.45405349237413]
Test Case: 481 | Input/Output: [[-70.6299534482058 -81] -151.6299534482058]
Test Case: 482 | Input/Output: [[-11.237948274127902 68] 56.7620517258721]
Test Case: 483 | Input/Output: [[56.03911783140353 10] 66.03911783140353]
Test Case: 484 | Input/Output: [[86.7535427276766 -96] -9.246457272323397]
Test Case: 485 | Input/Output: [[-93.47478825633763 -97] -190.47478825633763]
Test Case: 486 | Input/Output: [[-96.00693791958312 -74] -170.00693791958312]
Test Case: 487 | Input/Output: [[16.58831132082115 -3] 13.588311320821148]
Test Case: 488 | Input/Output: [[-40.350312038916194 49] 8.649687961083806]
Test Case: 489 | Input/Output: [[96.60371671184771 26] 122.60371671184771]
Test Case: 490 | Input/Output: [[-95.80990599665782 -94] -189.80990599665782]
Test Case: 491 | Input/Output: [[-59.812672127606014 -59] -118.81267212760602]
Test Case: 492 | Input/Output: [[-49.60979384543054 -15] -64.60979384543054]
Test Case: 493 | Input/Output: [[-86.4988209886758 3] -83.4988209886758]
Test Case: 494 | Input/Output: [[-90.81037692972605 -15] -105.81037692972605]
Test Case: 495 | Input/Output: [[-68.1085766556089 3] -65.1085766556089]
Test Case: 496 | Input/Output: [[-36.632880234408404 32] -4.632880234408404]
Test Case: 497 | Input/Output: [[2.515184209387371 57] 59.51518420938737]
Test Case: 498 | Input/Output: [[33.20726339609453 50] 83.20726339609453]
Test Case: 499 | Input/Output: [[-16.45561843983168 -24] -40.45561843983168]
Test Case: 500 | Input/Output: [[28.37707955550067 32] 60.37707955550067]
Test Case: 501 | Input/Output: [[-44.694387323313435 89] 44.305612676686565]
Test Case: 502 | Input/Output: [[79.41656068387425 41] 120.41656068387425]
Test Case: 503 | Input/Output: [[-66.28689143161637 -54] -120.28689143161637]
Test Case: 504 | Input/Output: [[59.79015673784019 -59] 0.7901567378401921]
Test Case: 505 | Input/Output: [[-76.36827107143498 77] 0.6317289285650247]
Test Case: 506 | Input/Output: [[-31.012614515201903 45] 13.987385484798097]
Test Case: 507 | Input/Output: [[9.656657884623712 97] 106.65665788462371]
Test Case: 508 | Input/Output: [[-28.28108536724349 -95] -123.28108536724349]
Test Case: 509 | Input/Output: [[63.35583206544629 -16] 47.35583206544629]
Test Case: 510 | Input/Output: [[11.509268510561014 41] 52.509268510561014]
Test Case: 511 | Input/Output: [[-35.138140863629104 -89] -124.1381408636291]
Test Case: 512 | Input/Output: [[80.01488161426377 -9] 71.01488161426377]
Test Case: 513 | Input/Output: [[-9.93232579484264 -49] -58.93232579484264]
Test Case: 514 | Input/Output: [[58.44462668062607 -58] 0.44462668062607236]
Test Case: 515 | Input/Output: [[75.83529631574416 -77] -1.1647036842558407]
Test Case: 516 | Input/Output: [[31.654173132557872 73] 104.65417313255787]
Test Case: 517 | Input/Output: [[-69.68246927504158 -21] -90.68246927504158]
Test Case: 518 | Input/Output: [[-35.69822698937233 -62] -97.69822698937233]
Test Case: 519 | Input/Output: [[98.65582950347371 6] 104.65582950347371]
Test Case: 520 | Input/Output: [[14.031945951741903 -91] -76.9680540482581]
Test Case: 521 | Input/Output: [[13.580554013072543 2] 15.580554013072543]
Test Case: 522 | Input/Output: [[-16.839239335962432 -63] -79.83923933596243]
Test Case: 523 | Input/Output: [[-70.19277292520134 -10] -80.19277292520134]
Test Case: 524 | Input/Output: [[31.059353866921754 28] 59.059353866921754]
Test Case: 525 | Input/Output: [[-65.37477522766291 44] -21.37477522766291]
Test Case: 526 | Input/Output: [[96.47209919130677 -70] 26.472099191306768]
Test Case: 527 | Input/Output: [[24.314250251113066 95] 119.31425025111307]
Test Case: 528 | Input/Output: [[-25.835161558827835 -60] -85.83516155882783]
Test Case: 529 | Input/Output: [[-42.921858589706204 33] -9.921858589706204]
Test Case: 530 | Input/Output: [[69.97845589793076 -88] -18.021544102069242]
Test Case: 531 | Input/Output: [[-79.84993755659076 31] -48.84993755659076]
Test Case: 532 | Input/Output: [[76.20807425888526 -79] -2.7919257411147385]
Test Case: 533 | Input/Output: [[20.38803112775041 13] 33.38803112775041]
Test Case: 534 | Input/Output: [[86.90909222187429 58] 144.9090922218743]
Test Case: 535 | Input/Output: [[-88.84235188399086 67] -21.842351883990858]
Test Case: 536 | Input/Output: [[-85.0287015475549 -83] -168.0287015475549]
Test Case: 537 | Input/Output: [[98.5439915128103 81] 179.5439915128103]
Test Case: 538 | Input/Output: [[69.8017888845479 -69] 0.8017888845479035]
Test Case: 539 | Input/Output: [[-47.50671606323318 2] -45.50671606323318]
Test Case: 540 | Input/Output: [[76.6712468064161 -11] 65.6712468064161]
Test Case: 541 | Input/Output: [[61.08643796780123 72] 133.08643796780123]
Test Case: 542 | Input/Output: [[-40.8004275945254 -39] -79.8004275945254]
Test Case: 543 | Input/Output: [[-51.548350590504825 -59] -110.54835059050482]
Test Case: 544 | Input/Output: [[41.27254880826979 93] 134.2725488082698]
Test Case: 545 | Input/Output: [[12.667250253428364 7] 19.667250253428364]
Test Case: 546 | Input/Output: [[12.9829242926847 27] 39.9829242926847]
Test Case: 547 | Input/Output: [[95.30739844581618 77] 172.30739844581618]
Test Case: 548 | Input/Output: [[-54.39725307847043 7] -47.39725307847043]
Test Case: 549 | Input/Output: [[25.8958860378673 -65] -39.1041139621327]
Test Case: 550 | Input/Output: [[43.22032574065969 -22] 21.22032574065969]
Test Case: 551 | Input/Output: [[-48.74152625297534 -2] -50.74152625297534]
Test Case: 552 | Input/Output: [[92.5499270178027 87] 179.5499270178027]
Test Case: 553 | Input/Output: [[-80.3853610451706 -100] -180.3853610451706]
Test Case: 554 | Input/Output: [[38.626753011247274 -65] -26.373246988752726]
Test Case: 555 | Input/Output: [[50.62395968043543 -61] -10.376040319564567]
Test Case: 556 | Input/Output: [[85.73238635376467 42] 127.73238635376467]
Test Case: 557 | Input/Output: [[90.6437775406134 75] 165.6437775406134]
Test Case: 558 | Input/Output: [[92.41725912593643 24] 116.41725912593643]
Test Case: 559 | Input/Output: [[9.016987337862133 97] 106.01698733786213]
Test Case: 560 | Input/Output: [[10.716680664741645 -71] -60.283319335258355]
Test Case: 561 | Input/Output: [[-39.04852362926885 -84] -123.04852362926886]
Test Case: 562 | Input/Output: [[-8.00544689646479 -59] -67.00544689646479]
Test Case: 563 | Input/Output: [[99.67507452806518 32] 131.67507452806518]
Test Case: 564 | Input/Output: [[24.407428214273082 -75] -50.59257178572692]
Test Case: 565 | Input/Output: [[33.25076675922861 9] 42.25076675922861]
Test Case: 566 | Input/Output: [[94.33201556161825 71] 165.33201556161825]
Test Case: 567 | Input/Output: [[-44.651249562592945 -91] -135.65124956259294]
Test Case: 568 | Input/Output: [[-43.214483082095654 -29] -72.21448308209565]
Test Case: 569 | Input/Output: [[-54.75870199767148 13] -41.75870199767148]
Test Case: 570 | Input/Output: [[23.1337487411365 -65] -41.8662512588635]
Test Case: 571 | Input/Output: [[67.03710248697638 -32] 35.03710248697638]
Test Case: 572 | Input/Output: [[-69.34881261942832 -32] -101.34881261942832]
Test Case: 573 | Input/Output: [[48.84586559936031 -44] 4.845865599360309]
Test Case: 574 | Input/Output: [[-55.55110882758629 -8] -63.55110882758629]
Test Case: 575 | Input/Output: [[28.257610274457534 28] 56.257610274457534]
Test Case: 576 | Input/Output: [[80.92827540588885 -60] 20.928275405888854]
Test Case: 577 | Input/Output: [[-73.44478335641045 66] -7.444783356410454]
Test Case: 578 | Input/Output: [[47.720510389069176 -59] -11.279489610930824]
Test Case: 579 | Input/Output: [[37.591992726595606 9] 46.591992726595606]
Test Case: 580 | Input/Output: [[90.73632238369552 49] 139.73632238369552]
Test Case: 581 | Input/Output: [[77.31539723243904 -12] 65.31539723243904]
Test Case: 582 | Input/Output: [[81.19805287949623 -13] 68.19805287949623]
Test Case: 583 | Input/Output: [[85.63407511352779 98] 183.63407511352779]
Test Case: 584 | Input/Output: [[26.45938862726267 100] 126.45938862726267]
Test Case: 585 | Input/Output: [[-10.914587624972853 -28] -38.91458762497285]
Test Case: 586 | Input/Output: [[39.17525555184727 -41] -1.8247444481527282]
Test Case: 587 | Input/Output: [[3.061834547060613 -51] -47.93816545293939]
Test Case: 588 | Input/Output: [[20.585211713530114 -52] -31.414788286469886]
Test Case: 589 | Input/Output: [[-97.13069255466735 79] -18.13069255466735]
Test Case: 590 | Input/Output: [[46.367547850228476 78] 124.36754785022848]
Test Case: 591 | Input/Output: [[-10.40852799263024 78] 67.59147200736976]
Test Case: 592 | Input/Output: [[65.64203966740985 -63] 2.642039667409847]
Test Case: 593 | Input/Output: [[73.2601792288365 21] 94.2601792288365]
Test Case: 594 | Input/Output: [[91.13816731695562 48] 139.13816731695562]
Test Case: 595 | Input/Output: [[27.860244231726952 -63] -35.13975576827305]
Test Case: 596 | Input/Output: [[-67.2055564601983 -79] -146.2055564601983]
Test Case: 597 | Input/Output: [[84.66511968965173 26] 110.66511968965173]
Test Case: 598 | Input/Output: [[93.51831640679168 53] 146.51831640679168]
Test Case: 599 | Input/Output: [[-37.798979059785886 -70] -107.79897905978589]
Test Case: 600 | Input/Output: [[-41.01379713799884 36] -5.013797137998843]
Test Case: 601 | Input/Output: [[-81.9179340817775 28] -53.9179340817775]
Test Case: 602 | Input/Output: [[-61.528178371273576 -87] -148.52817837127358]
Test Case: 603 | Input/Output: [[84.53591194510966 44] 128.53591194510966]
Test Case: 604 | Input/Output: [[91.25746854617574 -42] 49.257468546175744]
Test Case: 605 | Input/Output: [[60.23194232779247 3] 63.23194232779247]
Test Case: 606 | Input/Output: [[-5.05588337179708 23] 17.94411662820292]
Test Case: 607 | Input/Output: [[81.91394737745532 6] 87.91394737745532]
Test Case: 608 | Input/Output: [[82.74008537770635 99] 181.74008537770635]
Test Case: 609 | Input/Output: [[61.61127277179585 65] 126.61127277179585]
Test Case: 610 | Input/Output: [[-30.36939933770732 67] 36.63060066229268]
Test Case: 611 | Input/Output: [[-23.94064413479839 -19] -42.94064413479839]
Test Case: 612 | Input/Output: [[-19.6470482852464 6] -13.647048285246399]
Test Case: 613 | Input/Output: [[-19.06481235927579 31] 11.935187640724209]
Test Case: 614 | Input/Output: [[-85.97327482262007 -46] -131.97327482262006]
Test Case: 615 | Input/Output: [[-46.60845141149148 -23] -69.60845141149147]
Test Case: 616 | Input/Output: [[93.15737673381051 30] 123.15737673381051]
Test Case: 617 | Input/Output: [[23.31850712588563 0] 23.31850712588563]
Test Case: 618 | Input/Output: [[34.03705576602911 -84] -49.96294423397089]
Test Case: 619 | Input/Output: [[71.69357062859717 -69] 2.693570628597172]
Test Case: 620 | Input/Output: [[-74.12837220373851 -67] -141.1283722037385]
Test Case: 621 | Input/Output: [[66.92034760500502 -62] 4.92034760500502]
Test Case: 622 | Input/Output: [[-43.20809543646609 -3] -46.20809543646609]
Test Case: 623 | Input/Output: [[-15.287557157172742 52] 36.71244284282726]
Test Case: 624 | Input/Output: [[15.572755773836604 -45] -29.427244226163396]
Test Case: 625 | Input/Output: [[39.89591323387788 60] 99.89591323387788]
Test Case: 626 | Input/Output: [[-83.99389685956722 -98] -181.9938968595672]
Test Case: 627 | Input/Output: [[-7.7566324465297924 -39] -46.75663244652979]
Test Case: 628 | Input/Output: [[32.73692802184971 -54] -21.263071978150293]
Test Case: 629 | Input/Output: [[-80.00492942430688 48] -32.00492942430688]
Test Case: 630 | Input/Output: [[85.98637311832448 45] 130.98637311832448]
Test Case: 631 | Input/Output: [[-69.02850141068704 9] -60.02850141068704]
Test Case: 632 | Input/Output: [[6.929007303152275 3] 9.929007303152275]
Test Case: 633 | Input/Output: [[80.38764906638193 91] 171.38764906638193]
Test Case: 634 | Input/Output: [[-14.378200285963374 -91] -105.37820028596337]
Test Case: 635 | Input/Output: [[92.95520283265722 -79] 13.955202832657221]
Test Case: 636 | Input/Output: [[3.8950496004407142 49] 52.895049600440714]
Test Case: 637 | Input/Output: [[-43.604526846068126 95] 51.395473153931874]
Test Case: 638 | Input/Output: [[34.63622140539721 -43] -8.363778594602792]
Test Case: 639 | Input/Output: [[-6.675551336595589 -1] -7.675551336595589]
Test Case: 640 | Input/Output: [[97.25097253501275 -92] 5.25097253501275]
Test Case: 641 | Input/Output: [[-89.94707384911713 -95] -184.94707384911715]
Test Case: 642 | Input/Output: [[-59.262148142995045 85] 25.737851857004955]
Test Case: 643 | Input/Output: [[-20.39568362288044 -7] -27.39568362288044]
Test Case: 644 | Input/Output: [[59.53949877668606 -72] -12.46050122331394]
Test Case: 645 | Input/Output: [[42.67983434351473 7] 49.67983434351473]
Test Case: 646 | Input/Output: [[11.412422249516112 73] 84.41242224951611]
Test Case: 647 | Input/Output: [[24.651456955695153 -70] -45.34854304430485]
Test Case: 648 | Input/Output: [[-30.632507585726955 -7] -37.632507585726955]
Test Case: 649 | Input/Output: [[3.335407055773686 89] 92.33540705577369]
Test Case: 650 | Input/Output: [[54.99483129060309 -56] -1.0051687093969122]
Test Case: 651 | Input/Output: [[74.17160323888069 95] 169.1716032388807]
Test Case: 652 | Input/Output: [[-51.75753859963408 43] -8.757538599634081]
Test Case: 653 | Input/Output: [[-64.57025783723248 56] -8.570257837232475]
Test Case: 654 | Input/Output: [[21.87086612553925 35] 56.87086612553925]
Test Case: 655 | Input/Output: [[42.523689163060766 -93] -50.476310836939234]
Test Case: 656 | Input/Output: [[-86.38034147482028 45] -41.380341474820284]
Test Case: 657 | Input/Output: [[74.47038885014376 -47] 27.470388850143763]
Test Case: 658 | Input/Output: [[91.43150215210937 -51] 40.431502152109374]
Test Case: 659 | Input/Output: [[-41.63347907120014 -74] -115.63347907120014]
Test Case: 660 | Input/Output: [[-10.38389519938005 47] 36.61610480061995]
Test Case: 661 | Input/Output: [[72.03122650949294 91] 163.03122650949294]
Test Case: 662 | Input/Output: [[-96.44515081392915 -25] -121.44515081392915]
Test Case: 663 | Input/Output: [[36.56050387026383 21] 57.56050387026383]
Test Case: 664 | Input/Output: [[-98.99249395666718 86] -12.992493956667175]
Test Case: 665 | Input/Output: [[-38.471815198087114 71] 32.528184801912886]
Test Case: 666 | Input/Output: [[64.04844319478315 -53] 11.048443194783147]
Test Case: 667 | Input/Output: [[-32.62576778530004 31] -1.6257677853000416]
Test Case: 668 | Input/Output: [[54.39863679167948 2] 56.39863679167948]
Test Case: 669 | Input/Output: [[90.02296255794818 96] 186.02296255794818]
Test Case: 670 | Input/Output: [[38.751710982677736 -10] 28.751710982677736]
Test Case: 671 | Input/Output: [[45.39315601596783 10] 55.39315601596783]
Test Case: 672 | Input/Output: [[83.83367343305503 3] 86.83367343305503]
Test Case: 673 | Input/Output: [[-86.44366777634885 -47] -133.44366777634883]
Test Case: 674 | Input/Output: [[-19.301546369490723 43] 23.698453630509277]
Test Case: 675 | Input/Output: [[-29.2756415602106 -66] -95.2756415602106]
Test Case: 676 | Input/Output: [[61.27646735971908 -46] 15.276467359719078]
Test Case: 677 | Input/Output: [[77.04029014923083 53] 130.04029014923083]
Test Case: 678 | Input/Output: [[-38.03203261485075 28] -10.032032614850749]
Test Case: 679 | Input/Output: [[25.228698642639657 -60] -34.77130135736034]
Test Case: 680 | Input/Output: [[-38.31842700465757 -89] -127.31842700465756]
Test Case: 681 | Input/Output: [[2.493338499271516 -99] -96.50666150072848]
Test Case: 682 | Input/Output: [[-30.569813500443814 -60] -90.56981350044381]
Test Case: 683 | Input/Output: [[-56.80990249316391 54] -2.8099024931639107]
Test Case: 684 | Input/Output: [[-5.410534292848595 64] 58.589465707151405]
Test Case: 685 | Input/Output: [[-46.53831314174533 -75] -121.53831314174533]
Test Case: 686 | Input/Output: [[68.28038585314721 -82] -13.719614146852791]
Test Case: 687 | Input/Output: [[-48.94156682814999 -71] -119.94156682814999]
Test Case: 688 | Input/Output: [[97.90289728583522 -3] 94.90289728583522]
Test Case: 689 | Input/Output: [[-15.441876178646112 -45] -60.44187617864611]
Test Case: 690 | Input/Output: [[39.016829287276266 -82] -42.983170712723734]
Test Case: 691 | Input/Output: [[-27.360797454891056 92] 64.63920254510894]
Test Case: 692 | Input/Output: [[31.958972594602443 -3] 28.958972594602443]
Test Case: 693 | Input/Output: [[-24.94328287257153 -80] -104.94328287257153]
Test Case: 694 | Input/Output: [[85.30608409192203 -36] 49.30608409192203]
Test Case: 695 | Input/Output: [[70.05364265266456 33] 103.05364265266456]
Test Case: 696 | Input/Output: [[-77.86145510356212 -74] -151.86145510356212]
Test Case: 697 | Input/Output: [[53.45965837599101 -82] -28.540341624008988]
Test Case: 698 | Input/Output: [[-57.37918868974576 -67] -124.37918868974576]
Test Case: 699 | Input/Output: [[-1.8771425255954313 74] 72.12285747440457]
Test Case: 700 | Input/Output: [[44.39012569899441 19] 63.39012569899441]
Test Case: 701 | Input/Output: [[-76.28057740308363 90] 13.719422596916374]
Test Case: 702 | Input/Output: [[63.68455446181855 -98] -34.31544553818145]
Test Case: 703 | Input/Output: [[0.9254408767454834 -85] -84.07455912325452]
Test Case: 704 | Input/Output: [[-29.809153315259238 -59] -88.80915331525924]
Test Case: 705 | Input/Output: [[-55.64202436857215 56] 0.3579756314278484]
Test Case: 706 | Input/Output: [[-29.964402678339198 -75] -104.9644026783392]
Test Case: 707 | Input/Output: [[-27.876221401945685 -33] -60.876221401945685]
Test Case: 708 | Input/Output: [[55.49063403808333 7] 62.49063403808333]
Test Case: 709 | Input/Output: [[-27.64388928053083 -86] -113.64388928053083]
Test Case: 710 | Input/Output: [[-67.77912778534 58] -9.779127785339995]
Test Case: 711 | Input/Output: [[34.71939500419933 -20] 14.719395004199328]
Test Case: 712 | Input/Output: [[52.72118505990747 -49] 3.7211850599074694]
Test Case: 713 | Input/Output: [[69.20821226306379 -29] 40.208212263063785]
Test Case: 714 | Input/Output: [[-16.520009818840208 15] -1.520009818840208]
Test Case: 715 | Input/Output: [[-64.16161535193103 31] -33.16161535193103]
Test Case: 716 | Input/Output: [[-94.42997995315126 92] -2.4299799531512605]
Test Case: 717 | Input/Output: [[67.80459445226234 -42] 25.804594452262336]
Test Case: 718 | Input/Output: [[-13.108570444673973 -83] -96.10857044467397]
Test Case: 719 | Input/Output: [[67.76035942508184 -82] -14.239640574918155]
Test Case: 720 | Input/Output: [[-91.36598532506682 39] -52.365985325066816]
Test Case: 721 | Input/Output: [[25.62408632556506 74] 99.62408632556506]
Test Case: 722 | Input/Output: [[60.248461881139264 -42] 18.248461881139264]
Test Case: 723 | Input/Output: [[39.907489009739095 -86] -46.092510990260905]
Test Case: 724 | Input/Output: [[-33.799707425490254 54] 20.200292574509746]
Test Case: 725 | Input/Output: [[85.65723960431882 10] 95.65723960431882]
Test Case: 726 | Input/Output: [[78.18574319684146 -13] 65.18574319684146]
Test Case: 727 | Input/Output: [[-9.331740805926117 -31] -40.33174080592612]
Test Case: 728 | Input/Output: [[-75.75648410225358 -95] -170.75648410225358]
Test Case: 729 | Input/Output: [[52.10980493789265 -24] 28.109804937892648]
Test Case: 730 | Input/Output: [[-15.699440042952716 -93] -108.69944004295272]
Test Case: 731 | Input/Output: [[57.349880950775145 59] 116.34988095077514]
Test Case: 732 | Input/Output: [[28.726216428897402 6] 34.7262164288974]
Test Case: 733 | Input/Output: [[-49.22755061946526 17] -32.22755061946526]
Test Case: 734 | Input/Output: [[2.561651680237148 -32] -29.438348319762852]
Test Case: 735 | Input/Output: [[16.700586632090577 56] 72.70058663209058]
Test Case: 736 | Input/Output: [[21.526190431998344 -88] -66.47380956800166]
Test Case: 737 | Input/Output: [[-51.45977890842013 -75] -126.45977890842013]
Test Case: 738 | Input/Output: [[-16.33056719256632 -18] -34.33056719256632]
Test Case: 739 | Input/Output: [[12.069822830573713 46] 58.06982283057371]
Test Case: 740 | Input/Output: [[-89.00950540759234 38] -51.00950540759234]
Test Case: 741 | Input/Output: [[50.99616719568289 -73] -22.003832804317113]
Test Case: 742 | Input/Output: [[-72.75556278011841 77] 4.24443721988159]
Test Case: 743 | Input/Output: [[-36.048210589499696 23] -13.048210589499696]
Test Case: 744 | Input/Output: [[53.19632455520636 7] 60.19632455520636]
Test Case: 745 | Input/Output: [[73.36085627542718 -12] 61.36085627542718]
Test Case: 746 | Input/Output: [[43.75782953013362 6] 49.75782953013362]
Test Case: 747 | Input/Output: [[78.06216559201962 83] 161.06216559201962]
Test Case: 748 | Input/Output: [[26.209278394615325 -14] 12.209278394615325]
Test Case: 749 | Input/Output: [[-83.34751917078403 -92] -175.34751917078404]
Test Case: 750 | Input/Output: [[-3.446493414291112 87] 83.55350658570889]
Test Case: 751 | Input/Output: [[23.970534707542114 39] 62.970534707542114]
Test Case: 752 | Input/Output: [[-80.71594763014181 12] -68.71594763014181]
Test Case: 753 | Input/Output: [[-27.77461472922947 -23] -50.77461472922947]
Test Case: 754 | Input/Output: [[-86.64931786172463 7] -79.64931786172463]
Test Case: 755 | Input/Output: [[-24.579947676005503 -79] -103.5799476760055]
Test Case: 756 | Input/Output: [[82.81473260690856 53] 135.81473260690856]
Test Case: 757 | Input/Output: [[-42.15539120420226 -96] -138.15539120420226]
Test Case: 758 | Input/Output: [[-24.598525933945496 16] -8.598525933945496]
Test Case: 759 | Input/Output: [[-87.46141424059878 -13] -100.46141424059878]
Test Case: 760 | Input/Output: [[-24.866546178057078 -15] -39.86654617805708]
Test Case: 761 | Input/Output: [[-40.95768933748878 -42] -82.95768933748877]
Test Case: 762 | Input/Output: [[-65.52969209571278 37] -28.529692095712775]
Test Case: 763 | Input/Output: [[-23.39493768404199 -32] -55.39493768404199]
Test Case: 764 | Input/Output: [[-30.337088689876722 -3] -33.33708868987672]
Test Case: 765 | Input/Output: [[2.2568558272288612 94] 96.25685582722886]
Test Case: 766 | Input/Output: [[29.131948366885183 71] 100.13194836688518]
Test Case: 767 | Input/Output: [[33.992286503450174 9] 42.992286503450174]
Test Case: 768 | Input/Output: [[-67.5355443605128 -40] -107.5355443605128]
Test Case: 769 | Input/Output: [[-83.18504924496435 86] 2.814950755035653]
Test Case: 770 | Input/Output: [[-46.181047839730205 22] -24.181047839730205]
Test Case: 771 | Input/Output: [[-64.19450831391156 92] 27.805491686088445]
Test Case: 772 | Input/Output: [[-66.05787875473885 47] -19.05787875473885]
Test Case: 773 | Input/Output: [[-47.653772841428044 -73] -120.65377284142804]
Test Case: 774 | Input/Output: [[5.994417888355201 -17] -11.005582111644799]
Test Case: 775 | Input/Output: [[36.78442936035887 -1] 35.78442936035887]
Test Case: 776 | Input/Output: [[-37.87772548159014 71] 33.12227451840986]
Test Case: 777 | Input/Output: [[-4.273165697944918 -79] -83.27316569794492]
Test Case: 778 | Input/Output: [[-60.853857233022254 -46] -106.85385723302225]
Test Case: 779 | Input/Output: [[-15.81820083051646 -86] -101.81820083051646]
Test Case: 780 | Input/Output: [[56.1069923652104 16] 72.1069923652104]
Test Case: 781 | Input/Output: [[95.42010873738255 10] 105.42010873738255]
Test Case: 782 | Input/Output: [[86.15830075977519 -3] 83.15830075977519]
Test Case: 783 | Input/Output: [[1.9684415655219993 -99] -97.031558434478]
Test Case: 784 | Input/Output: [[-6.484437321804592 26] 19.51556267819541]
Test Case: 785 | Input/Output: [[43.470028136473644 47] 90.47002813647364]
Test Case: 786 | Input/Output: [[81.44216920865202 72] 153.44216920865202]
Test Case: 787 | Input/Output: [[98.22541067295452 -3] 95.22541067295452]
Test Case: 788 | Input/Output: [[6.336127934634163 -21] -14.663872065365837]
Test Case: 789 | Input/Output: [[-6.720182610773449 -56] -62.72018261077345]
Test Case: 790 | Input/Output: [[18.698826248334484 -56] -37.301173751665516]
Test Case: 791 | Input/Output: [[-39.04000935518628 32] -7.040009355186278]
Test Case: 792 | Input/Output: [[86.79925454667043 -29] 57.799254546670426]
Test Case: 793 | Input/Output: [[-30.95262781804111 -20] -50.95262781804111]
Test Case: 794 | Input/Output: [[46.29501687566008 93] 139.29501687566008]
Test Case: 795 | Input/Output: [[-94.68570845726909 26] -68.68570845726909]
Test Case: 796 | Input/Output: [[59.96549144806718 -41] 18.965491448067183]
Test Case: 797 | Input/Output: [[-36.05925428734651 97] 60.94074571265349]
Test Case: 798 | Input/Output: [[7.241354243499984 -65] -57.758645756500016]
Test Case: 799 | Input/Output: [[83.78432115911079 -77] 6.784321159110789]
Test Case: 800 | Input/Output: [[63.52095843897462 -21] 42.52095843897462]
Test Case: 801 | Input/Output: [[-8.29187854424167 51] 42.70812145575833]
Test Case: 802 | Input/Output: [[-47.475901383840565 -19] -66.47590138384057]
Test Case: 803 | Input/Output: [[-17.532374892908436 -98] -115.53237489290844]
Test Case: 804 | Input/Output: [[10.225308327429758 97] 107.22530832742976]
Test Case: 805 | Input/Output: [[48.803625881795085 -12] 36.803625881795085]
Test Case: 806 | Input/Output: [[-58.58596905410243 -34] -92.58596905410243]
Test Case: 807 | Input/Output: [[90.41700396283815 -68] 22.41700396283815]
Test Case: 808 | Input/Output: [[-35.611400685526434 80] 44.388599314473566]
Test Case: 809 | Input/Output: [[10.371959504769151 -32] -21.62804049523085]
Test Case: 810 | Input/Output: [[59.764949913010696 -15] 44.764949913010696]
Test Case: 811 | Input/Output: [[91.265920259458 99] 190.265920259458]
Test Case: 812 | Input/Output: [[38.98696117108216 -66] -27.013038828917843]
Test Case: 813 | Input/Output: [[-7.736476349552518 77] 69.26352365044748]
Test Case: 814 | Input/Output: [[99.65518112134833 -85] 14.655181121348335]
Test Case: 815 | Input/Output: [[-77.00840851145415 42] -35.00840851145415]
Test Case: 816 | Input/Output: [[67.72065152461607 84] 151.72065152461607]
Test Case: 817 | Input/Output: [[15.006774297502986 -50] -34.993225702497014]
Test Case: 818 | Input/Output: [[-58.969362478765255 -94] -152.96936247876525]
Test Case: 819 | Input/Output: [[69.68212982605382 -45] 24.682129826053824]
Test Case: 820 | Input/Output: [[74.50902849137196 -74] 0.5090284913719643]
Test Case: 821 | Input/Output: [[95.40925106316175 -96] -0.5907489368382528]
Test Case: 822 | Input/Output: [[-47.4785429307107 -13] -60.4785429307107]
Test Case: 823 | Input/Output: [[62.75540445781377 -16] 46.75540445781377]
Test Case: 824 | Input/Output: [[85.19172325724435 6] 91.19172325724435]
Test Case: 825 | Input/Output: [[-80.41190353661409 1] -79.41190353661409]
Test Case: 826 | Input/Output: [[-98.82699979524881 18] -80.82699979524881]
Test Case: 827 | Input/Output: [[-88.24537045354246 37] -51.24537045354246]
Test Case: 828 | Input/Output: [[98.34194217904349 22] 120.34194217904349]
Test Case: 829 | Input/Output: [[-31.451812643231776 57] 25.548187356768224]
Test Case: 830 | Input/Output: [[-95.92803978263093 -18] -113.92803978263093]
Test Case: 831 | Input/Output: [[-18.179437695022102 -50] -68.1794376950221]
Test Case: 832 | Input/Output: [[83.49087860321308 32] 115.49087860321308]
Test Case: 833 | Input/Output: [[47.57778123103745 -74] -26.42221876896255]
Test Case: 834 | Input/Output: [[78.80972566705907 78] 156.80972566705907]
Test Case: 835 | Input/Output: [[0.7378776448235556 -6] -5.262122355176444]
Test Case: 836 | Input/Output: [[-10.814363002390053 -31] -41.81436300239005]
Test Case: 837 | Input/Output: [[-83.95774211250199 -47] -130.957742112502]
Test Case: 838 | Input/Output: [[55.04738553595672 -74] -18.95261446404328]
Test Case: 839 | Input/Output: [[9.433052652190298 35] 44.4330526521903]
Test Case: 840 | Input/Output: [[-53.25903282261268 70] 16.74096717738732]
Test Case: 841 | Input/Output: [[32.05789190628116 83] 115.05789190628116]
Test Case: 842 | Input/Output: [[-61.213309305297045 -7] -68.21330930529705]
Test Case: 843 | Input/Output: [[-86.65819220539142 62] -24.658192205391416]
Test Case: 844 | Input/Output: [[-36.34805751023373 90] 53.65194248976627]
Test Case: 845 | Input/Output: [[-40.37838834994047 -79] -119.37838834994048]
Test Case: 846 | Input/Output: [[-70.5630429871144 71] 0.43695701288559974]
Test Case: 847 | Input/Output: [[-71.19039981122259 81] 9.80960018877741]
Test Case: 848 | Input/Output: [[-91.9311985895819 20] -71.9311985895819]
Test Case: 849 | Input/Output: [[53.87591051535327 69] 122.87591051535327]
Test Case: 850 | Input/Output: [[62.57474979627571 41] 103.57474979627571]
Test Case: 851 | Input/Output: [[13.519088128684345 61] 74.51908812868434]
Test Case: 852 | Input/Output: [[-20.35423057303896 1] -19.35423057303896]
Test Case: 853 | Input/Output: [[-43.70277508766161 97] 53.29722491233839]
Test Case: 854 | Input/Output: [[-86.76926564738734 15] -71.76926564738734]
Test Case: 855 | Input/Output: [[-11.896531726149504 54] 42.103468273850496]
Test Case: 856 | Input/Output: [[31.82860623060938 39] 70.82860623060938]
Test Case: 857 | Input/Output: [[-52.53916701195731 -7] -59.53916701195731]
Test Case: 858 | Input/Output: [[82.68732859666451 -55] 27.687328596664514]
Test Case: 859 | Input/Output: [[92.28417181499975 -94] -1.7158281850002481]
Test Case: 860 | Input/Output: [[-39.56242580089104 56] 16.43757419910896]
Test Case: 861 | Input/Output: [[-13.57798018254843 -54] -67.57798018254843]
Test Case: 862 | Input/Output: [[70.86951530110525 -34] 36.86951530110525]
Test Case: 863 | Input/Output: [[-11.816965081331787 37] 25.183034918668213]
Test Case: 864 | Input/Output: [[-30.254074305876657 -18] -48.25407430587666]
Test Case: 865 | Input/Output: [[91.94514035610186 18] 109.94514035610186]
Test Case: 866 | Input/Output: [[67.46311775369438 65] 132.46311775369438]
Test Case: 867 | Input/Output: [[34.615931335547 -60] -25.384068664452997]
Test Case: 868 | Input/Output: [[-1.8137324808047595 -47] -48.81373248080476]
Test Case: 869 | Input/Output: [[-95.51534624897371 -40] -135.5153462489737]
Test Case: 870 | Input/Output: [[-23.23143734296616 -63] -86.23143734296616]
Test Case: 871 | Input/Output: [[29.48894234999355 91] 120.48894234999355]
Test Case: 872 | Input/Output: [[-96.34365607110075 21] -75.34365607110075]
Test Case: 873 | Input/Output: [[-36.13336840928649 25] -11.13336840928649]
Test Case: 874 | Input/Output: [[-69.31531425610522 21] -48.315314256105225]
Test Case: 875 | Input/Output: [[51.5325433432854 -59] -7.467456656714603]
Test Case: 876 | Input/Output: [[-50.18054406228642 29] -21.180544062286423]
Test Case: 877 | Input/Output: [[-80.9872749773141 -37] -117.9872749773141]
Test Case: 878 | Input/Output: [[93.46123266239229 35] 128.4612326623923]
Test Case: 879 | Input/Output: [[92.1706571919558 100] 192.1706571919558]
Test Case: 880 | Input/Output: [[65.47579515231928 47] 112.47579515231928]
Test Case: 881 | Input/Output: [[24.167012138720963 -93] -68.83298786127904]
Test Case: 882 | Input/Output: [[-30.556505251251224 15] -15.556505251251224]
Test Case: 883 | Input/Output: [[96.64717783077296 29] 125.64717783077296]
Test Case: 884 | Input/Output: [[29.018709722793403 -100] -70.9812902772066]
Test Case: 885 | Input/Output: [[58.67064822630971 59] 117.67064822630971]
Test Case: 886 | Input/Output: [[71.52872337295429 45] 116.52872337295429]
Test Case: 887 | Input/Output: [[41.36467002620944 16] 57.36467002620944]
Test Case: 888 | Input/Output: [[34.94795798025848 57] 91.94795798025848]
Test Case: 889 | Input/Output: [[-7.0357569017375 88] 80.9642430982625]
Test Case: 890 | Input/Output: [[-77.78885087575853 20] -57.78885087575853]
Test Case: 891 | Input/Output: [[19.024162576984722 -38] -18.975837423015278]
Test Case: 892 | Input/Output: [[-91.15007171004802 -11] -102.15007171004802]
Test Case: 893 | Input/Output: [[-32.12740855319187 10] -22.12740855319187]
Test Case: 894 | Input/Output: [[13.76223847708205 -78] -64.23776152291795]
Test Case: 895 | Input/Output: [[-19.300578370636345 67] 47.699421629363655]
Test Case: 896 | Input/Output: [[54.20000257882714 100] 154.20000257882714]
Test Case: 897 | Input/Output: [[19.70957567374552 -78] -58.29042432625448]
Test Case: 898 | Input/Output: [[-70.82745264311794 -22] -92.82745264311794]
Test Case: 899 | Input/Output: [[14.893572163844908 -1] 13.893572163844908]
Test Case: 900 | Input/Output: [[45.96485338430497 89] 134.96485338430497]
Test Case: 901 | Input/Output: [[-94.98477268654204 53] -41.984772686542044]
Test Case: 902 | Input/Output: [[-8.727359477555254 64] 55.272640522444746]
Test Case: 903 | Input/Output: [[70.7046820441806 43] 113.7046820441806]
Test Case: 904 | Input/Output: [[17.20215173761595 22] 39.20215173761595]
Test Case: 905 | Input/Output: [[12.42861330308304 -47] -34.57138669691696]
Test Case: 906 | Input/Output: [[-12.650686293305242 52] 39.34931370669476]
Test Case: 907 | Input/Output: [[59.812204317286586 71] 130.8122043172866]
Test Case: 908 | Input/Output: [[-60.451228785555244 -16] -76.45122878555524]
Test Case: 909 | Input/Output: [[90.9242489321652 -60] 30.9242489321652]
Test Case: 910 | Input/Output: [[12.412809637010014 -12] 0.41280963701001383]
Test Case: 911 | Input/Output: [[42.25267212651252 -74] -31.747327873487478]
Test Case: 912 | Input/Output: [[-25.096037388463202 -93] -118.0960373884632]
Test Case: 913 | Input/Output: [[-42.5160550935207 36] -6.5160550935206984]
Test Case: 914 | Input/Output: [[70.0972428388693 90] 160.0972428388693]
Test Case: 915 | Input/Output: [[25.812269046074633 99] 124.81226904607463]
Test Case: 916 | Input/Output: [[-12.927133060738399 49] 36.0728669392616]
Test Case: 917 | Input/Output: [[-16.6752132841615 61] 44.3247867158385]
Test Case: 918 | Input/Output: [[-46.593826658695846 -98] -144.59382665869583]
Test Case: 919 | Input/Output: [[-89.69552486892121 21] -68.69552486892121]
Test Case: 920 | Input/Output: [[61.179438708817315 12] 73.17943870881732]
Test Case: 921 | Input/Output: [[-6.978556946561326 19] 12.021443053438674]
Test Case: 922 | Input/Output: [[-95.03816062895429 -88] -183.0381606289543]
Test Case: 923 | Input/Output: [[37.37670236859046 -43] -5.623297631409542]
Test Case: 924 | Input/Output: [[-44.590234560847165 -96] -140.59023456084716]
Test Case: 925 | Input/Output: [[54.33313249656101 -52] 2.3331324965610065]
Test Case: 926 | Input/Output: [[96.44884329253048 -41] 55.44884329253048]
Test Case: 927 | Input/Output: [[44.89257323208966 43] 87.89257323208966]
Test Case: 928 | Input/Output: [[-63.7908649602325 45] -18.790864960232497]
Test Case: 929 | Input/Output: [[-97.78639037158881 73] -24.78639037158881]
Test Case: 930 | Input/Output: [[73.14677826005561 -84] -10.853221739944388]
Test Case: 931 | Input/Output: [[-8.038691501341603 -25] -33.0386915013416]
Test Case: 932 | Input/Output: [[-9.328834389486175 54] 44.671165610513825]
Test Case: 933 | Input/Output: [[-55.76471274004491 30] -25.764712740044907]
Test Case: 934 | Input/Output: [[-22.862043720780093 -73] -95.8620437207801]
Test Case: 935 | Input/Output: [[-91.21650700359373 93] 1.7834929964062667]
Test Case: 936 | Input/Output: [[97.78054674603328 -44] 53.78054674603328]
Test Case: 937 | Input/Output: [[-98.92056194482768 -59] -157.92056194482768]
Test Case: 938 | Input/Output: [[-91.49072140133119 -67] -158.4907214013312]
Test Case: 939 | Input/Output: [[52.78615907631385 89] 141.78615907631385]
Test Case: 940 | Input/Output: [[-84.77616220462454 72] -12.77616220462454]
Test Case: 941 | Input/Output: [[-45.008122599281485 85] 39.991877400718515]
Test Case: 942 | Input/Output: [[11.463133693464385 -43] -31.536866306535615]
Test Case: 943 | Input/Output: [[-73.77645447849615 90] 16.22354552150385]
Test Case: 944 | Input/Output: [[6.452705240749097 20] 26.452705240749097]
Test Case: 945 | Input/Output: [[-33.988145600448874 81] 47.011854399551126]
Test Case: 946 | Input/Output: [[-1.7085435354831304 71] 69.29145646451687]
Test Case: 947 | Input/Output: [[-15.833581694934296 89] 73.1664183050657]
Test Case: 948 | Input/Output: [[-36.94138999801808 -21] -57.94138999801808]
Test Case: 949 | Input/Output: [[52.48984815296683 -46] 6.489848152966829]
Test Case: 950 | Input/Output: [[-55.120146795014556 12] -43.120146795014556]
Test Case: 951 | Input/Output: [[-35.86611320387104 94] 58.13388679612896]
Test Case: 952 | Input/Output: [[-47.2007649347324 27] -20.200764934732398]
Test Case: 953 | Input/Output: [[-97.24368026007025 49] -48.24368026007025]
Test Case: 954 | Input/Output: [[-52.941959331537916 2] -50.941959331537916]
Test Case: 955 | Input/Output: [[-28.89077428681786 -96] -124.89077428681786]
Test Case: 956 | Input/Output: [[-33.04814772335381 -40] -73.04814772335381]
Test Case: 957 | Input/Output: [[93.43610994788344 -45] 48.43610994788344]
Test Case: 958 | Input/Output: [[-34.42199381733748 -31] -65.42199381733748]
Test Case: 959 | Input/Output: [[-30.77956934728188 -95] -125.77956934728188]
Test Case: 960 | Input/Output: [[25.225286633888828 37] 62.22528663388883]
Test Case: 961 | Input/Output: [[61.42832727331026 -52] 9.42832727331026]
Test Case: 962 | Input/Output: [[-35.410224084368906 -47] -82.4102240843689]
Test Case: 963 | Input/Output: [[-51.06411091715082 -80] -131.06411091715083]
Test Case: 964 | Input/Output: [[-31.35569592692491 -79] -110.35569592692491]
Test Case: 965 | Input/Output: [[-21.596643771397055 97] 75.40335622860295]
Test Case: 966 | Input/Output: [[36.17789863020349 40] 76.17789863020349]
Test Case: 967 | Input/Output: [[-64.65898907768366 -82] -146.65898907768366]
Test Case: 968 | Input/Output: [[21.32592757318308 -73] -51.67407242681692]
Test Case: 969 | Input/Output: [[-85.01364477106304 71] -14.013644771063042]
Test Case: 970 | Input/Output: [[62.407618545452124 -11] 51.407618545452124]
Test Case: 971 | Input/Output: [[89.51206182829097 -77] 12.512061828290967]
Test Case: 972 | Input/Output: [[5.967872302944556 -78] -72.03212769705544]
Test Case: 973 | Input/Output: [[-12.304898583083343 -67] -79.30489858308334]
Test Case: 974 | Input/Output: [[78.72002525901499 60] 138.720025259015]
Test Case: 975 | Input/Output: [[87.80957319680368 -78] 9.809573196803683]
Test Case: 976 | Input/Output: [[-29.873150613949306 -97] -126.8731506139493]
Test Case: 977 | Input/Output: [[50.2957984194783 95] 145.2957984194783]
Test Case: 978 | Input/Output: [[43.9068816602159 -46] -2.0931183397840982]
Test Case: 979 | Input/Output: [[53.00242907826092 48] 101.00242907826092]
Test Case: 980 | Input/Output: [[61.739335409160844 -40] 21.739335409160844]
Test Case: 981 | Input/Output: [[-74.09499644899047 -21] -95.09499644899047]
Test Case: 982 | Input/Output: [[-57.53712221183935 -99] -156.53712221183935]
Test Case: 983 | Input/Output: [[-78.94513145913464 37] -41.94513145913464]
Test Case: 984 | Input/Output: [[-93.1288754012614 -26] -119.1288754012614]
Test Case: 985 | Input/Output: [[41.02575609523009 -41] 0.02575609523009348]
Test Case: 986 | Input/Output: [[-11.372419655659314 -7] -18.372419655659314]
Test Case: 987 | Input/Output: [[36.47213219704895 61] 97.47213219704895]
Test Case: 988 | Input/Output: [[-7.809768588759454 -59] -66.80976858875945]
Test Case: 989 | Input/Output: [[8.297260838764345 -56] -47.702739161235655]
Test Case: 990 | Input/Output: [[-84.00058206310368 80] -4.000582063103678]
Test Case: 991 | Input/Output: [[70.92676951521128 47] 117.92676951521128]
Test Case: 992 | Input/Output: [[18.52975039349485 0] 18.52975039349485]
Test Case: 993 | Input/Output: [[81.56731123649263 -78] 3.5673112364926283]
Test Case: 994 | Input/Output: [[30.131691852524455 -24] 6.131691852524455]
Test Case: 995 | Input/Output: [[52.24949759320697 -96] -43.75050240679303]
Test Case: 996 | Input/Output: [[-10.852011457682494 -38] -48.852011457682494]
Test Case: 997 | Input/Output: [[-29.720608368840033 -52] -81.72060836884003]
Test Case: 998 | Input/Output: [[70.92350574340983 74] 144.92350574340983]
Test Case: 999 | Input/Output: [[51.2491882640781 37] 88.2491882640781]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 51 84 11 86 18 -80 -18 122 104 101 19 -29 -102 66 13 67
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 55585.0
Test mean error for best: 27.79250
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 97.5745600568 
Correct output: 176.4111721397 | Program output: 87.4111721397 
Correct output: -45.9855470137 | Program output: -50.9855470137
Correct output: -69.1842130959 | Program output: 15.8157869041 
Correct output: 63.2475025533  | Program output: -16.7524974467
Correct output: -51.2854080718 | Program output: -36.2854080718
Correct output: 32.2164394865  | Program output: 40.2164394865 
Correct output: -131.1081934444 | Program output: -87.1081934444
Correct output: -107.3871021605 | Program output: -87.3871021605
Correct output: 140.2562216458 | Program output: 49.2562216458 
Correct output: 144.5566127278 | Program output: 46.5566127278 
Correct output: 110.5504218952 | Program output: 34.5504218952 
Correct output: 69.5853323329  | Program output: 96.5853323329 
Correct output: -140.4218174569 | Program output: -75.4218174569
Correct output: -31.687897455  | Program output: 64.312102545  
Correct output: 0.6183065966   | Program output: -88.3816934034
Correct output: -102.4881805564 | Program output: -28.4881805564
Correct output: 66.1485036102  | Program output: 61.1485036102 
Correct output: -116.6399485427 | Program output: -40.6399485427
Correct output: 39.0797892898  | Program output: -59.9202107102
Correct output: -122.9843803096 | Program output: -50.9843803096
Correct output: 122.4357179134 | Program output: 51.4357179134 
Correct output: -35.8631971931 | Program output: -9.8631971931 
Correct output: 25.5564259997  | Program output: -29.4435740003
Correct output: -165.0426482311 | Program output: -74.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction float_min} {:instruction integer_mod} {:instruction float_rot} {:instruction integer_swap} {:instruction tag_integer_918} {:instruction float_dec} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction tagged_775} {:instruction 94.1944655267306} {:instruction integer_yank} {:instruction integer_max} {:instruction float_sub} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_tan} {:instruction float_dup_items} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction tagged_731} {:instruction float_add} {:instruction float_tan} {:instruction integer_swap} {:instruction float_yank} {:instruction float_pop} {:instruction integer_pop} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction float_stackdepth} {:instruction print_float} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_dec} {:instruction -72} {:instruction -47} {:instruction float_stackdepth} {:instruction -40} {:instruction integer_dec} {:instruction integer_min} {:instruction float_min} {:instruction integer_rot} {:instruction float_dup} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_pop} {:instruction tag_integer_916} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_div} {:instruction integer_dup_times} {:instruction float_tan} {:instruction float_dup_items} {:instruction float_dup} {:instruction -81.04512973614547} {:instruction float_min} {:instruction float_dup} {:instruction float_dup} {:instruction integer_pop} {:instruction float_stackdepth} {:instruction float_stackdepth} {:instruction float_max} {:instruction in1} {:instruction float_yankdup} {:instruction integer_dup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction print_float} {:instruction integer_sub} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_pop} {:instruction integer_swap} {:instruction in2} {:instruction integer_swap} {:instruction float_flush} {:instruction integer_div} {:instruction print_float} {:instruction integer_dup})
Best program: (print_integer float_min integer_mod float_rot integer_swap tag_integer_918 float_dec float_mult integer_dup_times float_dup_times tagged_775 94.1944655267306 integer_yank integer_max float_sub float_frominteger integer_rot integer_flush float_tan float_dup_items integer_mod float_dup_times float_dup_items tagged_731 float_add float_tan integer_swap float_yank float_pop integer_pop float_yankdup integer_fromfloat integer_dup float_stackdepth print_float integer_inc integer_sub integer_inc integer_dec -72 -47 float_stackdepth -40 integer_dec integer_min float_min integer_rot float_dup integer_shove float_rot integer_dec integer_min integer_pop tag_integer_916 integer_fromfloat integer_flush integer_shove float_sub integer_div integer_dup_times float_tan float_dup_items float_dup -81.04512973614547 float_min float_dup float_dup integer_pop float_stackdepth float_stackdepth float_max in1 float_yankdup integer_dup integer_fromfloat integer_flush print_float integer_sub float_shove integer_yank integer_yank float_pop integer_swap in2 integer_swap float_flush integer_div print_float integer_dup)
Errors: [4.0 3 89.0 2 5.0 2 85.0 12 80.0 13 15.0 2 8.0 2 44.0 3 20.0 2 91.0 2 98.0 2 76.0 3 27.0 2 65.0 3 96.0 11 89.0 13 74.0 3 5.0 1 76.0 3 99.0 12 72.0 3 71.0 3 26.0 2 55.0 12 91.0 3]
Total: 1580.0
Mean: 31.6
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 18428.2669152
Median total errors in population: 25348.0
Error averages by case: (717.1527525000013 13.405 741.1958705999973 13.5 709.277399199999 13.353 721.5356436000006 13.796 715.8665217000009 13.31 715.5713312000007 13.251 710.9806381999998 12.637 737.0070461000013 14.244 730.5850386000009 14.071 732.6234855999986 13.341 732.7343060000018 13.501 723.509401199999 13.414 721.7591739999998 12.743 738.6287037000017 14.165 717.009723800001 13.116 709.3547376000001 12.35 728.5265580000018 14.143 709.4766461000012 12.475 733.1731913999989 14.291 715.6573704 13.227 733.9754284999991 14.233 727.4012328999995 13.476 713.6690221000019 13.393 708.6406923000002 13.328 745.9889999000002 14.203)
Error minima by case: (1.6071 2 0.5888 2 0.3442 1 1.4475 3 2.6971 9 0.1396 2 1.2164 2 4.1648 3 7.3871 2 9.0 1 2.0 1 10.583 2 0.2184 2 9.4218 2 0.3121 3 0.0091 7 2.4882 3 3.2184 1 16.6399 3 0.9202 7 21.0156 3 18.5643 2 0.1368 2 0.4436 8 16.9574 3)
Average genome size in population (length): 49.607
Average program size in population (points): 50.607
Average percent parens in population: 0.041
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.301
Error (vector) diversity:			 0.325
Behavioral diversity:				 0.351
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1243636
--- Timings ---
Current time: 1529615791864 milliseconds
Total Time:           3.2 seconds
Initialization:       0.1 seconds,  3.5%
Reproduction:         0.5 seconds, 17.0%
Fitness Testing:      2.6 seconds, 79.5%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 55607.0
Test mean error for best: 27.80350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 13.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -38.2854080718
Correct output: 32.2164394865  | Program output: 38.2164394865 
Correct output: -131.1081934444 | Program output: -89.1081934444
Correct output: -107.3871021605 | Program output: -89.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 94.5853323329 
Correct output: -140.4218174569 | Program output: -77.4218174569
Correct output: -31.687897455  | Program output: 62.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -30.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -42.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -52.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -11.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -76.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [6.0 3 91.0 3 7.0 2 83.0 12 82.0 13 13.0 2 6.0 1 42.0 3 18.0 3 93.0 2 100.0 1 78.0 3 25.0 2 63.0 3 94.0 11 91.0 12 72.0 2 7.0 2 74.0 3 101.0 13 70.0 2 73.0 3 24.0 2 57.0 13 89.0 2]
Total: 1577.0
Mean: 31.54
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 7018.703342799983
Median total errors in population: 2525.904699999999
Error averages by case: (259.2959600999995 11.191 314.68016899999895 11.295 236.26029430000148 11.034 259.75965579999945 12.384 255.60039759999964 12.362 246.99178179999808 10.749 231.99282230000105 10.497 296.5220270999995 11.724 280.9695724999993 11.419 292.91596660000124 10.969 295.06518840000206 11.334 272.9834332000006 11.202 260.0935676000017 10.679 303.07692470000194 11.687 254.0709305999995 11.922 242.9199553000001 11.322 280.06813439999985 11.679 238.01509700000145 10.203 288.8931303000015 11.936 254.4671367000008 12.042 292.6149651999989 11.804 279.81985729999985 11.244 239.08413369999934 11.091 236.6312977000001 12.228 320.11094359999714 11.803)
Error minima by case: (1.6071 3 0.5888 2 0.3442 1 1.3451 3 2.6971 3 0.1396 2 1.2164 1 4.1648 3 9.3871 2 30.2562 2 34.5566 1 0.5504 3 0.2184 2 9.4218 2 0.3121 3 0.0091 3 4.4882 2 3.2184 1 18.6399 3 0.9202 3 21.0156 2 12.4357 2 0.1368 2 1.4436 3 16.9574 2)
Average genome size in population (length): 59.656
Average program size in population (points): 60.656
Average percent parens in population: 0.021
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.514
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.277
Error (vector) diversity:			 0.292
Behavioral diversity:				 0.328
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2740436
--- Timings ---
Current time: 1529615795759 milliseconds
Total Time:           7.4 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         2.4 seconds, 31.9%
Fitness Testing:      4.2 seconds, 57.2%
Report:               0.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 55607.0
Test mean error for best: 27.80350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 13.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -38.2854080718
Correct output: 32.2164394865  | Program output: 38.2164394865 
Correct output: -131.1081934444 | Program output: -89.1081934444
Correct output: -107.3871021605 | Program output: -89.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 94.5853323329 
Correct output: -140.4218174569 | Program output: -77.4218174569
Correct output: -31.687897455  | Program output: 62.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -30.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -42.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -52.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -11.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -76.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [6.0 3 91.0 3 7.0 2 83.0 12 82.0 13 13.0 2 6.0 1 42.0 3 18.0 3 93.0 2 100.0 1 78.0 3 25.0 2 63.0 3 94.0 11 91.0 12 72.0 2 7.0 2 74.0 3 101.0 13 70.0 2 73.0 3 24.0 2 57.0 13 89.0 2]
Total: 1577.0
Mean: 31.54
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 5667.677022200005
Median total errors in population: 1620.0
Error averages by case: (187.7301503 7.449 248.19892640000032 7.158 179.69265760000027 7.057 227.49162970000052 12.551 221.42125140000013 13.159 188.1446066999991 6.843 182.57740810000058 6.732 220.6423882999992 7.802 204.45223159999995 7.202 240.26009830000064 6.847 244.368932600001 6.967 226.39454880000025 7.588 206.40840600000078 6.61 231.81480540000058 7.892 238.37123040000048 11.811 231.96579839999984 12.561 226.09625739999967 7.842 179.83916490000038 6.127 230.50367950000057 7.973 236.69755029999942 12.574 230.386511999999 7.961 227.08092360000026 7.332 189.23531109999996 7.002 205.2825380999999 12.59 249.06201529999868 7.928)
Error minima by case: (3.0 3 1.5888 2 3.0145 1 14.8158 9 4.2475 9 2.0912 2 0.092 1 42.0 3 18.0 2 41.7438 2 45.5566 1 33.5504 3 10.5853 2 10.4218 2 7.6879 8 0.0091 7 27.4882 2 4.0 1 35.3601 3 6.7713 8 21.0156 2 19.5643 2 8.8632 2 5.6988 8 16.9574 2)
Average genome size in population (length): 62.476
Average program size in population (points): 63.476
Average percent parens in population: 0.018
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.015
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.747
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.747
Total error diversity:				 0.142
Error (vector) diversity:			 0.156
Behavioral diversity:				 0.175
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4306636
--- Timings ---
Current time: 1529615799257 milliseconds
Total Time:          10.9 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         3.8 seconds, 34.7%
Fitness Testing:      5.9 seconds, 54.2%
Report:               1.1 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 55607.0
Test mean error for best: 27.80350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 13.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -38.2854080718
Correct output: 32.2164394865  | Program output: 38.2164394865 
Correct output: -131.1081934444 | Program output: -89.1081934444
Correct output: -107.3871021605 | Program output: -89.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 94.5853323329 
Correct output: -140.4218174569 | Program output: -77.4218174569
Correct output: -31.687897455  | Program output: 62.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -30.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -42.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -52.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -11.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -76.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction in2} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_max} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min in2 float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_max float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [6.0 3 91.0 3 7.0 2 83.0 12 82.0 13 13.0 2 6.0 1 42.0 3 18.0 3 93.0 2 100.0 1 78.0 3 25.0 2 63.0 3 94.0 11 91.0 12 72.0 2 7.0 2 74.0 3 101.0 13 70.0 2 73.0 3 24.0 2 57.0 13 89.0 2]
Total: 1577.0
Mean: 31.54
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 5490.5843831
Median total errors in population: 1580.0
Error averages by case: (169.8211803 5.056 240.81985489999997 4.405 169.64026930000003 4.294 232.48662009999998 12.582 230.85077109999995 13.537 175.95339869999992 4.317 168.67187280000005 4.181 201.17320859999992 5.263 181.10812099999998 4.507 241.67151640000003 4.208 247.3936768 4.197 228.57912630000004 5.067 185.57586400000008 4.075 218.70282890000001 5.193 242.57443429999995 11.691 237.87298429999996 13.37 225.09160939999995 5.2 170.51680329999996 3.384 227.05044310000002 5.306 246.29782409999999 12.862 224.05024309999993 5.344 224.52215300000003 4.998 184.29815159999995 4.295 209.90583569999995 12.805 240.55159199999994 5.267)
Error minima by case: (3.0 3 1.5888 2 4.0 1 11.8609 8 5.8285 9 13.0 2 6.0 1 30.6606 3 18.0 2 41.7438 2 45.4746 1 33.4684 3 0.5093 2 10.4218 2 20.5156 9 0.3817 6 21.4431 2 2.9275 1 35.3601 2 2.92 9 21.0156 2 0.9688 2 9.8632 2 14.0333 10 16.9574 2)
Average genome size in population (length): 59.248
Average program size in population (points): 60.248
Average percent parens in population: 0.019
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.56225
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.058
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5789636
--- Timings ---
Current time: 1529615802733 milliseconds
Total Time:          14.4 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.2 seconds, 36.1%
Fitness Testing:      7.6 seconds, 52.7%
Report:               1.5 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 55607.0
Test mean error for best: 27.80350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 13.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -38.2854080718
Correct output: 32.2164394865  | Program output: 38.2164394865 
Correct output: -131.1081934444 | Program output: -89.1081934444
Correct output: -107.3871021605 | Program output: -89.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 94.5853323329 
Correct output: -140.4218174569 | Program output: -77.4218174569
Correct output: -31.687897455  | Program output: 62.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -30.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -42.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -52.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -11.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -76.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_mult} {:instruction float_rot} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_div} {:instruction float_min} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction float_div} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_149} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (float_max integer_mult float_rot float_frominteger float_dec integer_pop integer_div float_min integer_dup_times integer_dup_items float_div integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_149 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [6.0 3 91.0 3 7.0 2 83.0 12 82.0 13 13.0 2 6.0 1 42.0 3 18.0 3 93.0 2 100.0 1 78.0 3 25.0 2 63.0 3 94.0 11 91.0 12 72.0 2 7.0 2 74.0 3 101.0 13 70.0 2 73.0 3 24.0 2 57.0 13 89.0 2]
Total: 1577.0
Mean: 31.54
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 5345.403397599999
Median total errors in population: 1580.0
Error averages by case: (163.69303820000005 4.928 235.0514203 4.28 163.15817790000003 4.037 228.01674799999998 12.469 225.4940374 13.396 170.2043473 4.095 164.4492248 3.849 195.1421928 5.059 174.9431829 4.393 236.08286379999998 4.068 241.8846264 3.977 223.1160283 4.923 180.8612872 3.949 212.71965269999998 4.947 237.55975879999994 11.579 231.6752827 13.147 219.41634910000002 4.924 164.27263959999996 3.221 221.3195007 5.094 240.59466810000004 12.744 218.19761979999996 5.021 219.07444480000004 4.838 178.99961960000002 4.055 204.23246620000003 12.666 234.61922019999994 4.966)
Error minima by case: (3.0 3 41.0257 2 4.0 1 11.8609 10 34.409 9 0.2348 2 6.0 1 3.808 3 18.0 2 63.9665 2 72.4481 1 57.0375 3 25.0 2 23.6059 2 19.3545 9 0.041 8 21.4431 2 4.0 1 35.5948 2 24.0798 9 41.9393 2 0.9688 2 15.7506 2 10.5564 10 50.3628 2)
Average genome size in population (length): 57.568
Average program size in population (points): 58.568
Average percent parens in population: 0.019
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.025375
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.042
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 7231211
--- Timings ---
Current time: 1529615806110 milliseconds
Total Time:          17.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         6.6 seconds, 36.9%
Fitness Testing:      9.2 seconds, 51.8%
Report:               1.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 55607.0
Test mean error for best: 27.80350
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 13.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -38.2854080718
Correct output: 32.2164394865  | Program output: 38.2164394865 
Correct output: -131.1081934444 | Program output: -89.1081934444
Correct output: -107.3871021605 | Program output: -89.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 94.5853323329 
Correct output: -140.4218174569 | Program output: -77.4218174569
Correct output: -31.687897455  | Program output: 62.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -30.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -42.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -52.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -11.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -76.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_swap} {:instruction float_add} {:instruction float_div} {:instruction integer_mult} {:instruction in1} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction float_inc} {:instruction integer_max} {:instruction float_div} {:instruction integer_inc} {:instruction float_flush} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_min integer_swap float_add float_div integer_mult in1 integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth float_inc integer_max float_div integer_inc float_flush float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [6.0 3 91.0 3 7.0 2 83.0 12 82.0 13 13.0 2 6.0 1 42.0 3 18.0 3 93.0 2 100.0 1 78.0 3 25.0 2 63.0 3 94.0 11 91.0 12 72.0 2 7.0 2 74.0 3 101.0 13 70.0 2 73.0 3 24.0 2 57.0 13 89.0 2]
Total: 1577.0
Mean: 31.54
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 4920.551089400001
Median total errors in population: 1580.0
Error averages by case: (143.7562861 4.711 216.7678137 4.299 147.81382620000002 3.815 208.0796674 12.478 211.44752160000002 13.461 154.5414758 3.846 143.07742059999998 3.31 180.37562979999996 4.805 159.8375686 4.407 217.70144390000004 3.827 223.6895807 3.389 204.45381129999998 4.697 159.8834812 3.737 198.1465561 4.742 216.9148847 11.557 217.8465411 12.89 204.90818380000002 4.347 143.8331801 3.333 206.87223840000004 4.828 226.8791951 13.075 203.65221359999998 4.399 200.4824299 4.668 163.52452560000003 3.839 189.7508266 13.044 220.4267875 4.384)
Error minima by case: (2.0 3 41.0257 2 3.0 1 4.9137 9 53.0235 10 0.7529 2 6.0 1 3.808 3 0.0795 2 63.9665 2 71.0235 1 49.0235 3 7.0795 2 23.6059 2 10.7674 8 0.3704 7 27.3826 2 3.0 1 41.5344 2 0.92 8 44.018 2 42.7703 2 6.0795 2 16.0333 9 50.3628 2)
Average genome size in population (length): 52.582
Average program size in population (points): 53.582
Average percent parens in population: 0.020
Minimum age in population: 5.0
Maximum age in population: 9.25
Average age in population: 7.565375
Median age in population: 7.625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.046
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8546961
--- Timings ---
Current time: 1529615809461 milliseconds
Total Time:          21.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         7.9 seconds, 37.4%
Fitness Testing:     10.8 seconds, 51.2%
Report:               2.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 55637.0
Test mean error for best: 27.81850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 93.5745600568 
Correct output: 176.4111721397 | Program output: 83.4111721397 
Correct output: -45.9855470137 | Program output: -54.9855470137
Correct output: -69.1842130959 | Program output: 11.8157869041 
Correct output: 63.2475025533  | Program output: -20.7524974467
Correct output: -51.2854080718 | Program output: -40.2854080718
Correct output: 32.2164394865  | Program output: 36.2164394865 
Correct output: -131.1081934444 | Program output: -91.1081934444
Correct output: -107.3871021605 | Program output: -91.3871021605
Correct output: 140.2562216458 | Program output: 45.2562216458 
Correct output: 144.5566127278 | Program output: 42.5566127278 
Correct output: 110.5504218952 | Program output: 30.5504218952 
Correct output: 69.5853323329  | Program output: 92.5853323329 
Correct output: -140.4218174569 | Program output: -79.4218174569
Correct output: -31.687897455  | Program output: 60.312102545  
Correct output: 0.6183065966   | Program output: -92.3816934034
Correct output: -102.4881805564 | Program output: -32.4881805564
Correct output: 66.1485036102  | Program output: 57.1485036102 
Correct output: -116.6399485427 | Program output: -44.6399485427
Correct output: 39.0797892898  | Program output: -63.9202107102
Correct output: -122.9843803096 | Program output: -54.9843803096
Correct output: 122.4357179134 | Program output: 47.4357179134 
Correct output: -35.8631971931 | Program output: -13.8631971931
Correct output: 25.5564259997  | Program output: -33.4435740003
Correct output: -165.0426482311 | Program output: -78.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [8.0 3 93.0 3 9.0 2 81.0 12 84.0 13 11.0 2 4.0 1 40.0 2 16.0 3 95.0 2 102.0 2 80.0 2 23.0 2 61.0 3 92.0 11 93.0 13 70.0 2 9.0 2 72.0 3 103.0 12 68.0 3 75.0 3 22.0 2 59.0 13 87.0 3]
Total: 1576.0
Mean: 31.52
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3246.8136959000008
Median total errors in population: 1577.0
Error averages by case: (73.85085350000001 3.804 152.56661520000003 3.765 78.69143559999999 2.876 144.75097590000001 12.262 147.969026 13.24 84.33187269999999 2.889 73.4289488 1.916 111.62067739999999 3.87 89.37443210000002 3.849 154.11560210000002 2.858 160.5797161 1.951 140.09035139999997 3.802 91.32179000000001 2.832 130.9926966 3.848 154.71278470000001 11.288 155.7716197 12.273 138.9622541 2.965 74.48842470000001 2.815 140.91283650000003 3.876 165.25626820000002 13.236 137.2854269 2.963 135.59019599999996 3.803 94.3175207 2.895 124.66750519999998 13.24 155.0858658 2.962)
Error minima by case: (3.0 2 9.0 2 4.0 1 15.8158 11 54.2475 8 11.0 2 4.0 1 40.0 2 16.0 2 7.0 1 0.0 0 22.0 2 23.0 2 61.0 2 10.7674 10 0.6183 9 28.4882 2 4.0 1 40.6399 2 30.0798 9 50.9844 2 27.0 2 9.8632 2 16.5564 10 74.0426 2)
Average genome size in population (length): 49.094
Average program size in population (points): 50.094
Average percent parens in population: 0.020
Minimum age in population: 6.75
Maximum age in population: 10.71875
Average age in population: 9.06365625
Median age in population: 9.09375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.678
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.678
Total error diversity:				 0.025
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9774636
--- Timings ---
Current time: 1529615812791 milliseconds
Total Time:          24.5 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.3 seconds, 37.9%
Fitness Testing:     12.4 seconds, 50.7%
Report:               2.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 55637.0
Test mean error for best: 27.81850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 93.5745600568 
Correct output: 176.4111721397 | Program output: 83.4111721397 
Correct output: -45.9855470137 | Program output: -54.9855470137
Correct output: -69.1842130959 | Program output: 11.8157869041 
Correct output: 63.2475025533  | Program output: -20.7524974467
Correct output: -51.2854080718 | Program output: -40.2854080718
Correct output: 32.2164394865  | Program output: 36.2164394865 
Correct output: -131.1081934444 | Program output: -91.1081934444
Correct output: -107.3871021605 | Program output: -91.3871021605
Correct output: 140.2562216458 | Program output: 45.2562216458 
Correct output: 144.5566127278 | Program output: 42.5566127278 
Correct output: 110.5504218952 | Program output: 30.5504218952 
Correct output: 69.5853323329  | Program output: 92.5853323329 
Correct output: -140.4218174569 | Program output: -79.4218174569
Correct output: -31.687897455  | Program output: 60.312102545  
Correct output: 0.6183065966   | Program output: -92.3816934034
Correct output: -102.4881805564 | Program output: -32.4881805564
Correct output: 66.1485036102  | Program output: 57.1485036102 
Correct output: -116.6399485427 | Program output: -44.6399485427
Correct output: 39.0797892898  | Program output: -63.9202107102
Correct output: -122.9843803096 | Program output: -54.9843803096
Correct output: 122.4357179134 | Program output: 47.4357179134 
Correct output: -35.8631971931 | Program output: -13.8631971931
Correct output: 25.5564259997  | Program output: -33.4435740003
Correct output: -165.0426482311 | Program output: -78.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [8.0 3 93.0 3 9.0 2 81.0 12 84.0 13 11.0 2 4.0 1 40.0 2 16.0 3 95.0 2 102.0 2 80.0 2 23.0 2 61.0 3 92.0 11 93.0 13 70.0 2 9.0 2 72.0 3 103.0 12 68.0 3 75.0 3 22.0 2 59.0 13 87.0 3]
Total: 1576.0
Mean: 31.52
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2966.1919943000003
Median total errors in population: 1577.0
Error averages by case: (62.22103990000001 3.749 142.39325 3.725 67.04604859999999 2.822 133.1093958 12.21 136.9126816 13.18 72.6977019 2.841 61.207029999999996 1.85 100.7704148 3.832 78.2145894 3.81 143.71186200000002 2.809 150.2845863 1.902 129.31570299999998 3.737 79.43138210000001 2.789 120.32221779999999 3.783 142.7805467 11.237 144.3042794 12.189 128.0310393 2.892 62.6207884 2.785 130.1045209 3.832 154.08634790000002 13.173 126.5100318 2.893 124.8413602 3.744 82.62362639999999 2.829 113.23097709999999 13.171 144.74157300000002 2.895)
Error minima by case: (4.0 3 89.0 2 5.0 2 48.2638 10 28.2393 10 11.0 2 2.7918 1 40.0 2 16.0 2 91.0 2 98.0 1 75.5422 2 23.0 2 61.0 3 10.7674 9 0.3817 8 70.0 2 5.0 1 72.0 2 4.0715 9 68.0 2 71.0 3 14.9427 2 9.4518 9 87.0 2)
Average genome size in population (length): 48.725
Average program size in population (points): 49.725
Average percent parens in population: 0.020
Minimum age in population: 7.90625
Maximum age in population: 12.453125
Average age in population: 10.53178125
Median age in population: 10.59375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.755
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.755
Total error diversity:				 0.029
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 10993111
--- Timings ---
Current time: 1529615816079 milliseconds
Total Time:          27.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        10.6 seconds, 38.3%
Fitness Testing:     14.0 seconds, 50.3%
Report:               3.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 55637.0
Test mean error for best: 27.81850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 93.5745600568 
Correct output: 176.4111721397 | Program output: 83.4111721397 
Correct output: -45.9855470137 | Program output: -54.9855470137
Correct output: -69.1842130959 | Program output: 11.8157869041 
Correct output: 63.2475025533  | Program output: -20.7524974467
Correct output: -51.2854080718 | Program output: -40.2854080718
Correct output: 32.2164394865  | Program output: 36.2164394865 
Correct output: -131.1081934444 | Program output: -91.1081934444
Correct output: -107.3871021605 | Program output: -91.3871021605
Correct output: 140.2562216458 | Program output: 45.2562216458 
Correct output: 144.5566127278 | Program output: 42.5566127278 
Correct output: 110.5504218952 | Program output: 30.5504218952 
Correct output: 69.5853323329  | Program output: 92.5853323329 
Correct output: -140.4218174569 | Program output: -79.4218174569
Correct output: -31.687897455  | Program output: 60.312102545  
Correct output: 0.6183065966   | Program output: -92.3816934034
Correct output: -102.4881805564 | Program output: -32.4881805564
Correct output: 66.1485036102  | Program output: 57.1485036102 
Correct output: -116.6399485427 | Program output: -44.6399485427
Correct output: 39.0797892898  | Program output: -63.9202107102
Correct output: -122.9843803096 | Program output: -54.9843803096
Correct output: 122.4357179134 | Program output: 47.4357179134 
Correct output: -35.8631971931 | Program output: -13.8631971931
Correct output: 25.5564259997  | Program output: -33.4435740003
Correct output: -165.0426482311 | Program output: -78.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [8.0 3 93.0 3 9.0 2 81.0 12 84.0 13 11.0 2 4.0 1 40.0 2 16.0 3 95.0 2 102.0 2 80.0 2 23.0 2 61.0 3 92.0 11 93.0 13 70.0 2 9.0 2 72.0 3 103.0 12 68.0 3 75.0 3 22.0 2 59.0 13 87.0 3]
Total: 1576.0
Mean: 31.52
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3413.8482973
Median total errors in population: 1577.0
Error averages by case: (78.80711889999999 3.882 158.0214918 3.862 86.6793325 2.974 150.1071307 12.312 155.41295780000007 13.297 92.16867700000002 2.992 78.93743509999999 1.994 119.30045049999998 3.958 97.2221146 3.953 159.5595717 2.944 165.9816959 2.033 145.62370180000002 3.873 97.0211189 2.923 138.5129165 3.94 159.9282634 11.347 163.0513659 12.31 146.3712411 3.04 79.5565796 2.92 148.3204599 3.979 172.5058665 13.286 144.73132479999998 3.051 141.1505717 3.882 102.0526934 2.986 132.30149609999995 13.296 162.42672119999997 3.062)
Error minima by case: (4.0 2 9.0 1 5.0 2 48.2638 11 62.3576 10 11.0 2 4.0 1 40.0 2 16.0 2 7.0 1 0.0 0 22.0 2 23.0 2 61.0 3 10.7674 9 0.4652 8 70.0 2 5.0 1 72.0 2 38.1373 9 68.0 2 27.0 2 14.9427 2 24.7302 9 87.0 2)
Average genome size in population (length): 48.552
Average program size in population (points): 49.552
Average percent parens in population: 0.020
Minimum age in population: 9.515625
Maximum age in population: 14.0703125
Average age in population: 11.982890625
Median age in population: 12.01171875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.812
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.812
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12207436
--- Timings ---
Current time: 1529615819336 milliseconds
Total Time:          31.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.9 seconds, 38.5%
Fitness Testing:     15.5 seconds, 50.0%
Report:               3.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 55637.0
Test mean error for best: 27.81850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 93.5745600568 
Correct output: 176.4111721397 | Program output: 83.4111721397 
Correct output: -45.9855470137 | Program output: -54.9855470137
Correct output: -69.1842130959 | Program output: 11.8157869041 
Correct output: 63.2475025533  | Program output: -20.7524974467
Correct output: -51.2854080718 | Program output: -40.2854080718
Correct output: 32.2164394865  | Program output: 36.2164394865 
Correct output: -131.1081934444 | Program output: -91.1081934444
Correct output: -107.3871021605 | Program output: -91.3871021605
Correct output: 140.2562216458 | Program output: 45.2562216458 
Correct output: 144.5566127278 | Program output: 42.5566127278 
Correct output: 110.5504218952 | Program output: 30.5504218952 
Correct output: 69.5853323329  | Program output: 92.5853323329 
Correct output: -140.4218174569 | Program output: -79.4218174569
Correct output: -31.687897455  | Program output: 60.312102545  
Correct output: 0.6183065966   | Program output: -92.3816934034
Correct output: -102.4881805564 | Program output: -32.4881805564
Correct output: 66.1485036102  | Program output: 57.1485036102 
Correct output: -116.6399485427 | Program output: -44.6399485427
Correct output: 39.0797892898  | Program output: -63.9202107102
Correct output: -122.9843803096 | Program output: -54.9843803096
Correct output: 122.4357179134 | Program output: 47.4357179134 
Correct output: -35.8631971931 | Program output: -13.8631971931
Correct output: 25.5564259997  | Program output: -33.4435740003
Correct output: -165.0426482311 | Program output: -78.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction float_min} {:instruction float_min} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (integer_max float_yank float_mult float_min float_min tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [8.0 3 93.0 3 9.0 2 81.0 12 84.0 13 11.0 2 4.0 1 40.0 2 16.0 3 95.0 2 102.0 2 80.0 2 23.0 2 61.0 3 92.0 11 93.0 13 70.0 2 9.0 2 72.0 3 103.0 12 68.0 3 75.0 3 22.0 2 59.0 13 87.0 3]
Total: 1576.0
Mean: 31.52
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2855.9248261000007
Median total errors in population: 1577.0
Error averages by case: (58.69849100000001 3.72 139.0298481 3.694 62.13309019999999 2.763 128.59169599999998 12.242 131.73440410000003 13.238 67.29670569999999 2.778 57.220439299999995 1.806 95.67174059999998 3.699 72.99532629999999 3.746 140.3146594 2.763 146.9028891 1.909 125.6395768 3.645 75.7627588 2.758 115.35229979999997 3.719 139.29394539999996 11.27 140.2404617 12.322 122.83855539999999 2.821 59.053144200000006 2.753 125.14316710000001 3.765 149.87983190000003 13.182 121.62407639999998 2.884 121.40572289999997 3.71 76.8004133 2.789 108.27977959999998 13.251 139.906803 2.888)
Error minima by case: (4.0 2 8.0 2 5.0 2 35.448 10 10.625 9 11.0 2 4.0 1 40.0 2 16.0 2 6.0 1 1.0 1 21.0 2 7.0795 2 61.0 3 10.7674 10 3.704 6 70.0 2 5.0 1 72.0 2 2.92 9 68.0 2 26.0 2 14.9427 2 14.0333 8 87.0 2)
Average genome size in population (length): 48.759
Average program size in population (points): 49.759
Average percent parens in population: 0.020
Minimum age in population: 11.171875
Maximum age in population: 15.421875
Average age in population: 13.44636328125
Median age in population: 13.513671875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.822
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.822
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 13427111
--- Timings ---
Current time: 1529615822591 milliseconds
Total Time:          34.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.3 seconds, 38.7%
Fitness Testing:     17.1 seconds, 49.9%
Report:               3.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 55637.0
Test mean error for best: 27.81850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 93.5745600568 
Correct output: 176.4111721397 | Program output: 83.4111721397 
Correct output: -45.9855470137 | Program output: -54.9855470137
Correct output: -69.1842130959 | Program output: 11.8157869041 
Correct output: 63.2475025533  | Program output: -20.7524974467
Correct output: -51.2854080718 | Program output: -40.2854080718
Correct output: 32.2164394865  | Program output: 36.2164394865 
Correct output: -131.1081934444 | Program output: -91.1081934444
Correct output: -107.3871021605 | Program output: -91.3871021605
Correct output: 140.2562216458 | Program output: 45.2562216458 
Correct output: 144.5566127278 | Program output: 42.5566127278 
Correct output: 110.5504218952 | Program output: 30.5504218952 
Correct output: 69.5853323329  | Program output: 92.5853323329 
Correct output: -140.4218174569 | Program output: -79.4218174569
Correct output: -31.687897455  | Program output: 60.312102545  
Correct output: 0.6183065966   | Program output: -92.3816934034
Correct output: -102.4881805564 | Program output: -32.4881805564
Correct output: 66.1485036102  | Program output: 57.1485036102 
Correct output: -116.6399485427 | Program output: -44.6399485427
Correct output: 39.0797892898  | Program output: -63.9202107102
Correct output: -122.9843803096 | Program output: -54.9843803096
Correct output: 122.4357179134 | Program output: 47.4357179134 
Correct output: -35.8631971931 | Program output: -13.8631971931
Correct output: 25.5564259997  | Program output: -33.4435740003
Correct output: -165.0426482311 | Program output: -78.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_mult} {:instruction float_rot} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_div} {:instruction print_integer} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_dup_items} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction float_max} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_mult} {:instruction float_shove})
Best program: (float_max integer_mult float_rot float_frominteger float_dec integer_pop integer_div print_integer integer_dup_times integer_dup_items integer_rot integer_dup_items -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 float_max float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_shove float_mult float_shove)
Errors: [8.0 3 93.0 3 9.0 2 81.0 12 84.0 13 11.0 2 4.0 1 40.0 2 16.0 3 95.0 2 102.0 2 80.0 2 23.0 2 61.0 3 92.0 11 93.0 13 70.0 2 9.0 2 72.0 3 103.0 12 68.0 3 75.0 3 22.0 2 59.0 13 87.0 3]
Total: 1576.0
Mean: 31.52
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3413.2370099000013
Median total errors in population: 1577.0
Error averages by case: (83.2562551 3.992 161.36884180000004 3.974 85.50119220000002 3.07 150.06269759999998 12.274 153.44110250000003 13.222 89.47990300000002 3.084 80.63281499999997 2.115 117.3327015 3.761 95.2130736 4.047 162.5627023 3.073 168.96644849999996 2.499 148.26428219999997 3.652 98.6956953 3.042 136.49528769999995 4.027 160.1822833 11.306 161.27281259999998 12.557 143.63454250000004 3.153 83.55894090000002 3.042 145.92859280000005 4.085 170.97592500000005 12.919 142.53333179999996 3.473 144.17796959999998 3.981 98.64421189999999 3.093 130.45355469999996 13.236 160.44484649999998 3.48)
Error minima by case: (5.0 2 7.0 2 6.0 2 46.2638 9 62.1817 10 6.9205 2 4.0 1 22.0795 2 1.9205 2 5.0 1 0.0 0 20.0 1 5.0795 2 43.0795 3 8.7674 10 0.4066 8 52.0795 2 6.0 1 54.0795 2 38.7692 9 50.0795 2 25.0 2 4.0795 2 24.9349 10 69.0795 2)
Average genome size in population (length): 49.498
Average program size in population (points): 50.498
Average percent parens in population: 0.020
Minimum age in population: 12.171875
Maximum age in population: 16.810546875
Average age in population: 14.88792578125
Median age in population: 14.912109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.81
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.81
Total error diversity:				 0.034
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 14664961
--- Timings ---
Current time: 1529615825819 milliseconds
Total Time:          37.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.6 seconds, 38.9%
Fitness Testing:     18.7 seconds, 49.7%
Report:               4.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_min in2 tagged_697 float_frominteger float_yankdup float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_max -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3087.4866406000015
Median total errors in population: 1576.0
Error averages by case: (70.45353770000001 3.818 150.1564559 3.818 73.5615262 2.865 134.57595510000002 12.191 141.19417610000002 13.137 75.16017960000002 2.898 65.49868500000001 1.929 103.93421059999999 3.066 81.49501229999998 3.863 151.22173660000007 2.906 157.68070719999997 2.844 136.11708149999998 2.97 84.56942979999998 2.881 123.35142289999997 3.829 146.28438419999998 11.227 150.39427460000002 12.996 129.8900569 2.953 70.72520980000002 2.897 132.7261137 3.91 160.2838723 12.346 129.4305049 3.77 132.6087321 3.79 83.3845259 2.904 118.4104385 13.147 147.6324112 3.791)
Error minima by case: (5.0 2 7.0 2 6.0 1 46.2638 10 62.2475 10 9.0 1 2.0 1 38.0 2 14.0 2 5.0 1 2.0 1 20.0 1 21.0 2 59.0 2 8.7674 10 0.3817 10 68.0 2 6.0 1 70.0 2 38.0798 9 66.0 2 25.0 2 12.9427 1 24.5564 11 85.0 2)
Average genome size in population (length): 51.737
Average program size in population (points): 52.737
Average percent parens in population: 0.019
Minimum age in population: 14.10546875
Maximum age in population: 18.109375
Average age in population: 16.3258603515625
Median age in population: 16.38525390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.037
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 15958636
--- Timings ---
Current time: 1529615829121 milliseconds
Total Time:          40.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.9 seconds, 39.0%
Fitness Testing:     20.2 seconds, 49.6%
Report:               4.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_min in2 tagged_697 float_frominteger float_yankdup float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_inc -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3092.1629137000014
Median total errors in population: 1576.0
Error averages by case: (70.54326470000001 3.8 150.22790570000006 3.813 73.93404280000001 2.879 135.1444129 12.216 142.63800450000005 13.157 75.62931170000002 2.895 64.85207719999998 1.927 103.96395979999997 2.979 81.5530642 3.857 151.29583720000005 2.895 157.77799809999993 2.893 136.72214969999996 2.897 83.41769289999998 2.865 123.33064559999994 3.834 145.5277101 11.238 150.7049387 13.095 130.4093958 2.972 70.84629400000003 2.874 132.77673280000005 3.883 160.2994702 12.297 129.35402089999994 3.873 132.65524209999998 3.79 84.7672367 2.893 119.32496719999995 13.167 147.5995382 3.878)
Error minima by case: (5.0 2 8.0 2 6.0 1 15.8158 10 16.7525 8 9.0 1 2.0 1 38.0 2 14.0 2 6.0 1 1.0 1 21.0 2 21.0 2 59.0 2 8.7674 9 0.901 6 28.4882 2 6.0 1 40.6399 2 0.92 8 50.9844 2 26.0 2 9.8632 1 14.0333 9 74.0426 2)
Average genome size in population (length): 51.961
Average program size in population (points): 52.961
Average percent parens in population: 0.019
Minimum age in population: 15.10546875
Maximum age in population: 19.693359375
Average age in population: 17.86377294921875
Median age in population: 17.92822265625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.036
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 17257936
--- Timings ---
Current time: 1529615832428 milliseconds
Total Time:          44.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.2 seconds, 39.0%
Fitness Testing:     21.8 seconds, 49.5%
Report:               5.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_flush} {:instruction float_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup_items} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_mult} {:instruction float_shove})
Best program: (float_dec float_flush float_yank integer_inc float_dec float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_flush float_tan float_pop integer_dup_items float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_mod integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_dec float_mult float_shove)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2936.7291470000005
Median total errors in population: 1576.0
Error averages by case: (65.30651730000001 3.716 145.3967292 3.772 66.0656341 2.792 131.80589400000002 12.182 136.18332950000004 13.141 67.76385549999999 2.809 60.247210199999984 1.877 95.91107269999999 2.967 73.28292799999998 3.811 146.71305729999997 2.847 153.2783039 2.852 132.3296986 2.946 78.3812767 2.825 115.51355429999995 3.753 141.57150520000002 11.263 143.57357369999997 13.137 123.2048575 3.003 65.73999010000001 2.782 125.29763420000006 3.799 153.40824629999997 12.405 121.69861509999996 3.829 127.86038709999997 3.77 77.64565859999999 2.797 112.46314739999997 13.15 140.0224705 3.839)
Error minima by case: (6.0 2 91.0 2 7.0 1 44.2638 10 20.1095 10 7.0 1 0.0 0 36.0 2 12.0 2 93.0 2 100.0 1 67.4124 2 5.0795 2 57.0 2 6.7674 10 0.6183 9 66.0 2 7.0 1 68.0 2 4.0582 9 64.0 2 73.0 3 10.9427 1 17.5816 8 83.0 2)
Average genome size in population (length): 52.354
Average program size in population (points): 53.354
Average percent parens in population: 0.019
Minimum age in population: 16.55859375
Maximum age in population: 21.44970703125
Average age in population: 19.3641767578125
Median age in population: 19.4053955078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.034
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 18567011
--- Timings ---
Current time: 1529615835790 milliseconds
Total Time:          47.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        18.6 seconds, 39.2%
Fitness Testing:     23.4 seconds, 49.3%
Report:               5.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_dup} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_pop float_add integer_dup_times integer_rot float_dup float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_max -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3030.6215682000006
Median total errors in population: 1576.0
Error averages by case: (64.9813417 3.392 148.09773020000006 3.685 72.4955975 2.594 132.9694809 11.889 142.4317479 12.841 72.7534469 2.609 61.866634299999994 1.795 100.42100509999999 3.02 77.9717543 3.744 149.58834849999997 2.758 156.12737479999996 2.771 135.40145399999997 3.259 80.65392829999999 2.745 119.94848899999997 3.57 144.2265075 11.224 150.2297529 13.1 127.8566319 3.312 66.14719670000001 2.566 129.86210280000003 3.476 159.8458041 12.744 126.23179709999998 3.764 130.8901273 3.694 82.7702246 2.478 118.9357674 12.859 144.2693225 3.759)
Error minima by case: (5.0 1 5.0 2 6.0 1 15.8158 9 16.7525 10 1.7529 1 0.0 0 20.0795 2 1.9205 2 3.0 1 3.0 1 18.0 2 3.0795 2 41.0795 2 7.7674 6 0.6183 9 28.4882 2 6.0 1 40.6399 2 39.0798 11 48.0795 2 23.0 2 2.0795 1 25.5564 10 67.0795 2)
Average genome size in population (length): 53.024
Average program size in population (points): 54.024
Average percent parens in population: 0.019
Minimum age in population: 18.24609375
Maximum age in population: 22.967529296875
Average age in population: 20.86604528808594
Median age in population: 20.89019775390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.038
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 19892736
--- Timings ---
Current time: 1529615839108 milliseconds
Total Time:          50.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.9 seconds, 39.2%
Fitness Testing:     25.0 seconds, 49.3%
Report:               5.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_min in2 tagged_697 float_frominteger float_yankdup float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_max -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3024.921574400001
Median total errors in population: 1571.0
Error averages by case: (67.7959278 2.964 150.79966280000005 3.77 72.644693 2.758 130.8332261 11.362 141.10475260000004 12.309 70.58303829999998 2.78 61.49286429999998 1.884 99.07240999999999 3.052 76.6293643 3.845 151.9585624 2.864 158.6634194 2.893 137.05654949999996 3.789 81.036479 2.842 118.49322029999996 3.726 143.50296409999999 11.228 149.75396029999996 13.067 125.4102786 3.844 68.70524670000003 2.754 128.01490670000004 3.066 159.56560569999996 13.141 124.56493499999996 3.834 133.28250919999996 3.773 79.33930199999999 2.04 118.07704259999994 12.305 142.80365369999996 3.847)
Error minima by case: (4.0 2 6.0 1 5.0 1 13.1459 8 16.7525 9 4.0 1 0.0 0 20.0795 2 3.9205 2 4.0 1 3.0 1 19.0 2 3.0795 1 41.0795 2 6.7674 7 2.6183 10 28.4882 2 5.0 1 40.6399 2 41.0798 10 48.0795 2 24.0 2 2.0795 1 27.5564 10 67.0795 2)
Average genome size in population (length): 55.747
Average program size in population (points): 56.747
Average percent parens in population: 0.018
Minimum age in population: 19.24609375
Maximum age in population: 24.3841552734375
Average age in population: 22.29516088867188
Median age in population: 22.35357666015625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.697
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.697
Total error diversity:				 0.039
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 21286586
--- Timings ---
Current time: 1529615842513 milliseconds
Total Time:          54.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.3 seconds, 39.3%
Fitness Testing:     26.6 seconds, 49.2%
Report:               6.1 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_dup} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction tag_integer_754} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_min in2 tagged_697 float_frominteger float_yankdup float_div float_dup print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times tag_integer_754 integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_mult float_div float_inc integer_yankdup in1 integer_max -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3021.6062710000015
Median total errors in population: 1571.0
Error averages by case: (70.04379550000002 2.953 150.5889039 3.837 71.8940262 2.87 132.0112745 11.317 141.68374790000004 12.293 70.08012899999999 2.903 61.97856929999999 1.954 98.41351389999997 3.04 75.8903414 3.899 151.57680729999998 2.926 158.09489480000002 2.957 137.1822435 3.844 80.51992799999996 2.91 117.85862279999996 3.831 142.19625889999995 11.266 148.44088929999998 13.121 125.18294159999998 3.895 70.34992200000002 2.878 127.35936150000005 3.051 158.50984349999996 13.197 123.99662599999996 3.894 132.89125959999998 3.839 79.79740999999999 2.041 117.92409279999994 12.29 142.23686779999997 3.898)
Error minima by case: (5.0 1 5.0 1 2.1446 1 20.8243 9 61.3483 10 4.0 1 0.0 0 20.0795 2 3.9205 2 3.0 1 3.0 1 18.0 2 3.0795 1 41.0795 2 6.7674 8 1.7333 9 12.4797 2 6.0 1 26.6315 2 39.7891 10 32.9759 2 23.0 2 2.0795 1 24.522 9 67.0795 2)
Average genome size in population (length): 56.055
Average program size in population (points): 57.055
Average percent parens in population: 0.018
Minimum age in population: 21.399169921875
Maximum age in population: 25.934326171875
Average age in population: 23.76982205200195
Median age in population: 23.83859252929688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.04
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 22688211
--- Timings ---
Current time: 1529615845882 milliseconds
Total Time:          57.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.6 seconds, 39.2%
Fitness Testing:     28.3 seconds, 49.2%
Report:               6.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_rot} {:instruction float_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup_items} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_tan} {:instruction float_mod} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_inc} {:instruction float_flush} {:instruction print_float} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_dec} {:instruction float_mult} {:instruction float_shove})
Best program: (float_dec float_rot float_yank integer_inc float_dec float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_flush float_tan float_pop integer_dup_items float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_tan float_mod integer_yankdup in1 integer_inc float_flush print_float integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_dec float_mult float_shove)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3524.366888800001
Median total errors in population: 1571.0
Error averages by case: (88.71321499999998 3.167 168.06279560000007 4.053 94.55603230000004 3.07 148.94647789999993 11.358 161.85153440000005 12.278 92.68690400000001 3.101 81.08268339999998 2.172 120.62987839999997 3.261 98.68253990000002 4.112 168.9011777000001 3.154 175.21341179999996 3.175 154.49952709999997 4.042 99.7890979 3.111 139.56895039999998 4.05 159.91659129999996 11.291 169.45511830000007 13.07 146.3735993 4.117 88.9887102 3.072 148.74900550000004 3.259 178.97320130000008 13.151 145.38516419999996 4.091 150.6590112 4.028 101.56971170000001 2.268 138.97200169999996 12.26 163.3225483 4.107)
Error minima by case: (4.0 1 5.0 2 5.0 1 20.8158 9 11.7525 9 2.0 1 0.0 0 20.0795 2 3.9205 1 3.0 1 4.0 1 18.0 2 3.0795 1 41.0795 2 3.7674 8 0.5576 7 23.4882 2 5.0 1 35.6399 2 3.08 9 45.9844 3 23.0 2 2.0795 1 20.0333 9 67.0795 2)
Average genome size in population (length): 55.737
Average program size in population (points): 56.737
Average percent parens in population: 0.018
Minimum age in population: 22.437744140625
Maximum age in population: 27.18452453613281
Average age in population: 25.25664682006836
Median age in population: 25.27207183837891
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.046
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 24081761
--- Timings ---
Current time: 1529615849263 milliseconds
Total Time:          60.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.9 seconds, 39.2%
Fitness Testing:     30.0 seconds, 49.2%
Report:               6.9 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_yank} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_add} {:instruction float_flush} {:instruction float_tan} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction float_yankdup} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_yank float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_add float_flush float_tan float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_pop integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_max -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float float_yankdup integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3718.3929662000014
Median total errors in population: 1571.0
Error averages by case: (95.8501746 3.248 175.84049700000003 4.135 102.4921147 3.199 156.58159459999996 11.417 169.25870940000001 12.358 100.66942 3.217 89.28120779999999 2.277 128.20727449999998 3.355 106.44504140000001 4.207 176.71834020000003 3.237 182.97417599999997 3.252 162.43340689999994 4.13 108.07786129999998 3.197 146.983801 4.17 167.89029760000003 11.352 176.79612579999997 13.147 153.80813350000005 4.212 96.38192280000001 3.189 156.14501550000003 3.368 186.2361298 13.244 152.77052970000003 4.223 158.6304442 4.125 109.5888681 2.37 146.6188826 12.339 170.5369972 4.208)
Error minima by case: (5.0 1 5.0 1 5.8868 1 11.0383 8 16.7525 9 4.0 1 0.0 0 33.0 2 9.0 2 3.0 1 4.0 1 18.0 2 16.0 1 44.8697 2 6.7674 8 0.4157 7 6.936 2 6.0 1 21.0878 2 1.08 9 27.4322 3 23.0 2 4.2355 1 12.282 10 69.4905 2)
Average genome size in population (length): 55.684
Average program size in population (points): 56.684
Average percent parens in population: 0.018
Minimum age in population: 23.437744140625
Maximum age in population: 28.62762451171875
Average age in population: 26.7054627456665
Median age in population: 26.74058532714844
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.873
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.873
Total error diversity:				 0.044
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 25474136
--- Timings ---
Current time: 1529615852560 milliseconds
Total Time:          64.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.2 seconds, 39.2%
Fitness Testing:     31.6 seconds, 49.2%
Report:               7.3 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 55696.0
Test mean error for best: 27.84800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 91.5745600568 
Correct output: 176.4111721397 | Program output: 81.4111721397 
Correct output: -45.9855470137 | Program output: -56.9855470137
Correct output: -69.1842130959 | Program output: 9.8157869041  
Correct output: 63.2475025533  | Program output: -22.7524974467
Correct output: -51.2854080718 | Program output: -42.2854080718
Correct output: 32.2164394865  | Program output: 34.2164394865 
Correct output: -131.1081934444 | Program output: -93.1081934444
Correct output: -107.3871021605 | Program output: -93.3871021605
Correct output: 140.2562216458 | Program output: 43.2562216458 
Correct output: 144.5566127278 | Program output: 40.5566127278 
Correct output: 110.5504218952 | Program output: 28.5504218952 
Correct output: 69.5853323329  | Program output: 90.5853323329 
Correct output: -140.4218174569 | Program output: -81.4218174569
Correct output: -31.687897455  | Program output: 58.312102545  
Correct output: 0.6183065966   | Program output: -94.3816934034
Correct output: -102.4881805564 | Program output: -34.4881805564
Correct output: 66.1485036102  | Program output: 55.1485036102 
Correct output: -116.6399485427 | Program output: -46.6399485427
Correct output: 39.0797892898  | Program output: -65.9202107102
Correct output: -122.9843803096 | Program output: -56.9843803096
Correct output: 122.4357179134 | Program output: 45.4357179134 
Correct output: -35.8631971931 | Program output: -15.8631971931
Correct output: 25.5564259997  | Program output: -35.4435740003
Correct output: -165.0426482311 | Program output: -80.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_max} {:instruction float_dec} {:instruction float_flush} {:instruction float_yank} {:instruction integer_inc} {:instruction float_dec} {:instruction float_mult} {:instruction integer_sub} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction float_yank} {:instruction float_flush} {:instruction float_tan} {:instruction -25.603579931469284} {:instruction integer_dup} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction integer_yankdup} {:instruction in1} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_sub} {:instruction float_mult} {:instruction float_swap})
Best program: (integer_max float_dec float_flush float_yank integer_inc float_dec float_mult integer_sub print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times integer_rot integer_min float_yank float_flush float_tan -25.603579931469284 integer_dup float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc integer_yankdup in1 integer_max -18.920457116880883 integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_dec float_dec float_dec print_float integer_swap integer_flush integer_sub float_mult float_swap)
Errors: [10.0 2 95.0 3 11.0 2 79.0 11 86.0 12 9.0 2 2.0 1 38.0 2 14.0 3 97.0 2 104.0 2 82.0 3 21.0 2 59.0 3 90.0 11 95.0 13 68.0 3 11.0 2 70.0 2 105.0 13 66.0 3 77.0 3 20.0 1 61.0 12 85.0 3]
Total: 1571.0
Mean: 31.42
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3309.8385399000017
Median total errors in population: 1571.0
Error averages by case: (79.4678506 3.007 161.1176213 3.89 84.4949827 2.935 142.83739239999997 11.318 153.6123201 12.247 82.79154419999999 2.954 73.284489 2.002 110.47976739999999 3.109 88.26107089999999 3.963 162.24707839999996 2.986 168.69487079999996 3.014 148.0648704 3.899 91.91359440000001 2.935 129.71613369999994 3.903 153.4214155 11.245 160.5841051 13.063 137.2034404 3.96 80.19660050000003 2.923 139.27415660000003 3.111 170.3870999 13.146 135.75835349999997 3.956 143.7493309 3.883 92.5489027 2.104 130.22149659999997 12.239 153.76605189999998 3.952)
Error minima by case: (6.0 1 5.0 1 2.1446 1 22.5731 8 65.1928 9 4.0 1 0.0 0 33.0 2 9.0 2 3.0 1 4.0 1 18.0 2 16.0 1 48.6645 2 6.7674 8 0.6616 10 10.7309 2 7.0 1 24.8827 2 40.9657 10 31.2271 2 23.0 2 7.9777 1 27.4539 9 73.2854 2)
Average genome size in population (length): 55.843
Average program size in population (points): 56.843
Average percent parens in population: 0.018
Minimum age in population: 25.89048767089844
Maximum age in population: 30.04324722290039
Average age in population: 28.19699992752075
Median age in population: 28.24053955078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.878
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.878
Total error diversity:				 0.03
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 26870586
--- Timings ---
Current time: 1529615855968 milliseconds
Total Time:          67.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.5 seconds, 39.2%
Fitness Testing:     33.2 seconds, 49.2%
Report:               7.7 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 54348.7407
Test mean error for best: 27.17437
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_flush} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_flush float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [6.0 3 91.0 3 7.0 2 80.0 12 82.0 13 10.0 1 3.0 1 39.0 3 15.0 3 93.0 2 100.0 1 78.0 3 22.0 2 60.0 2 91.0 11 91.0 12 69.0 3 7.0 2 71.0 3 101.0 13 67.0 3 73.0 3 21.0 2 57.0 13 86.0 3]
Total: 1539.0
Mean: 30.78
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3316.5641850000015
Median total errors in population: 1571.0
Error averages by case: (81.8224646 3.012 162.07820690000003 3.91 84.51535530000002 2.95 141.51901210000003 11.345 152.14120910000003 12.292 82.44653480000002 2.964 74.1549347 2.032 110.65074209999999 3.102 88.45427729999999 3.974 163.16086480000004 3.0 169.48596379999998 3.015 148.3714155 3.926 93.13548359999999 2.975 129.84590749999998 3.921 154.40499319999998 11.277 160.6616497 13.113 136.66447159999998 3.98 82.32716160000001 2.955 139.25498410000003 3.111 170.28698310000001 13.2 135.82930699999997 3.976 144.7090537 3.91 91.1368368 2.111 129.3435341 12.277 153.865838 3.969)
Error minima by case: (5.0 2 87.4112 2 6.0 1 12.0441 9 16.7525 8 1.7529 1 0.0 0 35.0 2 11.0 2 49.2562 1 46.5566 1 34.5504 2 3.0795 1 56.0 2 6.7674 8 0.5576 6 28.4882 2 6.0 1 40.6399 2 2.92 10 50.9844 2 51.4357 2 9.8632 1 14.0333 9 74.0426 2)
Average genome size in population (length): 55.338
Average program size in population (points): 56.338
Average percent parens in population: 0.018
Minimum age in population: 27.19431686401367
Maximum age in population: 31.49922561645508
Average age in population: 29.6897466545105
Median age in population: 29.71133613586426
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.877
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.877
Total error diversity:				 0.042
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 28254561
--- Timings ---
Current time: 1529615859382 milliseconds
Total Time:          71.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.8 seconds, 39.2%
Fitness Testing:     34.9 seconds, 49.2%
Report:               8.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 54348.7407
Test mean error for best: 27.17437
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 95.5745600568 
Correct output: 176.4111721397 | Program output: 85.4111721397 
Correct output: -45.9855470137 | Program output: -52.9855470137
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: -18.7524974467
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 47.2562216458 
Correct output: 144.5566127278 | Program output: 44.5566127278 
Correct output: 110.5504218952 | Program output: 32.5504218952 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -90.3816934034
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 59.1485036102 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -61.9202107102
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 49.4357179134 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: -31.4435740003
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_flush} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_flush float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [6.0 3 91.0 3 7.0 2 80.0 12 82.0 13 10.0 1 3.0 1 39.0 3 15.0 3 93.0 2 100.0 1 78.0 3 22.0 2 60.0 2 91.0 11 91.0 12 69.0 3 7.0 2 71.0 3 101.0 13 67.0 3 73.0 3 21.0 2 57.0 13 86.0 3]
Total: 1539.0
Mean: 30.78
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3424.858395900001
Median total errors in population: 1571.0
Error averages by case: (85.4525837 3.097 166.74215660000004 3.984 88.54122660000003 3.023 147.53124309999998 11.341 156.35036340000005 12.247 86.78061480000001 3.042 78.96204769999999 2.101 114.87409950000001 3.213 92.750757 4.059 167.74707920000006 3.07 174.10159349999995 3.078 153.2680342 3.99 97.85289009999998 3.032 133.97196719999997 3.991 158.59967690000002 11.249 163.83323000000001 13.028 140.90464140000003 4.054 86.07917800000003 3.003 143.28177680000005 3.217 173.5646635 13.124 139.86120139999997 4.042 149.3383055 3.969 95.81248570000001 2.207 133.3051055 12.231 157.9084746 4.051)
Error minima by case: (5.0 2 90.0 1 6.0 1 31.0211 8 57.4725 8 4.0 1 1.0 1 33.0 2 9.0 2 92.0 2 99.0 1 77.0 2 3.0795 1 54.0 2 5.7674 8 0.1435 9 63.0 2 6.0 1 65.0 2 1.5069 9 61.0 2 72.0 3 9.9427 1 18.4602 9 80.0 2)
Average genome size in population (length): 55.168
Average program size in population (points): 56.168
Average percent parens in population: 0.018
Minimum age in population: 28.28509521484375
Maximum age in population: 33.37812423706055
Average age in population: 31.19471477794647
Median age in population: 31.22312784194946
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.041
Error (vector) diversity:			 0.046
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 29634211
--- Timings ---
Current time: 1529615862746 milliseconds
Total Time:          74.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.2 seconds, 39.2%
Fitness Testing:     36.6 seconds, 49.1%
Report:               8.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 53823.7407
Test mean error for best: 26.91187
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 96.5745600568 
Correct output: 176.4111721397 | Program output: 86.4111721397 
Correct output: -45.9855470137 | Program output: -51.9855470137
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: -17.7524974467
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 48.2562216458 
Correct output: 144.5566127278 | Program output: 45.5566127278 
Correct output: 110.5504218952 | Program output: 33.5504218952 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -89.3816934034
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 60.1485036102 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -60.9202107102
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 50.4357179134 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: -30.4435740003
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_flush} {:instruction float_yank} {:instruction integer_inc} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_dup} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_flush} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction float_inc} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_dec float_flush float_yank integer_inc float_frominteger float_mult float_dup print_integer float_min integer_dec float_dup_items integer_div float_dup_items float_frominteger print_integer float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_flush float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min float_inc -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [5.0 3 90.0 2 6.0 2 80.0 12 81.0 13 10.0 1 3.0 1 39.0 3 15.0 3 92.0 2 99.0 2 77.0 3 22.0 2 60.0 2 91.0 11 90.0 13 69.0 3 6.0 1 71.0 3 100.0 13 67.0 3 72.0 3 21.0 2 56.0 13 86.0 3]
Total: 1527.0
Mean: 30.54
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3311.2421310000013
Median total errors in population: 1571.0
Error averages by case: (79.05032949999999 3.063 161.13011069999996 3.895 84.48255640000002 2.945 142.55055029999994 11.367 153.32128200000002 12.299 82.99198999999999 2.949 73.53316549999998 2.047 110.88990179999998 3.183 88.69764969999999 3.991 162.21079670000003 2.99 168.64893269999996 2.963 148.02929229999998 3.904 92.41260679999996 2.978 130.05388519999997 3.886 153.42784799999998 11.246 160.3100898 13.025 137.29617080000003 3.98 79.85032550000003 2.925 139.43882280000008 3.195 170.0987951 13.15 136.11741719999998 3.983 143.7379007 3.887 92.6152609 2.179 129.97423469999995 12.292 154.0672159 3.983)
Error minima by case: (5.0 2 87.4112 1 6.0 1 12.0383 7 16.7525 8 4.0 1 1.0 1 20.0795 2 3.9205 2 49.2562 1 46.5566 1 34.5504 2 3.0795 1 41.0795 2 6.4475 7 0.5576 9 18.651 2 6.0 1 32.8028 2 37.3233 11 39.1472 2 51.4357 2 2.0795 1 24.522 9 67.0795 2)
Average genome size in population (length): 55.209
Average program size in population (points): 56.209
Average percent parens in population: 0.018
Minimum age in population: 29.96974182128906
Maximum age in population: 34.7422194480896
Average age in population: 32.68893383741379
Median age in population: 32.73103523254395
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.866
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.866
Total error diversity:				 0.047
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 31014986
--- Timings ---
Current time: 1529615866074 milliseconds
Total Time:          77.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.5 seconds, 39.2%
Fitness Testing:     38.2 seconds, 49.1%
Report:               9.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 53823.7407
Test mean error for best: 26.91187
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 96.5745600568 
Correct output: 176.4111721397 | Program output: 86.4111721397 
Correct output: -45.9855470137 | Program output: -51.9855470137
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: -17.7524974467
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 48.2562216458 
Correct output: 144.5566127278 | Program output: 45.5566127278 
Correct output: 110.5504218952 | Program output: 33.5504218952 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -89.3816934034
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 60.1485036102 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -60.9202107102
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 50.4357179134 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: -30.4435740003
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction float_flush} {:instruction float_yank} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_dup} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_flush} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction float_inc} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_dec float_flush float_yank float_yankdup float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_dup print_integer float_min integer_dec float_dup_items integer_div float_dup_items float_frominteger print_integer float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_flush float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min float_inc -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [5.0 3 90.0 2 6.0 2 80.0 12 81.0 13 10.0 1 3.0 1 39.0 3 15.0 3 92.0 2 99.0 2 77.0 3 22.0 2 60.0 2 91.0 11 90.0 13 69.0 3 6.0 1 71.0 3 100.0 13 67.0 3 72.0 3 21.0 2 56.0 13 86.0 3]
Total: 1527.0
Mean: 30.54
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3361.9927919000015
Median total errors in population: 1571.0
Error averages by case: (79.4590995 3.303 163.61597340000006 3.925 85.85498900000003 2.969 143.89985309999992 11.57 153.31539120000005 12.543 85.4360825 2.898 76.45932439999999 2.152 114.25800509999996 3.469 92.13922950000001 4.082 164.31471700000003 3.044 170.68444460000003 2.867 149.80950489999992 3.965 96.31029759999997 3.106 133.18465169999993 3.794 155.3749841 11.301 160.89119080000003 12.928 139.3832441 4.063 80.31246110000004 2.956 141.92036660000008 3.503 170.55771719999998 13.205 138.73253499999998 4.066 145.93192299999998 3.943 94.020162 2.485 130.25957889999995 12.527 157.12106560000004 4.082)
Error minima by case: (4.0 2 87.4112 2 5.0 1 15.8158 9 16.7525 9 6.0 1 0.0 0 35.0 2 11.0 2 49.2562 1 46.5566 1 34.5504 2 18.0 1 56.0 2 6.7674 10 0.6183 8 28.4882 2 5.0 1 40.6399 2 2.7844 9 50.9844 2 51.4357 2 9.8632 1 8.7155 8 74.0426 2)
Average genome size in population (length): 55.729
Average program size in population (points): 56.729
Average percent parens in population: 0.018
Minimum age in population: 30.96974182128906
Maximum age in population: 36.22244334220886
Average age in population: 34.22190746045113
Median age in population: 34.28002774715424
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.057
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 32408736
--- Timings ---
Current time: 1529615869533 milliseconds
Total Time:          81.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.8 seconds, 39.2%
Fitness Testing:     39.9 seconds, 49.1%
Report:               9.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 59986.21400000001
Test mean error for best: 29.99311
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 70.9588545265 
Correct output: 176.4111721397 | Program output: 87.0          
Correct output: -45.9855470137 | Program output: 70.9588545265 
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: 70.9588545265 
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 89.0          
Correct output: 144.5566127278 | Program output: 96.0          
Correct output: 110.5504218952 | Program output: 70.9588545265 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: 87.0          
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 70.9588545265 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: 97.0          
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 70.9588545265 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: 70.9588545265 
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_65} {:instruction float_yank} {:instruction integer_max} {:instruction integer_flush} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_tan} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (tag_integer_65 float_yank integer_max integer_flush in2 tagged_697 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 89 -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_tan float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [30.6157 10 89.4112 12 116.9444 10 80.0 12 7.7114 11 10.0 1 3.0 1 39.0 3 15.0 3 51.2562 13 48.5566 13 39.5916 11 22.0 2 60.0 2 91.0 11 86.3817 11 69.0 3 4.8104 11 71.0 3 57.9202 11 67.0 3 51.4769 13 21.0 2 45.4024 11 86.0 3]
Total: 1450.0787
Mean: 29.001574
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3334.8073204
Median total errors in population: 1539.0
Error averages by case: (76.6494323 3.772 162.34497980000003 3.879 82.8780787 2.92 146.36619159999998 12.052 151.34603350000006 13.031 84.739339 2.394 76.45905929999999 2.086 112.76618339999996 3.816 90.57227139999998 4.015 163.09768160000004 3.016 169.3125422 2.412 148.74353299999999 3.921 96.11901289999999 3.044 131.89681449999992 3.292 156.1053465 11.306 158.99136579999998 12.536 139.0040055 3.971 77.82786370000002 2.961 141.16796900000003 3.9 168.38334849999995 13.222 137.73945699999993 4.006 144.55652890000002 3.922 94.20523549999999 2.881 128.2322305 13.015 155.9108163 4.022)
Error minima by case: (4.0 2 75.0795 2 5.0 1 14.0383 10 7.7114 9 2.7652 1 0.0 0 35.0 2 11.0 2 51.2562 2 48.5566 1 36.5504 2 18.0 2 56.0 2 6.7674 10 1.704 8 27.4882 2 4.8104 1 39.6399 2 40.8519 9 49.9844 2 51.4769 3 8.8632 1 24.4436 8 73.0426 2)
Average genome size in population (length): 57.079
Average program size in population (points): 58.079
Average percent parens in population: 0.017
Minimum age in population: 31.96974182128906
Maximum age in population: 37.76191174983978
Average age in population: 35.66035719788074
Median age in population: 35.71995365619659
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.076
Error (vector) diversity:			 0.083
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 33835911
--- Timings ---
Current time: 1529615873039 milliseconds
Total Time:          84.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.1 seconds, 39.1%
Fitness Testing:     41.6 seconds, 49.1%
Report:               9.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 58976.174499999994
Test mean error for best: 29.48809
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 70.9588545265 
Correct output: 176.4111721397 | Program output: 137.4495144985
Correct output: -45.9855470137 | Program output: 70.9588545265 
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: 70.9588545265 
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 99.2945640046 
Correct output: 144.5566127278 | Program output: 96.5949550866 
Correct output: 110.5504218952 | Program output: 70.9588545265 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -38.3433510447
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 70.9588545265 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -9.8818683514 
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 70.9588545265 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: 70.9588545265 
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_65} {:instruction float_yank} {:instruction integer_max} {:instruction float_min} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_mult} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_506} {:instruction in1} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_sub} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_add} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (tag_integer_65 float_yank integer_max float_min float_dup_items float_dup_items float_mult print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_506 in1 89 -52.038342358729636 float_stackdepth integer_pop float_sub integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_add float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [30.6157 10 38.9617 11 116.9444 10 80.0 12 7.7114 11 10.0 1 3.0 1 39.0 3 15.0 3 40.9617 11 47.9617 12 39.5916 11 22.0 2 60.0 2 91.0 11 38.9617 12 69.0 3 4.8104 11 71.0 3 48.9617 11 67.0 3 51.4769 13 21.0 2 45.4024 11 86.0 3]
Total: 1329.3613
Mean: 26.587227
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3366.6966866
Median total errors in population: 1539.0
Error averages by case: (76.25634260000002 4.029 160.99721560000006 3.944 86.43516089999999 3.0 147.5559425 12.186 152.5224749 13.099 88.01260220000002 2.142 76.63877489999996 2.009 116.12281549999997 3.956 94.0023458 3.929 161.27416060000004 3.115 167.5332989 2.388 146.9386525 3.999 96.27510449999998 2.972 135.16928499999995 3.027 156.7268731 11.23 160.84283639999998 12.287 142.2000754 3.914 76.74503370000004 3.016 144.37217370000005 3.995 169.93191859999996 13.119 140.96347279999992 3.926 143.0779594 4.036 97.4721783 2.966 130.2099422 13.102 159.10404660000003 3.93)
Error minima by case: (4.0 2 38.9617 2 5.0 1 16.8158 10 7.7114 10 5.0 1 0.0 0 34.0 2 10.0 2 40.9617 2 47.9617 1 21.3509 2 1.5775 1 55.0 2 7.7674 10 1.704 9 64.0 2 4.8104 1 66.0 2 40.8519 9 62.0 2 33.2362 3 11.9427 1 25.4436 10 81.0 2)
Average genome size in population (length): 57.819
Average program size in population (points): 58.819
Average percent parens in population: 0.017
Minimum age in population: 34.54995107650757
Maximum age in population: 39.07382816076279
Average age in population: 37.14477253991365
Median age in population: 37.19342848658562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 70
Genome diversity (% unique Plush genomes):	 0.743
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 70
Syntactic diversity (% unique Push programs):	 0.743
Total error diversity:				 0.084
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 35281536
--- Timings ---
Current time: 1529615876543 milliseconds
Total Time:          88.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.5 seconds, 39.1%
Fitness Testing:     43.3 seconds, 49.1%
Report:              10.3 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 54117.72319999995
Test mean error for best: 27.05886
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 120.2869369915
Correct output: 176.4111721397 | Program output: 110.8346256044
Correct output: -45.9855470137 | Program output: -1.0196134014 
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: -1.0596925923 
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 79.6010946455 
Correct output: 144.5566127278 | Program output: 78.1151517811 
Correct output: 110.5504218952 | Program output: 76.5850827211 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -1.0113145603 
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 87.9944068684 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -1.0166888599 
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 80.9477829521 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: -1.0339632682 
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_dup} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_dec} {:instruction print_integer} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_flush} {:instruction integer_shove} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction float_inc} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction float_div} {:instruction float_dup_times} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max integer_mult integer_inc float_frominteger float_mult float_dup print_integer float_min integer_dec float_dup_items integer_div float_dup_items integer_dec print_integer float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_flush integer_shove float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min float_inc -18.920457116880883 in1 float_div float_inc in2 in1 integer_max float_min float_div float_dup_times in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [18.7124 12 65.5765 12 44.9659 10 80.0 12 64.3072 9 10.0 1 3.0 1 39.0 3 15.0 3 60.6551 10 66.4415 11 33.9653 10 22.0 2 60.0 2 91.0 11 1.6296 9 69.0 3 21.8459 11 71.0 3 40.0965 9 67.0 3 41.4879 11 21.0 2 26.5904 12 86.0 3]
Total: 1295.2742
Mean: 25.905483
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3430.0493129
Median total errors in population: 1539.0
Error averages by case: (87.39270050000002 4.625 164.7168724000001 4.489 93.03622159999993 3.725 148.76058259999994 12.099 149.17770630000007 12.857 89.6906239 2.383 80.1565735 2.168 118.20907769999997 4.136 96.1678417 4.129 162.36779240000018 3.978 168.01252520000006 3.534 148.1360617999999 4.674 99.08501599999998 3.124 137.12070149999997 3.252 158.489361 11.214 161.81596389999987 12.326 143.53738090000002 4.113 84.97898170000006 3.527 146.02181260000006 4.155 168.62227469999974 12.886 142.75491399999996 4.103 145.5462017 4.818 98.3911884 3.124 130.45977000000005 12.88 160.97116690000001 4.111)
Error minima by case: (3.0 2 5.5888 2 2.0528 1 17.8158 10 7.7114 9 3.0 1 0.0 0 21.0795 2 2.9205 2 40.9617 1 47.9617 1 33.9653 2 0.3735 1 42.0795 2 7.7674 10 0.1694 8 26.4882 2 4.0 1 38.6399 2 6.8819 9 48.9844 2 23.5643 2 3.0795 1 5.7155 10 68.0795 2)
Average genome size in population (length): 58.929
Average program size in population (points): 59.929
Average percent parens in population: 0.017
Minimum age in population: 36.29798316955566
Maximum age in population: 40.6510868370533
Average age in population: 38.72265309792757
Median age in population: 38.78349658846855
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.105
Error (vector) diversity:			 0.114
Behavioral diversity:				 0.114
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 36754811
--- Timings ---
Current time: 1529615880138 milliseconds
Total Time:          91.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.9 seconds, 39.1%
Fitness Testing:     45.0 seconds, 49.1%
Report:              10.7 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 54117.72319999995
Test mean error for best: 27.05886
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 120.2869369915
Correct output: 176.4111721397 | Program output: 110.8346256044
Correct output: -45.9855470137 | Program output: -1.0196134014 
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: -1.0596925923 
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 79.6010946455 
Correct output: 144.5566127278 | Program output: 78.1151517811 
Correct output: 110.5504218952 | Program output: 76.5850827211 
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -1.0113145603 
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 87.9944068684 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: -1.0166888599 
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 80.9477829521 
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: -1.0339632682 
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_65} {:instruction float_yank} {:instruction integer_max} {:instruction integer_add} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction integer_div} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_inc} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_sin} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_flush} {:instruction integer_shove} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction float_inc} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction float_div} {:instruction float_dup_times} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (tag_integer_65 float_yank integer_max integer_add in2 tagged_697 float_frominteger float_yankdup float_div float_rot print_integer integer_mod integer_dec float_dup_items integer_div float_dup_items float_dup_items integer_div print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_inc -52.038342358729636 float_stackdepth integer_pop float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_544 in1 float_sin -52.038342358729636 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_flush integer_shove float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min float_inc -18.920457116880883 in1 float_div float_inc in2 in1 integer_max float_min float_div float_dup_times in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [18.7124 12 65.5765 12 44.9659 10 80.0 12 64.3072 9 10.0 1 3.0 1 39.0 3 15.0 3 60.6551 10 66.4415 11 33.9653 10 22.0 2 60.0 2 91.0 11 1.6296 9 69.0 3 21.8459 11 71.0 3 40.0965 9 67.0 3 41.4879 11 21.0 2 26.5904 12 86.0 3]
Total: 1295.2742
Mean: 25.905483
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3131.0023737999995
Median total errors in population: 1527.0
Error averages by case: (88.47455510000013 6.477 156.57091720000057 6.449 96.6664788999996 5.748 137.35685139999993 12.08 120.94968510000024 12.398 76.92366890000001 2.448 68.64297219999997 2.126 106.29725499999995 4.081 84.00899940000001 4.086 145.36165970000076 6.436 149.0488370000001 6.346 128.57746239999946 6.616 88.04847989999998 3.091 125.31227819999988 3.271 146.67028499999998 11.214 148.66843739999962 12.191 131.2947702 4.068 78.59558650000018 5.554 133.93310610000012 4.105 148.20523209999897 12.432 130.74639369999989 4.051 130.46386179999988 7.107 85.4981571 3.069 113.20884960000018 12.528 149.43259390000003 4.073)
Error minima by case: (3.0 2 9.5888 2 3.7122 1 11.1459 10 3.7114 9 2.7652 1 0.0 0 17.0795 2 2.9205 2 40.9617 1 44.6239 1 20.6115 2 0.0795 1 38.0795 2 6.7674 10 0.9325 9 26.4882 2 0.8104 1 38.6399 2 5.8819 9 45.0795 2 27.5643 2 0.9205 1 20.4436 10 64.0795 2)
Average genome size in population (length): 60.103
Average program size in population (points): 61.103
Average percent parens in population: 0.017
Minimum age in population: 38.2629142999649
Maximum age in population: 42.07774269580841
Average age in population: 40.26243440850079
Median age in population: 40.31111947447062
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.725
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.725
Total error diversity:				 0.147
Error (vector) diversity:			 0.161
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 38257486
--- Timings ---
Current time: 1529615883736 milliseconds
Total Time:          95.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.3 seconds, 39.1%
Fitness Testing:     46.7 seconds, 49.0%
Report:              11.2 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 28282.740700000002
Test mean error for best: 14.14137
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 99.5745600568 
Correct output: 176.4111721397 | Program output: 174.4111721397
Correct output: -45.9855470137 | Program output: -47.9855470137
Correct output: -69.1842130959 | Program output: 10.8157869041 
Correct output: 63.2475025533  | Program output: 61.2475025533 
Correct output: -51.2854080718 | Program output: -41.2854080718
Correct output: 32.2164394865  | Program output: 35.2164394865 
Correct output: -131.1081934444 | Program output: -92.1081934444
Correct output: -107.3871021605 | Program output: -92.3871021605
Correct output: 140.2562216458 | Program output: 138.2562216458
Correct output: 144.5566127278 | Program output: 142.5566127278
Correct output: 110.5504218952 | Program output: 108.5504218952
Correct output: 69.5853323329  | Program output: 91.5853323329 
Correct output: -140.4218174569 | Program output: -80.4218174569
Correct output: -31.687897455  | Program output: 59.312102545  
Correct output: 0.6183065966   | Program output: -1.3816934034 
Correct output: -102.4881805564 | Program output: -33.4881805564
Correct output: 66.1485036102  | Program output: 64.1485036102 
Correct output: -116.6399485427 | Program output: -45.6399485427
Correct output: 39.0797892898  | Program output: 37.0797892898 
Correct output: -122.9843803096 | Program output: -55.9843803096
Correct output: 122.4357179134 | Program output: 120.4357179134
Correct output: -35.8631971931 | Program output: -14.8631971931
Correct output: 25.5564259997  | Program output: 23.5564259997 
Correct output: -165.0426482311 | Program output: -79.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_rot} {:instruction print_integer} {:instruction tagged_701} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [2.0 3 2.0 1 2.0 1 80.0 12 2.0 1 10.0 1 3.0 1 39.0 3 15.0 3 2.0 2 2.0 1 2.0 2 22.0 2 60.0 2 91.0 11 2.0 12 69.0 3 2.0 1 71.0 3 2.0 1 67.0 3 2.0 1 21.0 2 2.0 1 86.0 3]
Total: 734.0
Mean: 14.68
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3178.193658199992
Median total errors in population: 1480.4167
Error averages by case: (102.54554289999955 9.132 156.08921000000095 9.966 138.32204539999836 8.729 138.0290632 12.111 97.72309510000026 11.651 81.26246429999996 2.759 73.97114779999994 2.533 111.33035500000003 4.366 89.62038169999998 4.343 131.7434495000016 10.274 131.59441199999944 10.238 115.48087409999927 9.599 94.03592050000006 3.496 129.71131959999994 3.611 149.31832619999997 11.26 147.78737909999907 11.395 133.8674116000001 4.348 84.28070810000051 9.121 137.2163896 4.433 134.5855683999979 11.642 134.50864009999998 4.349 122.88057779999897 10.72 87.96274250000005 3.4 111.24860350000117 11.861 153.38603020000002 4.355)
Error minima by case: (2.0 2 2.0 1 2.0 1 12.882 10 0.7114 1 2.7529 1 0.0 0 2.0 1 2.0 1 2.0 2 2.0 1 2.0 2 0.3735 1 2.0 1 3.2326 7 0.3817 7 17.9617 2 0.1896 1 13.3984 2 2.0 1 3.054 2 2.0 1 0.9427 1 2.0 1 2.0 1)
Average genome size in population (length): 59.28
Average program size in population (points): 60.28
Average percent parens in population: 0.017
Minimum age in population: 39.3356622159481
Maximum age in population: 43.38566183298826
Average age in population: 41.63840898353606
Median age in population: 41.66893303766847
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.189
Error (vector) diversity:			 0.194
Behavioral diversity:				 0.194
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 39739636
--- Timings ---
Current time: 1529615887169 milliseconds
Total Time:          98.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.6 seconds, 39.1%
Fitness Testing:     48.4 seconds, 49.0%
Report:              11.7 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 9781.069399999998
Test mean error for best: 4.89053
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 99.5745600568 
Correct output: 176.4111721397 | Program output: 174.4111721397
Correct output: -45.9855470137 | Program output: -47.9855470137
Correct output: -69.1842130959 | Program output: -71.1842130959
Correct output: 63.2475025533  | Program output: 61.2475025533 
Correct output: -51.2854080718 | Program output: -53.2854080718
Correct output: 32.2164394865  | Program output: 30.2164394865 
Correct output: -131.1081934444 | Program output: -98.0383423587
Correct output: -107.3871021605 | Program output: -74.0383423587
Correct output: 140.2562216458 | Program output: 138.2562216458
Correct output: 144.5566127278 | Program output: 142.5566127278
Correct output: 110.5504218952 | Program output: 108.5504218952
Correct output: 69.5853323329  | Program output: 67.5853323329 
Correct output: -140.4218174569 | Program output: -119.0383423587
Correct output: -31.687897455  | Program output: -33.687897455 
Correct output: 0.6183065966   | Program output: 34.9616576413 
Correct output: -102.4881805564 | Program output: -104.4881805564
Correct output: 66.1485036102  | Program output: 64.1485036102 
Correct output: -116.6399485427 | Program output: -118.6399485427
Correct output: 39.0797892898  | Program output: 44.9616576413 
Correct output: -122.9843803096 | Program output: -124.9843803096
Correct output: 122.4357179134 | Program output: 120.4357179134
Correct output: -35.8631971931 | Program output: -37.8631971931
Correct output: 25.5564259997  | Program output: 23.5564259997 
Correct output: -165.0426482311 | Program output: -145.0383423587
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction tag_integer_65} {:instruction float_yank} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_mult} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_506} {:instruction in1} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction float_max} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_add} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min tag_integer_65 float_yank integer_max float_min in2 tagged_697 float_frominteger float_yankdup float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items float_dup_items float_mult print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_506 in1 89 -52.038342358729636 float_stackdepth float_max float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_add float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [2.0 3 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 33.0699 12 33.3488 11 2.0 2 2.0 1 2.0 2 2.0 1 21.3835 11 2.0 1 34.3434 10 2.0 1 2.0 1 2.0 1 5.8819 12 2.0 1 2.0 1 2.0 1 2.0 1 20.0043 8]
Total: 274.0318
Mean: 5.480636
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3455.0187097999865
Median total errors in population: 1450.0787
Error averages by case: (107.6880209999993 9.618 163.41442590000082 10.667 156.4263245999993 9.392 151.68112370000006 12.07 106.73950430000015 11.078 95.84729899999996 2.832 86.09376979999996 2.737 124.07573080000003 4.515 102.79136030000001 4.501 140.39891700000163 11.03 140.83178369999993 11.192 124.91028419999937 10.274 103.81800110000006 3.597 142.3564658 3.744 161.01311950000022 11.189 148.29598239999933 11.122 147.96742100000012 4.473 93.71784090000054 9.847 150.5815001000002 4.589 139.05287539999824 11.127 147.53329979999998 4.473 133.9559943999987 11.545 103.62678230000006 3.531 121.24402770000127 11.492 165.81385510000007 4.508)
Error minima by case: (2.0 2 2.0 1 2.0 1 2.0 2 0.7114 1 1.5603 1 0.0 0 10.0383 2 2.9205 2 2.0 1 2.0 1 2.0 2 0.3735 1 8.9617 2 2.0 1 0.6183 8 2.0 1 0.1896 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 14.9574 2)
Average genome size in population (length): 60.856
Average program size in population (points): 61.856
Average percent parens in population: 0.017
Minimum age in population: 40.3356622159481
Maximum age in population: 45.00294844061136
Average age in population: 43.09572069217265
Median age in population: 43.15548010356724
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.719
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.719
Total error diversity:				 0.2
Error (vector) diversity:			 0.207
Behavioral diversity:				 0.207
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 41261336
--- Timings ---
Current time: 1529615890734 milliseconds
Total Time:         102.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.9 seconds, 39.1%
Fitness Testing:     50.1 seconds, 49.0%
Report:              12.1 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 9781.069399999998
Test mean error for best: 4.89053
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 99.5745600568 
Correct output: 176.4111721397 | Program output: 174.4111721397
Correct output: -45.9855470137 | Program output: -47.9855470137
Correct output: -69.1842130959 | Program output: -71.1842130959
Correct output: 63.2475025533  | Program output: 61.2475025533 
Correct output: -51.2854080718 | Program output: -53.2854080718
Correct output: 32.2164394865  | Program output: 30.2164394865 
Correct output: -131.1081934444 | Program output: -98.0383423587
Correct output: -107.3871021605 | Program output: -74.0383423587
Correct output: 140.2562216458 | Program output: 138.2562216458
Correct output: 144.5566127278 | Program output: 142.5566127278
Correct output: 110.5504218952 | Program output: 108.5504218952
Correct output: 69.5853323329  | Program output: 67.5853323329 
Correct output: -140.4218174569 | Program output: -119.0383423587
Correct output: -31.687897455  | Program output: -33.687897455 
Correct output: 0.6183065966   | Program output: 34.9616576413 
Correct output: -102.4881805564 | Program output: -104.4881805564
Correct output: 66.1485036102  | Program output: 64.1485036102 
Correct output: -116.6399485427 | Program output: -118.6399485427
Correct output: 39.0797892898  | Program output: 44.9616576413 
Correct output: -122.9843803096 | Program output: -124.9843803096
Correct output: 122.4357179134 | Program output: 120.4357179134
Correct output: -35.8631971931 | Program output: -37.8631971931
Correct output: 25.5564259997  | Program output: 23.5564259997 
Correct output: -165.0426482311 | Program output: -145.0383423587
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction tag_integer_65} {:instruction float_yank} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_mult} {:instruction print_integer} {:instruction float_min} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_506} {:instruction in1} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction float_max} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction integer_min} {:instruction float_dup_times} {:instruction float_add} {:instruction float_add} {:instruction float_swap} {:instruction float_add} {:instruction tagged_172} {:instruction integer_shove} {:instruction integer_stackdepth} {:instruction float_pop} {:instruction float_div} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min tag_integer_65 float_yank integer_max float_min in2 tagged_697 float_frominteger float_yankdup float_div float_rot print_integer float_min integer_dec float_dup_items integer_div float_dup_items float_dup_items float_mult print_integer float_min integer_dec float_dup_items integer_div float_dup_items tag_integer_506 in1 89 -52.038342358729636 float_stackdepth float_max float_add integer_dup_times 72.95885452648344 integer_min float_dup_times float_add float_add float_swap float_add tagged_172 integer_shove integer_stackdepth float_pop float_div float_inc in2 in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [2.0 3 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 33.0699 12 33.3488 11 2.0 2 2.0 1 2.0 2 2.0 1 21.3835 11 2.0 1 34.3434 10 2.0 1 2.0 1 2.0 1 5.8819 12 2.0 1 2.0 1 2.0 1 2.0 1 20.0043 8]
Total: 274.0318
Mean: 5.480636
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3750.4595333999982
Median total errors in population: 1329.3613
Error averages by case: (119.85446609999983 9.705 166.65330939999996 10.201 148.7138497999995 8.824 165.97640660000005 12.169 138.13543749999994 10.236 110.5858143 2.972 101.87415699999998 2.924 137.04677250000003 4.646 116.59039909999997 4.643 155.26428940000147 9.654 158.6309507000002 10.036 138.92136190000002 9.565 119.22845190000004 3.764 154.9945354 3.857 175.9681124000001 11.321 134.58165519999991 10.894 161.07991920000012 4.619 112.9247751000003 9.374 163.51005500000005 4.728 147.09651680000007 10.301 160.41862240000006 4.633 146.08557789999927 10.358 118.38267150000004 3.686 130.7349668000007 11.408 178.0404595000001 4.648)
Error minima by case: (1.0 1 1.0 1 1.0 1 2.0 2 0.7114 1 2.0 1 0.0 0 9.0383 2 1.9205 2 0.7821 1 1.0 1 1.0 2 1.3735 1 8.9617 2 2.0 1 0.3704 8 2.0 1 0.1896 1 2.0 1 1.0 1 2.0 1 1.0 1 2.0 1 1.0 1 20.0043 2)
Average genome size in population (length): 68.453
Average program size in population (points): 69.453
Average percent parens in population: 0.015
Minimum age in population: 42.36721571162343
Maximum age in population: 46.67600002512336
Average age in population: 44.6585361468792
Median age in population: 44.72881119232625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.772
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.772
Total error diversity:				 0.238
Error (vector) diversity:			 0.25
Behavioral diversity:				 0.251
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 42972936
--- Timings ---
Current time: 1529615894451 milliseconds
Total Time:         106.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.3 seconds, 38.9%
Fitness Testing:     52.0 seconds, 49.1%
Report:              12.6 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 3337.0
Test mean error for best: 1.66850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 99.5745600568 
Correct output: 176.4111721397 | Program output: 174.4111721397
Correct output: -45.9855470137 | Program output: -47.9855470137
Correct output: -69.1842130959 | Program output: -71.1842130959
Correct output: 63.2475025533  | Program output: 61.2475025533 
Correct output: -51.2854080718 | Program output: -53.2854080718
Correct output: 32.2164394865  | Program output: 30.2164394865 
Correct output: -131.1081934444 | Program output: -133.1081934444
Correct output: -107.3871021605 | Program output: -109.3871021605
Correct output: 140.2562216458 | Program output: 138.2562216458
Correct output: 144.5566127278 | Program output: 142.5566127278
Correct output: 110.5504218952 | Program output: 108.5504218952
Correct output: 69.5853323329  | Program output: 67.5853323329 
Correct output: -140.4218174569 | Program output: -142.4218174569
Correct output: -31.687897455  | Program output: -33.687897455 
Correct output: 0.6183065966   | Program output: -1.3816934034 
Correct output: -102.4881805564 | Program output: -104.4881805564
Correct output: 66.1485036102  | Program output: 64.1485036102 
Correct output: -116.6399485427 | Program output: -118.6399485427
Correct output: 39.0797892898  | Program output: 37.0797892898 
Correct output: -122.9843803096 | Program output: -124.9843803096
Correct output: 122.4357179134 | Program output: 120.4357179134
Correct output: -35.8631971931 | Program output: -37.8631971931
Correct output: 25.5564259997  | Program output: 23.5564259997 
Correct output: -165.0426482311 | Program output: -167.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_rot} {:instruction print_integer} {:instruction tagged_701} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add 89 -52.038342358729636 float_stackdepth integer_pop in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap integer_flush float_mult float_swap)
Errors: [2.0 3 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 12 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 91.0
Mean: 1.82
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3665.350377499995
Median total errors in population: 1295.2742
Error averages by case: (120.15104590000037 8.55 156.70175139999927 8.331 129.151332399999 7.082 162.98577120000022 12.046 142.49483809999978 8.217 112.94969470000004 2.969 102.24961819999999 2.864 138.39827899999992 4.733 119.01859850000007 4.748 149.0241638000012 7.788 151.89612879999993 7.869 134.3578263999993 7.778 119.79391989999999 3.711 155.5509984000001 3.85 174.12511110000025 11.179 124.72438349999996 10.881 161.42141350000026 4.639 114.27833890000002 7.433 163.84619840000028 4.673 139.31288439999992 8.307 160.7097987000002 4.617 138.9064547999989 7.967 120.5508756 3.699 126.28397870000029 9.397 178.49097320000027 4.648)
Error minima by case: (1.0 1 1.0 1 1.0 1 2.0 2 1.0 1 0.7652 1 0.0 0 2.0 1 0.6896 1 1.0 2 1.0 1 1.0 2 0.3735 1 2.0 1 2.0 1 0.4156 3 2.0 1 0.8104 1 2.0 1 1.0 1 2.0 1 0.0411 1 2.0 1 1.0 1 2.0 1)
Average genome size in population (length): 68.839
Average program size in population (points): 69.839
Average percent parens in population: 0.015
Minimum age in population: 43.36721571162343
Maximum age in population: 47.84351541846991
Average age in population: 46.07284942909051
Median age in population: 46.144998957403
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.771
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.771
Total error diversity:				 0.211
Error (vector) diversity:			 0.219
Behavioral diversity:				 0.22
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 44694386
--- Timings ---
Current time: 1529615898086 milliseconds
Total Time:         109.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.6 seconds, 38.8%
Fitness Testing:     53.9 seconds, 49.1%
Report:              13.1 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 3337.0
Test mean error for best: 1.66850
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 99.5745600568 
Correct output: 176.4111721397 | Program output: 174.4111721397
Correct output: -45.9855470137 | Program output: -47.9855470137
Correct output: -69.1842130959 | Program output: -71.1842130959
Correct output: 63.2475025533  | Program output: 61.2475025533 
Correct output: -51.2854080718 | Program output: -53.2854080718
Correct output: 32.2164394865  | Program output: 30.2164394865 
Correct output: -131.1081934444 | Program output: -133.1081934444
Correct output: -107.3871021605 | Program output: -109.3871021605
Correct output: 140.2562216458 | Program output: 138.2562216458
Correct output: 144.5566127278 | Program output: 142.5566127278
Correct output: 110.5504218952 | Program output: 108.5504218952
Correct output: 69.5853323329  | Program output: 67.5853323329 
Correct output: -140.4218174569 | Program output: -142.4218174569
Correct output: -31.687897455  | Program output: -33.687897455 
Correct output: 0.6183065966   | Program output: -1.3816934034 
Correct output: -102.4881805564 | Program output: -104.4881805564
Correct output: 66.1485036102  | Program output: 64.1485036102 
Correct output: -116.6399485427 | Program output: -118.6399485427
Correct output: 39.0797892898  | Program output: 37.0797892898 
Correct output: -122.9843803096 | Program output: -124.9843803096
Correct output: 122.4357179134 | Program output: 120.4357179134
Correct output: -35.8631971931 | Program output: -37.8631971931
Correct output: 25.5564259997  | Program output: 23.5564259997 
Correct output: -165.0426482311 | Program output: -167.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_rot} {:instruction print_integer} {:instruction tagged_701} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add 89 -52.038342358729636 float_stackdepth integer_pop in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank float_dec float_dec print_float integer_swap float_yank integer_dup_items float_swap)
Errors: [2.0 3 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 12 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 91.0
Mean: 1.82
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2891.4110243999967
Median total errors in population: 734.0
Error averages by case: (84.51636290000002 5.152 107.4347975 3.983 88.73619850000001 3.463 144.7363879000001 11.623 97.43627260000002 4.861 90.8121993 2.406 78.7695228 2.252 119.53325750000005 4.43 99.2374879000001 4.434 104.24389660000026 4.334 105.5525726000001 3.729 99.3052837999999 4.374 98.4298273 3.214 136.69442899999996 3.666 154.70468980000004 10.671 100.04736119999986 11.802 142.08706999999998 3.971 80.98439210000005 3.496 144.40789000000004 4.093 101.63600299999973 5.292 141.27877599999994 4.025 100.24271499999985 3.87 97.449505 3.135 92.35750159999999 5.094 159.10462450000003 4.302)
Error minima by case: (1.0 1 0.4112 1 1.0 1 2.0 2 1.0 1 2.0 1 0.0 0 2.0 1 1.9205 1 1.0 2 1.0 1 1.0 1 0.3735 1 2.0 1 2.0 1 0.3817 8 2.0 1 1.0 1 2.0 1 1.0 1 2.0 1 1.0 1 2.0 1 1.0 1 2.0 1)
Average genome size in population (length): 56.299
Average program size in population (points): 57.299
Average percent parens in population: 0.018
Minimum age in population: 44.93713273108006
Maximum age in population: 49.65048038214445
Average age in population: 47.55722986493679
Median age in population: 47.61470517399721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.69
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.69
Total error diversity:				 0.178
Error (vector) diversity:			 0.184
Behavioral diversity:				 0.185
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 46102111
--- Timings ---
Current time: 1529615901520 milliseconds
Total Time:         113.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.0 seconds, 38.8%
Fitness Testing:     55.6 seconds, 49.2%
Report:              13.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 2174.0
Test mean error for best: 1.08700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 100.5745600568
Correct output: 176.4111721397 | Program output: 175.4111721397
Correct output: -45.9855470137 | Program output: -46.9855470137
Correct output: -69.1842130959 | Program output: -70.1842130959
Correct output: 63.2475025533  | Program output: 62.2475025533 
Correct output: -51.2854080718 | Program output: -52.2854080718
Correct output: 32.2164394865  | Program output: 31.2164394865 
Correct output: -131.1081934444 | Program output: -132.1081934444
Correct output: -107.3871021605 | Program output: -108.3871021605
Correct output: 140.2562216458 | Program output: 139.2562216458
Correct output: 144.5566127278 | Program output: 143.5566127278
Correct output: 110.5504218952 | Program output: 109.5504218952
Correct output: 69.5853323329  | Program output: 68.5853323329 
Correct output: -140.4218174569 | Program output: -141.4218174569
Correct output: -31.687897455  | Program output: -32.687897455 
Correct output: 0.6183065966   | Program output: -0.3816934034 
Correct output: -102.4881805564 | Program output: -103.4881805564
Correct output: 66.1485036102  | Program output: 65.1485036102 
Correct output: -116.6399485427 | Program output: -117.6399485427
Correct output: 39.0797892898  | Program output: 38.0797892898 
Correct output: -122.9843803096 | Program output: -123.9843803096
Correct output: 122.4357179134 | Program output: 121.4357179134
Correct output: -35.8631971931 | Program output: -36.8631971931
Correct output: 25.5564259997  | Program output: 24.5564259997 
Correct output: -165.0426482311 | Program output: -166.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_rot} {:instruction print_integer} {:instruction tagged_701} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction 89} {:instruction -52.038342358729636} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction in1} {:instruction integer_max} {:instruction float_min} {:instruction integer_max} {:instruction -18.920457116880883} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction integer_dec} {:instruction float_dec} {:instruction print_float} {:instruction integer_swap} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add 89 -52.038342358729636 float_stackdepth integer_pop in1 integer_max float_min integer_max -18.920457116880883 in1 float_dec float_dec float_dec float_yank integer_dec float_dec print_float integer_swap float_yank integer_dup_items float_swap)
Errors: [1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 2 1.0 1 1.0 2 1.0 1 1.0 1 1.0 1 1.0 11 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 63.0
Mean: 1.26
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2649.8962223999984
Median total errors in population: 734.0
Error averages by case: (73.53478270000004 4.153 92.88163010000002 2.914 82.43769939999996 2.637 130.2708492 9.939 87.35592810000003 3.923 87.5514277 2.535 78.7545988 2.261 114.9447430000002 5.227 98.31703200000042 5.221 90.98329440000003 3.403 91.8743233 2.606 88.15251409999996 3.611 94.02509170000005 3.024 127.27789579999977 4.759 138.9798402 8.978 97.6601156999998 11.598 128.12558909999998 3.481 72.41695370000002 2.666 130.38169310000006 3.762 92.4335322999996 5.576 128.17893109999997 3.691 88.47230849999998 2.973 93.34047939999998 3.003 85.7725232 3.933 145.10044580000005 4.798)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 55.996
Average program size in population (points): 56.996
Average percent parens in population: 0.018
Minimum age in population: 45.93713273108006
Maximum age in population: 51.03672457160428
Average age in population: 48.83491826624493
Median age in population: 48.84980661130976
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.146
Error (vector) diversity:			 0.157
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 47502161
--- Timings ---
Current time: 1529615904966 milliseconds
Total Time:         116.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.3 seconds, 38.8%
Fitness Testing:     57.4 seconds, 49.2%
Report:              13.9 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 101.5745600568
Correct output: 176.4111721397 | Program output: 176.4111721397
Correct output: -45.9855470137 | Program output: -45.9855470137
Correct output: -69.1842130959 | Program output: -69.1842130959
Correct output: 63.2475025533  | Program output: 63.2475025533 
Correct output: -51.2854080718 | Program output: -51.2854080718
Correct output: 32.2164394865  | Program output: 32.2164394865 
Correct output: -131.1081934444 | Program output: -131.1081934444
Correct output: -107.3871021605 | Program output: -107.3871021605
Correct output: 140.2562216458 | Program output: 140.2562216458
Correct output: 144.5566127278 | Program output: 144.5566127278
Correct output: 110.5504218952 | Program output: 110.5504218952
Correct output: 69.5853323329  | Program output: 69.5853323329 
Correct output: -140.4218174569 | Program output: -140.4218174569
Correct output: -31.687897455  | Program output: -31.687897455 
Correct output: 0.6183065966   | Program output: 0.6183065966  
Correct output: -102.4881805564 | Program output: -102.4881805564
Correct output: 66.1485036102  | Program output: 66.1485036102 
Correct output: -116.6399485427 | Program output: -116.6399485427
Correct output: 39.0797892898  | Program output: 39.0797892898 
Correct output: -122.9843803096 | Program output: -122.9843803096
Correct output: 122.4357179134 | Program output: 122.4357179134
Correct output: -35.8631971931 | Program output: -35.8631971931
Correct output: 25.5564259997  | Program output: 25.5564259997 
Correct output: -165.0426482311 | Program output: -165.0426482311
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yankdup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_max} {:instruction float_min} {:instruction in2} {:instruction tagged_697} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_rot} {:instruction print_integer} {:instruction tagged_701} {:instruction float_frominteger} {:instruction float_yankdup} {:instruction float_div} {:instruction float_rot} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_544} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_pop} {:instruction float_add} {:instruction integer_dup_times} {:instruction 72.95885452648344} {:instruction in2} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_dup_items} {:instruction tag_integer_506} {:instruction in1} {:instruction 89} {:instruction in1} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction float_yank} {:instruction float_dec} {:instruction float_inc} {:instruction print_float} {:instruction integer_swap} {:instruction integer_flush} {:instruction float_mult} {:instruction float_swap})
Best program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 in2 float_dup_items integer_div float_dup_items tag_integer_506 in1 89 in1 float_dec float_dec float_dec float_yank float_dec float_inc print_float integer_swap integer_flush float_mult float_swap)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2951.101775199999
Median total errors in population: 274.0318
Error averages by case: (91.5793619 4.618 113.33634170000006 3.216 101.57161859999982 3.206 124.97631469999997 6.678 106.52495130000004 4.653 102.0338157 3.037 95.99477810000002 2.851 126.86655850000035 6.623 118.02861230000092 6.447 111.08365940000006 3.737 112.04052510000002 3.021 108.1938782999999 4.118 108.77032490000002 3.176 130.14378029999955 6.256 128.08733429999998 5.714 121.05328229999968 11.251 124.69178710000006 3.38 89.21472660000006 3.244 126.16426460000007 3.65 112.40960689999929 7.613 125.45851509999994 3.496 108.84011009999998 3.689 103.12750870000008 3.167 105.0905971000001 4.616 138.77252160000015 5.59)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 58.033
Average program size in population (points): 59.033
Average percent parens in population: 0.017
Minimum age in population: 47.79557207250036
Maximum age in population: 52.35983767011203
Average age in population: 50.21657603161375
Median age in population: 50.23720183654223
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.163
Error (vector) diversity:			 0.17
Behavioral diversity:				 0.171
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 48953186
--- Timings ---
Current time: 1529615908501 milliseconds
Total Time:         120.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.6 seconds, 38.8%
Fitness Testing:     59.2 seconds, 49.2%
Report:              14.2 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 34
Successful program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 in2 float_dup_items integer_div float_dup_items tag_integer_506 in1 89 in1 float_dec float_dec float_dec float_yank float_dec float_inc print_float integer_swap integer_flush float_mult float_swap)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 48


Auto-simplifying with starting size: 48
step: 0
program: (float_yankdup integer_dup_times float_yankdup integer_max float_min in2 tagged_697 float_frominteger print_integer float_rot print_integer tagged_701 float_frominteger float_yankdup float_div float_rot float_dup_items integer_div float_dup_items integer_div float_dup_items tag_integer_544 in1 float_stackdepth integer_pop float_add integer_dup_times 72.95885452648344 in2 float_dup_items integer_div float_dup_items tag_integer_506 in1 89 in1 float_dec float_dec float_dec float_yank float_dec float_inc print_float integer_swap integer_flush float_mult float_swap)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 48

step: 500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 float_frominteger in1 float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 101.5745600568 | Program output: 101.5745600568
Correct output: 176.4111721397 | Program output: 176.4111721397
Correct output: -45.9855470137 | Program output: -45.9855470137
Correct output: -69.1842130959 | Program output: -69.1842130959
Correct output: 63.2475025533  | Program output: 63.2475025533 
Correct output: -51.2854080718 | Program output: -51.2854080718
Correct output: 32.2164394865  | Program output: 32.2164394865 
Correct output: -131.1081934444 | Program output: -131.1081934444
Correct output: -107.3871021605 | Program output: -107.3871021605
Correct output: 140.2562216458 | Program output: 140.2562216458
Correct output: 144.5566127278 | Program output: 144.5566127278
Correct output: 110.5504218952 | Program output: 110.5504218952
Correct output: 69.5853323329  | Program output: 69.5853323329 
Correct output: -140.4218174569 | Program output: -140.4218174569
Correct output: -31.687897455  | Program output: -31.687897455 
Correct output: 0.6183065966   | Program output: 0.6183065966  
Correct output: -102.4881805564 | Program output: -102.4881805564
Correct output: 66.1485036102  | Program output: 66.1485036102 
Correct output: -116.6399485427 | Program output: -116.6399485427
Correct output: 39.0797892898  | Program output: 39.0797892898 
Correct output: -122.9843803096 | Program output: -122.9843803096
Correct output: 122.4357179134 | Program output: 122.4357179134
Correct output: -35.8631971931 | Program output: -35.8631971931
Correct output: 25.5564259997  | Program output: 25.5564259997 
Correct output: -165.0426482311 | Program output: -165.0426482311
;;******************************
