Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-1.1639405106353564 52] 50.836059489364644]
Train Case:   1 | Input/Output: [[-46.40909748161137 41] -5.409097481611369]
Train Case:   2 | Input/Output: [[-98.21276804213235 71] -27.212768042132353]
Train Case:   3 | Input/Output: [[96.72887138875782 26] 122.72887138875782]
Train Case:   4 | Input/Output: [[15.69138939464159 79] 94.69138939464159]
Train Case:   5 | Input/Output: [[-30.91570860165274 16] -14.915708601652739]
Train Case:   6 | Input/Output: [[-45.81570074333696 55] 9.184299256663039]
Train Case:   7 | Input/Output: [[99.18443738981054 -72] 27.18443738981054]
Train Case:   8 | Input/Output: [[37.22108236017954 -70] -32.77891763982046]
Train Case:   9 | Input/Output: [[96.95351264733321 -78] 18.953512647333213]
Train Case:  10 | Input/Output: [[-25.3355427006734 8] -17.3355427006734]
Train Case:  11 | Input/Output: [[29.093115781342163 -49] -19.906884218657837]
Train Case:  12 | Input/Output: [[-1.534263954583892 -81] -82.53426395458389]
Train Case:  13 | Input/Output: [[11.492854698350214 -12] -0.5071453016497856]
Train Case:  14 | Input/Output: [[19.998685091646877 -85] -65.00131490835312]
Train Case:  15 | Input/Output: [[-97.88517407402924 12] -85.88517407402924]
Train Case:  16 | Input/Output: [[35.95721931114301 91] 126.957219311143]
Train Case:  17 | Input/Output: [[22.488981933392594 -64] -41.511018066607406]
Train Case:  18 | Input/Output: [[73.99328866284387 -93] -19.006711337156133]
Train Case:  19 | Input/Output: [[-30.15826813172528 84] 53.84173186827472]
Train Case:  20 | Input/Output: [[99.54035999840778 13] 112.54035999840778]
Train Case:  21 | Input/Output: [[47.01181019359447 70] 117.01181019359447]
Train Case:  22 | Input/Output: [[46.29293809255523 -21] 25.292938092555232]
Train Case:  23 | Input/Output: [[-70.12854235600477 -49] -119.12854235600477]
Train Case:  24 | Input/Output: [[-6.2036675785197986 86] 79.7963324214802]
Test Case:   0 | Input/Output: [[-66.51029580271242 90] 23.48970419728758]
Test Case:   1 | Input/Output: [[14.949939835153444 -81] -66.05006016484656]
Test Case:   2 | Input/Output: [[59.23575620196354 -52] 7.2357562019635395]
Test Case:   3 | Input/Output: [[2.399889694910769 -58] -55.60011030508923]
Test Case:   4 | Input/Output: [[-71.4090750544857 50] -21.409075054485697]
Test Case:   5 | Input/Output: [[-64.126732407437 53] -11.126732407437004]
Test Case:   6 | Input/Output: [[-20.525537389108692 -49] -69.52553738910869]
Test Case:   7 | Input/Output: [[84.49270388295682 56] 140.49270388295682]
Test Case:   8 | Input/Output: [[-78.16000497988284 11] -67.16000497988284]
Test Case:   9 | Input/Output: [[21.302206259426754 9] 30.302206259426754]
Test Case:  10 | Input/Output: [[-32.077120141284695 96] 63.922879858715305]
Test Case:  11 | Input/Output: [[12.18541158106163 44] 56.18541158106163]
Test Case:  12 | Input/Output: [[-36.878146230918205 8] -28.878146230918205]
Test Case:  13 | Input/Output: [[-95.26683806988763 10] -85.26683806988763]
Test Case:  14 | Input/Output: [[-99.00961003394269 -30] -129.0096100339427]
Test Case:  15 | Input/Output: [[35.790242228037016 46] 81.79024222803702]
Test Case:  16 | Input/Output: [[-57.81668589230484 -48] -105.81668589230483]
Test Case:  17 | Input/Output: [[91.574403720046 -26] 65.574403720046]
Test Case:  18 | Input/Output: [[98.26761706157583 51] 149.26761706157583]
Test Case:  19 | Input/Output: [[64.4104834902943 -34] 30.410483490294297]
Test Case:  20 | Input/Output: [[91.1931542177625 -20] 71.1931542177625]
Test Case:  21 | Input/Output: [[-29.10546201855246 -68] -97.10546201855246]
Test Case:  22 | Input/Output: [[58.04639396288928 -35] 23.046393962889283]
Test Case:  23 | Input/Output: [[43.240134960434546 -98] -54.759865039565454]
Test Case:  24 | Input/Output: [[-6.543778897477324 -13] -19.543778897477324]
Test Case:  25 | Input/Output: [[-96.65421727976407 87] -9.654217279764069]
Test Case:  26 | Input/Output: [[17.32888400607959 48] 65.32888400607959]
Test Case:  27 | Input/Output: [[-56.485881558035224 56] -0.48588155803522426]
Test Case:  28 | Input/Output: [[93.57496725046494 61] 154.57496725046494]
Test Case:  29 | Input/Output: [[13.05282782438357 -17] -3.94717217561643]
Test Case:  30 | Input/Output: [[-14.365179844421363 -88] -102.36517984442136]
Test Case:  31 | Input/Output: [[-7.243563826564369 -97] -104.24356382656437]
Test Case:  32 | Input/Output: [[-63.701291457475115 -92] -155.70129145747512]
Test Case:  33 | Input/Output: [[6.912241227862765 -35] -28.087758772137235]
Test Case:  34 | Input/Output: [[-35.40985357477615 -23] -58.40985357477615]
Test Case:  35 | Input/Output: [[-90.44095764970344 -7] -97.44095764970344]
Test Case:  36 | Input/Output: [[-41.167866863754824 -5] -46.167866863754824]
Test Case:  37 | Input/Output: [[86.78294915101779 -94] -7.217050848982211]
Test Case:  38 | Input/Output: [[-59.59424712701389 4] -55.59424712701389]
Test Case:  39 | Input/Output: [[22.893999209705058 -13] 9.893999209705058]
Test Case:  40 | Input/Output: [[-76.36896530892673 1] -75.36896530892673]
Test Case:  41 | Input/Output: [[31.107163136118686 -61] -29.892836863881314]
Test Case:  42 | Input/Output: [[43.34041482209821 31] 74.34041482209821]
Test Case:  43 | Input/Output: [[83.23317776289232 29] 112.23317776289232]
Test Case:  44 | Input/Output: [[59.674993873002165 -79] -19.325006126997835]
Test Case:  45 | Input/Output: [[-8.670727177589171 -4] -12.670727177589171]
Test Case:  46 | Input/Output: [[85.01007922240731 -67] 18.010079222407313]
Test Case:  47 | Input/Output: [[67.09311331128839 97] 164.0931133112884]
Test Case:  48 | Input/Output: [[-39.806401863794335 42] 2.193598136205665]
Test Case:  49 | Input/Output: [[98.39494615187246 -68] 30.39494615187246]
Test Case:  50 | Input/Output: [[-24.391283056380857 -30] -54.39128305638086]
Test Case:  51 | Input/Output: [[-66.72988957838963 73] 6.270110421610369]
Test Case:  52 | Input/Output: [[42.58610667123699 11] 53.58610667123699]
Test Case:  53 | Input/Output: [[-98.94510381833499 69] -29.945103818334985]
Test Case:  54 | Input/Output: [[41.81342871158503 16] 57.81342871158503]
Test Case:  55 | Input/Output: [[69.47431773503229 33] 102.47431773503229]
Test Case:  56 | Input/Output: [[64.2904650630743 66] 130.2904650630743]
Test Case:  57 | Input/Output: [[62.537808704533035 15] 77.53780870453303]
Test Case:  58 | Input/Output: [[49.444778785163095 -89] -39.555221214836905]
Test Case:  59 | Input/Output: [[-55.05123732468478 38] -17.051237324684777]
Test Case:  60 | Input/Output: [[15.815095292524632 57] 72.81509529252463]
Test Case:  61 | Input/Output: [[-70.19317881146941 96] 25.80682118853059]
Test Case:  62 | Input/Output: [[25.118201111800047 45] 70.11820111180005]
Test Case:  63 | Input/Output: [[-20.19802211264266 84] 63.80197788735734]
Test Case:  64 | Input/Output: [[-72.46079569587533 84] 11.539204304124667]
Test Case:  65 | Input/Output: [[-58.71682408875651 32] -26.71682408875651]
Test Case:  66 | Input/Output: [[84.4044327224664 35] 119.4044327224664]
Test Case:  67 | Input/Output: [[-36.184923992012806 -94] -130.1849239920128]
Test Case:  68 | Input/Output: [[64.69306649332063 31] 95.69306649332063]
Test Case:  69 | Input/Output: [[57.57488104954592 49] 106.57488104954592]
Test Case:  70 | Input/Output: [[-99.71399630785123 4] -95.71399630785123]
Test Case:  71 | Input/Output: [[-55.23694187817376 -25] -80.23694187817375]
Test Case:  72 | Input/Output: [[-25.13808271970028 64] 38.86191728029972]
Test Case:  73 | Input/Output: [[92.29034796233361 72] 164.2903479623336]
Test Case:  74 | Input/Output: [[-78.94660007272087 64] -14.94660007272087]
Test Case:  75 | Input/Output: [[-55.425890712585414 66] 10.574109287414586]
Test Case:  76 | Input/Output: [[72.37783078477332 -92] -19.622169215226677]
Test Case:  77 | Input/Output: [[-61.26736753572286 -90] -151.26736753572285]
Test Case:  78 | Input/Output: [[-88.85434445137486 93] 4.145655548625143]
Test Case:  79 | Input/Output: [[-92.50541530627312 -85] -177.5054153062731]
Test Case:  80 | Input/Output: [[-15.102695650166538 -98] -113.10269565016654]
Test Case:  81 | Input/Output: [[29.076893985332987 1] 30.076893985332987]
Test Case:  82 | Input/Output: [[-55.98251176020865 -4] -59.98251176020865]
Test Case:  83 | Input/Output: [[-5.901664899231378 27] 21.098335100768622]
Test Case:  84 | Input/Output: [[54.36656150279205 77] 131.36656150279205]
Test Case:  85 | Input/Output: [[-66.88343102784393 65] -1.8834310278439261]
Test Case:  86 | Input/Output: [[14.569281866417768 -93] -78.43071813358223]
Test Case:  87 | Input/Output: [[-39.710496061581125 -44] -83.71049606158113]
Test Case:  88 | Input/Output: [[45.68861541153481 46] 91.68861541153481]
Test Case:  89 | Input/Output: [[29.722101929893228 45] 74.72210192989323]
Test Case:  90 | Input/Output: [[-56.46141569839151 20] -36.46141569839151]
Test Case:  91 | Input/Output: [[-72.84010140994219 92] 19.159898590057807]
Test Case:  92 | Input/Output: [[2.273378323995928 24] 26.273378323995928]
Test Case:  93 | Input/Output: [[-29.72081130158881 32] 2.2791886984111898]
Test Case:  94 | Input/Output: [[11.333101565443442 100] 111.33310156544344]
Test Case:  95 | Input/Output: [[97.06335441350635 87] 184.06335441350635]
Test Case:  96 | Input/Output: [[-91.32813278995718 -86] -177.32813278995718]
Test Case:  97 | Input/Output: [[87.06061861456081 -8] 79.06061861456081]
Test Case:  98 | Input/Output: [[-17.879717240503922 -82] -99.87971724050392]
Test Case:  99 | Input/Output: [[48.94806153198928 51] 99.94806153198928]
Test Case: 100 | Input/Output: [[-25.870633768702092 -55] -80.87063376870209]
Test Case: 101 | Input/Output: [[49.53852573730009 71] 120.53852573730009]
Test Case: 102 | Input/Output: [[0.7944283351158532 15] 15.794428335115853]
Test Case: 103 | Input/Output: [[84.02281549261929 41] 125.02281549261929]
Test Case: 104 | Input/Output: [[23.283573303819878 -33] -9.716426696180122]
Test Case: 105 | Input/Output: [[45.67700909318111 78] 123.67700909318111]
Test Case: 106 | Input/Output: [[25.59909003243075 91] 116.59909003243075]
Test Case: 107 | Input/Output: [[-9.579316708655014 18] 8.420683291344986]
Test Case: 108 | Input/Output: [[71.57389850193022 87] 158.57389850193022]
Test Case: 109 | Input/Output: [[-77.67339215555216 4] -73.67339215555216]
Test Case: 110 | Input/Output: [[-34.66243771466591 -84] -118.66243771466591]
Test Case: 111 | Input/Output: [[88.12467656851751 -54] 34.124676568517515]
Test Case: 112 | Input/Output: [[11.072663273019572 -30] -18.92733672698043]
Test Case: 113 | Input/Output: [[-11.388516889488102 -44] -55.3885168894881]
Test Case: 114 | Input/Output: [[-1.8683100349469157 18] 16.131689965053084]
Test Case: 115 | Input/Output: [[71.48846751202376 -79] -7.51153248797624]
Test Case: 116 | Input/Output: [[-49.96622248872693 62] 12.033777511273072]
Test Case: 117 | Input/Output: [[79.98597154999698 56] 135.98597154999698]
Test Case: 118 | Input/Output: [[59.74192675605559 -3] 56.74192675605559]
Test Case: 119 | Input/Output: [[-9.032361161418194 -86] -95.0323611614182]
Test Case: 120 | Input/Output: [[-8.679904457483659 -55] -63.67990445748366]
Test Case: 121 | Input/Output: [[-77.44082638968823 36] -41.440826389688226]
Test Case: 122 | Input/Output: [[70.40528583171883 14] 84.40528583171883]
Test Case: 123 | Input/Output: [[87.57755740208773 90] 177.57755740208773]
Test Case: 124 | Input/Output: [[84.51093469213197 17] 101.51093469213197]
Test Case: 125 | Input/Output: [[99.14732715842396 -73] 26.147327158423963]
Test Case: 126 | Input/Output: [[-39.95704782165761 -86] -125.95704782165761]
Test Case: 127 | Input/Output: [[14.776599969711526 46] 60.776599969711526]
Test Case: 128 | Input/Output: [[-7.654193250739709 -22] -29.65419325073971]
Test Case: 129 | Input/Output: [[74.22728676213526 83] 157.22728676213526]
Test Case: 130 | Input/Output: [[-42.01856150659666 58] 15.981438493403338]
Test Case: 131 | Input/Output: [[0.008377626933153692 86] 86.00837762693315]
Test Case: 132 | Input/Output: [[-60.22775847844839 58] -2.2277584784483935]
Test Case: 133 | Input/Output: [[-89.68283468699437 71] -18.68283468699437]
Test Case: 134 | Input/Output: [[24.67265413844784 12] 36.67265413844784]
Test Case: 135 | Input/Output: [[-54.88539562879318 40] -14.885395628793177]
Test Case: 136 | Input/Output: [[29.54886267153202 -71] -41.45113732846798]
Test Case: 137 | Input/Output: [[-44.28127920035916 39] -5.281279200359158]
Test Case: 138 | Input/Output: [[-95.55280831413214 -34] -129.55280831413214]
Test Case: 139 | Input/Output: [[93.94068570792706 -64] 29.94068570792706]
Test Case: 140 | Input/Output: [[18.567237086814316 2] 20.567237086814316]
Test Case: 141 | Input/Output: [[72.88486218058955 -43] 29.88486218058955]
Test Case: 142 | Input/Output: [[-58.95724000015004 -57] -115.95724000015004]
Test Case: 143 | Input/Output: [[-83.54724764479926 5] -78.54724764479926]
Test Case: 144 | Input/Output: [[-12.883391923468722 31] 18.11660807653128]
Test Case: 145 | Input/Output: [[-70.37253934006735 -11] -81.37253934006735]
Test Case: 146 | Input/Output: [[-26.71485403174809 89] 62.28514596825191]
Test Case: 147 | Input/Output: [[-66.35950768841477 -67] -133.35950768841477]
Test Case: 148 | Input/Output: [[63.13910036064766 -53] 10.13910036064766]
Test Case: 149 | Input/Output: [[-4.5086392517818865 35] 30.491360748218113]
Test Case: 150 | Input/Output: [[49.557907768908905 63] 112.5579077689089]
Test Case: 151 | Input/Output: [[-94.47627300385409 58] -36.47627300385409]
Test Case: 152 | Input/Output: [[-7.976373188295497 -71] -78.9763731882955]
Test Case: 153 | Input/Output: [[-87.3168086343182 -29] -116.3168086343182]
Test Case: 154 | Input/Output: [[81.13200513744724 -65] 16.132005137447237]
Test Case: 155 | Input/Output: [[5.027969165299282 73] 78.02796916529928]
Test Case: 156 | Input/Output: [[31.916356616017026 -33] -1.0836433839829738]
Test Case: 157 | Input/Output: [[1.9913041995547616 11] 12.991304199554762]
Test Case: 158 | Input/Output: [[-43.714937125373865 21] -22.714937125373865]
Test Case: 159 | Input/Output: [[78.1422961044988 56] 134.1422961044988]
Test Case: 160 | Input/Output: [[-77.95506125467433 58] -19.955061254674334]
Test Case: 161 | Input/Output: [[27.267950884448027 -16] 11.267950884448027]
Test Case: 162 | Input/Output: [[-39.92895604354092 -83] -122.92895604354092]
Test Case: 163 | Input/Output: [[33.859325577275854 90] 123.85932557727585]
Test Case: 164 | Input/Output: [[33.27440855799321 -80] -46.72559144200679]
Test Case: 165 | Input/Output: [[-99.10341982418063 -55] -154.10341982418063]
Test Case: 166 | Input/Output: [[-28.407000503029934 -55] -83.40700050302993]
Test Case: 167 | Input/Output: [[34.85518032503359 -1] 33.85518032503359]
Test Case: 168 | Input/Output: [[-40.03223453661795 -56] -96.03223453661795]
Test Case: 169 | Input/Output: [[-6.240097236909861 98] 91.75990276309014]
Test Case: 170 | Input/Output: [[54.692800180735446 -20] 34.692800180735446]
Test Case: 171 | Input/Output: [[89.45904348373358 30] 119.45904348373358]
Test Case: 172 | Input/Output: [[98.96759015030676 63] 161.96759015030676]
Test Case: 173 | Input/Output: [[14.22847053056482 -22] -7.77152946943518]
Test Case: 174 | Input/Output: [[92.97360921810284 -92] 0.9736092181028368]
Test Case: 175 | Input/Output: [[-83.16341745216874 -88] -171.16341745216874]
Test Case: 176 | Input/Output: [[67.67839743877613 -26] 41.67839743877613]
Test Case: 177 | Input/Output: [[49.41093886711329 -10] 39.41093886711329]
Test Case: 178 | Input/Output: [[-35.082834228893375 -91] -126.08283422889338]
Test Case: 179 | Input/Output: [[-43.68624422942031 -29] -72.68624422942031]
Test Case: 180 | Input/Output: [[-91.56054456262723 -29] -120.56054456262723]
Test Case: 181 | Input/Output: [[-79.65458927437405 -29] -108.65458927437405]
Test Case: 182 | Input/Output: [[30.379971038676302 -50] -19.620028961323698]
Test Case: 183 | Input/Output: [[-87.74647474985741 -81] -168.7464747498574]
Test Case: 184 | Input/Output: [[15.87578821944571 -42] -26.12421178055429]
Test Case: 185 | Input/Output: [[-33.13132271583865 57] 23.86867728416135]
Test Case: 186 | Input/Output: [[30.44571269988387 -34] -3.5542873001161297]
Test Case: 187 | Input/Output: [[-85.6817417854806 2] -83.6817417854806]
Test Case: 188 | Input/Output: [[-2.6306145988076395 -67] -69.63061459880764]
Test Case: 189 | Input/Output: [[-72.63969782602643 -58] -130.63969782602643]
Test Case: 190 | Input/Output: [[-35.179848864797265 74] 38.820151135202735]
Test Case: 191 | Input/Output: [[31.054882570314504 -34] -2.945117429685496]
Test Case: 192 | Input/Output: [[11.89358116728225 63] 74.89358116728225]
Test Case: 193 | Input/Output: [[34.42677478945129 -17] 17.426774789451287]
Test Case: 194 | Input/Output: [[-68.2358898201137 -81] -149.2358898201137]
Test Case: 195 | Input/Output: [[16.005023145589632 -77] -60.99497685441037]
Test Case: 196 | Input/Output: [[-26.529679598989688 -12] -38.52967959898969]
Test Case: 197 | Input/Output: [[60.330963473808765 74] 134.33096347380877]
Test Case: 198 | Input/Output: [[76.66326479051116 -84] -7.336735209488836]
Test Case: 199 | Input/Output: [[63.2857264057817 31] 94.2857264057817]
Test Case: 200 | Input/Output: [[5.147720433262009 25] 30.14772043326201]
Test Case: 201 | Input/Output: [[70.09549538383988 -8] 62.095495383839875]
Test Case: 202 | Input/Output: [[-7.876614592449258 37] 29.123385407550742]
Test Case: 203 | Input/Output: [[-67.18861688717581 -80] -147.1886168871758]
Test Case: 204 | Input/Output: [[54.597202680494064 -81] -26.402797319505936]
Test Case: 205 | Input/Output: [[-10.717270281720644 -26] -36.717270281720644]
Test Case: 206 | Input/Output: [[72.47848278875136 -69] 3.4784827887513643]
Test Case: 207 | Input/Output: [[-5.606160162563725 59] 53.393839837436275]
Test Case: 208 | Input/Output: [[-2.344365036440081 -18] -20.34436503644008]
Test Case: 209 | Input/Output: [[-69.19014852664358 70] 0.8098514733564173]
Test Case: 210 | Input/Output: [[-3.242555875526392 26] 22.757444124473608]
Test Case: 211 | Input/Output: [[-19.7689024446251 34] 14.231097555374902]
Test Case: 212 | Input/Output: [[-47.531855098858465 51] 3.4681449011415353]
Test Case: 213 | Input/Output: [[4.058384079936886 8] 12.058384079936886]
Test Case: 214 | Input/Output: [[88.23907777241317 30] 118.23907777241317]
Test Case: 215 | Input/Output: [[28.664155896900127 -97] -68.33584410309987]
Test Case: 216 | Input/Output: [[39.15466104796141 -71] -31.84533895203859]
Test Case: 217 | Input/Output: [[-96.28636709643061 91] -5.2863670964306095]
Test Case: 218 | Input/Output: [[45.34689625853767 -90] -44.65310374146233]
Test Case: 219 | Input/Output: [[1.3677071968920274 19] 20.367707196892027]
Test Case: 220 | Input/Output: [[18.362226271677187 43] 61.36222627167719]
Test Case: 221 | Input/Output: [[-72.16665382885452 -10] -82.16665382885452]
Test Case: 222 | Input/Output: [[-24.769374758039547 -21] -45.76937475803955]
Test Case: 223 | Input/Output: [[-40.76699017544549 2] -38.76699017544549]
Test Case: 224 | Input/Output: [[-37.835655435003204 65] 27.164344564996796]
Test Case: 225 | Input/Output: [[54.3694351982883 33] 87.3694351982883]
Test Case: 226 | Input/Output: [[87.78543497252272 -42] 45.78543497252272]
Test Case: 227 | Input/Output: [[-20.054025857738992 75] 54.94597414226101]
Test Case: 228 | Input/Output: [[-74.40331530538282 -93] -167.40331530538282]
Test Case: 229 | Input/Output: [[-75.5583073760389 90] 14.441692623961103]
Test Case: 230 | Input/Output: [[-12.889236732180692 58] 45.11076326781931]
Test Case: 231 | Input/Output: [[-62.45603896691265 -85] -147.45603896691264]
Test Case: 232 | Input/Output: [[-34.28020131118461 -76] -110.28020131118461]
Test Case: 233 | Input/Output: [[57.78552538880518 65] 122.78552538880518]
Test Case: 234 | Input/Output: [[-8.237460715012674 -44] -52.23746071501267]
Test Case: 235 | Input/Output: [[-92.47177823327762 3] -89.47177823327762]
Test Case: 236 | Input/Output: [[-79.98164499773907 -60] -139.98164499773907]
Test Case: 237 | Input/Output: [[59.237823909747846 26] 85.23782390974785]
Test Case: 238 | Input/Output: [[32.89287248625047 19] 51.89287248625047]
Test Case: 239 | Input/Output: [[39.277714670802 -43] -3.7222853291980016]
Test Case: 240 | Input/Output: [[45.05162656823842 94] 139.05162656823842]
Test Case: 241 | Input/Output: [[87.01927758674586 30] 117.01927758674586]
Test Case: 242 | Input/Output: [[-57.64678480587244 82] 24.353215194127557]
Test Case: 243 | Input/Output: [[45.39227518975605 -74] -28.60772481024395]
Test Case: 244 | Input/Output: [[32.18925993025073 65] 97.18925993025073]
Test Case: 245 | Input/Output: [[-3.0716136815173343 15] 11.928386318482666]
Test Case: 246 | Input/Output: [[4.437941405224393 -22] -17.562058594775607]
Test Case: 247 | Input/Output: [[69.09998386234474 90] 159.09998386234474]
Test Case: 248 | Input/Output: [[-24.068119239710683 13] -11.068119239710683]
Test Case: 249 | Input/Output: [[32.51730787081166 78] 110.51730787081166]
Test Case: 250 | Input/Output: [[-92.96374154203444 -6] -98.96374154203444]
Test Case: 251 | Input/Output: [[-2.330652825451722 -73] -75.33065282545172]
Test Case: 252 | Input/Output: [[31.261322362264906 -66] -34.738677637735094]
Test Case: 253 | Input/Output: [[-71.41907288464888 69] -2.419072884648884]
Test Case: 254 | Input/Output: [[-83.41435692864488 29] -54.41435692864488]
Test Case: 255 | Input/Output: [[51.90153490137345 -14] 37.90153490137345]
Test Case: 256 | Input/Output: [[-17.487648740336653 92] 74.51235125966335]
Test Case: 257 | Input/Output: [[-58.54848318406445 -17] -75.54848318406445]
Test Case: 258 | Input/Output: [[99.02815982791176 34] 133.02815982791176]
Test Case: 259 | Input/Output: [[-15.976618062882153 9] -6.976618062882153]
Test Case: 260 | Input/Output: [[-31.8415658009382 0] -31.8415658009382]
Test Case: 261 | Input/Output: [[8.061625745201525 59] 67.06162574520152]
Test Case: 262 | Input/Output: [[-95.13799755278085 -7] -102.13799755278085]
Test Case: 263 | Input/Output: [[91.83009675367299 42] 133.830096753673]
Test Case: 264 | Input/Output: [[37.45070115654528 96] 133.45070115654528]
Test Case: 265 | Input/Output: [[-58.34152978851472 -98] -156.34152978851472]
Test Case: 266 | Input/Output: [[92.14340168692655 51] 143.14340168692655]
Test Case: 267 | Input/Output: [[-74.70545875028598 78] 3.2945412497140154]
Test Case: 268 | Input/Output: [[-92.61597719810104 81] -11.615977198101035]
Test Case: 269 | Input/Output: [[-40.81196943863119 78] 37.18803056136881]
Test Case: 270 | Input/Output: [[7.249925683554537 69] 76.24992568355454]
Test Case: 271 | Input/Output: [[8.558979040946824 19] 27.558979040946824]
Test Case: 272 | Input/Output: [[58.04131925566031 40] 98.04131925566031]
Test Case: 273 | Input/Output: [[-82.48474938118522 -20] -102.48474938118522]
Test Case: 274 | Input/Output: [[-78.44488397408178 59] -19.444883974081776]
Test Case: 275 | Input/Output: [[61.83846822913776 -25] 36.83846822913776]
Test Case: 276 | Input/Output: [[-90.14310553849872 -30] -120.14310553849872]
Test Case: 277 | Input/Output: [[53.13622052943907 90] 143.13622052943907]
Test Case: 278 | Input/Output: [[-98.71566828977778 9] -89.71566828977778]
Test Case: 279 | Input/Output: [[90.66826617405636 -44] 46.668266174056356]
Test Case: 280 | Input/Output: [[-2.028657091789981 97] 94.97134290821002]
Test Case: 281 | Input/Output: [[-38.60661896547599 14] -24.606618965475988]
Test Case: 282 | Input/Output: [[-7.050604088807361 10] 2.9493959111926387]
Test Case: 283 | Input/Output: [[95.93622360409856 -25] 70.93622360409856]
Test Case: 284 | Input/Output: [[-27.782019171922713 -99] -126.78201917192271]
Test Case: 285 | Input/Output: [[83.44280432891856 74] 157.44280432891856]
Test Case: 286 | Input/Output: [[-76.78734907531975 44] -32.78734907531975]
Test Case: 287 | Input/Output: [[-87.01289826722322 36] -51.01289826722322]
Test Case: 288 | Input/Output: [[-67.77480475096243 -20] -87.77480475096243]
Test Case: 289 | Input/Output: [[7.5770176201874335 -33] -25.422982379812566]
Test Case: 290 | Input/Output: [[-19.514797521733257 20] 0.4852024782667428]
Test Case: 291 | Input/Output: [[50.83050429782236 44] 94.83050429782236]
Test Case: 292 | Input/Output: [[-35.077374166857325 -8] -43.077374166857325]
Test Case: 293 | Input/Output: [[7.80622556461239 54] 61.80622556461239]
Test Case: 294 | Input/Output: [[53.083415133698196 83] 136.0834151336982]
Test Case: 295 | Input/Output: [[99.87616758854102 -55] 44.87616758854102]
Test Case: 296 | Input/Output: [[-29.704712922483665 -8] -37.704712922483665]
Test Case: 297 | Input/Output: [[-99.20861376035546 -74] -173.20861376035546]
Test Case: 298 | Input/Output: [[-18.06508052158054 100] 81.93491947841946]
Test Case: 299 | Input/Output: [[-95.3703952921825 28] -67.3703952921825]
Test Case: 300 | Input/Output: [[-17.506867919067076 15] -2.5068679190670764]
Test Case: 301 | Input/Output: [[89.29158270990789 6] 95.29158270990789]
Test Case: 302 | Input/Output: [[10.466559091744159 60] 70.46655909174416]
Test Case: 303 | Input/Output: [[3.937561707023619 -72] -68.06243829297638]
Test Case: 304 | Input/Output: [[82.94263884910606 -96] -13.05736115089394]
Test Case: 305 | Input/Output: [[-78.73089720600689 -4] -82.73089720600689]
Test Case: 306 | Input/Output: [[-91.80759943276801 53] -38.807599432768015]
Test Case: 307 | Input/Output: [[98.83024053844278 -10] 88.83024053844278]
Test Case: 308 | Input/Output: [[-36.351738126254254 12] -24.351738126254254]
Test Case: 309 | Input/Output: [[-52.34413330313663 96] 43.65586669686337]
Test Case: 310 | Input/Output: [[8.788997985045881 99] 107.78899798504588]
Test Case: 311 | Input/Output: [[-45.5590873146134 78] 32.4409126853866]
Test Case: 312 | Input/Output: [[98.5983500018761 -97] 1.5983500018760992]
Test Case: 313 | Input/Output: [[-53.043480574121226 -26] -79.04348057412122]
Test Case: 314 | Input/Output: [[-50.29629785034147 -91] -141.29629785034146]
Test Case: 315 | Input/Output: [[35.0412853750249 -71] -35.9587146249751]
Test Case: 316 | Input/Output: [[56.55839266926509 -74] -17.44160733073491]
Test Case: 317 | Input/Output: [[49.97977954116672 43] 92.97977954116672]
Test Case: 318 | Input/Output: [[-63.901007063178426 47] -16.901007063178426]
Test Case: 319 | Input/Output: [[59.31418704433577 -96] -36.68581295566423]
Test Case: 320 | Input/Output: [[65.65325866240411 -24] 41.65325866240411]
Test Case: 321 | Input/Output: [[53.55943991605736 21] 74.55943991605736]
Test Case: 322 | Input/Output: [[2.587177912649281 -8] -5.412822087350719]
Test Case: 323 | Input/Output: [[95.4267030125364 79] 174.4267030125364]
Test Case: 324 | Input/Output: [[-14.99331874608589 -88] -102.99331874608589]
Test Case: 325 | Input/Output: [[14.79877450912656 -50] -35.20122549087344]
Test Case: 326 | Input/Output: [[64.68082346617459 -69] -4.319176533825413]
Test Case: 327 | Input/Output: [[-36.7842406340501 -16] -52.7842406340501]
Test Case: 328 | Input/Output: [[-26.58882616308827 -56] -82.58882616308827]
Test Case: 329 | Input/Output: [[-85.0316723983615 -14] -99.0316723983615]
Test Case: 330 | Input/Output: [[88.48718935760826 16] 104.48718935760826]
Test Case: 331 | Input/Output: [[-52.24962561072495 -62] -114.24962561072495]
Test Case: 332 | Input/Output: [[59.257346051885605 69] 128.2573460518856]
Test Case: 333 | Input/Output: [[81.95247236423091 -89] -7.047527635769086]
Test Case: 334 | Input/Output: [[-64.08709600330587 28] -36.087096003305874]
Test Case: 335 | Input/Output: [[51.59703441944927 -2] 49.59703441944927]
Test Case: 336 | Input/Output: [[21.279472248116548 54] 75.27947224811655]
Test Case: 337 | Input/Output: [[-13.282220314095667 34] 20.717779685904333]
Test Case: 338 | Input/Output: [[63.04881491316468 8] 71.04881491316468]
Test Case: 339 | Input/Output: [[85.23172390506383 -87] -1.7682760949361693]
Test Case: 340 | Input/Output: [[-42.13642496871151 64] 21.86357503128849]
Test Case: 341 | Input/Output: [[5.511620279153433 -84] -78.48837972084657]
Test Case: 342 | Input/Output: [[-90.10686984489583 -73] -163.1068698448958]
Test Case: 343 | Input/Output: [[75.95033131865151 53] 128.9503313186515]
Test Case: 344 | Input/Output: [[89.02774786316456 -86] 3.0277478631645636]
Test Case: 345 | Input/Output: [[55.51821183054997 -11] 44.51821183054997]
Test Case: 346 | Input/Output: [[9.746062903449257 73] 82.74606290344926]
Test Case: 347 | Input/Output: [[-87.98168778325169 -2] -89.98168778325169]
Test Case: 348 | Input/Output: [[17.590646969080666 73] 90.59064696908067]
Test Case: 349 | Input/Output: [[-73.44140733560226 89] 15.558592664397736]
Test Case: 350 | Input/Output: [[7.175044765306964 24] 31.175044765306964]
Test Case: 351 | Input/Output: [[22.214528850063033 -96] -73.78547114993697]
Test Case: 352 | Input/Output: [[15.166727832410402 52] 67.1667278324104]
Test Case: 353 | Input/Output: [[-11.769558635218118 -97] -108.76955863521812]
Test Case: 354 | Input/Output: [[-60.49104561838625 -83] -143.49104561838624]
Test Case: 355 | Input/Output: [[9.437498022592166 -32] -22.562501977407834]
Test Case: 356 | Input/Output: [[14.82336744845756 49] 63.82336744845756]
Test Case: 357 | Input/Output: [[-32.87211652810265 -31] -63.87211652810265]
Test Case: 358 | Input/Output: [[-68.1347957529157 -44] -112.1347957529157]
Test Case: 359 | Input/Output: [[-84.36882433356243 10] -74.36882433356243]
Test Case: 360 | Input/Output: [[-11.388312434570324 -86] -97.38831243457032]
Test Case: 361 | Input/Output: [[-28.445412979760803 -21] -49.4454129797608]
Test Case: 362 | Input/Output: [[-8.889743232017835 13] 4.110256767982165]
Test Case: 363 | Input/Output: [[21.405161933222416 16] 37.405161933222416]
Test Case: 364 | Input/Output: [[-75.3782172339768 28] -47.3782172339768]
Test Case: 365 | Input/Output: [[-67.72560515318018 -89] -156.7256051531802]
Test Case: 366 | Input/Output: [[71.65263330414464 -92] -20.347366695855357]
Test Case: 367 | Input/Output: [[81.86120658504151 85] 166.86120658504151]
Test Case: 368 | Input/Output: [[-83.72096803335292 -5] -88.72096803335292]
Test Case: 369 | Input/Output: [[19.111865848421644 -97] -77.88813415157836]
Test Case: 370 | Input/Output: [[-3.144790159476969 -67] -70.14479015947697]
Test Case: 371 | Input/Output: [[64.48854495857137 -95] -30.511455041428633]
Test Case: 372 | Input/Output: [[-90.93312225572066 -51] -141.93312225572066]
Test Case: 373 | Input/Output: [[85.15052387341083 36] 121.15052387341083]
Test Case: 374 | Input/Output: [[-88.77559467315321 -29] -117.77559467315321]
Test Case: 375 | Input/Output: [[-42.232337685220564 -86] -128.23233768522056]
Test Case: 376 | Input/Output: [[23.17800810403503 -51] -27.82199189596497]
Test Case: 377 | Input/Output: [[16.05058888741948 -54] -37.94941111258052]
Test Case: 378 | Input/Output: [[15.043012262715337 97] 112.04301226271534]
Test Case: 379 | Input/Output: [[37.13280787397585 -97] -59.86719212602415]
Test Case: 380 | Input/Output: [[60.976057020387316 24] 84.97605702038732]
Test Case: 381 | Input/Output: [[3.8901002677072682 -35] -31.10989973229273]
Test Case: 382 | Input/Output: [[40.18461155186182 -79] -38.81538844813818]
Test Case: 383 | Input/Output: [[-35.906135254136686 74] 38.093864745863314]
Test Case: 384 | Input/Output: [[-23.582894800009612 -66] -89.58289480000961]
Test Case: 385 | Input/Output: [[-43.60504900676385 72] 28.39495099323615]
Test Case: 386 | Input/Output: [[44.17886844882872 -24] 20.178868448828723]
Test Case: 387 | Input/Output: [[83.9329386729955 -66] 17.932938672995505]
Test Case: 388 | Input/Output: [[46.821718888135536 4] 50.821718888135536]
Test Case: 389 | Input/Output: [[-53.304039943961754 -10] -63.304039943961754]
Test Case: 390 | Input/Output: [[-86.28955349621452 -41] -127.28955349621452]
Test Case: 391 | Input/Output: [[53.1999056378709 60] 113.1999056378709]
Test Case: 392 | Input/Output: [[-5.8014231823247115 -81] -86.80142318232471]
Test Case: 393 | Input/Output: [[-5.045111547644822 -39] -44.04511154764482]
Test Case: 394 | Input/Output: [[70.08951406668024 5] 75.08951406668024]
Test Case: 395 | Input/Output: [[62.85878565344552 89] 151.85878565344552]
Test Case: 396 | Input/Output: [[-88.9029453017417 -89] -177.90294530174168]
Test Case: 397 | Input/Output: [[90.38825166187405 73] 163.38825166187405]
Test Case: 398 | Input/Output: [[-5.739561803756516 63] 57.260438196243484]
Test Case: 399 | Input/Output: [[60.85651065897741 1] 61.85651065897741]
Test Case: 400 | Input/Output: [[44.55830371082493 82] 126.55830371082493]
Test Case: 401 | Input/Output: [[60.85932072808069 -40] 20.85932072808069]
Test Case: 402 | Input/Output: [[-86.95117883596774 35] -51.95117883596774]
Test Case: 403 | Input/Output: [[-79.48704949262773 13] -66.48704949262773]
Test Case: 404 | Input/Output: [[66.3969885428252 66] 132.3969885428252]
Test Case: 405 | Input/Output: [[-5.779906309171153 -16] -21.779906309171153]
Test Case: 406 | Input/Output: [[16.214795538975608 -67] -50.78520446102439]
Test Case: 407 | Input/Output: [[29.33609471821555 35] 64.33609471821555]
Test Case: 408 | Input/Output: [[34.58747449133787 -100] -65.41252550866213]
Test Case: 409 | Input/Output: [[-73.54009480197269 -42] -115.54009480197269]
Test Case: 410 | Input/Output: [[-97.5286109830722 -20] -117.5286109830722]
Test Case: 411 | Input/Output: [[4.116774052455824 48] 52.116774052455824]
Test Case: 412 | Input/Output: [[-40.12074383460407 98] 57.87925616539593]
Test Case: 413 | Input/Output: [[-91.58890954087894 38] -53.588909540878944]
Test Case: 414 | Input/Output: [[-27.411152716659586 9] -18.411152716659586]
Test Case: 415 | Input/Output: [[64.67322599982631 80] 144.67322599982631]
Test Case: 416 | Input/Output: [[90.06554657371126 14] 104.06554657371126]
Test Case: 417 | Input/Output: [[4.883108290458594 -51] -46.116891709541406]
Test Case: 418 | Input/Output: [[-88.71846799938112 -1] -89.71846799938112]
Test Case: 419 | Input/Output: [[-67.2465499502907 14] -53.2465499502907]
Test Case: 420 | Input/Output: [[35.67076219384228 17] 52.67076219384228]
Test Case: 421 | Input/Output: [[21.667532598884435 -72] -50.332467401115565]
Test Case: 422 | Input/Output: [[-36.87732205381544 -74] -110.87732205381545]
Test Case: 423 | Input/Output: [[-2.6312158924513938 51] 48.368784107548606]
Test Case: 424 | Input/Output: [[63.279626548133024 89] 152.27962654813302]
Test Case: 425 | Input/Output: [[-99.60234694598175 -15] -114.60234694598175]
Test Case: 426 | Input/Output: [[6.202736403339216 83] 89.20273640333922]
Test Case: 427 | Input/Output: [[-9.21121790995123 11] 1.7887820900487696]
Test Case: 428 | Input/Output: [[90.03111666593708 19] 109.03111666593708]
Test Case: 429 | Input/Output: [[-23.548038293494542 36] 12.451961706505458]
Test Case: 430 | Input/Output: [[-63.816288003921315 -25] -88.81628800392131]
Test Case: 431 | Input/Output: [[-4.820587948888729 33] 28.17941205111127]
Test Case: 432 | Input/Output: [[24.46576167491071 -30] -5.534238325089291]
Test Case: 433 | Input/Output: [[-28.08617556705076 96] 67.91382443294924]
Test Case: 434 | Input/Output: [[-91.81631835235993 65] -26.81631835235993]
Test Case: 435 | Input/Output: [[-73.69253893718277 39] -34.692538937182775]
Test Case: 436 | Input/Output: [[74.871756947857 -48] 26.871756947856994]
Test Case: 437 | Input/Output: [[83.06981362700142 -25] 58.06981362700142]
Test Case: 438 | Input/Output: [[96.59706117538238 -8] 88.59706117538238]
Test Case: 439 | Input/Output: [[59.11899818952233 48] 107.11899818952233]
Test Case: 440 | Input/Output: [[-19.634541784537006 37] 17.365458215462994]
Test Case: 441 | Input/Output: [[54.56579066203156 -87] -32.43420933796844]
Test Case: 442 | Input/Output: [[-91.07018740432792 42] -49.070187404327925]
Test Case: 443 | Input/Output: [[93.88075867046618 -62] 31.88075867046618]
Test Case: 444 | Input/Output: [[0.3818531543370369 -35] -34.61814684566296]
Test Case: 445 | Input/Output: [[-61.630193940527356 -96] -157.63019394052736]
Test Case: 446 | Input/Output: [[46.473645292268145 56] 102.47364529226815]
Test Case: 447 | Input/Output: [[-6.536581010640589 -31] -37.53658101064059]
Test Case: 448 | Input/Output: [[-7.3053887803499435 100] 92.69461121965006]
Test Case: 449 | Input/Output: [[87.88948187179923 -26] 61.889481871799234]
Test Case: 450 | Input/Output: [[-34.08495743628748 -17] -51.08495743628748]
Test Case: 451 | Input/Output: [[77.98115511645574 68] 145.98115511645574]
Test Case: 452 | Input/Output: [[-14.899634275503686 4] -10.899634275503686]
Test Case: 453 | Input/Output: [[-6.902213036666069 27] 20.09778696333393]
Test Case: 454 | Input/Output: [[88.48587178195805 99] 187.48587178195805]
Test Case: 455 | Input/Output: [[-85.39339757377316 -76] -161.39339757377314]
Test Case: 456 | Input/Output: [[-59.90727420973116 -52] -111.90727420973116]
Test Case: 457 | Input/Output: [[42.97122164593145 75] 117.97122164593145]
Test Case: 458 | Input/Output: [[76.21630656855481 -17] 59.21630656855481]
Test Case: 459 | Input/Output: [[95.53035814705052 21] 116.53035814705052]
Test Case: 460 | Input/Output: [[-88.0088282520883 -17] -105.0088282520883]
Test Case: 461 | Input/Output: [[-66.50744044411351 -5] -71.50744044411351]
Test Case: 462 | Input/Output: [[-53.39443157995218 -40] -93.39443157995218]
Test Case: 463 | Input/Output: [[11.16490121726767 30] 41.16490121726767]
Test Case: 464 | Input/Output: [[57.46716473342261 -57] 0.46716473342260656]
Test Case: 465 | Input/Output: [[24.31723826366492 96] 120.31723826366492]
Test Case: 466 | Input/Output: [[-84.12209310132022 95] 10.877906898679782]
Test Case: 467 | Input/Output: [[-99.28665532637666 -52] -151.28665532637666]
Test Case: 468 | Input/Output: [[-27.573572672798875 -53] -80.57357267279887]
Test Case: 469 | Input/Output: [[-14.954834682799586 79] 64.04516531720041]
Test Case: 470 | Input/Output: [[-49.66867981515715 43] -6.668679815157148]
Test Case: 471 | Input/Output: [[-94.71957534554467 -17] -111.71957534554467]
Test Case: 472 | Input/Output: [[-96.62257347815897 -100] -196.62257347815898]
Test Case: 473 | Input/Output: [[66.39814251643924 65] 131.39814251643924]
Test Case: 474 | Input/Output: [[35.68307257383958 -40] -4.316927426160419]
Test Case: 475 | Input/Output: [[17.88532585302731 99] 116.88532585302731]
Test Case: 476 | Input/Output: [[53.61841816709838 43] 96.61841816709838]
Test Case: 477 | Input/Output: [[23.854076480186876 -27] -3.145923519813124]
Test Case: 478 | Input/Output: [[87.95085052543996 44] 131.95085052543996]
Test Case: 479 | Input/Output: [[-75.10475271459802 20] -55.10475271459802]
Test Case: 480 | Input/Output: [[-24.073156383862198 23] -1.073156383862198]
Test Case: 481 | Input/Output: [[-60.06966650984236 92] 31.930333490157643]
Test Case: 482 | Input/Output: [[12.1592934955911 -72] -59.8407065044089]
Test Case: 483 | Input/Output: [[-28.568459018809378 -68] -96.56845901880938]
Test Case: 484 | Input/Output: [[64.49608773657403 55] 119.49608773657403]
Test Case: 485 | Input/Output: [[46.332405303738 14] 60.332405303738]
Test Case: 486 | Input/Output: [[-45.744731339738706 78] 32.255268660261294]
Test Case: 487 | Input/Output: [[-57.83364166147673 73] 15.166358338523267]
Test Case: 488 | Input/Output: [[-39.307484058013145 96] 56.692515941986855]
Test Case: 489 | Input/Output: [[-60.905107540879875 93] 32.094892459120125]
Test Case: 490 | Input/Output: [[80.60825941465254 96] 176.60825941465254]
Test Case: 491 | Input/Output: [[-28.113081620456043 57] 28.886918379543957]
Test Case: 492 | Input/Output: [[73.84613533770869 40] 113.84613533770869]
Test Case: 493 | Input/Output: [[88.18813835280002 -77] 11.188138352800024]
Test Case: 494 | Input/Output: [[74.0036377795671 70] 144.0036377795671]
Test Case: 495 | Input/Output: [[38.15026598283217 -70] -31.849734017167833]
Test Case: 496 | Input/Output: [[47.80346607506448 -4] 43.80346607506448]
Test Case: 497 | Input/Output: [[-19.10162257659917 16] -3.101622576599169]
Test Case: 498 | Input/Output: [[12.93589814184213 95] 107.93589814184213]
Test Case: 499 | Input/Output: [[-63.0697829365678 98] 34.9302170634322]
Test Case: 500 | Input/Output: [[-6.484363481492991 44] 37.51563651850701]
Test Case: 501 | Input/Output: [[28.471606320846035 63] 91.47160632084604]
Test Case: 502 | Input/Output: [[-10.051674563241875 -74] -84.05167456324187]
Test Case: 503 | Input/Output: [[86.41523584871481 63] 149.41523584871481]
Test Case: 504 | Input/Output: [[-71.07618540767896 97] 25.923814592321037]
Test Case: 505 | Input/Output: [[-90.71088153216135 87] -3.710881532161352]
Test Case: 506 | Input/Output: [[-81.15117264726044 -72] -153.15117264726044]
Test Case: 507 | Input/Output: [[53.88041210897205 68] 121.88041210897205]
Test Case: 508 | Input/Output: [[65.00864332380024 72] 137.00864332380024]
Test Case: 509 | Input/Output: [[58.01920956307174 -97] -38.98079043692826]
Test Case: 510 | Input/Output: [[-99.62427867534794 -12] -111.62427867534794]
Test Case: 511 | Input/Output: [[41.42861633899267 -25] 16.42861633899267]
Test Case: 512 | Input/Output: [[26.712332386992415 76] 102.71233238699241]
Test Case: 513 | Input/Output: [[-19.468980265946527 -95] -114.46898026594653]
Test Case: 514 | Input/Output: [[-46.028680612061244 -14] -60.028680612061244]
Test Case: 515 | Input/Output: [[-95.79747169247965 -80] -175.79747169247963]
Test Case: 516 | Input/Output: [[-71.6074409507883 -44] -115.6074409507883]
Test Case: 517 | Input/Output: [[51.82317296765041 -85] -33.17682703234959]
Test Case: 518 | Input/Output: [[-83.05655844736002 56] -27.05655844736002]
Test Case: 519 | Input/Output: [[9.802924622344861 -50] -40.19707537765514]
Test Case: 520 | Input/Output: [[-17.30402147725259 1] -16.30402147725259]
Test Case: 521 | Input/Output: [[-53.75639316749206 75] 21.243606832507943]
Test Case: 522 | Input/Output: [[-39.730785381603376 70] 30.269214618396624]
Test Case: 523 | Input/Output: [[56.937852554954816 24] 80.93785255495482]
Test Case: 524 | Input/Output: [[-84.0919508984384 -3] -87.0919508984384]
Test Case: 525 | Input/Output: [[44.78104917424375 -38] 6.781049174243748]
Test Case: 526 | Input/Output: [[50.19869252226792 84] 134.19869252226792]
Test Case: 527 | Input/Output: [[-53.383743841053466 24] -29.383743841053466]
Test Case: 528 | Input/Output: [[-7.7945228249922 -37] -44.7945228249922]
Test Case: 529 | Input/Output: [[-18.03262207311633 -41] -59.03262207311633]
Test Case: 530 | Input/Output: [[62.44889920063949 91] 153.4488992006395]
Test Case: 531 | Input/Output: [[14.331539845597163 81] 95.33153984559716]
Test Case: 532 | Input/Output: [[-57.27097608860399 -26] -83.27097608860399]
Test Case: 533 | Input/Output: [[43.452519496570545 45] 88.45251949657055]
Test Case: 534 | Input/Output: [[82.0378272901039 -8] 74.0378272901039]
Test Case: 535 | Input/Output: [[37.000829579878086 -20] 17.000829579878086]
Test Case: 536 | Input/Output: [[57.957549274599046 4] 61.957549274599046]
Test Case: 537 | Input/Output: [[54.94005660014048 -82] -27.05994339985952]
Test Case: 538 | Input/Output: [[77.84311148074792 -29] 48.84311148074792]
Test Case: 539 | Input/Output: [[-14.62473254604997 -52] -66.62473254604997]
Test Case: 540 | Input/Output: [[-83.26344785301688 -15] -98.26344785301688]
Test Case: 541 | Input/Output: [[16.862811540340502 -25] -8.137188459659498]
Test Case: 542 | Input/Output: [[-32.64351433003682 -17] -49.64351433003682]
Test Case: 543 | Input/Output: [[-84.16106828714382 -42] -126.16106828714382]
Test Case: 544 | Input/Output: [[-20.54542380028404 70] 49.45457619971596]
Test Case: 545 | Input/Output: [[-80.79107582549246 -60] -140.79107582549244]
Test Case: 546 | Input/Output: [[-46.49129445524509 -3] -49.49129445524509]
Test Case: 547 | Input/Output: [[-13.03973145047894 0] -13.03973145047894]
Test Case: 548 | Input/Output: [[30.078372676756857 6] 36.07837267675686]
Test Case: 549 | Input/Output: [[17.304282630191096 -47] -29.695717369808904]
Test Case: 550 | Input/Output: [[-22.162751169711086 -33] -55.162751169711086]
Test Case: 551 | Input/Output: [[31.793315507746655 15] 46.793315507746655]
Test Case: 552 | Input/Output: [[30.779131750071485 68] 98.77913175007149]
Test Case: 553 | Input/Output: [[34.36743421637004 59] 93.36743421637004]
Test Case: 554 | Input/Output: [[19.35996157554412 -32] -12.64003842445588]
Test Case: 555 | Input/Output: [[-70.80009544964344 89] 18.199904550356564]
Test Case: 556 | Input/Output: [[-22.76726823419088 -36] -58.76726823419088]
Test Case: 557 | Input/Output: [[31.01873706545004 -91] -59.98126293454996]
Test Case: 558 | Input/Output: [[-11.869337010502946 63] 51.130662989497054]
Test Case: 559 | Input/Output: [[-62.04769111240671 -80] -142.0476911124067]
Test Case: 560 | Input/Output: [[97.58996445362905 -51] 46.58996445362905]
Test Case: 561 | Input/Output: [[20.27790094721287 42] 62.27790094721287]
Test Case: 562 | Input/Output: [[85.53416329408344 71] 156.53416329408344]
Test Case: 563 | Input/Output: [[72.05014893852228 -68] 4.050148938522284]
Test Case: 564 | Input/Output: [[-14.671923003259636 96] 81.32807699674036]
Test Case: 565 | Input/Output: [[57.197273016502606 33] 90.1972730165026]
Test Case: 566 | Input/Output: [[-83.11488578514339 73] -10.114885785143386]
Test Case: 567 | Input/Output: [[79.61528391042526 95] 174.61528391042526]
Test Case: 568 | Input/Output: [[-13.248085045829882 50] 36.75191495417012]
Test Case: 569 | Input/Output: [[-60.21903072391059 63] 2.780969276089408]
Test Case: 570 | Input/Output: [[-93.22306518733099 -50] -143.22306518733097]
Test Case: 571 | Input/Output: [[14.210439174073343 91] 105.21043917407334]
Test Case: 572 | Input/Output: [[-58.19236191020571 36] -22.19236191020571]
Test Case: 573 | Input/Output: [[24.84322137910091 14] 38.84322137910091]
Test Case: 574 | Input/Output: [[93.00616394742426 -2] 91.00616394742426]
Test Case: 575 | Input/Output: [[-11.765214817967234 -59] -70.76521481796723]
Test Case: 576 | Input/Output: [[18.19977355589748 -86] -67.80022644410252]
Test Case: 577 | Input/Output: [[-35.27555435987348 98] 62.72444564012652]
Test Case: 578 | Input/Output: [[-66.7627085335693 26] -40.762708533569295]
Test Case: 579 | Input/Output: [[-99.6594656362811 -27] -126.6594656362811]
Test Case: 580 | Input/Output: [[78.40933169027306 73] 151.40933169027306]
Test Case: 581 | Input/Output: [[-14.427345792830252 -30] -44.42734579283025]
Test Case: 582 | Input/Output: [[5.518717197445227 -35] -29.481282802554773]
Test Case: 583 | Input/Output: [[88.74113910420866 74] 162.74113910420866]
Test Case: 584 | Input/Output: [[-28.166405614692565 -52] -80.16640561469256]
Test Case: 585 | Input/Output: [[33.931157715566286 -33] 0.931157715566286]
Test Case: 586 | Input/Output: [[63.29762358616503 -70] -6.702376413834969]
Test Case: 587 | Input/Output: [[68.31153322825782 8] 76.31153322825782]
Test Case: 588 | Input/Output: [[56.95441449741594 -82] -25.04558550258406]
Test Case: 589 | Input/Output: [[-31.09721862467474 94] 62.90278137532526]
Test Case: 590 | Input/Output: [[-92.18427728766503 -56] -148.18427728766503]
Test Case: 591 | Input/Output: [[42.020525839915535 -38] 4.0205258399155355]
Test Case: 592 | Input/Output: [[41.62226912447943 -67] -25.37773087552057]
Test Case: 593 | Input/Output: [[56.00718699439625 5] 61.00718699439625]
Test Case: 594 | Input/Output: [[71.6728202683583 55] 126.6728202683583]
Test Case: 595 | Input/Output: [[70.958535363468 -71] -0.04146463653199817]
Test Case: 596 | Input/Output: [[-88.95233264518592 61] -27.95233264518592]
Test Case: 597 | Input/Output: [[34.80606285582007 6] 40.80606285582007]
Test Case: 598 | Input/Output: [[-0.3268468743706734 -37] -37.32684687437067]
Test Case: 599 | Input/Output: [[-62.078888512016086 -67] -129.07888851201608]
Test Case: 600 | Input/Output: [[99.02375721416826 -63] 36.023757214168256]
Test Case: 601 | Input/Output: [[-93.24487573278557 -55] -148.24487573278557]
Test Case: 602 | Input/Output: [[-54.95224826373706 18] -36.95224826373706]
Test Case: 603 | Input/Output: [[-24.75355763403337 -52] -76.75355763403337]
Test Case: 604 | Input/Output: [[57.58467524546552 52] 109.58467524546552]
Test Case: 605 | Input/Output: [[1.4897066072422405 66] 67.48970660724224]
Test Case: 606 | Input/Output: [[-55.783978795243506 -81] -136.7839787952435]
Test Case: 607 | Input/Output: [[-15.215065588801096 80] 64.7849344111989]
Test Case: 608 | Input/Output: [[-67.2980429616266 49] -18.298042961626606]
Test Case: 609 | Input/Output: [[-39.29693299474384 62] 22.70306700525616]
Test Case: 610 | Input/Output: [[30.644303851871257 -11] 19.644303851871257]
Test Case: 611 | Input/Output: [[-70.68245528682823 -95] -165.68245528682823]
Test Case: 612 | Input/Output: [[83.16176551837805 -26] 57.16176551837805]
Test Case: 613 | Input/Output: [[-13.768577666074904 13] -0.7685776660749042]
Test Case: 614 | Input/Output: [[12.857217317648178 -52] -39.14278268235182]
Test Case: 615 | Input/Output: [[-71.21077728618985 -38] -109.21077728618985]
Test Case: 616 | Input/Output: [[-78.12548230375431 73] -5.1254823037543105]
Test Case: 617 | Input/Output: [[-95.44487803375696 -95] -190.44487803375696]
Test Case: 618 | Input/Output: [[11.480007680510738 -57] -45.51999231948926]
Test Case: 619 | Input/Output: [[94.01200617669889 -70] 24.01200617669889]
Test Case: 620 | Input/Output: [[-7.514933318945353 -37] -44.51493331894535]
Test Case: 621 | Input/Output: [[-70.74853042231555 -47] -117.74853042231555]
Test Case: 622 | Input/Output: [[-72.40094025138114 3] -69.40094025138114]
Test Case: 623 | Input/Output: [[-23.43265638216934 14] -9.432656382169341]
Test Case: 624 | Input/Output: [[-34.53468425052732 -10] -44.53468425052732]
Test Case: 625 | Input/Output: [[-21.777885139247545 25] 3.2221148607524555]
Test Case: 626 | Input/Output: [[96.64316070507815 87] 183.64316070507815]
Test Case: 627 | Input/Output: [[83.66712562744127 41] 124.66712562744127]
Test Case: 628 | Input/Output: [[43.716388576519336 96] 139.71638857651934]
Test Case: 629 | Input/Output: [[-0.19380025104132415 -97] -97.19380025104132]
Test Case: 630 | Input/Output: [[71.54438834067332 -25] 46.54438834067332]
Test Case: 631 | Input/Output: [[-6.125371678058556 -75] -81.12537167805856]
Test Case: 632 | Input/Output: [[-1.6828833741923148 86] 84.31711662580769]
Test Case: 633 | Input/Output: [[-7.857650057167319 -89] -96.85765005716732]
Test Case: 634 | Input/Output: [[21.63582896746688 -20] 1.6358289674668782]
Test Case: 635 | Input/Output: [[79.06136592940024 84] 163.06136592940024]
Test Case: 636 | Input/Output: [[39.21844871578054 -57] -17.78155128421946]
Test Case: 637 | Input/Output: [[-39.05178047750346 -67] -106.05178047750346]
Test Case: 638 | Input/Output: [[15.19332049289352 79] 94.19332049289352]
Test Case: 639 | Input/Output: [[47.47179856950305 -87] -39.52820143049695]
Test Case: 640 | Input/Output: [[86.61839883828185 13] 99.61839883828185]
Test Case: 641 | Input/Output: [[-95.83244248273368 93] -2.8324424827336827]
Test Case: 642 | Input/Output: [[-23.914432497697362 83] 59.08556750230264]
Test Case: 643 | Input/Output: [[-85.15682340865396 6] -79.15682340865396]
Test Case: 644 | Input/Output: [[22.523383039053414 -88] -65.47661696094659]
Test Case: 645 | Input/Output: [[-88.80576028160246 -63] -151.80576028160246]
Test Case: 646 | Input/Output: [[-28.9527162690773 -73] -101.9527162690773]
Test Case: 647 | Input/Output: [[-95.90650431258535 58] -37.906504312585355]
Test Case: 648 | Input/Output: [[-85.49314805525283 -17] -102.49314805525283]
Test Case: 649 | Input/Output: [[-5.320002931611924 17] 11.679997068388076]
Test Case: 650 | Input/Output: [[65.08120854768319 -12] 53.08120854768319]
Test Case: 651 | Input/Output: [[66.88357078954232 73] 139.88357078954232]
Test Case: 652 | Input/Output: [[21.67026149116522 -42] -20.32973850883478]
Test Case: 653 | Input/Output: [[78.31657663175585 18] 96.31657663175585]
Test Case: 654 | Input/Output: [[-53.359092934996696 -100] -153.35909293499668]
Test Case: 655 | Input/Output: [[63.095669696499044 51] 114.09566969649904]
Test Case: 656 | Input/Output: [[-74.10525126216898 38] -36.10525126216898]
Test Case: 657 | Input/Output: [[20.48072288698583 -3] 17.48072288698583]
Test Case: 658 | Input/Output: [[97.54014277571085 -87] 10.540142775710848]
Test Case: 659 | Input/Output: [[33.273714743742715 -57] -23.726285256257285]
Test Case: 660 | Input/Output: [[-2.7546613999179357 87] 84.24533860008206]
Test Case: 661 | Input/Output: [[53.06054207294238 -98] -44.93945792705762]
Test Case: 662 | Input/Output: [[-8.269279258885717 -63] -71.26927925888572]
Test Case: 663 | Input/Output: [[46.176727119625355 20] 66.17672711962535]
Test Case: 664 | Input/Output: [[74.06319355742542 69] 143.06319355742542]
Test Case: 665 | Input/Output: [[-43.89264460862054 -77] -120.89264460862054]
Test Case: 666 | Input/Output: [[91.74051207239157 66] 157.74051207239157]
Test Case: 667 | Input/Output: [[23.503197280950033 30] 53.50319728095003]
Test Case: 668 | Input/Output: [[-4.195301058679718 89] 84.80469894132028]
Test Case: 669 | Input/Output: [[-9.38098360888273 -38] -47.38098360888273]
Test Case: 670 | Input/Output: [[-86.63102842667361 100] 13.368971573326391]
Test Case: 671 | Input/Output: [[-0.508365875088316 -26] -26.508365875088316]
Test Case: 672 | Input/Output: [[53.278775223037655 47] 100.27877522303766]
Test Case: 673 | Input/Output: [[-20.671232116583198 -43] -63.6712321165832]
Test Case: 674 | Input/Output: [[-22.75177718400039 23] 0.24822281599961116]
Test Case: 675 | Input/Output: [[-71.6088582644962 89] 17.391141735503794]
Test Case: 676 | Input/Output: [[92.95543783368998 -73] 19.955437833689984]
Test Case: 677 | Input/Output: [[-84.81718713594029 9] -75.81718713594029]
Test Case: 678 | Input/Output: [[-14.534284183272362 -7] -21.534284183272362]
Test Case: 679 | Input/Output: [[34.733824422144664 -92] -57.266175577855336]
Test Case: 680 | Input/Output: [[-79.47593645590057 -36] -115.47593645590057]
Test Case: 681 | Input/Output: [[-52.85779193773878 0] -52.85779193773878]
Test Case: 682 | Input/Output: [[34.54087713966632 -6] 28.54087713966632]
Test Case: 683 | Input/Output: [[96.82568638446915 -78] 18.82568638446915]
Test Case: 684 | Input/Output: [[55.912408522845936 -35] 20.912408522845936]
Test Case: 685 | Input/Output: [[-14.720867756115524 48] 33.279132243884476]
Test Case: 686 | Input/Output: [[35.819145292466516 73] 108.81914529246652]
Test Case: 687 | Input/Output: [[-67.22948445793193 -26] -93.22948445793193]
Test Case: 688 | Input/Output: [[16.573751891563717 -67] -50.42624810843628]
Test Case: 689 | Input/Output: [[-67.80126609943153 -50] -117.80126609943153]
Test Case: 690 | Input/Output: [[-29.882470337364637 -49] -78.88247033736464]
Test Case: 691 | Input/Output: [[-30.942932867802313 -19] -49.94293286780231]
Test Case: 692 | Input/Output: [[-68.57893890475046 -95] -163.57893890475046]
Test Case: 693 | Input/Output: [[-80.92376309659585 -40] -120.92376309659585]
Test Case: 694 | Input/Output: [[-13.919753430846356 76] 62.080246569153644]
Test Case: 695 | Input/Output: [[12.950653207014113 -97] -84.04934679298589]
Test Case: 696 | Input/Output: [[-79.70534710412463 -65] -144.70534710412463]
Test Case: 697 | Input/Output: [[-52.773210167114 43] -9.773210167114001]
Test Case: 698 | Input/Output: [[-65.86449895909468 -3] -68.86449895909468]
Test Case: 699 | Input/Output: [[51.311137202971196 53] 104.3111372029712]
Test Case: 700 | Input/Output: [[23.194140375032916 -33] -9.805859624967084]
Test Case: 701 | Input/Output: [[-42.82240571964999 -53] -95.82240571964999]
Test Case: 702 | Input/Output: [[-0.906474906263881 -6] -6.906474906263881]
Test Case: 703 | Input/Output: [[78.94778487405262 74] 152.94778487405262]
Test Case: 704 | Input/Output: [[-11.847198918635485 63] 51.152801081364515]
Test Case: 705 | Input/Output: [[-31.488482363142566 25] -6.488482363142566]
Test Case: 706 | Input/Output: [[85.79900252425517 -33] 52.79900252425517]
Test Case: 707 | Input/Output: [[44.49587091079596 64] 108.49587091079596]
Test Case: 708 | Input/Output: [[58.98132756657927 92] 150.98132756657927]
Test Case: 709 | Input/Output: [[27.436756513943422 -71] -43.56324348605658]
Test Case: 710 | Input/Output: [[44.95555657483777 63] 107.95555657483777]
Test Case: 711 | Input/Output: [[-37.67050591858301 -28] -65.67050591858302]
Test Case: 712 | Input/Output: [[2.862599152147567 -2] 0.8625991521475669]
Test Case: 713 | Input/Output: [[-34.69964898121043 100] 65.30035101878957]
Test Case: 714 | Input/Output: [[48.257257032564866 -36] 12.257257032564866]
Test Case: 715 | Input/Output: [[-87.46349091470415 76] -11.463490914704153]
Test Case: 716 | Input/Output: [[70.00246423116329 -50] 20.002464231163287]
Test Case: 717 | Input/Output: [[33.614860631365985 -62] -28.385139368634015]
Test Case: 718 | Input/Output: [[0.012117700436391488 53] 53.01211770043639]
Test Case: 719 | Input/Output: [[-27.14763135185588 7] -20.14763135185588]
Test Case: 720 | Input/Output: [[75.224528063891 -93] -17.775471936109]
Test Case: 721 | Input/Output: [[-3.3784655584556447 -68] -71.37846555845564]
Test Case: 722 | Input/Output: [[77.86391147338435 70] 147.86391147338435]
Test Case: 723 | Input/Output: [[-93.13083291099787 -53] -146.13083291099787]
Test Case: 724 | Input/Output: [[17.227738577970328 68] 85.22773857797033]
Test Case: 725 | Input/Output: [[83.01970257925754 91] 174.01970257925754]
Test Case: 726 | Input/Output: [[-28.080950211609263 53] 24.919049788390737]
Test Case: 727 | Input/Output: [[66.02423871590634 49] 115.02423871590634]
Test Case: 728 | Input/Output: [[16.15697258685141 -72] -55.84302741314859]
Test Case: 729 | Input/Output: [[-76.45193757908892 61] -15.45193757908892]
Test Case: 730 | Input/Output: [[81.22094422670651 81] 162.2209442267065]
Test Case: 731 | Input/Output: [[-42.30682101676175 -69] -111.30682101676175]
Test Case: 732 | Input/Output: [[53.94859131780447 100] 153.94859131780447]
Test Case: 733 | Input/Output: [[10.024388608502804 66] 76.0243886085028]
Test Case: 734 | Input/Output: [[-88.72679658467015 59] -29.726796584670154]
Test Case: 735 | Input/Output: [[63.56826414761434 -85] -21.431735852385657]
Test Case: 736 | Input/Output: [[-35.52078294291516 -89] -124.52078294291516]
Test Case: 737 | Input/Output: [[-69.69145501356704 78] 8.308544986432963]
Test Case: 738 | Input/Output: [[-37.97169214330096 -36] -73.97169214330097]
Test Case: 739 | Input/Output: [[-39.797645875926605 76] 36.202354124073395]
Test Case: 740 | Input/Output: [[6.685619060838263 20] 26.685619060838263]
Test Case: 741 | Input/Output: [[42.86785632243962 2] 44.86785632243962]
Test Case: 742 | Input/Output: [[-62.14321985462583 8] -54.14321985462583]
Test Case: 743 | Input/Output: [[79.8613248185691 -79] 0.861324818569102]
Test Case: 744 | Input/Output: [[-97.53461776166465 -93] -190.53461776166466]
Test Case: 745 | Input/Output: [[-10.31030195116709 53] 42.68969804883291]
Test Case: 746 | Input/Output: [[81.8183553847652 69] 150.8183553847652]
Test Case: 747 | Input/Output: [[41.67357968091838 46] 87.67357968091838]
Test Case: 748 | Input/Output: [[42.891672889549056 51] 93.89167288954906]
Test Case: 749 | Input/Output: [[-30.21778982967642 7] -23.21778982967642]
Test Case: 750 | Input/Output: [[93.36072250210825 -38] 55.360722502108246]
Test Case: 751 | Input/Output: [[63.93045782079548 -92] -28.069542179204518]
Test Case: 752 | Input/Output: [[-94.66310873255979 -21] -115.66310873255979]
Test Case: 753 | Input/Output: [[92.05918744512712 -89] 3.0591874451271224]
Test Case: 754 | Input/Output: [[-84.30311291620222 -78] -162.30311291620222]
Test Case: 755 | Input/Output: [[27.85088195056464 96] 123.85088195056464]
Test Case: 756 | Input/Output: [[55.95702685540019 -47] 8.957026855400187]
Test Case: 757 | Input/Output: [[2.3320541846822493 -48] -45.66794581531775]
Test Case: 758 | Input/Output: [[-6.014693328625185 -59] -65.01469332862519]
Test Case: 759 | Input/Output: [[23.758244400953643 41] 64.75824440095364]
Test Case: 760 | Input/Output: [[-42.45306204598458 -74] -116.45306204598458]
Test Case: 761 | Input/Output: [[-48.33969698014076 49] 0.6603030198592421]
Test Case: 762 | Input/Output: [[-19.868422957272585 -9] -28.868422957272585]
Test Case: 763 | Input/Output: [[50.808526133131295 33] 83.8085261331313]
Test Case: 764 | Input/Output: [[11.108699345553475 -88] -76.89130065444652]
Test Case: 765 | Input/Output: [[67.1144222567199 73] 140.1144222567199]
Test Case: 766 | Input/Output: [[84.77417234367803 81] 165.77417234367803]
Test Case: 767 | Input/Output: [[58.8987078354308 69] 127.8987078354308]
Test Case: 768 | Input/Output: [[-40.59492985299045 24] -16.594929852990447]
Test Case: 769 | Input/Output: [[16.121035337769158 93] 109.12103533776916]
Test Case: 770 | Input/Output: [[-92.33732895416654 -9] -101.33732895416654]
Test Case: 771 | Input/Output: [[-62.452568487003646 90] 27.547431512996354]
Test Case: 772 | Input/Output: [[5.260241557612915 -6] -0.7397584423870853]
Test Case: 773 | Input/Output: [[75.27027404548377 -78] -2.7297259545162262]
Test Case: 774 | Input/Output: [[-57.2502961661453 49] -8.250296166145297]
Test Case: 775 | Input/Output: [[22.81856583586898 52] 74.81856583586898]
Test Case: 776 | Input/Output: [[-5.539917696226837 -50] -55.53991769622684]
Test Case: 777 | Input/Output: [[51.940998109934156 34] 85.94099810993416]
Test Case: 778 | Input/Output: [[-31.544318514993392 -25] -56.54431851499339]
Test Case: 779 | Input/Output: [[76.61905120054831 6] 82.61905120054831]
Test Case: 780 | Input/Output: [[27.83369400976663 -26] 1.8336940097666314]
Test Case: 781 | Input/Output: [[-14.283894696289835 -62] -76.28389469628983]
Test Case: 782 | Input/Output: [[43.151314151559234 79] 122.15131415155923]
Test Case: 783 | Input/Output: [[-65.21851893692994 -38] -103.21851893692994]
Test Case: 784 | Input/Output: [[-30.080108904582858 44] 13.919891095417142]
Test Case: 785 | Input/Output: [[-1.6674652117532105 12] 10.33253478824679]
Test Case: 786 | Input/Output: [[-80.28642365168442 -27] -107.28642365168442]
Test Case: 787 | Input/Output: [[34.90005920562132 91] 125.90005920562132]
Test Case: 788 | Input/Output: [[49.34461236440961 59] 108.34461236440961]
Test Case: 789 | Input/Output: [[-71.66744220917913 41] -30.66744220917913]
Test Case: 790 | Input/Output: [[83.56440220221668 -42] 41.564402202216684]
Test Case: 791 | Input/Output: [[40.8574360533145 -24] 16.8574360533145]
Test Case: 792 | Input/Output: [[33.50634548275147 87] 120.50634548275147]
Test Case: 793 | Input/Output: [[54.72438919165509 29] 83.72438919165509]
Test Case: 794 | Input/Output: [[-12.295129602946034 15] 2.7048703970539663]
Test Case: 795 | Input/Output: [[-71.26389961415964 -49] -120.26389961415964]
Test Case: 796 | Input/Output: [[42.6816765141119 52] 94.6816765141119]
Test Case: 797 | Input/Output: [[7.367022312914457 -79] -71.63297768708554]
Test Case: 798 | Input/Output: [[1.3589253949114095 12] 13.35892539491141]
Test Case: 799 | Input/Output: [[-79.46132564491305 -32] -111.46132564491305]
Test Case: 800 | Input/Output: [[81.49126506605862 -7] 74.49126506605862]
Test Case: 801 | Input/Output: [[-71.89137902593802 -36] -107.89137902593802]
Test Case: 802 | Input/Output: [[62.18556498728839 51] 113.18556498728839]
Test Case: 803 | Input/Output: [[68.22613606647863 -48] 20.22613606647863]
Test Case: 804 | Input/Output: [[84.28365270616644 -28] 56.283652706166436]
Test Case: 805 | Input/Output: [[-34.72612012537736 -81] -115.72612012537736]
Test Case: 806 | Input/Output: [[-64.15780521914387 93] 28.842194780856133]
Test Case: 807 | Input/Output: [[-40.66665195230685 -17] -57.66665195230685]
Test Case: 808 | Input/Output: [[6.315193836407104 73] 79.3151938364071]
Test Case: 809 | Input/Output: [[-45.16686049876753 -59] -104.16686049876753]
Test Case: 810 | Input/Output: [[-25.814122456252562 -6] -31.814122456252562]
Test Case: 811 | Input/Output: [[-18.153192081844367 11] -7.153192081844367]
Test Case: 812 | Input/Output: [[67.11683680806678 54] 121.11683680806678]
Test Case: 813 | Input/Output: [[-53.25566891352087 12] -41.25566891352087]
Test Case: 814 | Input/Output: [[-59.822678952152586 -14] -73.82267895215259]
Test Case: 815 | Input/Output: [[-26.164076276250526 57] 30.835923723749474]
Test Case: 816 | Input/Output: [[-22.037499771961876 -50] -72.03749977196188]
Test Case: 817 | Input/Output: [[-15.809209914352621 -7] -22.80920991435262]
Test Case: 818 | Input/Output: [[-31.42199321098707 36] 4.578006789012932]
Test Case: 819 | Input/Output: [[-11.805566080989237 16] 4.194433919010763]
Test Case: 820 | Input/Output: [[67.13795101498303 -25] 42.13795101498303]
Test Case: 821 | Input/Output: [[76.36346625234364 -40] 36.36346625234364]
Test Case: 822 | Input/Output: [[54.89204899717336 47] 101.89204899717336]
Test Case: 823 | Input/Output: [[88.83294722739143 35] 123.83294722739143]
Test Case: 824 | Input/Output: [[92.98031163564883 70] 162.98031163564883]
Test Case: 825 | Input/Output: [[68.76917841924609 -63] 5.769178419246089]
Test Case: 826 | Input/Output: [[-21.34676181519491 -91] -112.34676181519491]
Test Case: 827 | Input/Output: [[9.493225011600146 -45] -35.506774988399854]
Test Case: 828 | Input/Output: [[-32.07275626835113 -6] -38.07275626835113]
Test Case: 829 | Input/Output: [[-97.52426103580711 -100] -197.52426103580711]
Test Case: 830 | Input/Output: [[54.16477400432055 32] 86.16477400432055]
Test Case: 831 | Input/Output: [[68.08163243333374 77] 145.08163243333374]
Test Case: 832 | Input/Output: [[73.0634123630035 86] 159.0634123630035]
Test Case: 833 | Input/Output: [[49.84520447705046 69] 118.84520447705046]
Test Case: 834 | Input/Output: [[-99.82041512444155 94] -5.820415124441553]
Test Case: 835 | Input/Output: [[58.31698621727307 -69] -10.683013782726931]
Test Case: 836 | Input/Output: [[-60.36956285604265 -17] -77.36956285604265]
Test Case: 837 | Input/Output: [[73.84308764954619 74] 147.8430876495462]
Test Case: 838 | Input/Output: [[-43.68470577143777 -58] -101.68470577143776]
Test Case: 839 | Input/Output: [[55.41551891869844 -61] -5.584481081301561]
Test Case: 840 | Input/Output: [[-32.10268205424549 90] 57.89731794575451]
Test Case: 841 | Input/Output: [[-54.63127233610705 7] -47.63127233610705]
Test Case: 842 | Input/Output: [[-73.16603111539592 61] -12.166031115395924]
Test Case: 843 | Input/Output: [[-96.52282537926702 -79] -175.52282537926703]
Test Case: 844 | Input/Output: [[26.492400840262164 -69] -42.507599159737836]
Test Case: 845 | Input/Output: [[-9.591386792768517 -28] -37.59138679276852]
Test Case: 846 | Input/Output: [[69.06562090143672 11] 80.06562090143672]
Test Case: 847 | Input/Output: [[91.4667026921951 -92] -0.5332973078049008]
Test Case: 848 | Input/Output: [[39.924073996835034 70] 109.92407399683503]
Test Case: 849 | Input/Output: [[60.2047585896463 58] 118.2047585896463]
Test Case: 850 | Input/Output: [[-68.37333776292358 54] -14.373337762923583]
Test Case: 851 | Input/Output: [[-11.695685277215588 -93] -104.69568527721559]
Test Case: 852 | Input/Output: [[71.06919144636637 -70] 1.069191446366375]
Test Case: 853 | Input/Output: [[24.48198797483323 46] 70.48198797483323]
Test Case: 854 | Input/Output: [[36.189301703850276 72] 108.18930170385028]
Test Case: 855 | Input/Output: [[60.95898037389259 -51] 9.958980373892587]
Test Case: 856 | Input/Output: [[-98.48076864299887 -11] -109.48076864299887]
Test Case: 857 | Input/Output: [[-38.40393538764402 60] 21.59606461235598]
Test Case: 858 | Input/Output: [[-72.79997983729439 -87] -159.7999798372944]
Test Case: 859 | Input/Output: [[34.99689555375551 54] 88.99689555375551]
Test Case: 860 | Input/Output: [[-92.68335513181083 -1] -93.68335513181083]
Test Case: 861 | Input/Output: [[53.48908144725215 14] 67.48908144725215]
Test Case: 862 | Input/Output: [[87.27765128902448 53] 140.27765128902448]
Test Case: 863 | Input/Output: [[-55.13412009435616 -19] -74.13412009435616]
Test Case: 864 | Input/Output: [[89.48637048055733 -7] 82.48637048055733]
Test Case: 865 | Input/Output: [[-6.11018469922729 -58] -64.11018469922729]
Test Case: 866 | Input/Output: [[58.251273610877604 -19] 39.251273610877604]
Test Case: 867 | Input/Output: [[-46.04126961033186 -38] -84.04126961033185]
Test Case: 868 | Input/Output: [[-64.62761254912564 13] -51.627612549125644]
Test Case: 869 | Input/Output: [[-33.77560746471579 20] -13.77560746471579]
Test Case: 870 | Input/Output: [[-61.945851696424945 73] 11.054148303575055]
Test Case: 871 | Input/Output: [[28.999965345253457 -37] -8.000034654746543]
Test Case: 872 | Input/Output: [[-34.05135925393243 46] 11.948640746067568]
Test Case: 873 | Input/Output: [[42.76945051805768 52] 94.76945051805768]
Test Case: 874 | Input/Output: [[-86.33033898138427 -76] -162.33033898138427]
Test Case: 875 | Input/Output: [[-59.53126430178604 -62] -121.53126430178604]
Test Case: 876 | Input/Output: [[-96.42912007017388 3] -93.42912007017388]
Test Case: 877 | Input/Output: [[-96.60724365891981 -87] -183.6072436589198]
Test Case: 878 | Input/Output: [[-65.56203166304616 42] -23.562031663046156]
Test Case: 879 | Input/Output: [[97.86443273586136 56] 153.86443273586136]
Test Case: 880 | Input/Output: [[-50.41521517895118 -61] -111.41521517895117]
Test Case: 881 | Input/Output: [[-0.07640016080405587 5] 4.923599839195944]
Test Case: 882 | Input/Output: [[-83.07696738938722 -64] -147.07696738938722]
Test Case: 883 | Input/Output: [[-54.42161462257009 -70] -124.42161462257009]
Test Case: 884 | Input/Output: [[-70.16369351591467 -44] -114.16369351591467]
Test Case: 885 | Input/Output: [[-17.250430312235792 13] -4.2504303122357925]
Test Case: 886 | Input/Output: [[73.29250855238107 96] 169.29250855238107]
Test Case: 887 | Input/Output: [[-95.34555700419887 25] -70.34555700419887]
Test Case: 888 | Input/Output: [[-89.66358347169444 99] 9.336416528305563]
Test Case: 889 | Input/Output: [[-53.143737825975904 -74] -127.1437378259759]
Test Case: 890 | Input/Output: [[-91.94177501909246 30] -61.94177501909246]
Test Case: 891 | Input/Output: [[13.207316031196228 -84] -70.79268396880377]
Test Case: 892 | Input/Output: [[23.123732896450846 41] 64.12373289645085]
Test Case: 893 | Input/Output: [[44.24895215929405 -34] 10.24895215929405]
Test Case: 894 | Input/Output: [[31.55847264185695 49] 80.55847264185695]
Test Case: 895 | Input/Output: [[9.4229377739792 28] 37.4229377739792]
Test Case: 896 | Input/Output: [[-4.791596964891312 -82] -86.79159696489131]
Test Case: 897 | Input/Output: [[-9.438053719782829 -50] -59.43805371978283]
Test Case: 898 | Input/Output: [[-48.94297285405567 -67] -115.94297285405567]
Test Case: 899 | Input/Output: [[43.571327963964336 27] 70.57132796396434]
Test Case: 900 | Input/Output: [[-60.45441949619048 78] 17.545580503809518]
Test Case: 901 | Input/Output: [[-75.76503865897479 17] -58.76503865897479]
Test Case: 902 | Input/Output: [[-25.63382020358118 18] -7.63382020358118]
Test Case: 903 | Input/Output: [[-59.595203899262536 -16] -75.59520389926254]
Test Case: 904 | Input/Output: [[-71.50882612881686 70] -1.5088261288168638]
Test Case: 905 | Input/Output: [[-62.00249817527141 61] -1.0024981752714126]
Test Case: 906 | Input/Output: [[-67.91707378501697 32] -35.91707378501697]
Test Case: 907 | Input/Output: [[90.38793413152499 48] 138.387934131525]
Test Case: 908 | Input/Output: [[59.38189342102979 -52] 7.381893421029787]
Test Case: 909 | Input/Output: [[18.493340155814636 34] 52.493340155814636]
Test Case: 910 | Input/Output: [[-99.77701924246796 -24] -123.77701924246796]
Test Case: 911 | Input/Output: [[-30.66968465572782 81] 50.33031534427218]
Test Case: 912 | Input/Output: [[97.18087421948195 -23] 74.18087421948195]
Test Case: 913 | Input/Output: [[-15.347026974217215 -11] -26.347026974217215]
Test Case: 914 | Input/Output: [[41.27530059392808 1] 42.27530059392808]
Test Case: 915 | Input/Output: [[84.26917341592852 3] 87.26917341592852]
Test Case: 916 | Input/Output: [[23.07281540557217 16] 39.07281540557217]
Test Case: 917 | Input/Output: [[98.51159934136712 28] 126.51159934136712]
Test Case: 918 | Input/Output: [[-79.77050063946815 7] -72.77050063946815]
Test Case: 919 | Input/Output: [[-67.7223512753786 15] -52.7223512753786]
Test Case: 920 | Input/Output: [[-88.42593183326746 -61] -149.42593183326744]
Test Case: 921 | Input/Output: [[-55.30611773323315 -30] -85.30611773323315]
Test Case: 922 | Input/Output: [[88.64053552554842 -50] 38.640535525548415]
Test Case: 923 | Input/Output: [[-20.118851929842734 44] 23.881148070157266]
Test Case: 924 | Input/Output: [[-83.19196224156336 6] -77.19196224156336]
Test Case: 925 | Input/Output: [[92.25799588945767 13] 105.25799588945767]
Test Case: 926 | Input/Output: [[32.840509776140834 98] 130.84050977614083]
Test Case: 927 | Input/Output: [[-91.90276801893297 100] 8.097231981067026]
Test Case: 928 | Input/Output: [[-50.82668706947424 44] -6.826687069474239]
Test Case: 929 | Input/Output: [[74.69006502329131 -47] 27.69006502329131]
Test Case: 930 | Input/Output: [[-67.76831303527845 23] -44.76831303527845]
Test Case: 931 | Input/Output: [[37.16341108512077 -63] -25.83658891487923]
Test Case: 932 | Input/Output: [[42.70280763153477 85] 127.70280763153477]
Test Case: 933 | Input/Output: [[-82.51045872259783 -43] -125.51045872259783]
Test Case: 934 | Input/Output: [[63.865655737367234 83] 146.86565573736723]
Test Case: 935 | Input/Output: [[-36.470240703030065 -92] -128.47024070303007]
Test Case: 936 | Input/Output: [[-61.421548409015884 -46] -107.42154840901588]
Test Case: 937 | Input/Output: [[43.476350175487255 34] 77.47635017548726]
Test Case: 938 | Input/Output: [[-72.54874269311011 0] -72.54874269311011]
Test Case: 939 | Input/Output: [[-0.20193212986782783 -52] -52.20193212986783]
Test Case: 940 | Input/Output: [[53.43829882264271 -83] -29.561701177357293]
Test Case: 941 | Input/Output: [[1.9148422421656477 62] 63.91484224216565]
Test Case: 942 | Input/Output: [[39.12644435516813 71] 110.12644435516813]
Test Case: 943 | Input/Output: [[-63.24524986397644 80] 16.75475013602356]
Test Case: 944 | Input/Output: [[-31.856181412084197 82] 50.1438185879158]
Test Case: 945 | Input/Output: [[-98.30481983198133 9] -89.30481983198133]
Test Case: 946 | Input/Output: [[-73.92158227579432 -30] -103.92158227579432]
Test Case: 947 | Input/Output: [[-23.59375109683927 19] -4.59375109683927]
Test Case: 948 | Input/Output: [[-3.828317004563118 70] 66.17168299543688]
Test Case: 949 | Input/Output: [[76.98496237381102 25] 101.98496237381102]
Test Case: 950 | Input/Output: [[68.41200758379398 -26] 42.41200758379398]
Test Case: 951 | Input/Output: [[-93.18658448072665 86] -7.186584480726651]
Test Case: 952 | Input/Output: [[-94.6656723714641 88] -6.6656723714640975]
Test Case: 953 | Input/Output: [[-52.539374121762684 15] -37.539374121762684]
Test Case: 954 | Input/Output: [[48.568190893736016 -74] -25.431809106263984]
Test Case: 955 | Input/Output: [[-36.5066589209027 25] -11.506658920902701]
Test Case: 956 | Input/Output: [[13.763888741118222 -77] -63.23611125888178]
Test Case: 957 | Input/Output: [[81.95005697465808 60] 141.95005697465808]
Test Case: 958 | Input/Output: [[32.37861337053815 -26] 6.378613370538147]
Test Case: 959 | Input/Output: [[12.524827332741538 -70] -57.47517266725846]
Test Case: 960 | Input/Output: [[32.96255838726864 -41] -8.037441612731357]
Test Case: 961 | Input/Output: [[-9.597997810065678 24] 14.402002189934322]
Test Case: 962 | Input/Output: [[97.3716594544855 -63] 34.371659454485496]
Test Case: 963 | Input/Output: [[-89.33763550104099 -38] -127.33763550104099]
Test Case: 964 | Input/Output: [[68.88848845744559 -48] 20.88848845744559]
Test Case: 965 | Input/Output: [[-2.5459699922636787 -23] -25.54596999226368]
Test Case: 966 | Input/Output: [[-31.61926138398718 -61] -92.61926138398718]
Test Case: 967 | Input/Output: [[7.214651216208765 15] 22.214651216208765]
Test Case: 968 | Input/Output: [[8.604904422380883 8] 16.604904422380883]
Test Case: 969 | Input/Output: [[48.745956805393064 65] 113.74595680539306]
Test Case: 970 | Input/Output: [[-71.14932135145513 21] -50.14932135145513]
Test Case: 971 | Input/Output: [[-27.46248835815794 39] 11.537511641842059]
Test Case: 972 | Input/Output: [[-21.758326863108252 -1] -22.758326863108252]
Test Case: 973 | Input/Output: [[-43.4882899757979 60] 16.511710024202102]
Test Case: 974 | Input/Output: [[15.25733496119939 -5] 10.25733496119939]
Test Case: 975 | Input/Output: [[-64.5276307624276 -58] -122.5276307624276]
Test Case: 976 | Input/Output: [[47.534951665251185 -85] -37.465048334748815]
Test Case: 977 | Input/Output: [[-88.21460478721042 30] -58.21460478721042]
Test Case: 978 | Input/Output: [[72.00698367288555 -89] -16.993016327114447]
Test Case: 979 | Input/Output: [[54.325185003411974 25] 79.32518500341197]
Test Case: 980 | Input/Output: [[-25.904582138366678 -89] -114.90458213836668]
Test Case: 981 | Input/Output: [[90.22686422736544 -40] 50.22686422736544]
Test Case: 982 | Input/Output: [[-79.54032897732438 -10] -89.54032897732438]
Test Case: 983 | Input/Output: [[94.23161049909922 38] 132.23161049909922]
Test Case: 984 | Input/Output: [[45.15747689614639 -62] -16.84252310385361]
Test Case: 985 | Input/Output: [[-18.062193778804357 50] 31.937806221195643]
Test Case: 986 | Input/Output: [[39.848216194189035 -61] -21.151783805810965]
Test Case: 987 | Input/Output: [[78.52063409566318 13] 91.52063409566318]
Test Case: 988 | Input/Output: [[99.80742871025993 30] 129.80742871025993]
Test Case: 989 | Input/Output: [[56.41428461789687 -22] 34.41428461789687]
Test Case: 990 | Input/Output: [[-56.77305957950618 45] -11.773059579506182]
Test Case: 991 | Input/Output: [[-33.39494006375561 74] 40.60505993624439]
Test Case: 992 | Input/Output: [[74.10263665143034 -2] 72.10263665143034]
Test Case: 993 | Input/Output: [[35.53844255069498 11] 46.53844255069498]
Test Case: 994 | Input/Output: [[53.65071639347997 -100] -46.34928360652003]
Test Case: 995 | Input/Output: [[-30.352367197847002 -74] -104.352367197847]
Test Case: 996 | Input/Output: [[-89.25474732644723 10] -79.25474732644723]
Test Case: 997 | Input/Output: [[-7.071193303756644 35] 27.928806696243356]
Test Case: 998 | Input/Output: [[10.072975796774756 100] 110.07297579677476]
Test Case: 999 | Input/Output: [[15.866019958005253 -98] -82.13398004199475]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -6 96 96 -72 42 -116 -88 -8 41 -19 18 -101 -69 -43 7 -100
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 66801.74069999998
Test mean error for best: 33.40087
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 
52           
Correct output: -5.4090974816  | Program output: 
41           
Correct output: -27.2127680421 | Program output: 
71           
Correct output: 122.7288713888 | Program output: 
26           
Correct output: 94.6913893946  | Program output: 
79           
Correct output: -14.9157086017 | Program output: 
16           
Correct output: 9.1842992567   | Program output: 
55           
Correct output: 27.1844373898  | Program output: 
-20          
Correct output: -32.7789176398 | Program output: 
-20          
Correct output: 18.9535126473  | Program output: 
-20          
Correct output: -17.3355427007 | Program output: 
8            
Correct output: -19.9068842187 | Program output: 
-20          
Correct output: -82.5342639546 | Program output: 
-20          
Correct output: -0.5071453016  | Program output: 
-12          
Correct output: -65.0013149084 | Program output: 
-20          
Correct output: -85.885174074  | Program output: 
12           
Correct output: 126.9572193111 | Program output: 
91           
Correct output: -41.5110180666 | Program output: 
-20          
Correct output: -19.0067113372 | Program output: 
-20          
Correct output: 53.8417318683  | Program output: 
84           
Correct output: 112.5403599984 | Program output: 
13           
Correct output: 117.0118101936 | Program output: 
70           
Correct output: 25.2929380926  | Program output: 
-20          
Correct output: -119.128542356 | Program output: 
-20          
Correct output: 79.7963324215  | Program output: 
86           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction float_frominteger} {:instruction float_sub} {:instruction integer_max} {:instruction float_add} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction float_mod} {:instruction integer_yank} {:instruction in1} {:instruction integer_flush} {:instruction print_newline} {:instruction float_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction float_min} {:instruction integer_swap} {:instruction 31.304429166648163} {:instruction tag_integer_90} {:instruction float_yankdup} {:instruction float_div} {:instruction float_dup_items} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction float_yankdup} {:instruction float_min} {:instruction float_rot} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_shove} {:instruction float_div} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction 71.15282694582515} {:instruction float_sin} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction -7} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_yank} {:instruction float_mult} {:instruction float_add} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_dup_times} {:instruction tag_integer_46} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_stackdepth} {:instruction 2.3090020481416644} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_max} {:instruction float_yank} {:instruction integer_dup_times} {:instruction 5} {:instruction -20} {:instruction float_dup} {:instruction float_min} {:instruction integer_rot} {:instruction float_dup} {:instruction in2} {:instruction integer_max} {:instruction float_sub} {:instruction print_integer} {:instruction float_sin})
Best program: (float_yank float_frominteger float_sub integer_max float_add float_cos integer_dup_times integer_dup_times integer_shove float_mod integer_yank in1 integer_flush print_newline float_sub integer_rot float_shove float_min integer_swap 31.304429166648163 tag_integer_90 float_yankdup float_div float_dup_items integer_dup integer_stackdepth float_add integer_add in2 float_yankdup float_min float_rot float_pop integer_fromfloat integer_dup_items float_mod integer_dup float_frominteger float_shove float_div integer_mult float_mult integer_div float_frominteger float_frominteger 71.15282694582515 float_sin integer_sub float_mult integer_pop integer_max integer_swap integer_max float_stackdepth integer_stackdepth -7 integer_pop float_shove integer_inc integer_sub float_yank float_mult float_add integer_pop float_flush integer_dup_times tag_integer_46 integer_dup_times float_max float_stackdepth 2.3090020481416644 float_stackdepth float_yankdup float_max float_yank integer_dup_times 5 -20 float_dup float_min integer_rot float_dup in2 integer_max float_sub print_integer float_sin)
Errors: [1.1639 12 46.4091 11 98.2128 12 96.7289 13 15.6914 12 30.9157 12 45.8157 11 47.1844 13 12.7789 13 38.9535 12 25.3355 14 0.0931 13 62.5343 13 11.4929 12 45.0013 13 97.8852 12 35.9572 12 21.511 13 0.9933 13 30.1583 11 99.5404 12 47.0118 12 45.2929 11 99.1285 13 6.2037 12]
Total: 1368.9937
Mean: 27.379873
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 17415.684877099997
Median total errors in population: 25338.0
Error averages by case: (674.8142030999993 12.796 674.1710873000006 12.1 681.4773645999987 12.875 687.0831802999986 13.207 680.3158045000015 12.307 669.2772611000012 12.836 675.5610370999993 12.345 687.6658801000017 12.379 685.7069264000004 13.745 685.158377699999 12.35 665.7646525000002 13.003 680.7231221999994 13.561 701.4509524000022 13.05 671.4873313000004 12.749 691.0396680000003 13.666 688.6653514000019 12.179 693.0740445999982 13.069 685.4136775000009 13.749 688.968451300001 13.704 681.2748174999996 12.848 685.0581106000022 13.066 688.2361642999978 12.92 677.1755725 12.267 711.0996246999989 13.119 682.1452141000009 12.987)
Error minima by case: (0.1639 8 0.7711 1 0.1658 1 25.0 3 0.2724 2 1.9824 2 0.2119 7 0.1835 1 0.2211 8 2.0465 2 0.2246 1 0.0931 9 0.5343 2 0.0257 7 1.8855 8 0.9249 2 9.0 2 3.489 8 0.9395 8 0.1583 8 11.4518 2 22.5928 2 0.1442 2 22.1285 2 0.7963 8)
Average genome size in population (length): 50.122
Average program size in population (points): 51.122
Average percent parens in population: 0.043
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.332
Error (vector) diversity:			 0.355
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1257270
--- Timings ---
Current time: 1529614891044 milliseconds
Total Time:           3.4 seconds
Initialization:       0.1 seconds,  3.4%
Reproduction:         0.6 seconds, 17.2%
Fitness Testing:      2.7 seconds, 79.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 66801.74069999998
Test mean error for best: 33.40087
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 
52           
Correct output: -5.4090974816  | Program output: 
41           
Correct output: -27.2127680421 | Program output: 
71           
Correct output: 122.7288713888 | Program output: 
26           
Correct output: 94.6913893946  | Program output: 
79           
Correct output: -14.9157086017 | Program output: 
16           
Correct output: 9.1842992567   | Program output: 
55           
Correct output: 27.1844373898  | Program output: 
-20          
Correct output: -32.7789176398 | Program output: 
-20          
Correct output: 18.9535126473  | Program output: 
-20          
Correct output: -17.3355427007 | Program output: 
8            
Correct output: -19.9068842187 | Program output: 
-20          
Correct output: -82.5342639546 | Program output: 
-20          
Correct output: -0.5071453016  | Program output: 
-12          
Correct output: -65.0013149084 | Program output: 
-20          
Correct output: -85.885174074  | Program output: 
12           
Correct output: 126.9572193111 | Program output: 
91           
Correct output: -41.5110180666 | Program output: 
-20          
Correct output: -19.0067113372 | Program output: 
-20          
Correct output: 53.8417318683  | Program output: 
84           
Correct output: 112.5403599984 | Program output: 
13           
Correct output: 117.0118101936 | Program output: 
70           
Correct output: 25.2929380926  | Program output: 
-20          
Correct output: -119.128542356 | Program output: 
-20          
Correct output: 79.7963324215  | Program output: 
86           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction float_frominteger} {:instruction float_sub} {:instruction integer_max} {:instruction float_add} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction float_mod} {:instruction integer_yank} {:instruction in1} {:instruction integer_flush} {:instruction print_newline} {:instruction float_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction float_min} {:instruction integer_swap} {:instruction 31.304429166648163} {:instruction tag_integer_90} {:instruction float_yankdup} {:instruction float_div} {:instruction float_dup_items} {:instruction integer_dup} {:instruction integer_stackdepth} {:instruction float_add} {:instruction integer_add} {:instruction in2} {:instruction float_yankdup} {:instruction float_min} {:instruction float_rot} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_dup_items} {:instruction float_mod} {:instruction integer_dup} {:instruction float_frominteger} {:instruction float_shove} {:instruction float_div} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction 71.15282694582515} {:instruction float_sin} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction -7} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_yank} {:instruction float_mult} {:instruction float_add} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_dup_times} {:instruction tag_integer_46} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_stackdepth} {:instruction 2.3090020481416644} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_max} {:instruction float_yank} {:instruction integer_dup_times} {:instruction 5} {:instruction -20} {:instruction float_dup} {:instruction float_min} {:instruction integer_rot} {:instruction float_dup} {:instruction in2} {:instruction integer_max} {:instruction float_sub} {:instruction print_integer} {:instruction float_sin})
Best program: (float_yank float_frominteger float_sub integer_max float_add float_cos integer_dup_times integer_dup_times integer_shove float_mod integer_yank in1 integer_flush print_newline float_sub integer_rot float_shove float_min integer_swap 31.304429166648163 tag_integer_90 float_yankdup float_div float_dup_items integer_dup integer_stackdepth float_add integer_add in2 float_yankdup float_min float_rot float_pop integer_fromfloat integer_dup_items float_mod integer_dup float_frominteger float_shove float_div integer_mult float_mult integer_div float_frominteger float_frominteger 71.15282694582515 float_sin integer_sub float_mult integer_pop integer_max integer_swap integer_max float_stackdepth integer_stackdepth -7 integer_pop float_shove integer_inc integer_sub float_yank float_mult float_add integer_pop float_flush integer_dup_times tag_integer_46 integer_dup_times float_max float_stackdepth 2.3090020481416644 float_stackdepth float_yankdup float_max float_yank integer_dup_times 5 -20 float_dup float_min integer_rot float_dup in2 integer_max float_sub print_integer float_sin)
Errors: [1.1639 12 46.4091 11 98.2128 12 96.7289 13 15.6914 12 30.9157 12 45.8157 11 47.1844 13 12.7789 13 38.9535 12 25.3355 14 0.0931 13 62.5343 13 11.4929 12 45.0013 13 97.8852 12 35.9572 12 21.511 13 0.9933 13 30.1583 11 99.5404 12 47.0118 12 45.2929 11 99.1285 13 6.2037 12]
Total: 1368.9937
Mean: 27.379873
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 6230.630362600006
Median total errors in population: 1663.1518999999998
Error averages by case: (220.76074679999985 11.923 220.59446109999934 9.793 246.43571480000048 10.363 258.0420559999982 11.094 248.2627440000011 10.232 209.0657443000014 10.312 225.25082260000016 12.117 244.46468669999953 10.277 233.22026529999997 12.799 242.33733590000074 10.283 204.76596069999886 10.769 221.1397435999999 12.421 251.7877382999995 10.618 198.18668160000016 11.861 247.44107320000006 12.876 250.02264739999887 10.015 268.63651170000105 10.82 232.39797299999987 12.9 244.01379169999984 12.788 242.60052119999997 12.024 252.7082994999996 10.74 260.6824759000005 10.442 213.47925289999995 10.116 271.3374063999991 10.847 242.29770799999991 12.268)
Error minima by case: (0.1639 8 0.4091 1 0.1658 1 25.0 3 0.2724 2 1.9824 2 0.2119 7 0.1835 1 0.2211 8 1.0465 2 0.2246 1 0.0931 8 0.5343 2 0.0257 7 1.8855 8 0.9249 2 32.5382 2 8.511 8 0.9395 8 1.8417 8 11.4518 2 22.5928 2 0.1442 2 21.1285 2 1.7963 8)
Average genome size in population (length): 57.927
Average program size in population (points): 58.927
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.47
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.285
Error (vector) diversity:			 0.3
Behavioral diversity:				 0.33
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2709584
--- Timings ---
Current time: 1529614896613 milliseconds
Total Time:           9.3 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.8 seconds, 41.0%
Fitness Testing:      4.5 seconds, 48.2%
Report:               0.9 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 66399.7407
Test mean error for best: 33.19987
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 52            
Correct output: -5.4090974816  | Program output: 41            
Correct output: -27.2127680421 | Program output: 71            
Correct output: 122.7288713888 | Program output: 26            
Correct output: 94.6913893946  | Program output: 79            
Correct output: -14.9157086017 | Program output: 16            
Correct output: 9.1842992567   | Program output: 55            
Correct output: 27.1844373898  | Program output: -20           
Correct output: -32.7789176398 | Program output: -20           
Correct output: 18.9535126473  | Program output: -20           
Correct output: -17.3355427007 | Program output: 8             
Correct output: -19.9068842187 | Program output: -20           
Correct output: -82.5342639546 | Program output: -20           
Correct output: -0.5071453016  | Program output: -12           
Correct output: -65.0013149084 | Program output: -20           
Correct output: -85.885174074  | Program output: 12            
Correct output: 126.9572193111 | Program output: 91            
Correct output: -41.5110180666 | Program output: -20           
Correct output: -19.0067113372 | Program output: -20           
Correct output: 53.8417318683  | Program output: 84            
Correct output: 112.5403599984 | Program output: 13            
Correct output: 117.0118101936 | Program output: 70            
Correct output: 25.2929380926  | Program output: -20           
Correct output: -119.128542356 | Program output: -20           
Correct output: 79.7963324215  | Program output: 86            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_rot} {:instruction float_mod} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_min} {:instruction float_inc} {:instruction float_div} {:instruction float_yank} {:instruction integer_mult} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_mult} {:instruction float_frominteger} {:instruction integer_pop} {:instruction integer_max} {:instruction in1} {:instruction float_shove} {:instruction float_shove} {:instruction float_shove} {:instruction integer_rot} {:instruction float_dup} {:instruction float_flush} {:instruction float_swap} {:instruction -36} {:instruction tagged_234} {:instruction float_sin} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_yankdup} {:instruction float_frominteger} {:instruction integer_mult} {:instruction float_dup} {:instruction print_integer} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_sub} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_tan} {:instruction float_shove} {:instruction float_div} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction 71.15282694582515} {:instruction float_sin} {:instruction integer_sub} {:instruction float_mult} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_swap} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_stackdepth} {:instruction -7} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_yank} {:instruction float_mult} {:instruction float_add} {:instruction integer_pop} {:instruction float_flush} {:instruction integer_dup_times} {:instruction tag_integer_46} {:instruction integer_dup_times} {:instruction float_max} {:instruction float_stackdepth} {:instruction 2.3090020481416644} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction float_max} {:instruction float_yank} {:instruction integer_dup_times} {:instruction 5} {:instruction -20} {:instruction float_dup} {:instruction float_min} {:instruction integer_rot} {:instruction float_dup} {:instruction in2} {:instruction integer_max} {:instruction float_sub} {:instruction print_integer} {:instruction float_sin})
Best program: (float_max integer_rot float_mod integer_shove float_dup_times float_flush integer_min float_inc float_div float_yank integer_mult integer_dec float_rot integer_mult float_frominteger integer_pop integer_max in1 float_shove float_shove float_shove integer_rot float_dup float_flush float_swap -36 tagged_234 float_sin integer_inc integer_pop float_yankdup float_frominteger integer_mult float_dup print_integer float_dup_times integer_shove float_sub integer_sub integer_shove float_tan float_shove float_div integer_mult float_mult integer_div float_frominteger float_frominteger 71.15282694582515 float_sin integer_sub float_mult integer_pop integer_max integer_swap integer_max float_stackdepth integer_stackdepth -7 integer_pop float_shove integer_inc integer_sub float_yank float_mult float_add integer_pop float_flush integer_dup_times tag_integer_46 integer_dup_times float_max float_stackdepth 2.3090020481416644 float_stackdepth float_yankdup float_max float_yank integer_dup_times 5 -20 float_dup float_min integer_rot float_dup in2 integer_max float_sub print_integer float_sin)
Errors: [1.1639 12 46.4091 11 98.2128 12 96.7289 13 15.6914 12 30.9157 12 45.8157 11 47.1844 13 12.7789 12 38.9535 12 25.3355 14 0.0931 12 62.5343 12 11.4929 11 45.0013 12 97.8852 12 35.9572 12 21.511 12 0.9933 12 30.1583 11 99.5404 12 47.0118 12 45.2929 11 99.1285 12 6.2037 12]
Total: 1360.9937
Mean: 27.219873
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4063.957874600005
Median total errors in population: 1486.4113000000002
Error averages by case: (121.80291009999978 11.71 146.04028200000002 9.46 187.82163960000082 10.095 178.9681096999982 10.976 139.3194946999996 10.095 128.60368159999902 10.123 149.22881860000206 11.646 184.57736829999905 10.143 149.23590049999896 12.337 183.68431340000177 10.297 108.92381980000059 11.258 137.17658029999927 12.034 137.49668699999967 10.379 115.3871851999992 11.446 146.71227339999876 12.427 174.76208729999883 10.067 156.75808780000122 10.486 139.93518380000052 12.554 174.4595163000007 12.105 147.7142879 11.241 177.4386628999991 10.377 158.17550549999925 10.212 139.83248540000017 10.016 172.1542539999999 10.559 133.74773949999914 11.958)
Error minima by case: (0.1639 4 0.7711 1 0.7623 1 22.4704 3 2.8745 2 10.2777 2 0.6961 9 3.8363 1 6.157 9 2.0465 2 4.4704 1 0.0931 9 0.5343 2 0.0257 7 19.9987 8 8.4704 2 35.1403 2 2.5752 9 0.9933 10 16.5151 9 9.4704 2 25.1949 2 1.9448 2 47.0 2 3.2037 9)
Average genome size in population (length): 50.848
Average program size in population (points): 51.848
Average percent parens in population: 0.026
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.893
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.653
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.653
Total error diversity:				 0.125
Error (vector) diversity:			 0.132
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3982134
--- Timings ---
Current time: 1529614899900 milliseconds
Total Time:          12.6 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.2 seconds, 41.5%
Fitness Testing:      5.8 seconds, 46.2%
Report:               1.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 69019.41830000002
Test mean error for best: 34.50971
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0          
Correct output: -5.4090974816  | Program output: 31.0          
Correct output: -27.2127680421 | Program output: 1.0           
Correct output: 122.7288713888 | Program output: 20.0          
Correct output: 94.6913893946  | Program output: 72.0          
Correct output: -14.9157086017 | Program output: 8.0           
Correct output: 9.1842992567   | Program output: 17.0          
Correct output: 27.1844373898  | Program output: 0.0           
Correct output: -32.7789176398 | Program output: -68.0         
Correct output: 18.9535126473  | Program output: -6.0          
Correct output: -17.3355427007 | Program output: 0.0           
Correct output: -19.9068842187 | Program output: -26.0         
Correct output: -82.5342639546 | Program output: -9.0          
Correct output: -0.5071453016  | Program output: 0.0           
Correct output: -65.0013149084 | Program output: -13.0         
Correct output: -85.885174074  | Program output: 0.0           
Correct output: 126.9572193111 | Program output: 72.0          
Correct output: -41.5110180666 | Program output: -56.0         
Correct output: -19.0067113372 | Program output: -21.0         
Correct output: 53.8417318683  | Program output: 72.0          
Correct output: 112.5403599984 | Program output: 7.0           
Correct output: 117.0118101936 | Program output: 2.0           
Correct output: 25.2929380926  | Program output: -12.0         
Correct output: -119.128542356 | Program output: -26.0         
Correct output: 79.7963324215  | Program output: 72.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_mod} {:instruction tag_float_179} {:instruction integer_rot} {:instruction float_dup_items} {:instruction integer_mult} {:instruction -53.38621896094382} {:instruction integer_min})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 float_dec integer_dup_items integer_rot float_mod tag_float_179 integer_rot float_dup_items integer_mult -53.38621896094382 integer_min)
Errors: [30.8361 10 36.4091 11 28.2128 12 102.7289 12 22.6914 12 22.9157 12 7.8157 11 27.1844 12 35.2211 12 24.9535 12 17.3355 12 6.0931 11 73.5343 12 0.5071 10 52.0013 10 85.8852 11 54.9572 12 14.489 11 1.9933 11 18.1583 12 105.5404 12 115.0118 12 37.2929 11 93.1285 12 7.7963 11]
Total: 1308.6929
Mean: 26.173859
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 4985.541563800017
Median total errors in population: 1474.4113000000002
Error averages by case: (148.97041090000033 11.617 181.59757309999924 11.302 225.84428450000095 11.983 226.47409079999707 12.597 164.19400460000065 12.009 167.9218868000008 12.033 182.08423620000286 11.249 211.47976679999888 12.135 181.62517269999987 12.591 207.8741129000024 12.133 156.3049925999988 13.152 171.28884909999965 12.074 182.4793153999994 12.566 155.71549390000013 11.268 185.3775178 12.084 226.03349949999748 11.96 182.09832390000187 12.514 176.73058720000034 12.328 196.12446870000042 12.106 173.16459400000005 11.246 227.78357529999852 12.015 189.53649939999917 12.152 181.97048780000037 11.921 226.14857709999905 12.418 155.20224279999996 12.064)
Error minima by case: (0.1639 10 3.9266 1 6.2128 1 2.2711 3 14.3086 2 6.0843 2 4.1843 9 17.1844 2 6.157 11 8.9535 2 3.6645 2 0.0931 9 0.5243 2 0.4929 9 18.9987 8 9.4071 2 34.0428 2 2.5752 9 0.9933 10 18.1583 9 0.4596 2 42.0118 2 15.2929 2 23.8363 2 2.2037 9)
Average genome size in population (length): 50.381
Average program size in population (points): 51.381
Average percent parens in population: 0.025
Minimum age in population: 3.0
Maximum age in population: 5.75
Average age in population: 4.27825
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.658
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.658
Total error diversity:				 0.103
Error (vector) diversity:			 0.112
Behavioral diversity:				 0.128
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5242809
--- Timings ---
Current time: 1529614903056 milliseconds
Total Time:          15.9 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.8 seconds, 42.6%
Fitness Testing:      7.1 seconds, 44.5%
Report:               2.0 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 68540.63930000004
Test mean error for best: 34.27032
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.052        
Correct output: -5.4090974816  | Program output: 31.041        
Correct output: -27.2127680421 | Program output: 1.071         
Correct output: 122.7288713888 | Program output: 20.026        
Correct output: 94.6913893946  | Program output: 72.079        
Correct output: -14.9157086017 | Program output: 8.016         
Correct output: 9.1842992567   | Program output: 17.055        
Correct output: 27.1844373898  | Program output: 0.00          
Correct output: -32.7789176398 | Program output: -68.00        
Correct output: 18.9535126473  | Program output: -6.00         
Correct output: -17.3355427007 | Program output: 0.08          
Correct output: -19.9068842187 | Program output: -26.00        
Correct output: -82.5342639546 | Program output: -9.00         
Correct output: -0.5071453016  | Program output: 0.00          
Correct output: -65.0013149084 | Program output: -13.00        
Correct output: -85.885174074  | Program output: 0.012         
Correct output: 126.9572193111 | Program output: 72.091        
Correct output: -41.5110180666 | Program output: -56.00        
Correct output: -19.0067113372 | Program output: -21.00        
Correct output: 53.8417318683  | Program output: 72.084        
Correct output: 112.5403599984 | Program output: 7.013         
Correct output: 117.0118101936 | Program output: 2.070         
Correct output: 25.2929380926  | Program output: -12.00        
Correct output: -119.128542356 | Program output: -26.00        
Correct output: 79.7963324215  | Program output: 72.086        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction tag_float_115} {:instruction float_shove} {:instruction tag_integer_84} {:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_dup_items} {:instruction float_add} {:instruction float_pop} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_rot} {:instruction print_float} {:instruction float_yankdup} {:instruction float_yank} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction integer_add} {:instruction float_pop} {:instruction float_div} {:instruction integer_mult} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_dup_items} {:instruction float_sin} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_yank} {:instruction float_dup_items} {:instruction float_cos} {:instruction tag_float_164} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_div} {:instruction float_cos} {:instruction integer_stackdepth} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_tan} {:instruction float_yank} {:instruction integer_min} {:instruction tagged_527} {:instruction float_stackdepth} {:instruction float_dup} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_max} {:instruction print_float} {:instruction integer_swap} {:instruction tagged_902} {:instruction integer_yankdup} {:instruction print_integer} {:instruction 3} {:instruction integer_flush} {:instruction float_mult} {:instruction print_integer})
Best program: (integer_inc integer_shove integer_dup_times integer_dup_times tag_float_115 float_shove tag_integer_84 36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float integer_max float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_dup_items float_add float_pop float_dec float_dup_times float_rot print_float float_yankdup float_yank float_dup integer_stackdepth integer_add float_pop float_div integer_mult integer_rot integer_dup integer_dup integer_div integer_mult integer_dup_items float_sin float_flush float_yankdup integer_yank float_dup_items float_cos tag_float_164 integer_dec integer_fromfloat in2 float_div float_cos integer_stackdepth float_max integer_dup_times float_tan float_yank integer_min tagged_527 float_stackdepth float_dup print_float integer_fromfloat float_tan integer_max print_float integer_swap tagged_902 integer_yankdup print_integer 3 integer_flush float_mult print_integer)
Errors: [30.7841 9 36.4501 9 28.2838 11 102.7029 11 22.6124 11 22.9317 11 7.8707 10 27.1844 12 35.2211 12 24.9535 12 17.4155 12 6.0931 11 73.5343 12 0.5071 9 52.0013 10 85.8972 11 54.8662 10 14.489 10 1.9933 10 18.2423 11 105.5274 12 114.9418 11 37.2929 11 93.1285 12 7.7103 10]
Total: 1292.6349
Mean: 25.852697
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4297.617350000012
Median total errors in population: 1437.5073000000004
Error averages by case: (119.61922889999991 11.663 151.62225620000027 11.381 195.30642880000082 12.058 200.58567499999708 12.59 136.86019259999958 11.997 138.47787759999952 12.251 151.66869560000245 11.175 162.15779879999863 12.381 152.756075300002 12.844 155.79322490000214 12.09 123.46823170000064 13.18 141.39077960000023 12.537 188.0729429999994 13.188 131.0230088000003 11.617 176.27793000000227 12.536 195.48789459999804 12.13 155.96248520000168 12.793 157.63736289999915 12.624 146.08564359999946 12.606 143.92591279999962 11.25 200.14986199999873 12.142 163.5663933999987 12.438 154.91648330000032 12.167 221.65360399999847 12.745 126.7363613999988 12.032)
Error minima by case: (0.1639 9 3.9266 2 24.0754 2 3.2711 3 3.3737 2 13.9157 2 3.1247 7 2.1844 2 12.7789 10 6.0465 2 8.0 2 0.0931 8 0.5083 2 0.4929 8 19.9987 8 9.2187 2 28.8921 3 14.489 9 0.9933 10 18.1583 9 0.4596 3 18.9467 2 0.2929 2 49.0 3 0.7963 8)
Average genome size in population (length): 65.481
Average program size in population (points): 66.481
Average percent parens in population: 0.018
Minimum age in population: 4.0
Maximum age in population: 7.375
Average age in population: 5.713625
Median age in population: 5.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 69
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 69
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.128
Error (vector) diversity:			 0.136
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6881559
--- Timings ---
Current time: 1529614907022 milliseconds
Total Time:          19.6 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.5 seconds, 43.3%
Fitness Testing:      8.7 seconds, 44.4%
Report:               2.3 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 72186.28280000002
Test mean error for best: 36.09314
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0768549
   
Correct output: -5.4090974816  | Program output: 31.01508738
  
Correct output: -27.2127680421 | Program output: 1.01204968
   
Correct output: 122.7288713888 | Program output: 20.01722123
  
Correct output: 94.6913893946  | Program output: 72.02360023976

Correct output: -14.9157086017 | Program output: 8.02817913
   
Correct output: 9.1842992567   | Program output: 17.0695052
   
Correct output: 27.1844373898  | Program output: 0.01
         
Correct output: -32.7789176398 | Program output: -68.01
       
Correct output: 18.9535126473  | Program output: -6.01
        
Correct output: -17.3355427007 | Program output: 0.01597885
   
Correct output: -19.9068842187 | Program output: -26.01
       
Correct output: -82.5342639546 | Program output: -9.01
        
Correct output: -0.5071453016  | Program output: 0.01
         
Correct output: -65.0013149084 | Program output: -13.01
       
Correct output: -85.885174074  | Program output: 0.0286419
    
Correct output: 126.9572193111 | Program output: 72.0667588
   
Correct output: -41.5110180666 | Program output: -56.01
       
Correct output: -19.0067113372 | Program output: -21.01
       
Correct output: 53.8417318683  | Program output: 72.0716181
   
Correct output: 112.5403599984 | Program output: 7.0926710
    
Correct output: 117.0118101936 | Program output: 2.051819267
  
Correct output: 25.2929380926  | Program output: -12.01
       
Correct output: -119.128542356 | Program output: -26.01
       
Correct output: 79.7963324215  | Program output: 72.0102733583

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_swap} {:instruction print_newline} {:instruction float_shove} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_stackdepth} {:instruction float_dec} {:instruction float_rot} {:instruction float_shove} {:instruction float_min} {:instruction integer_div} {:instruction float_rot} {:instruction integer_rot} {:instruction 76} {:instruction float_yank} {:instruction float_dup_items} {:instruction integer_yank} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times integer_stackdepth integer_div float_swap print_newline float_shove float_min integer_stackdepth integer_stackdepth float_dec float_rot float_shove float_min integer_div float_rot integer_rot 76 float_yank float_dup_items integer_yank float_sub)
Errors: [30.7592 7 36.4242 9 28.2248 11 102.7117 11 22.6678 11 22.9439 12 7.8852 10 27.1744 12 35.2311 11 24.9635 11 17.3515 12 6.1031 10 73.5243 12 0.5171 9 51.9913 10 85.9138 11 54.8905 12 14.499 10 2.0033 10 18.2299 9 105.4477 12 114.96 9 37.3029 11 93.1185 12 7.7861 11]
Total: 1287.6248
Mean: 25.752497
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3520.9504760000004
Median total errors in population: 1368.9937
Error averages by case: (84.3389642999997 11.833 120.3211091000014 11.113 161.84343869999955 12.091 169.315310299998 12.88 99.10522449999948 12.008 106.56688569999865 12.106 118.1066513000022 11.076 140.37734189999867 12.724 119.48144280000125 12.519 133.71312880000215 12.058 92.99767140000074 13.576 106.79751819999919 12.361 160.8943149999994 12.596 108.26253809999886 11.333 146.0473368000022 12.285 166.756920599999 11.967 119.97384270000131 12.238 124.53764489999914 12.345 109.07810380000063 12.369 108.96270389999901 11.242 170.22286819999883 12.154 131.1618654999968 12.218 136.87947760000034 11.471 192.63074749999896 12.451 89.58642439999889 11.977)
Error minima by case: (0.1639 7 4.4091 3 26.2128 3 3.2711 5 10.6914 4 13.9157 3 0.8157 8 2.1844 4 0.2211 10 6.0465 4 8.0 3 0.0931 9 0.5343 3 0.1658 9 0.9987 9 12.0 3 30.9572 5 0.489 9 0.0067 10 0.1583 9 0.4596 5 24.9882 4 0.2929 4 49.0 4 0.2037 9)
Average genome size in population (length): 76.814
Average program size in population (points): 77.814
Average percent parens in population: 0.014
Minimum age in population: 5.0
Maximum age in population: 9.0625
Average age in population: 7.173375
Median age in population: 7.21875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.083
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.098
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8803037
--- Timings ---
Current time: 1529614911442 milliseconds
Total Time:          23.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.9 seconds, 41.6%
Fitness Testing:     10.8 seconds, 45.4%
Report:               3.0 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 72186.28280000002
Test mean error for best: 36.09314
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0768549
   
Correct output: -5.4090974816  | Program output: 31.01508738
  
Correct output: -27.2127680421 | Program output: 1.01204968
   
Correct output: 122.7288713888 | Program output: 20.01722123
  
Correct output: 94.6913893946  | Program output: 72.02360023976

Correct output: -14.9157086017 | Program output: 8.02817913
   
Correct output: 9.1842992567   | Program output: 17.0695052
   
Correct output: 27.1844373898  | Program output: 0.01
         
Correct output: -32.7789176398 | Program output: -68.01
       
Correct output: 18.9535126473  | Program output: -6.01
        
Correct output: -17.3355427007 | Program output: 0.01597885
   
Correct output: -19.9068842187 | Program output: -26.01
       
Correct output: -82.5342639546 | Program output: -9.01
        
Correct output: -0.5071453016  | Program output: 0.01
         
Correct output: -65.0013149084 | Program output: -13.01
       
Correct output: -85.885174074  | Program output: 0.0286419
    
Correct output: 126.9572193111 | Program output: 72.0667588
   
Correct output: -41.5110180666 | Program output: -56.01
       
Correct output: -19.0067113372 | Program output: -21.01
       
Correct output: 53.8417318683  | Program output: 72.0716181
   
Correct output: 112.5403599984 | Program output: 7.0926710
    
Correct output: 117.0118101936 | Program output: 2.051819267
  
Correct output: 25.2929380926  | Program output: -12.01
       
Correct output: -119.128542356 | Program output: -26.01
       
Correct output: 79.7963324215  | Program output: 72.0102733583

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_swap} {:instruction print_newline} {:instruction float_shove} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_stackdepth} {:instruction float_flush} {:instruction float_rot})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times integer_stackdepth integer_div float_swap print_newline float_shove float_min integer_stackdepth integer_stackdepth float_flush float_rot)
Errors: [30.7592 7 36.4242 9 28.2248 11 102.7117 11 22.6678 11 22.9439 12 7.8852 10 27.1744 12 35.2311 11 24.9635 11 17.3515 12 6.1031 10 73.5243 12 0.5171 9 51.9913 10 85.9138 11 54.8905 12 14.499 10 2.0033 10 18.2299 9 105.4477 12 114.96 9 37.3029 11 93.1185 12 7.7861 11]
Total: 1287.6248
Mean: 25.752497
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 4512.6236144999975
Median total errors in population: 1360.9937
Error averages by case: (132.5442325000001 11.409 157.12399629999956 11.085 183.35166230000016 12.116 207.3504634999979 12.687 139.57597280000016 12.024 144.69235879999985 12.105 148.24035590000184 11.108 179.91830519999866 12.585 164.88395460000075 12.261 174.72681640000218 12.058 138.1064289000001 13.253 149.48770829999896 11.875 201.99435549999933 12.283 151.60125929999998 10.848 186.654684200002 11.626 202.11791799999864 11.778 161.61891040000123 12.119 163.24679269999976 11.868 149.78513440000089 11.848 144.45891319999993 11.479 209.15772479999862 12.223 185.0199605999995 12.127 180.3469307000004 11.302 229.09320829999902 12.252 129.48256689999977 11.724)
Error minima by case: (0.1639 7 3.7536 4 7.2128 4 3.2711 5 15.6124 4 0.0843 4 4.1843 9 17.8156 5 0.2211 10 13.9535 5 2.3355 3 0.0931 8 0.5343 5 0.4929 8 15.0013 9 12.0 4 35.8662 5 8.489 9 0.0033 8 2.1583 9 0.4596 5 44.705 4 19.7071 5 69.1285 6 3.2037 9)
Average genome size in population (length): 65.607
Average program size in population (points): 66.607
Average percent parens in population: 0.019
Minimum age in population: 6.25
Maximum age in population: 10.53125
Average age in population: 8.6666875
Median age in population: 8.71875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 83
Genome diversity (% unique Plush genomes):	 0.73
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.73
Total error diversity:				 0.076
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 10444098
--- Timings ---
Current time: 1529614915226 milliseconds
Total Time:          27.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.4 seconds, 40.8%
Fitness Testing:     12.6 seconds, 45.1%
Report:               3.8 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 71958.28280000002
Test mean error for best: 35.97914
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0768549    
Correct output: -5.4090974816  | Program output: 31.01508738   
Correct output: -27.2127680421 | Program output: 1.01204968    
Correct output: 122.7288713888 | Program output: 20.01722123   
Correct output: 94.6913893946  | Program output: 72.02360023976
Correct output: -14.9157086017 | Program output: 8.02817913    
Correct output: 9.1842992567   | Program output: 17.0695052    
Correct output: 27.1844373898  | Program output: 0.01          
Correct output: -32.7789176398 | Program output: -68.01        
Correct output: 18.9535126473  | Program output: -6.01         
Correct output: -17.3355427007 | Program output: 0.01597885    
Correct output: -19.9068842187 | Program output: -26.01        
Correct output: -82.5342639546 | Program output: -9.01         
Correct output: -0.5071453016  | Program output: 0.01          
Correct output: -65.0013149084 | Program output: -13.01        
Correct output: -85.885174074  | Program output: 0.0286419     
Correct output: 126.9572193111 | Program output: 72.0667588    
Correct output: -41.5110180666 | Program output: -56.01        
Correct output: -19.0067113372 | Program output: -21.01        
Correct output: 53.8417318683  | Program output: 72.0716181    
Correct output: 112.5403599984 | Program output: 7.0926710     
Correct output: 117.0118101936 | Program output: 2.051819267   
Correct output: 25.2929380926  | Program output: -12.01        
Correct output: -119.128542356 | Program output: -26.01        
Correct output: 79.7963324215  | Program output: 72.0102733583 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction integer_mult} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup integer_mult integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap)
Errors: [30.7592 7 36.4242 9 28.2248 10 102.7117 11 22.6678 10 22.9439 11 7.8852 10 27.1744 12 35.2311 11 24.9635 11 17.3515 11 6.1031 10 73.5243 12 0.5171 9 51.9913 10 85.9138 11 54.8905 12 14.499 10 2.0033 10 18.2299 9 105.4477 12 114.96 8 37.3029 11 93.1185 12 7.7861 11]
Total: 1282.6248
Mean: 25.652496
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3096.7574455000076
Median total errors in population: 1308.6929
Error averages by case: (94.06622260000049 10.206 102.83065990000058 10.633 103.0350247999993 11.682 161.48620280000043 11.848 90.80988579999992 11.721 89.45217569999974 11.708 80.80646510000075 10.971 111.35396589999958 12.102 112.10800319999949 11.852 107.67093380000115 11.788 84.45164400000057 12.227 88.38787949999872 10.944 145.17652129999965 12.072 83.0227831000003 9.89 126.71044360000094 10.387 149.2349911000003 11.197 120.76894080000059 11.7 96.8457132000003 10.915 88.21775920000006 10.897 86.9691661999998 11.505 163.97639469999905 12.043 165.9230995999991 11.62 114.22465229999975 11.161 167.5099971000004 12.043 77.67592020000079 10.93)
Error minima by case: (0.1639 7 5.4091 8 7.2128 9 50.4221 10 15.6124 10 5.0843 9 5.8157 9 8.969 10 0.2211 10 13.9535 10 2.6645 10 0.0931 9 1.5243 10 0.4929 7 2.189 7 23.0728 9 35.8662 10 4.501 9 0.0067 9 2.1583 9 17.4596 10 44.705 8 10.8605 10 56.3162 10 5.2037 9)
Average genome size in population (length): 45.048
Average program size in population (points): 46.048
Average percent parens in population: 0.027
Minimum age in population: 7.25
Maximum age in population: 12.015625
Average age in population: 9.942578125
Median age in population: 10.015625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 123
Genome diversity (% unique Plush genomes):	 0.571
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 123
Syntactic diversity (% unique Push programs):	 0.571
Total error diversity:				 0.102
Error (vector) diversity:			 0.104
Behavioral diversity:				 0.107
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 11571173
--- Timings ---
Current time: 1529614918268 milliseconds
Total Time:          31.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.7 seconds, 41.0%
Fitness Testing:     13.8 seconds, 44.6%
Report:               4.4 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 71728.61040000005
Test mean error for best: 35.86431
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.07685107   
Correct output: -5.4090974816  | Program output: 31.01508785   
Correct output: -27.2127680421 | Program output: 1.012049145   
Correct output: 122.7288713888 | Program output: 20.01722155   
Correct output: 94.6913893946  | Program output: 72.023600239161
Correct output: -14.9157086017 | Program output: 8.02817935    
Correct output: 9.1842992567   | Program output: 17.06950113   
Correct output: 27.1844373898  | Program output: 0.0153        
Correct output: -32.7789176398 | Program output: -68.0153      
Correct output: 18.9535126473  | Program output: -6.0153       
Correct output: -17.3355427007 | Program output: 0.015978819   
Correct output: -19.9068842187 | Program output: -26.0153      
Correct output: -82.5342639546 | Program output: -9.0153       
Correct output: -0.5071453016  | Program output: 0.0153        
Correct output: -65.0013149084 | Program output: -13.0153      
Correct output: -85.885174074  | Program output: 0.02864127    
Correct output: 126.9572193111 | Program output: 72.06675185   
Correct output: -41.5110180666 | Program output: -56.0153      
Correct output: -19.0067113372 | Program output: -21.0153      
Correct output: 53.8417318683  | Program output: 72.07161171   
Correct output: 112.5403599984 | Program output: 7.0926729     
Correct output: 117.0118101936 | Program output: 2.0518192143  
Correct output: 25.2929380926  | Program output: -12.0153      
Correct output: -119.128542356 | Program output: -26.0153      
Correct output: 79.7963324215  | Program output: 72.01027335175
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 44.559504711189845 float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_swap)
Errors: [30.7592 9 36.4242 9 28.2248 10 102.7116 11 22.6678 11 22.9439 12 7.8852 11 27.1691 11 35.2364 10 24.9688 10 17.3515 12 6.1084 10 73.519 11 0.5224 7 51.986 10 85.9138 10 54.8905 11 14.5043 10 2.0086 9 18.2299 10 105.4477 12 114.96 8 37.3082 11 93.1132 10 7.7861 10]
Total: 1277.6406000000002
Mean: 25.552813
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3457.5355070000146
Median total errors in population: 1293.7229
Error averages by case: (114.51861830000094 9.945 121.32567389999988 10.304 114.27460700000054 11.442 177.9772010000023 11.612 108.61255969999989 11.622 107.08006280000086 11.51 96.8743937000005 11.021 119.51384550000026 12.109 124.58430020000024 11.708 117.33705760000038 11.622 102.34606380000042 12.223 100.44259119999856 10.743 158.26321429999987 12.116 93.39072249999987 9.499 138.30301299999985 10.316 164.49520290000046 11.343 139.62971049999905 11.442 108.09121400000018 10.574 99.3226009999993 10.547 103.94979560000027 11.201 181.22820749999892 12.213 185.1110989999992 11.173 124.82035339999919 11.282 179.5721539000008 12.025 96.01624470000102 10.863)
Error minima by case: (0.1739 7 4.3991 6 26.2028 5 42.2166 6 14.1791 5 13.9057 5 0.8257 8 8.8266 5 0.2211 9 13.9535 6 16.2555 5 0.1031 9 1.5243 4 0.4929 7 1.0087 7 84.8732 5 35.8662 5 0.499 9 0.0033 8 0.1683 8 32.028 5 36.4995 5 10.7181 5 70.1185 7 0.2137 9)
Average genome size in population (length): 56.231
Average program size in population (points): 57.231
Average percent parens in population: 0.023
Minimum age in population: 8.28125
Maximum age in population: 13.40625
Average age in population: 11.24140625
Median age in population: 11.2734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 161
Genome diversity (% unique Plush genomes):	 0.644
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 161
Syntactic diversity (% unique Push programs):	 0.644
Total error diversity:				 0.183
Error (vector) diversity:			 0.194
Behavioral diversity:				 0.196
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12979406
--- Timings ---
Current time: 1529614921900 milliseconds
Total Time:          34.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.2 seconds, 41.1%
Fitness Testing:     15.4 seconds, 44.5%
Report:               4.9 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 71702.63550000002
Test mean error for best: 35.85132
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0768551    
Correct output: -5.4090974816  | Program output: 31.01508740   
Correct output: -27.2127680421 | Program output: 1.01204970    
Correct output: 122.7288713888 | Program output: 20.01722125   
Correct output: 94.6913893946  | Program output: 72.02360023978
Correct output: -14.9157086017 | Program output: 8.02817915    
Correct output: 9.1842992567   | Program output: 17.0695054    
Correct output: 27.1844373898  | Program output: 0.0151        
Correct output: -32.7789176398 | Program output: -68.0151      
Correct output: 18.9535126473  | Program output: -6.0151       
Correct output: -17.3355427007 | Program output: 0.01597887    
Correct output: -19.9068842187 | Program output: -26.0151      
Correct output: -82.5342639546 | Program output: -9.0151       
Correct output: -0.5071453016  | Program output: 0.0151        
Correct output: -65.0013149084 | Program output: -13.0151      
Correct output: -85.885174074  | Program output: 0.02864111    
Correct output: 126.9572193111 | Program output: 72.0667590    
Correct output: -41.5110180666 | Program output: -56.0151      
Correct output: -19.0067113372 | Program output: -21.0151      
Correct output: 53.8417318683  | Program output: 72.0716183    
Correct output: 112.5403599984 | Program output: 7.0926712     
Correct output: 117.0118101936 | Program output: 2.051819269   
Correct output: 25.2929380926  | Program output: -12.0151      
Correct output: -119.128542356 | Program output: -26.0151      
Correct output: 79.7963324215  | Program output: 72.0102733585 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction float_yank} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc float_yank float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times)
Errors: [30.7592 9 36.4242 9 28.2248 10 102.7117 11 22.6678 11 22.9439 11 7.8852 10 27.1693 12 35.2362 11 24.9686 10 17.3515 10 6.1082 10 73.5192 11 0.5222 7 51.9862 9 85.9138 11 54.8905 11 14.5041 10 2.0084 10 18.2299 8 105.4477 12 114.96 8 37.308 11 93.1134 11 7.7861 10]
Total: 1275.6401
Mean: 25.512802
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3515.4159763999915
Median total errors in population: 1291.7849000000003
Error averages by case: (119.15386650000049 9.303 127.90003819999934 10.1 115.8277919000001 11.309 178.45165400000192 11.562 110.6954643999994 11.695 108.02676059999973 11.684 102.77640200000037 10.692 122.48405600000032 12.053 129.1175455 11.605 116.43500970000026 11.528 99.7536763000007 12.225 104.59492609999869 10.674 160.2425176999996 12.024 95.20505419999996 9.371 138.1511220999998 10.288 165.00635250000067 11.401 146.24227709999946 11.644 112.09762270000017 10.556 102.9530667999995 10.455 106.07608210000043 10.614 185.31984269999913 12.209 186.40479379999945 10.455 123.92602149999966 11.276 182.4829531000007 11.899 98.45807889999992 11.011)
Error minima by case: (0.2159 7 4.4081 8 26.2118 8 3.2711 9 15.6124 9 13.9147 8 4.8707 8 8.969 6 0.2211 9 3.9535 7 6.3355 10 4.1031 8 0.5343 6 0.4929 7 15.9132 8 74.8852 9 35.8662 8 6.489 9 0.0033 8 6.2423 8 0.4596 8 44.705 7 10.2929 7 69.1285 7 3.2897 9)
Average genome size in population (length): 75.211
Average program size in population (points): 76.211
Average percent parens in population: 0.014
Minimum age in population: 10.1875
Maximum age in population: 14.53515625
Average age in population: 12.51716015625
Median age in population: 12.548828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.302
Error (vector) diversity:			 0.315
Behavioral diversity:				 0.319
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 14862534
--- Timings ---
Current time: 1529614926093 milliseconds
Total Time:          38.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.8 seconds, 40.7%
Fitness Testing:     17.5 seconds, 45.0%
Report:               5.4 seconds, 13.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 67787.38970000004
Test mean error for best: 33.89369
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.08012      
Correct output: -5.4090974816  | Program output: 31.08012      
Correct output: -27.2127680421 | Program output: 1.08012       
Correct output: 122.7288713888 | Program output: 20.08012      
Correct output: 94.6913893946  | Program output: 72.08012      
Correct output: -14.9157086017 | Program output: 8.08012       
Correct output: 9.1842992567   | Program output: 17.08012      
Correct output: 27.1844373898  | Program output: 0.08012       
Correct output: -32.7789176398 | Program output: -68.08012     
Correct output: 18.9535126473  | Program output: -6.08012      
Correct output: -17.3355427007 | Program output: 0.08012       
Correct output: -19.9068842187 | Program output: -26.08012     
Correct output: -82.5342639546 | Program output: -9.08012      
Correct output: -0.5071453016  | Program output: 0.08012       
Correct output: -65.0013149084 | Program output: -13.08012     
Correct output: -85.885174074  | Program output: 0.08012       
Correct output: 126.9572193111 | Program output: 72.08012      
Correct output: -41.5110180666 | Program output: -56.08012     
Correct output: -19.0067113372 | Program output: -21.08012     
Correct output: 53.8417318683  | Program output: 72.08012      
Correct output: 112.5403599984 | Program output: 7.08012       
Correct output: 117.0118101936 | Program output: 2.08012       
Correct output: 25.2929380926  | Program output: -12.08012     
Correct output: -119.128542356 | Program output: -26.08012     
Correct output: 79.7963324215  | Program output: 72.08012      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction tag_float_115} {:instruction float_shove} {:instruction tag_integer_84} {:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap})
Best program: (integer_inc integer_shove integer_dup_times integer_dup_times tag_float_115 float_shove tag_integer_84 36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float integer_max float_dup_times integer_dup_times integer_max 80.51231866533993 integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times integer_stackdepth float_stackdepth print_integer float_sub float_yankdup float_swap)
Errors: [30.7559 10 36.4892 9 28.2929 10 102.6488 10 22.6113 11 22.9958 9 7.8958 10 27.1043 11 35.3012 10 25.0336 10 17.4157 12 6.1732 9 73.4541 12 0.5873 8 51.9212 10 85.9653 10 54.8771 11 14.5691 9 2.0734 9 18.2384 11 105.4602 12 114.9317 9 37.3731 9 93.0484 10 7.7162 10]
Total: 1273.9332
Mean: 25.478664
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3015.6997460999964
Median total errors in population: 1287.5948
Error averages by case: (97.14754560000023 8.834 105.24352489999923 9.722 92.82307250000054 10.57 158.27442580000104 11.164 85.51108519999998 11.224 87.06485619999911 11.266 81.46761169999975 10.307 106.4096495000007 11.8 111.09363800000033 11.194 101.42450079999992 11.182 79.10538909999975 11.717 86.4389685999991 10.292 147.15251439999972 11.825 78.67372579999983 9.029 121.94239619999958 10.107 141.52859549999897 10.987 121.94144889999873 11.505 94.22030110000026 10.374 86.2882063999993 10.239 84.34658910000012 9.861 163.40374709999992 11.75 164.1411232000004 9.331 107.9906823999997 11.051 168.99052020000056 11.641 75.44962789999943 10.654)
Error minima by case: (0.1789 7 5.4242 7 0.8673 6 50.4221 7 14.6914 7 13.1644 6 3.8852 8 8.969 5 0.3012 9 5.9535 6 10.7446 6 4.1031 8 1.4542 5 0.5029 7 14.9913 8 57.8051 6 34.9572 6 6.499 8 1.0033 8 6.2299 7 3.5404 6 21.9882 5 10.8605 6 70.0484 7 1.7963 7)
Average genome size in population (length): 72.42
Average program size in population (points): 73.42
Average percent parens in population: 0.014
Minimum age in population: 11.1875
Maximum age in population: 15.59765625
Average age in population: 13.881505859375
Median age in population: 13.9423828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.38
Error (vector) diversity:			 0.407
Behavioral diversity:				 0.409
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 16673909
--- Timings ---
Current time: 1529614930084 milliseconds
Total Time:          42.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.3 seconds, 40.4%
Fitness Testing:     19.5 seconds, 45.5%
Report:               5.9 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 67833.5604
Test mean error for best: 33.91678
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01554      
Correct output: -5.4090974816  | Program output: 31.01543      
Correct output: -27.2127680421 | Program output: 1.01573       
Correct output: 122.7288713888 | Program output: 20.01528      
Correct output: 94.6913893946  | Program output: 72.01581      
Correct output: -14.9157086017 | Program output: 8.01518       
Correct output: 9.1842992567   | Program output: 17.01557      
Correct output: 27.1844373898  | Program output: 0.0153        
Correct output: -32.7789176398 | Program output: -68.0153      
Correct output: 18.9535126473  | Program output: -6.0153       
Correct output: -17.3355427007 | Program output: 0.01510       
Correct output: -19.9068842187 | Program output: -26.0153      
Correct output: -82.5342639546 | Program output: -9.0153       
Correct output: -0.5071453016  | Program output: 0.0153        
Correct output: -65.0013149084 | Program output: -13.0153      
Correct output: -85.885174074  | Program output: 0.01514       
Correct output: 126.9572193111 | Program output: 72.01593      
Correct output: -41.5110180666 | Program output: -56.0153      
Correct output: -19.0067113372 | Program output: -21.0153      
Correct output: 53.8417318683  | Program output: 72.01586      
Correct output: 112.5403599984 | Program output: 7.01515       
Correct output: 117.0118101936 | Program output: 2.01572       
Correct output: 25.2929380926  | Program output: -12.0153      
Correct output: -119.128542356 | Program output: -26.0153      
Correct output: 79.7963324215  | Program output: 72.01588      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 2.5819771735745576} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult 2.5819771735745576 15 float_tan float_inc 44.559504711189845 float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_swap)
Errors: [30.8205 9 36.4245 10 28.2285 11 102.7136 10 22.6756 10 22.9309 10 7.8313 9 27.1691 11 35.2364 10 24.9688 10 17.3506 11 6.1084 10 73.519 11 0.5224 7 51.986 10 85.9003 9 54.9413 10 14.5043 10 2.0086 9 18.1741 9 105.5252 11 114.9961 11 37.3082 11 93.1132 10 7.7805 11]
Total: 1272.7374
Mean: 25.454748
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3011.915693600001
Median total errors in population: 1282.59775
Error averages by case: (104.76458580000016 9.066 113.19015179999897 9.539 88.03097320000037 10.442 155.8937169000008 11.032 86.85687650000006 11.09 83.06836149999927 10.94 89.07754319999985 10.333 105.12916130000052 11.543 110.93246850000006 10.82 94.39646489999986 10.868 83.90070039999993 11.688 85.45676639999962 10.066 144.71020399999975 11.585 77.23416079999998 8.492 115.98342069999967 10.005 137.29164229999884 10.729 133.44702039999873 11.078 93.75968639999978 10.079 85.25965099999965 9.969 80.60717330000031 9.91 172.7246946999999 11.587 166.33476429999993 9.217 101.01155020000007 10.872 166.06720020000057 11.133 74.23875489999931 10.465)
Error minima by case: (0.1639 7 5.4191 8 27.2228 8 8.2711 9 13.6914 8 14.9257 8 3.8852 8 6.1844 10 0.3012 9 2.0465 9 6.3355 9 2.1084 7 1.4534 9 0.5029 6 3.986 8 47.8565 9 33.9572 8 3.501 8 1.0085 8 6.2384 7 18.4596 8 44.96 7 4.2929 9 4.8715 8 3.7861 7)
Average genome size in population (length): 71.185
Average program size in population (points): 72.185
Average percent parens in population: 0.014
Minimum age in population: 13.1796875
Maximum age in population: 17.1767578125
Average age in population: 15.3005888671875
Median age in population: 15.33984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.41
Error (vector) diversity:			 0.432
Behavioral diversity:				 0.434
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 18454109
--- Timings ---
Current time: 1529614934203 milliseconds
Total Time:          46.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        18.8 seconds, 40.1%
Fitness Testing:     21.6 seconds, 46.0%
Report:               6.4 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 71660.73680000001
Test mean error for best: 35.83037
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0768552    
Correct output: -5.4090974816  | Program output: 31.01508741   
Correct output: -27.2127680421 | Program output: 1.01204971    
Correct output: 122.7288713888 | Program output: 20.01722126   
Correct output: 94.6913893946  | Program output: 72.02360023979
Correct output: -14.9157086017 | Program output: 8.02817916    
Correct output: 9.1842992567   | Program output: 17.0695055    
Correct output: 27.1844373898  | Program output: 0.0143        
Correct output: -32.7789176398 | Program output: -68.0143      
Correct output: 18.9535126473  | Program output: -6.0143       
Correct output: -17.3355427007 | Program output: 0.01597888    
Correct output: -19.9068842187 | Program output: -26.0143      
Correct output: -82.5342639546 | Program output: -9.0143       
Correct output: -0.5071453016  | Program output: 0.0143        
Correct output: -65.0013149084 | Program output: -13.0143      
Correct output: -85.885174074  | Program output: 0.02864112    
Correct output: 126.9572193111 | Program output: 72.0667591    
Correct output: -41.5110180666 | Program output: -56.0143      
Correct output: -19.0067113372 | Program output: -21.0143      
Correct output: 53.8417318683  | Program output: 72.0716184    
Correct output: 112.5403599984 | Program output: 7.0926713     
Correct output: 117.0118101936 | Program output: 2.051819270   
Correct output: 25.2929380926  | Program output: -12.0143      
Correct output: -119.128542356 | Program output: -26.0143      
Correct output: 79.7963324215  | Program output: 72.0102733586 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction print_integer} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 14} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction float_sin} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times print_integer 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat 14 float_tan float_inc 44.559504711189845 float_rot float_sin float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_swap)
Errors: [30.7592 9 36.4242 8 28.2248 9 102.7117 11 22.6678 11 22.9439 11 7.8852 10 27.1701 10 35.2354 10 24.9678 9 17.3515 11 6.1074 10 73.52 10 0.5214 7 51.987 9 85.9138 11 54.8905 10 14.5033 10 2.0076 9 18.2299 9 105.4477 12 114.96 9 37.3072 11 93.1142 10 7.7861 11]
Total: 1269.6377
Mean: 25.392754
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3000.3095082
Median total errors in population: 1277.7359
Error averages by case: (97.58012340000012 9.336 108.90191249999941 9.533 84.44190030000026 10.403 151.14593770000008 11.071 81.87257490000006 11.173 78.60771279999939 10.807 81.72064269999969 10.419 109.17315940000013 11.354 118.17325969999992 10.588 96.96823379999988 10.651 81.42287439999977 11.737 93.56983909999978 9.909 152.5079003999997 11.334 81.50089750000024 8.09 119.09403179999981 9.901 134.72061479999888 10.644 125.09185349999912 10.81 100.72061019999987 9.911 92.30282810000011 9.766 77.5584101000002 10.002 164.01643290000038 11.406 159.42083410000015 9.28 104.49087520000025 10.714 175.16350400000033 10.696 70.16254489999949 10.445)
Error minima by case: (0.1639 7 4.329 7 26.1327 8 49.5853 6 15.6113 8 13.8356 7 2.1843 7 3.1844 5 0.3013 8 3.9535 5 16.2554 6 3.8268 6 1.4541 5 0.5039 6 11.9212 7 84.8051 9 27.9572 6 1.4958 8 1.9933 8 6.7616 7 22.4596 8 43.8682 7 1.2929 5 70.0449 6 3.2139 7)
Average genome size in population (length): 70.531
Average program size in population (points): 71.531
Average percent parens in population: 0.014
Minimum age in population: 14.630859375
Maximum age in population: 18.87841796875
Average age in population: 16.7566123046875
Median age in population: 16.796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.739
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.739
Total error diversity:				 0.416
Error (vector) diversity:			 0.43
Behavioral diversity:				 0.43
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 20217509
--- Timings ---
Current time: 1529614938144 milliseconds
Total Time:          50.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.2 seconds, 39.6%
Fitness Testing:     23.6 seconds, 46.4%
Report:               7.0 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 67725.55700000004
Test mean error for best: 33.86278
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0155453    
Correct output: -5.4090974816  | Program output: 31.0154342    
Correct output: -27.2127680421 | Program output: 1.0157372     
Correct output: 122.7288713888 | Program output: 20.0152827    
Correct output: 94.6913893946  | Program output: 72.0158180    
Correct output: -14.9157086017 | Program output: 8.0151817     
Correct output: 9.1842992567   | Program output: 17.0155756    
Correct output: 27.1844373898  | Program output: 0.01532       
Correct output: -32.7789176398 | Program output: -68.01532     
Correct output: 18.9535126473  | Program output: -6.01532      
Correct output: -17.3355427007 | Program output: 0.015109      
Correct output: -19.9068842187 | Program output: -26.01532     
Correct output: -82.5342639546 | Program output: -9.01532      
Correct output: -0.5071453016  | Program output: 0.01532       
Correct output: -65.0013149084 | Program output: -13.01532     
Correct output: -85.885174074  | Program output: 0.0151413     
Correct output: 126.9572193111 | Program output: 72.0159392    
Correct output: -41.5110180666 | Program output: -56.01532     
Correct output: -19.0067113372 | Program output: -21.01532     
Correct output: 53.8417318683  | Program output: 72.0158685    
Correct output: 112.5403599984 | Program output: 7.0151514     
Correct output: 117.0118101936 | Program output: 2.0157271     
Correct output: 25.2929380926  | Program output: -12.01532     
Correct output: -119.128542356 | Program output: -26.01532     
Correct output: 79.7963324215  | Program output: 72.0158887    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 2.5819771735745576} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult 2.5819771735745576 15 float_tan float_inc 44.559504711189845 float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap)
Errors: [30.8205 9 36.4245 10 28.2285 10 102.7136 11 22.6756 10 22.9309 8 7.8313 10 27.1691 11 35.2364 10 24.9688 10 17.3507 11 6.1084 10 73.5189 11 0.5225 7 51.986 10 85.9003 9 54.9413 10 14.5043 10 2.0086 8 18.1741 8 105.5252 10 114.9961 10 37.3083 11 93.1132 10 7.7804 11]
Total: 1267.7375
Mean: 25.35475
Genome size: 69
Size: 70
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3033.9578028000024
Median total errors in population: 1276.6404
Error averages by case: (91.60728480000012 9.493 103.78093939999987 9.624 90.27334980000016 10.294 156.0446820000006 10.949 85.69084919999997 11.042 84.04534499999933 10.554 79.4375760999997 10.139 107.14816660000018 11.269 119.43683089999988 10.533 103.59125819999987 10.579 75.8068098999997 11.6 93.74106679999981 9.832 158.83799519999988 11.297 79.27257750000018 8.079 125.18336899999986 9.85 139.4383501999991 10.631 119.13495819999947 10.64 101.93905169999972 9.851 93.87805990000005 9.695 82.94801880000018 9.8 158.4247763000006 11.131 161.8160079999999 9.308 109.09819130000025 10.601 180.3735117000004 10.64 75.12977629999945 10.448)
Error minima by case: (0.1639 7 4.329 8 26.1327 7 50.6328 8 15.5974 8 13.8356 7 3.1047 8 4.8156 6 0.7636 8 13.0465 7 0.3355 6 5.1082 7 1.4534 6 0.5071 6 14.9212 7 84.8051 6 31.9572 7 11.511 8 1.0084 7 17.2384 7 19.4596 6 23.053 6 6.7071 7 70.0476 8 6.2124 7)
Average genome size in population (length): 71.138
Average program size in population (points): 72.138
Average percent parens in population: 0.014
Minimum age in population: 15.84375
Maximum age in population: 20.275146484375
Average age in population: 18.21646313476562
Median age in population: 18.22021484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.428
Error (vector) diversity:			 0.439
Behavioral diversity:				 0.439
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 21996109
--- Timings ---
Current time: 1529614942219 milliseconds
Total Time:          54.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.7 seconds, 39.5%
Fitness Testing:     25.6 seconds, 46.6%
Report:               7.5 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 67751.13599999998
Test mean error for best: 33.87557
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.013134     
Correct output: -5.4090974816  | Program output: 31.013134     
Correct output: -27.2127680421 | Program output: 1.013134      
Correct output: 122.7288713888 | Program output: 20.013134     
Correct output: 94.6913893946  | Program output: 72.013134     
Correct output: -14.9157086017 | Program output: 8.013134      
Correct output: 9.1842992567   | Program output: 17.013134     
Correct output: 27.1844373898  | Program output: 0.013134      
Correct output: -32.7789176398 | Program output: -68.013134    
Correct output: 18.9535126473  | Program output: -6.013134     
Correct output: -17.3355427007 | Program output: 0.013134      
Correct output: -19.9068842187 | Program output: -26.013134    
Correct output: -82.5342639546 | Program output: -9.013134     
Correct output: -0.5071453016  | Program output: 0.013134      
Correct output: -65.0013149084 | Program output: -13.013134    
Correct output: -85.885174074  | Program output: 0.013134      
Correct output: 126.9572193111 | Program output: 72.013134     
Correct output: -41.5110180666 | Program output: -56.013134    
Correct output: -19.0067113372 | Program output: -21.013134    
Correct output: 53.8417318683  | Program output: 72.013134     
Correct output: 112.5403599984 | Program output: 7.013134      
Correct output: 117.0118101936 | Program output: 2.013134      
Correct output: 25.2929380926  | Program output: -12.013134    
Correct output: -119.128542356 | Program output: -26.013134    
Correct output: 79.7963324215  | Program output: 72.013134     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction 13} {:instruction float_flush} {:instruction float_dup_times} {:instruction float_mult} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 float_stackdepth float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove 13 float_flush float_dup_times float_mult 15 float_tan float_inc 44.559504711189845 float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 integer_dup_times integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times integer_stackdepth integer_div float_swap)
Errors: [30.8229 9 36.4222 10 28.2259 11 102.7157 10 22.6783 8 22.9288 12 7.8288 11 27.1713 10 35.2342 10 24.9666 9 17.3487 12 6.1062 10 73.5211 10 0.5203 8 51.9882 7 85.8983 10 54.9441 9 14.5021 10 2.0064 9 18.1714 9 105.5272 11 114.9987 9 37.3061 11 93.1154 11 7.7832 9]
Total: 1267.7321000000002
Mean: 25.354643
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3073.0988011000036
Median total errors in population: 1273.9508500000002
Error averages by case: (96.64414780000025 9.521 103.67018949999976 9.601 88.36055729999998 10.222 154.33891470000023 10.759 83.24982900000009 10.863 81.77224369999956 10.411 77.18352219999984 9.93 115.95128640000013 11.14 121.9105166999996 10.431 106.58455140000007 10.421 83.15770149999983 11.526 96.24781569999989 9.907 158.36565520000002 11.23 89.25688470000026 7.956 128.11771050000004 9.934 139.8148935999994 10.582 120.94814279999983 10.609 104.83435229999972 9.912 95.82231829999995 9.595 77.83873340000004 9.707 165.32364470000056 11.147 162.18612449999995 9.49 113.49683859999999 10.637 179.1112373000002 10.442 72.49798929999952 10.44)
Error minima by case: (0.1639 7 5.4242 7 27.2248 6 13.7289 7 15.6112 7 14.9277 6 5.1686 7 5.8156 6 0.3012 8 14.0465 7 17.3355 6 4.1084 7 0.5343 6 0.4929 6 2.921 7 85.8852 6 33.0428 6 6.504 8 0.0086 7 6.1733 7 0.4596 6 22.9882 5 7.7071 7 14.8715 8 4.2037 7)
Average genome size in population (length): 70.279
Average program size in population (points): 71.279
Average percent parens in population: 0.014
Minimum age in population: 17.65869140625
Maximum age in population: 21.4229736328125
Average age in population: 19.58573291015625
Median age in population: 19.6112060546875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.764
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.764
Total error diversity:				 0.407
Error (vector) diversity:			 0.426
Behavioral diversity:				 0.426
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 23753409
--- Timings ---
Current time: 1529614946338 milliseconds
Total Time:          58.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.2 seconds, 39.3%
Fitness Testing:     27.6 seconds, 46.9%
Report:               8.0 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 69633.92280000001
Test mean error for best: 34.81696
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0053       
Correct output: -5.4090974816  | Program output: 31.0215242    
Correct output: -27.2127680421 | Program output: 1.01204872    
Correct output: 122.7288713888 | Program output: 20.01722027   
Correct output: 94.6913893946  | Program output: 72.02360023880
Correct output: -14.9157086017 | Program output: 8.02817817    
Correct output: 9.1842992567   | Program output: 17.0209856    
Correct output: 27.1844373898  | Program output: 0.064813      
Correct output: -32.7789176398 | Program output: -68.064813    
Correct output: 18.9535126473  | Program output: -6.064813     
Correct output: -17.3355427007 | Program output: 0.06409       
Correct output: -19.9068842187 | Program output: -26.064813    
Correct output: -82.5342639546 | Program output: -9.064813     
Correct output: -0.5071453016  | Program output: 0.064813      
Correct output: -65.0013149084 | Program output: -13.064813    
Correct output: -85.885174074  | Program output: 0.02864013    
Correct output: 126.9572193111 | Program output: 72.0129192    
Correct output: -41.5110180666 | Program output: -56.064813    
Correct output: -19.0067113372 | Program output: -21.064813    
Correct output: 53.8417318683  | Program output: 72.0716085    
Correct output: 112.5403599984 | Program output: 7.0990714     
Correct output: 117.0118101936 | Program output: 2.051819171   
Correct output: 25.2929380926  | Program output: -12.064813    
Correct output: -119.128542356 | Program output: -26.064813    
Correct output: 79.7963324215  | Program output: 72.0102733487 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.470026983946384} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank integer_max float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_max 80.51231866533993 integer_yank in1 float_stackdepth float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat float_sub float_tan float_tan float_inc 44.559504711189845 integer_dec integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.470026983946384 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times)
Errors: [30.8308 9 36.4306 10 28.2248 9 102.7117 11 22.6678 12 22.9439 9 7.8367 8 27.1196 10 35.2859 10 25.0183 10 17.3996 11 6.1579 8 73.4695 10 0.572 8 51.9365 10 85.9138 10 54.9443 9 14.5538 11 2.0581 8 18.2299 9 105.4413 10 114.96 8 37.3578 11 93.0637 11 7.7861 10]
Total: 1264.9144
Mean: 25.298288
Genome size: 80
Size: 81
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2954.621600800001
Median total errors in population: 1273.6407000000002
Error averages by case: (92.95221340000045 9.352 97.43862849999927 9.544 88.8690090999997 10.317 149.77303550000028 10.672 76.93771710000047 10.674 79.86799099999962 10.324 72.98252459999978 9.906 108.3193124999998 11.004 115.63084879999933 10.31 106.2855731000006 10.131 73.3621167999997 11.367 90.58305719999953 10.04 152.32799619999983 10.876 82.39717510000033 7.679 127.6728255000003 9.824 138.94683159999866 10.314 112.8064522999998 10.338 98.52333059999997 10.049 89.56844480000022 9.41 75.54260099999979 9.538 155.32517360000057 11.169 158.50854430000018 9.749 113.67586159999978 10.937 173.93445180000037 10.163 68.1188847999997 10.584)
Error minima by case: (0.2441 7 5.4133 8 27.2142 8 7.2711 9 0.6914 8 14.9174 7 4.8852 8 8.969 8 1.2361 8 2.9535 8 17.3355 8 0.1082 8 1.4542 8 0.5071 6 1.014 7 85.8852 8 3.0428 8 6.5033 8 1.0735 7 6.1743 7 17.4596 8 12.9882 7 9.2929 9 70.0385 8 5.2838 7)
Average genome size in population (length): 69.678
Average program size in population (points): 70.678
Average percent parens in population: 0.014
Minimum age in population: 19.052978515625
Maximum age in population: 22.82757568359375
Average age in population: 20.99229235839844
Median age in population: 21.00790405273438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.75
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.75
Total error diversity:				 0.424
Error (vector) diversity:			 0.439
Behavioral diversity:				 0.439
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 25495459
--- Timings ---
Current time: 1529614950373 milliseconds
Total Time:          63.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.7 seconds, 39.1%
Fitness Testing:     29.6 seconds, 47.0%
Report:               8.7 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 69633.92280000001
Test mean error for best: 34.81696
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0053       
Correct output: -5.4090974816  | Program output: 31.0215242    
Correct output: -27.2127680421 | Program output: 1.01204872    
Correct output: 122.7288713888 | Program output: 20.01722027   
Correct output: 94.6913893946  | Program output: 72.02360023880
Correct output: -14.9157086017 | Program output: 8.02817817    
Correct output: 9.1842992567   | Program output: 17.0209856    
Correct output: 27.1844373898  | Program output: 0.064813      
Correct output: -32.7789176398 | Program output: -68.064813    
Correct output: 18.9535126473  | Program output: -6.064813     
Correct output: -17.3355427007 | Program output: 0.06409       
Correct output: -19.9068842187 | Program output: -26.064813    
Correct output: -82.5342639546 | Program output: -9.064813     
Correct output: -0.5071453016  | Program output: 0.064813      
Correct output: -65.0013149084 | Program output: -13.064813    
Correct output: -85.885174074  | Program output: 0.02864013    
Correct output: 126.9572193111 | Program output: 72.0129192    
Correct output: -41.5110180666 | Program output: -56.064813    
Correct output: -19.0067113372 | Program output: -21.064813    
Correct output: 53.8417318683  | Program output: 72.0716085    
Correct output: 112.5403599984 | Program output: 7.0990714     
Correct output: 117.0118101936 | Program output: 2.051819171   
Correct output: 25.2929380926  | Program output: -12.064813    
Correct output: -119.128542356 | Program output: -26.064813    
Correct output: 79.7963324215  | Program output: 72.0102733487 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction integer_max} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.470026983946384} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank integer_max float_dup_times integer_dup_times integer_max 80.51231866533993 integer_yank in1 integer_max 80.51231866533993 integer_yank in1 float_stackdepth float_sin tag_integer_374 integer_dup integer_flush in2 float_div integer_shove float_max integer_dup_times float_dup_times float_mult integer_fromfloat float_sub float_tan float_tan float_inc 44.559504711189845 integer_dec integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.470026983946384 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup float_swap in2 integer_pop integer_flush float_dup_times)
Errors: [30.8308 9 36.4306 10 28.2248 9 102.7117 11 22.6678 12 22.9439 9 7.8367 8 27.1196 10 35.2859 10 25.0183 10 17.3996 11 6.1579 8 73.4695 10 0.572 8 51.9365 10 85.9138 10 54.9443 9 14.5538 11 2.0581 8 18.2299 9 105.4413 10 114.96 8 37.3578 11 93.0637 11 7.7861 10]
Total: 1264.9144
Mean: 25.298288
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2799.7606993999975
Median total errors in population: 1271.7314
Error averages by case: (87.29944840000046 9.389 93.05147359999937 9.576 79.99242359999977 10.312 147.5462531000004 10.742 73.15801570000032 10.534 73.59084379999973 10.067 69.45729879999986 10.067 102.87706239999986 10.82 106.3582259999996 10.319 98.87250190000042 10.017 72.61287100000001 11.394 80.46545079999957 10.093 144.12999089999974 10.698 74.8055747000001 7.672 117.96258409999999 9.638 131.88589309999853 10.2 110.11792979999983 10.085 88.3620992 10.103 80.43965909999997 9.335 70.21532199999967 9.35 155.02541150000008 11.143 154.4387533999998 9.669 106.53360219999993 11.055 165.36300780000036 10.113 62.21300249999996 10.595)
Error minima by case: (1.1771 7 3.0551 8 24.8588 8 24.6481 8 15.6112 8 12.5617 7 4.8956 7 26.1693 9 0.7646 8 17.9933 7 14.9815 9 4.1084 7 1.4535 9 0.5071 6 2.987 6 5.7383 8 35.8659 7 6.5042 8 0.0086 7 6.1741 7 27.4596 9 25.069 7 24.4491 8 27.5051 8 5.7533 8)
Average genome size in population (length): 70.827
Average program size in population (points): 71.827
Average percent parens in population: 0.014
Minimum age in population: 20.1279296875
Maximum age in population: 24.2281494140625
Average age in population: 22.3307043762207
Median age in population: 22.35031127929688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.763
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.763
Total error diversity:				 0.4
Error (vector) diversity:			 0.419
Behavioral diversity:				 0.419
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 27266159
--- Timings ---
Current time: 1529614954652 milliseconds
Total Time:          67.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.2 seconds, 38.9%
Fitness Testing:     31.8 seconds, 47.3%
Report:               9.2 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 67799.56790000001
Test mean error for best: 33.89978
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0156463    
Correct output: -5.4090974816  | Program output: 31.0155352    
Correct output: -27.2127680421 | Program output: 1.0158382     
Correct output: 122.7288713888 | Program output: 20.0153837    
Correct output: 94.6913893946  | Program output: 72.0159190    
Correct output: -14.9157086017 | Program output: 8.0152827     
Correct output: 9.1842992567   | Program output: 17.0156766    
Correct output: 27.1844373898  | Program output: 0.0151413     
Correct output: -32.7789176398 | Program output: -68.0151413   
Correct output: 18.9535126473  | Program output: -6.0151413    
Correct output: -17.3355427007 | Program output: 0.0152019     
Correct output: -19.9068842187 | Program output: -26.0151413   
Correct output: -82.5342639546 | Program output: -9.0151413    
Correct output: -0.5071453016  | Program output: 0.0151413     
Correct output: -65.0013149084 | Program output: -13.0151413   
Correct output: -85.885174074  | Program output: 0.0152423     
Correct output: 126.9572193111 | Program output: 72.015103102  
Correct output: -41.5110180666 | Program output: -56.0151413   
Correct output: -19.0067113372 | Program output: -21.0151413   
Correct output: 53.8417318683  | Program output: 72.0159695    
Correct output: 112.5403599984 | Program output: 7.0152524     
Correct output: 117.0118101936 | Program output: 2.0158281     
Correct output: 25.2929380926  | Program output: -12.0151413   
Correct output: -119.128542356 | Program output: -26.0151413   
Correct output: 79.7963324215  | Program output: 72.0159897    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 2.5819771735745576} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yank} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_flush in2 float_div float_dup_times float_max integer_dup_times float_dup_times float_mult 2.5819771735745576 15 float_tan float_inc 44.559504711189845 integer_shove float_max integer_dup_times float_dup_times float_mult integer_yank 15 float_tan float_inc 44.559504711189845 integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 integer_inc integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap)
Errors: [30.8204 9 36.4246 11 28.2286 10 102.7135 10 22.6755 9 22.931 9 7.8314 10 27.1693 10 35.2362 10 24.9687 8 17.3507 10 6.1083 9 73.5191 11 0.5223 7 51.9862 8 85.9004 10 54.9421 9 14.5041 10 2.0084 9 18.1742 10 105.5251 10 114.996 9 37.3081 12 93.1134 10 7.7803 11]
Total: 1263.7378999999999
Mean: 25.274757
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2952.5421264999954
Median total errors in population: 1269.7374
Error averages by case: (87.19187200000042 9.338 94.40812099999953 9.66 83.50714219999983 10.341 149.0062771000001 10.732 76.60059550000031 10.287 78.40983920000014 10.035 69.50139449999999 10.285 110.77010899999998 10.776 118.89830729999987 10.363 111.21613880000027 9.951 72.46677480000011 11.419 94.06025449999959 10.038 153.38444509999982 10.663 85.29372140000018 7.63 132.35002110000022 9.46 134.772626799999 10.204 109.54884530000004 10.043 101.44505789999982 10.137 92.70298709999987 9.295 74.39805199999999 9.318 153.6709512000004 11.137 156.7456241999998 9.685 119.51691979999997 11.12 174.3081302000001 10.234 65.67091850000004 10.546)
Error minima by case: (0.7592 7 4.3933 8 26.197 8 24.7117 9 5.6914 8 13.8999 6 1.1686 8 8.969 4 1.2341 8 3.9535 5 8.0 6 2.8917 8 1.5144 5 0.5071 6 12.9882 6 12.0 8 25.9572 7 1.5041 8 1.0076 7 6.1741 7 13.0 7 25.04 7 10.2929 6 70.1087 7 5.7861 8)
Average genome size in population (length): 71.872
Average program size in population (points): 72.872
Average percent parens in population: 0.014
Minimum age in population: 21.65447998046875
Maximum age in population: 25.86531066894531
Average age in population: 23.69924784851074
Median age in population: 23.69325256347656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.402
Error (vector) diversity:			 0.425
Behavioral diversity:				 0.425
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 29063059
--- Timings ---
Current time: 1529614958563 milliseconds
Total Time:          71.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.5 seconds, 38.6%
Fitness Testing:     33.9 seconds, 47.6%
Report:               9.8 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 67799.56790000001
Test mean error for best: 33.89978
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0156463    
Correct output: -5.4090974816  | Program output: 31.0155352    
Correct output: -27.2127680421 | Program output: 1.0158382     
Correct output: 122.7288713888 | Program output: 20.0153837    
Correct output: 94.6913893946  | Program output: 72.0159190    
Correct output: -14.9157086017 | Program output: 8.0152827     
Correct output: 9.1842992567   | Program output: 17.0156766    
Correct output: 27.1844373898  | Program output: 0.0151413     
Correct output: -32.7789176398 | Program output: -68.0151413   
Correct output: 18.9535126473  | Program output: -6.0151413    
Correct output: -17.3355427007 | Program output: 0.0152019     
Correct output: -19.9068842187 | Program output: -26.0151413   
Correct output: -82.5342639546 | Program output: -9.0151413    
Correct output: -0.5071453016  | Program output: 0.0151413     
Correct output: -65.0013149084 | Program output: -13.0151413   
Correct output: -85.885174074  | Program output: 0.0152423     
Correct output: 126.9572193111 | Program output: 72.015103102  
Correct output: -41.5110180666 | Program output: -56.0151413   
Correct output: -19.0067113372 | Program output: -21.0151413   
Correct output: 53.8417318683  | Program output: 72.0159695    
Correct output: 112.5403599984 | Program output: 7.0152524     
Correct output: 117.0118101936 | Program output: 2.0158281     
Correct output: 25.2929380926  | Program output: -12.0151413   
Correct output: -119.128542356 | Program output: -26.0151413   
Correct output: 79.7963324215  | Program output: 72.0159897    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dec} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 2.5819771735745576} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yank} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_dup_times} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float integer_dec float_dup_times integer_dup_times integer_max 80.51231866533993 integer_flush in2 float_div float_dup_times float_max integer_dup_times float_dup_times float_mult 2.5819771735745576 15 float_tan float_inc 44.559504711189845 integer_shove float_max integer_dup_times float_dup_times float_mult integer_yank 15 float_tan float_inc 44.559504711189845 integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 integer_inc integer_min integer_dup_times in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap)
Errors: [30.8204 9 36.4246 11 28.2286 10 102.7135 10 22.6755 9 22.931 9 7.8314 10 27.1693 10 35.2362 10 24.9687 8 17.3507 10 6.1083 9 73.5191 11 0.5223 7 51.9862 8 85.9004 10 54.9421 9 14.5041 10 2.0084 9 18.1742 10 105.5251 10 114.996 9 37.3081 12 93.1134 10 7.7803 11]
Total: 1263.7378999999999
Mean: 25.274757
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3179.809650400004
Median total errors in population: 1268.7375
Error averages by case: (93.76002120000034 9.437 103.44636769999978 9.934 91.35210789999992 10.617 155.1908808000002 10.606 82.41505880000024 9.927 82.62520580000002 10.162 76.49105170000057 10.358 126.66368750000007 10.77 131.28751580000028 10.314 118.96110470000023 9.978 84.87367470000024 11.628 106.85219959999944 9.997 164.7893227000003 10.651 101.07166880000038 7.622 139.99495040000116 9.204 143.13049809999967 10.216 117.11834099999956 9.862 114.3066165999999 10.099 105.50993529999984 9.248 79.06354970000007 9.351 162.44733790000086 11.054 164.2301528999993 9.576 126.83625570000014 11.041 185.4659467000004 10.459 69.5721984000001 10.243)
Error minima by case: (0.1959 7 5.4245 7 27.2248 8 42.2166 8 14.1791 7 14.9309 7 1.1711 8 3.3943 8 0.2364 8 11.6253 8 17.3355 8 4.1084 6 1.4533 8 0.5039 6 14.9882 6 85.8852 7 35.8653 8 6.569 8 1.0086 7 6.2383 7 32.028 7 36.4995 7 5.2858 9 70.0476 8 0.716 8)
Average genome size in population (length): 75.138
Average program size in population (points): 76.138
Average percent parens in population: 0.013
Minimum age in population: 23.353515625
Maximum age in population: 27.26117706298828
Average age in population: 25.22449524688721
Median age in population: 25.26832580566406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.371
Error (vector) diversity:			 0.395
Behavioral diversity:				 0.395
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 30941659
--- Timings ---
Current time: 1529614962637 milliseconds
Total Time:          75.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.8 seconds, 38.2%
Fitness Testing:     36.0 seconds, 47.9%
Report:              10.3 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 67799.56790000001
Test mean error for best: 33.89978
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0156463    
Correct output: -5.4090974816  | Program output: 31.0155352    
Correct output: -27.2127680421 | Program output: 1.0158382     
Correct output: 122.7288713888 | Program output: 20.0153837    
Correct output: 94.6913893946  | Program output: 72.0159190    
Correct output: -14.9157086017 | Program output: 8.0152827     
Correct output: 9.1842992567   | Program output: 17.0156766    
Correct output: 27.1844373898  | Program output: 0.0151413     
Correct output: -32.7789176398 | Program output: -68.0151413   
Correct output: 18.9535126473  | Program output: -6.0151413    
Correct output: -17.3355427007 | Program output: 0.0152019     
Correct output: -19.9068842187 | Program output: -26.0151413   
Correct output: -82.5342639546 | Program output: -9.0151413    
Correct output: -0.5071453016  | Program output: 0.0151413     
Correct output: -65.0013149084 | Program output: -13.0151413   
Correct output: -85.885174074  | Program output: 0.0152423     
Correct output: 126.9572193111 | Program output: 72.015103102  
Correct output: -41.5110180666 | Program output: -56.0151413   
Correct output: -19.0067113372 | Program output: -21.0151413   
Correct output: 53.8417318683  | Program output: 72.0159695    
Correct output: 112.5403599984 | Program output: 7.0152524     
Correct output: 117.0118101936 | Program output: 2.0158281     
Correct output: 25.2929380926  | Program output: -12.0151413   
Correct output: -119.128542356 | Program output: -26.0151413   
Correct output: 79.7963324215  | Program output: 72.0159897    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 2.5819771735745576} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yank} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_inc integer_dup_times integer_max 80.51231866533993 integer_flush in2 float_div float_dup_times float_max integer_dup_times float_dup_times float_mult 2.5819771735745576 15 float_tan float_inc 44.559504711189845 integer_shove float_max integer_dup_times float_dup_times float_mult integer_yank 15 float_tan float_inc 44.559504711189845 integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 integer_inc integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_yankdup)
Errors: [30.8204 9 36.4246 11 28.2286 10 102.7135 10 22.6755 9 22.931 9 7.8314 10 27.1693 10 35.2362 10 24.9687 8 17.3507 10 6.1083 9 73.5191 11 0.5223 7 51.9862 8 85.9004 10 54.9421 9 14.5041 10 2.0084 9 18.1742 10 105.5251 10 114.996 9 37.3081 12 93.1134 10 7.7803 11]
Total: 1263.7378999999999
Mean: 25.274757
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3153.935580800005
Median total errors in population: 1267.7322
Error averages by case: (85.99552960000001 9.423 101.5038132000003 9.893 90.81379940000032 10.537 157.76724560000022 10.473 84.72654770000005 10.048 84.08525579999971 10.179 74.93209580000041 10.19 123.07157640000047 10.627 128.54290820000085 10.282 117.2349030999997 9.946 82.45384100000024 11.62 104.20195040000009 9.751 167.37854250000134 10.48 97.23467899999987 7.562 138.1664435000007 9.124 142.7745239999997 10.393 117.35198529999933 9.691 111.6084183999996 10.022 103.14560969999961 9.289 78.56483700000015 9.485 162.33415690000095 11.056 165.83966439999975 9.032 124.64166969999997 10.884 188.19143960000036 10.525 70.89714459999968 9.965)
Error minima by case: (0.8229 7 5.4211 6 27.2248 6 26.0 7 15.6112 6 14.9277 6 0.5459 7 8.969 6 0.2362 8 1.9535 6 8.0 6 4.1063 6 1.4541 6 0.506 6 3.0138 7 12.0 6 27.0428 7 2.4957 8 0.0064 6 6.1741 7 13.0 7 36.9882 6 8.2929 6 49.0 7 5.7832 8)
Average genome size in population (length): 76.589
Average program size in population (points): 77.589
Average percent parens in population: 0.013
Minimum age in population: 24.353515625
Maximum age in population: 28.74981689453125
Average age in population: 26.75269222640991
Median age in population: 26.79543495178223
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.401
Error (vector) diversity:			 0.414
Behavioral diversity:				 0.414
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 32856584
--- Timings ---
Current time: 1529614967119 milliseconds
Total Time:          79.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        30.2 seconds, 37.9%
Fitness Testing:     38.4 seconds, 48.2%
Report:              10.9 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 67799.56790000001
Test mean error for best: 33.89978
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.0156463    
Correct output: -5.4090974816  | Program output: 31.0155352    
Correct output: -27.2127680421 | Program output: 1.0158382     
Correct output: 122.7288713888 | Program output: 20.0153837    
Correct output: 94.6913893946  | Program output: 72.0159190    
Correct output: -14.9157086017 | Program output: 8.0152827     
Correct output: 9.1842992567   | Program output: 17.0156766    
Correct output: 27.1844373898  | Program output: 0.0151413     
Correct output: -32.7789176398 | Program output: -68.0151413   
Correct output: 18.9535126473  | Program output: -6.0151413    
Correct output: -17.3355427007 | Program output: 0.0152019     
Correct output: -19.9068842187 | Program output: -26.0151413   
Correct output: -82.5342639546 | Program output: -9.0151413    
Correct output: -0.5071453016  | Program output: 0.0151413     
Correct output: -65.0013149084 | Program output: -13.0151413   
Correct output: -85.885174074  | Program output: 0.0152423     
Correct output: 126.9572193111 | Program output: 72.015103102  
Correct output: -41.5110180666 | Program output: -56.0151413   
Correct output: -19.0067113372 | Program output: -21.0151413   
Correct output: 53.8417318683  | Program output: 72.0159695    
Correct output: 112.5403599984 | Program output: 7.0152524     
Correct output: 117.0118101936 | Program output: 2.0158281     
Correct output: 25.2929380926  | Program output: -12.0151413   
Correct output: -119.128542356 | Program output: -26.0151413   
Correct output: 79.7963324215  | Program output: 72.0159897    
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction float_div} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 2.5819771735745576} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_yank} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_tan} {:instruction float_inc} {:instruction float_min} {:instruction float_rot} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_swap} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction in2} {:instruction integer_pop} {:instruction integer_flush} {:instruction float_dup_times})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_inc integer_dup_times integer_max 80.51231866533993 integer_flush in2 float_div float_dup_times float_max integer_dup_times float_dup_times float_mult 2.5819771735745576 15 float_tan float_inc 44.559504711189845 integer_shove float_max integer_dup_times float_dup_times float_mult integer_yank 15 float_tan float_inc 44.559504711189845 integer_fromfloat float_sub float_tan float_inc float_min float_rot integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 integer_inc integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_yankdup float_swap float_swap float_min float_stackdepth print_integer float_sub in2 integer_pop integer_flush float_dup_times)
Errors: [30.8204 9 36.4246 11 28.2286 10 102.7135 10 22.6755 9 22.931 9 7.8314 10 27.1693 10 35.2362 10 24.9687 8 17.3507 10 6.1083 9 73.5191 11 0.5223 7 51.9862 8 85.9004 10 54.9421 9 14.5041 10 2.0084 9 18.1742 10 105.5251 10 114.996 9 37.3081 12 93.1134 10 7.7803 11]
Total: 1263.7378999999999
Mean: 25.274757
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3457.9060240999997
Median total errors in population: 1266.7321000000002
Error averages by case: (106.30611260000013 9.308 125.58911090000046 10.013 115.72589539999979 10.102 173.4499267000005 10.686 103.22718920000005 10.816 105.10922479999999 9.767 102.49151049999988 9.886 124.38352210000036 10.779 128.18891920000027 10.418 116.7047933999995 10.053 104.96662750000024 11.387 104.88757690000051 9.508 168.64466410000122 10.508 97.70055539999979 7.689 136.51640050000026 9.586 165.18267400000025 10.362 139.11879320000028 9.843 111.11961999999973 10.286 104.13868979999981 9.371 101.94552980000041 9.722 181.42695850000084 11.008 182.84695480000028 8.97 123.45153329999951 11.107 190.15232479999995 10.597 92.6349166999993 10.224)
Error minima by case: (0.1784 7 5.4244 8 27.2248 8 50.4221 9 15.6064 7 14.931 7 0.8302 7 8.969 9 0.2352 8 13.9535 8 16.2715 9 0.1073 6 1.4694 9 0.506 6 1.0128 7 35.1148 8 26.0428 8 0.5031 8 0.0064 7 0.1731 8 40.2336 8 44.705 6 10.8605 9 70.0637 8 0.2185 7)
Average genome size in population (length): 77.812
Average program size in population (points): 78.812
Average percent parens in population: 0.013
Minimum age in population: 25.67047119140625
Maximum age in population: 29.8764820098877
Average age in population: 28.02132160949707
Median age in population: 28.07000541687012
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.402
Error (vector) diversity:			 0.414
Behavioral diversity:				 0.414
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 34802284
--- Timings ---
Current time: 1529614971506 milliseconds
Total Time:          83.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.6 seconds, 37.6%
Fitness Testing:     40.6 seconds, 48.4%
Report:              11.6 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 67758.04989999995
Test mean error for best: 33.87902
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.013801     
Correct output: -5.4090974816  | Program output: 31.013801     
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.013801     
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.013801      
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.013801     
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.013801      
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.470026983946384} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 44.559504711189845 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_add integer_yankdup float_inc 44.559504711189845 integer_dec integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.470026983946384 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8223 9 36.4229 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8295 11 27.1713 11 35.2342 10 24.9667 9 17.3493 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9434 9 14.5021 9 2.0064 9 18.1721 9 105.5266 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1259.7325
Mean: 25.19465
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2896.2622542000054
Median total errors in population: 1265.7388999999998
Error averages by case: (91.062454 8.986 101.74250630000023 9.88 87.10642939999991 9.85 151.96896450000057 10.584 76.75366660000006 10.734 75.96094399999956 9.705 74.68101299999957 9.854 105.24705620000002 10.569 107.14028540000027 10.351 101.40614659999932 9.891 82.27805129999985 11.132 82.5466836000004 9.197 151.6098966000006 10.45 76.1548353999997 7.554 120.53138189999999 9.358 139.22504549999925 10.176 114.52140990000032 9.82 90.04977140000011 10.196 82.05334560000024 9.355 75.78621989999992 9.75 154.40430130000007 11.026 154.21162780000105 8.861 107.3057053999997 11.19 175.41188619999986 10.536 67.77062639999944 10.327)
Error minima by case: (0.1787 7 5.4231 8 27.2248 7 50.4221 9 15.5995 8 14.9297 7 4.8157 7 8.8436 8 1.2342 7 4.9535 8 4.3203 8 5.8927 7 1.455 8 0.507 6 2.9862 7 72.8699 8 35.8661 8 0.4959 8 1.9933 7 5.1742 7 35.4596 8 25.9882 6 10.7351 9 70.0492 8 5.2185 8)
Average genome size in population (length): 78.407
Average program size in population (points): 79.407
Average percent parens in population: 0.013
Minimum age in population: 26.67047119140625
Maximum age in population: 31.47990131378174
Average age in population: 29.2812457447052
Median age in population: 29.32333755493164
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.786
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.786
Total error diversity:				 0.381
Error (vector) diversity:			 0.394
Behavioral diversity:				 0.394
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 36762984
--- Timings ---
Current time: 1529614975840 milliseconds
Total Time:          88.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.0 seconds, 37.3%
Fitness Testing:     42.9 seconds, 48.5%
Report:              12.4 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 67758.04989999995
Test mean error for best: 33.87902
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.013801     
Correct output: -5.4090974816  | Program output: 31.013801     
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.013801     
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.013801      
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.013801     
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.013801      
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.470026983946384} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 44.559504711189845 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_add integer_yankdup float_inc 44.559504711189845 integer_dec integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.470026983946384 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8223 9 36.4229 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8295 11 27.1713 11 35.2342 10 24.9667 9 17.3493 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9434 9 14.5021 9 2.0064 9 18.1721 9 105.5266 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1259.7325
Mean: 25.19465
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2822.3608515
Median total errors in population: 1265.7385
Error averages by case: (85.20051259999964 9.036 94.35456019999936 10.029 90.70391529999988 10.024 155.5213962000004 10.404 82.4455987999999 10.102 83.21485489999968 9.718 69.24295129999963 10.288 97.11214609999949 10.668 101.38213569999972 10.375 93.9485780999991 9.539 75.99519389999995 10.944 76.04199940000063 9.359 137.77794360000033 10.619 69.1218792999995 7.261 115.20610020000008 8.945 141.19992199999916 10.188 113.49124150000027 9.964 83.5895087000002 9.983 74.61376190000028 9.532 79.93769329999981 10.062 157.31256499999893 11.077 164.93683940000142 9.096 102.18493769999982 11.458 158.94702650000053 10.326 69.40858989999941 10.472)
Error minima by case: (0.1787 7 5.4236 8 27.2248 8 50.4221 9 15.6586 8 14.93 8 0.1696 7 8.969 8 0.2362 8 17.1999 8 17.3355 8 0.1083 6 1.4695 8 0.506 6 1.0138 7 85.8852 9 35.9413 8 0.4959 8 0.0074 7 0.1742 7 40.2336 9 44.705 7 10.8605 9 70.0637 8 0.2197 8)
Average genome size in population (length): 79.245
Average program size in population (points): 80.245
Average percent parens in population: 0.013
Minimum age in population: 28.29782104492188
Maximum age in population: 32.90069246292114
Average age in population: 30.73484489870071
Median age in population: 30.76409506797791
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.797
Total error diversity:				 0.356
Error (vector) diversity:			 0.381
Behavioral diversity:				 0.381
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 38744384
--- Timings ---
Current time: 1529614980802 milliseconds
Total Time:          93.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.6 seconds, 37.1%
Fitness Testing:     45.4 seconds, 48.7%
Report:              13.1 seconds, 14.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 67758.04889999997
Test mean error for best: 33.87902
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.013801     
Correct output: -5.4090974816  | Program output: 31.013801     
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.013801     
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.013801      
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.013801     
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.013801      
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_max} {:instruction 80.51231866533993} {:instruction integer_flush} {:instruction in2} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.470026983946384} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_pop} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_max 80.51231866533993 integer_flush in2 integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 44.559504711189845 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_add integer_yankdup float_inc 44.559504711189845 integer_dec integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.470026983946384 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_pop float_sub float_yankdup)
Errors: [30.8223 9 36.4229 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8295 11 27.1713 11 35.2342 10 24.9667 9 17.3493 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9434 9 14.5021 9 2.0064 9 18.1721 9 105.5266 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1259.7325
Mean: 25.19465
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2688.3946362999977
Median total errors in population: 1266.7357
Error averages by case: (83.16619289999944 9.252 89.69131539999923 10.467 84.20415760000023 10.172 149.89500070000014 10.274 76.20447999999962 9.655 76.42750379999937 9.685 64.5049532000003 10.206 92.1050267999995 10.695 96.49484379999964 10.39 89.98891829999926 9.074 71.55276130000018 10.758 70.97719650000036 9.509 130.8298275000009 10.863 63.97454589999937 7.245 111.1885675999999 8.618 136.56355549999935 10.238 107.41761870000018 9.702 78.4670292000001 9.992 69.64812359999998 9.412 72.1606977000001 10.109 152.84517689999916 10.75 158.4918560000012 9.272 97.21373189999947 11.671 152.05448760000075 10.254 63.350067899999615 10.714)
Error minima by case: (0.8204 8 5.4229 8 27.2266 8 26.0 9 10.3086 8 14.9295 7 5.8315 8 0.1844 8 0.2362 8 8.0465 8 8.0 8 0.1083 7 1.5185 8 0.507 6 5.0138 6 12.0 8 9.9572 8 2.4959 8 0.0087 7 2.8258 8 13.0 9 21.0118 7 1.7071 8 49.0 8 0.716 8)
Average genome size in population (length): 80.539
Average program size in population (points): 81.539
Average percent parens in population: 0.012
Minimum age in population: 29.52677536010742
Maximum age in population: 34.3234760761261
Average age in population: 32.23168831777573
Median age in population: 32.29352223873138
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.289
Error (vector) diversity:			 0.309
Behavioral diversity:				 0.309
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 40757884
--- Timings ---
Current time: 1529614985103 milliseconds
Total Time:          97.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.9 seconds, 36.8%
Fitness Testing:     47.7 seconds, 48.9%
Report:              13.9 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 67758.04989999995
Test mean error for best: 33.87902
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.013801     
Correct output: -5.4090974816  | Program output: 31.013801     
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.013801     
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.013801      
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.013801     
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.013801      
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction float_yankdup} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_tan} {:instruction integer_rot} {:instruction in2} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction print_float} {:instruction float_frominteger} {:instruction 80.51231866533993} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction tagged_358} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction integer_yankdup} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_dec} {:instruction integer_dup_times} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.470026983946384} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add float_yankdup integer_fromfloat float_flush float_tan integer_rot in2 integer_mod integer_min float_frominteger print_float print_float float_frominteger 80.51231866533993 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_dup_times integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 44.559504711189845 float_rot integer_shove float_max tagged_358 float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_add integer_yankdup float_inc 44.559504711189845 integer_dec integer_dup_times float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.470026983946384 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8223 9 36.4229 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8295 11 27.1713 11 35.2342 10 24.9667 9 17.3493 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9434 9 14.5021 9 2.0064 9 18.1721 9 105.5266 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1259.7325
Mean: 25.19465
Genome size: 79
Size: 80
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2813.0826184000002
Median total errors in population: 1268.7325
Error averages by case: (86.2610860999991 9.38 92.45788209999938 10.584 88.41202510000038 10.215 154.5496227000005 10.209 81.93228179999943 9.561 80.48529419999902 9.721 67.60246580000047 10.236 98.36406249999952 10.69 102.56718159999983 10.388 96.35072909999936 8.991 73.83500320000024 10.885 77.58341010000075 9.597 136.68144640000116 10.87 71.511983499999 7.253 117.3178736000002 8.502 139.61223819999975 10.297 111.98815840000012 9.576 85.14116590000027 9.963 76.4615988000001 9.338 76.31773059999982 10.028 155.42144169999958 10.772 162.8123021000016 9.27 104.07619049999919 11.571 158.41916160000088 10.299 68.06828279999966 10.656)
Error minima by case: (1.1776 7 5.4239 8 27.2276 8 24.7156 9 15.6755 8 14.9305 8 3.8314 8 8.969 9 0.2362 9 3.9535 7 3.6797 8 1.1083 8 1.5191 9 0.508 5 15.986 6 64.8699 8 35.9413 8 0.4959 8 1.0084 8 1.7577 8 26.4596 9 25.0019 7 10.2929 9 70.1134 9 1.7963 8)
Average genome size in population (length): 81.226
Average program size in population (points): 82.226
Average percent parens in population: 0.012
Minimum age in population: 31.69875335693359
Maximum age in population: 35.79082024097443
Average age in population: 33.67104136061668
Median age in population: 33.75312197208405
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.287
Error (vector) diversity:			 0.313
Behavioral diversity:				 0.313
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 42788534
--- Timings ---
Current time: 1529614990146 milliseconds
Total Time:         102.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.5 seconds, 36.5%
Fitness Testing:     50.4 seconds, 49.2%
Report:              14.5 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 67812.0636
Test mean error for best: 33.90603
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01349      
Correct output: -5.4090974816  | Program output: 31.01338      
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.01352      
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.0135        
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.01388      
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.01310       
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8226 8 36.4225 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8292 10 27.1713 11 35.2342 10 24.9667 9 17.349 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9433 10 14.5021 9 2.0064 9 18.1721 9 105.5273 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1258.7323999999999
Mean: 25.174648
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2666.8593567999997
Median total errors in population: 1265.2343
Error averages by case: (81.57877079999945 9.306 88.18904509999986 10.333 83.37302510000013 9.988 149.89834910000042 9.93 76.41004149999993 9.455 75.86771329999911 9.691 62.75242010000028 10.502 88.51383170000015 10.708 96.27185610000025 10.27 88.03443389999968 9.181 68.54025060000075 11.273 70.7861455 9.728 132.15860600000022 10.662 62.237423799999114 7.13 110.5339406000006 8.472 135.8889135000004 10.223 106.6753418000002 9.584 78.46083109999962 9.807 69.16199949999971 9.217 71.12221370000039 9.685 151.9032961999999 11.152 158.8003284000012 9.046 96.78536770000011 11.09 153.49638630000047 10.316 62.504825400000016 10.165)
Error minima by case: (1.1639 7 5.4229 8 27.2265 8 27.0 8 15.6114 8 14.9295 7 1.1705 8 8.969 8 1.2311 8 4.9535 7 9.0 8 3.8926 8 1.5191 8 0.506 6 0.1372 6 13.0 8 35.8772 8 4.4968 8 1.0075 7 0.8258 7 14.0 7 44.996 7 10.8605 8 54.2644 9 6.2037 8)
Average genome size in population (length): 81.091
Average program size in population (points): 82.091
Average percent parens in population: 0.012
Minimum age in population: 32.85441589355469
Maximum age in population: 37.17189645767212
Average age in population: 35.01635959523916
Median age in population: 35.07822501659393
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.324
Error (vector) diversity:			 0.342
Behavioral diversity:				 0.342
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 44815809
--- Timings ---
Current time: 1529614994757 milliseconds
Total Time:         107.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.9 seconds, 36.2%
Fitness Testing:     52.9 seconds, 49.3%
Report:              15.4 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 67812.0636
Test mean error for best: 33.90603
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01349      
Correct output: -5.4090974816  | Program output: 31.01338      
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.01352      
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.0135        
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.01388      
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.01310       
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8226 8 36.4225 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8292 10 27.1713 11 35.2342 10 24.9667 9 17.349 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9433 10 14.5021 9 2.0064 9 18.1721 9 105.5273 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1258.7323999999999
Mean: 25.174648
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2623.942859699998
Median total errors in population: 1263.7378999999999
Error averages by case: (84.56370209999972 9.302 90.7459869000003 10.114 85.78768919999992 9.682 152.89157830000042 9.62 79.76834910000022 9.4 78.68478169999909 9.639 65.68700559999992 10.804 84.25225510000072 10.831 88.82644630000065 10.214 82.0669535999999 9.467 67.9031935000007 11.781 63.38566319999966 9.92 122.70179359999922 10.481 57.14047319999911 6.979 103.94670700000123 8.446 137.25140980000123 10.269 109.83900270000015 9.632 71.13836929999938 9.604 62.24518829999955 9.167 74.46476060000076 9.382 153.92168829999997 11.703 160.18026960000103 8.796 90.08344240000076 10.597 144.6143050999996 10.417 65.90084520000033 9.704)
Error minima by case: (0.1774 8 4.9674 9 27.2266 8 50.4221 8 13.6914 8 8.116 8 1.1705 8 8.969 8 0.2342 8 3.9535 8 16.3204 9 3.8936 8 1.4963 9 0.506 6 5.012 6 84.8699 9 33.9572 8 2.4979 8 1.0066 8 6.1722 7 36.4596 9 26.9882 7 10.2929 8 70.0905 9 0.2185 8)
Average genome size in population (length): 81.642
Average program size in population (points): 82.642
Average percent parens in population: 0.012
Minimum age in population: 34.04296588897705
Maximum age in population: 38.7876096367836
Average age in population: 36.39159103509784
Median age in population: 36.45769160985947
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.304
Error (vector) diversity:			 0.325
Behavioral diversity:				 0.325
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 46856909
--- Timings ---
Current time: 1529614999467 milliseconds
Total Time:         112.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.4 seconds, 36.1%
Fitness Testing:     55.5 seconds, 49.5%
Report:              16.0 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 67812.0636
Test mean error for best: 33.90603
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01349      
Correct output: -5.4090974816  | Program output: 31.01338      
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.01352      
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.0135        
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.01388      
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.01310       
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8226 8 36.4225 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8292 10 27.1713 11 35.2342 10 24.9667 9 17.349 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9433 10 14.5021 9 2.0064 9 18.1721 9 105.5273 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1258.7323999999999
Mean: 25.174648
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2647.453174900005
Median total errors in population: 1262.7343
Error averages by case: (87.11913609999996 9.329 92.95802460000039 10.106 89.27718509999985 9.588 155.99519530000052 9.539 83.4525692000001 9.418 81.90085879999904 9.618 67.96031620000007 10.951 82.72366440000101 10.968 86.12208340000076 10.224 80.7330590999999 9.541 69.55154360000074 11.924 61.472136599999665 10.034 120.96981799999898 10.423 56.044663299999286 6.927 102.12504890000139 8.526 140.96232260000133 10.271 112.4865922 9.673 68.50499699999955 9.552 60.196802699999374 9.199 77.83224550000064 9.333 155.9084811000004 11.887 165.6038134000008 8.708 88.70910970000091 10.463 143.03134949999978 10.454 69.6071586000006 9.549)
Error minima by case: (1.1771 7 5.4215 8 27.2255 8 50.4221 8 15.6685 8 14.9279 7 5.1695 8 8.969 8 0.2342 8 14.9392 8 17.3465 9 2.8937 8 1.519 9 0.5059 6 11.9881 6 0.6327 9 6.0428 8 2.4979 8 1.0064 7 6.1721 7 20.4596 9 44.705 7 10.8605 8 33.8761 9 3.2175 8)
Average genome size in population (length): 81.65
Average program size in population (points): 82.65
Average percent parens in population: 0.012
Minimum age in population: 35.31031322479248
Maximum age in population: 39.95187523961067
Average age in population: 37.79576834687591
Median age in population: 37.84892502427101
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.259
Error (vector) diversity:			 0.27
Behavioral diversity:				 0.27
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 48898209
--- Timings ---
Current time: 1529615004031 milliseconds
Total Time:         116.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.9 seconds, 35.9%
Fitness Testing:     58.0 seconds, 49.7%
Report:              16.6 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 67812.0636
Test mean error for best: 33.90603
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01349      
Correct output: -5.4090974816  | Program output: 31.01338      
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.01352      
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.0135        
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.01388      
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.01310       
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_flush})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_flush)
Errors: [30.8226 8 36.4225 10 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8292 10 27.1713 11 35.2342 10 24.9667 9 17.349 12 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9433 10 14.5021 9 2.0064 9 18.1721 9 105.5273 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1258.7323999999999
Mean: 25.174648
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2559.8003354000043
Median total errors in population: 1262.7327
Error averages by case: (87.65136399999972 9.291 94.43472050000034 10.079 85.17116630000001 9.631 151.4203459000006 9.499 77.95866960000025 9.367 77.3790459999991 9.605 69.33267230000003 10.857 78.45937240000086 10.927 83.39383000000045 10.162 73.68381789999971 9.49 70.48619290000069 11.913 57.27904799999965 10.019 116.15985519999899 10.396 51.628063899999596 6.896 96.33532130000098 8.461 135.9018704000013 10.259 112.79766149999995 9.679 65.50713869999967 9.513 55.90149249999945 9.135 72.80952680000075 9.281 156.73046270000032 11.859 159.79387260000092 8.72 81.83788640000095 10.449 138.32360579999934 10.391 64.06433180000053 9.48)
Error minima by case: (0.1775 8 5.4219 7 27.2256 7 50.7131 8 15.6115 8 14.9285 6 3.8157 8 2.8326 9 1.2341 9 5.9535 8 16.3217 7 3.1063 8 1.52 9 0.506 6 14.9882 6 84.8714 7 35.8773 8 11.5022 8 0.0064 7 17.172 7 26.4596 9 44.996 7 4.7241 9 70.1142 6 4.7831 7)
Average genome size in population (length): 81.576
Average program size in population (points): 82.576
Average percent parens in population: 0.012
Minimum age in population: 36.31031322479248
Maximum age in population: 41.1783929169178
Average age in population: 39.18467334313691
Median age in population: 39.23159154504538
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.285
Error (vector) diversity:			 0.292
Behavioral diversity:				 0.293
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 50937684
--- Timings ---
Current time: 1529615009041 milliseconds
Total Time:         121.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.5 seconds, 35.8%
Fitness Testing:     60.7 seconds, 50.0%
Report:              17.2 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 67798.05440000001
Test mean error for best: 33.89903
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01364      
Correct output: -5.4090974816  | Program output: 31.01353      
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.01367      
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.01320       
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.013103     
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.01325       
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction integer_max} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan integer_max 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8224 9 36.4226 11 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8294 9 27.1713 11 35.2342 10 24.9667 9 17.3487 11 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9441 9 14.5021 9 2.0064 9 18.1721 9 105.5271 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1257.7328
Mean: 25.154655
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2515.9251120000017
Median total errors in population: 1264.234
Error averages by case: (84.53021519999982 9.225 90.83719770000054 10.109 81.38694419999999 9.655 148.93233000000058 9.511 76.6220142 9.359 74.12728559999908 9.627 65.58883799999995 10.682 78.39854330000081 10.942 82.84665260000055 10.173 75.4960378 9.501 61.65906740000038 11.914 57.04804129999967 9.993 117.021508399999 10.377 51.712431699999456 6.907 98.02358110000115 8.449 131.32698700000117 10.303 109.88927799999969 9.828 64.91109959999976 9.508 55.61850579999946 9.153 70.2790676000008 9.329 151.71049100000002 11.842 157.34045460000056 8.753 83.65175780000085 10.44 138.90385289999944 10.444 62.57192920000054 9.467)
Error minima by case: (1.177 8 5.4225 8 27.2254 7 8.0458 8 15.611 8 14.9288 8 5.1705 8 8.829 9 0.2342 9 17.0599 8 16.3217 10 5.1061 8 1.4973 9 0.506 6 2.012 7 18.8714 8 35.8672 9 13.48 8 1.0063 7 16.8279 8 25.4596 9 15.9882 7 10.7205 9 52.1152 9 6.2168 7)
Average genome size in population (length): 81.677
Average program size in population (points): 82.677
Average percent parens in population: 0.012
Minimum age in population: 38.08643614500761
Maximum age in population: 42.91810816526413
Average age in population: 40.48303436786309
Median age in population: 40.52928334474564
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.306
Error (vector) diversity:			 0.315
Behavioral diversity:				 0.315
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 52979609
--- Timings ---
Current time: 1529615013540 milliseconds
Total Time:         126.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.8 seconds, 35.5%
Fitness Testing:     63.1 seconds, 50.1%
Report:              18.0 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 67798.05440000001
Test mean error for best: 33.89903
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 20.01364      
Correct output: -5.4090974816  | Program output: 31.01353      
Correct output: -27.2127680421 | Program output: 1.013801      
Correct output: 122.7288713888 | Program output: 20.013801     
Correct output: 94.6913893946  | Program output: 72.013801     
Correct output: -14.9157086017 | Program output: 8.013801      
Correct output: 9.1842992567   | Program output: 17.01367      
Correct output: 27.1844373898  | Program output: 0.01316       
Correct output: -32.7789176398 | Program output: -68.01316     
Correct output: 18.9535126473  | Program output: -6.01316      
Correct output: -17.3355427007 | Program output: 0.01320       
Correct output: -19.9068842187 | Program output: -26.01316     
Correct output: -82.5342639546 | Program output: -9.01316      
Correct output: -0.5071453016  | Program output: 0.01316       
Correct output: -65.0013149084 | Program output: -13.01316     
Correct output: -85.885174074  | Program output: 0.013801      
Correct output: 126.9572193111 | Program output: 72.013103     
Correct output: -41.5110180666 | Program output: -56.01316     
Correct output: -19.0067113372 | Program output: -21.01316     
Correct output: 53.8417318683  | Program output: 72.013801     
Correct output: 112.5403599984 | Program output: 7.01325       
Correct output: 117.0118101936 | Program output: 2.013801      
Correct output: 25.2929380926  | Program output: -12.01316     
Correct output: -119.128542356 | Program output: -26.01316     
Correct output: 79.7963324215  | Program output: 72.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction integer_max} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan integer_max 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [30.8224 9 36.4226 11 28.2266 9 102.7151 9 22.6776 9 22.9295 9 7.8294 9 27.1713 11 35.2342 10 24.9667 9 17.3487 11 6.1063 10 73.5211 10 0.5203 6 51.9882 8 85.899 10 54.9441 9 14.5021 9 2.0064 9 18.1721 9 105.5271 12 114.998 8 37.3061 10 93.1154 10 7.7825 9]
Total: 1257.7328
Mean: 25.154655
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2808.941609100003
Median total errors in population: 1259.7325
Error averages by case: (92.52804429999964 9.048 99.16995290000057 10.193 91.29307429999945 9.635 156.30642080000064 9.515 82.98557970000005 9.413 83.36332789999912 9.643 74.39014899999978 10.464 94.12612040000107 10.961 98.61389680000127 10.213 92.94781050000029 9.502 69.6137564000004 12.023 73.57965789999962 10.061 131.98651729999884 10.375 67.36618559999908 6.9 114.27372850000165 8.456 142.44952810000174 10.335 116.44517299999974 9.998 81.21859949999917 9.55 72.4663931999993 9.185 78.79481110000049 9.354 160.83348380000027 11.875 163.6339595000004 8.781 100.56264550000115 10.425 153.96884110000002 10.438 70.19695200000056 9.484)
Error minima by case: (0.1774 8 5.4225 9 27.2266 8 10.2711 8 15.6113 7 14.929 8 0.8292 9 8.8287 9 0.2342 9 2.9535 8 16.322 8 0.1063 7 1.5053 9 0.506 6 1.0118 6 84.8714 9 6.0428 8 0.5021 8 1.0064 7 0.1721 7 20.4596 9 15.9882 7 9.2929 9 70.0995 9 0.2175 8)
Average genome size in population (length): 82.119
Average program size in population (points): 83.119
Average percent parens in population: 0.012
Minimum age in population: 39.44990894198418
Maximum age in population: 43.8411457836628
Average age in population: 41.8537604002431
Median age in population: 41.93520081974566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.304
Error (vector) diversity:			 0.315
Behavioral diversity:				 0.316
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 55032609
--- Timings ---
Current time: 1529615018135 milliseconds
Total Time:         130.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.2 seconds, 35.4%
Fitness Testing:     65.6 seconds, 50.2%
Report:              18.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 67817.69750000001
Test mean error for best: 33.90885
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01349      
Correct output: -5.4090974816  | Program output: 32.01338      
Correct output: -27.2127680421 | Program output: 2.013801      
Correct output: 122.7288713888 | Program output: 21.013801     
Correct output: 94.6913893946  | Program output: 73.013801     
Correct output: -14.9157086017 | Program output: 9.013801      
Correct output: 9.1842992567   | Program output: 18.01352      
Correct output: 27.1844373898  | Program output: 1.01316       
Correct output: -32.7789176398 | Program output: -67.01316     
Correct output: 18.9535126473  | Program output: -5.01316      
Correct output: -17.3355427007 | Program output: 1.0135        
Correct output: -19.9068842187 | Program output: -25.01316     
Correct output: -82.5342639546 | Program output: -8.01316      
Correct output: -0.5071453016  | Program output: 1.01316       
Correct output: -65.0013149084 | Program output: -12.01316     
Correct output: -85.885174074  | Program output: 1.013801      
Correct output: 126.9572193111 | Program output: 73.01388      
Correct output: -41.5110180666 | Program output: -55.01316     
Correct output: -19.0067113372 | Program output: -20.01316     
Correct output: 53.8417318683  | Program output: 73.013801     
Correct output: 112.5403599984 | Program output: 8.01310       
Correct output: 117.0118101936 | Program output: 3.013801      
Correct output: 25.2929380926  | Program output: -11.01316     
Correct output: -119.128542356 | Program output: -25.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_395} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_395 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [29.8226 9 37.4225 10 29.2266 8 101.7151 9 21.6776 9 23.9295 9 8.8292 9 26.1713 11 34.2342 10 23.9667 9 18.349 11 5.1063 10 74.5211 9 1.5203 7 52.9882 8 86.899 10 53.9433 11 13.5021 9 1.0064 9 19.1721 8 104.5273 12 113.998 8 36.3061 11 94.1154 10 6.7825 9]
Total: 1254.7324
Mean: 25.094648
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2356.518401399998
Median total errors in population: 1260.7331
Error averages by case: (81.94330979999972 8.866 87.37484830000044 10.197 75.09838170000043 9.6 144.15817090000053 9.488 70.01044880000039 9.392 68.59428619999922 9.628 62.42375280000005 10.256 68.21011140000076 10.905 74.50507870000001 10.171 68.00430459999953 9.468 53.314376200000055 12.039 48.682910599999694 10.052 109.04113249999907 10.356 41.313696999999806 6.834 91.54947450000085 8.414 127.02555320000103 10.32 108.02362999999949 10.116 55.906964799999805 9.496 47.42626069999961 9.123 64.77184240000074 9.295 148.1290554000002 11.85 151.97252930000116 8.715 76.86303090000074 10.388 131.4398280999991 10.403 55.854422600000326 9.509)
Error minima by case: (0.1774 7 5.4224 8 27.2256 8 50.4221 8 15.6113 8 14.9289 8 3.8157 8 8.8296 7 1.2342 9 1.9535 8 16.322 7 4.1063 8 1.5033 7 0.505 6 3.5739 6 17.31 8 6.0428 8 6.5021 8 0.0064 7 6.1721 8 20.4596 7 15.9882 7 8.2929 8 50.5533 9 3.2168 8)
Average genome size in population (length): 82.987
Average program size in population (points): 83.987
Average percent parens in population: 0.012
Minimum age in population: 40.44990894198418
Maximum age in population: 45.16648375429213
Average age in population: 43.30360976801068
Median age in population: 43.35025408724323
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.292
Error (vector) diversity:			 0.304
Behavioral diversity:				 0.305
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 57107284
--- Timings ---
Current time: 1529615022743 milliseconds
Total Time:         135.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.6 seconds, 35.2%
Fitness Testing:     68.3 seconds, 50.4%
Report:              19.4 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 67817.69750000001
Test mean error for best: 33.90885
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01349      
Correct output: -5.4090974816  | Program output: 32.01338      
Correct output: -27.2127680421 | Program output: 2.013801      
Correct output: 122.7288713888 | Program output: 21.013801     
Correct output: 94.6913893946  | Program output: 73.013801     
Correct output: -14.9157086017 | Program output: 9.013801      
Correct output: 9.1842992567   | Program output: 18.01352      
Correct output: 27.1844373898  | Program output: 1.01316       
Correct output: -32.7789176398 | Program output: -67.01316     
Correct output: 18.9535126473  | Program output: -5.01316      
Correct output: -17.3355427007 | Program output: 1.0135        
Correct output: -19.9068842187 | Program output: -25.01316     
Correct output: -82.5342639546 | Program output: -8.01316      
Correct output: -0.5071453016  | Program output: 1.01316       
Correct output: -65.0013149084 | Program output: -12.01316     
Correct output: -85.885174074  | Program output: 1.013801      
Correct output: 126.9572193111 | Program output: 73.01388      
Correct output: -41.5110180666 | Program output: -55.01316     
Correct output: -19.0067113372 | Program output: -20.01316     
Correct output: 53.8417318683  | Program output: 73.013801     
Correct output: 112.5403599984 | Program output: 8.01310       
Correct output: 117.0118101936 | Program output: 3.013801      
Correct output: 25.2929380926  | Program output: -11.01316     
Correct output: -119.128542356 | Program output: -25.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_395} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_395 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [29.8226 9 37.4225 10 29.2266 8 101.7151 9 21.6776 9 23.9295 9 8.8292 9 26.1713 11 34.2342 10 23.9667 9 18.349 11 5.1063 10 74.5211 9 1.5203 7 52.9882 8 86.899 10 53.9433 11 13.5021 9 1.0064 9 19.1721 8 104.5273 12 113.998 8 36.3061 11 94.1154 10 6.7825 9]
Total: 1254.7324
Mean: 25.094648
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2483.9692499999965
Median total errors in population: 1260.73335
Error averages by case: (84.31228849999972 8.799 91.03414540000045 10.197 80.07446130000005 9.557 147.7141977000008 9.457 76.32020170000011 9.339 75.05999869999917 9.603 65.04945160000007 10.147 75.80459130000078 10.929 82.17646550000048 10.161 72.06876799999968 9.468 55.637785100000045 11.967 56.01466159999965 10.031 115.94614189999916 10.356 49.400049899999544 6.85 95.25657670000099 8.444 130.54551410000124 10.26 109.22286709999943 10.104 64.29841709999984 9.475 54.503178899999604 9.167 71.2226773000007 9.31 150.29522020000022 11.753 156.23959400000055 8.675 80.24744800000089 10.378 138.80676619999932 10.396 62.412782200000464 9.482)
Error minima by case: (0.1774 8 5.4225 6 27.2256 6 10.2711 7 15.6164 6 14.9289 6 3.8157 8 8.969 6 0.2344 9 5.9535 6 8.0 6 5.1063 8 1.5183 6 0.505 6 14.9882 7 12.0 6 6.0428 8 0.5021 8 1.0064 7 6.1721 7 13.0 7 15.9882 6 10.8605 6 49.0 7 3.2176 8)
Average genome size in population (length): 83.295
Average program size in population (points): 84.295
Average percent parens in population: 0.012
Minimum age in population: 42.27711331099272
Maximum age in population: 46.59461107850075
Average age in population: 44.69679684238182
Median age in population: 44.72808370739222
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.826
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.826
Total error diversity:				 0.313
Error (vector) diversity:			 0.324
Behavioral diversity:				 0.324
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 59189684
--- Timings ---
Current time: 1529615027307 milliseconds
Total Time:         139.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.1 seconds, 35.1%
Fitness Testing:     70.7 seconds, 50.5%
Report:              20.0 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 67817.69750000001
Test mean error for best: 33.90885
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01349      
Correct output: -5.4090974816  | Program output: 32.01338      
Correct output: -27.2127680421 | Program output: 2.013801      
Correct output: 122.7288713888 | Program output: 21.013801     
Correct output: 94.6913893946  | Program output: 73.013801     
Correct output: -14.9157086017 | Program output: 9.013801      
Correct output: 9.1842992567   | Program output: 18.01352      
Correct output: 27.1844373898  | Program output: 1.01316       
Correct output: -32.7789176398 | Program output: -67.01316     
Correct output: 18.9535126473  | Program output: -5.01316      
Correct output: -17.3355427007 | Program output: 1.0135        
Correct output: -19.9068842187 | Program output: -25.01316     
Correct output: -82.5342639546 | Program output: -8.01316      
Correct output: -0.5071453016  | Program output: 1.01316       
Correct output: -65.0013149084 | Program output: -12.01316     
Correct output: -85.885174074  | Program output: 1.013801      
Correct output: 126.9572193111 | Program output: 73.01388      
Correct output: -41.5110180666 | Program output: -55.01316     
Correct output: -19.0067113372 | Program output: -20.01316     
Correct output: 53.8417318683  | Program output: 73.013801     
Correct output: 112.5403599984 | Program output: 8.01310       
Correct output: 117.0118101936 | Program output: 3.013801      
Correct output: 25.2929380926  | Program output: -11.01316     
Correct output: -119.128542356 | Program output: -25.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_395} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_395 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [29.8226 9 37.4225 10 29.2266 8 101.7151 9 21.6776 9 23.9295 9 8.8292 9 26.1713 11 34.2342 10 23.9667 9 18.349 11 5.1063 10 74.5211 9 1.5203 7 52.9882 8 86.899 10 53.9433 11 13.5021 9 1.0064 9 19.1721 8 104.5273 12 113.998 8 36.3061 11 94.1154 10 6.7825 9]
Total: 1254.7324
Mean: 25.094648
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2438.416696999997
Median total errors in population: 1259.7325
Error averages by case: (77.3787087999997 8.947 83.97901190000037 10.301 78.97193370000045 9.545 145.73105140000075 9.466 72.01558030000064 9.386 71.32321229999899 9.568 58.5638350000001 10.106 76.91579450000074 10.975 82.14782390000032 10.176 75.01347469999955 9.504 54.01207560000004 11.916 56.38657749999971 10.007 116.60970609999909 10.378 49.90743599999952 6.85 97.46345030000104 8.444 130.2939298000012 10.27 102.98980959999933 9.973 64.32114509999967 9.473 54.95103479999946 9.145 66.63691800000109 9.332 144.07762730000104 11.667 154.50550490000128 8.658 83.26360100000089 10.399 138.57320419999922 10.412 57.99725030000057 9.489)
Error minima by case: (0.1639 7 4.7536 8 27.2264 7 49.7151 8 15.6714 8 14.9287 7 3.8157 8 8.969 9 0.2342 9 0.9535 8 17.1341 7 5.1063 8 1.5143 9 0.3717 5 1.9882 7 85.8962 7 35.9372 8 6.502 8 1.0064 7 6.1713 8 24.4596 8 43.998 7 7.2929 8 70.1085 8 5.2175 8)
Average genome size in population (length): 83.672
Average program size in population (points): 84.672
Average percent parens in population: 0.012
Minimum age in population: 43.43464355915785
Maximum age in population: 48.07093412266113
Average age in population: 46.07096062562615
Median age in population: 46.06127499789
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.821
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.821
Total error diversity:				 0.322
Error (vector) diversity:			 0.339
Behavioral diversity:				 0.339
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 61281509
--- Timings ---
Current time: 1529615031880 milliseconds
Total Time:         144.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.5 seconds, 34.9%
Fitness Testing:     73.2 seconds, 50.7%
Report:              20.6 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 67817.69750000001
Test mean error for best: 33.90885
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01349      
Correct output: -5.4090974816  | Program output: 32.01338      
Correct output: -27.2127680421 | Program output: 2.013801      
Correct output: 122.7288713888 | Program output: 21.013801     
Correct output: 94.6913893946  | Program output: 73.013801     
Correct output: -14.9157086017 | Program output: 9.013801      
Correct output: 9.1842992567   | Program output: 18.01352      
Correct output: 27.1844373898  | Program output: 1.01316       
Correct output: -32.7789176398 | Program output: -67.01316     
Correct output: 18.9535126473  | Program output: -5.01316      
Correct output: -17.3355427007 | Program output: 1.0135        
Correct output: -19.9068842187 | Program output: -25.01316     
Correct output: -82.5342639546 | Program output: -8.01316      
Correct output: -0.5071453016  | Program output: 1.01316       
Correct output: -65.0013149084 | Program output: -12.01316     
Correct output: -85.885174074  | Program output: 1.013801      
Correct output: 126.9572193111 | Program output: 73.01388      
Correct output: -41.5110180666 | Program output: -55.01316     
Correct output: -19.0067113372 | Program output: -20.01316     
Correct output: 53.8417318683  | Program output: 73.013801     
Correct output: 112.5403599984 | Program output: 8.01310       
Correct output: 117.0118101936 | Program output: 3.013801      
Correct output: 25.2929380926  | Program output: -11.01316     
Correct output: -119.128542356 | Program output: -25.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [29.8226 9 37.4225 10 29.2266 8 101.7151 9 21.6776 9 23.9295 9 8.8292 9 26.1713 11 34.2342 10 23.9667 9 18.349 11 5.1063 10 74.5211 9 1.5203 7 52.9882 8 86.899 10 53.9433 11 13.5021 9 1.0064 9 19.1721 8 104.5273 12 113.998 8 36.3061 11 94.1154 10 6.7825 9]
Total: 1254.7324
Mean: 25.094648
Genome size: 85
Size: 86
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2497.962389400001
Median total errors in population: 1258.7323999999999
Error averages by case: (87.11239599999985 8.983 93.75130570000064 10.352 77.33562240000008 9.613 143.9096329000007 9.468 70.08452570000058 9.408 70.90811559999916 9.637 68.54569530000006 10.071 75.8656296000008 10.955 82.8225893000006 10.192 74.67336259999993 9.479 70.89894189999998 11.862 56.81849839999967 10.044 117.936087299999 10.321 49.82503469999937 6.853 98.51527710000131 8.428 129.91685420000138 10.289 111.30911569999913 9.979 64.8505753999996 9.483 54.787442499999564 9.172 65.76950700000101 9.339 155.12696410000186 11.545 152.829280000001 8.714 83.66979620000095 10.39 139.1838143999994 10.413 57.03032540000043 9.496)
Error minima by case: (0.1774 7 5.4221 8 27.2258 7 50.4221 8 14.6776 8 14.9287 7 3.8292 8 8.969 7 0.2344 9 2.9535 8 16.3224 7 4.1063 8 1.5205 7 0.506 6 14.9882 7 84.8714 7 34.9433 7 0.5028 8 0.0064 7 6.1721 8 26.4596 7 44.705 6 9.2929 8 70.1147 9 4.2175 8)
Average genome size in population (length): 84.105
Average program size in population (points): 85.105
Average percent parens in population: 0.012
Minimum age in population: 44.9576188698411
Maximum age in population: 49.76150513486937
Average age in population: 47.51973423362116
Median age in population: 47.53176909859758
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.33
Error (vector) diversity:			 0.348
Behavioral diversity:				 0.349
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 63384159
--- Timings ---
Current time: 1529615036673 milliseconds
Total Time:         149.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.0 seconds, 34.8%
Fitness Testing:     75.7 seconds, 50.8%
Report:              21.3 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 67787.69729999996
Test mean error for best: 33.89385
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01348      
Correct output: -5.4090974816  | Program output: 32.01337      
Correct output: -27.2127680421 | Program output: 2.013801      
Correct output: 122.7288713888 | Program output: 21.013801     
Correct output: 94.6913893946  | Program output: 73.013801     
Correct output: -14.9157086017 | Program output: 9.013801      
Correct output: 9.1842992567   | Program output: 18.01351      
Correct output: 27.1844373898  | Program output: 1.01316       
Correct output: -32.7789176398 | Program output: -67.01316     
Correct output: 18.9535126473  | Program output: -5.01316      
Correct output: -17.3355427007 | Program output: 1.0134        
Correct output: -19.9068842187 | Program output: -25.01316     
Correct output: -82.5342639546 | Program output: -8.01316      
Correct output: -0.5071453016  | Program output: 1.01316       
Correct output: -65.0013149084 | Program output: -12.01316     
Correct output: -85.885174074  | Program output: 1.013801      
Correct output: 126.9572193111 | Program output: 73.01387      
Correct output: -41.5110180666 | Program output: -55.01316     
Correct output: -19.0067113372 | Program output: -20.01316     
Correct output: 53.8417318683  | Program output: 73.013801     
Correct output: 112.5403599984 | Program output: 8.0139        
Correct output: 117.0118101936 | Program output: 3.013801      
Correct output: 25.2929380926  | Program output: -11.01316     
Correct output: -119.128542356 | Program output: -25.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_395} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_395 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [29.8226 9 37.4225 10 29.2266 8 101.7151 9 21.6776 9 23.9295 9 8.8292 9 26.1713 11 34.2342 10 23.9667 9 18.3489 11 5.1063 10 74.5211 9 1.5203 7 52.9882 8 86.899 10 53.9433 11 13.5021 9 1.0064 9 19.1721 8 104.5265 11 113.998 8 36.3061 11 94.1154 10 6.7825 9]
Total: 1253.7315
Mean: 25.07463
Genome size: 86
Size: 87
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2643.9592913000015
Median total errors in population: 1259.7325
Error averages by case: (93.7291800999997 8.905 100.38974780000044 10.266 90.31676699999998 9.523 155.7511815000007 9.461 84.69925400000015 9.391 83.64719129999904 9.597 75.14152059999991 10.118 78.23908070000086 10.953 84.61232220000038 10.195 78.2443463999997 9.486 64.83961729999976 11.879 58.375195499999705 10.068 118.621146699999 10.275 51.125181799999424 6.981 99.98882250000132 8.456 140.2863512000015 10.298 118.1326809999993 10.195 67.26489959999965 9.521 58.24760309999941 9.189 79.62661690000056 9.232 156.2221708000022 11.406 164.738658400001 8.679 85.77132790000091 10.471 141.24490059999928 10.41 70.22152640000057 9.527)
Error minima by case: (0.1774 8 4.0781 8 25.7933 7 50.4221 8 14.6776 8 14.9287 8 4.1708 8 0.8156 9 0.2251 8 5.9535 8 17.3355 8 0.8938 8 1.5163 8 0.4142 6 4.9882 6 85.8852 9 25.9572 8 0.4977 8 1.0045 7 16.8279 6 25.4596 8 44.705 7 2.7071 9 70.1105 8 4.2037 7)
Average genome size in population (length): 84.253
Average program size in population (points): 85.253
Average percent parens in population: 0.012
Minimum age in population: 46.25388175155967
Maximum age in population: 51.132139129797
Average age in population: 48.94464646635065
Median age in population: 48.96928049033158
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.308
Error (vector) diversity:			 0.327
Behavioral diversity:				 0.328
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 65490509
--- Timings ---
Current time: 1529615041195 milliseconds
Total Time:         153.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.4 seconds, 34.7%
Fitness Testing:     78.2 seconds, 50.8%
Report:              22.1 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 67786.69899999995
Test mean error for best: 33.89335
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01348      
Correct output: -5.4090974816  | Program output: 32.01337      
Correct output: -27.2127680421 | Program output: 2.013801      
Correct output: 122.7288713888 | Program output: 21.013801     
Correct output: 94.6913893946  | Program output: 73.013801     
Correct output: -14.9157086017 | Program output: 9.013801      
Correct output: 9.1842992567   | Program output: 18.01351      
Correct output: 27.1844373898  | Program output: 1.01316       
Correct output: -32.7789176398 | Program output: -67.01316     
Correct output: 18.9535126473  | Program output: -5.01316      
Correct output: -17.3355427007 | Program output: 1.0134        
Correct output: -19.9068842187 | Program output: -25.01316     
Correct output: -82.5342639546 | Program output: -8.01316      
Correct output: -0.5071453016  | Program output: 1.01316       
Correct output: -65.0013149084 | Program output: -12.01316     
Correct output: -85.885174074  | Program output: 1.013801      
Correct output: 126.9572193111 | Program output: 73.01387      
Correct output: -41.5110180666 | Program output: -55.01316     
Correct output: -19.0067113372 | Program output: -20.01316     
Correct output: 53.8417318683  | Program output: 73.013801     
Correct output: 112.5403599984 | Program output: 8.0139        
Correct output: 117.0118101936 | Program output: 3.013801      
Correct output: 25.2929380926  | Program output: -11.01316     
Correct output: -119.128542356 | Program output: -25.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_395} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction float_mult} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_395 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank float_mult in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult float_add float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub)
Errors: [29.8226 9 37.4225 10 29.2266 8 101.7151 9 21.6776 9 23.9295 9 8.8292 9 26.1713 11 34.2342 10 23.9667 9 18.3489 11 5.1063 10 74.5211 9 1.5203 7 52.9882 8 86.899 10 53.9433 11 13.5021 9 1.0064 9 19.1721 8 104.5265 11 113.998 8 36.3061 11 94.1154 10 6.7825 9]
Total: 1253.7315
Mean: 25.07463
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2670.742401700004
Median total errors in population: 1259.7325
Error averages by case: (91.85857939999975 9.107 98.98258520000044 10.232 89.84284459999968 9.341 154.9980613000008 9.498 83.53932719999973 9.446 81.07393349999899 9.629 74.2293075999994 9.998 82.71163540000096 10.958 87.76350470000085 10.228 80.66297330000029 9.538 66.79183279999971 11.784 62.352009599999576 10.063 122.24483719999891 10.102 56.603667499999204 7.206 103.59869120000161 8.488 140.53074280000163 10.349 117.13663589999948 10.465 70.32783699999946 9.543 61.02602109999938 9.169 76.95477900000043 9.058 157.51473760000175 11.477 162.48248710000053 8.755 88.405907500001 10.723 144.34713059999993 10.452 69.61433260000064 9.539)
Error minima by case: (0.1774 7 5.4591 9 27.2265 7 6.4958 8 14.6776 8 14.9659 8 3.1708 8 8.969 9 0.2342 9 13.9535 8 17.3355 8 3.1069 8 1.5053 9 0.506 6 12.012 7 85.8852 9 6.0428 7 6.4977 8 0.0064 6 0.1721 6 20.4596 8 15.9882 7 10.8605 8 25.7129 9 4.7825 8)
Average genome size in population (length): 84.533
Average program size in population (points): 85.533
Average percent parens in population: 0.012
Minimum age in population: 47.49152373685502
Maximum age in population: 52.50495550830965
Average age in population: 50.43753540519314
Median age in population: 50.48409560615255
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.343
Error (vector) diversity:			 0.364
Behavioral diversity:				 0.364
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 67603884
--- Timings ---
Current time: 1529615045826 milliseconds
Total Time:         158.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.8 seconds, 34.6%
Fitness Testing:     80.8 seconds, 51.0%
Report:              22.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 67882.2646
Test mean error for best: 33.94113
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 22.01349      
Correct output: -5.4090974816  | Program output: 33.01338      
Correct output: -27.2127680421 | Program output: 3.013801      
Correct output: 122.7288713888 | Program output: 22.013801     
Correct output: 94.6913893946  | Program output: 74.013801     
Correct output: -14.9157086017 | Program output: 10.013801     
Correct output: 9.1842992567   | Program output: 19.01352      
Correct output: 27.1844373898  | Program output: 2.01316       
Correct output: -32.7789176398 | Program output: -66.01316     
Correct output: 18.9535126473  | Program output: -4.01316      
Correct output: -17.3355427007 | Program output: 2.0135        
Correct output: -19.9068842187 | Program output: -24.01316     
Correct output: -82.5342639546 | Program output: -7.01316      
Correct output: -0.5071453016  | Program output: 2.01316       
Correct output: -65.0013149084 | Program output: -11.01316     
Correct output: -85.885174074  | Program output: 2.013801      
Correct output: 126.9572193111 | Program output: 74.01388      
Correct output: -41.5110180666 | Program output: -54.01316     
Correct output: -19.0067113372 | Program output: -19.01316     
Correct output: 53.8417318683  | Program output: 74.013801     
Correct output: 112.5403599984 | Program output: 9.01310       
Correct output: 117.0118101936 | Program output: 4.013801      
Correct output: 25.2929380926  | Program output: -10.01316     
Correct output: -119.128542356 | Program output: -24.01316     
Correct output: 79.7963324215  | Program output: 74.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_yank} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mod integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_yank integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [28.8226 9 38.4225 10 30.2266 9 100.7151 8 20.6776 8 24.9295 8 9.8292 10 25.1713 10 33.2342 10 22.9667 9 19.349 12 4.1063 10 75.5211 10 2.5203 7 53.9882 8 87.899 10 52.9433 11 12.5021 9 0.0064 7 20.1721 9 103.5273 12 112.998 8 35.3061 11 95.1154 10 5.7825 9]
Total: 1250.7324
Mean: 25.014648
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2629.3563094000006
Median total errors in population: 1261.7326
Error averages by case: (88.32173339999976 9.446 96.35310770000049 10.198 83.76571990000008 9.017 150.6685747000006 9.46 77.83367180000025 9.396 76.4966068999991 9.63 71.39039999999999 9.678 85.32248230000087 10.949 88.98126680000071 10.168 83.07927219999993 9.533 61.628900200000025 11.433 63.7370071999996 10.024 125.10255039999889 9.77 59.52815869999909 7.53 106.1966927000016 8.477 135.39258440000134 10.289 113.74253959999955 10.783 71.5939972999994 9.483 62.542802199999365 9.133 73.60785570000077 8.696 152.03727740000107 11.6 156.10899950000106 8.7 90.69360630000104 10.974 147.14911549999948 10.419 63.7613866000006 9.534)
Error minima by case: (0.1639 8 5.4225 8 27.2259 7 49.7151 8 13.6782 8 14.9291 8 1.8292 7 14.1713 9 0.2342 8 5.9404 8 16.3221 8 0.8937 8 1.5205 8 0.506 6 0.0118 6 84.8714 8 33.944 8 0.4979 7 0.0064 7 1.1721 6 16.4596 7 15.9882 6 12.2798 9 70.1147 8 0.2175 8)
Average genome size in population (length): 84.744
Average program size in population (points): 85.744
Average percent parens in population: 0.012
Minimum age in population: 49.55373995663831
Maximum age in population: 53.98608517975663
Average age in population: 51.94534628105479
Median age in population: 51.98580978656537
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.854
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.854
Total error diversity:				 0.349
Error (vector) diversity:			 0.369
Behavioral diversity:				 0.369
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 69722548
--- Timings ---
Current time: 1529615050769 milliseconds
Total Time:         163.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.3 seconds, 34.5%
Fitness Testing:     83.3 seconds, 51.1%
Report:              23.4 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 67852.26559999996
Test mean error for best: 33.92613
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 22.01348      
Correct output: -5.4090974816  | Program output: 33.01337      
Correct output: -27.2127680421 | Program output: 3.013801      
Correct output: 122.7288713888 | Program output: 22.013801     
Correct output: 94.6913893946  | Program output: 74.013801     
Correct output: -14.9157086017 | Program output: 10.013801     
Correct output: 9.1842992567   | Program output: 19.01351      
Correct output: 27.1844373898  | Program output: 2.01316       
Correct output: -32.7789176398 | Program output: -66.01316     
Correct output: 18.9535126473  | Program output: -4.01316      
Correct output: -17.3355427007 | Program output: 2.0134        
Correct output: -19.9068842187 | Program output: -24.01316     
Correct output: -82.5342639546 | Program output: -7.01316      
Correct output: -0.5071453016  | Program output: 2.01316       
Correct output: -65.0013149084 | Program output: -11.01316     
Correct output: -85.885174074  | Program output: 2.013801      
Correct output: 126.9572193111 | Program output: 74.01387      
Correct output: -41.5110180666 | Program output: -54.01316     
Correct output: -19.0067113372 | Program output: -19.01316     
Correct output: 53.8417318683  | Program output: 74.013801     
Correct output: 112.5403599984 | Program output: 9.0139        
Correct output: 117.0118101936 | Program output: 4.013801      
Correct output: 25.2929380926  | Program output: -10.01316     
Correct output: -119.128542356 | Program output: -24.01316     
Correct output: 79.7963324215  | Program output: 74.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_395} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_395 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [28.8226 9 38.4225 10 30.2266 9 100.7151 8 20.6776 8 24.9295 8 9.8292 10 25.1713 10 33.2342 10 22.9667 9 19.3489 12 4.1063 10 75.5211 10 2.5203 7 53.9882 8 87.899 10 52.9433 11 12.5021 9 0.0064 7 20.1721 9 103.5265 11 112.998 8 35.3061 11 95.1154 10 5.7825 9]
Total: 1249.7315
Mean: 24.99463
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2715.3245243000015
Median total errors in population: 1257.7315
Error averages by case: (100.0873409999997 9.648 105.93269920000056 10.246 89.55623869999935 8.859 154.0801261000006 9.529 82.0335720999998 9.453 84.07284149999904 9.654 81.04344709999907 9.509 80.8426770000009 10.977 87.74344450000083 10.226 79.7780579999998 9.521 69.82873259999998 11.311 62.08746239999962 10.135 124.3050812999989 9.595 56.67401299999914 7.751 104.93322210000164 8.552 141.0978340000015 10.349 122.94956189999945 11.002 70.13564559999949 9.569 60.29945059999942 9.192 80.34334520000019 8.537 163.39442210000126 11.593 165.40255220000034 8.75 88.40009260000097 11.259 145.8324267999997 10.441 69.24323670000065 9.569)
Error minima by case: (0.1774 7 6.4221 8 9.801 7 30.7289 7 14.6756 7 15.9287 7 4.1698 8 6.5805 7 0.2342 8 14.8115 8 16.322 7 4.1061 8 1.5213 5 0.506 6 9.9882 7 48.8714 7 30.0428 8 3.4979 8 0.0063 6 5.2382 6 25.4596 7 18.9882 7 8.472 8 70.1155 9 0.7963 8)
Average genome size in population (length): 84.735
Average program size in population (points): 85.735
Average percent parens in population: 0.012
Minimum age in population: 50.55373995663831
Maximum age in population: 55.48884625145001
Average age in population: 53.28175927970206
Median age in population: 53.34759473985832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.837
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.837
Total error diversity:				 0.328
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 71840973
--- Timings ---
Current time: 1529615055340 milliseconds
Total Time:         167.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.6 seconds, 34.4%
Fitness Testing:     85.8 seconds, 51.1%
Report:              24.2 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 67848.26559999996
Test mean error for best: 33.92413
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 22.01348      
Correct output: -5.4090974816  | Program output: 33.01337      
Correct output: -27.2127680421 | Program output: 3.013801      
Correct output: 122.7288713888 | Program output: 22.013801     
Correct output: 94.6913893946  | Program output: 74.013801     
Correct output: -14.9157086017 | Program output: 10.013801     
Correct output: 9.1842992567   | Program output: 19.01351      
Correct output: 27.1844373898  | Program output: 2.01316       
Correct output: -32.7789176398 | Program output: -66.01316     
Correct output: 18.9535126473  | Program output: -4.01316      
Correct output: -17.3355427007 | Program output: 2.0134        
Correct output: -19.9068842187 | Program output: -24.01316     
Correct output: -82.5342639546 | Program output: -7.01316      
Correct output: -0.5071453016  | Program output: 2.01316       
Correct output: -65.0013149084 | Program output: -11.01316     
Correct output: -85.885174074  | Program output: 2.013801      
Correct output: 126.9572193111 | Program output: 74.01387      
Correct output: -41.5110180666 | Program output: -54.01316     
Correct output: -19.0067113372 | Program output: -19.01316     
Correct output: 53.8417318683  | Program output: 74.013801     
Correct output: 112.5403599984 | Program output: 9.0139        
Correct output: 117.0118101936 | Program output: 4.013801      
Correct output: 25.2929380926  | Program output: -10.01316     
Correct output: -119.128542356 | Program output: -24.01316     
Correct output: 79.7963324215  | Program output: 74.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_sub} {:instruction float_sub} {:instruction in2})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_mod integer_min integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_min float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer integer_sub float_sub in2)
Errors: [28.8226 9 38.4225 10 30.2266 9 100.7151 8 20.6776 8 24.9295 8 9.8292 10 25.1713 10 33.2342 10 22.9667 9 19.3489 12 4.1063 10 75.5211 10 2.5203 7 53.9882 8 87.899 10 52.9433 11 12.5021 9 0.0064 7 20.1721 9 103.5265 11 112.998 8 35.3061 11 95.1154 10 5.7825 9]
Total: 1249.7315
Mean: 24.99463
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2671.4609432000016
Median total errors in population: 1258.7323999999999
Error averages by case: (93.15040259999971 9.629 100.17183660000047 10.222 87.51317619999992 8.824 152.38886300000064 9.441 80.2284440000003 9.359 81.00671149999907 9.635 75.10673979999979 9.477 84.64631840000102 10.871 89.1937459000004 10.176 82.66639609999967 9.498 64.79354909999986 11.275 63.73598009999962 10.05 125.56223249999897 9.575 59.309518799999445 7.792 105.88448630000111 8.47 136.85869390000144 10.305 117.26793739999945 10.99 71.40348429999966 9.523 62.55537149999951 9.049 76.6783003000008 8.496 151.1349981000018 11.408 162.030221500001 8.731 90.469534800001 11.236 147.38560929999943 10.431 66.32639120000059 9.529)
Error minima by case: (1.1774 8 6.4224 6 28.2258 7 26.0 8 13.6776 7 15.9295 7 1.8295 8 0.1844 5 0.2341 8 8.0465 5 8.0 5 0.8936 7 1.5191 5 0.5201 6 0.012 7 12.0 7 28.9572 7 0.4977 8 0.0063 6 1.1721 6 13.0 7 43.996 7 1.7071 5 49.0 6 1.2175 8)
Average genome size in population (length): 84.316
Average program size in population (points): 85.316
Average percent parens in population: 0.012
Minimum age in population: 51.63956952898297
Maximum age in population: 56.62546045739509
Average age in population: 54.56619186351822
Median age in population: 54.63664810213413
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.829
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.829
Total error diversity:				 0.323
Error (vector) diversity:			 0.341
Behavioral diversity:				 0.342
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 73948923
--- Timings ---
Current time: 1529615060019 milliseconds
Total Time:         172.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.0 seconds, 34.2%
Fitness Testing:     88.5 seconds, 51.3%
Report:              25.0 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 67848.26559999996
Test mean error for best: 33.92413
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 22.01348      
Correct output: -5.4090974816  | Program output: 33.01337      
Correct output: -27.2127680421 | Program output: 3.013801      
Correct output: 122.7288713888 | Program output: 22.013801     
Correct output: 94.6913893946  | Program output: 74.013801     
Correct output: -14.9157086017 | Program output: 10.013801     
Correct output: 9.1842992567   | Program output: 19.01351      
Correct output: 27.1844373898  | Program output: 2.01316       
Correct output: -32.7789176398 | Program output: -66.01316     
Correct output: 18.9535126473  | Program output: -4.01316      
Correct output: -17.3355427007 | Program output: 2.0134        
Correct output: -19.9068842187 | Program output: -24.01316     
Correct output: -82.5342639546 | Program output: -7.01316      
Correct output: -0.5071453016  | Program output: 2.01316       
Correct output: -65.0013149084 | Program output: -11.01316     
Correct output: -85.885174074  | Program output: 2.013801      
Correct output: 126.9572193111 | Program output: 74.01387      
Correct output: -41.5110180666 | Program output: -54.01316     
Correct output: -19.0067113372 | Program output: -19.01316     
Correct output: 53.8417318683  | Program output: 74.013801     
Correct output: 112.5403599984 | Program output: 9.0139        
Correct output: 117.0118101936 | Program output: 4.013801      
Correct output: 25.2929380926  | Program output: -10.01316     
Correct output: -119.128542356 | Program output: -24.01316     
Correct output: 79.7963324215  | Program output: 74.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_min} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_sub} {:instruction float_sub} {:instruction in2})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat in2 integer_mod integer_mod integer_inc integer_mod integer_min integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_min float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer integer_sub float_sub in2)
Errors: [28.8226 9 38.4225 10 30.2266 9 100.7151 8 20.6776 8 24.9295 8 9.8292 10 25.1713 10 33.2342 10 22.9667 9 19.3489 12 4.1063 10 75.5211 10 2.5203 7 53.9882 8 87.899 10 52.9433 11 12.5021 9 0.0064 7 20.1721 9 103.5265 11 112.998 8 35.3061 11 95.1154 10 5.7825 9]
Total: 1249.7315
Mean: 24.99463
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2513.3700230000036
Median total errors in population: 1257.7315
Error averages by case: (87.1888965999997 9.577 95.86896820000037 10.207 83.47097329999983 8.95 147.47084310000062 9.421 74.97455000000032 9.337 75.66949739999919 9.572 70.6897372999996 9.538 74.31966730000075 10.832 80.95445250000029 10.195 73.62893839999985 9.562 63.38125149999958 11.417 55.01454709999966 10.085 117.41174669999907 9.681 49.65003149999957 7.784 99.96362350000105 8.508 132.28402630000136 10.353 112.85987339999953 11.094 63.06468129999982 9.515 53.24504759999954 8.937 70.8853255000006 8.59 148.6562884000018 11.398 156.24586260000103 8.761 82.73459630000085 11.271 139.21455379999938 10.451 59.94104340000045 9.545)
Error minima by case: (0.1639 8 6.0701 8 25.0277 7 22.7151 7 13.6776 7 14.4634 7 1.8294 8 8.969 7 0.2342 8 14.9535 8 17.3485 10 0.8937 8 1.5205 8 0.5201 6 0.0118 6 85.8982 9 6.0428 8 0.4979 7 0.0063 6 1.1722 7 20.4596 9 27.002 7 10.8605 9 70.1148 8 0.2175 8)
Average genome size in population (length): 84.927
Average program size in population (points): 85.927
Average percent parens in population: 0.012
Minimum age in population: 53.65724229128682
Maximum age in population: 58.26107978455002
Average age in population: 55.97325441480352
Median age in population: 56.01135672433065
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.32
Error (vector) diversity:			 0.337
Behavioral diversity:				 0.337
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 76072098
--- Timings ---
Current time: 1529615064574 milliseconds
Total Time:         177.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.4 seconds, 34.1%
Fitness Testing:     91.1 seconds, 51.4%
Report:              25.6 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 67852.26559999996
Test mean error for best: 33.92613
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 22.01348      
Correct output: -5.4090974816  | Program output: 33.01337      
Correct output: -27.2127680421 | Program output: 3.013801      
Correct output: 122.7288713888 | Program output: 22.013801     
Correct output: 94.6913893946  | Program output: 74.013801     
Correct output: -14.9157086017 | Program output: 10.013801     
Correct output: 9.1842992567   | Program output: 19.01351      
Correct output: 27.1844373898  | Program output: 2.01316       
Correct output: -32.7789176398 | Program output: -66.01316     
Correct output: 18.9535126473  | Program output: -4.01316      
Correct output: -17.3355427007 | Program output: 2.0134        
Correct output: -19.9068842187 | Program output: -24.01316     
Correct output: -82.5342639546 | Program output: -7.01316      
Correct output: -0.5071453016  | Program output: 2.01316       
Correct output: -65.0013149084 | Program output: -11.01316     
Correct output: -85.885174074  | Program output: 2.013801      
Correct output: 126.9572193111 | Program output: 74.01387      
Correct output: -41.5110180666 | Program output: -54.01316     
Correct output: -19.0067113372 | Program output: -19.01316     
Correct output: 53.8417318683  | Program output: 74.013801     
Correct output: 112.5403599984 | Program output: 9.0139        
Correct output: 117.0118101936 | Program output: 4.013801      
Correct output: 25.2929380926  | Program output: -10.01316     
Correct output: -119.128542356 | Program output: -24.01316     
Correct output: 79.7963324215  | Program output: 74.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot integer_shove float_max float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [28.8226 9 38.4225 10 30.2266 9 100.7151 8 20.6776 8 24.9295 8 9.8292 10 25.1713 10 33.2342 10 22.9667 9 19.3489 12 4.1063 10 75.5211 10 2.5203 7 53.9882 8 87.899 10 52.9433 11 12.5021 9 0.0064 7 20.1721 9 103.5265 11 112.998 8 35.3061 11 95.1154 10 5.7825 9]
Total: 1249.7315
Mean: 24.99463
Genome size: 97
Size: 98
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2640.594575400002
Median total errors in population: 1254.7326
Error averages by case: (90.26961669999966 9.624 98.27017580000042 10.22 85.82825899999958 9.054 150.38024320000062 9.22 77.70459560000015 9.17 79.50836129999911 9.304 73.34506189999948 9.666 84.01075860000094 10.682 89.15214800000095 10.236 80.72242680000008 9.539 63.523180799999665 11.539 63.554465699999604 10.118 125.81834649999882 9.871 59.607726599999225 7.799 105.92542250000155 8.536 134.82094210000142 10.319 114.72120749999947 11.119 71.40798989999959 9.522 61.975199399999404 8.603 75.25247240000064 8.804 150.1099308000015 11.472 159.2527682000007 8.713 89.01515490000108 11.283 147.34493759999992 10.434 64.68018360000057 9.546)
Error minima by case: (0.1639 7 5.4225 8 27.2266 7 48.7151 7 13.6113 7 15.9288 8 3.1203 8 8.969 7 0.2342 8 5.9535 8 17.349 8 3.1063 8 2.5183 8 0.5062 6 9.012 7 85.8983 9 6.0428 9 3.4979 8 0.0033 5 7.1721 7 15.4596 7 42.998 7 10.8605 8 71.1125 8 4.2175 8)
Average genome size in population (length): 86.045
Average program size in population (points): 87.045
Average percent parens in population: 0.012
Minimum age in population: 54.7501108047436
Maximum age in population: 59.17974656090155
Average age in population: 57.33078695687901
Median age in population: 57.38376049052931
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.848
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.848
Total error diversity:				 0.348
Error (vector) diversity:			 0.361
Behavioral diversity:				 0.361
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 78223248
--- Timings ---
Current time: 1529615069300 milliseconds
Total Time:         181.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.7 seconds, 33.9%
Fitness Testing:     93.7 seconds, 51.6%
Report:              26.2 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 67848.26559999996
Test mean error for best: 33.92413
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 22.01348      
Correct output: -5.4090974816  | Program output: 33.01337      
Correct output: -27.2127680421 | Program output: 3.013801      
Correct output: 122.7288713888 | Program output: 22.013801     
Correct output: 94.6913893946  | Program output: 74.013801     
Correct output: -14.9157086017 | Program output: 10.013801     
Correct output: 9.1842992567   | Program output: 19.01351      
Correct output: 27.1844373898  | Program output: 2.01316       
Correct output: -32.7789176398 | Program output: -66.01316     
Correct output: 18.9535126473  | Program output: -4.01316      
Correct output: -17.3355427007 | Program output: 2.0134        
Correct output: -19.9068842187 | Program output: -24.01316     
Correct output: -82.5342639546 | Program output: -7.01316      
Correct output: -0.5071453016  | Program output: 2.01316       
Correct output: -65.0013149084 | Program output: -11.01316     
Correct output: -85.885174074  | Program output: 2.013801      
Correct output: 126.9572193111 | Program output: 74.01387      
Correct output: -41.5110180666 | Program output: -54.01316     
Correct output: -19.0067113372 | Program output: -19.01316     
Correct output: 53.8417318683  | Program output: 74.013801     
Correct output: 112.5403599984 | Program output: 9.0139        
Correct output: 117.0118101936 | Program output: 4.013801      
Correct output: 25.2929380926  | Program output: -10.01316     
Correct output: -119.128542356 | Program output: -24.01316     
Correct output: 79.7963324215  | Program output: 74.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_592} {:instruction integer_yank} {:instruction float_add} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_mod} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_592 integer_yank float_add integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_inc integer_mod integer_min integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_mult integer_fromfloat 15 float_mod float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_stackdepth integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [28.8226 9 38.4225 10 30.2266 9 100.7151 8 20.6776 8 24.9295 8 9.8292 10 25.1713 10 33.2342 10 22.9667 9 19.3489 12 4.1063 10 75.5211 10 2.5203 7 53.9882 8 87.899 10 52.9433 11 12.5021 9 0.0064 7 20.1721 9 103.5265 11 112.998 8 35.3061 11 95.1154 10 5.7825 9]
Total: 1249.7315
Mean: 24.99463
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2602.2147372000004
Median total errors in population: 1255.7327
Error averages by case: (93.58395129999963 9.68 101.70509090000039 10.235 88.04795389999964 9.475 150.76812620000067 8.938 80.18060940000012 8.854 81.38583589999908 9.121 76.94841649999942 9.932 75.74240290000088 10.325 81.46285150000044 10.182 73.0454152999995 9.554 71.26420209999992 11.856 55.86656459999958 10.104 118.76364019999887 10.186 51.45886319999925 7.769 98.82567430000151 8.52 138.9928406000016 10.382 118.03933699999948 11.07 63.9793913999995 9.504 54.382913299999394 7.931 76.66678390000064 9.064 157.95086620000143 11.548 160.70625090000084 8.83 81.01639010000098 11.26 140.8909017999993 10.425 66.25746380000069 9.537)
Error minima by case: (0.8361 8 6.4225 9 28.2254 7 6.4958 8 13.6114 7 15.9288 7 2.1708 8 8.969 8 0.2342 7 2.9535 8 17.3485 8 2.1063 8 1.521 9 0.5193 6 14.0118 7 85.8982 9 33.8712 9 5.5021 8 0.0044 6 7.1721 6 26.4596 8 42.998 7 9.2929 9 25.7129 8 2.2037 8)
Average genome size in population (length): 87.724
Average program size in population (points): 88.724
Average percent parens in population: 0.011
Minimum age in population: 56.22879600618944
Maximum age in population: 60.87069602219935
Average age in population: 58.86819734749898
Median age in population: 58.92295076202868
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.354
Error (vector) diversity:			 0.376
Behavioral diversity:				 0.376
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 80416373
--- Timings ---
Current time: 1529615073947 milliseconds
Total Time:         186.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.1 seconds, 33.8%
Fitness Testing:     96.3 seconds, 51.6%
Report:              27.1 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 68010.37729999995
Test mean error for best: 34.00519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 24.01348      
Correct output: -5.4090974816  | Program output: 35.01337      
Correct output: -27.2127680421 | Program output: 5.013801      
Correct output: 122.7288713888 | Program output: 24.013801     
Correct output: 94.6913893946  | Program output: 76.013801     
Correct output: -14.9157086017 | Program output: 12.013801     
Correct output: 9.1842992567   | Program output: 21.01351      
Correct output: 27.1844373898  | Program output: 4.01316       
Correct output: -32.7789176398 | Program output: -64.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 4.0134        
Correct output: -19.9068842187 | Program output: -22.01316     
Correct output: -82.5342639546 | Program output: -5.01316      
Correct output: -0.5071453016  | Program output: 4.01316       
Correct output: -65.0013149084 | Program output: -9.01316      
Correct output: -85.885174074  | Program output: 4.013801      
Correct output: 126.9572193111 | Program output: 76.01387      
Correct output: -41.5110180666 | Program output: -52.01316     
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: 76.013801     
Correct output: 112.5403599984 | Program output: 11.0139       
Correct output: 117.0118101936 | Program output: 6.013801      
Correct output: 25.2929380926  | Program output: -8.01316      
Correct output: -119.128542356 | Program output: -22.01316     
Correct output: 79.7963324215  | Program output: 76.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [26.8226 9 40.4225 9 32.2266 9 98.7151 9 18.6776 9 26.9295 8 11.8292 10 23.1713 11 31.2342 10 20.9667 9 21.3489 12 2.1063 10 77.5211 10 4.5203 7 55.9882 8 89.899 10 50.9433 10 10.5021 9 1.9936 8 22.1721 9 101.5265 9 110.998 8 33.3061 10 97.1154 10 3.7825 9]
Total: 1246.7187000000001
Mean: 24.934374
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2582.4218115999997
Median total errors in population: 1256.7240500000003
Error averages by case: (91.26628799999972 9.712 101.59607760000046 10.211 82.9204020999998 9.617 144.96972200000053 8.708 72.12210100000047 8.646 75.15744339999921 8.849 76.7010886999995 10.141 80.5098520000008 10.132 85.09357490000062 10.179 78.23158779999991 9.53 65.72108729999982 12.017 59.34377299999957 10.079 123.21911919999884 10.376 57.02601409999916 7.803 104.07116490000132 8.504 134.87637050000146 10.344 116.60221879999958 11.079 67.57575819999958 9.534 58.078275499999464 7.562 69.94437940000074 9.314 150.44554180000128 11.467 153.28749090000096 8.792 86.07783700000091 11.254 145.5008993999997 10.407 58.24474410000045 9.582)
Error minima by case: (1.1767 8 5.4225 8 27.2266 7 9.2711 6 13.6776 7 14.9295 7 3.1708 8 8.969 7 0.2342 8 16.9403 8 17.349 7 2.1063 8 0.4657 7 0.5203 6 6.9882 7 85.899 7 5.0428 8 1.4979 8 0.0044 6 8.1721 7 19.4596 7 14.9882 6 10.8605 8 70.1154 8 3.7825 8)
Average genome size in population (length): 88.608
Average program size in population (points): 89.608
Average percent parens in population: 0.011
Minimum age in population: 57.573429973163
Maximum age in population: 62.40390942787167
Average age in population: 60.27309028431565
Median age in population: 60.28562080822746
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.348
Error (vector) diversity:			 0.359
Behavioral diversity:				 0.359
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 82631573
--- Timings ---
Current time: 1529615078650 milliseconds
Total Time:         191.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.5 seconds, 33.8%
Fitness Testing:     98.9 seconds, 51.7%
Report:              27.7 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 68010.37729999995
Test mean error for best: 34.00519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 24.01348      
Correct output: -5.4090974816  | Program output: 35.01337      
Correct output: -27.2127680421 | Program output: 5.013801      
Correct output: 122.7288713888 | Program output: 24.013801     
Correct output: 94.6913893946  | Program output: 76.013801     
Correct output: -14.9157086017 | Program output: 12.013801     
Correct output: 9.1842992567   | Program output: 21.01351      
Correct output: 27.1844373898  | Program output: 4.01316       
Correct output: -32.7789176398 | Program output: -64.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 4.0134        
Correct output: -19.9068842187 | Program output: -22.01316     
Correct output: -82.5342639546 | Program output: -5.01316      
Correct output: -0.5071453016  | Program output: 4.01316       
Correct output: -65.0013149084 | Program output: -9.01316      
Correct output: -85.885174074  | Program output: 4.013801      
Correct output: 126.9572193111 | Program output: 76.01387      
Correct output: -41.5110180666 | Program output: -52.01316     
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: 76.013801     
Correct output: 112.5403599984 | Program output: 11.0139       
Correct output: 117.0118101936 | Program output: 6.013801      
Correct output: 25.2929380926  | Program output: -8.01316      
Correct output: -119.128542356 | Program output: -22.01316     
Correct output: 79.7963324215  | Program output: 76.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction 78} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_mod} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_pop})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 78 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_mod float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_pop)
Errors: [26.8226 9 40.4225 9 32.2266 9 98.7151 9 18.6776 9 26.9295 8 11.8292 10 23.1713 11 31.2342 10 20.9667 9 21.3489 12 2.1063 10 77.5211 10 4.5203 7 55.9882 8 89.899 10 50.9433 10 10.5021 9 1.9936 8 22.1721 9 101.5265 9 110.998 8 33.3061 10 97.1154 10 3.7825 9]
Total: 1246.7187000000001
Mean: 24.934374
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2628.030252200003
Median total errors in population: 1255.7326
Error averages by case: (93.81100489999969 9.657 103.16889840000039 10.221 82.13613449999994 9.721 145.25263930000054 8.722 72.20432880000025 8.69 75.0084063999991 8.87 78.36549129999933 10.106 82.90662060000095 10.159 88.08317820000062 10.229 81.0727850999998 9.576 69.0820028999996 12.055 62.372499399999604 10.1 125.6746641999989 10.451 59.523902999999066 7.827 107.5535780000015 8.51 134.52550890000134 10.361 118.43635719999956 11.116 70.2157895999995 9.54 60.777037399999415 7.5 70.54894130000085 9.352 153.671051700002 11.327 154.28544910000107 8.859 89.40695210000091 11.303 147.2588764999998 10.482 58.37215340000052 9.582)
Error minima by case: (1.1774 8 5.4091 8 27.2128 8 10.2711 8 13.5974 7 14.9157 7 3.1708 8 8.969 7 0.7619 7 1.9535 8 17.3355 8 0.1069 8 1.5205 8 0.506 6 14.0118 7 12.6712 8 6.0428 9 4.4977 8 0.0043 6 0.2161 7 6.4596 8 15.9882 7 8.2929 9 70.1148 8 1.7825 8)
Average genome size in population (length): 88.565
Average program size in population (points): 89.565
Average percent parens in population: 0.011
Minimum age in population: 59.11461562085788
Maximum age in population: 63.87871687734719
Average age in population: 61.67770601453869
Median age in population: 61.71755561880127
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.843
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.328
Error (vector) diversity:			 0.344
Behavioral diversity:				 0.344
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 84845698
--- Timings ---
Current time: 1529615083223 milliseconds
Total Time:         195.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.9 seconds, 33.6%
Fitness Testing:    101.5 seconds, 51.8%
Report:              28.3 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 68010.37729999995
Test mean error for best: 34.00519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 24.01348      
Correct output: -5.4090974816  | Program output: 35.01337      
Correct output: -27.2127680421 | Program output: 5.013801      
Correct output: 122.7288713888 | Program output: 24.013801     
Correct output: 94.6913893946  | Program output: 76.013801     
Correct output: -14.9157086017 | Program output: 12.013801     
Correct output: 9.1842992567   | Program output: 21.01351      
Correct output: 27.1844373898  | Program output: 4.01316       
Correct output: -32.7789176398 | Program output: -64.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 4.0134        
Correct output: -19.9068842187 | Program output: -22.01316     
Correct output: -82.5342639546 | Program output: -5.01316      
Correct output: -0.5071453016  | Program output: 4.01316       
Correct output: -65.0013149084 | Program output: -9.01316      
Correct output: -85.885174074  | Program output: 4.013801      
Correct output: 126.9572193111 | Program output: 76.01387      
Correct output: -41.5110180666 | Program output: -52.01316     
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: 76.013801     
Correct output: 112.5403599984 | Program output: 11.0139       
Correct output: 117.0118101936 | Program output: 6.013801      
Correct output: 25.2929380926  | Program output: -8.01316      
Correct output: -119.128542356 | Program output: -22.01316     
Correct output: 79.7963324215  | Program output: 76.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [26.8226 9 40.4225 9 32.2266 9 98.7151 9 18.6776 9 26.9295 8 11.8292 10 23.1713 11 31.2342 10 20.9667 9 21.3489 12 2.1063 10 77.5211 10 4.5203 7 55.9882 8 89.899 10 50.9433 10 10.5021 9 1.9936 8 22.1721 9 101.5265 9 110.998 8 33.3061 10 97.1154 10 3.7825 9]
Total: 1246.7187000000001
Mean: 24.934374
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2575.3129896000028
Median total errors in population: 1255.7325500000002
Error averages by case: (96.12034339999975 9.709 106.27520180000043 10.238 81.36319249999991 9.765 143.60089520000056 8.778 70.27085220000089 8.727 73.89596579999906 8.913 81.41959659999894 10.161 77.21509130000099 10.116 83.41840430000057 10.216 73.35984829999968 9.573 74.39233389999943 12.111 57.640786499999564 10.116 121.60163099999882 10.438 54.04854139999905 7.864 100.73817010000148 8.518 132.81398820000155 10.407 120.8165578999995 11.081 65.69934089999947 9.552 56.09650789999952 7.488 68.91249990000134 9.365 157.02874710000225 11.295 152.51376690000134 8.91 81.71254880000096 11.279 143.26919349999955 10.481 56.371984200000604 9.616)
Error minima by case: (0.8361 8 6.4225 7 28.2255 7 22.7157 8 4.6914 7 15.9295 7 3.1707 8 8.969 7 0.7199 8 1.9535 7 8.0 6 1.1064 8 1.5205 6 0.5223 6 5.9882 7 12.0 7 31.944 8 4.5021 8 0.0033 5 8.1714 7 13.0 7 27.0018 6 8.2929 7 49.0 7 1.2037 9)
Average genome size in population (length): 89.226
Average program size in population (points): 90.226
Average percent parens in population: 0.011
Minimum age in population: 60.11461562085788
Maximum age in population: 65.05479971861268
Average age in population: 63.01827612032152
Median age in population: 63.06374902972252
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.326
Error (vector) diversity:			 0.339
Behavioral diversity:				 0.339
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 87076348
--- Timings ---
Current time: 1529615088126 milliseconds
Total Time:         200.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.2 seconds, 33.5%
Fitness Testing:    104.2 seconds, 52.0%
Report:              29.0 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 68010.37729999995
Test mean error for best: 34.00519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 24.01348      
Correct output: -5.4090974816  | Program output: 35.01337      
Correct output: -27.2127680421 | Program output: 5.013801      
Correct output: 122.7288713888 | Program output: 24.013801     
Correct output: 94.6913893946  | Program output: 76.013801     
Correct output: -14.9157086017 | Program output: 12.013801     
Correct output: 9.1842992567   | Program output: 21.01351      
Correct output: 27.1844373898  | Program output: 4.01316       
Correct output: -32.7789176398 | Program output: -64.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 4.0134        
Correct output: -19.9068842187 | Program output: -22.01316     
Correct output: -82.5342639546 | Program output: -5.01316      
Correct output: -0.5071453016  | Program output: 4.01316       
Correct output: -65.0013149084 | Program output: -9.01316      
Correct output: -85.885174074  | Program output: 4.013801      
Correct output: 126.9572193111 | Program output: 76.01387      
Correct output: -41.5110180666 | Program output: -52.01316     
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: 76.013801     
Correct output: 112.5403599984 | Program output: 11.0139       
Correct output: 117.0118101936 | Program output: 6.013801      
Correct output: 25.2929380926  | Program output: -8.01316      
Correct output: -119.128542356 | Program output: -22.01316     
Correct output: 79.7963324215  | Program output: 76.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [26.8226 9 40.4225 9 32.2266 9 98.7151 9 18.6776 9 26.9295 8 11.8292 10 23.1713 11 31.2342 10 20.9667 9 21.3489 12 2.1063 10 77.5211 10 4.5203 7 55.9882 8 89.899 10 50.9433 10 10.5021 9 1.9936 8 22.1721 9 101.5265 9 110.998 8 33.3061 10 97.1154 10 3.7825 9]
Total: 1246.7187000000001
Mean: 24.934374
Genome size: 93
Size: 94
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2835.5111218000015
Median total errors in population: 1253.7315
Error averages by case: (104.04861549999967 9.675 111.79690110000038 10.156 95.63130109999935 9.68 157.90374640000064 8.848 86.92363599999979 8.759 89.5747797999991 8.854 87.16779649999904 10.111 87.43404880000098 10.227 93.50048960000076 10.219 86.02849240000008 9.57 70.51322879999954 12.071 68.24418419999957 10.131 132.23016809999902 10.452 65.81738609999914 7.834 112.54260850000146 8.583 145.69393640000172 10.369 127.32931549999957 11.021 76.11775349999937 9.562 67.18286489999963 7.625 85.0042961000004 9.352 151.9635625000022 11.136 167.52999230000063 8.82 94.09515430000098 11.186 153.85241020000007 10.461 73.13245320000058 9.55)
Error minima by case: (1.1774 8 5.4225 8 27.2266 8 46.7151 8 11.6014 7 14.9295 7 2.1708 8 8.969 7 0.2342 7 5.9535 8 17.3488 8 0.1063 8 1.521 8 0.506 6 10.9882 7 0.0405 8 31.947 9 4.4979 8 0.0037 6 6.8279 7 23.4596 7 40.998 6 10.8605 9 33.2029 8 1.7825 9)
Average genome size in population (length): 89.289
Average program size in population (points): 90.289
Average percent parens in population: 0.011
Minimum age in population: 62.08845177031367
Maximum age in population: 67.05479971861268
Average age in population: 64.30634936254003
Median age in population: 64.34119294747191
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.85
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.85
Total error diversity:				 0.354
Error (vector) diversity:			 0.367
Behavioral diversity:				 0.367
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 89308573
--- Timings ---
Current time: 1529615092847 milliseconds
Total Time:         205.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.7 seconds, 33.4%
Fitness Testing:    106.8 seconds, 52.0%
Report:              29.8 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 68010.37729999995
Test mean error for best: 34.00519
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 24.01348      
Correct output: -5.4090974816  | Program output: 35.01337      
Correct output: -27.2127680421 | Program output: 5.013801      
Correct output: 122.7288713888 | Program output: 24.013801     
Correct output: 94.6913893946  | Program output: 76.013801     
Correct output: -14.9157086017 | Program output: 12.013801     
Correct output: 9.1842992567   | Program output: 21.01351      
Correct output: 27.1844373898  | Program output: 4.01316       
Correct output: -32.7789176398 | Program output: -64.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 4.0134        
Correct output: -19.9068842187 | Program output: -22.01316     
Correct output: -82.5342639546 | Program output: -5.01316      
Correct output: -0.5071453016  | Program output: 4.01316       
Correct output: -65.0013149084 | Program output: -9.01316      
Correct output: -85.885174074  | Program output: 4.013801      
Correct output: 126.9572193111 | Program output: 76.01387      
Correct output: -41.5110180666 | Program output: -52.01316     
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: 76.013801     
Correct output: 112.5403599984 | Program output: 11.0139       
Correct output: 117.0118101936 | Program output: 6.013801      
Correct output: 25.2929380926  | Program output: -8.01316      
Correct output: -119.128542356 | Program output: -22.01316     
Correct output: 79.7963324215  | Program output: 76.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_pop} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_sub} {:instruction float_sub} {:instruction in2})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat integer_dup_times float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_pop 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer integer_sub float_sub in2)
Errors: [26.8226 9 40.4225 9 32.2266 9 98.7151 9 18.6776 9 26.9295 8 11.8292 10 23.1713 11 31.2342 10 20.9667 9 21.3489 12 2.1063 10 77.5211 10 4.5203 7 55.9882 8 89.899 10 50.9433 10 10.5021 9 1.9936 8 22.1721 9 101.5265 9 110.998 8 33.3061 10 97.1154 10 3.7825 9]
Total: 1246.7187000000001
Mean: 24.934374
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2750.6902231000017
Median total errors in population: 1253.71875
Error averages by case: (94.0132888999997 9.655 104.4563296000004 9.979 90.88429859999997 9.741 152.9604199000007 9.03 81.30203940000027 8.925 84.15993629999905 8.881 79.88799659999951 10.232 87.835631300001 10.455 92.24669060000059 10.224 85.17424609999988 9.535 67.93096479999946 12.051 67.23832189999966 10.135 130.8852481999989 10.427 65.34871169999917 7.769 111.94050600000146 8.523 141.82387080000152 10.376 119.89819339999939 10.839 75.24813369999958 9.544 67.1722170999997 7.835 79.71519540000057 9.35 152.96552010000235 10.794 160.23953600000104 8.808 92.85558490000105 10.998 152.96049169999986 10.445 67.43285010000058 9.563)
Error minima by case: (0.1639 8 6.4225 8 16.801 8 7.2711 7 11.6756 7 15.9289 7 2.8292 8 8.969 8 0.7619 8 14.9385 8 18.3486 8 0.1064 8 3.5199 9 1.5071 6 0.9882 7 86.8983 9 3.0428 8 1.4979 8 0.0033 5 2.1721 7 17.4596 7 12.9882 7 10.7202 9 72.1142 8 0.7833 7)
Average genome size in population (length): 90.073
Average program size in population (points): 91.073
Average percent parens in population: 0.011
Minimum age in population: 63.26949468543262
Maximum age in population: 67.75471717965449
Average age in population: 65.63357394140765
Median age in population: 65.70906493124566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.347
Error (vector) diversity:			 0.36
Behavioral diversity:				 0.36
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 91560398
--- Timings ---
Current time: 1529615097570 milliseconds
Total Time:         210.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.1 seconds, 33.4%
Fitness Testing:    109.4 seconds, 52.1%
Report:              30.5 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 68126.05949999994
Test mean error for best: 34.06303
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 25.01348      
Correct output: -5.4090974816  | Program output: 36.01337      
Correct output: -27.2127680421 | Program output: 6.013801      
Correct output: 122.7288713888 | Program output: 25.013801     
Correct output: 94.6913893946  | Program output: 77.013801     
Correct output: -14.9157086017 | Program output: 13.013801     
Correct output: 9.1842992567   | Program output: 22.01351      
Correct output: 27.1844373898  | Program output: 5.01316       
Correct output: -32.7789176398 | Program output: -63.01316     
Correct output: 18.9535126473  | Program output: -1.01316      
Correct output: -17.3355427007 | Program output: 5.0134        
Correct output: -19.9068842187 | Program output: -21.01316     
Correct output: -82.5342639546 | Program output: -4.01316      
Correct output: -0.5071453016  | Program output: 5.01316       
Correct output: -65.0013149084 | Program output: -8.01316      
Correct output: -85.885174074  | Program output: 5.013801      
Correct output: 126.9572193111 | Program output: 77.01387      
Correct output: -41.5110180666 | Program output: -51.01316     
Correct output: -19.0067113372 | Program output: -16.01316     
Correct output: 53.8417318683  | Program output: 77.013801     
Correct output: 112.5403599984 | Program output: 12.0139       
Correct output: 117.0118101936 | Program output: 7.013801      
Correct output: 25.2929380926  | Program output: -7.01316      
Correct output: -119.128542356 | Program output: -21.01316     
Correct output: 79.7963324215  | Program output: 77.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction 78} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_mod} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction integer_shove} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_min float_frominteger print_float float_frominteger integer_min integer_mod integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 78 float_div integer_shove integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_mod float_inc 43.22634146308267 float_rot integer_shove float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [25.8226 9 41.4225 10 33.2266 9 97.7151 9 17.6776 9 27.9295 8 12.8292 11 22.1713 11 30.2342 10 19.9667 9 22.3489 12 1.1063 10 78.5211 10 5.5203 7 56.9882 8 90.899 9 49.9433 11 9.5021 8 2.9936 8 23.1721 9 100.5265 9 109.998 7 32.3061 10 98.1154 9 2.7825 9]
Total: 1244.7187000000001
Mean: 24.894375
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3071.597642100006
Median total errors in population: 1253.22675
Error averages by case: (115.53098939999975 9.683 127.64990080000055 9.733 106.06512619999894 9.724 163.37920250000076 9.414 93.27226369999961 9.356 97.99276859999918 8.933 104.15369209999848 10.412 96.49286790000096 10.745 101.81414930000145 10.272 91.60111560000034 9.536 87.21314149999955 12.059 77.17383929999983 10.159 139.7816772 10.436 75.72811229999957 7.784 118.9396939000018 8.574 154.51823590000177 10.403 140.19236879999997 10.55 85.22018999999922 9.573 78.72647210000024 8.218 94.11823989999999 9.428 164.82600230000236 10.235 170.75971850000033 8.874 98.36356240000089 10.666 162.39473770000066 10.457 80.79357420000048 9.672)
Error minima by case: (1.1639 7 6.4225 4 28.2254 4 10.2711 5 9.6776 4 15.9288 4 2.1708 8 1.1844 4 0.7657 8 1.9535 4 8.0 4 0.1063 8 1.5211 4 0.506 6 2.4787 7 11.1286 4 6.0428 5 2.5021 8 0.0058 6 10.1721 8 13.0 5 15.9882 4 8.2929 4 22.1154 5 1.7825 8)
Average genome size in population (length): 92.139
Average program size in population (points): 93.139
Average percent parens in population: 0.011
Minimum age in population: 64.61537045604321
Maximum age in population: 68.79826637264858
Average age in population: 66.86817958517996
Median age in population: 66.91907580649406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.363
Error (vector) diversity:			 0.378
Behavioral diversity:				 0.379
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 93863948
--- Timings ---
Current time: 1529615102598 milliseconds
Total Time:         215.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.6 seconds, 33.3%
Fitness Testing:    112.1 seconds, 52.1%
Report:              31.1 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 80.76541201775525 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2623.797979300005
Median total errors in population: 1251.72005
Error averages by case: (92.7640595999998 9.65 105.81189560000037 9.528 89.12032509999956 9.693 148.0197288000007 9.571 75.63001410000028 9.48 81.61070209999906 8.858 80.97820739999918 10.395 76.06025510000086 10.943 81.78480260000049 10.19 73.79067269999967 9.541 71.58138239999963 12.071 57.09218609999961 10.085 123.22784809999905 10.439 57.413472099999055 7.754 104.0207705000015 8.492 139.3994764000013 10.356 118.2092901999996 10.422 65.18497299999956 9.462 58.00433800000031 8.243 76.70829900000057 9.423 156.67195990000218 9.865 156.53053030000095 8.796 82.75549510000096 10.473 145.9078127999998 10.432 61.77448230000055 9.583)
Error minima by case: (0.1639 8 5.4225 7 6.1363 8 45.7151 8 11.6114 7 14.9295 7 1.1708 8 8.969 8 0.2342 9 5.9535 8 16.0135 10 0.1031 7 2.5211 9 0.5203 6 12.0118 7 38.8721 8 31.8712 8 5.521 8 0.0044 6 12.8289 7 25.4596 8 39.998 6 6.7202 9 71.1154 8 0.7825 8)
Average genome size in population (length): 93.225
Average program size in population (points): 94.225
Average percent parens in population: 0.011
Minimum age in population: 65.67795836067282
Maximum age in population: 70.23178965017173
Average age in population: 68.16036911747004
Median age in population: 68.18411129036878
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.847
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.847
Total error diversity:				 0.361
Error (vector) diversity:			 0.381
Behavioral diversity:				 0.381
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 96194586
--- Timings ---
Current time: 1529615107251 milliseconds
Total Time:         219.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.0 seconds, 33.2%
Fitness Testing:    114.7 seconds, 52.2%
Report:              32.0 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 80.76541201775525 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2846.7872926000077
Median total errors in population: 1251.72015
Error averages by case: (98.42367859999976 9.684 110.75838730000042 9.609 94.63676149999948 9.691 152.66726310000047 9.609 81.87820509999997 9.507 87.60942639999917 8.818 86.039682999999 10.491 89.61449060000085 10.95 96.18241760000103 10.174 86.22981180000014 9.571 77.99927249999942 12.083 70.9632733999996 10.12 136.57113399999935 10.472 70.90019459999938 7.826 117.48353160000157 8.512 147.65479840000162 10.269 122.68374659999952 10.443 78.81446019999932 9.465 73.35146500000036 8.329 82.71382820000032 9.394 156.76567420000228 9.8 161.52302630000068 8.73 94.19259560000096 10.428 158.98078690000042 10.389 68.18338010000052 9.602)
Error minima by case: (1.1774 8 5.4229 8 27.2266 7 42.7151 7 7.6766 7 14.9295 6 0.1708 9 8.969 9 2.7648 8 2.9535 7 17.3489 7 0.1031 7 1.5211 7 0.506 6 11.0118 6 85.899 7 27.9423 7 4.5021 8 0.0054 6 1.8279 7 26.4596 6 36.9986 5 9.2929 8 70.1154 8 0.2169 8)
Average genome size in population (length): 94.146
Average program size in population (points): 95.146
Average percent parens in population: 0.011
Minimum age in population: 67.10355811963281
Maximum age in population: 71.3066470596735
Average age in population: 69.5913979739618
Median age in population: 69.63805360782835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.863
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.863
Total error diversity:				 0.372
Error (vector) diversity:			 0.39
Behavioral diversity:				 0.391
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 98548261
--- Timings ---
Current time: 1529615112254 milliseconds
Total Time:         224.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.4 seconds, 33.1%
Fitness Testing:    117.6 seconds, 52.3%
Report:              32.7 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_add float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult float_inc float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2823.892014500005
Median total errors in population: 1251.7187000000001
Error averages by case: (103.97958939999957 9.648 117.93196040000036 9.836 92.76909779999933 9.598 151.72080860000057 9.571 79.97532110000006 9.525 88.01598419999904 8.751 93.58211969999853 10.626 85.81514150000102 10.853 92.25559430000101 10.124 83.03368470000008 9.499 78.88335789999931 11.993 67.10137139999958 10.046 134.48153019999893 10.4 67.10898289999894 7.816 114.55332080000193 8.496 141.80570700000166 10.07 128.07435299999946 10.743 74.90666029999932 9.214 70.02542890000056 8.358 83.46260270000049 9.409 157.98409050000257 9.84 158.71805420000106 8.554 91.38319860000108 10.337 156.0799617000001 10.123 67.25509270000069 9.559)
Error minima by case: (1.1639 8 6.4225 7 13.801 7 26.0 8 9.6776 7 15.9295 7 0.1708 9 8.969 6 2.7619 8 12.9401 6 8.0 6 0.1061 7 1.521 6 0.5203 6 11.0118 6 10.873 7 29.9434 8 0.4979 7 0.0064 6 11.7839 8 13.0 7 21.9882 6 10.8605 7 49.0 7 0.2175 8)
Average genome size in population (length): 95.245
Average program size in population (points): 96.245
Average percent parens in population: 0.010
Minimum age in population: 68.4415918839527
Maximum age in population: 73.02394695392005
Average age in population: 70.9373778539187
Median age in population: 70.97268168195328
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.864
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.864
Total error diversity:				 0.407
Error (vector) diversity:			 0.431
Behavioral diversity:				 0.432
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 100929386
--- Timings ---
Current time: 1529615117425 milliseconds
Total Time:         229.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        75.8 seconds, 33.0%
Fitness Testing:    120.5 seconds, 52.4%
Report:              33.3 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup integer_swap integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 102
Size: 103
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2968.7511416000048
Median total errors in population: 1249.7198
Error averages by case: (103.14635869999981 9.707 118.79435020000045 10.143 104.09640139999944 9.668 159.17150590000068 9.642 87.45467900000006 9.542 96.57840899999908 8.844 94.33420719999926 10.819 91.23372700000085 10.882 98.13303790000086 10.167 89.55846060000027 9.486 79.73322159999948 11.992 73.54651919999975 9.948 140.5921383999997 10.38 72.99858839999955 7.873 122.73604000000175 8.438 155.06972520000164 9.987 128.64735249999956 10.973 81.31623679999943 9.035 77.10018320000042 8.4 91.20979060000045 9.441 157.88936800000224 9.965 166.37299140000076 8.469 98.81314530000098 10.328 162.9190794000001 9.853 73.7726247000005 9.551)
Error minima by case: (1.1774 8 5.4225 6 4.199 7 26.0 8 8.6776 7 8.0981 7 0.1707 8 8.969 7 0.7658 8 2.9535 7 5.6778 5 0.1061 7 1.521 8 0.5203 6 3.9882 6 12.0 7 6.0428 8 0.4977 7 0.0064 7 5.1721 7 13.0 7 21.9882 6 9.2929 8 70.1152 8 0.2175 8)
Average genome size in population (length): 96.348
Average program size in population (points): 97.348
Average percent parens in population: 0.010
Minimum age in population: 69.9232945640341
Maximum age in population: 74.55883050320317
Average age in population: 72.32752998892678
Median age in population: 72.35918752282441
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.859
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.859
Total error diversity:				 0.424
Error (vector) diversity:			 0.445
Behavioral diversity:				 0.446
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 103338111
--- Timings ---
Current time: 1529615122495 milliseconds
Total Time:         235.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        77.3 seconds, 32.9%
Fitness Testing:    123.4 seconds, 52.5%
Report:              34.2 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 80.76541201775525 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 98
Size: 99
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2936.9629116000083
Median total errors in population: 1249.7193
Error averages by case: (104.03045789999958 9.767 118.98223890000041 10.141 97.16422949999964 9.712 154.5067802000006 9.616 83.0181368000003 9.475 92.04381689999916 8.874 94.49799209999892 10.684 93.86181320000071 10.585 98.84047480000056 10.199 90.59208950000006 9.329 78.35884249999964 11.744 74.55334090000001 9.483 142.1557909999993 10.197 77.20814769999957 7.909 122.41222360000127 8.248 149.2818309000014 9.919 128.08478259999956 10.979 81.76380959999956 8.849 78.90136310000035 8.344 87.36267390000044 9.361 156.13385360000186 10.077 160.79004850000084 8.406 98.12212210000102 10.108 163.93534640000001 9.494 69.52170540000053 9.339)
Error minima by case: (5.1774 8 6.0661 6 12.6376 7 41.7152 6 7.6776 7 15.5727 7 0.1292 9 2.171 5 0.7658 8 12.0599 4 17.9925 5 0.1043 6 0.479 5 1.4661 6 0.0122 6 20.872 7 27.9433 5 1.6606 7 0.0064 6 1.8279 7 24.4596 4 20.9882 5 9.8605 5 51.1152 6 0.2167 7)
Average genome size in population (length): 98.357
Average program size in population (points): 99.357
Average percent parens in population: 0.010
Minimum age in population: 70.9232945640341
Maximum age in population: 75.93729663251813
Average age in population: 73.74142337759037
Median age in population: 73.82093866913071
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.442
Error (vector) diversity:			 0.451
Behavioral diversity:				 0.451
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 105797036
--- Timings ---
Current time: 1529615127450 milliseconds
Total Time:         240.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        78.6 seconds, 32.7%
Fitness Testing:    126.4 seconds, 52.7%
Report:              34.9 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_max} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult float_inc float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_cos float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod integer_mod float_dup_items float_swap integer_mod in2 float_swap float_max float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 102
Size: 103
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2816.767152300002
Median total errors in population: 1246.7187000000001
Error averages by case: (98.65412169999972 9.765 115.51799930000041 10.196 96.5090813999993 9.772 150.9767432000005 9.649 79.3881173999999 9.507 89.49480969999912 8.956 90.91393909999908 10.494 87.26298690000087 10.324 91.9760972000008 10.187 83.65502050000066 9.061 76.09964549999965 11.476 67.82954210000014 8.86 134.93703689999901 9.964 71.62149999999937 7.912 117.27451060000169 7.964 144.69701090000154 10.188 123.94916959999956 10.999 73.63833499999947 8.795 72.62159030000058 8.316 84.65003960000035 9.356 150.94988690000199 10.411 159.7163336000006 8.703 92.63318280000098 9.857 157.1780682000004 9.196 65.6743839000005 9.04)
Error minima by case: (3.8226 8 3.6039 8 11.8002 7 42.7151 8 6.6776 8 17.0973 7 0.1705 9 8.969 7 0.7659 8 5.9535 7 18.3489 8 0.1053 6 1.5211 7 0.506 6 9.0119 6 23.8714 8 25.9572 8 0.4979 7 0.0064 7 1.8287 7 24.4596 8 36.998 6 10.8605 7 70.1154 8 0.2142 8)
Average genome size in population (length): 100.718
Average program size in population (points): 101.718
Average percent parens in population: 0.010
Minimum age in population: 71.9232945640341
Maximum age in population: 77.48995218757538
Average age in population: 75.09170221087534
Median age in population: 75.11250685143264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.468
Error (vector) diversity:			 0.477
Behavioral diversity:				 0.478
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 108314986
--- Timings ---
Current time: 1529615132592 milliseconds
Total Time:         244.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        79.9 seconds, 32.6%
Fitness Testing:    129.4 seconds, 52.8%
Report:              35.6 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times float_tan integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 102
Size: 103
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3111.1778915999994
Median total errors in population: 1245.47995
Error averages by case: (112.59820529999973 9.736 130.6166015000005 10.253 108.22531859999913 9.692 159.5531400000006 9.61 89.32953629999966 9.494 100.99238579999904 8.88 106.40769979999847 10.421 95.54993400000099 10.222 103.56417110000126 10.197 93.20061030000106 8.899 90.7141485999996 11.408 80.36622470000019 8.719 148.65530790000028 9.85 81.64561229999984 7.863 129.38368360000212 7.833 158.82388230000174 10.311 137.32209329999986 11.052 87.00401329999914 8.831 85.05686350000057 8.391 95.17949590000006 9.334 163.01238290000225 10.548 167.9519839000005 8.775 101.92945240000101 9.747 170.15927850000082 9.096 75.82286580000054 8.951)
Error minima by case: (3.8226 8 3.6047 7 18.199 7 27.2849 7 4.2653 7 5.9019 7 0.1705 8 0.8156 7 0.7658 8 2.9535 7 8.3217 7 0.1053 6 5.5213 7 0.506 6 5.9882 6 76.8714 7 23.0567 7 0.4979 7 0.0064 6 1.4805 7 22.1142 7 26.5857 6 2.7071 7 74.1155 8 0.2167 7)
Average genome size in population (length): 102.004
Average program size in population (points): 103.004
Average percent parens in population: 0.010
Minimum age in population: 73.8108514389686
Maximum age in population: 78.48112917529055
Average age in population: 76.48286070853302
Median age in population: 76.5116709531002
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.407
Error (vector) diversity:			 0.423
Behavioral diversity:				 0.423
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 110865111
--- Timings ---
Current time: 1529615137507 milliseconds
Total Time:         250.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        81.3 seconds, 32.5%
Fitness Testing:    132.2 seconds, 52.9%
Report:              36.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction float_shove} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 80.76541201775525 float_shove in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3141.9859233999996
Median total errors in population: 1245.4798
Error averages by case: (114.8374994999997 9.736 131.6138268000004 10.316 112.14883859999895 9.668 163.64158260000065 9.686 92.41088959999935 9.606 104.34519319999896 8.932 108.94408349999823 10.465 96.75078990000102 10.303 102.77138740000107 10.226 95.0629090000009 8.882 87.24581669999947 11.37 79.60708470000023 8.746 148.16122039999996 9.873 81.73657299999954 7.884 128.0399723000019 7.902 161.7988019000017 10.383 139.45198269999995 11.151 86.11709849999951 8.864 84.9229481000006 8.454 99.64503189999978 9.466 162.5827876000023 10.605 170.3414943000002 8.858 101.59674850000113 9.778 169.6949975000004 9.092 79.28336520000059 8.987)
Error minima by case: (1.1777 8 6.4091 7 5.199 7 26.0 8 4.6776 7 0.1715 7 0.1705 8 0.8156 7 4.7654 8 2.9535 7 2.2483 6 0.1043 6 6.5083 6 0.506 6 9.0118 6 12.0 7 6.0428 8 1.5021 7 0.0064 7 7.8279 7 13.0 7 21.0118 6 2.7071 7 49.0 7 0.2168 7)
Average genome size in population (length): 101.923
Average program size in population (points): 102.923
Average percent parens in population: 0.010
Minimum age in population: 75.13356271059394
Maximum age in population: 79.54327231810328
Average age in population: 77.82794311470084
Median age in population: 77.9046120641386
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.879
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.879
Total error diversity:				 0.39
Error (vector) diversity:			 0.397
Behavioral diversity:				 0.397
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 113413211
--- Timings ---
Current time: 1529615142858 milliseconds
Total Time:         255.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        82.7 seconds, 32.4%
Fitness Testing:    135.4 seconds, 53.0%
Report:              37.2 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_mod} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_dec} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 integer_mod float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_dec float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 102
Size: 103
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3021.3422619000003
Median total errors in population: 1245.4806
Error averages by case: (105.06771449999965 9.73 122.48190120000037 10.279 112.53980019999896 9.674 163.51123770000052 9.644 94.13413449999979 9.478 104.55335819999922 8.855 98.62242389999871 10.435 91.68653820000094 10.278 96.88739420000087 10.232 86.71607610000048 8.842 77.00572659999952 11.409 73.70982330000021 8.768 142.6598620999999 9.808 76.50400599999944 7.817 121.8092762000016 7.867 160.41228150000174 10.363 130.59425829999952 11.095 80.44289089999941 8.84 78.73039830000062 8.448 99.98218159999998 9.405 152.5996735000023 10.536 171.48133160000046 8.764 94.43084490000099 9.755 165.32982150000032 9.078 81.02130690000047 9.028)
Error minima by case: (0.8361 8 5.4225 6 26.9218 7 23.7151 8 6.6776 7 12.0981 6 0.1708 8 8.969 7 4.7658 8 2.9535 7 4.6779 5 0.1043 7 6.5213 8 0.506 6 7.0507 6 8.1286 6 16.0567 8 2.5023 7 0.0064 6 10.7614 7 10.5269 7 37.7308 6 9.2929 8 52.1152 7 0.2143 7)
Average genome size in population (length): 102.029
Average program size in population (points): 103.029
Average percent parens in population: 0.010
Minimum age in population: 76.54946027467805
Maximum age in population: 81.27258629436758
Average age in population: 79.22670566025796
Median age in population: 79.23863893349397
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.366
Error (vector) diversity:			 0.377
Behavioral diversity:				 0.377
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 115963986
--- Timings ---
Current time: 1529615147772 milliseconds
Total Time:         260.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        84.2 seconds, 32.3%
Fitness Testing:    138.2 seconds, 53.1%
Report:              37.9 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger integer_dup_times float_dec 80.76541201775525 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_yankdup float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2798.507524
Median total errors in population: 1245.6924000000001
Error averages by case: (100.73865849999973 9.709 118.89333230000037 10.268 97.73257339999968 9.665 149.23443200000077 9.651 79.85757590000026 9.555 89.96515899999912 8.851 95.0073490999992 10.416 81.04845950000092 10.298 86.82179210000051 10.22 77.40156680000013 8.936 84.4257574999994 11.416 63.4664047000003 8.746 131.66414159999883 9.855 65.91719489999919 7.873 112.49819620000144 7.885 149.06879910000137 10.321 127.5223657999995 11.117 70.09131229999956 8.869 68.67176670000052 8.424 85.08468320000037 9.423 158.3426336000023 10.536 157.55732530000097 8.781 85.78050490000098 9.764 155.84485800000004 9.101 67.2166816000005 8.974)
Error minima by case: (2.8361 8 7.4225 8 0.199 6 6.4958 8 6.6914 8 12.0981 7 0.1353 8 2.8156 7 3.7658 8 2.9535 7 9.6779 8 0.1044 6 3.2004 7 0.506 6 1.9882 6 11.091 8 3.0428 8 0.5042 7 0.0064 7 7.1714 7 17.4596 8 12.9882 6 4.7071 7 25.7129 7 0.2175 8)
Average genome size in population (length): 101.985
Average program size in population (points): 102.985
Average percent parens in population: 0.010
Minimum age in population: 77.54946027467805
Maximum age in population: 82.67632720792793
Average age in population: 80.55998307671297
Median age in population: 80.62557582772367
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.905
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.905
Total error diversity:				 0.396
Error (vector) diversity:			 0.405
Behavioral diversity:				 0.405
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 118513611
--- Timings ---
Current time: 1529615152820 milliseconds
Total Time:         265.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        85.7 seconds, 32.3%
Fitness Testing:    141.0 seconds, 53.1%
Report:              38.6 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_min} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction float_shove} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult float_inc float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_min float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin float_shove -7.788270215791826 in1 float_dup_items float_inc integer_mod float_dup_items float_swap integer_mod in2 float_swap integer_fromfloat float_stackdepth print_integer float_sub)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2894.1146603999982
Median total errors in population: 1244.7187000000001
Error averages by case: (108.84822469999972 9.672 126.89521290000059 10.271 102.90292149999927 9.645 154.13639000000077 9.607 83.34697520000005 9.551 95.19821139999904 8.802 102.96191969999862 10.414 81.64863410000096 10.231 89.71181370000092 10.162 80.96630530000057 8.795 85.77091789999943 11.393 66.23153830000031 8.636 135.88402369999935 9.758 66.96420759999909 7.794 116.51148270000175 7.812 151.64990510000192 10.353 133.86480209999957 11.111 73.08793159999922 8.786 71.25758150000055 8.358 89.40398640000045 9.394 161.86830740000238 10.549 160.74183450000103 8.776 89.03428080000099 9.701 157.9022705000003 8.996 69.85398180000055 8.904)
Error minima by case: (0.8361 8 7.4225 6 29.2266 7 26.0 8 8.6014 7 16.0 6 0.1707 8 8.969 6 2.7651 8 2.9535 6 8.0 5 0.1051 6 1.5211 6 0.5059 6 5.9882 6 12.0 7 28.8702 7 0.5033 7 0.9936 7 0.1721 7 13.0 7 21.9882 6 3.2798 6 28.1154 7 0.2165 7)
Average genome size in population (length): 101.858
Average program size in population (points): 102.858
Average percent parens in population: 0.010
Minimum age in population: 78.54946027467805
Maximum age in population: 84.00065664435067
Average age in population: 81.9461897052168
Median age in population: 81.9683948928908
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.904
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.904
Total error diversity:				 0.374
Error (vector) diversity:			 0.386
Behavioral diversity:				 0.387
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 121060061
--- Timings ---
Current time: 1529615158531 milliseconds
Total Time:         270.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        87.3 seconds, 32.2%
Fitness Testing:    144.1 seconds, 53.2%
Report:              39.2 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_max} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_max float_dup_times float_mult integer_mult float_inc float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items float_inc integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2870.8168024999986
Median total errors in population: 1245.47975
Error averages by case: (98.06334499999974 9.639 115.74677380000037 10.265 100.39306619999927 9.65 154.46904820000057 9.635 83.40182850000025 9.515 94.32585969999916 8.853 91.3431379999992 10.375 87.5821082000007 10.291 93.7822247000006 10.2 85.22166260000041 8.87 74.59520959999955 11.417 70.34547410000012 8.674 138.97491239999965 9.806 71.8443371999995 7.825 119.70516000000153 7.84 150.1375415000015 10.332 123.37082309999953 11.146 76.81356679999956 8.793 75.36022590000049 8.395 89.39262810000034 9.409 151.5581051000019 10.539 162.1157577000009 8.769 92.84783040000075 9.735 161.5476971000002 9.057 69.91347860000045 8.935)
Error minima by case: (0.1639 8 5.4091 8 7.3595 7 43.6489 8 8.6775 7 2.9019 6 0.1708 8 8.969 7 3.7658 7 2.9535 7 2.5177 9 0.0931 6 5.5211 8 0.506 6 4.9863 6 25.8152 9 6.0428 9 0.4978 7 0.0064 7 1.1721 7 20.4596 8 37.9318 6 9.2929 7 59.1135 8 0.2175 7)
Average genome size in population (length): 102.135
Average program size in population (points): 103.135
Average percent parens in population: 0.010
Minimum age in population: 80.92856173379263
Maximum age in population: 85.14488897651376
Average age in population: 83.32698560505585
Median age in population: 83.33070545021903
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.904
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.904
Total error diversity:				 0.393
Error (vector) diversity:			 0.408
Behavioral diversity:				 0.408
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 123613486
--- Timings ---
Current time: 1529615163535 milliseconds
Total Time:         276.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        88.8 seconds, 32.2%
Fitness Testing:    146.9 seconds, 53.2%
Report:              40.2 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_min} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_min in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec integer_min float_frominteger print_float float_frominteger integer_dup_times float_dec 80.76541201775525 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_inc float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2982.154046900001
Median total errors in population: 1245.6924000000001
Error averages by case: (110.93199389999971 9.751 128.8280161000004 10.295 103.14158459999935 9.716 155.57988050000063 9.688 85.18683539999995 9.61 96.23323959999912 8.906 104.8134482999989 10.473 89.1915166000009 10.28 96.31484600000077 10.253 84.79668940000053 8.877 86.2025296999995 11.383 73.18701970000023 8.74 141.55079289999966 9.84 75.52949619999968 7.878 121.45140610000163 7.91 153.00593440000162 10.358 135.87506279999957 11.124 79.75951539999927 8.842 78.08468050000062 8.453 91.28046790000025 9.45 160.05078530000196 10.548 163.07929070000063 8.842 93.71875810000091 9.765 163.38623200000046 9.068 71.86802480000044 9.056)
Error minima by case: (3.8226 8 5.4222 5 27.2266 5 26.0 6 2.6914 5 14.9295 5 0.1705 8 8.969 5 3.7629 8 1.9535 5 8.0 4 0.0941 6 1.7111 4 0.506 6 5.9882 6 1.6399 5 22.9572 6 0.4979 7 0.9933 6 7.1721 7 13.0 5 34.0118 5 8.2929 5 34.8832 5 0.2165 7)
Average genome size in population (length): 102.201
Average program size in population (points): 103.201
Average percent parens in population: 0.010
Minimum age in population: 82.12759187265358
Maximum age in population: 86.68534539476912
Average age in population: 84.70264500532863
Median age in population: 84.75878090685714
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.388
Error (vector) diversity:			 0.401
Behavioral diversity:				 0.401
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 126168611
--- Timings ---
Current time: 1529615168645 milliseconds
Total Time:         281.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        90.2 seconds, 32.1%
Fitness Testing:    149.9 seconds, 53.3%
Report:              40.9 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 68333.92729999998
Test mean error for best: 34.16696
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_min} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.76352851969527} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc float_div integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_add float_dup_times integer_dup_times integer_inc integer_min 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 43.76352851969527 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger integer_mod float_sin integer_pop -7.788270215791826 in1 integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 97
Size: 98
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2776.033908800001
Median total errors in population: 1245.6924000000001
Error averages by case: (96.37015829999969 9.72 113.72810770000035 10.253 98.13714179999978 9.676 151.2583261000006 9.649 80.1878702000001 9.488 90.44390859999903 8.856 89.34453949999909 10.423 82.25932240000083 10.292 87.91069410000047 10.246 77.02950920000023 8.87 75.21735679999952 11.354 64.20237240000029 8.724 132.54076799999893 9.79 67.77646789999922 7.89 113.94307630000142 7.867 148.7388388000014 10.321 122.21220179999953 11.073 70.78826439999963 8.852 69.30105780000045 8.461 85.97967610000035 9.437 151.68090490000216 10.484 159.58087990000075 8.774 86.69611590000083 9.723 155.8288141000001 9.066 66.6145358000005 8.974)
Error minima by case: (2.8361 8 5.4225 6 27.2266 6 26.0 8 8.6113 7 14.9295 6 0.1705 8 1.8156 6 4.7658 8 5.9535 6 8.0 5 0.1043 6 2.521 6 0.506 6 5.0118 6 12.0 5 24.9572 7 0.4979 7 0.9929 7 7.1713 7 13.0 6 37.998 6 3.7071 6 49.0 7 0.2167 7)
Average genome size in population (length): 101.538
Average program size in population (points): 102.538
Average percent parens in population: 0.010
Minimum age in population: 83.12759187265358
Maximum age in population: 88.02435591669283
Average age in population: 86.07406969004035
Median age in population: 86.0994350549496
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.382
Error (vector) diversity:			 0.393
Behavioral diversity:				 0.393
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 128707136
--- Timings ---
Current time: 1529615173834 milliseconds
Total Time:         286.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        91.6 seconds, 32.0%
Fitness Testing:    153.0 seconds, 53.4%
Report:              41.6 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_340} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dec} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_252} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -6.768106323154547} {:instruction in1} {:instruction float_dup_items} {:instruction integer_yank} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_340 float_dup_times integer_mod integer_inc integer_min integer_inc float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dec integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_252 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -6.768106323154547 in1 float_dup_items integer_yank integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 106
Size: 107
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2659.8014921999998
Median total errors in population: 1244.4833
Error averages by case: (93.60965149999966 9.68 111.33545990000043 10.287 89.28479739999973 9.673 143.36360120000057 9.669 70.76661080000022 9.57 82.52482429999914 8.829 86.88703819999915 10.435 76.84925240000084 10.27 84.60774850000034 10.219 74.2879573000001 8.834 78.46905489999965 11.407 60.55042610000029 8.679 128.76049779999894 9.792 62.79973229999921 7.815 110.69875540000155 7.814 141.9112979000014 10.351 118.93403049999954 11.129 67.32828049999966 8.79 65.53447420000052 8.393 77.91623340000051 9.404 150.45084640000195 10.518 150.76205760000082 8.789 84.46765130000084 9.718 152.41732179999994 9.001 57.28089060000045 8.937)
Error minima by case: (0.1774 8 4.4104 6 20.9439 6 10.2711 7 4.6262 6 13.917 6 0.1303 8 8.969 6 0.7658 8 3.9535 6 8.0 5 0.1061 6 2.5211 6 0.2277 6 8.9987 6 12.0 5 6.0428 7 0.4979 7 0.9935 6 1.8279 7 13.0 6 15.9882 6 0.2929 6 49.0 6 0.2175 7)
Average genome size in population (length): 101.698
Average program size in population (points): 102.698
Average percent parens in population: 0.010
Minimum age in population: 85.12528746657969
Maximum age in population: 89.38286149361933
Average age in population: 87.38799556272248
Median age in population: 87.42854125712918
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.37
Error (vector) diversity:			 0.377
Behavioral diversity:				 0.377
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 131249761
--- Timings ---
Current time: 1529615178930 milliseconds
Total Time:         291.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        92.9 seconds, 31.9%
Fitness Testing:    155.8 seconds, 53.5%
Report:              42.4 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_407} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.10442255857248} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_407 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 43.10442255857248 float_rot integer_dec integer_swap integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2717.4437630999973
Median total errors in population: 1245.0979
Error averages by case: (95.41391089999969 9.716 114.38089820000043 10.245 95.77906219999937 9.723 146.32620650000047 9.67 75.9457673000002 9.596 86.56542499999908 8.849 89.82680949999882 10.471 80.59517950000098 10.284 85.37645960000052 10.252 76.50510890000034 8.875 77.64396149999946 11.379 61.88504070000031 8.666 132.22284009999888 9.84 64.40103529999902 7.858 111.48250770000179 7.887 141.04869200000144 10.353 119.41703649999948 11.121 68.32663959999952 8.776 66.9804321000006 8.422 82.48948750000054 9.441 150.68870790000224 10.537 155.51792950000095 8.788 83.57138210000097 9.739 155.05788340000024 9.015 61.492359600000576 9.0)
Error minima by case: (0.8361 8 4.4104 6 26.214 5 1.7289 6 5.6776 5 12.0973 6 0.1043 8 7.8507 5 0.2344 8 2.9535 4 4.6775 5 0.1063 6 6.5193 5 0.4916 6 9.9881 6 8.1278 5 6.0428 6 0.4972 7 0.9929 7 2.7839 7 10.5274 5 35.9977 4 9.2929 5 75.1135 6 0.2167 7)
Average genome size in population (length): 101.79
Average program size in population (points): 102.79
Average percent parens in population: 0.010
Minimum age in population: 86.19794277351235
Maximum age in population: 90.52585558126444
Average age in population: 88.70201416660944
Median age in population: 88.78005068626243
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.375
Error (vector) diversity:			 0.382
Behavioral diversity:				 0.384
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 133794586
--- Timings ---
Current time: 1529615184257 milliseconds
Total Time:         296.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        94.7 seconds, 31.9%
Fitness Testing:    158.7 seconds, 53.5%
Report:              43.3 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_tan} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_dup_items} {:instruction 79.2277040609221} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_swap} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.73165569004389} {:instruction float_rot} {:instruction float_mult} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (integer_yank float_add integer_dec integer_fromfloat float_flush float_swap 36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_yankdup integer_inc float_tan float_sub integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec float_dup_times integer_dup_times integer_dup_items 79.2277040609221 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_swap float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 42.73165569004389 float_rot float_mult float_mult integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2883.8144491
Median total errors in population: 1244.4807500000002
Error averages by case: (102.73900999999968 9.716 119.04820040000051 10.234 98.36362069999915 9.639 151.5330579000008 9.601 80.90204839999971 9.507 91.3698503999991 8.811 94.6674662999984 10.437 86.58168320000104 10.216 93.04284700000106 10.207 86.35002390000112 8.799 84.04549259999952 11.329 69.58850130000019 8.64 140.2995554999998 9.743 73.15935479999953 7.863 121.744068200002 7.814 150.05770300000168 10.342 125.01210739999956 11.086 76.10171109999936 8.816 74.37140260000065 8.371 86.51845659999996 9.396 155.7819680000021 10.525 160.5349906000004 8.768 94.6042155000011 9.674 161.7117560000006 8.974 68.30235770000051 8.875)
Error minima by case: (3.8226 8 0.3956 6 0.801 6 26.0 7 7.6776 6 13.8923 7 0.1213 8 7.8287 5 0.2342 8 3.9535 5 8.0 5 0.1061 6 0.7467 5 0.5059 6 8.0277 6 11.6042 5 2.0558 7 0.4979 7 0.0064 6 0.1721 6 13.0 7 8.9988 6 2.2798 5 18.8476 6 0.2167 7)
Average genome size in population (length): 101.911
Average program size in population (points): 102.911
Average percent parens in population: 0.010
Minimum age in population: 87.9550381101066
Maximum age in population: 91.98013492897823
Average age in population: 90.06080693124233
Median age in population: 90.08454501229818
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.901
Total error diversity:				 0.365
Error (vector) diversity:			 0.38
Behavioral diversity:				 0.381
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 136342475
--- Timings ---
Current time: 1529615189364 milliseconds
Total Time:         301.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        96.2 seconds, 31.9%
Fitness Testing:    161.5 seconds, 53.5%
Report:              44.0 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction float_add} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_min} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times float_add integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger integer_min integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod integer_min float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2713.380133399998
Median total errors in population: 1244.4872999999998
Error averages by case: (93.43335219999972 9.675 111.02170170000038 10.248 96.13079019999896 9.715 149.76463800000045 9.656 78.10213720000026 9.506 88.69310719999923 8.827 86.27534689999908 10.399 77.81721210000086 10.285 86.25686360000105 10.232 74.44581390000029 8.829 69.45454109999949 11.36 62.47621620000036 8.68 132.13898049999884 9.771 63.5588467999989 7.836 112.76891640000184 7.832 146.2152611000018 10.331 118.92484279999954 11.127 69.18578599999934 8.788 67.3627069000005 8.414 84.07936950000018 9.416 144.19465780000223 10.498 158.4006900000008 8.795 85.77534590000108 9.723 154.60837390000012 8.997 64.41563550000058 8.939)
Error minima by case: (1.8361 8 5.4225 6 5.803 7 26.0 8 7.6776 7 14.0046 7 0.1203 9 8.969 7 0.2362 8 5.9535 7 8.0 5 0.0931 6 1.5173 8 0.506 6 6.9882 5 12.0 7 27.9433 8 2.5021 7 0.0064 6 8.8279 7 13.0 7 36.998 6 10.8605 8 61.1154 7 0.2175 6)
Average genome size in population (length): 101.555
Average program size in population (points): 102.555
Average percent parens in population: 0.010
Minimum age in population: 89.13437862537228
Maximum age in population: 93.39006151185096
Average age in population: 91.39545046860204
Median age in population: 91.42909036054708
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.35
Error (vector) diversity:			 0.36
Behavioral diversity:				 0.362
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 138881400
--- Timings ---
Current time: 1529615194830 milliseconds
Total Time:         307.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        97.8 seconds, 31.8%
Fitness Testing:    164.6 seconds, 53.6%
Report:              44.8 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_356} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.76352851969527} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_356 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 43.76352851969527 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 95
Size: 96
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2816.6964341000016
Median total errors in population: 1245.4797
Error averages by case: (99.97305179999971 9.776 119.37781880000043 10.31 99.36661029999951 9.749 151.70753870000058 9.682 79.49501920000026 9.588 91.39766659999908 8.905 95.11352979999869 10.49 84.6852039000009 10.239 88.02728410000057 10.239 79.37457020000052 8.844 78.71628549999956 11.39 64.61431970000028 8.689 133.8493435999991 9.797 69.65514969999901 7.883 114.60917210000171 7.883 149.65112860000184 10.393 125.00656429999943 11.16 71.02475669999949 8.858 70.00783430000044 8.434 85.93039920000032 9.506 155.5516826000024 10.558 159.70790910000093 8.853 87.78496880000095 9.743 156.94099990000024 9.042 66.08462660000053 9.032)
Error minima by case: (0.1639 8 6.4225 7 12.6376 7 10.2711 8 5.6786 7 15.9295 6 0.1708 8 4.1844 7 3.7658 8 1.9535 7 8.0 6 0.1051 6 4.5063 7 0.506 6 1.9853 6 12.0 7 6.0428 8 0.4967 7 0.0064 6 0.1722 7 13.0 7 15.9882 6 0.2789 8 73.1005 8 0.217 7)
Average genome size in population (length): 101.151
Average program size in population (points): 102.151
Average percent parens in population: 0.010
Minimum age in population: 90.24321419265566
Maximum age in population: 94.83658271561126
Average age in population: 92.71768315173564
Median age in population: 92.7767309882322
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.369
Error (vector) diversity:			 0.379
Behavioral diversity:				 0.379
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 141410225
--- Timings ---
Current time: 1529615199762 milliseconds
Total Time:         312.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.2 seconds, 31.8%
Fitness Testing:    167.4 seconds, 53.6%
Report:              45.5 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 68333.92729999998
Test mean error for best: 34.16696
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction integer_yankdup} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction print_integer} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 float_add integer_dec integer_fromfloat float_flush integer_yank in2 integer_mod integer_mod integer_mod integer_mod integer_inc integer_mod integer_min integer_mod integer_mod integer_inc integer_min integer_mod integer_mod integer_inc float_dup_times integer_mod integer_inc integer_div integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush integer_flush 15 float_tan integer_yankdup 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items print_integer integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3149.697016999999
Median total errors in population: 1244.7187000000001
Error averages by case: (113.78738689999965 9.662 131.6094590000003 10.248 116.90357349999921 9.607 168.77022020000055 9.593 97.34695930000001 9.472 108.727587699999 8.768 107.37697499999885 10.425 94.28797420000089 10.29 100.49112160000082 10.218 90.9686907000006 8.817 86.90721929999934 11.332 77.11344510000018 8.706 146.92610889999992 9.775 80.08575809999924 7.82 127.21158690000183 7.866 163.20263370000185 10.297 138.0671257999999 11.091 84.2811615999992 8.797 82.14854130000053 8.415 104.66393810000032 9.418 161.9973071000024 10.473 176.22826510000064 8.698 101.61945660000092 9.718 167.53329419999997 9.005 83.99922710000048 8.931)
Error minima by case: (1.1774 8 4.4418 9 26.2455 8 40.7151 8 8.6113 8 13.9485 7 0.1343 9 8.969 7 0.7658 8 5.9535 7 16.3683 8 0.1044 6 1.5211 8 0.3717 6 7.0118 5 1.8721 8 28.8582 8 0.4979 7 0.0064 6 1.8279 7 24.4596 7 34.998 6 10.8605 8 38.1154 8 0.2155 7)
Average genome size in population (length): 101.561
Average program size in population (points): 102.561
Average percent parens in population: 0.010
Minimum age in population: 91.28354064052704
Maximum age in population: 95.98464297852423
Average age in population: 94.11629173687166
Median age in population: 94.17851312952885
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.368
Error (vector) diversity:			 0.381
Behavioral diversity:				 0.382
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 143949300
--- Timings ---
Current time: 1529615205399 milliseconds
Total Time:         317.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       100.7 seconds, 31.7%
Fitness Testing:    170.6 seconds, 53.7%
Report:              46.2 seconds, 14.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yank} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction integer_dup_times} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction integer_mod} {:instruction integer_yank} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_dup_times float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_min integer_mod integer_inc float_dup_times integer_mod integer_inc integer_yank integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_shove integer_min float_frominteger print_float float_frominteger integer_div integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_yankdup integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan integer_dup_times 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items integer_min integer_mod float_dup_items float_swap integer_mod integer_yank float_swap float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2917.5102341000015
Median total errors in population: 1245.9148000000002
Error averages by case: (106.58282029999971 9.865 124.87193640000027 10.363 111.90915039999949 9.895 163.89145330000062 9.826 93.84916189999986 9.658 104.94997669999913 9.049 101.72458569999885 10.551 77.87118190000066 10.286 85.0924058000002 10.307 76.88435529999994 8.916 78.01139609999953 11.444 63.74798580000032 8.788 131.43097799999902 9.893 63.855571599999486 8.037 115.11043410000116 8.011 163.20698650000148 10.477 131.09109739999948 11.182 68.93640079999986 8.965 66.93060650000034 8.523 99.42191240000027 9.529 155.27412820000217 10.659 170.70902630000055 8.964 84.23227640000074 9.812 154.95132139999978 9.159 81.66008490000053 9.154)
Error minima by case: (1.1771 8 5.3958 6 26.2228 6 21.8847 7 7.6766 6 14.0766 6 0.1683 8 2.8156 5 0.7658 8 1.9535 5 8.0 5 0.1031 7 7.5211 5 0.091 6 8.0117 6 12.0 6 6.0428 7 0.4977 7 0.0064 6 0.1721 7 13.0 6 2.0118 6 4.7071 5 49.0 6 0.2167 7)
Average genome size in population (length): 101.214
Average program size in population (points): 102.214
Average percent parens in population: 0.010
Minimum age in population: 92.28354064052704
Maximum age in population: 97.35819724138751
Average age in population: 95.4931231290472
Median age in population: 95.53149366365582
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.419
Error (vector) diversity:			 0.426
Behavioral diversity:				 0.426
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 146479750
--- Timings ---
Current time: 1529615210570 milliseconds
Total Time:         322.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.1 seconds, 31.6%
Fitness Testing:    173.5 seconds, 53.7%
Report:              47.1 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction float_yank} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 80.76541201775525} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tagged_860} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.446421973066} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_max} {:instruction integer_mod} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup integer_swap integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times float_yank integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 80.76541201775525 integer_yank in1 integer_yankdup float_sin tagged_860 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times integer_max float_mult integer_fromfloat 15 float_tan float_inc 42.446421973066 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_sin float_stackdepth float_sin integer_pop -7.788270215791826 in1 float_dup_items integer_min integer_mod float_dup_items integer_max integer_mod in2 float_swap float_min float_stackdepth print_integer float_sub float_sub)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2922.328190699999
Median total errors in population: 1244.7187000000001
Error averages by case: (101.07614089999977 9.723 119.58506130000046 10.292 105.9330283999994 9.752 157.47064670000066 9.701 87.18571000000013 9.573 99.0133701999991 8.933 95.42724659999912 10.453 86.07797310000079 10.238 92.42461200000025 10.221 84.01927750000016 8.86 83.75059059999964 11.43 69.23905740000023 8.692 138.7729084999993 9.831 71.52940069999939 7.882 119.34903880000142 7.864 155.42022600000163 10.406 126.30038719999952 11.15 75.9060568999997 8.816 74.15326270000045 8.417 93.0997630000002 9.448 156.50951560000223 10.584 163.94823880000078 8.836 91.77970080000094 9.727 160.8818417999999 9.073 74.56913520000049 9.004)
Error minima by case: (0.8361 8 4.4094 8 26.2131 8 8.9154 9 0.3224 7 13.916 6 0.1333 8 8.969 8 0.2342 8 2.9535 7 1.3355 8 0.1063 6 1.5343 8 0.506 6 5.9882 6 0.6454 8 6.0428 9 0.4979 7 0.0071 6 2.8279 7 17.5273 7 21.9882 6 9.2929 8 70.1285 8 0.2037 7)
Average genome size in population (length): 101.153
Average program size in population (points): 102.153
Average percent parens in population: 0.010
Minimum age in population: 93.73136314541628
Maximum age in population: 98.94609880456187
Average age in population: 96.83163163345364
Median age in population: 96.88212153876798
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.381
Error (vector) diversity:			 0.392
Behavioral diversity:				 0.392
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 149008625
--- Timings ---
Current time: 1529615215881 milliseconds
Total Time:         328.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       103.6 seconds, 31.5%
Fitness Testing:    176.7 seconds, 53.8%
Report:              48.0 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 68336.92749999999
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_min} {:instruction float_rot} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_add} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dec} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_324} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction integer_dup_times} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_min float_rot integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min float_add integer_inc integer_mod integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float integer_dec float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_yankdup float_sin tag_integer_324 integer_dup in2 in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan integer_dup_times 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 integer_stackdepth float_dup_items integer_min integer_mod float_dup_items float_stackdepth print_integer float_sub)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3047.023068600001
Median total errors in population: 1245.4797
Error averages by case: (109.77317809999971 9.639 127.80277530000062 10.227 109.58589259999916 9.684 161.76293400000063 9.621 91.17623409999979 9.49 101.65506619999904 8.832 103.89750369999865 10.345 93.09495700000085 10.224 99.89001060000092 10.205 88.6420276000008 8.837 79.72085089999956 11.309 76.2990526000002 8.678 144.85095069999977 9.805 78.24557599999942 7.834 123.3787528000016 7.875 160.13842630000156 10.295 134.67044699999977 11.097 83.14701279999933 8.816 81.69385560000052 8.41 97.55310769999991 9.367 152.38975930000205 10.518 169.61559720000042 8.742 95.94850580000093 9.716 166.50008480000034 9.022 78.0725099000005 8.93)
Error minima by case: (0.8361 8 0.6043 8 2.801 7 10.2711 8 7.6804 7 14.9295 7 0.1333 9 4.1694 8 5.7648 8 1.9385 7 17.349 8 0.1061 6 1.521 8 0.506 6 9.0118 6 1.1286 8 6.0428 9 0.4979 7 0.0064 7 5.0036 6 6.4596 9 15.9882 6 9.2929 7 32.1152 8 0.2168 7)
Average genome size in population (length): 100.758
Average program size in population (points): 101.758
Average percent parens in population: 0.010
Minimum age in population: 94.73136314541628
Maximum age in population: 100.4300986728561
Average age in population: 98.10422149694786
Median age in population: 98.11970087286316
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.365
Error (vector) diversity:			 0.374
Behavioral diversity:				 0.374
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 151527664
--- Timings ---
Current time: 1529615221100 milliseconds
Total Time:         333.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.9 seconds, 31.5%
Fitness Testing:    179.7 seconds, 53.9%
Report:              48.7 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_div} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction float_yankdup} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_sin} {:instruction integer_dec} {:instruction float_min} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_mult} {:instruction integer_mod} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 float_div float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_sub integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin float_yankdup integer_dup in2 in2 float_div integer_shove integer_shove integer_mult integer_add float_dup_times float_mult integer_mult float_inc float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_sin integer_dec float_min float_dup float_rot integer_shove print_integer float_frominteger float_add float_dup float_rot integer_shove print_integer integer_pop -7.788270215791826 in1 float_dup_items integer_mult integer_mod float_min float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2989.278459599999
Median total errors in population: 1244.7187000000001
Error averages by case: (114.42473599999968 9.735 129.98261260000044 10.337 107.24362669999887 9.794 160.22646730000062 9.746 89.23742209999978 9.694 99.49592839999906 8.966 105.7667363999983 10.467 85.47425570000087 10.266 91.73208290000086 10.223 86.07073950000083 8.835 90.77387709999942 11.405 68.0434175000003 8.661 135.3454343999991 9.801 69.95930129999934 7.881 119.95495780000185 7.885 156.34340770000162 10.466 138.14450090000005 11.223 74.51451129999938 8.855 72.43500460000045 8.42 95.47733329999994 9.542 163.3247932000024 10.637 167.81021980000043 8.961 93.53106510000102 9.737 159.14416270000055 9.054 75.22186530000059 9.009)
Error minima by case: (4.1774 8 4.4104 8 26.214 8 40.7151 8 7.6776 8 13.917 7 0.1708 8 8.969 8 0.7655 7 0.9535 7 16.3368 8 0.1061 6 2.5211 8 0.2277 6 11.0117 6 84.8864 9 27.9433 9 3.5021 7 0.0064 6 1.8279 7 24.4596 8 34.998 6 7.2929 7 71.1154 8 0.2175 7)
Average genome size in population (length): 101.01
Average program size in population (points): 102.01
Average percent parens in population: 0.010
Minimum age in population: 96.67775110262899
Maximum age in population: 101.5443460463965
Average age in population: 99.47335279037537
Median age in population: 99.57154034985014
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.918
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.918
Total error diversity:				 0.38
Error (vector) diversity:			 0.389
Behavioral diversity:				 0.389
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 154052939
--- Timings ---
Current time: 1529615226757 milliseconds
Total Time:         339.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.6 seconds, 31.4%
Fitness Testing:    182.8 seconds, 53.9%
Report:              49.6 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yank} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction float_cos} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_min} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction integer_swap} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_yank} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction integer_flush} {:instruction float_yankdup})
Best program: (36.15340410350262 integer_yank float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc float_div float_cos integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_min integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div integer_shove integer_min integer_add float_dup_times float_mult integer_mult integer_mult float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 integer_swap float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_yank integer_pop -7.788270215791826 float_dec float_dup_times integer_min integer_mod float_dup_items float_swap float_yankdup float_stackdepth print_integer float_sub integer_flush float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3186.5862075000014
Median total errors in population: 1245.4791
Error averages by case: (117.72408099999974 9.745 137.25701130000007 10.3 119.4967831999988 9.762 169.3872113000006 9.699 99.55365559999939 9.592 112.66679609999905 8.956 113.5151810999983 10.516 94.47778710000095 10.226 98.68103000000106 10.236 89.17190120000102 8.862 92.23987819999944 11.397 75.37354070000018 8.712 144.33478300000007 9.818 80.51646919999972 7.902 125.32922100000182 7.897 165.60602920000167 10.41 142.21390750000032 11.177 82.02592499999928 8.86 80.34930130000055 8.435 107.78690859999978 9.454 168.97840510000228 10.606 176.3677218999998 8.868 97.94494890000094 9.725 167.88829390000075 9.045 88.49743610000054 9.002)
Error minima by case: (0.1774 8 7.4224 4 14.7468 4 26.0 5 7.6776 4 16.0 4 0.1686 7 8.1711 4 5.7656 9 5.9403 7 8.0 4 0.1053 6 5.5211 6 0.506 6 9.9882 6 12.0 4 27.9433 5 0.4979 7 0.0064 6 0.8279 7 6.4596 5 20.9882 4 2.7202 7 43.3494 7 0.2167 7)
Average genome size in population (length): 101.165
Average program size in population (points): 102.165
Average percent parens in population: 0.010
Minimum age in population: 98.19422036245044
Maximum age in population: 102.8765457765063
Average age in population: 100.8519558544568
Median age in population: 100.8695220675406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.924
Total error diversity:				 0.373
Error (vector) diversity:			 0.382
Behavioral diversity:				 0.382
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 156582264
--- Timings ---
Current time: 1529615231906 milliseconds
Total Time:         344.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.0 seconds, 31.4%
Fitness Testing:    185.7 seconds, 53.9%
Report:              50.4 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 68336.92729999998
Test mean error for best: 34.16846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.01348      
Correct output: -5.4090974816  | Program output: 38.01337      
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.01351      
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.0134        
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.01387      
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.0139       
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_add} {:instruction float_dup} {:instruction tagged_390} {:instruction integer_yank} {:instruction float_add} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_379} {:instruction integer_dup} {:instruction in2} {:instruction integer_add} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_yank} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction float_dec} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_dup_items} {:instruction float_swap} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 integer_add float_dup tagged_390 integer_yank float_add integer_dec integer_fromfloat float_flush integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_tan integer_mod integer_inc integer_min integer_mod integer_inc float_pop integer_mod integer_inc integer_min integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_379 integer_dup in2 integer_add float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_yank integer_pop -7.788270215791826 float_dec float_dup_items integer_min integer_mod float_dup_items float_swap float_yankdup float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8226 9 43.4225 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8292 10 20.1713 10 28.2342 10 17.9404 8 24.3489 11 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9433 11 7.5021 8 4.9936 8 25.1721 9 98.5265 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1236.4798000000003
Mean: 24.729595
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3203.0683026000006
Median total errors in population: 1245.4797
Error averages by case: (121.51124829999968 9.804 139.14066580000002 10.38 113.75173389999911 9.842 166.17032500000073 9.786 96.53447869999968 9.718 107.43575319999904 9.023 115.37063829999842 10.534 93.561033400001 10.336 102.02213610000072 10.312 92.07766300000058 8.924 98.37452649999945 11.477 79.05037450000019 8.761 146.5635991999997 9.882 78.97247659999947 7.934 129.59546870000176 7.963 160.72049830000154 10.495 146.49059860000008 11.232 85.4673331999995 8.903 83.92564820000067 8.508 102.14715289999995 9.573 174.59599950000265 10.634 173.5808518000006 8.95 102.29230210000101 9.807 169.49864030000043 9.12 83.21915650000066 9.1)
Error minima by case: (0.8361 8 4.4104 7 17.801 7 26.0 8 7.6776 7 13.917 7 0.1705 9 8.969 6 0.7651 8 8.9404 6 8.0 7 0.0931 6 5.5211 6 0.3717 6 9.0118 5 12.0 7 28.9433 8 0.4977 7 0.9936 6 0.1721 7 5.4596 8 21.9882 6 10.8605 6 13.8846 7 0.2037 7)
Average genome size in population (length): 101.083
Average program size in population (points): 102.083
Average percent parens in population: 0.010
Minimum age in population: 100.0146430037719
Maximum age in population: 104.238176755661
Average age in population: 102.2514401841108
Median age in population: 102.2640135228946
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.92
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.92
Total error diversity:				 0.393
Error (vector) diversity:			 0.405
Behavioral diversity:				 0.407
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 159109589
--- Timings ---
Current time: 1529615237535 milliseconds
Total Time:         349.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.5 seconds, 31.3%
Fitness Testing:    188.9 seconds, 54.0%
Report:              51.2 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 68299.91639999999
Test mean error for best: 34.14996
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013796     
Correct output: -5.4090974816  | Program output: 38.013796     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013796     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013508      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013796     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013796     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 9 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4806
Mean: 24.709612
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3121.9132225000035
Median total errors in population: 1245.6924000000001
Error averages by case: (115.90587719999968 9.746 133.9772223000001 10.347 108.65697029999897 9.725 158.24795610000055 9.697 87.35222730000008 9.615 99.8828639999991 8.919 110.23469419999819 10.506 96.33445200000104 10.319 101.45810270000122 10.222 93.65556640000116 8.908 94.6984775999996 11.477 79.46877010000023 8.732 147.6495971 9.827 82.55062189999958 7.829 128.81714360000197 7.887 158.3695119000017 10.419 140.70051389999998 11.185 85.84386619999931 8.857 84.5771381000006 8.4 94.20873140000018 9.456 166.83517030000223 10.608 165.9134397000007 8.858 102.72710340000104 9.75 169.6373660000005 9.076 74.81283880000055 9.032)
Error minima by case: (1.1639 7 4.4094 8 22.801 8 25.7151 8 7.6776 7 13.916 6 0.1702 8 8.969 8 0.7619 8 5.9535 7 16.3359 8 0.1033 6 3.5211 7 0.4916 6 6.9882 6 3.1607 8 27.9433 9 1.4978 7 0.0064 6 6.8287 7 25.4596 7 24.002 6 10.8605 8 69.1154 7 0.2167 7)
Average genome size in population (length): 100.799
Average program size in population (points): 101.799
Average percent parens in population: 0.010
Minimum age in population: 101.2868609267595
Maximum age in population: 105.6318258312568
Average age in population: 103.5895375529139
Median age in population: 103.6270897328331
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.93
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.93
Total error diversity:				 0.399
Error (vector) diversity:			 0.41
Behavioral diversity:				 0.41
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 161629689
--- Timings ---
Current time: 1529615242729 milliseconds
Total Time:         355.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       110.9 seconds, 31.2%
Fitness Testing:    191.8 seconds, 54.0%
Report:              52.2 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 68299.91639999999
Test mean error for best: 34.14996
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013796     
Correct output: -5.4090974816  | Program output: 38.013796     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013796     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013508      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013796     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013796     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 9 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4806
Mean: 24.709612
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2812.424055900001
Median total errors in population: 1245.6924000000001
Error averages by case: (98.41690509999972 9.765 115.54375580000044 10.327 98.25487709999936 9.859 151.20511000000067 9.789 82.17979860000018 9.677 90.79568269999915 9.024 91.46742949999911 10.504 80.98827200000079 10.326 88.34725750000047 10.27 79.40211500000022 8.933 81.06104519999947 11.454 65.20174520000023 8.734 134.27538099999921 9.865 66.18490359999923 7.898 115.24495730000147 7.964 148.3987835000016 10.492 125.28125869999958 11.193 71.92198399999957 8.886 70.41492950000048 8.464 85.96726730000027 9.499 158.31338670000204 10.62 159.9130295000008 8.964 87.61258760000082 9.847 156.88162050000017 9.133 68.5629730000005 9.1)
Error minima by case: (0.1774 8 3.5683 6 26.214 7 6.4958 8 7.6776 7 13.917 7 0.1213 8 8.969 7 2.7629 8 2.9535 7 8.0 5 0.1062 6 5.5211 9 0.2447 6 9.0118 6 12.0 7 27.9433 8 0.4978 7 0.0045 6 10.0782 7 13.0 7 32.998 6 9.2929 8 74.1154 8 0.2175 7)
Average genome size in population (length): 100.474
Average program size in population (points): 101.474
Average percent parens in population: 0.010
Minimum age in population: 102.5302048187848
Maximum age in population: 107.1080067780378
Average age in population: 104.9229859058559
Median age in population: 104.9587072559714
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.918
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.918
Total error diversity:				 0.405
Error (vector) diversity:			 0.419
Behavioral diversity:				 0.421
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 164141603
--- Timings ---
Current time: 1529615248101 milliseconds
Total Time:         360.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.5 seconds, 31.2%
Fitness Testing:    194.8 seconds, 54.0%
Report:              53.1 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 68299.91639999999
Test mean error for best: 34.14996
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013796     
Correct output: -5.4090974816  | Program output: 38.013796     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013796     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013508      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013796     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013796     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 9 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4806
Mean: 24.709612
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 2915.6777709999988
Median total errors in population: 1244.60225
Error averages by case: (108.19334059999987 9.724 125.65303610000046 10.343 108.83649769999916 9.803 159.30197670000058 9.721 88.89488659999984 9.629 101.92158649999912 8.954 101.43895239999873 10.42 81.30376510000087 10.249 87.52558400000075 10.267 77.99795660000039 8.822 80.64523149999957 11.356 63.782943600000344 8.696 133.62482989999913 9.781 68.00389509999913 7.87 114.29855440000182 7.876 154.7560547000016 10.416 135.0897982999997 11.194 70.67792579999946 8.846 68.49867600000043 8.472 96.96781200000011 9.477 161.98606480000208 10.573 168.0691098000006 8.896 85.50400650000091 9.723 156.0449769000001 9.017 77.54030940000055 8.995)
Error minima by case: (1.8361 8 4.7656 9 18.8019 7 10.2711 8 8.6113 8 14.9408 6 0.1705 8 8.969 8 1.7656 8 5.9535 7 17.0561 8 0.0931 6 4.5213 8 0.2277 6 10.0118 6 3.1286 8 6.0428 8 0.4977 7 0.9934 7 0.1721 7 20.4596 8 15.9882 6 10.8605 7 4.1154 8 0.2168 7)
Average genome size in population (length): 100.242
Average program size in population (points): 101.242
Average percent parens in population: 0.010
Minimum age in population: 103.7294797360594
Maximum age in population: 108.5515873389359
Average age in population: 106.2744737156027
Median age in population: 106.3135520057882
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.9
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.9
Total error diversity:				 0.383
Error (vector) diversity:			 0.395
Behavioral diversity:				 0.396
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 166647778
--- Timings ---
Current time: 1529615253441 milliseconds
Total Time:         365.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       113.9 seconds, 31.1%
Fitness Testing:    197.8 seconds, 54.1%
Report:              53.9 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 68299.91639999999
Test mean error for best: 34.14996
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013796     
Correct output: -5.4090974816  | Program output: 38.013796     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013796     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013508      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013796     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013796     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction integer_yankdup} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_pop} {:instruction -7.788270215791826} {:instruction float_yankdup} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub} {:instruction float_sub} {:instruction float_yankdup})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush integer_flush 15 float_tan integer_yankdup 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer float_frominteger float_stackdepth float_sin integer_pop -7.788270215791826 float_yankdup float_stackdepth print_integer float_sub float_sub float_yankdup)
Errors: [23.8223 10 43.4229 9 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4806
Mean: 24.709612
Genome size: 100
Size: 101
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3179.4568515000005
Median total errors in population: 1245.48045
Error averages by case: (117.04545349999974 9.797 134.58731760000015 10.316 112.02299359999888 9.796 164.05823050000058 9.726 95.0291225999998 9.626 105.72043609999909 8.959 110.62095949999849 10.472 97.30956670000097 10.318 102.9243831000012 10.243 96.7836557000009 8.915 90.19896709999959 11.381 79.45718410000012 8.737 148.8933255000001 9.866 84.59289939999944 7.894 130.86682230000184 7.922 160.30303180000163 10.444 141.91846809999993 11.183 86.25686949999913 8.88 84.23590060000062 8.44 101.69062869999996 9.505 166.5864475000023 10.608 172.44621190000038 8.893 103.76364340000111 9.763 169.70483230000065 9.091 82.65350040000061 9.011)
Error minima by case: (1.1777 8 3.3957 6 24.801 7 26.0 8 8.6776 7 9.0981 7 0.1677 8 3.8156 7 2.7657 8 2.9535 5 1.678 5 0.1053 6 1.5205 5 0.457 6 2.0013 6 5.1286 7 23.0428 7 0.498 7 0.9936 6 1.1751 7 11.4596 7 3.0118 6 5.7071 5 49.0 6 0.2139 7)
Average genome size in population (length): 100.274
Average program size in population (points): 101.274
Average percent parens in population: 0.010
Minimum age in population: 104.7294797360594
Maximum age in population: 109.6658377469079
Average age in population: 107.5995026987939
Median age in population: 107.6124473225924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.406
Error (vector) diversity:			 0.417
Behavioral diversity:				 0.418
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 169154703
--- Timings ---
Current time: 1529615258633 milliseconds
Total Time:         371.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.4 seconds, 31.1%
Fitness Testing:    200.7 seconds, 54.1%
Report:              54.9 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 68296.91639999999
Test mean error for best: 34.14846
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013796     
Correct output: -5.4090974816  | Program output: 38.013796     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013796     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013508      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013796     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013796     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction float_max} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_dup})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_max float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc float_sin integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 float_max in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_dup)
Errors: [23.8223 10 43.4229 9 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4806
Mean: 24.709612
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3122.3930277999957
Median total errors in population: 1243.6932000000002
Error averages by case: (124.10199369999968 9.813 141.34809509999997 10.23 108.21004739999918 9.691 158.2657767000007 9.665 89.69413239999966 9.661 99.82886609999909 8.895 118.24981909999872 10.486 90.83246840000093 10.258 97.37732400000098 10.251 88.10078790000082 8.793 105.15561829999966 11.286 73.30520670000023 8.712 144.78780879999977 9.769 75.65433509999944 7.821 123.06800550000189 7.86 153.90600390000176 10.394 149.62596859999996 11.17 81.34854369999935 8.83 78.4136104000006 8.446 96.26834709999989 9.482 179.88507780000222 10.55 168.37330040000055 8.833 94.84563240000097 9.716 165.95737900000054 9.014 77.14187930000048 9.021)
Error minima by case: (2.8361 8 3.6043 8 8.801 7 6.4958 8 7.6776 8 13.916 7 0.1686 8 8.969 8 0.7658 8 2.0596 7 9.6645 8 0.1053 6 1.5163 8 0.506 6 10.9987 6 8.8714 8 6.0428 9 0.4979 7 0.0064 6 0.8279 7 20.4596 8 15.9882 6 9.2929 8 14.8846 7 0.2165 6)
Average genome size in population (length): 101.136
Average program size in population (points): 102.136
Average percent parens in population: 0.010
Minimum age in population: 105.7294797360594
Maximum age in population: 111.1732842283556
Average age in population: 108.9430908461795
Median age in population: 108.9979327866027
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.882
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.882
Total error diversity:				 0.386
Error (vector) diversity:			 0.403
Behavioral diversity:				 0.406
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 171683253
--- Timings ---
Current time: 1529615264256 milliseconds
Total Time:         376.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.8 seconds, 31.0%
Fitness Testing:    203.9 seconds, 54.2%
Report:              55.6 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 68299.91639999999
Test mean error for best: 34.14996
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013796     
Correct output: -5.4090974816  | Program output: 38.013796     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013796     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013508      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013796     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013796     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 9 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4806
Mean: 24.709612
Genome size: 104
Size: 105
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3182.640766299998
Median total errors in population: 1244.4788000000003
Error averages by case: (108.99796429999972 9.932 126.89011080000085 10.021 101.41861219999907 9.677 152.9605263000007 9.603 82.79711339999959 9.538 95.19152929999909 8.809 102.63440789999956 10.402 107.6679242000009 10.184 114.56925270000127 10.234 103.66166920000124 8.813 98.74706470000015 11.056 91.5920584000001 8.712 160.76800160000113 9.767 95.01055099999977 7.826 140.10780290000147 7.859 154.1695613000016 10.326 132.2322892 11.079 98.50992699999921 8.827 95.87613520000075 8.458 89.59439970000001 9.434 166.3044447000018 10.475 161.55775920000056 8.791 112.2180779000011 9.633 181.57826660000092 8.991 70.21331660000061 8.925)
Error minima by case: (1.1777 8 4.4104 7 26.214 7 26.0 8 7.6776 7 13.917 6 0.1708 9 2.8156 8 3.7509 8 1.9535 7 8.0 7 0.0931 6 1.5205 8 0.5203 6 8.0118 6 4.4817 7 25.9572 8 3.5021 8 0.0071 6 7.1721 7 13.0 8 37.998 6 4.7071 7 70.1147 7 0.2175 6)
Average genome size in population (length): 101.81
Average program size in population (points): 102.81
Average percent parens in population: 0.010
Minimum age in population: 107.9434294713415
Maximum age in population: 112.438580889633
Average age in population: 110.3497360189106
Median age in population: 110.373283385906
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.889
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.889
Total error diversity:				 0.406
Error (vector) diversity:			 0.429
Behavioral diversity:				 0.429
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 174228578
--- Timings ---
Current time: 1529615269528 milliseconds
Total Time:         381.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.2 seconds, 31.0%
Fitness Testing:    206.9 seconds, 54.2%
Report:              56.6 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 68297.9164
Test mean error for best: 34.14896
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013795     
Correct output: -5.4090974816  | Program output: 38.013795     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013795     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013795     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013795     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_mod} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger integer_shove integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_mod 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4805000000001
Mean: 24.70961
Genome size: 101
Size: 102
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3307.8257142999987
Median total errors in population: 1243.9156
Error averages by case: (115.83587889999978 10.135 132.3233629000014 9.873 102.47346049999919 9.789 155.9681365000007 9.678 86.18657769999993 9.559 94.87777039999906 8.896 108.41425670000068 10.428 111.26653280000092 10.224 120.34770660000164 10.265 108.43570490000158 8.941 110.44902660000115 10.883 97.75835030000017 8.765 166.3218670000007 9.858 97.50353489999982 7.876 146.29046820000138 7.891 153.45726280000179 10.411 141.66808840000016 11.096 104.57734349999929 8.876 101.82755830000063 8.474 91.01070500000033 9.497 180.1284166000018 10.513 164.59164290000103 8.848 117.97654870000108 9.695 187.01180620000102 9.099 72.52470700000055 9.029)
Error minima by case: (1.1777 8 4.0227 8 14.8009 7 40.6487 8 3.6776 8 13.5293 7 0.8292 8 0.1844 7 3.7651 8 1.9535 7 15.9492 8 0.1053 6 1.5206 8 0.4925 6 0.0118 5 20.8714 8 23.9433 9 0.4979 7 0.9934 6 9.8279 7 26.4596 8 34.9316 6 1.7071 7 54.1154 8 0.2175 7)
Average genome size in population (length): 102.872
Average program size in population (points): 103.872
Average percent parens in population: 0.010
Minimum age in population: 109.1636066863801
Maximum age in population: 113.5257389970829
Average age in population: 111.7478588663024
Median age in population: 111.8049109038643
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.868
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.868
Total error diversity:				 0.424
Error (vector) diversity:			 0.456
Behavioral diversity:				 0.462
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 176800503
--- Timings ---
Current time: 1529615274877 milliseconds
Total Time:         387.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.7 seconds, 30.9%
Fitness Testing:    210.0 seconds, 54.2%
Report:              57.6 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 68288.91659999998
Test mean error for best: 34.14446
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013506      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_inc integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_rot integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_dup_times float_dup_times integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4805000000001
Mean: 24.70961
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 2999.0086873
Median total errors in population: 1241.4798999999998
Error averages by case: (95.92518899999983 10.13 113.78496380000144 9.605 91.93052309999928 9.629 144.19774650000068 9.548 73.48546460000053 9.415 86.19901849999896 8.699 88.96950230000108 10.298 98.78394310000097 10.162 110.28116770000146 10.24 99.7742089000015 8.794 94.94393870000121 10.552 86.96261850000015 8.64 158.39972730000073 9.723 86.67632939999993 7.748 139.17546830000217 7.797 144.54071450000185 10.302 120.34199020000042 11.05 94.78227869999944 8.73 90.65735030000067 8.402 80.5065153000007 9.426 160.4753594000006 10.351 153.6654273000014 8.619 111.12697830000099 9.568 177.6331839000012 8.922 60.6190797000006 8.82)
Error minima by case: (1.892 8 4.7536 6 27.9462 6 26.0 7 9.6776 6 15.3953 6 0.1705 8 0.1844 6 5.7656 8 1.9535 5 8.0 5 0.1043 6 6.5205 6 0.3717 6 11.9882 5 6.1286 6 41.9434 7 1.5018 7 1.0084 7 1.1137 7 13.0 6 37.9318 5 1.7071 6 27.1154 7 0.2155 7)
Average genome size in population (length): 104.265
Average program size in population (points): 105.265
Average percent parens in population: 0.010
Minimum age in population: 110.8233687216879
Maximum age in population: 115.2025953918011
Average age in population: 112.9795361578391
Median age in population: 113.0281985292177
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 49
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 49
Syntactic diversity (% unique Push programs):	 0.845
Total error diversity:				 0.344
Error (vector) diversity:			 0.383
Behavioral diversity:				 0.389
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 179407203
--- Timings ---
Current time: 1529615280180 milliseconds
Total Time:         392.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.1 seconds, 30.8%
Fitness Testing:    213.1 seconds, 54.3%
Report:              58.3 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 68297.9164
Test mean error for best: 34.14896
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013795     
Correct output: -5.4090974816  | Program output: 38.013795     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013795     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013795     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013795     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_min} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 43.22634146308267} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_min float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_dup_times float_mult integer_dup_times float_dup_times float_mult integer_fromfloat 15 float_tan float_inc 43.22634146308267 float_rot float_mult float_max integer_dup_times float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 10 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1235.4805000000001
Mean: 24.70961
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3428.340041100001
Median total errors in population: 1241.98035
Error averages by case: (121.92489999999978 10.23 137.15623840000123 9.709 104.16713159999934 9.712 157.85414650000078 9.615 88.2697622999998 9.567 96.52361989999913 8.809 114.27674890000158 10.346 120.55820490000089 10.191 127.48653070000121 10.261 112.7412184000013 8.837 119.85583260000139 10.613 104.93557450000014 8.75 171.68349050000145 9.769 107.5754626 7.83 149.79900380000095 7.859 155.8509469000015 10.361 145.49761809999956 11.075 111.82894639999921 8.825 108.78034610000067 8.513 91.85676019999991 9.514 186.86746880000172 10.416 166.1766654000006 8.792 122.47185330000094 9.619 193.49352150000144 9.0 73.53104880000042 8.964)
Error minima by case: (0.4849 8 5.4593 7 27.263 7 8.7289 8 8.6113 7 14.9659 6 0.1705 8 2.8156 7 0.7658 8 5.9535 7 8.0 7 0.1061 6 1.5205 6 0.506 6 5.9882 6 2.8714 7 12.9572 8 0.4972 7 0.0064 6 1.1721 7 1.4596 8 3.0118 6 4.7071 7 49.0 6 0.2165 7)
Average genome size in population (length): 104.595
Average program size in population (points): 105.595
Average percent parens in population: 0.009
Minimum age in population: 112.0843794841604
Maximum age in population: 116.5754522402542
Average age in population: 114.3440829020046
Median age in population: 114.4019401370188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.882
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.882
Total error diversity:				 0.356
Error (vector) diversity:			 0.387
Behavioral diversity:				 0.395
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 182022114
--- Timings ---
Current time: 1529615285867 milliseconds
Total Time:         398.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.6 seconds, 30.8%
Fitness Testing:    216.4 seconds, 54.3%
Report:              59.1 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 68328.917
Test mean error for best: 34.16446
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013799     
Correct output: -5.4090974816  | Program output: 38.013799     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013799     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013520      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013799     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013799     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_dup_times} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_dup_times 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4806
Mean: 24.689611
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3687.9590731000008
Median total errors in population: 1241.4806
Error averages by case: (125.29050469999972 10.255 141.98864630000148 9.788 114.92228939999897 9.813 166.75955760000087 9.665 98.77493209999939 9.538 108.9601183999991 8.892 117.95704110000166 10.446 133.62063140000106 10.219 138.87146100000155 10.336 129.82100170000163 8.915 124.55346760000138 10.534 116.7314298000001 8.783 184.31885130000222 9.855 120.99354380000035 7.898 166.40463930000038 7.941 167.17330680000174 10.41 149.8030010999995 11.111 123.41374669999908 8.887 120.5025468000007 8.551 103.92884429999981 9.505 189.2812754000018 10.408 176.46209590000024 8.777 139.46626150000048 9.685 204.47670790000157 9.065 85.25617120000051 8.95)
Error minima by case: (3.8223 9 6.4221 7 28.2258 7 17.7073 7 9.6776 6 15.9287 7 0.1292 8 0.8156 7 0.2342 8 3.9535 7 17.349 7 0.1031 6 6.5208 6 0.506 6 6.988 6 85.899 7 6.0428 7 0.4977 7 0.9935 6 0.1721 7 20.4596 7 32.0238 6 2.7071 6 75.1151 6 0.2155 7)
Average genome size in population (length): 105.392
Average program size in population (points): 106.392
Average percent parens in population: 0.009
Minimum age in population: 113.0843794841604
Maximum age in population: 117.8655962357382
Average age in population: 115.5896136593126
Median age in population: 115.5906793010023
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.9
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.9
Total error diversity:				 0.367
Error (vector) diversity:			 0.396
Behavioral diversity:				 0.405
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 184656939
--- Timings ---
Current time: 1529615291216 milliseconds
Total Time:         403.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.1 seconds, 30.7%
Fitness Testing:    219.5 seconds, 54.4%
Report:              59.9 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 68328.917
Test mean error for best: 34.16446
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013799     
Correct output: -5.4090974816  | Program output: 38.013799     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013799     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013520      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013799     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013799     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_dup_times} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_dup_times 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4806
Mean: 24.689611
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3276.533081699999
Median total errors in population: 1243.5868500000001
Error averages by case: (109.56717289999989 10.146 126.43421070000176 9.932 104.88482279999899 9.741 156.82951620000057 9.643 86.45255710000016 9.494 98.50610109999907 8.842 102.26709550000182 10.524 109.76571060000103 10.209 119.24949260000156 10.278 106.06592140000146 8.878 110.56294300000157 10.501 96.36197090000009 8.785 162.80689970000122 9.8 96.5183888 7.845 145.38343720000142 7.903 157.51995610000208 10.368 135.3208099000004 11.08 103.34019749999919 8.847 100.23551430000069 8.48 93.30414540000018 9.506 176.1700016000016 10.295 164.23693060000093 8.743 117.147700700001 9.67 185.235434800001 9.046 74.84215030000058 8.968)
Error minima by case: (0.1774 8 3.3953 6 4.801 7 26.0 8 8.6776 7 10.0981 6 0.1705 8 8.969 6 0.7658 8 2.9535 7 8.0 5 0.1061 6 1.5205 8 0.5062 6 10.0118 6 12.0 7 28.9434 8 0.4977 7 0.9936 6 0.1721 8 13.0 7 36.9981 6 9.2929 7 70.1147 7 0.2137 7)
Average genome size in population (length): 106.05
Average program size in population (points): 107.05
Average percent parens in population: 0.009
Minimum age in population: 114.0843794841604
Maximum age in population: 118.9186998749165
Average age in population: 117.0703319871091
Median age in population: 117.1276631510502
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.931
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.931
Total error diversity:				 0.392
Error (vector) diversity:			 0.451
Behavioral diversity:				 0.46
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 187308239
--- Timings ---
Current time: 1529615296781 milliseconds
Total Time:         409.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.4 seconds, 30.6%
Fitness Testing:    223.0 seconds, 54.5%
Report:              60.7 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 68328.917
Test mean error for best: 34.16446
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013799     
Correct output: -5.4090974816  | Program output: 38.013799     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013799     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013520      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013799     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013799     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_dup_times} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_dup_times 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 10 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 10 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4806
Mean: 24.689611
Genome size: 110
Size: 111
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3510.8269197999994
Median total errors in population: 1243.5868
Error averages by case: (119.8873285999998 10.064 136.5465623000015 10.058 107.2196027999988 9.793 160.37982740000075 9.677 91.04580499999912 9.57 101.90804309999905 8.862 112.65578200000189 10.55 125.017107700001 10.203 132.16776970000154 10.27 119.31833390000166 8.909 119.68925460000122 10.448 109.79175590000013 8.739 178.7174841000022 9.803 111.6751762000004 7.844 155.29723210000034 7.9 159.29644060000186 10.364 145.16611849999947 11.057 116.72432259999923 8.873 113.67120480000067 8.464 97.80265419999958 9.492 183.73269320000205 10.252 169.23835859999994 8.826 127.64672820000106 9.658 199.10221090000186 9.046 79.4341228000005 8.973)
Error minima by case: (3.8223 8 4.6047 8 7.199 7 42.7151 8 10.6776 7 1.9019 7 0.1705 8 8.969 7 0.7658 8 2.9535 7 1.3222 8 0.1061 6 5.5211 8 0.506 6 8.9882 6 44.8714 8 6.0428 9 0.4979 7 0.9936 6 6.1721 7 20.4596 7 36.998 6 4.7371 7 74.1154 6 0.2175 7)
Average genome size in population (length): 106.885
Average program size in population (points): 107.885
Average percent parens in population: 0.009
Minimum age in population: 116.2391768714632
Maximum age in population: 120.3450330634247
Average age in population: 118.5335684121568
Median age in population: 118.5622864141792
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.421
Error (vector) diversity:			 0.476
Behavioral diversity:				 0.482
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 189980439
--- Timings ---
Current time: 1529615302110 milliseconds
Total Time:         414.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.8 seconds, 30.6%
Fitness Testing:    226.1 seconds, 54.5%
Report:              61.5 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 68291.91659999998
Test mean error for best: 34.14596
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013506      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3346.9907769
Median total errors in population: 1242.8175500000002
Error averages by case: (110.4003343999998 10.046 127.98467700000134 10.195 98.50746819999928 9.822 151.97783490000066 9.714 82.98683229999992 9.621 92.84746979999899 8.914 103.57218780000146 10.662 118.27033380000105 10.241 126.4743948000014 10.304 118.90140970000152 8.921 111.84229900000099 10.384 103.52132010000015 8.717 172.74974510000126 9.825 106.42687400000014 7.852 155.58386130000076 7.93 151.57233900000168 10.407 137.8477132000001 11.115 110.3387715999991 8.873 107.21182460000078 8.463 88.31286480000016 9.591 178.92012050000116 10.193 162.4496071000007 8.861 128.26668470000104 9.68 192.55342910000124 9.026 69.11038010000064 9.003)
Error minima by case: (5.1777 8 7.4229 8 1.199 7 6.4958 8 7.6776 8 11.0981 7 0.1695 7 8.969 8 0.7658 8 5.9535 7 8.678 8 0.1031 6 8.5211 9 0.5223 6 11.9872 6 59.8714 8 27.9434 9 3.5021 7 0.0064 7 2.9012 7 30.5266 8 34.998 6 10.8605 7 77.1154 6 0.2137 7)
Average genome size in population (length): 107.33
Average program size in population (points): 108.33
Average percent parens in population: 0.009
Minimum age in population: 117.3853150115804
Maximum age in population: 122.1442362820531
Average age in population: 119.873391234485
Median age in population: 119.9282182668683
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.888
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.888
Total error diversity:				 0.414
Error (vector) diversity:			 0.463
Behavioral diversity:				 0.468
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 192663789
--- Timings ---
Current time: 1529615307645 milliseconds
Total Time:         420.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.2 seconds, 30.5%
Fitness Testing:    229.5 seconds, 54.6%
Report:              62.3 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 68291.91659999998
Test mean error for best: 34.14596
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013506      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3606.665692200001
Median total errors in population: 1242.7194
Error averages by case: (142.53825199999991 10.207 158.4051383000016 10.421 114.87862199999891 9.938 167.8232480000007 9.804 99.20258489999944 9.856 108.30533259999908 9.092 135.1927899000017 10.813 115.47894710000105 10.29 121.80918640000147 10.403 110.28703980000148 8.943 143.49412250000046 10.535 99.11446490000012 8.794 167.94015120000134 9.873 104.59782160000019 7.981 148.97881790000113 7.97 166.74836960000178 10.581 167.52613239999891 11.224 105.92465159999924 8.96 104.03880670000079 8.556 104.07776849999995 9.678 206.27497200000212 10.314 176.7514997000005 9.07 121.916304100001 9.713 188.3569914000014 9.102 85.70567710000061 9.18)
Error minima by case: (1.1777 8 5.3589 7 24.801 7 17.7151 8 9.6776 7 14.8656 7 0.1705 8 0.8156 6 5.7648 9 5.9535 6 8.0 7 0.1043 6 1.5206 6 0.457 6 2.9882 6 8.8714 7 35.9434 7 0.4979 7 0.0064 6 0.1721 7 13.0 8 32.002 6 2.7071 6 42.1154 7 0.2137 6)
Average genome size in population (length): 108.004
Average program size in population (points): 109.004
Average percent parens in population: 0.009
Minimum age in population: 118.8222981447238
Maximum age in population: 123.1439713522607
Average age in population: 121.2742049339236
Median age in population: 121.3357813021468
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.42
Error (vector) diversity:			 0.469
Behavioral diversity:				 0.475
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 195363939
--- Timings ---
Current time: 1529615313038 milliseconds
Total Time:         425.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.6 seconds, 30.5%
Fitness Testing:    232.7 seconds, 54.7%
Report:              63.1 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 68291.91659999998
Test mean error for best: 34.14596
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013506      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3274.6318202999987
Median total errors in population: 1243.4787000000001
Error averages by case: (107.60288089999979 10.113 123.43861990000134 10.172 96.72880419999939 9.764 150.10777320000076 9.678 80.40747509999997 9.553 89.75103669999912 8.889 99.36627230000119 10.561 116.4955625000009 10.21 123.85896600000123 10.285 114.78366680000124 8.889 107.72680710000103 10.286 101.13936900000012 8.816 170.14096230000123 9.848 104.42455590000003 7.798 151.9910649000005 7.936 149.77212690000147 10.397 135.2176680000002 11.049 108.29519339999928 8.861 104.58104770000052 8.481 85.53180230000015 9.553 174.7972835000011 10.033 158.82086020000062 8.801 124.06296270000088 9.666 190.3876000000012 9.076 67.48545880000061 9.001)
Error minima by case: (1.8223 8 4.4094 8 15.9327 7 17.7151 8 8.6776 8 3.6356 7 0.1705 8 8.969 7 4.7658 8 4.9535 7 6.0555 8 0.1043 6 5.5205 9 0.5203 6 0.7495 6 20.1344 9 28.9434 8 2.4979 7 0.9936 6 10.7616 7 20.5266 8 32.002 6 10.8605 7 53.3777 7 0.2137 7)
Average genome size in population (length): 108.577
Average program size in population (points): 109.577
Average percent parens in population: 0.009
Minimum age in population: 120.4335388291317
Maximum age in population: 124.5392587529934
Average age in population: 122.6195696584174
Median age in population: 122.6521711017743
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.891
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.414
Error (vector) diversity:			 0.468
Behavioral diversity:				 0.475
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 198078464
--- Timings ---
Current time: 1529615318969 milliseconds
Total Time:         431.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.0 seconds, 30.4%
Fitness Testing:    236.2 seconds, 54.8%
Report:              63.9 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 68290.91609999997
Test mean error for best: 34.14546
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_264} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_264 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_inc integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_rot integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3239.2765810999995
Median total errors in population: 1243.48025
Error averages by case: (110.64233389999984 10.212 125.13448770000154 10.241 102.39870109999895 9.761 157.0052373000008 9.688 89.17419519999957 9.531 96.85124309999911 8.899 101.98889250000178 10.549 106.53167400000089 10.224 115.1198546000014 10.257 103.60655470000155 8.843 111.61224530000138 10.227 92.10092500000016 8.746 162.0983812000011 9.81 93.20641590000001 7.818 141.02315280000147 7.888 154.97604580000157 10.384 135.2629118000002 11.11 99.2225500999994 8.824 95.81209600000058 8.48 93.53005399999988 9.579 176.41243910000125 9.996 166.9016807000003 8.8 112.77128180000095 9.662 181.79992980000108 9.024 76.48729770000052 9.053)
Error minima by case: (0.1771 8 2.3933 7 12.6376 7 26.0 8 11.6112 7 8.8999 6 0.1705 8 8.969 6 4.7638 8 4.9535 6 3.32 7 0.1054 6 1.5221 6 0.506 6 2.0013 6 12.0 7 31.877 8 0.4978 7 0.9929 7 10.7618 8 13.0 7 36.9316 6 10.8605 6 49.0 7 0.2165 6)
Average genome size in population (length): 109.738
Average program size in population (points): 110.738
Average percent parens in population: 0.009
Minimum age in population: 121.7443569192627
Maximum age in population: 125.6687645013969
Average age in population: 123.8902863351874
Median age in population: 123.9462114439184
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.894
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.894
Total error diversity:				 0.402
Error (vector) diversity:			 0.446
Behavioral diversity:				 0.46
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 200821964
--- Timings ---
Current time: 1529615324742 milliseconds
Total Time:         437.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.4 seconds, 30.3%
Fitness Testing:    239.6 seconds, 54.8%
Report:              64.9 seconds, 14.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 68290.91609999997
Test mean error for best: 34.14546
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_inc integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_rot integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin integer_min integer_mod float_sin float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3209.407065299998
Median total errors in population: 1243.4508
Error averages by case: (107.7607092999998 10.195 124.64136830000152 10.183 106.38785749999896 9.739 158.20900130000064 9.632 89.30616089999985 9.44 98.94160969999922 8.897 100.88439740000128 10.499 102.8066414000008 10.165 111.56364560000148 10.225 101.88997980000134 8.824 108.24328940000127 10.204 88.36120060000017 8.743 159.64527850000079 9.806 90.01194839999992 7.799 139.24756980000137 7.876 157.92941150000155 10.357 134.25410350000024 11.06 95.20823079999943 8.796 92.00804690000048 8.469 94.51623560000002 9.529 176.5663074000013 9.898 167.55841160000065 8.769 111.38141560000093 9.582 179.71105320000092 8.996 75.68219130000044 9.008)
Error minima by case: (3.8223 8 5.4229 7 27.2266 7 26.0 8 8.6776 7 12.3146 6 0.1705 8 0.1844 6 5.7629 8 2.9535 6 8.0 7 0.1061 6 7.5211 6 1.506 6 3.9723 6 2.8714 7 28.9442 8 0.4979 7 0.9936 6 2.1721 7 13.0 8 37.998 6 0.5431 6 49.0 7 0.217 6)
Average genome size in population (length): 110.098
Average program size in population (points): 111.098
Average percent parens in population: 0.009
Minimum age in population: 122.7443569192627
Maximum age in population: 127.3451586983483
Average age in population: 125.2072843913187
Median age in population: 125.2147384850086
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.898
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.388
Error (vector) diversity:			 0.429
Behavioral diversity:				 0.447
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 203574489
--- Timings ---
Current time: 1529615330572 milliseconds
Total Time:         442.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       133.8 seconds, 30.2%
Fitness Testing:    242.9 seconds, 54.9%
Report:              65.9 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 68290.91609999999
Test mean error for best: 34.14546
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013442      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_sub} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_sub integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3563.752607400001
Median total errors in population: 1242.9156
Error averages by case: (117.74453899999978 10.237 135.3692526000015 10.208 113.91548889999906 9.781 166.14140990000067 9.629 97.52336459999981 9.461 107.22434049999903 8.947 111.42273700000155 10.588 123.981062000001 10.171 133.3700177000015 10.294 121.3871374000014 8.82 120.21412810000142 10.27 110.89987790000012 8.731 179.34566620000138 9.788 112.48558590000003 7.834 158.57137520000094 7.9 165.7185094000018 10.382 143.95287859999954 11.067 117.82691979999916 8.874 114.43551810000075 8.517 102.33524419999995 9.546 183.79412140000107 9.973 175.92952080000072 8.82 130.42503800000097 9.614 199.3113161000013 9.003 82.93255810000059 9.04)
Error minima by case: (3.8223 8 2.2705 7 4.298 7 17.7151 8 5.6113 7 7.2361 7 0.8295 8 1.8156 6 4.7658 7 3.9535 6 5.5793 7 0.1061 6 7.5211 6 1.5203 6 11.0118 6 1.8597 7 25.8771 8 0.4979 7 0.0064 7 8.8279 7 13.0 8 32.002 6 3.7071 6 49.0 6 0.217 6)
Average genome size in population (length): 109.806
Average program size in population (points): 110.806
Average percent parens in population: 0.009
Minimum age in population: 123.7443569192627
Maximum age in population: 128.7716392590804
Average age in population: 126.506070721784
Median age in population: 126.5471262628179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.899
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.899
Total error diversity:				 0.395
Error (vector) diversity:			 0.438
Behavioral diversity:				 0.453
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 206319639
--- Timings ---
Current time: 1529615336375 milliseconds
Total Time:         448.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.2 seconds, 30.1%
Fitness Testing:    246.2 seconds, 54.9%
Report:              66.9 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 68291.91659999998
Test mean error for best: 34.14596
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013506      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_mod integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3396.2164566
Median total errors in population: 1242.4806
Error averages by case: (115.10466519999976 10.144 131.2059947000016 10.25 110.99028629999869 9.738 163.69925140000095 9.647 94.9455561999996 9.431 103.713878899999 8.879 107.10217880000157 10.613 112.76026170000104 10.258 121.91632180000157 10.272 112.83488330000156 8.81 115.09106550000153 10.22 99.27201440000013 8.739 168.50135460000112 9.794 99.82659789999985 7.754 149.45675270000135 7.871 161.9069778000019 10.38 140.65247740000038 11.103 106.25524829999912 8.798 102.95050280000069 8.511 98.89521089999975 9.522 179.85549920000102 9.956 171.49941720000055 8.768 120.43094450000112 9.638 188.8897355000011 8.977 81.37937960000059 9.007)
Error minima by case: (1.1787 8 2.8838 8 18.9198 7 43.7131 8 8.6776 8 6.6228 7 0.8295 8 1.8156 8 4.7658 8 2.9535 7 9.0426 8 0.0944 7 1.5201 9 1.1641 6 11.0709 6 77.5922 9 28.9434 9 2.502 7 0.9936 7 7.8279 7 33.5246 8 1.0118 6 3.7071 7 70.1144 6 0.2175 6)
Average genome size in population (length): 110.458
Average program size in population (points): 111.458
Average percent parens in population: 0.009
Minimum age in population: 125.2116632047646
Maximum age in population: 130.0785066982994
Average age in population: 127.8564378746663
Median age in population: 127.8956978747454
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.376
Error (vector) diversity:			 0.428
Behavioral diversity:				 0.446
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 209081089
--- Timings ---
Current time: 1529615341930 milliseconds
Total Time:         454.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.8 seconds, 30.1%
Fitness Testing:    249.5 seconds, 54.9%
Report:              68.0 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 68290.91609999997
Test mean error for best: 34.14546
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_264} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_264 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_inc integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_rot integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove integer_mult integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 111
Size: 112
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3362.6115228999997
Median total errors in population: 1243.4782500000001
Error averages by case: (113.91532919999975 10.056 128.23801480000165 10.308 102.42002519999883 9.835 153.81383190000065 9.673 84.55057729999972 9.519 96.23799119999921 8.948 104.83979290000175 10.797 116.04746480000095 10.224 125.36639190000142 10.267 116.98903290000156 8.872 112.25437020000126 10.305 102.4453668 8.758 173.80487640000175 9.806 104.19035309999998 7.853 154.8959281000011 7.906 154.5717172000018 10.429 138.20273720000017 11.133 109.15408359999925 8.858 105.90889130000063 8.458 91.85432249999998 9.589 177.05045740000173 9.949 164.38099210000033 8.882 126.89634860000102 9.669 193.52069880000127 9.017 72.8469275000006 9.104)
Error minima by case: (3.8223 8 5.4259 7 5.8281 7 24.393 7 3.6445 7 6.469 7 0.1705 8 0.8156 6 0.7658 8 5.9535 6 4.0491 7 0.1045 6 11.5205 6 0.5203 6 10.0118 6 12.0 7 28.6213 8 0.4979 7 0.0066 6 1.8279 7 13.0 8 18.6759 6 2.7071 6 49.0 6 0.205 6)
Average genome size in population (length): 110.614
Average program size in population (points): 111.614
Average percent parens in population: 0.009
Minimum age in population: 126.4081396257869
Maximum age in population: 131.4281568696482
Average age in population: 129.2534073955121
Median age in population: 129.3012610204906
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.887
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.887
Total error diversity:				 0.417
Error (vector) diversity:			 0.473
Behavioral diversity:				 0.491
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 211846439
--- Timings ---
Current time: 1529615347682 milliseconds
Total Time:         460.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.2 seconds, 30.0%
Fitness Testing:    252.9 seconds, 55.0%
Report:              68.8 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 68290.91649999999
Test mean error for best: 34.14546
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013506      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_sin} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction float_div} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_sin integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult float_div float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 10 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 112
Size: 113
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3452.7646212000004
Median total errors in population: 1242.6932000000002
Error averages by case: (117.39965809999983 9.916 133.45526680000177 10.299 108.53699179999923 9.839 162.06675650000088 9.748 93.67008159999972 9.402 103.38652239999904 9.001 109.42051990000168 10.895 117.78330090000097 10.233 126.18131060000137 10.302 115.87579600000139 8.883 117.27466370000094 10.379 103.43002200000014 8.785 174.46015940000134 9.826 105.71214730000004 7.88 153.501051900001 7.93 160.89471100000188 10.436 141.44902650000014 11.136 110.28625449999932 8.916 107.07299050000067 8.52 99.30952489999987 9.605 180.59419970000127 10.015 171.69936770000052 8.935 125.37803590000104 9.674 194.22946560000116 9.062 81.01179600000049 9.068)
Error minima by case: (0.1777 8 5.4229 7 27.2266 7 26.0 8 8.6756 7 14.9295 6 0.8295 8 8.969 7 4.2342 8 5.9535 7 8.0 7 0.1043 6 4.5211 6 0.5209 6 2.0118 6 3.8383 7 28.9414 8 0.4978 7 0.0064 6 9.8279 7 13.0 8 32.3177 6 10.8605 7 49.0 7 0.2167 6)
Average genome size in population (length): 110.712
Average program size in population (points): 111.712
Average percent parens in population: 0.009
Minimum age in population: 128.1508765720332
Maximum age in population: 132.7854857304968
Average age in population: 130.6276091897445
Median age in population: 130.6572965057435
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.886
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.886
Total error diversity:				 0.417
Error (vector) diversity:			 0.475
Behavioral diversity:				 0.493
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 214614264
--- Timings ---
Current time: 1529615353035 milliseconds
Total Time:         465.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       139.6 seconds, 30.0%
Fitness Testing:    256.1 seconds, 55.0%
Report:              69.6 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 68290.91609999997
Test mean error for best: 34.14546
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013801     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_rot} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_inc integer_mod integer_inc integer_mod integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc float_frominteger integer_rot integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_div in2 integer_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 9 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1234.4805000000001
Mean: 24.68961
Genome size: 108
Size: 109
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3700.2685468999994
Median total errors in population: 1243.4781000000003
Error averages by case: (124.25259059999973 9.854 139.4737776000016 10.339 113.02032559999887 9.851 165.39215750000062 9.762 97.42233659999961 9.394 106.74849659999921 8.985 116.4399322000019 11.003 133.59782830000066 10.256 142.950313400002 10.283 132.43806290000182 8.937 125.2503290000013 10.468 120.46019130000008 8.748 188.58037500000208 9.853 121.50671630000046 7.872 168.83356460000024 7.969 165.59819180000179 10.433 148.7167497999994 11.129 127.18949629999918 8.891 123.98834820000064 8.487 102.1733682999999 9.627 188.5354037000016 10.073 175.3366582000003 8.852 141.76122239999998 9.719 207.85706330000187 9.035 83.87804740000055 9.047)
Error minima by case: (1.8228 8 6.3076 8 27.2266 7 37.4942 8 8.6113 7 15.9295 6 1.1705 8 8.969 8 4.7638 8 4.9535 7 17.349 8 0.1061 6 8.5063 8 0.5203 6 5.9882 6 26.8714 8 28.8771 7 0.4979 7 0.0064 6 2.8279 7 27.3057 8 31.7771 6 5.7202 7 77.1005 7 0.2167 7)
Average genome size in population (length): 111.206
Average program size in population (points): 112.206
Average percent parens in population: 0.009
Minimum age in population: 129.2697102537064
Maximum age in population: 133.861531765304
Average age in population: 131.9228506899252
Median age in population: 131.9336031301829
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.901
Total error diversity:				 0.438
Error (vector) diversity:			 0.492
Behavioral diversity:				 0.519
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 217394464
--- Timings ---
Current time: 1529615358886 milliseconds
Total Time:         471.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.2 seconds, 29.9%
Fitness Testing:    259.6 seconds, 55.1%
Report:              70.4 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 68286.91559999998
Test mean error for best: 34.14346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013570      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 in2 in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4806
Mean: 24.669613
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3640.906489199997
Median total errors in population: 1241.6001
Error averages by case: (119.04160569999989 9.807 134.9682502000015 10.276 110.50213419999922 9.778 164.22045410000072 9.69 95.05856879999953 9.291 103.98076909999905 8.899 110.11871880000155 11.025 133.24966450000085 10.238 142.9256049000015 10.342 130.72877370000154 8.904 117.63135600000084 10.377 120.7264480000001 8.732 188.51334380000208 9.836 120.62716450000013 7.89 167.90457650000073 7.933 161.87539800000172 10.392 144.5925757999999 11.085 127.58790569999927 8.894 124.27575100000065 8.503 98.9346476999999 9.57 184.62265100000144 10.025 172.2118609000003 8.79 140.1782698000005 9.684 208.00730200000146 9.024 80.48369450000048 8.954)
Error minima by case: (3.1777 7 4.7536 7 3.199 7 10.2711 8 8.6776 7 9.0981 7 0.1705 9 1.8156 6 0.2342 9 5.9535 6 6.678 7 0.1031 6 1.4955 7 0.3717 6 3.0118 6 1.8555 7 6.0428 8 0.4979 7 0.0071 6 10.7618 7 13.0 7 15.9882 6 0.7202 7 35.0988 6 0.2175 7)
Average genome size in population (length): 111.117
Average program size in population (points): 112.117
Average percent parens in population: 0.009
Minimum age in population: 130.2697102537064
Maximum age in population: 135.0904374796908
Average age in population: 133.2423548544216
Median age in population: 133.3181841245669
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.893
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.893
Total error diversity:				 0.412
Error (vector) diversity:			 0.479
Behavioral diversity:				 0.502
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 220172389
--- Timings ---
Current time: 1529615364153 milliseconds
Total Time:         476.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       142.5 seconds, 29.9%
Fitness Testing:    262.8 seconds, 55.1%
Report:              71.2 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 68286.91559999998
Test mean error for best: 34.14346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013570      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction in2} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 in2 in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4806
Mean: 24.669613
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3625.610450199998
Median total errors in population: 1243.4797999999998
Error averages by case: (117.86068579999974 9.807 134.60622490000176 10.308 113.13054739999876 9.856 163.70880770000073 9.768 95.11436379999937 9.293 106.42394689999908 9.006 110.61369230000194 11.017 131.3015184000009 10.219 140.51966140000172 10.317 127.8757588000018 8.917 119.03751070000104 10.424 118.34940950000012 8.779 186.08683840000228 9.854 119.55611590000048 7.895 165.5022718000001 7.963 165.13929540000186 10.428 141.71326340000005 11.06 125.09123859999923 8.919 122.04742020000063 8.522 102.02914389999958 9.592 181.3758928000018 10.054 172.81904110000005 8.883 137.5704423000002 9.679 205.89717910000192 9.062 83.63117970000049 8.987)
Error minima by case: (0.1787 8 5.8953 7 2.2026 7 7.2711 7 7.6776 7 10.0945 7 0.1705 9 8.969 7 4.7658 8 2.9535 7 7.6747 7 0.0947 6 0.5196 7 0.506 6 5.9882 6 12.0 7 3.0428 8 0.4979 7 0.0064 6 7.1721 7 13.0 8 12.9882 6 9.2929 6 49.0 7 0.2175 7)
Average genome size in population (length): 111.121
Average program size in population (points): 112.121
Average percent parens in population: 0.009
Minimum age in population: 131.2697102537064
Maximum age in population: 136.5783646993247
Average age in population: 134.581217740735
Median age in population: 134.601029697282
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.915
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.407
Error (vector) diversity:			 0.465
Behavioral diversity:				 0.492
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 222950464
--- Timings ---
Current time: 1529615369526 milliseconds
Total Time:         482.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.8 seconds, 29.8%
Fitness Testing:    266.1 seconds, 55.2%
Report:              72.0 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 68286.91559999998
Test mean error for best: 34.14346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013570      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction float_frominteger} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction float_shove} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 float_frominteger in1 integer_yankdup integer_yankdup float_sin float_shove integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_add integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_max integer_flush 15 float_tan float_inc 44.559504711189845 integer_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4806
Mean: 24.669613
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3569.4154771999997
Median total errors in population: 1243.47455
Error averages by case: (120.69274639999968 9.767 135.99246040000182 10.244 108.90035469999897 9.8 162.2983187000007 9.711 92.52615820000003 9.263 102.38788199999905 8.956 110.26934910000196 10.985 127.35884910000101 10.152 135.32131800000153 10.277 125.26558830000167 8.907 121.441858100001 10.376 112.95089650000003 8.731 180.31861540000142 9.826 115.01712380000015 7.873 162.33108370000062 7.953 161.21987460000173 10.348 148.95867809999964 11.088 119.9375617999991 8.892 116.34519910000068 8.482 98.59914270000033 9.557 185.2112307000012 10.014 171.99865080000058 8.792 134.33178650000096 9.61 200.2758107000013 9.041 81.85093980000057 8.969)
Error minima by case: (3.8223 8 5.4229 7 25.3824 7 26.0 8 8.6776 7 14.9295 6 0.1705 8 7.8289 6 0.7656 8 5.9535 6 8.0 7 0.1053 6 5.5213 6 0.506 6 3.9882 6 10.1286 7 28.9434 8 0.4959 7 0.0081 7 1.8279 7 13.0 7 36.998 6 10.8605 6 23.1154 7 0.2168 6)
Average genome size in population (length): 110.911
Average program size in population (points): 111.911
Average percent parens in population: 0.009
Minimum age in population: 133.2050334198591
Maximum age in population: 137.869280226521
Average age in population: 135.9528301813464
Median age in population: 135.9652550149175
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.911
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.911
Total error diversity:				 0.428
Error (vector) diversity:			 0.486
Behavioral diversity:				 0.51
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 225723239
--- Timings ---
Current time: 1529615375152 milliseconds
Total Time:         487.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       145.3 seconds, 29.8%
Fitness Testing:    269.5 seconds, 55.3%
Report:              72.7 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 68286.91559999998
Test mean error for best: 34.14346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013570      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction float_frominteger} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction float_shove} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_add} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_sub})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 float_frominteger in1 integer_yankdup integer_yankdup float_sin float_shove integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_add integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_max integer_flush 15 float_tan float_inc 44.559504711189845 integer_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_sub)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4806
Mean: 24.669613
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3713.6046428999975
Median total errors in population: 1243.47965
Error averages by case: (127.71405939999971 9.764 143.91774220000164 10.257 116.037373699999 9.806 168.36242700000065 9.71 99.91856829999982 9.261 109.29526839999913 8.979 120.48125130000167 11.007 133.76036260000072 10.2 140.91642880000148 10.338 128.5350628000015 8.923 126.21377750000094 10.358 118.74636180000009 8.776 185.32906870000144 9.847 122.08850790000021 7.913 164.75540760000052 7.986 166.40756920000163 10.356 153.1109696999992 11.084 125.40455329999926 8.934 122.48841110000049 8.522 104.58036500000007 9.57 191.24766380000165 10.003 177.03967300000036 8.811 137.3071015000006 9.703 205.4232475000012 9.058 86.39642080000054 8.961)
Error minima by case: (3.8223 8 0.3953 8 8.199 7 17.7159 8 8.6776 7 1.9019 7 1.1705 9 8.969 7 0.7658 8 2.9535 7 4.322 8 0.1061 6 8.5211 8 0.506 6 6.9883 6 13.9122 8 28.9433 8 0.4979 7 0.0064 6 0.1711 7 20.5274 8 32.0012 6 1.7211 8 19.3312 7 0.2175 7)
Average genome size in population (length): 110.849
Average program size in population (points): 111.849
Average percent parens in population: 0.009
Minimum age in population: 134.6583505179072
Maximum age in population: 139.2137316760715
Average age in population: 137.2801807001168
Median age in population: 137.2961235742203
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.901
Total error diversity:				 0.444
Error (vector) diversity:			 0.489
Behavioral diversity:				 0.517
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 228494514
--- Timings ---
Current time: 1529615380684 milliseconds
Total Time:         493.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.7 seconds, 29.7%
Fitness Testing:    272.9 seconds, 55.3%
Report:              73.5 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 68286.91559999998
Test mean error for best: 34.14346
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013794     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013796     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013794     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013570      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 79.013794     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013801     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_sub} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_dup} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_inc} {:instruction float_mult} {:instruction float_max} {:instruction float_tan} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction integer_yank} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction float_tan} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_max})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup_times integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_sub integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_dup in2 float_div integer_shove integer_mult integer_add float_mult integer_mult integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_inc float_mult float_max float_tan float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 integer_yank float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot float_tan print_integer -7.788270215791826 in1 float_dup_items integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_max)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.3491 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 11 7.5021 8 4.9936 8 25.1721 9 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4806
Mean: 24.669613
Genome size: 107
Size: 108
Percent parens: 0.009
--- Population Statistics ---
Average total errors in population: 3616.010767099998
Median total errors in population: 1242.6931
Error averages by case: (120.55796859999982 9.803 136.35363040000138 10.306 108.61489889999919 9.831 158.9806453000007 9.742 90.11967739999983 9.295 101.90218849999914 9.025 112.72542730000158 11.019 133.03997470000098 10.264 140.76037050000164 10.316 130.20893350000168 8.95 121.23204850000121 10.375 118.71262390000011 8.77 187.74683620000204 9.863 120.89877670000001 7.895 166.67592510000068 7.955 160.86239800000166 10.407 145.4962236999997 11.128 125.56283259999907 8.929 122.03084370000073 8.491 97.45794250000019 9.613 184.49668200000136 10.047 167.46467220000093 8.874 139.05472650000058 9.718 206.9327647000017 9.094 79.39575570000062 9.016)
Error minima by case: (3.7562 8 6.4222 8 0.6823 8 10.2711 8 2.5911 7 11.6147 7 0.8295 8 5.5031 8 4.7658 9 4.9535 7 9.1949 8 0.1061 6 6.5211 8 0.506 6 5.0118 6 15.8714 8 6.0428 8 0.48 8 0.0064 6 7.1714 7 20.4401 8 15.9882 6 7.3945 8 49.1154 6 0.2175 5)
Average genome size in population (length): 110.809
Average program size in population (points): 111.809
Average percent parens in population: 0.009
Minimum age in population: 135.9253053711509
Maximum age in population: 140.5037265144814
Average age in population: 138.6583999372193
Median age in population: 138.6780051879175
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.913
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.913
Total error diversity:				 0.433
Error (vector) diversity:			 0.504
Behavioral diversity:				 0.53
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 231264764
--- Timings ---
Current time: 1529615386138 milliseconds
Total Time:         498.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.2 seconds, 29.7%
Fitness Testing:    276.0 seconds, 55.4%
Report:              74.2 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3658.6261804999986
Median total errors in population: 1242.9155
Error averages by case: (121.88234969999985 9.72 138.40691380000138 10.205 110.1198146999992 9.762 163.92929760000078 9.636 93.77121259999957 9.132 104.47179789999913 8.923 114.4954853000015 10.9 134.6300994000005 10.22 141.55449670000144 10.273 131.9465455000014 8.896 122.04727580000096 10.248 119.16802990000006 8.701 187.8264330000018 9.812 122.57860520000025 7.893 168.17021620000028 7.969 163.34898120000148 10.321 147.09506329999917 11.043 125.91105939999917 8.911 122.74029520000066 8.51 99.89271239999997 9.571 187.09263720000155 9.902 172.0833129000002 8.775 140.96371370000028 9.672 207.35563710000167 9.014 80.22319480000046 8.912)
Error minima by case: (3.757 7 1.412 7 23.2157 7 17.6488 8 8.6776 7 10.9187 7 0.8295 8 8.8286 6 2.7658 8 2.9535 6 8.0 7 0.1053 6 5.5211 6 0.506 6 1.9214 6 12.0 7 22.0566 7 0.497 7 0.9935 6 0.1721 6 13.0 8 32.002 6 9.2929 6 49.0 7 0.2155 6)
Average genome size in population (length): 110.272
Average program size in population (points): 111.272
Average percent parens in population: 0.009
Minimum age in population: 137.5904460490021
Maximum age in population: 142.0928069179716
Average age in population: 140.00632230591
Median age in population: 140.0786284585271
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.911
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.911
Total error diversity:				 0.431
Error (vector) diversity:			 0.49
Behavioral diversity:				 0.522
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 234021564
--- Timings ---
Current time: 1529615391651 milliseconds
Total Time:         504.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.5 seconds, 29.7%
Fitness Testing:    279.4 seconds, 55.4%
Report:              75.0 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_shove} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_shove print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3857.166882199998
Median total errors in population: 1242.6931
Error averages by case: (129.54870769999977 9.701 145.1982760000018 10.206 119.9471118999986 9.761 169.99971280000065 9.67 100.5571306999995 9.046 113.14480579999922 8.913 122.53778790000204 10.941 143.4220639000007 10.228 151.04543400000196 10.291 139.03401300000172 8.881 129.45040570000157 10.222 129.25732390000002 8.765 194.7499889000025 9.831 131.3280265000006 7.87 174.53718680000037 7.984 169.59599130000188 10.324 155.18019149999907 11.046 135.84425529999913 8.901 132.99827840000077 8.497 108.49441329999974 9.537 194.86512120000228 9.916 178.12587110000015 8.789 147.51290720000043 9.665 214.59865510000196 9.043 89.26522230000042 8.9)
Error minima by case: (1.1777 8 5.4229 7 25.3035 7 10.2711 8 7.6776 7 14.9295 7 0.1705 8 8.969 6 0.7658 8 4.9535 6 8.0 7 0.1043 6 1.5206 6 0.506 6 9.9881 6 1.1286 7 6.0428 8 0.4979 7 0.0065 7 1.8279 7 13.0 7 15.9882 6 10.8605 6 32.1152 7 0.2167 6)
Average genome size in population (length): 109.084
Average program size in population (points): 110.084
Average percent parens in population: 0.009
Minimum age in population: 138.9926452773678
Maximum age in population: 143.3131200846259
Average age in population: 141.3427511979539
Median age in population: 141.3941661485835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.903
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.903
Total error diversity:				 0.423
Error (vector) diversity:			 0.489
Behavioral diversity:				 0.523
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 236748664
--- Timings ---
Current time: 1529615397117 milliseconds
Total Time:         509.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       151.0 seconds, 29.6%
Fitness Testing:    282.6 seconds, 55.5%
Report:              75.9 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_mult})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_mult)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4120.902163999997
Median total errors in population: 1244.4775000000002
Error averages by case: (139.9630577999998 9.733 154.0215791000014 10.238 123.39333519999886 9.882 174.79597250000052 9.769 108.39170759999928 9.034 115.24139389999914 9.055 130.9249544000016 10.935 159.01531409999953 10.288 165.92400540000176 10.378 155.27407310000032 8.979 138.90120640000094 10.265 144.22311719999954 8.836 210.0791939000025 9.927 146.43394980000045 7.937 191.07609899999983 8.076 174.37937220000165 10.37 164.28549969999844 11.098 151.04887280000025 8.998 147.67711499999996 8.602 112.9799721999998 9.631 202.53577430000215 10.001 183.94374309999975 8.849 163.46794399999902 9.732 229.21588620000193 9.151 95.05802510000056 8.887)
Error minima by case: (2.8223 5 5.2505 5 20.4131 5 26.0 7 7.6776 6 14.0597 6 0.1705 5 8.969 5 2.7658 9 4.9535 5 8.0 5 0.1061 6 8.521 5 0.5066 6 13.0118 6 12.0 5 28.9434 6 0.4979 7 0.0223 6 2.1721 6 13.0 6 34.998 6 10.8605 5 49.0 6 0.2155 6)
Average genome size in population (length): 109.052
Average program size in population (points): 110.052
Average percent parens in population: 0.009
Minimum age in population: 140.2714336624863
Maximum age in population: 144.8666713720734
Average age in population: 142.8006530555593
Median age in population: 142.8533106986159
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.894
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.894
Total error diversity:				 0.437
Error (vector) diversity:			 0.497
Behavioral diversity:				 0.523
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 239474964
--- Timings ---
Current time: 1529615402512 milliseconds
Total Time:         514.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.4 seconds, 29.6%
Fitness Testing:    285.7 seconds, 55.5%
Report:              76.7 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3554.8264152999977
Median total errors in population: 1241.71945
Error averages by case: (113.56901929999974 9.693 130.1654687000013 10.156 106.43728449999882 9.713 160.10003650000075 9.58 92.50354129999953 8.867 99.68312819999915 8.885 104.88777960000147 10.95 132.43436720000085 10.212 138.50812090000167 10.262 131.53991680000172 8.848 114.02105590000147 10.157 115.92591120000003 8.722 184.0844641000017 9.818 118.74240000000034 7.813 167.2499508000008 7.947 160.74855870000178 10.284 137.4513750000001 11.015 122.32598739999915 8.849 119.65278540000067 8.439 96.26635389999986 9.546 179.94278750000106 9.92 169.2631751000007 8.708 140.8147565000003 9.681 203.58720690000152 9.003 79.05198390000045 8.801)
Error minima by case: (2.8223 8 3.3953 5 25.199 5 26.0 6 8.6776 5 12.9024 5 0.1705 9 0.1844 4 2.7658 9 2.9535 7 1.3672 5 0.0931 6 8.5201 8 0.506 6 12.0087 6 12.0 5 28.9434 6 1.4979 7 0.0064 7 0.1721 7 13.0 6 36.998 5 1.7071 7 77.1144 6 0.2168 6)
Average genome size in population (length): 109.5
Average program size in population (points): 110.5
Average percent parens in population: 0.009
Minimum age in population: 141.6798213057918
Maximum age in population: 146.1477014579591
Average age in population: 144.0912331047578
Median age in population: 144.1406557020291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.895
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.895
Total error diversity:				 0.395
Error (vector) diversity:			 0.446
Behavioral diversity:				 0.47
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 242212489
--- Timings ---
Current time: 1529615408264 milliseconds
Total Time:         520.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.0 seconds, 29.6%
Fitness Testing:    289.0 seconds, 55.5%
Report:              77.6 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3414.4092848
Median total errors in population: 1241.6932000000002
Error averages by case: (108.19351569999982 9.664 121.69034920000128 10.126 96.44555759999947 9.653 150.16537580000065 9.564 85.28473519999994 8.787 90.58481899999906 8.799 98.33264360000123 10.963 129.59946790000103 10.169 138.21516040000162 10.277 125.05012360000174 8.865 106.20489100000135 10.095 114.56598920000008 8.675 182.74880650000173 9.76 115.58817320000034 7.846 161.2729181000005 7.922 152.40820270000168 10.22 131.96289780000035 10.975 121.43959859999931 8.863 119.77303720000066 8.461 89.32241690000023 9.54 172.10446020000094 9.857 160.21275510000078 8.657 134.46496360000066 9.623 202.13210520000158 8.982 71.54732150000055 8.756)
Error minima by case: (3.8223 8 5.4229 7 22.801 6 10.2711 8 10.6776 7 14.9295 6 0.1705 8 0.1704 5 4.7629 8 2.0605 5 8.0 5 0.1053 6 4.5211 5 0.506 6 6.9882 6 12.0 6 6.0428 8 0.4979 7 0.0064 6 9.8279 7 13.0 7 15.9882 6 3.7071 5 49.0 6 0.2169 6)
Average genome size in population (length): 110.299
Average program size in population (points): 111.299
Average percent parens in population: 0.009
Minimum age in population: 142.6798213057918
Maximum age in population: 147.2017605592229
Average age in population: 145.4154818397008
Median age in population: 145.4430618530183
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.894
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.894
Total error diversity:				 0.42
Error (vector) diversity:			 0.474
Behavioral diversity:				 0.499
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 244970014
--- Timings ---
Current time: 1529615413811 milliseconds
Total Time:         526.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       155.3 seconds, 29.5%
Fitness Testing:    292.3 seconds, 55.6%
Report:              78.4 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3803.459429499999
Median total errors in population: 1242.48
Error averages by case: (122.8190605999999 9.685 134.64926290000145 10.141 116.96144169999876 9.778 170.74191140000062 9.644 105.9808253999996 8.863 110.43013919999916 8.91 110.64353510000151 10.936 141.9488737000004 10.257 149.3799771000017 10.284 139.26762480000127 8.905 123.14269780000153 10.09 127.20321560000006 8.758 194.32753930000192 9.865 130.6966652000003 7.879 174.9077569000004 8.012 172.69782970000188 10.296 144.5063379999999 10.938 133.67092369999924 8.9 130.7130256000007 8.533 110.45903949999983 9.636 188.37597210000138 9.888 179.61597590000034 8.764 147.4065174000003 9.697 213.74320440000199 9.054 92.57807650000052 8.879)
Error minima by case: (3.8223 8 4.7656 8 17.199 7 43.7151 8 8.6776 7 11.9019 7 0.1705 9 3.8156 8 0.7657 7 0.0596 7 6.322 8 0.0931 6 5.5211 8 0.2277 6 8.9882 6 74.8714 8 28.9434 9 0.4979 7 0.0064 7 1.8279 7 33.5266 8 37.998 6 5.7071 7 74.1154 7 0.2175 6)
Average genome size in population (length): 111.616
Average program size in population (points): 112.616
Average percent parens in population: 0.009
Minimum age in population: 144.623726227946
Maximum age in population: 148.8141094142154
Average age in population: 146.6992732091368
Median age in population: 146.7372342523599
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.906
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.906
Total error diversity:				 0.401
Error (vector) diversity:			 0.471
Behavioral diversity:				 0.492
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 247760414
--- Timings ---
Current time: 1529615419362 milliseconds
Total Time:         531.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.7 seconds, 29.5%
Fitness Testing:    295.7 seconds, 55.6%
Report:              79.2 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_shove} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_shove print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 132
Size: 133
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4223.793749799998
Median total errors in population: 1244.48
Error averages by case: (141.77515409999972 9.82 149.7038493000016 10.232 129.69038159999877 9.882 179.4628474000004 9.772 121.05276409999915 9.014 122.99368859999915 9.066 126.33758130000169 11.047 161.91368679999982 10.341 169.2658386000015 10.394 158.27175010000025 9.054 139.47492560000128 10.254 147.68558489999964 8.909 213.7724684000022 9.982 149.87197900000064 8.057 193.00875289999968 8.152 188.27799040000167 10.423 157.307610599999 10.954 154.25024190000036 9.073 151.22560029999994 8.614 127.96099989999959 9.814 204.206062800002 10.047 187.86977449999978 8.924 164.93350069999929 9.789 232.962060800002 9.191 110.79465520000042 8.919)
Error minima by case: (3.8223 8 5.2636 8 27.0673 7 42.7151 8 8.6421 7 14.9201 6 0.1052 8 6.1713 8 0.7658 8 3.9404 7 7.7313 8 0.1061 6 6.5211 7 0.506 6 9.0118 5 85.898 8 28.8819 8 0.4979 7 0.0064 7 1.8279 6 25.4596 8 36.998 6 3.7202 7 75.1154 7 0.2165 6)
Average genome size in population (length): 114.044
Average program size in population (points): 115.044
Average percent parens in population: 0.009
Minimum age in population: 145.8195912084311
Maximum age in population: 150.2306866096105
Average age in population: 148.0036786695763
Median age in population: 148.0267026274823
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.919
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.919
Total error diversity:				 0.453
Error (vector) diversity:			 0.511
Behavioral diversity:				 0.528
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 250611539
--- Timings ---
Current time: 1529615424874 milliseconds
Total Time:         537.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       158.1 seconds, 29.4%
Fitness Testing:    298.9 seconds, 55.6%
Report:              80.1 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 integer_rot integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3906.7156852000003
Median total errors in population: 1247.2092499999999
Error averages by case: (129.64412229999974 9.782 137.38153340000196 10.183 125.93783799999851 9.883 176.59413020000082 9.736 117.74713149999879 8.938 118.15892689999902 9.029 115.92442990000208 11.037 141.70062220000014 10.296 148.28449730000165 10.348 139.14635230000079 9.008 129.7339207000017 10.213 126.50403500000013 8.95 193.43763760000198 9.977 129.1213076000004 7.984 175.98902500000028 8.1 185.251972200002 10.385 146.67002859999974 10.831 133.7222806999993 9.042 129.83789860000078 8.612 120.89113749999946 9.857 192.887350500002 10.014 185.2024982999999 8.889 148.9079925999998 9.798 213.39536830000193 9.226 105.57264800000057 8.953)
Error minima by case: (4.8361 8 4.7536 7 12.6376 7 10.2711 8 9.6776 7 14.9295 6 0.1705 9 1.8156 5 0.7658 8 1.0597 8 8.0 7 0.0931 6 5.5211 9 0.3717 6 7.0118 6 12.0 7 6.0428 8 1.6606 7 0.0064 6 3.4911 7 6.5256 8 10.997 6 3.7071 8 74.1154 6 0.2116 6)
Average genome size in population (length): 116.823
Average program size in population (points): 117.823
Average percent parens in population: 0.009
Minimum age in population: 147.0037197185902
Maximum age in population: 151.2761474431399
Average age in population: 149.332602275283
Median age in population: 149.3730179899413
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.912
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.912
Total error diversity:				 0.479
Error (vector) diversity:			 0.534
Behavioral diversity:				 0.551
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 253532114
--- Timings ---
Current time: 1529615430558 milliseconds
Total Time:         542.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.5 seconds, 29.4%
Fitness Testing:    302.3 seconds, 55.7%
Report:              81.0 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 124
Size: 125
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3592.1961159999983
Median total errors in population: 1245.4805500000002
Error averages by case: (120.58495769999978 9.819 122.5147175000012 10.157 104.88091479999906 9.923 157.29585290000057 9.714 108.87729849999933 8.942 98.25073009999922 9.033 98.32854450000146 11.029 130.2823790000009 10.203 137.87833740000153 10.331 127.08254940000147 8.997 122.32687500000114 10.26 114.6051654000002 8.779 183.53779740000144 9.925 117.95114470000007 7.99 163.94143180000077 7.985 173.8883174000019 10.432 131.6967990000005 10.764 122.33518329999916 8.955 118.12434780000062 8.529 112.2136287999997 9.907 185.72973510000176 10.085 167.48436920000074 8.902 135.0562131000009 9.752 202.6501516000012 9.159 96.18567460000045 8.921)
Error minima by case: (1.1777 8 4.7536 8 27.2379 7 1.2711 8 8.6776 7 14.9408 7 0.8295 8 8.969 7 2.7636 9 2.9535 7 17.1341 8 0.1061 6 1.5208 8 0.3717 6 10.0118 6 0.1286 8 3.9572 8 0.4979 7 0.0064 7 4.8279 5 10.4596 8 5.9882 6 9.2929 7 70.1151 7 0.2037 6)
Average genome size in population (length): 119.662
Average program size in population (points): 120.662
Average percent parens in population: 0.008
Minimum age in population: 148.3061942800631
Maximum age in population: 152.7045836914812
Average age in population: 150.6755687753956
Median age in population: 150.7318280927953
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.916
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.916
Total error diversity:				 0.474
Error (vector) diversity:			 0.547
Behavioral diversity:				 0.568
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 256523714
--- Timings ---
Current time: 1529615436421 milliseconds
Total Time:         548.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.1 seconds, 29.4%
Fitness Testing:    305.8 seconds, 55.7%
Report:              81.8 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 68265.91589999998
Test mean error for best: 34.13296
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.013794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.013507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.013794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction float_add} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_flush} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec float_add float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod integer_flush in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8223 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.349 9 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5266 9 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1233.4805000000001
Mean: 24.66961
Genome size: 120
Size: 121
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3804.1061445999985
Median total errors in population: 1246.4798
Error averages by case: (135.89228319999975 9.797 123.43474660000126 10.129 119.28950769999884 9.877 170.1193547000008 9.681 128.82631919999895 8.918 111.03597699999915 9.035 101.13199830000161 11.041 130.5920478000009 10.183 140.22930460000157 10.236 131.5665639000018 8.935 134.95039610000094 10.247 118.79040880000005 8.776 184.8186198000018 9.867 120.04940970000038 7.93 166.19879820000043 7.929 194.69106540000203 10.465 132.62003530000044 10.651 124.88042819999922 8.914 121.41266670000057 8.461 133.62313569999927 9.928 199.64399440000247 10.086 179.43399240000005 8.909 138.91099670000057 9.711 206.02433680000158 9.117 118.2077574000005 8.909)
Error minima by case: (1.1915 8 5.4229 7 27.2266 7 8.2711 8 8.6776 7 12.9019 7 0.1705 8 0.1844 6 4.7658 8 2.9535 6 7.322 7 0.1061 6 1.5205 6 0.5203 6 7.9902 6 12.0 7 4.0428 8 0.496 7 0.0064 6 9.8279 7 13.0 8 13.9882 6 1.7071 6 46.1151 6 0.217 6)
Average genome size in population (length): 121.922
Average program size in population (points): 122.922
Average percent parens in population: 0.008
Minimum age in population: 149.4893733516931
Maximum age in population: 154.0743505908377
Average age in population: 152.0482623478622
Median age in population: 152.1123951779186
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.934
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.934
Total error diversity:				 0.477
Error (vector) diversity:			 0.549
Behavioral diversity:				 0.57
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 259571789
--- Timings ---
Current time: 1529615442139 milliseconds
Total Time:         554.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.4 seconds, 29.3%
Fitness Testing:    309.3 seconds, 55.8%
Report:              82.7 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 68544.83389999994
Test mean error for best: 34.27242
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3588.2573900999996
Median total errors in population: 1242.9155
Error averages by case: (115.32823939999972 9.682 116.08506410000105 10.098 112.78219159999908 9.728 165.12738420000085 9.634 109.86746349999922 8.782 104.5108715999992 8.869 91.63491650000094 11.029 129.92770620000084 10.197 138.60985080000154 10.218 125.94247690000155 8.846 114.04148590000081 10.106 116.20141040000011 8.734 183.4281953000013 9.816 117.67673900000037 7.787 164.6801736000005 7.871 176.61378360000165 10.396 124.96832920000038 10.576 122.73824389999932 8.809 119.62593630000065 8.461 114.74295189999965 9.944 178.94528960000125 9.977 172.4653319000004 8.753 137.10859300000052 9.66 203.8398569000015 9.031 95.53290480000048 8.828)
Error minima by case: (3.8221 7 2.3953 8 1.8169 8 10.2711 8 8.6776 7 11.9019 7 0.1705 9 8.969 8 3.7629 8 3.9535 7 14.322 8 0.0931 6 6.5211 8 0.506 6 13.0117 6 7.4677 8 6.0428 8 0.497 7 0.9929 6 6.2424 7 20.4596 8 15.9882 6 10.2929 8 25.7757 7 0.2175 6)
Average genome size in population (length): 123.525
Average program size in population (points): 124.525
Average percent parens in population: 0.008
Minimum age in population: 151.2369293324022
Maximum age in population: 155.3578764514621
Average age in population: 153.3639471275363
Median age in population: 153.3958889333337
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.919
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.919
Total error diversity:				 0.428
Error (vector) diversity:			 0.507
Behavioral diversity:				 0.514
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 262659964
--- Timings ---
Current time: 1529615448097 milliseconds
Total Time:         560.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.9 seconds, 29.3%
Fitness Testing:    312.9 seconds, 55.8%
Report:              83.5 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 68544.83389999994
Test mean error for best: 34.27242
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 123
Size: 124
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4141.477117299998
Median total errors in population: 1244.4808000000003
Error averages by case: (144.4755997999998 9.793 139.12658590000146 10.107 137.27930049999839 9.841 185.16364450000071 9.624 139.10490459999858 8.811 126.88424709999913 8.929 115.26097490000161 11.07 146.84834980000034 10.209 156.8674046000018 10.309 146.83667380000122 8.913 144.52275790000058 10.192 132.9009689 8.867 199.93362080000222 9.865 135.51081400000064 7.89 182.49416979999995 7.974 202.8574115000021 10.436 146.22089349999996 10.552 140.90432039999945 8.962 137.70004140000046 8.552 141.81278469999907 9.953 207.9305208000023 10.014 192.6693135000001 8.81 155.68174949999963 9.692 219.99863260000177 9.109 125.11343250000046 8.904)
Error minima by case: (0.8223 8 4.7536 7 27.2266 7 41.7151 6 8.6776 7 14.9295 7 0.1705 8 8.969 6 4.7658 8 2.9404 5 17.1341 7 0.1041 6 5.5205 6 0.3717 6 9.9875 6 85.899 7 8.0428 6 0.5021 7 0.0064 6 10.7569 6 20.4596 6 15.9882 5 9.2798 6 74.1147 7 0.2167 6)
Average genome size in population (length): 124.246
Average program size in population (points): 125.246
Average percent parens in population: 0.008
Minimum age in population: 152.6217490121096
Maximum age in population: 156.7515818856735
Average age in population: 154.7602404433574
Median age in population: 154.7848090695257
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.455
Error (vector) diversity:			 0.528
Behavioral diversity:				 0.544
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 265766214
--- Timings ---
Current time: 1529615453939 milliseconds
Total Time:         566.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.3 seconds, 29.2%
Fitness Testing:    316.5 seconds, 55.9%
Report:              84.4 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3805.3470866999987
Median total errors in population: 1243.1950000000002
Error averages by case: (129.0003872999998 9.789 129.68394730000117 10.199 122.77844869999927 9.792 172.43210850000077 9.686 124.74315889999909 8.874 115.469976999999 8.978 104.84422570000115 11.144 133.07800230000072 10.292 141.01394340000135 10.356 133.23278750000148 8.917 129.5655250000008 10.125 117.79494040000014 8.836 185.5306471000015 9.885 121.22778890000018 7.872 168.62343940000073 7.974 190.04576580000167 10.481 141.3318713999998 10.641 124.57997329999931 8.947 122.24058710000068 8.613 127.19672869999957 10.109 190.8474979000011 10.031 183.83555610000033 8.829 141.20606240000052 9.743 205.39769460000142 9.122 111.50702200000055 8.904)
Error minima by case: (2.8223 8 2.6047 8 10.801 8 42.7151 7 6.6776 7 4.0981 7 0.1705 9 8.969 7 2.7651 9 2.9404 6 1.678 8 0.1043 6 7.5211 8 0.506 6 5.0118 6 0.8714 7 26.9434 8 0.495 7 0.0064 7 7.8279 8 23.4596 8 36.998 6 9.2798 8 24.1127 6 0.2165 6)
Average genome size in population (length): 124.203
Average program size in population (points): 125.203
Average percent parens in population: 0.008
Minimum age in population: 153.8957570609576
Maximum age in population: 158.1613185215548
Average age in population: 156.1210732896705
Median age in population: 156.1671281021009
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.938
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.938
Total error diversity:				 0.446
Error (vector) diversity:			 0.519
Behavioral diversity:				 0.532
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 268871389
--- Timings ---
Current time: 1529615459897 milliseconds
Total Time:         572.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.9 seconds, 29.2%
Fitness Testing:    320.0 seconds, 55.9%
Report:              85.2 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3961.0549246000005
Median total errors in population: 1244.4799000000003
Error averages by case: (134.29932369999986 9.792 128.9030679000015 10.193 122.44438019999868 9.84 172.35640380000075 9.688 128.29717859999886 8.879 115.39549049999913 8.953 103.74651120000168 11.175 143.6527813 10.302 153.15720330000175 10.349 140.8133212000011 8.916 135.1538695000007 10.108 131.3023864999999 8.881 197.91556260000206 9.898 132.6543828000005 7.857 178.71564890000013 8.017 195.96123930000218 10.472 136.1629435000001 10.609 137.81043119999964 8.966 134.8705133000004 8.577 135.61716689999935 10.113 197.14917160000192 10.026 180.08124150000017 8.74 150.49015119999945 9.75 217.45796310000193 9.093 118.4905910000005 8.962)
Error minima by case: (3.1777 8 5.9229 6 27.7266 5 7.7151 6 4.6776 5 15.4295 6 0.1705 9 14.1844 5 4.7658 8 5.9535 4 8.0 5 0.0944 6 3.5211 5 0.5059 6 9.9882 5 12.0 5 5.0428 6 0.4979 7 0.9917 6 0.1741 7 2.4734 5 1.998 4 12.2929 5 2.1285 6 0.2037 6)
Average genome size in population (length): 124.349
Average program size in population (points): 125.349
Average percent parens in population: 0.008
Minimum age in population: 154.8957570609576
Maximum age in population: 159.3773093947748
Average age in population: 157.4883712926175
Median age in population: 157.5640005249168
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.937
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.937
Total error diversity:				 0.428
Error (vector) diversity:			 0.494
Behavioral diversity:				 0.513
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 271980214
--- Timings ---
Current time: 1529615465746 milliseconds
Total Time:         578.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       168.2 seconds, 29.1%
Fitness Testing:    323.6 seconds, 56.0%
Report:              86.1 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 68544.83389999994
Test mean error for best: 34.27242
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction float_shove} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.190723658675948} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 float_shove float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup integer_swap integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float integer_dup float_dup_times float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.190723658675948 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 137
Size: 138
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4235.839170100002
Median total errors in population: 1243.481
Error averages by case: (152.17593219999986 9.766 145.4002889000016 10.179 141.64476209999845 9.805 189.09064120000076 9.704 145.99743519999873 8.859 132.16435789999915 8.981 122.55947700000179 11.038 147.5675526 10.263 156.0499147000018 10.293 146.52530350000077 8.88 150.24295649999945 10.129 134.20724479999976 8.829 200.65719440000217 9.858 136.67010290000056 7.862 182.39731710000004 7.964 211.57824060000186 10.46 153.74704219999919 10.574 140.9412049999999 8.916 137.85508020000034 8.575 150.5123776999993 10.034 214.2883774000024 10.04 198.42273179999958 8.824 153.18313939999976 9.709 220.3082584000019 9.088 134.13723640000057 8.885)
Error minima by case: (1.1784 8 5.4229 8 27.2266 7 17.7151 7 10.6776 7 14.9295 7 0.1692 8 6.1713 6 4.7348 8 0.9404 5 17.349 8 0.0944 6 1.5201 6 0.506 6 5.9882 6 85.899 8 35.9424 7 2.5021 7 0.9929 6 5.8279 7 20.5266 7 32.002 6 4.2798 6 70.1144 7 0.2167 7)
Average genome size in population (length): 124.7
Average program size in population (points): 125.7
Average percent parens in population: 0.008
Minimum age in population: 155.8957570609576
Maximum age in population: 161.0891580720479
Average age in population: 158.8213005964161
Median age in population: 158.8599165026104
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.938
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.938
Total error diversity:				 0.419
Error (vector) diversity:			 0.502
Behavioral diversity:				 0.516
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 275097789
--- Timings ---
Current time: 1529615471777 milliseconds
Total Time:         584.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.9 seconds, 29.1%
Fitness Testing:    327.0 seconds, 56.0%
Report:              87.0 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.019262976204985} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.019262976204985 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 float_stackdepth integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_pop integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4201.017822599999
Median total errors in population: 1244.48045
Error averages by case: (147.29746849999987 9.891 143.69664120000147 10.229 134.08238869999892 9.93 181.08061600000082 9.753 144.046714199999 8.936 124.8930420999991 9.089 118.96378320000176 11.13 151.9136471 10.256 159.46131440000178 10.353 148.3799054000013 8.933 146.1203971000005 10.16 137.6405211999998 8.805 203.0452496000025 9.864 141.00593590000042 7.929 185.85192700000027 7.994 206.9032084000019 10.524 149.28168529999985 10.625 144.42401339999938 8.968 141.13162990000055 8.6 145.54892729999946 10.126 205.18471390000192 10.13 189.83076710000037 8.893 158.13493179999972 9.675 222.57059340000222 9.085 131.72280050000052 8.927)
Error minima by case: (2.1774 7 6.4229 8 28.2266 7 17.2849 8 7.6776 7 15.9295 7 0.1705 9 1.8156 8 4.7658 8 0.9535 7 18.349 8 0.0931 6 2.5211 7 0.506 5 8.0118 6 8.8714 8 13.0566 8 0.4978 7 0.0064 6 3.1721 7 25.4596 8 23.002 6 3.7071 8 71.1154 6 0.2158 7)
Average genome size in population (length): 125.169
Average program size in population (points): 126.169
Average percent parens in population: 0.008
Minimum age in population: 157.5139821975876
Maximum age in population: 162.4824153508886
Average age in population: 160.0986007045358
Median age in population: 160.1534815356125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.935
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.935
Total error diversity:				 0.45
Error (vector) diversity:			 0.509
Behavioral diversity:				 0.523
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 278227214
--- Timings ---
Current time: 1529615478118 milliseconds
Total Time:         590.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.4 seconds, 29.0%
Fitness Testing:    330.8 seconds, 56.0%
Report:              87.9 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_add} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_add tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_dec integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc integer_min float_frominteger print_float integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 132
Size: 133
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4136.634648999999
Median total errors in population: 1246.48065
Error averages by case: (142.09288889999988 9.927 137.5003759000015 10.224 132.30537909999862 9.951 181.6215028000007 9.78 139.69799999999876 8.954 125.32562729999913 9.108 114.7046156000018 11.189 145.65207880000057 10.273 157.4020414000018 10.434 147.77989730000104 9.028 142.46871770000035 10.241 135.56774819999958 8.89 200.78986150000242 9.975 134.31920270000032 8.047 183.78755490000023 8.088 203.736868900002 10.545 145.04009539999961 10.713 141.3101225999995 9.108 138.9297094000004 8.647 145.2716227999993 10.162 206.4383615000026 10.108 189.9630483000001 8.933 156.06525729999944 9.797 221.65589900000208 9.23 126.83417170000043 9.022)
Error minima by case: (1.8223 8 4.7517 6 17.052 5 10.2711 6 8.6776 5 4.7549 6 1.1705 8 8.969 5 2.7638 8 2.9535 4 7.1747 5 0.1061 6 1.5211 5 0.506 6 4.0118 6 75.7244 5 6.0428 6 0.4979 7 0.0064 6 3.1721 7 20.4596 5 15.9882 4 10.8605 5 70.1154 6 0.2174 6)
Average genome size in population (length): 125.814
Average program size in population (points): 126.814
Average percent parens in population: 0.008
Minimum age in population: 159.3927329114862
Maximum age in population: 163.7251364547504
Average age in population: 161.4299314964468
Median age in population: 161.4781870060619
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.483
Error (vector) diversity:			 0.551
Behavioral diversity:				 0.559
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 281372739
--- Timings ---
Current time: 1529615484325 milliseconds
Total Time:         596.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.8 seconds, 29.0%
Fitness Testing:    334.5 seconds, 56.1%
Report:              89.0 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_mult integer_mod integer_inc float_dup integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3811.5318187999987
Median total errors in population: 1244.9155500000002
Error averages by case: (129.2167348000001 9.794 124.19833900000128 10.157 120.45417089999897 9.864 168.98086480000052 9.736 122.98832459999886 8.909 113.37170669999922 8.94 103.7963655000016 11.125 138.85470490000023 10.27 143.86581940000156 10.332 135.0280732000012 8.971 127.63589000000077 10.079 122.88299119999992 8.806 191.62288720000208 9.888 125.10275430000041 7.936 170.44880800000018 7.991 187.6290884000019 10.448 133.4260719000003 10.663 128.47663689999922 8.955 126.73740320000051 8.53 126.8739212999993 10.092 189.87858030000177 9.917 178.19782170000056 8.883 144.37654739999968 9.75 211.68338120000163 9.118 107.72993200000037 8.92)
Error minima by case: (0.8223 7 5.4249 8 27.2286 8 10.2711 8 7.6756 7 14.9315 6 0.1674 9 8.969 7 3.6927 8 5.9535 7 17.351 7 0.0944 6 1.5211 8 0.5203 6 12.0003 5 85.901 8 6.0428 8 1.5011 7 0.0066 6 9.8279 8 20.4596 7 15.9882 6 0.7202 7 51.8436 7 0.2167 7)
Average genome size in population (length): 126.787
Average program size in population (points): 127.787
Average percent parens in population: 0.008
Minimum age in population: 160.3927329114862
Maximum age in population: 164.9883585900189
Average age in population: 162.7322621313988
Median age in population: 162.7872039853876
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.937
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.937
Total error diversity:				 0.477
Error (vector) diversity:			 0.543
Behavioral diversity:				 0.552
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 284542639
--- Timings ---
Current time: 1529615490455 milliseconds
Total Time:         602.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.4 seconds, 28.9%
Fitness Testing:    338.0 seconds, 56.1%
Report:              90.1 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction float_mod} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tagged_83} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_max} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 float_mod float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tagged_83 integer_dup in2 in2 float_mult in2 integer_mult in2 float_div integer_shove integer_mult integer_max float_mult in2 float_div integer_shove integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 128
Size: 129
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4131.375554299998
Median total errors in population: 1246.4797
Error averages by case: (133.32776210000026 9.829 137.76396130000086 10.164 131.6717300999995 9.896 182.5915989000006 9.777 129.90802729999925 8.911 125.36949949999918 9.001 117.86650470000157 11.133 153.5137383000001 10.267 162.68502410000156 10.409 152.69556920000082 9.012 133.83727500000046 10.018 140.1661771999997 8.853 206.0508973000021 9.879 142.94722830000038 7.969 187.33896620000016 8.061 194.76459150000176 10.417 145.28066099999978 10.676 146.63492899999963 9.011 143.7027400000003 8.619 132.6865247999996 10.159 196.75447760000162 9.84 189.60196760000053 8.823 159.7736404999994 9.735 226.95705350000156 9.11 118.93000930000035 8.986)
Error minima by case: (1.1791 8 4.3961 7 26.1998 8 10.2711 7 8.6776 7 13.9027 7 1.1677 8 3.1844 5 0.239 8 2.9535 5 1.3672 7 0.0948 6 0.4789 5 0.4929 6 1.9834 5 12.0 8 6.0428 8 0.4977 7 0.0054 6 4.8279 7 20.4596 7 15.9882 6 1.2929 5 49.0 6 0.2037 7)
Average genome size in population (length): 127.143
Average program size in population (points): 128.143
Average percent parens in population: 0.008
Minimum age in population: 161.7865684339228
Maximum age in population: 166.20909443963
Average age in population: 164.0282250752727
Median age in population: 164.0827263177388
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.944
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.944
Total error diversity:				 0.502
Error (vector) diversity:			 0.565
Behavioral diversity:				 0.579
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 287721289
--- Timings ---
Current time: 1529615496671 milliseconds
Total Time:         608.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.8 seconds, 28.9%
Fitness Testing:    341.6 seconds, 56.1%
Report:              91.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_max} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 36.15340410350262 36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_rot float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_max integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3896.9056391999984
Median total errors in population: 1246.3778000000002
Error averages by case: (130.64785090000092 9.897 129.92007990000081 10.21 125.79295369999949 9.927 173.2409861000003 9.844 121.24785549999905 9.07 117.22865919999926 8.98 105.78711260000145 11.141 142.4581975000005 10.365 148.28634160000178 10.385 139.7442647000017 9.079 125.74544490000012 9.95 127.1838602999999 8.852 193.86231720000188 9.955 129.83230440000054 7.973 174.58641150000045 8.073 189.96850800000186 10.469 138.59899880000023 10.739 132.6030102999992 9.037 131.09421990000067 8.626 127.17198619999951 10.22 192.8361861000021 9.772 183.6808879000009 8.933 150.32756659999973 9.843 215.3180658000016 9.156 110.17256960000026 9.073)
Error minima by case: (1.1777 8 5.3642 8 26.0673 8 37.7151 8 8.6756 7 13.156 6 0.1042 9 1.1844 7 0.7658 8 2.9535 8 17.0894 8 0.0947 6 1.5211 8 0.261 6 2.9882 6 23.872 8 28.9433 8 0.4969 7 0.9936 6 2.7564 7 27.5266 7 31.998 6 0.7071 8 57.1154 7 0.2167 7)
Average genome size in population (length): 128.556
Average program size in population (points): 129.556
Average percent parens in population: 0.008
Minimum age in population: 163.0639476119925
Maximum age in population: 167.3617594097473
Average age in population: 165.2402247087559
Median age in population: 165.2569171349045
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.938
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.938
Total error diversity:				 0.538
Error (vector) diversity:			 0.596
Behavioral diversity:				 0.607
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 290935264
--- Timings ---
Current time: 1529615502854 milliseconds
Total Time:         615.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.4 seconds, 28.8%
Fitness Testing:    345.2 seconds, 56.1%
Report:              92.3 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 68245.83389999994
Test mean error for best: 34.12292
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_500} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction in2} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_yank} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_fromfloat float_flush float_swap integer_fromfloat integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min float_pop integer_inc integer_mod integer_inc tagged_500 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup in2 float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_yank print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3965.570217999999
Median total errors in population: 1244.4808000000003
Error averages by case: (127.72591460000109 9.87 128.62925850000022 10.225 127.02758160000009 9.933 176.0516820000002 9.882 125.23083619999915 9.103 122.5920909999995 8.952 114.13255850000164 11.157 145.0531615000003 10.394 152.91020410000135 10.432 144.55981690000118 9.012 128.07059469999965 9.807 131.68402119999996 8.852 198.78570660000221 9.906 134.3734984000003 7.984 179.35724470000054 8.077 190.26786250000197 10.483 139.5497224000001 10.775 137.12145949999925 9.022 133.4139646000005 8.714 130.1574314999996 10.27 191.09573490000176 9.618 184.9607739000017 8.969 153.5570645999996 9.852 218.76849160000134 9.098 111.05354200000016 9.053)
Error minima by case: (0.8223 7 6.3642 8 0.803 7 30.6861 8 2.6486 7 14.156 6 0.1705 8 10.1844 7 1.7658 9 1.9535 7 3.6645 8 0.0947 6 2.5211 8 0.5061 6 10.0 5 54.8714 8 28.9434 8 1.5021 7 0.9909 6 5.1721 7 20.4976 7 24.969 6 8.2929 8 71.1154 7 0.2167 7)
Average genome size in population (length): 130.791
Average program size in population (points): 131.791
Average percent parens in population: 0.008
Minimum age in population: 164.0932598048517
Maximum age in population: 168.6987376247999
Average age in population: 166.5115859219579
Median age in population: 166.5567052343564
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.938
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.938
Total error diversity:				 0.539
Error (vector) diversity:			 0.603
Behavioral diversity:				 0.613
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 294205164
--- Timings ---
Current time: 1529615509177 milliseconds
Total Time:         621.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.0 seconds, 28.8%
Fitness Testing:    348.9 seconds, 56.1%
Report:              93.4 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 68544.83389999994
Test mean error for best: 34.27242
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction float_shove} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_min} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 float_shove float_add integer_shove integer_fromfloat float_flush float_swap integer_min float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_mod integer_inc float_div integer_inc float_dup integer_swap integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_mod integer_inc integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float float_dup_times integer_dup_times float_dec 79.28096162990369 integer_dup_items in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4079.3492711999984
Median total errors in population: 1246.4765499999999
Error averages by case: (132.55208160000143 9.866 139.8690261000005 10.159 131.68689600000036 9.928 180.1903679000001 9.873 133.57929079999897 9.098 127.96406449999971 8.89 119.76812310000165 11.184 148.6763854 10.448 156.74588360000158 10.429 145.5287135000008 9.067 131.78687129999932 9.675 133.83137119999958 8.897 201.63160120000202 9.946 135.9391984000005 7.929 181.8344995000004 8.154 197.56925490000214 10.44 144.61332869999987 10.769 140.5638250999997 9.037 139.42520210000018 8.753 136.9022935999996 10.29 194.46255750000174 9.499 188.7659753000016 8.911 152.9328844999996 9.875 220.62748140000133 9.112 122.533094 9.14)
Error minima by case: (3.7566 6 3.0 6 15.803 7 42.7131 8 8.6776 7 1.0 6 0.1705 6 12.1844 7 1.7631 6 3.9535 6 1.0 6 0.0944 5 7.5211 7 0.5201 6 7.0118 5 5.0 7 16.0428 8 0.494 6 0.0064 5 9.7617 7 30.4596 7 25.9882 6 7.7271 7 55.1127 6 0.0 5)
Average genome size in population (length): 131.85
Average program size in population (points): 132.85
Average percent parens in population: 0.008
Minimum age in population: 165.3153142114458
Maximum age in population: 169.8932655093924
Average age in population: 167.821986965315
Median age in population: 167.8412182962003
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.563
Error (vector) diversity:			 0.617
Behavioral diversity:				 0.626
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 297501664
--- Timings ---
Current time: 1529615515457 milliseconds
Total Time:         627.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.5 seconds, 28.8%
Fitness Testing:    352.8 seconds, 56.2%
Report:              94.4 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 68256.83389999994
Test mean error for best: 34.12842
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.013801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_add} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dup} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -52.516345426303765} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_add integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup float_dup tagged_363 36.15340410350262 integer_yankdup float_rot float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_mod integer_inc integer_div integer_inc integer_min float_frominteger print_float integer_dup float_dup_times float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_inc integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -52.516345426303765 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2286 9 95.7151 9 15.6776 8 29.9295 8 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1231.4805000000001
Mean: 24.62961
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3592.2636529999995
Median total errors in population: 1244.37595
Error averages by case: (114.64930840000153 9.756 118.81681099999994 10.117 112.0826941000006 9.769 165.89392580000012 9.72 110.53537389999939 8.951 107.07526469999945 8.721 98.56554010000133 11.151 130.33614390000056 10.367 135.97950820000156 10.366 125.7850771000016 8.994 114.71980459999938 9.588 114.80675259999991 8.838 180.98585540000195 9.847 117.09764400000026 7.787 161.0606432000006 7.978 177.47319750000185 10.322 128.16730490000032 10.644 121.50284769999931 8.895 118.99742680000047 8.664 115.11697699999984 10.193 179.93950150000174 9.341 172.16282590000142 8.747 133.79094380000038 9.797 201.98545360000156 9.037 98.07482730000024 9.072)
Error minima by case: (0.8203 8 5.4249 8 1.197 8 28.2849 8 8.6776 7 11.0995 6 0.1291 9 8.969 7 0.7651 8 1.9535 7 8.6801 8 0.1061 7 2.5211 8 0.5224 6 6.0118 6 53.8714 7 24.0566 8 0.2563 7 0.0064 6 0.1721 7 32.5246 7 34.004 6 8.2929 7 3.1285 7 0.2155 7)
Average genome size in population (length): 132.744
Average program size in population (points): 133.744
Average percent parens in population: 0.007
Minimum age in population: 166.566651155899
Maximum age in population: 171.8767708974559
Average age in population: 169.1625366794536
Median age in population: 169.1738025740922
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.547
Error (vector) diversity:			 0.585
Behavioral diversity:				 0.587
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 300820414
--- Timings ---
Current time: 1529615521629 milliseconds
Total Time:         633.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       181.9 seconds, 28.7%
Fitness Testing:    356.7 seconds, 56.3%
Report:              95.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 68262.86389999994
Test mean error for best: 34.13143
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_div} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_yank} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div float_div float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 float_stackdepth integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_pop integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod integer_yank in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3811.861294999996
Median total errors in population: 1244.6095
Error averages by case: (121.71401110000166 9.868 125.35024559999977 10.189 120.94469110000068 9.921 168.2767950000001 9.833 120.40552629999921 9.054 112.49738909999951 8.852 105.7384911000015 11.206 138.83559570000025 10.405 146.2033238000017 10.379 137.6967550000011 8.997 121.3778323999992 9.649 125.9066255999999 8.791 193.47219140000246 9.866 128.16269170000052 7.838 174.38559610000004 7.991 184.45839780000202 10.454 137.0116251000001 10.739 132.63123789999952 8.908 127.41014980000054 8.65 121.89687299999973 10.251 185.16543380000198 9.449 179.95613250000184 8.876 147.24034689999982 9.806 210.89644740000153 9.034 106.12688980000011 9.094)
Error minima by case: (2.1797 7 4.9809 8 19.197 8 17.7131 7 8.6776 7 8.8999 6 0.1685 6 6.8287 6 4.7658 6 5.9535 6 11.3197 8 0.0931 6 1.5211 6 0.2497 6 9.9861 6 73.8694 8 28.9434 8 0.5044 6 0.0063 5 5.0 7 20.5246 7 32.004 6 8.2798 7 70.1154 6 0.2137 6)
Average genome size in population (length): 132.982
Average program size in population (points): 133.982
Average percent parens in population: 0.007
Minimum age in population: 167.566651155899
Maximum age in population: 172.8767708974559
Average age in population: 170.5124591838018
Median age in population: 170.5538379333115
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.543
Error (vector) diversity:			 0.591
Behavioral diversity:				 0.594
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 304145289
--- Timings ---
Current time: 1529615528125 milliseconds
Total Time:         640.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.5 seconds, 28.7%
Fitness Testing:    360.5 seconds, 56.3%
Report:              96.1 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 68262.86389999994
Test mean error for best: 34.13143
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_div} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction float_rot} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_yank} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div float_div float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 float_stackdepth integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_pop integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 float_rot float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod integer_yank in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3943.848557599999
Median total errors in population: 1246.47955
Error averages by case: (121.41657010000127 9.877 130.8480190999999 10.22 126.28549100000048 9.893 171.66293670000016 9.873 114.56866089999956 9.088 118.20010009999952 8.878 113.9844155000012 11.247 149.66090730000013 10.463 154.98653480000155 10.438 147.4751598000011 9.041 125.83714599999938 9.644 135.52445699999973 8.981 200.51502780000172 9.978 134.76127990000023 7.855 182.9163824000008 8.11 183.79084890000158 10.435 140.03402059999996 10.761 140.89722849999976 9.035 138.16217520000026 8.772 119.61176419999984 10.297 187.9002108000017 9.478 181.06263800000144 8.921 157.71683629999987 9.939 222.12948360000155 9.209 104.24826310000026 9.219)
Error minima by case: (1.8203 7 2.6067 6 2.803 7 17.7151 8 7.6776 7 1.0 6 0.1705 8 7.969 7 0.7659 8 0.0596 6 1.0 6 0.1031 6 4.5211 7 0.0369 6 5.9291 5 5.0 7 27.9434 8 0.4979 7 0.0064 7 1.1734 7 20.5266 7 32.002 6 9.8605 6 73.1154 7 0.2168 6)
Average genome size in population (length): 133.655
Average program size in population (points): 134.655
Average percent parens in population: 0.007
Minimum age in population: 169.2311137532866
Maximum age in population: 174.0126516428406
Average age in population: 171.8420224948182
Median age in population: 171.8788925702666
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.966
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.565
Error (vector) diversity:			 0.608
Behavioral diversity:				 0.614
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 307486989
--- Timings ---
Current time: 1529615534439 milliseconds
Total Time:         646.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.9 seconds, 28.6%
Fitness Testing:    364.4 seconds, 56.4%
Report:              97.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 68256.81589999996
Test mean error for best: 34.12841
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3412.7398389999985
Median total errors in population: 1244.4805000000001
Error averages by case: (108.57581460000172 9.775 110.9271370999997 10.119 104.54502890000074 9.725 157.24407760000005 9.723 111.72621069999929 8.912 100.91078349999958 8.646 95.99820680000146 11.107 119.65455240000051 10.388 125.67001360000138 10.279 117.19731950000153 8.937 110.09775229999934 9.55 103.02532999999988 8.758 171.81027350000178 9.831 106.51035970000028 7.702 153.8128575000007 7.958 172.57634350000166 10.339 121.70032720000042 10.65 110.5105198999993 8.848 106.56669560000047 8.566 110.83596669999967 10.106 173.1840480000014 9.37 166.22741390000184 8.753 126.37042870000066 9.77 191.79922650000097 9.009 99.39715130000017 9.045)
Error minima by case: (1.1777 8 5.4249 8 15.1545 8 17.7151 8 7.6756 7 2.8887 6 0.1705 8 2.1693 8 0.2362 9 0.0616 7 5.2411 8 0.1061 6 1.5211 8 0.506 5 8.0118 6 6.8714 8 27.9434 8 0.5021 7 0.0064 6 1.1721 7 20.5246 7 32.004 6 7.2798 7 66.1154 7 0.2165 7)
Average genome size in population (length): 133.307
Average program size in population (points): 134.307
Average percent parens in population: 0.007
Minimum age in population: 170.8570276039124
Maximum age in population: 175.675474597615
Average age in population: 173.2201824543002
Median age in population: 173.2649248977281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.557
Error (vector) diversity:			 0.611
Behavioral diversity:				 0.616
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 310820064
--- Timings ---
Current time: 1529615540734 milliseconds
Total Time:         653.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.5 seconds, 28.6%
Fitness Testing:    368.3 seconds, 56.4%
Report:              98.2 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 68256.81589999996
Test mean error for best: 34.12841
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (integer_add integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_dec integer_yank integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3912.6679445999994
Median total errors in population: 1245.4779999999998
Error averages by case: (120.985131800002 9.792 128.1357334999998 10.165 124.20710360000048 9.79 173.7454958000001 9.843 123.90491739999902 9.025 115.92845439999996 8.694 108.08568680000145 11.209 146.53861850000007 10.427 153.83064640000177 10.372 147.6657245000009 9.019 123.89520469999916 9.583 130.29580619999987 8.901 195.6714198000021 9.878 132.32143040000054 7.807 179.04883440000066 8.091 188.89971790000192 10.407 136.04998590000034 10.718 135.9300890999995 8.955 134.8430198000003 8.761 126.9403310999995 10.279 188.07127440000156 9.428 181.3382906000018 8.799 152.77298839999958 9.817 216.66997270000167 9.078 108.89006650000002 9.164)
Error minima by case: (2.178 7 5.4229 8 27.2286 7 39.7151 8 8.629 7 14.9315 6 0.0599 8 0.8156 7 1.7658 8 4.9535 6 17.3511 7 0.1031 6 3.5211 7 0.506 6 8.9882 6 85.899 7 24.0428 8 0.4979 7 0.0064 7 4.8279 7 29.5246 7 21.9882 6 2.7071 7 72.1154 7 0.2156 7)
Average genome size in population (length): 133.699
Average program size in population (points): 134.699
Average percent parens in population: 0.007
Minimum age in population: 171.8891236898079
Maximum age in population: 176.4588230107306
Average age in population: 174.545542870582
Median age in population: 174.6171101281594
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.571
Error (vector) diversity:			 0.612
Behavioral diversity:				 0.615
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 314163014
--- Timings ---
Current time: 1529615546812 milliseconds
Total Time:         659.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.9 seconds, 28.5%
Fitness Testing:    372.1 seconds, 56.4%
Report:              99.0 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 68256.81589999996
Test mean error for best: 34.12841
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_yank float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3925.6120546000006
Median total errors in population: 1244.4806
Error averages by case: (121.4172375000016 9.785 130.18577189999976 10.185 125.07549420000039 9.841 174.18831140000015 9.856 123.89056199999936 9.024 125.5035926000001 8.698 115.12531520000144 11.156 143.96458289999995 10.403 151.5067233000018 10.415 143.0020417000009 8.983 124.35964569999939 9.556 131.57674719999977 8.886 196.47367260000215 9.89 131.5178882000004 7.819 177.13987820000042 8.079 186.08808830000186 10.397 142.5305719999997 10.678 137.23579359999977 8.981 134.05043010000017 8.73 124.03024749999982 10.265 186.30235500000154 9.411 182.16290370000155 8.864 149.8063804999998 9.845 217.75815230000143 9.061 112.78466700000008 9.127)
Error minima by case: (0.8203 7 4.3953 7 27.2286 7 26.0 7 8.6776 7 14.9295 6 0.1711 8 13.1844 6 3.7658 8 4.9535 6 8.0 7 0.1062 6 4.5191 6 0.5059 6 9.0118 5 12.0 7 28.9414 8 1.5042 7 0.0064 6 7.8259 7 13.0 7 36.9987 6 11.2929 6 49.0 6 0.2167 7)
Average genome size in population (length): 133.891
Average program size in population (points): 134.891
Average percent parens in population: 0.007
Minimum age in population: 172.9013182718521
Maximum age in population: 178.0747795787479
Average age in population: 175.8358552932717
Median age in population: 175.8563779814545
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.546
Error (vector) diversity:			 0.598
Behavioral diversity:				 0.602
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 317510953
--- Timings ---
Current time: 1529615553094 milliseconds
Total Time:         665.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.4 seconds, 28.5%
Fitness Testing:    376.0 seconds, 56.5%
Report:             100.0 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 68256.81589999996
Test mean error for best: 34.12841
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_dec} {:instruction integer_yank} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (integer_add integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_dec integer_yank integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 141
Size: 142
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3644.834556099998
Median total errors in population: 1244.4799
Error averages by case: (108.50264250000149 9.76 121.67260379999998 10.13 114.99305180000013 9.866 166.25589479999996 9.814 110.42310139999928 8.996 107.81440950000028 8.542 98.01463570000114 11.109 135.7751941000003 10.338 141.03502370000177 10.384 134.5332327000015 8.903 113.22878599999926 9.51 118.72760159999996 8.749 186.90021330000204 9.788 122.29041360000046 7.808 170.87299500000066 7.977 174.6433448000019 10.371 128.97188490000036 10.635 125.22882499999925 8.877 122.20820800000061 8.655 110.80353579999988 10.259 176.86032470000177 9.305 173.8153742000014 8.824 142.82023460000013 9.741 206.22809810000174 8.94 95.93792650000015 8.996)
Error minima by case: (0.8203 6 1.6047 8 12.197 8 26.7154 7 1.3218 7 1.0 6 0.1685 6 3.8156 6 4.7631 6 1.9404 6 1.0 7 0.1063 5 8.4686 6 0.506 5 6.9882 6 5.0 8 28.9414 8 0.4959 6 0.0064 5 5.8279 6 16.5246 7 20.996 6 5.7071 6 61.1154 6 0.2167 6)
Average genome size in population (length): 133.814
Average program size in population (points): 134.814
Average percent parens in population: 0.007
Minimum age in population: 173.9013182718521
Maximum age in population: 179.358310231998
Average age in population: 177.1717612828972
Median age in population: 177.202196360487
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.568
Error (vector) diversity:			 0.62
Behavioral diversity:				 0.624
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 320857167
--- Timings ---
Current time: 1529615559258 milliseconds
Total Time:         671.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.7 seconds, 28.4%
Fitness Testing:    379.7 seconds, 56.6%
Report:             100.8 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 68251.82489999998
Test mean error for best: 34.12591
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.015801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_mod} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_add} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_229} {:instruction integer_dup} {:instruction in2} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dec} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 42.315210846345934} {:instruction integer_mult} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction tagged_210} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction float_dup})
Best program: (36.15340410350262 integer_yankdup float_dup integer_mod tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_add 79.28096162990369 integer_yank in1 float_stackdepth integer_yankdup float_sin tag_integer_229 integer_dup in2 tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult float_dec integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 42.315210846345934 integer_mult float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 tagged_210 integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer float_dup)
Errors: [23.8203 9 43.4229 10 35.2286 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4115.494486899999
Median total errors in population: 1246.1925999999999
Error averages by case: (130.6105902000016 9.937 135.59006470000023 10.335 131.6520160999999 10.006 179.3017089000001 10.01 125.33739459999966 9.199 121.28647740000054 8.634 121.39133090000139 11.318 156.11574219999954 10.504 162.95294360000187 10.518 154.3882591000006 9.108 131.7961308999994 9.716 142.3220026999992 8.953 209.32819750000232 9.971 144.4509630000004 7.979 189.41661320000017 8.208 188.99753260000165 10.511 144.34760219999953 10.818 147.74880320000022 9.085 144.69831089999977 8.822 125.28292439999989 10.379 195.08138480000153 9.5 188.9880052000006 9.018 163.2360502999992 9.906 228.30506540000158 9.145 112.06837290000028 9.22)
Error minima by case: (0.8203 7 4.4218 8 27.2172 7 28.2849 7 8.6762 7 15.566 6 0.154 6 8.969 6 2.2342 6 2.9535 6 11.321 7 0.1053 6 2.4686 6 0.3319 6 6.9882 6 28.8714 8 24.0566 8 0.4972 6 0.0064 5 3.0 6 30.5246 7 34.002 6 9.2929 7 62.1154 6 0.2167 6)
Average genome size in population (length): 134.098
Average program size in population (points): 135.098
Average percent parens in population: 0.007
Minimum age in population: 175.5076192327458
Maximum age in population: 180.8738941863419
Average age in population: 178.4886209987499
Median age in population: 178.5058204261239
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.587
Error (vector) diversity:			 0.635
Behavioral diversity:				 0.64
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 324210642
--- Timings ---
Current time: 1529615565572 milliseconds
Total Time:         677.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.1 seconds, 28.4%
Fitness Testing:    383.5 seconds, 56.6%
Report:             102.0 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 68256.81589999996
Test mean error for best: 34.12841
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_add} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_add tagged_363 36.15340410350262 tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_stackdepth integer_yank in2 float_dup_times integer_mod float_dup_times integer_mod float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc integer_min float_frominteger print_float integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger float_dup_times integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin in2 in2 float_mult in2 float_div integer_shove integer_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 126
Size: 127
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3810.536831700001
Median total errors in population: 1246.4733999999999
Error averages by case: (120.43869760000157 9.859 123.04569910000008 10.22 119.62486739999996 9.927 166.52442039999988 9.837 122.69494509999942 9.155 110.26301850000078 8.444 106.56107370000137 11.209 140.2651806000003 10.443 147.5845153000014 10.438 139.29666030000126 9.058 121.52378529999923 9.671 126.30753419999985 8.887 192.42029990000214 9.851 128.6849022000002 7.881 173.8872419000003 8.129 182.30960910000186 10.416 132.60599010000016 10.717 131.95957079999934 9.05 128.87254530000047 8.726 119.75329019999968 10.321 187.85118470000174 9.46 179.9799676000007 8.919 147.22087449999972 9.823 212.74779400000153 9.089 109.52916390000017 9.054)
Error minima by case: (2.809 8 1.6037 7 12.197 7 26.0 8 8.6756 7 6.8999 6 0.1677 9 8.969 6 5.7572 8 4.9404 6 1.32 7 0.1047 6 2.5211 6 0.506 6 5.9882 5 12.0 7 28.9414 8 0.4979 7 0.0064 6 7.1721 7 13.0 7 31.9981 6 10.8605 6 49.0 6 0.2167 7)
Average genome size in population (length): 133.771
Average program size in population (points): 134.771
Average percent parens in population: 0.007
Minimum age in population: 177.3950123781784
Maximum age in population: 181.5722794391869
Average age in population: 179.7867020632606
Median age in population: 179.8293844848428
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.569
Error (vector) diversity:			 0.624
Behavioral diversity:				 0.629
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 327556417
--- Timings ---
Current time: 1529615571555 milliseconds
Total Time:         683.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.6 seconds, 28.3%
Fitness Testing:    387.2 seconds, 56.6%
Report:             103.1 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 68273.81379999993
Test mean error for best: 34.13691
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.015801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tag_float_464} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction 62} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction float_tan} {:instruction integer_add} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times tag_float_464 integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min integer_min integer_min integer_mod integer_inc integer_mod integer_inc integer_inc integer_min float_frominteger integer_div integer_inc integer_min float_frominteger print_float integer_dup_times integer_inc integer_sub float_frominteger print_float float_frominteger 62 integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove float_tan integer_add float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4249 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4825
Mean: 24.60965
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3793.1665893
Median total errors in population: 1246.47865
Error averages by case: (113.61179680000114 9.863 120.44086039999988 10.245 111.48360960000008 9.963 162.84765469999996 9.916 118.29896379999981 9.112 100.97682850000045 8.411 103.22380600000078 11.213 144.67300260000044 10.522 152.88695600000136 10.43 143.228788400001 9.082 114.49483089999976 9.673 131.23127189999983 8.948 197.26722030000138 9.941 134.91876129999991 7.885 179.89767440000045 8.12 178.3524696000018 10.444 129.2664009000001 10.749 137.89437059999946 9.046 134.81172520000027 8.754 114.83190190000016 10.308 178.14154720000184 9.437 179.2166878000007 8.942 151.7434629000002 9.91 217.1971609000009 9.182 103.01883670000025 9.114)
Error minima by case: (0.8223 7 4.5773 8 26.381 8 28.2711 8 6.6783 7 6.9046 6 0.1705 6 11.1693 6 3.7658 6 2.9535 6 16.3356 8 0.0946 6 4.5191 8 1.1641 6 2.9222 5 23.8716 8 24.0428 8 1.4959 6 0.0064 6 2.0 6 30.5246 7 33.9882 6 9.2929 8 57.0494 7 0.2168 6)
Average genome size in population (length): 133.655
Average program size in population (points): 134.655
Average percent parens in population: 0.007
Minimum age in population: 179.1781180878198
Maximum age in population: 183.1717054753187
Average age in population: 181.0576265198222
Median age in population: 181.0757701807485
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.574
Error (vector) diversity:			 0.627
Behavioral diversity:				 0.633
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 330898942
--- Timings ---
Current time: 1529615578152 milliseconds
Total Time:         690.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.0 seconds, 28.3%
Fitness Testing:    391.2 seconds, 56.7%
Report:             103.9 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 68262.86389999994
Test mean error for best: 34.13143
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction integer_dec} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction integer_dup_times} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_mod} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_rot float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_dup_items integer_inc integer_dec float_frominteger print_float integer_inc float_max integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove integer_dup_times float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_tan float_inc 41.86305353052913 float_rot float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap integer_min integer_mod float_sin integer_mod float_swap float_min float_stackdepth print_integer)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 151
Size: 152
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4147.984669400001
Median total errors in population: 1244.4775
Error averages by case: (140.50439920000125 9.871 138.02742140000046 10.287 132.67366999999985 9.982 182.59399739999984 9.921 140.54173779999877 9.162 124.44048710000148 8.435 122.83942040000166 11.27 149.41374119999972 10.501 157.04264480000185 10.473 148.59148040000062 9.101 139.86857689999897 9.635 136.1679938999997 8.916 201.64536160000273 9.974 137.35475580000062 7.956 183.37117350000005 8.133 200.7935995000023 10.517 147.37630269999983 10.752 141.5441337 9.058 138.70367570000025 8.785 139.19922029999964 10.357 204.06665740000193 9.44 196.04046790000024 8.955 157.43944529999902 9.897 221.8730387000019 9.179 126.20226680000009 9.112)
Error minima by case: (1.8223 7 0.1891 8 27.1865 7 38.7151 7 6.6776 7 14.1154 6 0.1705 6 8.969 6 4.7651 6 2.9535 6 2.32 7 0.1061 5 4.5211 6 0.506 6 11.0118 5 4.1286 8 26.9434 8 1.4971 6 0.0091 5 4.1721 7 28.5246 7 32.998 6 7.2795 7 29.1154 6 0.2167 6)
Average genome size in population (length): 134.128
Average program size in population (points): 135.128
Average percent parens in population: 0.007
Minimum age in population: 180.249023755215
Maximum age in population: 184.3390752536813
Average age in population: 182.387600240245
Median age in population: 182.4130837729187
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.945
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.945
Total error diversity:				 0.524
Error (vector) diversity:			 0.585
Behavioral diversity:				 0.593
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 334252906
--- Timings ---
Current time: 1529615584670 milliseconds
Total Time:         696.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.4 seconds, 28.2%
Fitness Testing:    395.1 seconds, 56.7%
Report:             105.0 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3990.999085299999
Median total errors in population: 1245.72255
Error averages by case: (123.15420670000155 9.959 125.86904160000027 10.348 120.79632189999973 10.062 172.12400720000005 9.988 127.2996148999992 9.244 108.29830190000084 8.503 107.6781692000012 11.375 154.1566544000001 10.556 159.27834070000148 10.564 149.72762400000104 9.204 125.39216369999933 9.737 138.87825399999977 9.014 203.73653160000185 9.998 140.8568398000004 7.976 183.57104000000052 8.224 191.2722899000018 10.6 135.96255130000006 10.858 145.47275389999967 9.138 141.48064160000038 8.859 129.18648199999978 10.426 189.63709650000155 9.517 176.16112830000063 9.076 157.1730392999996 9.959 224.1816629000013 9.208 118.01332800000024 9.248)
Error minima by case: (1.1819 8 5.4225 8 6.8376 7 26.0 8 9.6784 7 14.0597 6 0.1685 8 8.969 5 0.7658 8 10.9384 5 8.0 7 0.1031 6 1.5229 5 0.506 5 8.0118 5 1.6092 7 31.9434 8 0.4969 7 0.0063 7 1.8279 7 13.0 7 37.7308 6 3.2798 5 49.0 6 0.2175 7)
Average genome size in population (length): 133.979
Average program size in population (points): 134.979
Average percent parens in population: 0.007
Minimum age in population: 181.50414332783
Maximum age in population: 185.7391816876935
Average age in population: 183.6105924423419
Median age in population: 183.6635555712957
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.584
Error (vector) diversity:			 0.63
Behavioral diversity:				 0.64
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 337603412
--- Timings ---
Current time: 1529615591120 milliseconds
Total Time:         703.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.9 seconds, 28.1%
Fitness Testing:    398.9 seconds, 56.7%
Report:             106.3 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4152.352458499999
Median total errors in population: 1246.4712
Error averages by case: (132.36497620000182 9.929 141.22001330000083 10.333 131.6467447999996 10.031 181.53710400000006 10.023 137.94507569999902 9.234 121.70683150000141 8.473 123.47350860000181 11.312 155.0659123999999 10.587 161.46227990000168 10.512 150.9853644000008 9.189 132.48541229999913 9.687 139.07634759999948 9.01 204.72062830000243 10.077 141.24380860000065 7.987 186.5024381000005 8.228 195.89523900000188 10.512 147.34424159999975 10.847 145.37117590000014 9.109 144.02619359999994 8.86 136.5872416999996 10.417 195.23700290000176 9.491 194.13642600000068 9.017 159.43849199999954 9.997 225.3361399000014 9.263 126.15586020000009 9.263)
Error minima by case: (1.1797 8 4.368 8 7.199 7 42.7151 8 8.6776 7 1.8999 6 0.1705 9 8.969 8 2.7658 8 1.9535 8 3.68 7 0.0931 5 1.5211 8 0.2277 5 7.0013 5 39.8714 8 28.9434 8 0.4979 7 0.0054 6 0.1721 7 24.4596 7 36.998 6 5.2798 8 70.1154 7 0.2167 6)
Average genome size in population (length): 133.871
Average program size in population (points): 134.871
Average percent parens in population: 0.007
Minimum age in population: 182.50414332783
Maximum age in population: 186.9494998357298
Average age in population: 184.9055227442445
Median age in population: 184.9060474533687
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.565
Error (vector) diversity:			 0.624
Behavioral diversity:				 0.629
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 340950687
--- Timings ---
Current time: 1529615597471 milliseconds
Total Time:         709.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.5 seconds, 28.1%
Fitness Testing:    402.7 seconds, 56.7%
Report:             107.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3939.3229689999994
Median total errors in population: 1245.4806
Error averages by case: (127.33638860000163 9.906 131.55239430000017 10.314 123.2525104999998 10.048 173.6484270000001 10.018 127.76017989999929 9.225 117.920657100001 8.485 111.97858190000123 11.255 143.02297770000015 10.528 151.0335372000016 10.574 140.41758180000105 9.153 132.63797809999903 9.704 129.3778328999999 9.079 196.02321180000203 10.056 131.5367212000003 8.011 176.52233990000045 8.262 193.16656270000212 10.541 137.7952907000001 10.799 136.07195019999926 9.147 133.06894630000053 8.88 131.81419339999954 10.389 188.83338890000158 9.525 183.1778656000005 9.034 147.46922439999975 9.938 215.83350250000163 9.233 116.76272440000021 9.204)
Error minima by case: (0.8223 8 3.0 8 7.1615 8 28.2711 8 8.6756 7 1.0 6 0.1685 9 8.969 7 4.7658 8 0.0616 6 1.0 8 0.1031 6 4.5212 7 0.2277 5 4.0118 6 5.0 7 24.0428 8 0.4979 7 0.0084 6 3.1721 7 31.5266 7 33.9882 6 5.8605 7 50.1154 7 0.2037 7)
Average genome size in population (length): 134.007
Average program size in population (points): 135.007
Average percent parens in population: 0.007
Minimum age in population: 184.1139682012777
Maximum age in population: 188.0764729069197
Average age in population: 186.182118187633
Median age in population: 186.2392405585378
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.941
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.941
Total error diversity:				 0.565
Error (vector) diversity:			 0.622
Behavioral diversity:				 0.63
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 344301415
--- Timings ---
Current time: 1529615603874 milliseconds
Total Time:         716.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.0 seconds, 28.1%
Fitness Testing:    406.5 seconds, 56.8%
Report:             108.4 seconds, 15.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4499.212464599998
Median total errors in population: 1246.2082
Error averages by case: (153.25622900000056 10.002 151.80933750000148 10.352 139.34268519999958 10.01 193.1508763 9.973 156.2014615999987 9.25 134.75436620000136 8.546 128.4440410000016 11.271 164.88186869999961 10.509 174.02346710000194 10.566 165.16241800000026 9.165 153.67799279999906 9.756 152.9292371999992 9.046 217.38475240000312 9.999 155.80123800000095 8.016 200.44774749999993 8.239 216.02273810000221 10.548 160.0701600999988 10.799 159.4995522000005 9.174 156.38898359999945 8.91 157.34218979999937 10.405 215.03248540000197 9.61 200.56873110000006 9.02 170.33231069999863 9.901 236.788298300002 9.231 144.48429680000012 9.117)
Error minima by case: (2.8223 4 5.7194 7 20.4131 7 17.7151 6 8.6113 5 14.0597 6 0.1042 5 8.969 7 2.7649 4 2.9535 7 8.0 6 0.0944 4 3.5167 4 0.506 6 9.9882 4 6.8672 7 24.0428 6 0.4979 3 0.0064 4 6.8259 5 13.0 6 32.002 6 9.2929 7 40.111 5 0.2175 5)
Average genome size in population (length): 134.441
Average program size in population (points): 135.441
Average percent parens in population: 0.007
Minimum age in population: 185.305199025264
Maximum age in population: 189.2230372022918
Average age in population: 187.3863040289679
Median age in population: 187.4143078901731
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.565
Error (vector) diversity:			 0.625
Behavioral diversity:				 0.635
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 347662715
--- Timings ---
Current time: 1529615610328 milliseconds
Total Time:         722.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.4 seconds, 28.0%
Fitness Testing:    410.4 seconds, 56.8%
Report:             109.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 133
Size: 134
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3994.1165571999995
Median total errors in population: 1245.9438
Error averages by case: (125.88090290000159 9.79 132.97672770000042 10.216 125.50292569999937 9.857 172.64640229999986 9.83 119.65976759999951 9.115 114.53044520000103 8.301 108.19011470000143 11.224 154.0548453999996 10.479 160.45857370000178 10.427 147.80542950000083 9.105 128.20711829999914 9.615 138.02983229999947 8.925 204.61856680000224 9.992 141.05055750000056 7.88 183.73246679999997 8.125 186.1699684000017 10.387 140.4318367 10.699 144.44723710000008 9.027 142.7021596999999 8.751 119.19124599999968 10.253 191.8705582000018 9.371 185.70473400000031 8.849 156.0298193999996 9.884 224.29281140000185 9.187 107.53150990000034 9.111)
Error minima by case: (2.1797 7 4.3364 8 27.2128 7 41.6488 7 8.6421 7 14.9157 6 0.1705 6 0.1844 6 4.7638 6 2.9535 8 17.3355 8 0.0944 5 2.5192 6 0.5071 5 7.9882 6 85.8852 8 28.8819 8 0.4952 6 0.0064 5 5.8279 7 31.5239 7 35.9322 6 1.7071 7 71.1134 6 0.2037 6)
Average genome size in population (length): 134.115
Average program size in population (points): 135.115
Average percent parens in population: 0.007
Minimum age in population: 186.305199025264
Maximum age in population: 190.4931340691698
Average age in population: 188.6256279513837
Median age in population: 188.6657371315425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.943
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.943
Total error diversity:				 0.59
Error (vector) diversity:			 0.64
Behavioral diversity:				 0.648
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 351016090
--- Timings ---
Current time: 1529615616717 milliseconds
Total Time:         728.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.9 seconds, 28.0%
Fitness Testing:    414.2 seconds, 56.8%
Report:             110.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 68545.84989999994
Test mean error for best: 34.27292
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction float_shove} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 float_shove float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_shove integer_inc float_div integer_inc float_dup integer_swap integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger integer_dup integer_inc integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4444.925575299999
Median total errors in population: 1247.4730499999998
Error averages by case: (144.95705520000124 9.998 147.15213970000116 10.309 139.84990029999943 10.062 187.69888520000018 10.078 143.12806879999897 9.278 128.4744153000013 8.548 126.89572050000166 11.318 171.45688979999926 10.591 178.45266920000188 10.644 166.20564290000016 9.275 145.65892069999924 9.793 156.55299239999897 9.146 221.23420750000278 10.14 159.2148024000008 8.042 203.29555849999957 8.368 203.2699560000021 10.537 156.62002119999923 10.816 162.96280660000062 9.266 160.87998449999918 8.95 143.3485816999996 10.44 207.08321030000153 9.617 201.64566490000013 8.984 176.8328218999987 9.999 240.28682920000188 9.326 128.97383060000018 9.269)
Error minima by case: (1.8203 8 5.4242 8 20.4131 7 42.7151 8 8.6122 7 14.0597 6 0.1685 9 10.1844 7 3.7637 9 1.9535 6 17.3507 7 0.0931 6 7.5191 7 0.506 6 5.9882 5 85.9003 7 28.8661 8 0.4979 7 0.0064 6 4.8259 7 32.5246 7 36.998 6 8.2929 7 76.1134 7 0.2168 6)
Average genome size in population (length): 134.175
Average program size in population (points): 135.175
Average percent parens in population: 0.007
Minimum age in population: 187.7436291120231
Maximum age in population: 192.044001881914
Average age in population: 189.8712941359599
Median age in population: 189.9305068533374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.935
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.935
Total error diversity:				 0.611
Error (vector) diversity:			 0.65
Behavioral diversity:				 0.657
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 354370940
--- Timings ---
Current time: 1529615623184 milliseconds
Total Time:         735.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.4 seconds, 27.9%
Fitness Testing:    418.0 seconds, 56.9%
Report:             111.8 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub 36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4161.3632986
Median total errors in population: 1247.48175
Error averages by case: (123.81577720000139 9.916 129.3666123000005 10.263 124.89197859999962 10.014 173.1675427000001 9.909 127.0539163999995 9.172 115.32139690000093 8.497 112.44884170000124 11.286 165.12782279999948 10.469 172.63650470000167 10.482 164.19882050000055 9.163 125.34473309999937 9.673 151.52634679999943 8.981 216.56349900000257 9.995 154.20229110000062 7.951 198.57596960000018 8.232 193.3262992000017 10.482 138.4858575 10.725 157.82738700000027 9.129 154.92043809999956 8.821 129.06795779999973 10.34 188.70121410000152 9.48 185.03570660000042 8.939 170.75603969999895 9.878 235.82720140000168 9.198 113.01414380000021 9.164)
Error minima by case: (3.1797 7 2.3953 4 23.8323 5 7.2711 7 8.6776 7 1.0 4 0.1705 6 5.8287 5 3.7641 5 3.9535 7 1.0 4 0.0944 4 3.5211 5 0.4828 5 7.0125 5 5.0 5 3.0428 8 0.4959 5 0.0065 4 1.1731 7 29.4754 7 12.9882 6 7.7202 5 72.1154 6 0.2116 6)
Average genome size in population (length): 133.568
Average program size in population (points): 134.568
Average percent parens in population: 0.007
Minimum age in population: 188.7436291120231
Maximum age in population: 193.02820104982
Average age in population: 191.0903068058007
Median age in population: 191.1261690431136
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.614
Error (vector) diversity:			 0.655
Behavioral diversity:				 0.661
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 357710304
--- Timings ---
Current time: 1529615629542 milliseconds
Total Time:         741.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.8 seconds, 27.9%
Fitness Testing:    421.8 seconds, 56.9%
Report:             112.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_mult} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_dec} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_shove} {:instruction float_shove} {:instruction integer_min} {:instruction float_pop} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction float_dec} {:instruction float_inc} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_shove} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_mult 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_rot float_dup tagged_308 integer_dec float_add integer_shove integer_fromfloat float_flush integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_dup_items integer_dup_times float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_shove float_shove integer_min float_pop 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult integer_dup_times print_integer float_mult integer_fromfloat 15 float_dec float_inc 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin integer_shove float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4178.067741299999
Median total errors in population: 1245.47505
Error averages by case: (130.29989740000147 9.93 139.2603285000011 10.292 127.02138269999936 9.971 179.22776389999984 9.977 128.7656048999994 9.211 119.910140500001 8.485 112.40219830000127 11.293 161.72004329999976 10.492 168.84348190000162 10.528 160.9656247000006 9.153 133.14905079999934 9.738 146.19024279999977 8.949 214.29639700000232 9.997 149.47643050000062 7.993 195.34500150000002 8.21 190.18274660000196 10.504 144.55930519999976 10.759 153.29802370000007 9.128 150.86409519999995 8.836 128.71579159999982 10.399 194.91727220000178 9.54 189.67340880000043 8.986 169.52853899999923 9.893 233.2036938000016 9.181 115.6922765000001 9.114)
Error minima by case: (1.1797 7 4.7536 7 20.4131 7 26.2849 7 8.6776 7 9.0 6 0.1705 6 0.1693 7 2.7639 7 2.0625 7 1.0 6 0.1063 5 1.5188 7 0.3717 6 8.5375 5 5.0 7 22.0566 8 0.4979 7 0.0064 6 1.1721 7 33.5246 7 32.002 6 10.8605 7 56.0 7 0.2037 6)
Average genome size in population (length): 132.478
Average program size in population (points): 133.478
Average percent parens in population: 0.008
Minimum age in population: 190.1227928736275
Maximum age in population: 194.3828316444325
Average age in population: 192.4621767620079
Median age in population: 192.4993133286946
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.944
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.944
Total error diversity:				 0.56
Error (vector) diversity:			 0.609
Behavioral diversity:				 0.615
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 361022632
--- Timings ---
Current time: 1529615635519 milliseconds
Total Time:         747.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.2 seconds, 27.8%
Fitness Testing:    425.5 seconds, 56.9%
Report:             114.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 68545.84989999994
Test mean error for best: 34.27292
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction float_shove} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_div} {:instruction integer_yank} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_rot} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 float_shove float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_shove integer_inc float_div integer_inc float_dup integer_swap integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger integer_dup integer_inc integer_mod float_div integer_yank float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_rot integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items integer_flush float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4270.182998399998
Median total errors in population: 1243.9417999999998
Error averages by case: (138.6365520000016 9.89 147.91974500000208 10.268 133.7051300999988 9.958 185.86359879999992 9.911 136.01030499999874 9.172 126.5816431000018 8.469 124.21200550000223 11.269 159.05663119999915 10.471 167.58215550000213 10.459 156.31737330000036 9.1 141.60258959999894 9.692 145.9506155999991 8.968 212.01420530000365 9.956 148.08463130000123 7.97 192.34206219999913 8.156 202.19736940000237 10.495 154.7140615999992 10.74 152.31911420000043 9.027 149.23968959999956 8.793 140.65074679999947 10.365 203.41010180000214 9.463 194.5873998999997 8.934 163.76976919999856 9.849 230.7975492000026 9.138 122.98095320000017 9.124)
Error minima by case: (3.8081 7 5.399 7 20.4131 7 26.0 7 10.6756 7 14.0597 6 0.1705 6 8.969 6 4.7658 6 2.9535 6 8.0 7 0.1061 6 8.5211 6 0.5201 6 7.9882 5 12.0 7 24.0428 7 0.4978 6 0.0064 5 5.0 7 13.0 6 21.9882 5 9.2929 6 49.0 6 0.2168 6)
Average genome size in population (length): 132.105
Average program size in population (points): 133.105
Average percent parens in population: 0.008
Minimum age in population: 191.1431378428371
Maximum age in population: 195.894349118344
Average age in population: 193.7913914959685
Median age in population: 193.8741765537331
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.942
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.942
Total error diversity:				 0.539
Error (vector) diversity:			 0.58
Behavioral diversity:				 0.588
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 364325296
--- Timings ---
Current time: 1529615641720 milliseconds
Total Time:         754.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.6 seconds, 27.8%
Fitness Testing:    429.4 seconds, 56.9%
Report:             114.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_min} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_add} {:instruction integer_shove} {:instruction integer_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float integer_min float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_add integer_shove integer_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3926.177610899998
Median total errors in population: 1245.4732
Error averages by case: (121.93475070000122 9.906 136.33131130000123 10.307 121.73741149999941 10.019 171.68299550000015 9.94 121.72979499999953 9.244 112.93523020000082 8.476 108.22231410000117 11.288 148.19347479999982 10.477 153.9361623000016 10.479 143.20312560000107 9.113 124.5369961999994 9.723 131.7517837999999 8.916 199.8923155000022 9.917 135.22284410000054 7.925 180.48226940000032 8.165 186.7142452000016 10.505 140.7493393999997 10.761 138.34220779999978 9.067 136.1823569000002 8.757 123.65841039999972 10.365 186.55196560000164 9.489 184.1071002000001 9.014 153.2446560999997 9.854 218.17899680000176 9.117 106.73655250000033 9.095)
Error minima by case: (2.1797 8 3.0 6 20.4131 7 28.2711 8 8.6123 7 1.0 6 1.8295 9 8.969 7 3.7641 8 2.9535 6 1.0 6 0.1061 6 2.5192 7 0.506 6 9.986 5 5.0 7 24.0428 8 0.4979 7 0.0064 7 6.7625 8 18.4596 7 33.9882 6 3.2778 6 71.1134 7 0.2168 7)
Average genome size in population (length): 132.212
Average program size in population (points): 133.212
Average percent parens in population: 0.008
Minimum age in population: 192.9333524786039
Maximum age in population: 197.3092351607409
Average age in population: 195.1722917479696
Median age in population: 195.2115956917626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.939
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.939
Total error diversity:				 0.554
Error (vector) diversity:			 0.589
Behavioral diversity:				 0.601
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 367630796
--- Timings ---
Current time: 1529615647631 milliseconds
Total Time:         760.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.0 seconds, 27.8%
Fitness Testing:    433.0 seconds, 57.0%
Report:             115.8 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_div} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_add} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction tagged_429} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_swap} {:instruction print_float} {:instruction float_frominteger} {:instruction 62} {:instruction integer_dup_times} {:instruction float_swap} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction integer_sub} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction integer_shove} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_div tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_add integer_inc float_swap integer_inc tagged_429 integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc float_frominteger integer_div integer_inc integer_min float_frominteger print_float integer_dup_times integer_inc integer_sub float_swap print_float float_frominteger 62 integer_dup_times float_swap 79.28096162990369 integer_yank in1 integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add integer_sub in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times float_dup_times integer_shove print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 3889.9596652999985
Median total errors in population: 1243.7322
Error averages by case: (125.58517310000151 9.808 132.44531340000108 10.24 119.50289379999934 9.901 169.6377615 9.854 121.26300939999946 9.125 111.97130870000096 8.359 104.47718090000136 11.241 145.61532700000043 10.433 151.16484260000152 10.383 141.65736920000126 8.987 126.15981679999933 9.553 129.33421760000004 8.804 197.76144380000227 9.876 132.8826630000003 7.795 176.54436550000045 8.035 187.32859870000175 10.453 138.56524750000005 10.677 135.8846683999994 8.896 133.1352833000005 8.66 123.85084359999972 10.298 189.13474860000167 9.385 181.9391021000003 8.883 150.28142599999987 9.79 217.38878110000184 9.036 108.96627970000024 9.01)
Error minima by case: (3.8203 7 3.3953 8 4.801 7 43.4479 7 8.6776 7 1.4495 6 1.1705 6 4.1844 6 2.7638 6 4.8743 6 4.7257 8 0.0931 6 3.5185 6 0.2756 5 4.0118 5 4.8694 8 28.9434 8 0.496 6 0.0064 5 5.0 6 33.2594 7 37.9317 6 7.6951 8 58.1524 6 0.2052 6)
Average genome size in population (length): 132.235
Average program size in population (points): 133.235
Average percent parens in population: 0.008
Minimum age in population: 193.9333524786039
Maximum age in population: 198.3605688695466
Average age in population: 196.3836411961258
Median age in population: 196.3840492747768
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.93
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.93
Total error diversity:				 0.515
Error (vector) diversity:			 0.555
Behavioral diversity:				 0.567
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 370936871
--- Timings ---
Current time: 1529615653656 milliseconds
Total Time:         766.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.4 seconds, 27.7%
Fitness Testing:    436.8 seconds, 57.0%
Report:             116.7 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 68545.84989999994
Test mean error for best: 34.27292
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction float_shove} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 float_shove float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yank integer_inc integer_min integer_shove integer_inc float_div integer_inc float_dup integer_swap integer_inc integer_min integer_mod integer_inc integer_mod integer_inc integer_div integer_inc float_mod float_frominteger integer_dup integer_inc integer_min float_frominteger float_frominteger print_float integer_inc integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger print_float float_mod float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 131
Size: 132
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4241.345245599998
Median total errors in population: 1246.4740499999998
Error averages by case: (132.79662940000213 9.888 148.60311970000188 10.275 136.21752789999871 9.981 186.63854650000005 9.978 137.68480599999882 9.229 130.72529380000157 8.483 119.36606950000167 11.264 156.40127719999984 10.466 166.87859750000197 10.483 157.69638810000086 9.104 135.38402959999883 9.684 144.37933389999927 8.97 210.01143380000244 9.961 145.44097160000106 7.942 192.09490150000033 8.208 196.9911842000022 10.496 153.5414371999998 10.743 151.10844450000005 9.105 148.8073838999997 8.785 136.84673859999953 10.385 197.89426250000196 9.44 200.70352640000024 8.998 163.2577276999994 9.88 229.20547570000187 9.193 122.58713890000014 9.142)
Error minima by case: (0.7567 7 4.7055 7 8.197 7 26.0 7 9.6776 6 4.1001 6 0.1677 6 8.969 6 0.7658 6 2.9382 6 1.68 7 0.1031 5 1.5193 6 0.1179 6 1.0118 5 12.0 7 31.9434 7 0.4979 6 0.0084 5 1.828 6 13.0 7 34.9628 6 9.2776 6 49.0 6 0.2175 6)
Average genome size in population (length): 131.947
Average program size in population (points): 132.947
Average percent parens in population: 0.008
Minimum age in population: 195.2432802205283
Maximum age in population: 200.0296610692774
Average age in population: 197.7081736828866
Median age in population: 197.7619383754392
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.54
Error (vector) diversity:			 0.575
Behavioral diversity:				 0.585
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 374235696
--- Timings ---
Current time: 1529615659698 milliseconds
Total Time:         772.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.9 seconds, 27.7%
Fitness Testing:    440.4 seconds, 57.0%
Report:             117.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction print_float} {:instruction float_mod} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction float_dup_items} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times print_float float_mod float_shove float_sin float_dec 79.28096162990369 float_dup_items in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4419.2994344
Median total errors in population: 1245.484
Error averages by case: (130.37833620000185 9.936 140.11997550000143 10.312 129.47079969999908 9.991 181.82876220000006 9.97 129.5203822999994 9.24 124.77596320000129 8.468 113.02977560000134 11.276 182.01141939999906 10.522 189.820703200002 10.485 181.5020763000006 9.169 129.58161439999938 9.748 168.58198049999896 8.99 231.85553080000287 10.014 171.01307010000113 7.921 216.0832932000002 8.242 192.6442840000022 10.512 146.7554635 10.753 174.8948074000007 9.098 171.99823449999914 8.817 133.5943865999997 10.36 192.88814630000192 9.506 192.3823657000005 9.011 189.2301266999986 9.87 250.31568190000198 9.18 114.52025520000021 9.111)
Error minima by case: (3.8203 8 5.4229 8 2.801 7 43.6489 7 8.6756 7 14.0597 6 0.1705 9 8.969 8 3.2342 8 6.9535 8 12.68 8 0.1045 6 5.5213 8 0.5081 6 6.0125 6 55.8714 8 28.9414 8 0.4979 7 0.0064 7 6.8279 8 25.4596 7 37.9318 6 3.2798 7 74.1155 6 0.2174 6)
Average genome size in population (length): 132.426
Average program size in population (points): 133.426
Average percent parens in population: 0.008
Minimum age in population: 196.8165323543838
Maximum age in population: 201.1268465922975
Average age in population: 199.007553990809
Median age in population: 199.0243503026422
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.538
Error (vector) diversity:			 0.572
Behavioral diversity:				 0.586
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 377546421
--- Timings ---
Current time: 1529615665675 milliseconds
Total Time:         778.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.3 seconds, 27.7%
Fitness Testing:    444.2 seconds, 57.1%
Report:             118.4 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 68541.84989999994
Test mean error for best: 34.27092
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction float_yank} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_float_663} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 integer_yankdup float_dup float_yank tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_yankdup integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush integer_mod integer_inc float_min float_dec integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc integer_fromfloat float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger integer_inc integer_sub float_frominteger print_float float_mod tag_float_663 float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_rot integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 136
Size: 137
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4319.159081999998
Median total errors in population: 1245.7063999999998
Error averages by case: (138.63540400000093 9.947 155.63846670000197 10.336 141.26345729999866 9.986 190.92443400000008 9.972 137.49454649999865 9.247 134.3449416000018 8.519 126.7422052000021 11.371 160.44577579999947 10.482 167.2804092000017 10.554 159.04423330000026 9.083 140.51770519999894 9.697 145.5948034999991 9.053 210.3321541000026 9.964 148.94084480000083 7.976 194.10969499999985 8.263 199.70046060000217 10.496 160.0687521999989 10.755 152.52341440000038 9.168 149.40642009999954 8.886 136.8541051999995 10.472 202.93510120000215 9.515 203.01216070000007 8.967 167.5415536999986 9.847 230.76368140000167 9.206 124.08435630000025 9.198)
Error minima by case: (2.1797 5 4.7536 4 17.1416 4 17.7138 5 8.6776 4 11.8996 4 0.1685 4 10.1844 4 1.2701 5 1.9535 4 6.254 4 0.0941 5 2.5211 4 0.3717 6 9.0125 5 12.0 4 28.9434 5 0.4978 5 0.0064 4 0.8279 5 13.0 5 32.0013 4 8.2929 4 49.0 5 0.2167 4)
Average genome size in population (length): 131.991
Average program size in population (points): 132.991
Average percent parens in population: 0.008
Minimum age in population: 198.068841853894
Maximum age in population: 202.3521779106089
Average age in population: 200.2604255517948
Median age in population: 200.2802919453174
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.536
Error (vector) diversity:			 0.569
Behavioral diversity:				 0.579
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 380846246
--- Timings ---
Current time: 1529615671813 milliseconds
Total Time:         784.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.9 seconds, 27.7%
Fitness Testing:    447.8 seconds, 57.1%
Report:             119.3 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 68257.84989999996
Test mean error for best: 34.12892
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.013801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_shove} {:instruction float_sin} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_298} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 41.86305353052913} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction integer_rot} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush integer_shove integer_fromfloat in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_dup integer_inc float_flush integer_mod integer_mod integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger float_dup_times integer_dup_times integer_inc integer_sub float_frominteger integer_stackdepth float_dup float_shove float_sin float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_298 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 41.86305353052913 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 integer_rot float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.998 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4805
Mean: 24.60961
Genome size: 127
Size: 128
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4537.5570503
Median total errors in population: 1246.4742499999998
Error averages by case: (134.68216560000147 9.852 157.03492370000146 10.216 139.26208679999908 9.938 189.55788980000005 9.888 142.8888484999992 9.199 133.96764670000124 8.471 125.67770540000147 11.178 181.16667149999913 10.424 186.9199807000018 10.441 178.14320500000005 9.11 139.52277319999928 9.664 165.8448529999988 8.864 228.85326490000278 9.93 168.04574390000093 7.919 213.15543709999983 8.137 201.8611884000021 10.418 158.5211069999992 10.726 172.14814140000087 9.037 170.24940619999924 8.808 140.87870029999976 10.332 201.82100690000198 9.461 203.55371030000018 8.941 187.48602099999846 9.784 248.4457839000018 9.129 128.94378910000026 9.058)
Error minima by case: (2.8203 8 4.7536 8 27.0673 8 39.7151 7 8.6776 7 14.156 6 0.1685 8 10.1713 8 4.6995 8 1.9404 8 6.3197 7 0.0946 6 4.5211 8 0.3717 6 0.2077 6 20.6762 7 28.9434 8 1.4952 7 0.0064 7 6.8279 7 29.5246 7 33.996 6 8.2798 7 53.9196 7 0.2167 7)
Average genome size in population (length): 130.905
Average program size in population (points): 131.905
Average percent parens in population: 0.008
Minimum age in population: 199.068841853894
Maximum age in population: 203.6843939538545
Average age in population: 201.5954021826651
Median age in population: 201.6290281202437
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.955
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.955
Total error diversity:				 0.538
Error (vector) diversity:			 0.591
Behavioral diversity:				 0.597
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 384119046
--- Timings ---
Current time: 1529615677633 milliseconds
Total Time:         789.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.2 seconds, 27.6%
Fitness Testing:    451.4 seconds, 57.1%
Report:             120.2 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank 36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4248.0731769999975
Median total errors in population: 1246.4742499999998
Error averages by case: (135.02443970000115 9.736 150.23565090000142 10.168 138.22287269999907 9.773 186.70493930000004 9.797 129.1399078999994 9.061 132.05849870000117 8.313 125.71579830000135 11.118 159.29184229999981 10.343 167.8809289000016 10.366 154.4998956000006 8.962 137.86883979999925 9.531 146.48775129999953 8.793 211.12579620000253 9.856 147.62623220000077 7.831 191.69199190000015 8.046 194.75456590000195 10.357 155.74492229999936 10.599 152.9983667000002 8.947 150.1047777999999 8.692 133.27331449999963 10.265 198.84008260000147 9.357 199.25644680000008 8.867 164.77381959999914 9.717 231.18282660000168 9.035 117.1036685000001 8.935)
Error minima by case: (2.1797 2 5.4229 8 27.2285 7 39.7136 2 6.6756 2 14.9308 6 0.1044 1 12.1713 2 4.7658 2 3.9404 2 17.3491 7 0.1062 2 2.5211 2 0.505 6 7.9882 2 85.899 8 26.9434 3 0.4959 2 0.0064 1 0.1721 2 25.4596 2 33.9965 3 10.2798 8 71.1154 2 0.2175 1)
Average genome size in population (length): 130.493
Average program size in population (points): 131.493
Average percent parens in population: 0.008
Minimum age in population: 200.5017030570322
Maximum age in population: 204.9185551899272
Average age in population: 203.0089616575994
Median age in population: 203.0668366719174
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.946
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.527
Error (vector) diversity:			 0.562
Behavioral diversity:				 0.573
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 387381496
--- Timings ---
Current time: 1529615683813 milliseconds
Total Time:         796.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.7 seconds, 27.6%
Fitness Testing:    455.1 seconds, 57.2%
Report:             121.1 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 integer_yank 36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4632.376838999999
Median total errors in population: 1245.0961
Error averages by case: (155.89154300000078 9.93 162.6822249000016 10.333 147.48607099999887 10.005 197.33286160000003 9.947 149.00319289999914 9.231 140.52820180000154 8.503 135.24135650000147 11.296 175.30029599999938 10.432 184.31144670000188 10.506 172.24745010000044 9.106 155.29737419999918 9.69 161.74064929999918 8.874 226.36332710000246 9.92 165.26864700000058 7.948 207.7104439999998 8.166 212.2875962000021 10.536 169.0238074999992 10.762 167.88572540000035 9.048 166.10819089999958 8.791 153.40253759999945 10.424 218.86964750000206 9.538 207.9355101999999 8.995 180.10186279999917 9.828 244.79651250000205 9.069 135.5933623000001 9.089)
Error minima by case: (0.1797 5 5.4229 8 20.4131 8 28.2711 5 8.6735 5 14.0597 6 0.1705 4 12.1713 4 5.7657 4 3.9404 4 17.3455 8 0.1061 4 1.5211 4 0.506 6 6.0118 4 29.8721 8 19.0559 6 0.4952 4 0.0064 3 5.0 5 31.5246 5 33.9882 6 10.2798 7 69.1154 4 0.2167 4)
Average genome size in population (length): 130.672
Average program size in population (points): 131.672
Average percent parens in population: 0.008
Minimum age in population: 201.5017030570322
Maximum age in population: 206.2082150768423
Average age in population: 204.3310693507799
Median age in population: 204.4070317396819
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.536
Error (vector) diversity:			 0.575
Behavioral diversity:				 0.586
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 390648471
--- Timings ---
Current time: 1529615689847 milliseconds
Total Time:         802.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.1 seconds, 27.6%
Fitness Testing:    458.8 seconds, 57.2%
Report:             122.1 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4363.8330604
Median total errors in population: 1245.7204499999998
Error averages by case: (136.8119688000018 9.88 150.08435220000183 10.232 136.3315529999987 9.908 186.48375530000013 9.871 141.9477229999988 9.167 126.38924430000158 8.362 121.63914000000202 11.204 167.23699169999912 10.498 175.62810870000197 10.493 164.19010690000042 9.106 138.917587099999 9.65 152.2806288999989 8.968 217.8910448000034 10.001 154.51263610000095 7.937 199.37374599999927 8.179 202.84020530000222 10.458 152.60917319999962 10.701 158.86302070000045 9.101 156.82591209999936 8.824 143.80713389999943 10.33 200.952701200002 9.449 198.87408149999987 8.936 173.04779269999844 9.843 237.29158420000238 9.185 129.6128688000002 9.107)
Error minima by case: (3.7561 6 2.6047 7 1.9479 7 26.0 7 8.6776 7 8.8999 6 0.1705 6 11.1713 6 4.7378 6 2.9404 6 8.0 7 0.1053 6 3.5211 6 0.3343 6 5.9875 6 12.0 7 28.9414 8 0.5041 5 0.0064 5 5.0 7 13.0 7 33.996 6 9.2798 6 49.0 6 0.2167 6)
Average genome size in population (length): 129.99
Average program size in population (points): 130.99
Average percent parens in population: 0.008
Minimum age in population: 203.2120064052179
Maximum age in population: 207.6461144813244
Average age in population: 205.6588580849006
Median age in population: 205.6811224639599
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.534
Error (vector) diversity:			 0.571
Behavioral diversity:				 0.581
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 393898385
--- Timings ---
Current time: 1529615696162 milliseconds
Total Time:         808.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.5 seconds, 27.5%
Fitness Testing:    462.6 seconds, 57.2%
Report:             123.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4412.4514229999995
Median total errors in population: 1247.4789500000002
Error averages by case: (148.5410693000008 9.907 148.12602790000133 10.271 141.65891889999907 9.987 187.51872350000002 9.956 145.45789929999916 9.216 133.51331110000115 8.501 125.91885440000141 11.201 163.08557099999967 10.469 171.04871970000164 10.459 163.06783400000032 9.087 154.6300937999992 9.753 150.7512123999994 8.965 214.44231010000237 9.995 152.14975970000054 7.877 198.42366699999988 8.207 211.58663390000203 10.515 153.46338989999907 10.756 156.5178744000002 9.104 153.33071089999999 8.804 150.6283292999999 10.319 210.22394780000167 9.595 198.52110300000055 9.017 170.25618529999903 9.871 234.78875610000162 9.203 134.60752030000023 9.158)
Error minima by case: (3.8203 8 3.0 6 27.2021 7 7.7026 8 8.6362 7 1.0 6 0.1695 7 9.1713 7 5.7636 8 0.9404 7 1.0 6 0.0931 6 4.5211 8 0.1641 6 0.8638 5 5.0 7 11.8653 8 0.4979 7 0.0084 6 0.1899 7 2.4728 7 1.9411 6 7.2798 6 53.2634 7 0.2167 7)
Average genome size in population (length): 130.072
Average program size in population (points): 131.072
Average percent parens in population: 0.008
Minimum age in population: 204.367692258202
Maximum age in population: 209.125256505901
Average age in population: 206.9989228466777
Median age in population: 207.0613813733495
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.546
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.595
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 397150358
--- Timings ---
Current time: 1529615702117 milliseconds
Total Time:         814.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.9 seconds, 27.5%
Fitness Testing:    466.2 seconds, 57.2%
Report:             124.2 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3933.875473999999
Median total errors in population: 1246.2071999999998
Error averages by case: (118.43273760000157 9.802 130.49342190000127 10.198 116.52086609999928 9.889 166.8213735000001 9.87 116.87289949999935 9.158 110.10811930000114 8.381 103.11759730000136 11.16 153.90470889999972 10.423 160.96946170000157 10.415 154.42727010000064 9.079 117.0434464999992 9.633 140.19607959999962 8.839 206.46485670000266 9.937 142.52728510000063 7.88 189.2743061999999 8.159 178.84641340000167 10.404 135.55422750000008 10.671 145.8308093999999 9.027 142.68794320000003 8.749 115.68511619999977 10.284 180.91234480000156 9.405 179.2853391000001 8.907 162.26047849999907 9.817 225.64994840000193 9.097 101.78542350000035 9.019)
Error minima by case: (5.1797 7 5.4249 6 20.4131 6 36.6491 6 8.6122 6 14.0597 6 0.1685 9 8.969 6 2.7673 8 0.9397 5 17.351 6 0.0931 6 5.5211 5 0.506 6 9.0118 6 8.1286 6 28.8661 5 1.5021 8 0.0064 6 2.8259 7 26.4606 5 30.932 4 8.2798 5 74.1154 6 0.2167 7)
Average genome size in population (length): 129.791
Average program size in population (points): 130.791
Average percent parens in population: 0.008
Minimum age in population: 205.367692258202
Maximum age in population: 210.7508013447324
Average age in population: 208.2260934922097
Median age in population: 208.2167328208407
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.947
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.947
Total error diversity:				 0.554
Error (vector) diversity:			 0.582
Behavioral diversity:				 0.589
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 400395272
--- Timings ---
Current time: 1529615708355 milliseconds
Total Time:         820.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.3 seconds, 27.5%
Fitness Testing:    470.2 seconds, 57.3%
Report:             125.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4265.3142337
Median total errors in population: 1246.4806000000003
Error averages by case: (143.5476929000006 9.986 152.1983176000012 10.317 133.15743079999933 10.024 186.2091230000001 9.987 138.8238635999994 9.244 125.72649330000104 8.513 128.14781660000133 11.339 154.08146769999993 10.468 164.0657236000013 10.482 155.01682070000038 9.133 144.1095283999993 9.746 144.1418497999998 8.957 209.20030050000196 10.024 143.70502150000027 8.011 190.26348310000006 8.207 198.80197400000196 10.511 159.14817429999897 10.804 150.10799430000012 9.119 146.4458434 8.826 139.24968279999996 10.392 204.22823400000178 9.582 195.3545886000005 9.008 163.51980939999933 9.941 230.06273620000158 9.208 124.98626360000026 9.185)
Error minima by case: (0.8203 7 5.3793 8 14.803 7 26.0 7 8.6122 7 14.0597 6 0.1705 6 8.969 6 1.7658 6 2.9535 5 8.0 7 0.0944 5 1.519 6 0.1903 6 6.0118 5 12.0 7 28.8773 8 0.484 6 0.0064 5 0.8259 7 12.5246 7 33.9988 6 9.2929 6 70.1132 6 0.2167 6)
Average genome size in population (length): 130.032
Average program size in population (points): 131.032
Average percent parens in population: 0.008
Minimum age in population: 206.367692258202
Maximum age in population: 211.6044450837288
Average age in population: 209.5814108627399
Median age in population: 209.6147620004758
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.945
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.945
Total error diversity:				 0.538
Error (vector) diversity:			 0.576
Behavioral diversity:				 0.587
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 403646222
--- Timings ---
Current time: 1529615714345 milliseconds
Total Time:         826.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       226.8 seconds, 27.4%
Fitness Testing:    473.8 seconds, 57.3%
Report:             126.0 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 68261.87819999996
Test mean error for best: 34.13094
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_integer} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_551} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction float_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger print_integer float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_551 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min float_inc float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4223.661990500001
Median total errors in population: 1246.47665
Error averages by case: (138.39905010000126 9.908 150.80086250000144 10.28 139.29845439999886 9.975 190.62380580000004 10.033 135.1678147999993 9.223 132.54861100000133 8.531 124.85757450000168 11.231 153.72343509999968 10.472 161.69729650000176 10.485 150.7098922000011 9.04 136.76401099999907 9.669 139.63437729999936 8.886 205.61716420000212 9.949 142.07686130000073 7.912 187.4291140000002 8.203 201.14524240000188 10.496 158.4301092999995 10.778 146.7373937999999 9.072 142.60251009999996 8.81 138.6402748999996 10.378 201.3037169000018 9.544 198.32819370000024 9.013 159.83394999999928 9.879 225.2525999000015 9.106 122.02267480000026 9.144)
Error minima by case: (3.8203 8 4.769 7 8.952 7 26.0 8 7.6776 7 5.1001 6 0.1693 9 7.1691 6 1.7657 8 1.0616 6 8.0 7 0.0931 6 8.5211 6 0.5059 5 13.0102 5 12.0 7 27.9434 8 0.4979 7 0.0063 7 9.8259 7 13.0 7 36.998 6 5.2778 6 49.0 7 0.2175 7)
Average genome size in population (length): 130.155
Average program size in population (points): 131.155
Average percent parens in population: 0.008
Minimum age in population: 208.647373959108
Maximum age in population: 213.1793697225413
Average age in population: 210.8695651825919
Median age in population: 210.8470237469175
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.544
Error (vector) diversity:			 0.584
Behavioral diversity:				 0.593
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 406900372
--- Timings ---
Current time: 1529615720850 milliseconds
Total Time:         832.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.3 seconds, 27.4%
Fitness Testing:    477.5 seconds, 57.3%
Report:             126.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 68236.87989999996
Test mean error for best: 34.11844
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_swap} {:instruction integer_inc} {:instruction float_flush} {:instruction float_dup} {:instruction integer_inc} {:instruction float_min} {:instruction float_div} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_div} {:instruction integer_inc} {:instruction float_mod} {:instruction float_frominteger} {:instruction print_float} {:instruction float_frominteger} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_fromfloat float_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc float_swap integer_inc float_flush float_dup integer_inc float_min float_div integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_div integer_inc float_mod float_frominteger print_float float_frominteger tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 130
Size: 131
Percent parens: 0.008
--- Population Statistics ---
Average total errors in population: 4581.1865875
Median total errors in population: 1247.2064500000001
Error averages by case: (141.71935280000093 9.882 156.28917130000147 10.21 142.49627599999906 9.977 193.23692909999997 9.909 142.29204279999905 9.183 134.74193060000113 8.497 127.35890280000145 11.178 180.90856909999945 10.451 188.8005424000017 10.481 178.25067820000007 9.112 145.6158308999992 9.641 167.2831429999989 8.963 229.5928317000028 9.954 170.8529151000008 7.983 213.0230323999996 8.26 201.92003530000167 10.437 162.70768089999925 10.701 173.80599080000053 9.142 170.0562776999994 8.883 143.12176959999962 10.292 204.24183530000184 9.482 204.3877981000001 9.011 186.78461429999868 9.858 250.88678920000189 9.174 131.0926481000001 9.058)
Error minima by case: (0.8203 7 1.3949 8 22.2128 8 28.2711 7 8.6776 7 5.8999 6 0.1692 6 14.8287 5 5.7299 5 7.9404 5 8.32 7 0.1063 5 1.5211 5 0.1903 6 7.0118 5 8.8714 8 24.0428 8 0.4959 5 0.0064 4 0.1721 7 11.4596 7 33.9882 6 10.2788 7 70.1154 5 0.2175 6)
Average genome size in population (length): 130.437
Average program size in population (points): 131.437
Average percent parens in population: 0.008
Minimum age in population: 209.647373959108
Maximum age in population: 214.6517459403195
Average age in population: 212.2272338692961
Median age in population: 212.2511886924606
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.579
Error (vector) diversity:			 0.62
Behavioral diversity:				 0.633
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 410161597
--- Timings ---
Current time: 1529615727157 milliseconds
Total Time:         839.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.8 seconds, 27.4%
Fitness Testing:    481.3 seconds, 57.3%
Report:             128.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4719.045075699998
Median total errors in population: 1247.4742999999999
Error averages by case: (149.47676910000087 9.911 160.47751090000156 10.288 149.97757019999892 10.002 197.13239429999996 10.008 146.721496099999 9.246 140.39413770000135 8.482 134.43116110000156 11.265 188.4747372999994 10.529 193.82631220000184 10.52 185.03389779999998 9.175 150.01210139999915 9.752 174.89334409999887 9.006 236.0576591000026 10.072 175.33345650000072 7.966 217.8241110999997 8.29 207.78291170000213 10.493 166.1577821999993 10.78 180.10677480000052 9.159 176.4882427999995 8.846 147.82806459999955 10.386 210.0818014000018 9.549 209.08208560000043 9.037 193.46962379999863 9.931 254.818860900002 9.246 132.03426900000022 9.189)
Error minima by case: (0.7829 8 4.3677 8 12.6376 7 42.7113 7 8.6756 7 13.8668 6 1.1705 9 12.1844 7 2.7657 7 3.9535 7 7.68 7 0.1061 6 1.519 8 0.506 6 7.0118 6 27.8694 8 31.9434 8 0.4979 7 0.0064 7 3.7566 7 32.5184 7 36.9775 6 10.2929 7 51.8436 7 0.2175 6)
Average genome size in population (length): 131.229
Average program size in population (points): 132.229
Average percent parens in population: 0.008
Minimum age in population: 210.647373959108
Maximum age in population: 216.6043331787147
Average age in population: 213.5677995085251
Median age in population: 213.6422360203759
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.94
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.94
Total error diversity:				 0.584
Error (vector) diversity:			 0.622
Behavioral diversity:				 0.631
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 413442483
--- Timings ---
Current time: 1529615733349 milliseconds
Total Time:         845.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.5 seconds, 27.4%
Fitness Testing:    484.8 seconds, 57.3%
Report:             129.2 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction integer_mult} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 36.15340410350262 36.15340410350262 integer_yankdup float_dup integer_yankdup integer_mult integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_stackdepth float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 138
Size: 139
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4498.348300900001
Median total errors in population: 1247.4807
Error averages by case: (135.7444277000013 9.989 158.48830370000158 10.294 138.50403479999926 10.112 188.8679952999997 10.077 136.68048929999927 9.347 130.78291320000108 8.605 127.53171560000142 11.258 178.0834483999996 10.577 185.49207740000185 10.554 178.4392145000008 9.227 137.08114259999934 9.825 165.40365799999947 9.033 227.9407835000021 10.092 163.42688530000092 8.038 212.21524980000024 8.335 194.42830690000153 10.588 161.35038369999955 10.869 169.68856550000015 9.219 169.02885069999957 8.916 135.17049119999987 10.393 201.05129680000178 9.641 201.117271800001 9.16 188.54859539999873 9.964 247.66311580000166 9.28 123.01208400000014 9.214)
Error minima by case: (1.1797 7 4.3067 5 11.197 5 26.0 6 8.6167 5 1.1001 5 0.1705 8 12.1713 5 3.7658 8 3.9404 5 1.32 5 0.1061 6 1.5211 5 0.3717 5 5.0118 5 11.1286 5 23.0566 6 1.502 8 0.0063 6 10.7569 7 13.0 6 32.9977 5 10.2798 5 22.1154 6 0.2167 7)
Average genome size in population (length): 132.747
Average program size in population (points): 133.747
Average percent parens in population: 0.008
Minimum age in population: 212.2567125375859
Maximum age in population: 216.9521211956428
Average age in population: 214.9099395382263
Median age in population: 214.9626106574634
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.602
Error (vector) diversity:			 0.645
Behavioral diversity:				 0.652
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 416761458
--- Timings ---
Current time: 1529615739750 milliseconds
Total Time:         852.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.3 seconds, 27.4%
Fitness Testing:    488.5 seconds, 57.3%
Report:             130.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_sub} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_div} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_div integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_sub float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_div in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4713.051910800001
Median total errors in population: 1248.9131499999999
Error averages by case: (149.37816650000053 9.969 163.15629550000162 10.256 151.48496029999905 10.008 199.23562830000006 10.022 150.8072037999992 9.273 143.53252340000117 8.58 138.4099661000011 11.216 184.34549809999936 10.54 190.0112099000017 10.506 180.1288740999999 9.195 152.7297409999993 9.842 170.39059399999923 9.085 233.1300824000026 10.073 172.89381260000073 7.987 213.0846087999996 8.329 210.177823500002 10.482 169.43827639999938 10.762 177.02260550000065 9.174 172.04326899999955 8.918 152.32164919999946 10.338 212.15490480000176 9.629 210.04259000000138 9.059 187.8843534999985 9.941 251.44597380000164 9.306 136.0263003000001 9.285)
Error minima by case: (1.178 8 0.3923 8 7.8376 7 26.0 7 7.4269 7 12.3513 6 0.1685 9 11.1844 8 4.7658 8 2.9535 7 8.0 8 0.0941 6 1.5191 8 0.0548 5 4.014 5 2.838 8 24.0428 8 0.4979 7 0.0064 6 8.1734 6 13.0 7 29.7473 6 9.2929 8 4.4053 7 0.2168 7)
Average genome size in population (length): 134.285
Average program size in population (points): 135.285
Average percent parens in population: 0.007
Minimum age in population: 214.0488883998009
Maximum age in population: 218.2174820963291
Average age in population: 216.2619359803216
Median age in population: 216.2863940245074
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.597
Error (vector) diversity:			 0.66
Behavioral diversity:				 0.665
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 420118833
--- Timings ---
Current time: 1529615746159 milliseconds
Total Time:         858.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.9 seconds, 27.4%
Fitness Testing:    492.4 seconds, 57.4%
Report:             131.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction tagged_308} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_swap} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup tagged_308 36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times print_float integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult float_swap float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4634.386082699999
Median total errors in population: 1246.4785000000002
Error averages by case: (139.80211860000125 9.881 156.17762180000173 10.211 149.65940889999874 10.008 191.76476229999983 9.913 149.04303129999874 9.156 135.09468940000153 8.481 124.21544370000154 11.227 187.26129859999918 10.417 192.6221686000018 10.454 186.0803359000002 9.12 137.7767188999991 9.668 172.89064269999912 8.914 235.75854400000256 9.919 173.99410300000102 7.925 218.4506395000001 8.212 202.93442870000197 10.454 154.73823289999947 10.69 177.9528836000008 9.089 176.15949559999927 8.817 145.25502989999956 10.214 203.45948890000165 9.522 201.00823100000184 8.962 190.85054609999847 9.816 254.6904828000019 9.121 137.42773600000018 9.127)
Error minima by case: (1.8203 7 4.5647 6 20.4131 5 23.6489 6 6.6256 5 14.0597 6 1.1281 9 2.1326 5 4.7688 7 3.9535 4 16.3512 5 0.0944 6 5.5211 5 0.0762 6 1.0118 6 10.8694 5 24.1228 6 0.4957 7 0.0064 6 4.8279 7 26.5241 5 15.6948 4 8.7418 5 53.1154 6 0.2155 7)
Average genome size in population (length): 136.787
Average program size in population (points): 137.787
Average percent parens in population: 0.007
Minimum age in population: 215.348426922335
Maximum age in population: 219.5045999753857
Average age in population: 217.5582040228677
Median age in population: 217.5704616090505
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.952
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.576
Error (vector) diversity:			 0.622
Behavioral diversity:				 0.633
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 423538983
--- Timings ---
Current time: 1529615752096 milliseconds
Total Time:         864.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.2 seconds, 27.3%
Fitness Testing:    496.1 seconds, 57.4%
Report:             131.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 68254.87989999996
Test mean error for best: 34.12744
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_rot} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_514} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_yank float_add integer_shove integer_fromfloat float_flush integer_stackdepth integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc float_rot integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min float_shove integer_inc integer_mod integer_inc tagged_514 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 146
Size: 147
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4802.6217811999995
Median total errors in population: 1248.4792
Error averages by case: (154.03394700000104 9.927 160.8416710000016 10.296 153.83023859999886 10.058 202.13715219999995 9.998 155.0009805999987 9.262 143.15281980000165 8.588 135.09919350000138 11.253 191.75187919999922 10.534 195.89490510000186 10.515 185.37860849999998 9.202 155.49669919999894 9.757 175.4061482999989 9.059 238.95830280000283 10.015 176.92593850000088 7.985 218.88233980000012 8.362 213.78013580000214 10.486 169.0289740999994 10.824 182.9229545000009 9.182 178.93072469999913 8.927 157.0477006999994 10.313 215.81942860000194 9.616 206.87966030000214 9.082 193.2387266999983 9.948 258.0201482000018 9.26 142.4685035000002 9.245)
Error minima by case: (2.1777 8 2.3953 4 17.803 4 26.0 5 8.6776 4 11.8999 4 0.0785 9 8.969 5 1.1186 8 1.9633 5 8.0 4 0.1061 6 2.5211 5 0.504 6 3.9882 6 12.0 4 28.9434 5 1.4979 7 0.0064 6 1.264 7 13.0 5 36.996 3 10.2929 5 49.0 6 0.2167 7)
Average genome size in population (length): 139.244
Average program size in population (points): 140.244
Average percent parens in population: 0.007
Minimum age in population: 216.348426922335
Maximum age in population: 220.6955376446773
Average age in population: 218.8340771287406
Median age in population: 218.8885603178523
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.962
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.557
Error (vector) diversity:			 0.614
Behavioral diversity:				 0.62
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 427020458
--- Timings ---
Current time: 1529615758385 milliseconds
Total Time:         870.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.6 seconds, 27.3%
Fitness Testing:    500.0 seconds, 57.4%
Report:             132.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_sin} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 36.15340410350262 integer_sub float_dup tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_mod integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_pop float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_sin 79.28096162990369 integer_yank in1 integer_yankdup integer_swap float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_min integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 139
Size: 140
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4512.1374904
Median total errors in population: 1247.4789
Error averages by case: (140.89282840000112 9.814 151.39081170000148 10.211 143.18641859999894 9.949 191.13155340000014 9.875 144.79908909999884 9.099 131.65051100000142 8.462 126.7261293000017 11.176 176.09225119999962 10.454 183.1865239000019 10.458 173.28434290000033 9.108 145.8834783999992 9.596 162.78326779999944 8.943 225.8412710000028 9.965 163.8871323000007 7.905 207.92409029999996 8.191 203.00589510000214 10.414 158.6914534999994 10.689 169.14169980000017 9.07 166.57883749999982 8.85 146.33645099999939 10.201 205.511605900002 9.504 195.52959440000194 8.96 181.5872051999987 9.85 245.1422692000018 9.157 132.92277950000005 9.129)
Error minima by case: (1.1797 8 1.3953 7 12.199 7 19.7027 7 5.6776 7 6.9019 6 0.1695 8 8.969 6 4.7658 8 2.9535 6 0.746 7 0.1061 6 2.5201 6 0.3127 6 0.0129 6 4.127 7 25.9434 8 0.4979 7 0.0071 6 3.1164 8 6.5272 7 35.9987 6 9.2929 6 24.5433 6 0.2168 6)
Average genome size in population (length): 139.945
Average program size in population (points): 140.945
Average percent parens in population: 0.007
Minimum age in population: 217.348426922335
Maximum age in population: 221.9825891726209
Average age in population: 220.143471058285
Median age in population: 220.1846772353671
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.562
Error (vector) diversity:			 0.606
Behavioral diversity:				 0.613
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 430519333
--- Timings ---
Current time: 1529615764900 milliseconds
Total Time:         877.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.3 seconds, 27.3%
Fitness Testing:    504.0 seconds, 57.5%
Report:             133.8 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 68257.87989999996
Test mean error for best: 34.12894
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015794     
Correct output: -5.4090974816  | Program output: 38.013801     
Correct output: -27.2127680421 | Program output: 8.013801      
Correct output: 122.7288713888 | Program output: 27.013801     
Correct output: 94.6913893946  | Program output: 79.013794     
Correct output: -14.9157086017 | Program output: 15.015801     
Correct output: 9.1842992567   | Program output: 24.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -61.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 7.015507      
Correct output: -19.9068842187 | Program output: -19.01316     
Correct output: -82.5342639546 | Program output: -2.01316      
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -6.01316      
Correct output: -85.885174074  | Program output: 7.013794      
Correct output: 126.9572193111 | Program output: 79.013801     
Correct output: -41.5110180666 | Program output: -49.01316     
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 79.013794     
Correct output: 112.5403599984 | Program output: 14.015794     
Correct output: 117.0118101936 | Program output: 9.015801      
Correct output: 25.2929380926  | Program output: -5.01316      
Correct output: -119.128542356 | Program output: -19.01316     
Correct output: 79.7963324215  | Program output: 79.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_dup} {:instruction integer_yankdup} {:instruction float_mod} {:instruction integer_sub} {:instruction float_dup} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction integer_dec} {:instruction integer_sub} {:instruction float_inc} {:instruction tagged_363} {:instruction 36.15340410350262} {:instruction float_dup} {:instruction tagged_363} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_sin} {:instruction integer_inc} {:instruction integer_min} {:instruction float_rot} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_swap} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction tag_integer_551} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dec} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup float_dup 36.15340410350262 integer_yankdup float_dup integer_yankdup float_mod integer_sub float_dup tagged_363 36.15340410350262 integer_dec integer_sub float_inc tagged_363 36.15340410350262 float_dup tagged_363 integer_yank float_add integer_shove integer_fromfloat float_flush float_swap integer_fromfloat float_tan integer_yank in2 float_dup_times integer_mod float_sin integer_inc integer_min float_rot integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_swap float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add tag_integer_551 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items integer_dec float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [23.8203 9 43.4229 10 35.2266 9 95.7151 9 15.6776 8 29.9315 7 14.8295 11 20.1713 10 28.2342 10 17.9404 8 24.351 8 0.8937 8 80.5211 9 7.5203 7 58.9882 7 92.899 10 47.9434 10 7.5021 8 4.9936 8 25.1721 10 98.5246 8 107.996 8 30.3061 9 100.1154 8 0.7825 8]
Total: 1230.4785
Mean: 24.60957
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4500.394237499999
Median total errors in population: 1246.4789
Error averages by case: (149.4706802000007 9.838 151.6997524000015 10.178 141.9127826999992 9.958 193.98677109999988 9.868 145.81312859999886 9.113 133.63153620000142 8.429 128.39150170000173 11.107 173.5637129999995 10.415 179.03686770000166 10.383 170.39680130000005 9.076 148.23323989999915 9.686 157.72863089999916 8.862 221.84037370000252 9.923 159.8038120000009 7.901 203.2722645999998 8.16 207.4067699000021 10.422 159.627635299999 10.664 163.09894470000052 9.03 160.42309919999957 8.785 147.80116909999944 10.184 209.69897090000183 9.476 201.5877885000024 8.977 178.58774199999868 9.822 241.86206080000161 9.098 133.08820110000022 9.075)
Error minima by case: (1.1777 8 4.5683 8 0.6416 8 32.9096 8 4.8722 7 12.9387 6 0.8294 9 8.969 8 2.905 8 2.9535 7 10.5188 8 0.1061 6 1.519 8 0.091 6 6.0118 5 30.8714 8 28.9414 8 0.4689 7 0.9916 7 5.8279 7 22.7211 7 27.1926 6 0.7222 7 70.1132 7 0.2116 6)
Average genome size in population (length): 140.367
Average program size in population (points): 141.367
Average percent parens in population: 0.007
Minimum age in population: 219.1805302131073
Maximum age in population: 223.3350967680213
Average age in population: 221.4211746715833
Median age in population: 221.4447144047677
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.955
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.955
Total error diversity:				 0.552
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.613
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 434028808
--- Timings ---
Current time: 1529615771497 milliseconds
Total Time:         883.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.1 seconds, 27.3%
Fitness Testing:    507.8 seconds, 57.5%
Report:             134.7 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 69658.04650000001
Test mean error for best: 34.82902
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.052801     
Correct output: -5.4090974816  | Program output: 23.013801     
Correct output: -27.2127680421 | Program output: 7.013801      
Correct output: 122.7288713888 | Program output: 23.013801     
Correct output: 94.6913893946  | Program output: 22.079791     
Correct output: -14.9157086017 | Program output: 9.016801      
Correct output: 9.1842992567   | Program output: 13.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -24.01316     
Correct output: 18.9535126473  | Program output: 7.01316       
Correct output: -17.3355427007 | Program output: -19.08757     
Correct output: -19.9068842187 | Program output: -16.01316     
Correct output: -82.5342639546 | Program output: 6.01316       
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: 0.01316       
Correct output: -85.885174074  | Program output: -91.012801    
Correct output: 126.9572193111 | Program output: 42.013801     
Correct output: -41.5110180666 | Program output: -27.01316     
Correct output: -19.0067113372 | Program output: -4.01316      
Correct output: 53.8417318683  | Program output: 49.013801     
Correct output: 112.5403599984 | Program output: 8.013801      
Correct output: 117.0118101936 | Program output: 8.070801      
Correct output: 25.2929380926  | Program output: 5.01316       
Correct output: -119.128542356 | Program output: -11.01316     
Correct output: 79.7963324215  | Program output: 73.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_cos} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_min} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction in2} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction integer_sub} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult float_cos float_dup_items print_integer float_mult integer_fromfloat float_dup_items float_dup_times float_mult integer_mult float_dup_items float_min float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush in2 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 integer_sub float_min float_stackdepth print_integer integer_add)
Errors: [24.7833 9 28.4229 10 34.2266 8 99.7151 9 72.6116 10 23.9325 9 3.8295 11 20.1713 10 8.7658 10 11.9404 9 1.752 9 3.8937 9 88.5474 11 7.5203 7 65.0145 9 5.1276 9 84.9434 9 14.4979 9 14.9936 9 4.8279 9 104.5266 12 108.941 9 20.2798 9 108.1154 8 6.7825 9]
Total: 1200.1626
Mean: 24.003252
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4651.5297773
Median total errors in population: 1248.4744999999998
Error averages by case: (144.58669630000094 9.848 162.64539260000143 10.205 154.3959987999989 10.004 197.99913490000014 9.942 149.23199429999897 9.16 140.98499110000125 8.475 135.2224188000012 11.145 181.40213389999928 10.48 186.45494640000175 10.401 178.98389390000023 9.14 150.8065062999991 9.695 166.11082439999905 8.913 230.4726547000028 9.982 167.66155340000086 7.916 211.23397499999987 8.126 207.13759670000198 10.454 169.94147719999881 10.713 172.25014280000065 9.044 170.92733909999933 8.781 148.1663401999993 10.216 209.97911520000187 9.514 205.49252500000205 9.004 187.38860669999843 9.865 249.412175900002 9.185 133.34234370000027 9.091)
Error minima by case: (2.8203 7 1.3953 8 3.823 7 2.4877 7 8.6121 7 8.1004 6 1.154 6 0.1713 6 2.7658 6 2.0596 6 0.746 8 0.1044 6 3.5191 6 0.3738 5 5.9882 6 4.127 8 24.0428 8 0.4952 6 0.0064 5 4.8279 7 0.3238 7 9.7953 6 10.2929 8 72.1134 6 0.2175 6)
Average genome size in population (length): 140.063
Average program size in population (points): 141.063
Average percent parens in population: 0.007
Minimum age in population: 220.1805302131073
Maximum age in population: 224.5935758122485
Average age in population: 222.6922257851177
Median age in population: 222.7487152782348
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.551
Error (vector) diversity:			 0.601
Behavioral diversity:				 0.61
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 437530983
--- Timings ---
Current time: 1529615778141 milliseconds
Total Time:         890.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.6 seconds, 27.3%
Fitness Testing:    511.9 seconds, 57.5%
Report:             135.7 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 69582.87250000004
Test mean error for best: 34.79144
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015794     
Correct output: -5.4090974816  | Program output: 23.013801     
Correct output: -27.2127680421 | Program output: 7.013801      
Correct output: 122.7288713888 | Program output: 23.013801     
Correct output: 94.6913893946  | Program output: 22.013794     
Correct output: -14.9157086017 | Program output: 9.015801      
Correct output: 9.1842992567   | Program output: 13.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -24.01316     
Correct output: 18.9535126473  | Program output: 7.01316       
Correct output: -17.3355427007 | Program output: -19.015571    
Correct output: -19.9068842187 | Program output: -16.01316     
Correct output: -82.5342639546 | Program output: 6.01316       
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: 0.01316       
Correct output: -85.885174074  | Program output: -91.013794    
Correct output: 126.9572193111 | Program output: 42.013801     
Correct output: -41.5110180666 | Program output: -27.01316     
Correct output: -19.0067113372 | Program output: -4.01316      
Correct output: 53.8417318683  | Program output: 49.013794     
Correct output: 112.5403599984 | Program output: 8.015794      
Correct output: 117.0118101936 | Program output: 8.015801      
Correct output: 25.2929380926  | Program output: 5.01316       
Correct output: -119.128542356 | Program output: -11.01316     
Correct output: 79.7963324215  | Program output: 73.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [24.8203 9 28.4229 10 34.2266 8 99.7151 9 72.6776 8 23.9315 8 3.8295 11 20.1713 10 8.7658 10 11.9404 9 1.68 8 3.8937 9 88.5474 11 7.5203 7 65.0145 9 5.1286 9 84.9434 9 14.4979 9 14.9936 9 4.8279 10 104.5246 9 108.996 8 20.2798 9 108.1154 8 6.7825 9]
Total: 1193.2466
Mean: 23.864931
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4790.776746100001
Median total errors in population: 1247.7053
Error averages by case: (155.95357250000072 9.794 162.60201390000165 10.167 154.23281229999893 9.905 202.0736617 9.852 162.06622689999872 9.083 143.57798580000156 8.416 132.91888690000144 11.104 187.26429929999898 10.393 194.4068395000018 10.453 185.61266159999988 9.034 152.58752679999895 9.585 172.7481371999988 8.946 235.66608100000295 9.932 175.22080840000112 7.906 219.40603439999978 8.194 214.29251440000218 10.354 169.66469409999885 10.637 180.22453370000122 9.066 176.12893199999894 8.855 158.8791558999995 10.163 214.43986610000184 9.489 211.31447930000255 8.964 192.65370549999813 9.805 254.35298270000214 9.131 144.20033420000013 9.06)
Error minima by case: (1.8203 8 2.8561 8 10.844 8 6.4958 8 8.6756 7 8.1686 6 0.1705 9 7.1713 8 4.7658 9 1.0596 6 1.5922 7 0.1062 6 2.4789 8 0.2161 6 9.9863 6 0.8714 7 14.0428 8 0.4979 7 0.0064 7 4.8279 8 28.4596 7 23.9882 6 5.2798 7 25.7129 7 0.2175 6)
Average genome size in population (length): 139.855
Average program size in population (points): 140.855
Average percent parens in population: 0.007
Minimum age in population: 221.7754542993622
Maximum age in population: 226.2061935191334
Average age in population: 224.0486868889021
Median age in population: 224.080053814767
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.536
Error (vector) diversity:			 0.585
Behavioral diversity:				 0.589
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 441027783
--- Timings ---
Current time: 1529615784270 milliseconds
Total Time:         896.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       244.0 seconds, 27.2%
Fitness Testing:    515.7 seconds, 57.5%
Report:             136.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 69582.87250000004
Test mean error for best: 34.79144
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015794     
Correct output: -5.4090974816  | Program output: 23.013801     
Correct output: -27.2127680421 | Program output: 7.013801      
Correct output: 122.7288713888 | Program output: 23.013801     
Correct output: 94.6913893946  | Program output: 22.013794     
Correct output: -14.9157086017 | Program output: 9.015801      
Correct output: 9.1842992567   | Program output: 13.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -24.01316     
Correct output: 18.9535126473  | Program output: 7.01316       
Correct output: -17.3355427007 | Program output: -19.015571    
Correct output: -19.9068842187 | Program output: -16.01316     
Correct output: -82.5342639546 | Program output: 6.01316       
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: 0.01316       
Correct output: -85.885174074  | Program output: -91.013794    
Correct output: 126.9572193111 | Program output: 42.013801     
Correct output: -41.5110180666 | Program output: -27.01316     
Correct output: -19.0067113372 | Program output: -4.01316      
Correct output: 53.8417318683  | Program output: 49.013794     
Correct output: 112.5403599984 | Program output: 8.015794      
Correct output: 117.0118101936 | Program output: 8.015801      
Correct output: 25.2929380926  | Program output: 5.01316       
Correct output: -119.128542356 | Program output: -11.01316     
Correct output: 79.7963324215  | Program output: 73.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [24.8203 9 28.4229 10 34.2266 8 99.7151 9 72.6776 8 23.9315 8 3.8295 11 20.1713 10 8.7658 10 11.9404 9 1.68 8 3.8937 9 88.5474 11 7.5203 7 65.0145 9 5.1286 9 84.9434 9 14.4979 9 14.9936 9 4.8279 10 104.5246 9 108.996 8 20.2798 9 108.1154 8 6.7825 9]
Total: 1193.2466
Mean: 23.864931
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4125.1941492
Median total errors in population: 1247.4741
Error averages by case: (121.0498938000017 9.757 138.43241680000128 10.152 125.74127089999925 9.912 173.05466369999982 9.857 127.46514939999923 9.082 116.85340600000126 8.387 110.3246470000014 11.059 162.80158459999976 10.401 168.80934960000155 10.363 162.80802420000094 9.051 123.7886329999991 9.669 149.6799994999994 8.864 214.82991490000285 9.895 148.40685730000064 7.837 194.54952760000012 8.145 185.57207350000192 10.358 144.08246409999998 10.594 154.35614340000012 9.0 154.61671559999985 8.711 126.28692309999965 10.124 186.2763590000016 9.451 178.1896238000016 8.963 167.0842485999992 9.78 234.57437040000164 9.093 118.01988940000018 9.035)
Error minima by case: (1.1797 5 0.3953 7 6.199 7 26.0 5 7.6776 5 7.8999 6 0.128 4 12.8287 5 2.7658 5 5.9535 6 1.68 7 0.0931 4 1.5211 5 0.3997 6 5.0118 5 5.1228 7 24.0428 6 0.4952 5 0.0064 4 4.7576 5 13.0 6 30.996 5 11.2798 6 49.0 5 0.2167 4)
Average genome size in population (length): 140.182
Average program size in population (points): 141.182
Average percent parens in population: 0.007
Minimum age in population: 222.8180275983405
Maximum age in population: 227.5311935982346
Average age in population: 225.3389139901924
Median age in population: 225.3847033300862
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.951
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.951
Total error diversity:				 0.567
Error (vector) diversity:			 0.61
Behavioral diversity:				 0.616
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 444532958
--- Timings ---
Current time: 1529615790740 milliseconds
Total Time:         903.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.5 seconds, 27.2%
Fitness Testing:    519.7 seconds, 57.6%
Report:             137.7 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 69582.87250000004
Test mean error for best: 34.79144
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015794     
Correct output: -5.4090974816  | Program output: 23.013801     
Correct output: -27.2127680421 | Program output: 7.013801      
Correct output: 122.7288713888 | Program output: 23.013801     
Correct output: 94.6913893946  | Program output: 22.013794     
Correct output: -14.9157086017 | Program output: 9.015801      
Correct output: 9.1842992567   | Program output: 13.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -24.01316     
Correct output: 18.9535126473  | Program output: 7.01316       
Correct output: -17.3355427007 | Program output: -19.015571    
Correct output: -19.9068842187 | Program output: -16.01316     
Correct output: -82.5342639546 | Program output: 6.01316       
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: 0.01316       
Correct output: -85.885174074  | Program output: -91.013794    
Correct output: 126.9572193111 | Program output: 42.013801     
Correct output: -41.5110180666 | Program output: -27.01316     
Correct output: -19.0067113372 | Program output: -4.01316      
Correct output: 53.8417318683  | Program output: 49.013794     
Correct output: 112.5403599984 | Program output: 8.015794      
Correct output: 117.0118101936 | Program output: 8.015801      
Correct output: 25.2929380926  | Program output: 5.01316       
Correct output: -119.128542356 | Program output: -11.01316     
Correct output: 79.7963324215  | Program output: 73.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [24.8203 9 28.4229 10 34.2266 8 99.7151 9 72.6776 8 23.9315 8 3.8295 11 20.1713 10 8.7658 10 11.9404 9 1.68 8 3.8937 9 88.5474 11 7.5203 7 65.0145 9 5.1286 9 84.9434 9 14.4979 9 14.9936 9 4.8279 10 104.5246 9 108.996 8 20.2798 9 108.1154 8 6.7825 9]
Total: 1193.2466
Mean: 23.864931
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4512.1868861
Median total errors in population: 1247.9397999999999
Error averages by case: (144.86205690000082 9.828 156.5065255000016 10.179 145.85203109999887 9.874 197.07113100000012 9.873 149.86933229999872 9.105 138.2841811000015 8.471 130.65800020000174 11.102 171.1530891999991 10.407 177.92953110000155 10.43 169.4927733999999 9.127 142.8419852999992 9.677 157.04839589999898 9.002 221.12132700000248 10.061 158.1356727000007 7.948 204.75617399999982 8.241 203.28873770000186 10.403 165.2693521999989 10.649 164.8554580000007 9.149 160.76291639999943 8.885 149.03917949999934 10.177 204.2791110000018 9.561 206.01750240000231 8.955 177.54291879999855 9.858 239.93212540000192 9.241 136.29037800000017 9.124)
Error minima by case: (0.8203 8 4.2191 8 16.3002 8 23.7151 8 4.3224 7 12.9835 6 0.154 8 7.1706 7 0.7658 8 2.9535 7 1.6776 7 0.0946 6 1.4902 7 0.1708 6 1.0118 5 5.127 8 24.0428 9 0.9015 7 0.0084 6 0.1721 7 13.5252 7 17.996 6 9.2929 7 13.5952 6 0.2165 7)
Average genome size in population (length): 139.763
Average program size in population (points): 140.763
Average percent parens in population: 0.007
Minimum age in population: 224.3071180042145
Maximum age in population: 228.8136545137161
Average age in population: 226.5657459819795
Median age in population: 226.5766226881279
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.559
Error (vector) diversity:			 0.603
Behavioral diversity:				 0.616
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 448027658
--- Timings ---
Current time: 1529615796746 milliseconds
Total Time:         909.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.8 seconds, 27.2%
Fitness Testing:    523.4 seconds, 57.6%
Report:             138.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 69582.87250000004
Test mean error for best: 34.79144
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015794     
Correct output: -5.4090974816  | Program output: 23.013801     
Correct output: -27.2127680421 | Program output: 7.013801      
Correct output: 122.7288713888 | Program output: 23.013801     
Correct output: 94.6913893946  | Program output: 22.013794     
Correct output: -14.9157086017 | Program output: 9.015801      
Correct output: 9.1842992567   | Program output: 13.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -24.01316     
Correct output: 18.9535126473  | Program output: 7.01316       
Correct output: -17.3355427007 | Program output: -19.015571    
Correct output: -19.9068842187 | Program output: -16.01316     
Correct output: -82.5342639546 | Program output: 6.01316       
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: 0.01316       
Correct output: -85.885174074  | Program output: -91.013794    
Correct output: 126.9572193111 | Program output: 42.013801     
Correct output: -41.5110180666 | Program output: -27.01316     
Correct output: -19.0067113372 | Program output: -4.01316      
Correct output: 53.8417318683  | Program output: 49.013794     
Correct output: 112.5403599984 | Program output: 8.015794      
Correct output: 117.0118101936 | Program output: 8.015801      
Correct output: 25.2929380926  | Program output: 5.01316       
Correct output: -119.128542356 | Program output: -11.01316     
Correct output: 79.7963324215  | Program output: 73.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_div} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_div tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [24.8203 9 28.4229 10 34.2266 8 99.7151 9 72.6776 8 23.9315 8 3.8295 11 20.1713 10 8.7658 10 11.9404 9 1.68 8 3.8937 9 88.5474 11 7.5203 7 65.0145 9 5.1286 9 84.9434 9 14.4979 9 14.9936 9 4.8279 10 104.5246 9 108.996 8 20.2798 9 108.1154 8 6.7825 9]
Total: 1193.2466
Mean: 23.864931
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3934.173431700001
Median total errors in population: 1244.4808000000003
Error averages by case: (119.50679810000142 9.846 133.6476186000011 10.163 124.50895969999927 9.897 175.98462890000002 9.874 125.66996919999951 9.145 113.68119540000109 8.457 105.33631320000119 11.112 149.2119837000001 10.463 154.74613890000114 10.392 147.97158840000088 9.105 118.00013949999949 9.655 135.37092909999973 8.853 201.76593750000188 10.05 139.0579287000003 7.88 181.46499090000026 8.226 175.46480810000156 10.328 144.54996309999987 10.622 142.0751107999997 9.058 140.10938180000016 8.764 120.56988489999979 10.168 182.9213978000017 9.591 183.33605170000178 8.929 151.3553299999997 9.827 220.6403500000013 9.075 108.63903370000017 9.107)
Error minima by case: (3.8203 6 0.3953 8 7.199 7 15.7151 6 4.6756 6 0.0994 6 0.1695 5 0.1713 6 1.7658 6 3.9535 6 0.3304 7 0.0944 6 4.5211 6 0.5074 5 1.9882 5 1.1269 8 24.0428 7 0.4957 6 0.9909 5 0.8279 6 5.5246 6 33.9882 6 1.7202 7 17.8846 6 0.2037 5)
Average genome size in population (length): 139.867
Average program size in population (points): 140.867
Average percent parens in population: 0.007
Minimum age in population: 225.3071180042145
Maximum age in population: 229.8957839798771
Average age in population: 227.8798623793504
Median age in population: 227.9115806552998
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.589
Error (vector) diversity:			 0.627
Behavioral diversity:				 0.635
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 451525083
--- Timings ---
Current time: 1529615803005 milliseconds
Total Time:         915.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.4 seconds, 27.1%
Fitness Testing:    527.2 seconds, 57.6%
Report:             139.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 69742.18520000002
Test mean error for best: 34.87109
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 28.015794     
Correct output: -5.4090974816  | Program output: 25.013801     
Correct output: -27.2127680421 | Program output: 9.013801      
Correct output: 122.7288713888 | Program output: 25.013801     
Correct output: 94.6913893946  | Program output: 24.013794     
Correct output: -14.9157086017 | Program output: 11.015801     
Correct output: 9.1842992567   | Program output: 15.013801     
Correct output: 27.1844373898  | Program output: 9.01316       
Correct output: -32.7789176398 | Program output: -22.01316     
Correct output: 18.9535126473  | Program output: 9.01316       
Correct output: -17.3355427007 | Program output: -17.015507    
Correct output: -19.9068842187 | Program output: -14.01316     
Correct output: -82.5342639546 | Program output: 8.01316       
Correct output: -0.5071453016  | Program output: 9.01316       
Correct output: -65.0013149084 | Program output: 2.01316       
Correct output: -85.885174074  | Program output: -89.013794    
Correct output: 126.9572193111 | Program output: 44.013801     
Correct output: -41.5110180666 | Program output: -25.01316     
Correct output: -19.0067113372 | Program output: -2.01316      
Correct output: 53.8417318683  | Program output: 51.013794     
Correct output: 112.5403599984 | Program output: 10.015794     
Correct output: 117.0118101936 | Program output: 10.015801     
Correct output: 25.2929380926  | Program output: 7.01316       
Correct output: -119.128542356 | Program output: -9.01316      
Correct output: 79.7963324215  | Program output: 75.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float integer_swap tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [22.8203 9 30.4229 9 36.2266 9 97.7151 9 70.6776 7 25.9315 7 5.8295 11 18.1713 11 10.7658 9 9.9404 9 0.32 6 5.8937 9 90.5474 10 9.5203 7 67.0145 9 3.1286 8 82.9434 10 16.4979 9 16.9936 9 2.8279 9 102.5246 8 106.996 7 18.2798 10 110.1154 9 4.7825 9]
Total: 1185.8866
Mean: 23.717731
Genome size: 143
Size: 144
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4470.061057700004
Median total errors in population: 1245.8285999999998
Error averages by case: (140.80339820000103 9.988 144.99954080000117 10.179 138.81334079999905 10.028 189.43508689999982 10.06 155.54927629999898 9.426 124.73527540000099 9.018 121.093841200001 11.067 177.62219999999934 10.524 179.14764350000067 10.511 174.24206240000038 9.487 132.59399739999935 9.833 164.96889969999924 9.136 227.3593833000022 10.575 162.31459700000082 8.093 209.1426336999998 8.681 176.4079568000006 10.218 168.53453449999898 10.669 172.20565290000047 9.426 169.43170239999944 9.111 140.41060069999986 10.202 205.46747690000151 10.079 193.95898630000144 9.187 178.388800099999 10.018 247.22770920000184 9.312 130.8994613000001 9.479)
Error minima by case: (1.1639 7 2.6707 7 7.141 7 19.7137 8 8.6776 7 0.0981 6 0.1693 7 3.8287 6 2.4783 6 2.9384 7 0.254 6 0.1063 5 0.4789 6 0.091 5 3.9882 5 2.1336 8 24.0428 8 0.5021 6 0.0064 5 0.8279 7 6.5252 7 33.9882 6 3.7202 7 36.1154 6 0.2037 6)
Average genome size in population (length): 141.098
Average program size in population (points): 142.098
Average percent parens in population: 0.007
Minimum age in population: 226.9561123515324
Maximum age in population: 231.3333716011774
Average age in population: 229.1378096356264
Median age in population: 229.1584497766122
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.687
Error (vector) diversity:			 0.729
Behavioral diversity:				 0.732
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 455053508
--- Timings ---
Current time: 1529615809488 milliseconds
Total Time:         921.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.8 seconds, 27.1%
Fitness Testing:    531.1 seconds, 57.6%
Report:             140.5 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 68063.17239999991
Test mean error for best: 34.03159
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 38.015795     
Correct output: -5.4090974816  | Program output: 15.013801     
Correct output: -27.2127680421 | Program output: 50.015801     
Correct output: 122.7288713888 | Program output: 28.015801     
Correct output: 94.6913893946  | Program output: 59.015795     
Correct output: -14.9157086017 | Program output: 6.015801      
Correct output: 9.1842992567   | Program output: 11.013801     
Correct output: 27.1844373898  | Program output: 6.01316       
Correct output: -32.7789176398 | Program output: -60.01316     
Correct output: 18.9535126473  | Program output: -24.01316     
Correct output: -17.3355427007 | Program output: 6.015572      
Correct output: -19.9068842187 | Program output: -13.01316     
Correct output: -82.5342639546 | Program output: -66.01316     
Correct output: -0.5071453016  | Program output: 6.01316       
Correct output: -65.0013149084 | Program output: -71.01316     
Correct output: -85.885174074  | Program output: 6.013795      
Correct output: 126.9572193111 | Program output: 69.013801     
Correct output: -41.5110180666 | Program output: -10.01316     
Correct output: -19.0067113372 | Program output: -39.01316     
Correct output: 53.8417318683  | Program output: 30.013795     
Correct output: 112.5403599984 | Program output: 10.013795     
Correct output: 117.0118101936 | Program output: 30.015801     
Correct output: 25.2929380926  | Program output: 0.01316       
Correct output: -119.128542356 | Program output: -36.01316     
Correct output: 79.7963324215  | Program output: 90.015795     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_swap} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 float_mod float_frominteger integer_dup integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod float_sin float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_swap integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [12.8203 10 20.4229 9 77.2286 9 94.7131 10 35.6756 10 20.9315 8 1.8295 11 21.1713 11 27.2342 10 42.9667 10 23.3511 10 6.8937 9 16.5211 10 6.5203 7 6.0118 8 91.899 11 57.9434 9 31.4979 9 20.0064 8 23.8279 10 102.5266 10 86.996 8 25.2798 10 83.1154 10 10.2195 11]
Total: 1185.6036
Mean: 23.712072
Genome size: 154
Size: 155
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3753.4318410999995
Median total errors in population: 1228.2069000000001
Error averages by case: (108.43878530000086 10.014 113.27816810000064 10.03 109.03550019999963 9.898 164.3096278999997 10.012 142.77971819999956 9.543 95.45870110000051 9.363 91.06923500000059 10.777 149.01345180000007 10.489 145.11832139999956 10.398 146.15198720000058 9.827 91.39352259999961 9.777 138.6214165999997 9.259 208.34454960000116 11.187 138.05414990000025 8.18 185.68512229999945 9.121 113.38350599999984 9.812 154.05542779999945 10.455 149.99351260000014 9.733 141.99556270000002 9.378 99.99994130000016 9.981 173.53832170000112 10.569 172.99664870000097 9.286 150.21213039999995 9.993 225.18186630000176 9.377 99.17266640000004 9.691)
Error minima by case: (0.1771 8 0.6047 7 1.2802 7 7.2711 7 11.6766 7 0.0996 6 0.1042 8 6.8287 7 2.7631 8 2.9535 8 0.254 6 0.1051 6 1.5211 8 0.4371 6 1.9739 5 0.129 7 3.0428 8 0.5031 8 0.9927 6 0.1714 7 11.4596 7 16.9882 6 9.2929 8 51.1154 6 0.2167 6)
Average genome size in population (length): 141.9
Average program size in population (points): 142.9
Average percent parens in population: 0.007
Minimum age in population: 228.086202434277
Maximum age in population: 232.347786689612
Average age in population: 230.4524360320422
Median age in population: 230.4756694185832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.774
Error (vector) diversity:			 0.811
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 458601633
--- Timings ---
Current time: 1529615815918 milliseconds
Total Time:         928.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.1 seconds, 27.1%
Fitness Testing:    535.2 seconds, 57.7%
Report:             141.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 68144.06909999992
Test mean error for best: 34.07203
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 38.052801     
Correct output: -5.4090974816  | Program output: 15.013801     
Correct output: -27.2127680421 | Program output: 50.013801     
Correct output: 122.7288713888 | Program output: 28.013801     
Correct output: 94.6913893946  | Program output: 59.079790     
Correct output: -14.9157086017 | Program output: 6.016801      
Correct output: 9.1842992567   | Program output: 11.013801     
Correct output: 27.1844373898  | Program output: 6.01316       
Correct output: -32.7789176398 | Program output: -60.01316     
Correct output: 18.9535126473  | Program output: -24.01316     
Correct output: -17.3355427007 | Program output: 6.08801       
Correct output: -19.9068842187 | Program output: -13.01316     
Correct output: -82.5342639546 | Program output: -66.01316     
Correct output: -0.5071453016  | Program output: 6.01316       
Correct output: -65.0013149084 | Program output: -71.01316     
Correct output: -85.885174074  | Program output: 6.012801      
Correct output: 126.9572193111 | Program output: 69.013801     
Correct output: -41.5110180666 | Program output: -10.01316     
Correct output: -19.0067113372 | Program output: -39.01316     
Correct output: 53.8417318683  | Program output: 30.013801     
Correct output: 112.5403599984 | Program output: 10.013801     
Correct output: 117.0118101936 | Program output: 30.070801     
Correct output: 25.2929380926  | Program output: 0.01316       
Correct output: -119.128542356 | Program output: -36.01316     
Correct output: 79.7963324215  | Program output: 90.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_cos} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction float_dup_items} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_min} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction in2} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction integer_sub} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 float_mod float_frominteger integer_dup integer_inc integer_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod float_sin float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_times float_mult float_cos float_dup_items print_integer float_mult integer_fromfloat float_dup_items float_dup_times float_mult integer_mult float_dup_items float_min float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush in2 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 integer_sub float_min float_stackdepth print_integer integer_add)
Errors: [12.7833 9 20.4229 9 77.2266 9 94.7151 9 35.6116 10 20.9325 9 1.8295 11 21.1713 11 27.2342 10 42.9667 10 23.4236 12 6.8937 9 16.5211 10 6.5203 7 6.0118 8 91.898 10 57.9434 9 31.4979 9 20.0064 8 23.8279 9 102.5266 11 86.941 9 25.2798 10 83.1154 10 10.2175 10]
Total: 1185.5181
Mean: 23.710361
Genome size: 170
Size: 171
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 3534.4035561999995
Median total errors in population: 1213.99485
Error averages by case: (105.14387290000093 9.971 110.23377490000065 9.954 109.12921949999969 9.609 168.26202009999986 9.877 149.61780409999912 9.329 96.19363750000056 9.181 89.07164220000053 10.726 133.5673140000002 10.561 126.03265839999945 10.301 126.93121710000118 9.777 84.4924782999999 9.521 119.36543889999972 9.369 188.44570090000045 11.26 118.50625420000001 8.053 165.48023969999974 9.225 99.38977339999947 9.571 164.5425128999994 10.372 129.67630970000042 9.697 129.31747860000033 9.466 96.30388629999992 9.802 171.26735400000098 10.506 172.4173704000009 8.999 130.75537300000025 10.005 208.99081140000112 9.374 96.95041379999995 9.813)
Error minima by case: (0.1797 7 0.5909 6 6.197 7 8.2711 7 11.6776 7 0.0974 6 0.1541 6 6.8287 6 2.2342 5 3.9535 6 0.2482 6 0.0946 6 1.5191 6 0.0548 6 0.9862 6 0.1286 7 4.0428 8 3.4979 6 0.0064 6 0.1721 7 5.5246 7 13.9882 6 10.2929 8 30.1154 6 0.2175 7)
Average genome size in population (length): 141.996
Average program size in population (points): 142.996
Average percent parens in population: 0.007
Minimum age in population: 229.5143839526931
Maximum age in population: 233.7819741000938
Average age in population: 231.742199462486
Median age in population: 231.7888037898452
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.764
Error (vector) diversity:			 0.809
Behavioral diversity:				 0.815
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 462152008
--- Timings ---
Current time: 1529615822483 milliseconds
Total Time:         934.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.7 seconds, 27.0%
Fitness Testing:    539.2 seconds, 57.7%
Report:             142.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 68221.81099999993
Test mean error for best: 34.11091
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 39.015801     
Correct output: -5.4090974816  | Program output: 16.013801     
Correct output: -27.2127680421 | Program output: 51.015801     
Correct output: 122.7288713888 | Program output: 29.015801     
Correct output: 94.6913893946  | Program output: 60.013801     
Correct output: -14.9157086017 | Program output: 7.015801      
Correct output: 9.1842992567   | Program output: 12.013801     
Correct output: 27.1844373898  | Program output: 7.01316       
Correct output: -32.7789176398 | Program output: -59.01316     
Correct output: 18.9535126473  | Program output: -23.01316     
Correct output: -17.3355427007 | Program output: 7.015524      
Correct output: -19.9068842187 | Program output: -12.01316     
Correct output: -82.5342639546 | Program output: -65.01316     
Correct output: -0.5071453016  | Program output: 7.01316       
Correct output: -65.0013149084 | Program output: -70.01316     
Correct output: -85.885174074  | Program output: 7.013801      
Correct output: 126.9572193111 | Program output: 70.013801     
Correct output: -41.5110180666 | Program output: -9.01316      
Correct output: -19.0067113372 | Program output: -38.01316     
Correct output: 53.8417318683  | Program output: 31.013801     
Correct output: 112.5403599984 | Program output: 11.015801     
Correct output: 117.0118101936 | Program output: 31.015801     
Correct output: 25.2929380926  | Program output: 1.01316       
Correct output: -119.128542356 | Program output: -35.01316     
Correct output: 79.7963324215  | Program output: 91.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction integer_mult} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_mod} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_551} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat float_flush integer_mult integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub float_mod integer_swap integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_551 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot integer_rot float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [11.8203 10 21.4229 10 78.2286 9 93.7131 10 34.6776 9 21.9315 8 2.8295 11 20.1713 10 26.2342 10 41.9667 10 24.3511 9 7.8937 9 17.5211 10 7.5203 7 5.0118 8 92.899 10 56.9434 10 32.4979 9 19.0064 9 22.8279 9 101.5246 9 85.996 7 24.2798 10 84.1154 10 11.2175 10]
Total: 1179.6015999999997
Mean: 23.592031
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4345.969476799998
Median total errors in population: 1212.1837500000001
Error averages by case: (138.0279580000012 9.985 142.05276920000102 9.987 134.50770389999929 9.694 188.92256720000006 9.852 179.93078729999863 9.193 119.93143460000088 8.957 118.82650950000101 10.865 173.12811319999946 10.71 162.59175189999883 10.315 163.52181570000027 9.722 116.87110239999966 9.343 158.86422879999904 9.491 225.25314150000114 11.232 157.88872890000042 8.01 203.62842409999914 9.34 133.01125479999948 9.565 188.0654122999987 10.451 167.6704770999998 9.776 166.19005429999967 9.532 126.03647670000014 9.764 201.3958211000017 10.346 192.53922170000124 8.847 167.6348590999993 10.11 244.79984440000175 9.545 130.17801910000009 9.869)
Error minima by case: (0.8203 6 0.6067 5 5.197 7 21.7151 7 8.6776 6 0.0995 6 0.0 7 11.8287 6 2.7658 6 2.9383 5 0.2442 5 0.1062 5 7.4715 7 0.0548 6 2.9883 6 0.1276 6 40.9434 7 0.5021 5 0.0064 6 0.1714 7 13.0 6 13.1 6 8.2778 6 49.0 6 0.2175 7)
Average genome size in population (length): 142.806
Average program size in population (points): 143.806
Average percent parens in population: 0.007
Minimum age in population: 230.7813725824296
Maximum age in population: 234.8632359038827
Average age in population: 233.0483678872764
Median age in population: 233.112326294105
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.954
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.743
Error (vector) diversity:			 0.807
Behavioral diversity:				 0.811
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 465722533
--- Timings ---
Current time: 1529615829348 milliseconds
Total Time:         941.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.1 seconds, 27.0%
Fitness Testing:    543.4 seconds, 57.7%
Report:             143.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 68257.62069999993
Test mean error for best: 34.12881
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 40.015796     
Correct output: -5.4090974816  | Program output: 17.013796     
Correct output: -27.2127680421 | Program output: 52.013801     
Correct output: 122.7288713888 | Program output: 30.013801     
Correct output: 94.6913893946  | Program output: 61.013796     
Correct output: -14.9157086017 | Program output: 8.015801      
Correct output: 9.1842992567   | Program output: 13.013796     
Correct output: 27.1844373898  | Program output: 8.01316       
Correct output: -32.7789176398 | Program output: -58.01316     
Correct output: 18.9535126473  | Program output: -22.01316     
Correct output: -17.3355427007 | Program output: 8.015508      
Correct output: -19.9068842187 | Program output: -11.01316     
Correct output: -82.5342639546 | Program output: -64.01316     
Correct output: -0.5071453016  | Program output: 8.01316       
Correct output: -65.0013149084 | Program output: -69.01316     
Correct output: -85.885174074  | Program output: 8.015801      
Correct output: 126.9572193111 | Program output: 71.013796     
Correct output: -41.5110180666 | Program output: -8.01316      
Correct output: -19.0067113372 | Program output: -37.01316     
Correct output: 53.8417318683  | Program output: 32.013801     
Correct output: 112.5403599984 | Program output: 12.015796     
Correct output: 117.0118101936 | Program output: 32.015801     
Correct output: 25.2929380926  | Program output: 2.01316       
Correct output: -119.128542356 | Program output: -34.01316     
Correct output: 79.7963324215  | Program output: 92.013801     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_mod} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_514} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_dec} {:instruction integer_min} {:instruction integer_min} {:instruction float_sin} {:instruction float_swap} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup integer_mod tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_mod integer_inc tagged_493 integer_inc integer_inc integer_mod integer_inc tagged_514 integer_inc integer_min float_frominteger float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_dup_times float_dup_times float_mult float_dec float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_dec integer_min integer_min float_sin float_swap float_swap float_min float_stackdepth print_integer integer_add)
Errors: [10.8203 9 22.4229 9 79.2266 8 92.7151 10 33.6776 8 22.9315 8 3.8295 10 19.1713 11 25.2342 10 40.9667 10 25.3511 10 8.8937 9 18.5211 10 8.5203 7 4.0118 7 93.901 9 55.9434 11 33.4979 9 18.0064 9 21.8279 9 100.5246 8 84.996 8 23.2798 9 85.1154 10 12.2175 10]
Total: 1173.6035999999997
Mean: 23.472073
Genome size: 134
Size: 135
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3579.849648500001
Median total errors in population: 1208.22725
Error averages by case: (105.10290150000117 9.833 112.38617870000074 9.762 116.56658019999946 9.588 164.19565819999988 9.774 149.73985979999904 8.963 96.29027000000048 8.64 87.44017810000065 10.717 137.0783847000003 10.825 131.1092057999992 10.167 128.26957670000138 9.634 91.3882939999997 9.106 122.94115579999986 9.401 188.02661570000097 11.076 122.1956385000004 7.848 167.86522599999967 9.264 107.06055939999939 9.354 155.9670048999995 10.374 135.55433810000042 9.652 133.59822240000022 9.417 96.60559620000001 9.51 177.2122627000014 9.912 168.4375928000011 8.553 132.35322230000054 10.154 210.59948420000129 9.675 100.8626418000002 9.804)
Error minima by case: (0.8203 7 0.3936 7 2.197 7 19.7151 7 9.6776 7 0.1001 6 0.1685 6 1.8287 6 2.763 5 0.0596 5 0.2442 6 0.0931 5 1.5185 6 0.2218 6 0.0118 5 0.127 6 29.9434 8 2.495 6 1.9908 6 0.1696 7 6.5246 7 37.7308 6 2.7071 6 49.1127 6 0.2116 6)
Average genome size in population (length): 143.716
Average program size in population (points): 144.716
Average percent parens in population: 0.007
Minimum age in population: 232.1329058364025
Maximum age in population: 236.5523374249402
Average age in population: 234.3323022020028
Median age in population: 234.3940689825087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.748
Error (vector) diversity:			 0.794
Behavioral diversity:				 0.798
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 469315758
--- Timings ---
Current time: 1529615835550 milliseconds
Total Time:         947.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.6 seconds, 27.0%
Fitness Testing:    547.2 seconds, 57.7%
Report:             144.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 68323.99789999993
Test mean error for best: 34.16200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 41.015794     
Correct output: -5.4090974816  | Program output: 18.013801     
Correct output: -27.2127680421 | Program output: 53.013801     
Correct output: 122.7288713888 | Program output: 31.013801     
Correct output: 94.6913893946  | Program output: 62.013794     
Correct output: -14.9157086017 | Program output: 9.015801      
Correct output: 9.1842992567   | Program output: 14.013801     
Correct output: 27.1844373898  | Program output: 9.01316       
Correct output: -32.7789176398 | Program output: -57.01316     
Correct output: 18.9535126473  | Program output: -21.01316     
Correct output: -17.3355427007 | Program output: 9.015507      
Correct output: -19.9068842187 | Program output: -10.01316     
Correct output: -82.5342639546 | Program output: -63.01316     
Correct output: -0.5071453016  | Program output: 9.01316       
Correct output: -65.0013149084 | Program output: -68.01316     
Correct output: -85.885174074  | Program output: 9.013794      
Correct output: 126.9572193111 | Program output: 72.013801     
Correct output: -41.5110180666 | Program output: -7.01316      
Correct output: -19.0067113372 | Program output: -36.01316     
Correct output: 53.8417318683  | Program output: 33.013794     
Correct output: 112.5403599984 | Program output: 13.015794     
Correct output: 117.0118101936 | Program output: 33.015801     
Correct output: 25.2929380926  | Program output: 3.01316       
Correct output: -119.128542356 | Program output: -33.01316     
Correct output: 79.7963324215  | Program output: 93.013794     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_shove integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float integer_swap tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [9.8203 9 23.4229 10 80.2266 9 91.7151 10 32.6776 8 23.9315 8 4.8295 10 18.1713 11 24.2342 10 39.9667 10 26.351 9 9.8937 9 19.5211 10 9.5203 7 3.0118 7 94.899 10 54.9434 9 34.4979 9 17.0064 9 20.8279 9 99.5246 8 83.996 8 22.2798 10 86.1154 10 13.2175 10]
Total: 1173.6014999999998
Mean: 23.47203
Genome size: 149
Size: 150
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3693.3646639
Median total errors in population: 1204.2418499999999
Error averages by case: (109.28300670000132 9.834 120.15091700000104 9.692 127.03672729999916 9.742 172.34100799999985 9.859 157.00741349999848 8.878 103.29983100000088 8.644 98.35636390000118 10.772 132.2463125000005 10.882 131.85388989999922 10.169 130.88513530000168 9.697 103.44961250000007 9.128 123.88779699999984 9.414 180.91720420000118 10.965 121.07487240000022 7.768 161.15248259999953 9.245 128.92538789999938 9.337 163.38877379999911 10.449 135.50612830000057 9.638 131.60607110000032 9.358 112.62177790000027 9.51 182.75054650000155 9.793 171.37010970000145 8.504 130.3986590000007 10.268 208.9733393000015 9.865 113.55629660000027 9.914)
Error minima by case: (1.8231 7 0.6067 7 7.1831 8 17.7151 7 9.6776 7 1.0981 6 0.1044 8 5.8314 8 2.7651 8 0.9377 7 0.2442 6 0.1063 6 2.5211 8 0.0548 6 0.0118 6 0.127 6 24.0428 8 4.4903 8 0.9936 7 0.1583 7 4.5246 7 13.996 6 5.2778 8 1.8846 7 0.2175 7)
Average genome size in population (length): 143.76
Average program size in population (points): 144.76
Average percent parens in population: 0.007
Minimum age in population: 233.1329058364025
Maximum age in population: 238.0488832430359
Average age in population: 235.6648913406
Median age in population: 235.7357271277112
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.953
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.735
Error (vector) diversity:			 0.777
Behavioral diversity:				 0.781
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 472910158
--- Timings ---
Current time: 1529615842214 milliseconds
Total Time:         954.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       257.2 seconds, 26.9%
Fitness Testing:    551.4 seconds, 57.8%
Report:             145.8 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 66453.31169999992
Test mean error for best: 33.22666
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 8.015794      
Correct output: -5.4090974816  | Program output: -37.015794    
Correct output: -27.2127680421 | Program output: 9.015794      
Correct output: 122.7288713888 | Program output: 105.015672    
Correct output: 94.6913893946  | Program output: 24.015794     
Correct output: -14.9157086017 | Program output: -21.015252    
Correct output: 9.1842992567   | Program output: -36.015794    
Correct output: 27.1844373898  | Program output: 9.015794      
Correct output: -32.7789176398 | Program output: -57.015794    
Correct output: 18.9535126473  | Program output: -21.015794    
Correct output: -17.3355427007 | Program output: -17.01560     
Correct output: -19.9068842187 | Program output: -10.015794    
Correct output: -82.5342639546 | Program output: -63.015794    
Correct output: -0.5071453016  | Program output: 9.015140      
Correct output: -65.0013149084 | Program output: -68.015794    
Correct output: -85.885174074  | Program output: -89.015140    
Correct output: 126.9572193111 | Program output: 44.015794     
Correct output: -41.5110180666 | Program output: -7.015794     
Correct output: -19.0067113372 | Program output: -36.015794    
Correct output: 53.8417318683  | Program output: -21.015794    
Correct output: 112.5403599984 | Program output: 108.015165    
Correct output: 117.0118101936 | Program output: 56.015794     
Correct output: 25.2929380926  | Program output: 3.015437      
Correct output: -119.128542356 | Program output: -33.015794    
Correct output: 79.7963324215  | Program output: 3.015794      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_rot} {:instruction integer_shove} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_div} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_rot integer_shove integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_shove integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float integer_swap tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_div integer_min integer_dup_times float_dup_times float_mult print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [42.8203 9 31.6067 10 36.2286 10 17.7132 11 70.6756 8 6.0995 10 45.2001 12 18.1686 10 24.2369 10 39.9693 11 0.3199 8 9.8911 10 19.5185 10 9.5223 9 3.0145 7 3.13 6 82.9414 11 34.4952 10 17.0091 10 74.8575 11 4.5252 10 60.996 10 22.2775 11 86.1127 11 76.7805 11]
Total: 1084.1102
Mean: 21.682203
Genome size: 144
Size: 145
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 3927.7593479
Median total errors in population: 1203.5725000000002
Error averages by case: (119.32986210000126 9.923 139.03970220000124 9.666 149.39995739999907 9.873 181.35829260000008 9.958 163.7066376999988 8.991 116.9655324000008 8.792 116.07000490000117 10.83 132.53521330000032 10.884 138.9955040999998 10.226 145.3669297000004 10.015 121.8075958000004 9.63 128.9795521999998 9.465 168.3826224000007 10.899 119.87254610000024 7.878 159.13927219999997 9.053 156.1209839 9.677 172.33016069999917 10.456 143.7018717000001 9.648 137.76746430000026 9.419 125.44863050000025 9.651 193.5207723000015 9.836 179.67449610000142 8.574 139.01224670000002 10.276 213.1254394000013 10.148 122.21305720000008 10.127)
Error minima by case: (0.217 4 1.6047 6 9.1416 7 6.4958 5 11.6776 4 0.8999 5 0.1689 3 7.8307 4 2.2362 4 2.9404 4 0.2442 6 0.1061 4 3.2004 4 0.2497 6 0.0118 4 0.1278 6 24.0428 5 0.3746 3 2.0091 4 0.1713 4 4.5252 5 14.996 4 1.2914 4 25.7129 5 0.2165 4)
Average genome size in population (length): 143.335
Average program size in population (points): 144.335
Average percent parens in population: 0.007
Minimum age in population: 234.7671226322755
Maximum age in population: 239.0665595095236
Average age in population: 237.0213181684377
Median age in population: 237.0777330916323
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.955
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.955
Total error diversity:				 0.739
Error (vector) diversity:			 0.786
Behavioral diversity:				 0.794
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 476493758
--- Timings ---
Current time: 1529615848562 milliseconds
Total Time:         960.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.6 seconds, 26.9%
Fitness Testing:    555.3 seconds, 57.8%
Report:             146.8 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 61156.07579999988
Test mean error for best: 30.57804
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 10.015801     
Correct output: -5.4090974816  | Program output: -35.015796    
Correct output: -27.2127680421 | Program output: -87.015801    
Correct output: 122.7288713888 | Program output: 107.015801    
Correct output: 94.6913893946  | Program output: 26.015796     
Correct output: -14.9157086017 | Program output: -19.015801    
Correct output: 9.1842992567   | Program output: -34.013796    
Correct output: 27.1844373898  | Program output: 11.01316      
Correct output: -32.7789176398 | Program output: -55.01316     
Correct output: 18.9535126473  | Program output: -19.01316     
Correct output: -17.3355427007 | Program output: -14.015718    
Correct output: -19.9068842187 | Program output: -8.01316      
Correct output: -82.5342639546 | Program output: -61.01316     
Correct output: -0.5071453016  | Program output: 11.01316      
Correct output: -65.0013149084 | Program output: -66.01316     
Correct output: -85.885174074  | Program output: -86.013796    
Correct output: 126.9572193111 | Program output: 46.015796     
Correct output: -41.5110180666 | Program output: -5.01316      
Correct output: -19.0067113372 | Program output: -34.01316     
Correct output: 53.8417318683  | Program output: -19.013796    
Correct output: 112.5403599984 | Program output: 110.015801    
Correct output: 117.0118101936 | Program output: 58.015801     
Correct output: 25.2929380926  | Program output: 5.01316       
Correct output: -119.128542356 | Program output: -31.01316     
Correct output: 79.7963324215  | Program output: 5.015796      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_rot} {:instruction integer_shove} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction print_float} {:instruction float_div} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction float_sub} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dec} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction float_max} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_swap} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -8.504331263759331} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_dup integer_yank in2 float_dup_times integer_mod in1 float_rot integer_shove integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_shove integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float print_float float_div tag_integer_814 float_stackdepth float_dec 79.28096162990369 float_sub in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dec in2 in2 float_mult in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div float_max integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items print_integer integer_fromfloat 15 42.00288187556635 float_rot float_mult float_swap integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -8.504331263759331 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer integer_add)
Errors: [40.8203 9 29.6067 8 59.803 7 15.7131 10 68.6756 9 4.1001 6 43.1981 11 16.1713 11 22.2342 10 37.9667 9 3.3198 9 11.8937 10 21.5211 10 11.5203 7 1.0118 7 0.1286 9 80.9414 10 36.4979 9 15.0064 9 72.8555 10 2.5246 9 58.996 8 20.2798 9 88.1154 9 74.7805 12]
Total: 1064.6819
Mean: 21.293638
Genome size: 164
Size: 165
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4217.468577500001
Median total errors in population: 1198.59455
Error averages by case: (126.92540900000127 9.99 144.6037867000012 9.773 165.982959699999 9.926 187.15848679999985 10.142 161.58621369999912 9.13 126.66825480000104 8.963 125.26858670000124 10.776 148.31991020000007 10.848 155.91194740000037 10.355 167.56320979999967 10.325 137.19889840000008 10.07 144.19971319999942 9.559 167.0988494000011 10.813 135.30255200000016 7.95 159.71421399999957 8.795 191.71112240000122 9.9 170.69330789999893 10.568 160.42598990000033 9.674 153.15271919999992 9.47 149.4635636000004 9.776 202.61288780000172 9.879 181.2268219000014 8.763 152.58707170000034 10.261 220.3811768000008 10.356 135.26192450000008 10.387)
Error minima by case: (1.1797 8 0.3953 8 9.1998 7 15.7131 7 6.6776 7 0.0975 6 0.1685 7 8.8287 7 0.7637 7 3.9404 7 0.254 6 0.1063 7 2.5193 7 0.3809 6 0.0118 5 0.1286 6 26.0428 8 0.4958 8 0.0085 7 0.1721 5 2.5246 7 15.998 6 6.2798 7 52.1155 7 0.2175 8)
Average genome size in population (length): 143.375
Average program size in population (points): 144.375
Average percent parens in population: 0.007
Minimum age in population: 236.0180964022889
Maximum age in population: 240.4953654096153
Average age in population: 238.4081184672522
Median age in population: 238.4683280268044
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.759
Error (vector) diversity:			 0.815
Behavioral diversity:				 0.821
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 480078408
--- Timings ---
Current time: 1529615855385 milliseconds
Total Time:         967.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       260.0 seconds, 26.9%
Fitness Testing:    559.6 seconds, 57.8%
Report:             147.8 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 64258.665799999966
Test mean error for best: 32.12933
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 12.015801     
Correct output: -5.4090974816  | Program output: -33.013801    
Correct output: -27.2127680421 | Program output: -85.013801    
Correct output: 122.7288713888 | Program output: 109.013801    
Correct output: 94.6913893946  | Program output: 28.013313     
Correct output: -14.9157086017 | Program output: -17.015801    
Correct output: 9.1842992567   | Program output: -32.013801    
Correct output: 27.1844373898  | Program output: 13.013801     
Correct output: -32.7789176398 | Program output: -53.013801    
Correct output: 18.9535126473  | Program output: -17.013801    
Correct output: -17.3355427007 | Program output: -12.015801    
Correct output: -19.9068842187 | Program output: -6.013801     
Correct output: -82.5342639546 | Program output: -59.013801    
Correct output: -0.5071453016  | Program output: 13.013801     
Correct output: -65.0013149084 | Program output: -64.013801    
Correct output: -85.885174074  | Program output: -84.015801    
Correct output: 126.9572193111 | Program output: 48.013801     
Correct output: -41.5110180666 | Program output: -3.013801     
Correct output: -19.0067113372 | Program output: -32.013801    
Correct output: 53.8417318683  | Program output: -17.013801    
Correct output: 112.5403599984 | Program output: 112.015801    
Correct output: 117.0118101936 | Program output: 60.015801     
Correct output: 25.2929380926  | Program output: 7.013801      
Correct output: -119.128542356 | Program output: -29.013801    
Correct output: 79.7963324215  | Program output: 7.013801      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -6.803694390810999} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 float_mult in2 float_div integer_min integer_dup_times float_dup_times float_mult integer_mult float_dup_items float_mult integer_mult float_dup_items float_dup float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -6.803694390810999 in1 integer_swap integer_swap integer_min float_sin in2 float_cos float_min float_stackdepth print_integer)
Errors: [38.8203 10 27.6047 10 57.801 8 13.7151 9 66.6781 9 2.1001 6 41.1981 12 14.1706 10 20.2349 11 35.9673 11 5.3197 9 13.8931 9 23.5205 11 13.5209 8 0.9875 7 1.8694 8 78.9434 10 38.4972 9 13.0071 9 70.8555 10 0.5246 8 56.996 8 18.2791 9 90.1147 10 72.7825 9]
Total: 1047.4014
Mean: 20.948029
Genome size: 135
Size: 136
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4075.4174963999985
Median total errors in population: 1194.8042
Error averages by case: (109.10943640000102 10.008 152.25148440000098 9.82 166.88840709999917 9.869 183.43682089999962 10.245 148.15690169999908 9.31 123.09353380000093 9.037 130.6511388000011 10.631 140.15080070000002 10.82 157.80827960000116 10.348 159.56240899999938 10.454 130.0664073999999 10.453 141.24838929999936 9.574 151.8529365000008 10.752 124.08182200000024 7.985 137.20786959999964 8.471 189.6019400000017 10.063 168.657839599999 10.53 162.7513174999999 9.62 153.6147966000002 9.452 147.15958570000043 9.788 187.05650270000154 9.874 165.95535690000116 8.937 145.17421199999998 10.24 225.01102190000148 10.477 127.5932862999999 10.517)
Error minima by case: (0.8203 7 1.6704 8 1.2802 7 13.7151 8 7.6776 7 0.8357 6 0.1042 8 8.969 6 0.7676 6 4.9535 8 0.254 6 0.1063 5 2.5211 6 0.2277 6 0.0013 5 0.1282 6 24.0428 8 0.491 5 0.9936 6 0.1721 6 0.5246 7 11.998 6 10.8605 7 52.9625 7 0.2175 8)
Average genome size in population (length): 143.207
Average program size in population (points): 144.207
Average percent parens in population: 0.007
Minimum age in population: 237.5057383995215
Maximum age in population: 241.7035517905754
Average age in population: 239.8004293077714
Median age in population: 239.845546033969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.947
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.947
Total error diversity:				 0.772
Error (vector) diversity:			 0.838
Behavioral diversity:				 0.844
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 483658958
--- Timings ---
Current time: 1529615861889 milliseconds
Total Time:         973.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.4 seconds, 26.8%
Fitness Testing:    563.5 seconds, 57.9%
Report:             148.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 64262.69959999993
Test mean error for best: 32.13135
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 12.015794     
Correct output: -5.4090974816  | Program output: -33.013801    
Correct output: -27.2127680421 | Program output: -85.013801    
Correct output: 122.7288713888 | Program output: 109.013801    
Correct output: 94.6913893946  | Program output: 28.013794     
Correct output: -14.9157086017 | Program output: -17.015801    
Correct output: 9.1842992567   | Program output: -32.013801    
Correct output: 27.1844373898  | Program output: 13.01316      
Correct output: -32.7789176398 | Program output: -53.01316     
Correct output: 18.9535126473  | Program output: -17.01316     
Correct output: -17.3355427007 | Program output: -12.015507    
Correct output: -19.9068842187 | Program output: -6.01316      
Correct output: -82.5342639546 | Program output: -59.01316     
Correct output: -0.5071453016  | Program output: 13.01316      
Correct output: -65.0013149084 | Program output: -64.01316     
Correct output: -85.885174074  | Program output: -84.013794    
Correct output: 126.9572193111 | Program output: 48.013801     
Correct output: -41.5110180666 | Program output: -3.01316      
Correct output: -19.0067113372 | Program output: -32.01316     
Correct output: 53.8417318683  | Program output: -17.013794    
Correct output: 112.5403599984 | Program output: 112.015794    
Correct output: 117.0118101936 | Program output: 60.015801     
Correct output: 25.2929380926  | Program output: 7.01316       
Correct output: -119.128542356 | Program output: -29.01316     
Correct output: 79.7963324215  | Program output: 7.013794      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_pop} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction float_max} {:instruction integer_add} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_514} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction print_float} {:instruction integer_swap} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_268} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_pop float_dup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_dup_times integer_inc integer_inc float_flush float_sub integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min float_max integer_add integer_inc float_flush float_sub integer_mod integer_inc tagged_493 integer_inc integer_inc integer_mod integer_inc tagged_514 integer_inc integer_min float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 print_float integer_swap tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_268 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [38.8203 9 27.6047 10 57.801 8 13.7151 9 66.6776 8 2.1001 6 41.1981 12 14.1713 11 20.2342 10 35.9667 9 5.32 7 13.8937 10 23.5211 10 13.5203 7 0.9882 7 1.8714 8 78.9434 10 38.4979 9 13.0064 9 70.8555 11 0.5246 6 56.996 8 18.2798 10 90.1154 9 72.7825 9]
Total: 1039.4053
Mean: 20.788107
Genome size: 151
Size: 152
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4263.898390699999
Median total errors in population: 1190.6029500000002
Error averages by case: (129.92848780000134 9.953 166.62650850000134 9.892 184.34022419999883 9.836 187.2203257 10.334 160.98410159999887 9.398 137.6212599000011 9.064 143.2116976000008 10.682 138.6248897000001 10.88 158.69072380000134 10.42 163.57771929999933 10.471 147.43701829999975 10.475 141.46963409999915 9.621 146.8385429000006 10.724 123.95766550000025 8.042 141.58945579999966 8.371 200.1392825000017 9.978 179.60969129999862 10.597 163.14256289999983 9.664 152.11090200000024 9.503 163.792847900001 9.895 189.9975787000019 9.842 176.995311000001 9.005 147.8306201 10.22 225.4636135000016 10.484 144.8337261 10.513)
Error minima by case: (1.8223 7 1.6057 6 8.952 7 5.2711 7 4.6776 7 2.0975 6 0.1685 8 6.1844 7 1.7618 7 2.0465 8 0.254 6 0.1063 7 5.4547 7 0.404 6 0.0013 5 0.1278 6 4.0428 8 0.4959 7 0.0064 7 0.7576 6 0.4606 6 11.996 6 0.2776 5 42.0489 7 0.2137 7)
Average genome size in population (length): 143.091
Average program size in population (points): 144.091
Average percent parens in population: 0.007
Minimum age in population: 239.0565846319182
Maximum age in population: 243.0977232886169
Average age in population: 241.1593192730624
Median age in population: 241.2255156310193
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.949
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.949
Total error diversity:				 0.761
Error (vector) diversity:			 0.828
Behavioral diversity:				 0.835
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 487236661
--- Timings ---
Current time: 1529615868587 milliseconds
Total Time:         980.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.9 seconds, 26.8%
Fitness Testing:    567.7 seconds, 57.9%
Report:             150.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 64263.56359999995
Test mean error for best: 32.13178
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 12.015794     
Correct output: -5.4090974816  | Program output: -33.015801    
Correct output: -27.2127680421 | Program output: -85.015801    
Correct output: 122.7288713888 | Program output: 109.015801    
Correct output: 94.6913893946  | Program output: 28.015794     
Correct output: -14.9157086017 | Program output: -17.015801    
Correct output: 9.1842992567   | Program output: -32.015801    
Correct output: 27.1844373898  | Program output: 13.01516      
Correct output: -32.7789176398 | Program output: -53.01516     
Correct output: 18.9535126473  | Program output: -17.01516     
Correct output: -17.3355427007 | Program output: -12.015507    
Correct output: -19.9068842187 | Program output: -6.01516      
Correct output: -82.5342639546 | Program output: -59.01516     
Correct output: -0.5071453016  | Program output: 13.01516      
Correct output: -65.0013149084 | Program output: -64.01516     
Correct output: -85.885174074  | Program output: -84.015794    
Correct output: 126.9572193111 | Program output: 48.015801     
Correct output: -41.5110180666 | Program output: -3.01516      
Correct output: -19.0067113372 | Program output: -32.01516     
Correct output: 53.8417318683  | Program output: -17.015794    
Correct output: 112.5403599984 | Program output: 112.015794    
Correct output: 117.0118101936 | Program output: 60.015801     
Correct output: 25.2929380926  | Program output: 7.01516       
Correct output: -119.128542356 | Program output: -29.01516     
Correct output: 79.7963324215  | Program output: 7.015794      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_pop} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction float_max} {:instruction integer_add} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_514} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction print_float} {:instruction integer_swap} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_268} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction print_integer} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_pop float_dup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_dup_times integer_inc integer_inc float_flush float_sub integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min float_max integer_add integer_inc float_flush float_sub integer_mod integer_inc tagged_493 integer_inc integer_inc integer_mod integer_inc tagged_514 integer_inc integer_min float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 print_float integer_swap tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_268 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot print_integer float_tan integer_add float_mult integer_min integer_dup_times float_dup_times float_mult print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_min float_stackdepth print_integer integer_add)
Errors: [38.8203 9 27.6067 10 57.803 8 13.7131 10 66.6756 9 2.1001 6 41.2001 11 14.1693 12 20.2362 10 35.9687 9 5.32 7 13.8917 10 23.5191 10 13.5223 7 0.9862 8 1.8694 7 78.9414 11 38.4959 9 13.0084 10 70.8575 11 0.5246 6 56.996 8 18.2778 11 90.1134 9 72.7805 10]
Total: 1045.3972999999999
Mean: 20.907946
Genome size: 145
Size: 146
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4453.751727299999
Median total errors in population: 1186.5892999999999
Error averages by case: (137.71473370000066 10.157 168.6232798000005 9.998 186.4355245999994 10.154 167.80950980000006 10.539 163.891091999999 9.689 148.21936100000067 9.288 163.88515730000023 11.02 156.15933179999982 10.905 171.18658780000098 10.618 176.00611059999935 10.767 147.3227687999999 10.41 154.4435297999993 9.796 161.981042500001 10.977 143.83307180000023 8.406 153.3125319 8.577 189.1932341000006 9.838 180.09159519999938 10.905 175.49712410000004 9.899 164.56079180000023 9.774 184.16362770000103 10.391 169.68558860000093 10.128 175.23101510000075 9.354 160.40928539999953 10.436 232.57539760000145 10.663 168.1064345000003 10.725)
Error minima by case: (0.1797 8 1.6057 7 4.199 7 8.2711 7 4.6774 7 0.9009 6 0.1049 8 6.8294 7 2.2342 8 1.9377 8 0.254 6 0.1363 7 7.5211 8 0.2277 6 0.0087 5 0.1148 6 24.0428 7 0.4959 7 0.0091 6 2.8279 6 0.4596 6 10.9318 6 8.2775 8 55.1134 7 0.2175 8)
Average genome size in population (length): 142.601
Average program size in population (points): 143.601
Average percent parens in population: 0.007
Minimum age in population: 240.246611547022
Maximum age in population: 244.5132065900168
Average age in population: 242.5706463652527
Median age in population: 242.6103387232802
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.965
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.825
Error (vector) diversity:			 0.871
Behavioral diversity:				 0.872
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 490802036
--- Timings ---
Current time: 1529615874855 milliseconds
Total Time:         987.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       264.2 seconds, 26.8%
Fitness Testing:    571.7 seconds, 57.9%
Report:             151.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 65079.60769999997
Test mean error for best: 32.53980
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 14.013796     
Correct output: -5.4090974816  | Program output: -31.013796    
Correct output: -27.2127680421 | Program output: 15.015796     
Correct output: 122.7288713888 | Program output: 111.013801    
Correct output: 94.6913893946  | Program output: 30.015801     
Correct output: -14.9157086017 | Program output: -15.015252    
Correct output: 9.1842992567   | Program output: -30.013796    
Correct output: 27.1844373898  | Program output: 15.015801     
Correct output: -32.7789176398 | Program output: -51.015801    
Correct output: 18.9535126473  | Program output: -15.013801    
Correct output: -17.3355427007 | Program output: -11.01560     
Correct output: -19.9068842187 | Program output: -4.013801     
Correct output: -82.5342639546 | Program output: -57.013796    
Correct output: -0.5071453016  | Program output: 15.013801     
Correct output: -65.0013149084 | Program output: -62.015801    
Correct output: -85.885174074  | Program output: -83.015140    
Correct output: 126.9572193111 | Program output: 50.013801     
Correct output: -41.5110180666 | Program output: -1.013801     
Correct output: -19.0067113372 | Program output: -30.013801    
Correct output: 53.8417318683  | Program output: -15.013796    
Correct output: 112.5403599984 | Program output: 114.015801    
Correct output: 117.0118101936 | Program output: 62.013801     
Correct output: 25.2929380926  | Program output: 9.013801      
Correct output: -119.128542356 | Program output: -27.013796    
Correct output: 79.7963324215  | Program output: 9.013796      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_shove} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_rot} {:instruction integer_shove} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_514} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction tag_integer_642} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_shove in2 float_dup_times integer_mod in1 float_rot integer_shove integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_shove integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_mod integer_inc tagged_493 integer_inc integer_inc integer_mod integer_inc tagged_514 integer_inc integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger integer_sub integer_dup_times float_div integer_inc integer_sub float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup integer_rot tag_integer_642 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [36.8223 10 25.6047 9 42.2286 11 11.7151 9 64.6756 10 0.0995 9 39.1981 11 12.1686 11 18.2369 11 33.9673 11 6.3199 9 15.8931 9 25.5205 10 15.5209 8 2.9855 8 2.87 6 76.9434 10 40.4972 8 11.0071 9 68.8555 10 1.4754 9 54.998 8 16.2791 9 92.1147 11 70.7825 10]
Total: 1022.7795000000002
Mean: 20.45559
Genome size: 152
Size: 153
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4383.225590299999
Median total errors in population: 1143.8429
Error averages by case: (154.66952500000036 10.22 185.44164540000006 9.924 191.9425699000004 10.197 155.58796529999978 10.515 184.3467527999992 9.834 146.19591910000022 9.283 185.19166699999988 11.208 141.54168979999992 10.867 159.65931510000058 10.646 163.32772049999932 10.745 135.37018930000008 10.04 144.80141139999944 9.817 148.56411660000006 10.976 127.35743199999969 8.536 134.13095779999975 8.593 154.8296764000003 9.204 202.02990159999936 10.995 167.13565350000033 9.931 155.13508380000005 9.831 207.32036490000135 10.742 145.45599470000002 10.093 177.94329020000032 9.63 142.8457987999999 10.604 224.59816710000072 10.631 194.00078229999997 10.74)
Error minima by case: (1.8206 7 2.0 7 1.2802 7 7.7151 8 3.6764 7 0.0844 6 0.1043 8 6.8309 6 2.7659 6 3.0616 8 0.0 6 0.1061 6 3.5201 6 0.5071 6 0.0087 4 0.1148 5 23.9422 8 0.4979 5 1.9211 6 0.1721 7 0.4596 6 9.997 6 8.2798 6 56.1134 7 0.7825 8)
Average genome size in population (length): 143.807
Average program size in population (points): 144.807
Average percent parens in population: 0.007
Minimum age in population: 241.6841157601412
Maximum age in population: 245.8320876644388
Average age in population: 244.042611878225
Median age in population: 244.0970832151769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.948
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.948
Total error diversity:				 0.822
Error (vector) diversity:			 0.848
Behavioral diversity:				 0.851
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 494397539
--- Timings ---
Current time: 1529615881841 milliseconds
Total Time:         993.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.8 seconds, 26.7%
Fitness Testing:    575.9 seconds, 57.9%
Report:             152.0 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 65353.79219999992
Test mean error for best: 32.67690
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 12.015794     
Correct output: -5.4090974816  | Program output: -33.013801    
Correct output: -27.2127680421 | Program output: 13.013801     
Correct output: 122.7288713888 | Program output: 109.013801    
Correct output: 94.6913893946  | Program output: 28.013794     
Correct output: -14.9157086017 | Program output: -17.015801    
Correct output: 9.1842992567   | Program output: -32.013801    
Correct output: 27.1844373898  | Program output: 13.01316      
Correct output: -32.7789176398 | Program output: -53.01316     
Correct output: 18.9535126473  | Program output: -17.01316     
Correct output: -17.3355427007 | Program output: -13.015507    
Correct output: -19.9068842187 | Program output: -6.01316      
Correct output: -82.5342639546 | Program output: -59.01316     
Correct output: -0.5071453016  | Program output: 13.01316      
Correct output: -65.0013149084 | Program output: -64.01316     
Correct output: -85.885174074  | Program output: -85.013794    
Correct output: 126.9572193111 | Program output: 48.013801     
Correct output: -41.5110180666 | Program output: -3.01316      
Correct output: -19.0067113372 | Program output: -32.01316     
Correct output: 53.8417318683  | Program output: -17.013794    
Correct output: 112.5403599984 | Program output: 112.015794    
Correct output: 117.0118101936 | Program output: 60.015801     
Correct output: 25.2929380926  | Program output: 7.01316       
Correct output: -119.128542356 | Program output: -29.01316     
Correct output: 79.7963324215  | Program output: 7.013794      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction float_dup} {:instruction tagged_308} {:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_rot} {:instruction integer_shove} {:instruction integer_dup} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction float_max} {:instruction integer_add} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_514} {:instruction integer_inc} {:instruction float_frominteger} {:instruction print_float} {:instruction float_mod} {:instruction tag_integer_814} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_yank} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_551} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_shove} {:instruction integer_mult} {:instruction integer_add} {:instruction float_mult} {:instruction in2} {:instruction float_div} {:instruction integer_swap} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_tan} {:instruction integer_add} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_swap} {:instruction float_mult} {:instruction integer_inc} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction integer_swap} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction integer_sub} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer} {:instruction integer_add})
Best program: (36.15340410350262 integer_sub float_dup float_dup tagged_308 float_dup tagged_308 36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat integer_dup integer_yank in2 float_dup_times integer_mod in1 float_rot integer_shove integer_dup integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min integer_dup_times integer_inc integer_inc float_flush float_sub integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min float_max integer_add integer_inc float_flush float_sub integer_mod integer_inc tagged_493 integer_inc integer_inc integer_mod integer_inc tagged_514 integer_inc float_frominteger print_float float_mod tag_integer_814 float_stackdepth float_dec 79.28096162990369 integer_yank in1 integer_yankdup integer_yankdup float_sin tag_integer_551 integer_dup in2 in2 float_mult in2 float_div integer_shove integer_mult integer_add float_mult in2 float_div integer_swap integer_mult integer_inc float_dup_times float_mult integer_dup_times integer_rot integer_rot float_tan integer_add float_mult integer_min integer_dup_times integer_swap float_mult integer_inc float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 integer_swap integer_min integer_mod float_sin in2 integer_sub float_min float_stackdepth print_integer integer_add)
Errors: [38.8203 9 27.6047 10 40.2266 9 13.7151 9 66.6776 8 2.1001 6 41.1981 12 14.1713 11 20.2342 10 35.9667 9 4.32 7 13.8937 10 23.5211 10 13.5203 7 0.9882 7 0.8714 7 78.9434 10 38.4979 9 13.0064 9 70.8555 11 0.5246 6 56.996 8 18.2798 10 90.1154 9 72.7825 9]
Total: 1019.8308999999999
Mean: 20.396618
Genome size: 161
Size: 162
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4149.5130839
Median total errors in population: 1092.1234
Error averages by case: (141.49754450000046 10.254 175.1632017999995 9.933 183.8935261000003 10.117 142.63411879999973 10.58 176.1613571999992 9.99 140.51762170000032 9.085 182.0654876999998 11.195 130.6181285999996 10.899 147.37628850000047 10.739 148.31849389999948 10.471 132.02469710000005 9.962 135.47364319999957 10.025 137.47649870000026 10.899 118.91560009999993 8.515 125.22698319999998 8.501 147.73866740000028 8.926 194.84010069999948 11.07 156.54221910000007 9.86 141.4483288000004 9.914 203.01235090000083 10.728 133.4516797999997 9.737 165.08568900000063 9.646 131.94837029999997 10.676 224.21710370000054 10.489 181.0613831 10.593)
Error minima by case: (0.8223 7 0.3953 6 9.199 6 7.7139 7 5.6415 6 0.0975 6 0.1685 8 7.1045 6 2.6566 6 0.9404 6 0.2455 6 0.1084 6 9.5243 6 0.0146 6 5.0E-4 4 0.1148 5 14.0428 7 0.4959 5 0.0065 6 0.1683 7 0.4554 6 9.996 6 7.7229 5 57.1134 7 0.2175 7)
Average genome size in population (length): 145.407
Average program size in population (points): 146.407
Average percent parens in population: 0.007
Minimum age in population: 243.2659915672173
Maximum age in population: 247.4055955896693
Average age in population: 245.4621596744871
Median age in population: 245.4837980692555
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.822
Error (vector) diversity:			 0.85
Behavioral diversity:				 0.854
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 498032939
--- Timings ---
Current time: 1529615888280 milliseconds
Total Time:        1000.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.1 seconds, 26.7%
Fitness Testing:    580.0 seconds, 58.0%
Report:             153.2 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 63523.07789999997
Test mean error for best: 31.76154
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 21.01316      
Correct output: -5.4090974816  | Program output: -24.01316     
Correct output: -27.2127680421 | Program output: -76.01316     
Correct output: 122.7288713888 | Program output: 118.01316     
Correct output: 94.6913893946  | Program output: 37.01316      
Correct output: -14.9157086017 | Program output: -8.01316      
Correct output: 9.1842992567   | Program output: -23.01316     
Correct output: 27.1844373898  | Program output: 22.01316      
Correct output: -32.7789176398 | Program output: -44.01316     
Correct output: 18.9535126473  | Program output: -8.01316      
Correct output: -17.3355427007 | Program output: -3.01316      
Correct output: -19.9068842187 | Program output: 3.01316       
Correct output: -82.5342639546 | Program output: -50.01316     
Correct output: -0.5071453016  | Program output: 22.01316      
Correct output: -65.0013149084 | Program output: -55.01316     
Correct output: -85.885174074  | Program output: -75.01316     
Correct output: 126.9572193111 | Program output: 57.01316      
Correct output: -41.5110180666 | Program output: 6.01316       
Correct output: -19.0067113372 | Program output: -23.01316     
Correct output: 53.8417318683  | Program output: -8.01316      
Correct output: 112.5403599984 | Program output: 121.01316     
Correct output: 117.0118101936 | Program output: 69.01316      
Correct output: 25.2929380926  | Program output: 16.01316      
Correct output: -119.128542356 | Program output: -20.01316     
Correct output: 79.7963324215  | Program output: 16.01316      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction print_float} {:instruction float_div} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -6.803694390810999} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc integer_mod float_frominteger float_div integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger float_dup_items float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float print_float float_div float_dup_items float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -6.803694390810999 in1 integer_swap integer_swap integer_min float_sin in2 float_cos float_min float_stackdepth print_integer)
Errors: [29.8229 11 18.6041 8 48.8004 10 4.7157 10 57.6782 9 6.9025 10 32.1975 11 5.1713 10 11.2342 10 26.9667 8 14.3224 12 22.92 11 32.5211 10 22.5203 7 9.9882 7 10.872 9 69.9441 10 47.5242 10 4.0064 9 61.8549 8 8.4728 11 47.9987 9 9.2798 10 99.1154 10 63.7832 10]
Total: 1007.2170000000001
Mean: 20.14434
Genome size: 150
Size: 151
Percent parens: 0.007
--- Population Statistics ---
Average total errors in population: 4602.299167799999
Median total errors in population: 1073.8714000000002
Error averages by case: (163.55111430000022 10.177 190.98665009999965 9.877 208.24793680000056 9.926 163.58032639999982 10.493 193.9450344999995 10.027 161.93017910000026 8.754 195.4325178999998 11.124 153.73231759999982 10.813 159.89842830000052 10.72 162.3569885999994 10.325 157.7620168999999 10.075 151.8033181999995 10.049 158.84998720000016 10.954 144.06629660000044 8.486 144.63322189999985 8.465 173.4992688000001 8.869 208.61294779999935 11.032 170.06232779999985 9.795 154.92402800000033 9.909 217.48268180000053 10.684 153.17401420000007 9.543 184.17152020000069 9.499 146.64151230000027 10.643 232.2931302000003 10.435 199.48140229999998 10.506)
Error minima by case: (0.1791 5 0.3936 5 1.2802 5 4.7151 6 4.6772 5 0.0 3 0.8312 5 5.1706 5 1.7098 5 0.9395 6 0.2467 5 0.1089 5 1.5211 5 0.507 6 5.0E-4 4 0.1269 5 16.0428 6 0.495 4 0.0 3 0.1721 6 0.4554 6 10.996 5 8.7232 5 9.8846 5 0.2175 5)
Average genome size in population (length): 146.476
Average program size in population (points): 147.476
Average percent parens in population: 0.007
Minimum age in population: 244.2659915672173
Maximum age in population: 248.8568757109118
Average age in population: 246.9195149515819
Median age in population: 246.9933140408487
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.825
Error (vector) diversity:			 0.863
Behavioral diversity:				 0.866
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 501695089
--- Timings ---
Current time: 1529615894903 milliseconds
Total Time:        1007.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       268.5 seconds, 26.7%
Fitness Testing:    584.4 seconds, 58.0%
Report:             154.3 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 63544.63289999996
Test mean error for best: 31.77232
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.01316      
Correct output: -5.4090974816  | Program output: -19.01316     
Correct output: -27.2127680421 | Program output: -71.01316     
Correct output: 122.7288713888 | Program output: 123.01316     
Correct output: 94.6913893946  | Program output: 42.01316      
Correct output: -14.9157086017 | Program output: -3.01316      
Correct output: 9.1842992567   | Program output: -18.01316     
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01316       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.01316     
Correct output: 126.9572193111 | Program output: 62.01316      
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.01316      
Correct output: 112.5403599984 | Program output: 126.01316     
Correct output: 117.0118101936 | Program output: 74.01316      
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.01316      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction print_float} {:instruction float_div} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -6.803694390810999} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc integer_mod float_frominteger float_div integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger float_dup_items float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float print_float float_div float_dup_items float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -6.803694390810999 in1 integer_swap integer_swap integer_min float_sin in2 float_cos float_min float_stackdepth print_integer)
Errors: [24.8229 11 13.6041 9 43.8004 10 0.2843 9 52.6782 9 11.9025 10 27.1975 9 0.1713 9 6.2342 9 21.9667 9 19.3487 13 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.872 10 64.9441 9 52.5242 9 0.9936 8 56.8549 7 13.4728 11 42.9987 9 4.2798 9 104.1154 9 58.7832 10]
Total: 978.7991000000001
Mean: 19.575981
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4562.1065107
Median total errors in population: 1062.9564
Error averages by case: (161.83308480000002 10.243 196.36504729999962 9.852 207.2611049000002 10.006 161.31685859999982 10.484 191.5464022999995 9.966 165.95004080000012 8.836 199.36662629999998 10.989 137.9045298999999 10.761 154.96415610000028 10.679 158.46595219999938 10.265 162.6472563000001 10.174 146.30406639999964 10.125 150.14650580000006 10.934 133.7474815000001 8.414 140.77671169999996 8.497 173.62871610000042 8.943 208.41999059999935 10.92 167.3894615999999 9.805 149.41167160000032 9.855 223.38021790000053 10.652 153.90863550000003 9.561 184.41210460000033 9.419 143.7383318000002 10.614 232.30008650000008 10.556 205.76346960000006 10.608)
Error minima by case: (1.8203 8 2.3677 7 11.8589 7 0.2841 7 1.6772 7 0.0843 6 0.105 8 0.1713 8 4.7656 7 0.0623 7 0.2556 6 0.1083 7 2.5211 8 0.0294 6 0.0013 5 0.127 5 4.0428 8 0.4311 7 0.9917 7 0.1734 7 0.4554 6 2.9968 6 0.7071 7 61.1142 7 0.2175 8)
Average genome size in population (length): 149.228
Average program size in population (points): 150.228
Average percent parens in population: 0.007
Minimum age in population: 245.2659915672173
Maximum age in population: 250.2673426124955
Average age in population: 248.3867905928386
Median age in population: 248.4004961780354
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.961
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.961
Total error diversity:				 0.832
Error (vector) diversity:			 0.869
Behavioral diversity:				 0.872
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 505426092
--- Timings ---
Current time: 1529615901773 milliseconds
Total Time:        1014.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.0 seconds, 26.6%
Fitness Testing:    588.9 seconds, 58.1%
Report:             155.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 63544.63289999996
Test mean error for best: 31.77232
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.01316      
Correct output: -5.4090974816  | Program output: -19.01316     
Correct output: -27.2127680421 | Program output: -71.01316     
Correct output: 122.7288713888 | Program output: 123.01316     
Correct output: 94.6913893946  | Program output: 42.01316      
Correct output: -14.9157086017 | Program output: -3.01316      
Correct output: 9.1842992567   | Program output: -18.01316     
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01316       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.01316     
Correct output: 126.9572193111 | Program output: 62.01316      
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.01316      
Correct output: 112.5403599984 | Program output: 126.01316     
Correct output: 117.0118101936 | Program output: 74.01316      
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.01316      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction print_float} {:instruction float_div} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -6.803694390810999} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc integer_mod float_frominteger float_div integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger float_dup_items float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float print_float float_div float_dup_items float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -6.803694390810999 in1 integer_swap integer_swap integer_min float_sin in2 float_cos float_min float_stackdepth print_integer)
Errors: [24.8229 11 13.6041 9 43.8004 10 0.2843 9 52.6782 9 11.9025 10 27.1975 9 0.1713 9 6.2342 9 21.9667 9 19.3487 13 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.872 10 64.9441 9 52.5242 9 0.9936 8 56.8549 7 13.4728 11 42.9987 9 4.2798 9 104.1154 9 58.7832 10]
Total: 978.7991000000001
Mean: 19.575981
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5087.633141699999
Median total errors in population: 1056.77765
Error averages by case: (178.09403019999948 10.562 213.98434079999953 10.011 226.37411010000034 10.268 182.1143987999999 10.635 212.71861409999934 10.129 183.57177890000003 9.119 217.26884610000013 11.054 165.9196150000001 10.793 177.39959590000063 10.833 185.96081279999947 10.388 170.62984289999994 10.656 171.21665759999965 10.277 177.58135170000082 11.059 158.72697120000066 8.648 168.24188120000008 8.815 187.87223320000004 9.387 226.18291829999936 10.919 191.58392050000054 10.197 173.60676919999997 9.884 240.4562953000005 10.718 170.42880589999993 9.981 207.29096540000018 9.61 169.95857980000017 10.727 251.52701160000055 10.807 222.59179520000004 10.854)
Error minima by case: (0.1761 6 1.398 7 1.1986 6 0.2711 6 3.6779 6 0.0843 5 0.1705 6 0.1694 5 2.2342 8 0.0603 5 0.3199 7 0.1061 8 2.4805 5 0.215 6 0.0115 5 0.126 5 7.0428 5 0.5021 7 0.0064 7 0.1721 6 0.4533 6 1.9986 6 0.2791 5 4.8866 6 0.217 6)
Average genome size in population (length): 151.176
Average program size in population (points): 152.176
Average percent parens in population: 0.007
Minimum age in population: 247.7683339800055
Maximum age in population: 251.6183779480813
Average age in population: 249.7536886868732
Median age in population: 249.7845625166436
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.849
Error (vector) diversity:			 0.89
Behavioral diversity:				 0.891
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 509206215
--- Timings ---
Current time: 1529615908211 milliseconds
Total Time:        1020.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       271.4 seconds, 26.6%
Fitness Testing:    593.1 seconds, 58.1%
Report:             156.0 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 63544.63289999996
Test mean error for best: 31.77232
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.01316      
Correct output: -5.4090974816  | Program output: -19.01316     
Correct output: -27.2127680421 | Program output: -71.01316     
Correct output: 122.7288713888 | Program output: 123.01316     
Correct output: 94.6913893946  | Program output: 42.01316      
Correct output: -14.9157086017 | Program output: -3.01316      
Correct output: 9.1842992567   | Program output: -18.01316     
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01316       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.01316     
Correct output: 126.9572193111 | Program output: 62.01316      
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.01316      
Correct output: 112.5403599984 | Program output: 126.01316     
Correct output: 117.0118101936 | Program output: 74.01316      
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.01316      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction -90.41987649310497} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_div} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction integer_mod} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -6.803694390810999} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc float_flush -90.41987649310497 integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc integer_mod float_frominteger float_div integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger float_dup_items float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger integer_stackdepth print_float float_div float_dup_items float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 integer_mod float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -6.803694390810999 in1 integer_swap integer_swap integer_min float_sin in2 float_cos float_min float_stackdepth print_integer)
Errors: [24.8229 11 13.6041 9 43.8004 10 0.2843 9 52.6782 9 11.9025 10 27.1975 9 0.1713 9 6.2342 9 21.9667 9 19.3487 13 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.872 10 64.9441 9 52.5242 9 0.9936 8 56.8549 7 13.4728 11 42.9987 9 4.2798 9 104.1154 9 58.7832 10]
Total: 978.7991000000001
Mean: 19.575981
Genome size: 160
Size: 161
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5028.653887300001
Median total errors in population: 1048.56885
Error averages by case: (180.2938445999999 10.636 205.9663168999999 10.018 218.9973145000004 10.318 184.50730029999997 10.492 212.3164481999992 10.062 184.02196709999987 9.271 211.17331110000035 11.026 161.85806449999984 10.668 168.99489890000055 10.876 176.06808309999948 10.354 173.49876589999982 10.85 168.1481292999999 10.421 179.5948044000006 11.011 159.62781200000052 8.639 167.62115290000017 8.987 194.10659450000043 9.598 228.2994274999989 10.844 188.85291590000097 10.329 164.9865786000002 9.843 230.19280210000085 10.517 175.3538070999997 10.188 210.11323759999993 9.63 162.0603315 10.611 248.13427860000107 10.721 217.17470020000002 10.781)
Error minima by case: (0.1779 7 1.6041 4 5.2128 4 0.2711 5 0.6776 4 0.0 4 0.1685 8 0.1044 7 0.2369 7 0.0465 6 0.3209 4 0.1061 6 9.4815 7 0.3984 6 0.01 5 0.1264 4 6.0428 5 0.4959 6 0.0 5 1.1601 7 0.4604 5 2.9628 4 0.2791 7 27.1147 7 1.7832 6)
Average genome size in population (length): 153.217
Average program size in population (points): 154.217
Average percent parens in population: 0.007
Minimum age in population: 248.8977466015207
Maximum age in population: 253.0372444408712
Average age in population: 251.0425182145359
Median age in population: 251.0525839782598
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.97
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.829
Error (vector) diversity:			 0.869
Behavioral diversity:				 0.869
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 513037449
--- Timings ---
Current time: 1529615914774 milliseconds
Total Time:        1027.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       272.7 seconds, 26.6%
Fitness Testing:    597.4 seconds, 58.2%
Report:             156.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 63740.83519999999
Test mean error for best: 31.87042
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 30.01316      
Correct output: -5.4090974816  | Program output: -15.01316     
Correct output: -27.2127680421 | Program output: -67.01316     
Correct output: 122.7288713888 | Program output: 127.01316     
Correct output: 94.6913893946  | Program output: 46.01316      
Correct output: -14.9157086017 | Program output: 1.01316       
Correct output: 9.1842992567   | Program output: -14.01316     
Correct output: 27.1844373898  | Program output: 31.01316      
Correct output: -32.7789176398 | Program output: -35.01316     
Correct output: 18.9535126473  | Program output: 1.01316       
Correct output: -17.3355427007 | Program output: 6.01316       
Correct output: -19.9068842187 | Program output: 12.01316      
Correct output: -82.5342639546 | Program output: -41.01316     
Correct output: -0.5071453016  | Program output: 31.01316      
Correct output: -65.0013149084 | Program output: -46.01316     
Correct output: -85.885174074  | Program output: -66.01316     
Correct output: 126.9572193111 | Program output: 66.01316      
Correct output: -41.5110180666 | Program output: 15.01316      
Correct output: -19.0067113372 | Program output: -14.01316     
Correct output: 53.8417318683  | Program output: 1.01316       
Correct output: 112.5403599984 | Program output: 130.01316     
Correct output: 117.0118101936 | Program output: 78.01316      
Correct output: 25.2929380926  | Program output: 25.01316      
Correct output: -119.128542356 | Program output: -11.01316     
Correct output: 79.7963324215  | Program output: 25.01316      
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction float_stackdepth} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_frominteger} {:instruction print_float} {:instruction print_float} {:instruction float_div} {:instruction float_dup_items} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_integer} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -6.803694390810999} {:instruction in1} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_min} {:instruction float_sin} {:instruction in2} {:instruction float_cos} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 float_stackdepth integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_yankdup float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc integer_mod float_frominteger float_div integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger float_dup_items float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_sub float_frominteger print_float print_float float_div float_dup_items float_mult integer_mult float_dup_items print_integer float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -6.803694390810999 in1 integer_swap integer_swap integer_min float_sin in2 float_cos float_min float_stackdepth print_integer)
Errors: [20.8229 10 9.6041 8 39.8004 9 4.2843 9 48.6782 9 15.9289 10 23.1975 9 3.8287 11 2.2342 9 17.9404 8 23.3487 13 31.92 10 41.5211 10 31.5203 7 18.9882 8 19.872 10 60.9441 9 56.5242 9 4.9936 8 52.8286 8 17.4728 11 38.9987 9 0.2798 8 108.1154 8 54.7832 10]
Total: 978.4303000000001
Mean: 19.568605
Genome size: 171
Size: 172
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5014.634299
Median total errors in population: 1035.80485
Error averages by case: (176.30500279999964 10.844 197.51217189999932 10.039 218.5715420000001 10.452 182.18558969999987 10.527 207.8837146999992 10.227 184.40194449999962 9.737 202.5875539000005 11.007 161.92547229999963 10.616 168.1322699000006 10.831 174.39321989999942 10.326 177.81515059999984 11.298 172.40384389999997 10.693 180.9060505000009 11.082 168.84467440000032 8.71 169.3855319000002 9.276 197.25547240000034 10.004 223.0983461999988 10.863 191.72393490000084 10.607 162.18272360000006 9.845 225.12621780000097 10.409 176.62577239999976 10.599 206.62677409999966 9.824 163.03842069999976 10.567 249.6485166000013 10.668 216.12938740000013 10.874)
Error minima by case: (0.178 4 0.6041 4 1.1977 4 0.2711 5 0.3239 4 0.0975 4 0.1698 7 0.1044 4 0.7631 3 0.0596 7 3.2551 3 0.1061 4 1.5211 4 0.0014 6 0.0117 4 0.128 4 4.0428 5 0.4952 7 0.0063 3 1.1714 7 0.4604 5 1.996 4 0.213 4 50.1135 4 0.2188 4)
Average genome size in population (length): 156.473
Average program size in population (points): 157.473
Average percent parens in population: 0.006
Minimum age in population: 249.9447902644222
Maximum age in population: 254.7748827931326
Average age in population: 252.3770541784158
Median age in population: 252.4456799691904
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.962
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.763
Error (vector) diversity:			 0.813
Behavioral diversity:				 0.813
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 516949752
--- Timings ---
Current time: 1529615921008 milliseconds
Total Time:        1033.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       274.1 seconds, 26.5%
Fitness Testing:    601.3 seconds, 58.2%
Report:             157.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 63524.55539999993
Test mean error for best: 31.76228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.045568148067964} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.045568148067964 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 104.1154 9 58.7829 9]
Total: 967.7953000000001
Mean: 19.355906
Genome size: 166
Size: 167
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4897.598745599999
Median total errors in population: 1023.8448500000001
Error averages by case: (162.16253039999975 10.991 194.4224090999992 9.944 215.68663080000042 10.484 169.62882430000002 10.275 199.4469305999988 10.179 181.5134094999995 9.941 197.55964980000053 10.656 158.55001060000018 10.451 163.015684200001 10.608 169.15048989999934 10.169 181.0190427 11.476 170.2298251 10.839 177.92328420000086 11.03 167.32012470000052 8.623 169.91222550000015 9.355 195.05367430000067 10.071 213.11422159999822 10.741 191.4849805000011 10.614 160.06037260000008 9.658 218.3042224000012 10.021 171.61597819999952 10.759 194.31883859999917 9.827 159.9434710999998 10.426 254.02143810000175 10.393 203.8594768000006 10.75)
Error minima by case: (0.1639 8 2.6041 4 2.7872 5 0.2711 7 0.6784 7 0.0994 5 0.1814 8 0.1044 8 0.2342 8 0.0595 6 0.7444 5 0.1069 8 3.3062 8 0.2046 5 0.0196 6 0.8852 4 4.0428 8 0.5021 8 0.0033 6 2.8286 7 0.475 8 2.9988 6 0.2776 7 51.8436 8 0.2188 8)
Average genome size in population (length): 157.539
Average program size in population (points): 158.539
Average percent parens in population: 0.006
Minimum age in population: 250.9447902644222
Maximum age in population: 255.5746013146212
Average age in population: 253.7463286543045
Median age in population: 253.7663805270983
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.717
Error (vector) diversity:			 0.747
Behavioral diversity:				 0.747
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 520888580
--- Timings ---
Current time: 1529615927790 milliseconds
Total Time:        1040.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       275.8 seconds, 26.5%
Fitness Testing:    605.5 seconds, 58.2%
Report:             158.6 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 63524.55539999993
Test mean error for best: 31.76228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.045568148067964} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.045568148067964 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_fromfloat integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 104.1154 9 58.7829 9]
Total: 967.7953000000001
Mean: 19.355906
Genome size: 166
Size: 167
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4890.742757299999
Median total errors in population: 1010.2101999999999
Error averages by case: (161.8361134999997 11.096 181.1775467999994 9.899 206.99954009999976 10.534 172.43849080000015 10.117 203.02413479999913 10.13 178.2855097999996 10.045 186.70818950000034 10.482 161.77391610000004 10.411 165.45921530000092 10.395 175.32350679999962 10.103 178.5631972000001 11.746 177.17665990000032 10.886 172.57261770000068 11.011 172.4419866000004 8.527 177.0746536000003 9.317 189.38302400000055 10.191 215.7401623999985 10.59 197.259886100001 10.546 161.54288769999997 9.349 209.64538210000083 9.672 176.45440369999972 10.915 199.37484659999924 9.847 162.54463880000006 10.23 251.49253470000127 10.204 199.4937127000005 10.713)
Error minima by case: (0.1792 8 0.9962 5 7.8002 5 0.2711 7 0.3238 6 1.9025 5 0.1711 8 0.1044 5 0.2211 8 0.0616 2 0.6776 2 0.8937 8 1.5211 5 0.4555 6 0.0118 6 0.872 5 4.0428 7 0.5028 8 0.0033 6 0.1714 7 1.5252 8 13.9882 6 0.2129 6 28.5507 6 1.2168 8)
Average genome size in population (length): 159.584
Average program size in population (points): 160.584
Average percent parens in population: 0.006
Minimum age in population: 252.8542529696649
Maximum age in population: 256.9845298364662
Average age in population: 255.1405436725317
Median age in population: 255.1437589636011
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.647
Error (vector) diversity:			 0.678
Behavioral diversity:				 0.678
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 524878664
--- Timings ---
Current time: 1529615934596 milliseconds
Total Time:        1046.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       277.2 seconds, 26.5%
Fitness Testing:    609.7 seconds, 58.3%
Report:             159.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 63524.55539999993
Test mean error for best: 31.76228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.045568148067964} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_fromfloat} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.045568148067964 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_fromfloat integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 104.1154 9 58.7829 9]
Total: 967.7953000000001
Mean: 19.355906
Genome size: 166
Size: 167
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4299.374147499999
Median total errors in population: 1001.23265
Error averages by case: (130.57657129999967 11.001 162.43777969999923 9.536 187.90309349999973 10.304 146.63766149999998 9.784 173.82622669999836 9.762 158.30745579999908 9.901 167.5176241 10.236 136.3773639000002 10.254 138.6825474000016 10.164 145.2542918000003 9.722 161.2552726000008 11.934 154.27088170000042 10.723 146.18569110000018 10.698 147.51382390000103 8.088 148.8659862000011 8.92 175.11615580000083 10.097 189.05756319999745 10.19 177.53321360000143 10.178 135.17263780000002 9.046 188.8000360000014 9.127 153.1907817000001 10.844 173.4103212999988 9.517 136.98628190000045 9.871 234.22130760000206 9.945 179.98457740000126 10.447)
Error minima by case: (0.8229 8 1.3939 5 8.8004 5 0.2711 6 2.3224 5 2.9019 5 1.1711 8 0.1413 5 0.2349 8 0.0478 5 0.3224 5 2.1063 8 1.5185 5 0.1541 6 0.9882 6 2.128 5 11.9441 6 0.4904 8 0.0049 6 1.1733 7 0.5272 6 13.9987 5 0.2509 5 29.1398 6 6.2168 8)
Average genome size in population (length): 160.742
Average program size in population (points): 161.742
Average percent parens in population: 0.006
Minimum age in population: 254.4197456948518
Maximum age in population: 258.376299953636
Average age in population: 256.4469621410402
Median age in population: 256.4760557261166
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.591
Error (vector) diversity:			 0.612
Behavioral diversity:				 0.612
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 528897759
--- Timings ---
Current time: 1529615940823 milliseconds
Total Time:        1053.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       278.7 seconds, 26.5%
Fitness Testing:    613.5 seconds, 58.3%
Report:             160.8 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 59904.922499999935
Test mean error for best: 29.95246
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_pop} {:instruction float_dup} {:instruction 36.15340410350262} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mult} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_yank} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_pop float_dup 36.15340410350262 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 integer_yank in2 float_dup_times in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_mod integer_inc integer_mod integer_inc integer_min integer_mult integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_dec integer_inc integer_inc float_flush integer_inc float_min integer_yank integer_inc integer_mod float_frominteger float_div integer_mod integer_inc tagged_493 integer_inc integer_min integer_stackdepth float_dup_items float_mod float_frominteger integer_dup_times float_mod float_frominteger integer_dup_times float_frominteger integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 104.1154 9 58.7829 9]
Total: 967.7953000000001
Mean: 19.355906
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4312.162718499999
Median total errors in population: 997.42925
Error averages by case: (145.03082889999962 11.004 168.55745619999925 9.474 192.0767868 10.249 150.42323889999997 9.746 177.19743519999832 9.744 165.36172259999915 9.818 172.87219680000024 10.233 129.74598070000027 10.272 132.10134770000138 10.054 138.23247700000044 9.59 165.15215520000075 11.992 145.88158319999957 10.672 155.10530560000035 10.66 144.43417040000062 7.956 143.51020150000159 8.825 174.4510440000008 10.145 194.40898299999782 10.115 167.53738060000157 10.093 129.22126980000007 8.946 194.68903830000147 8.984 157.11410469999996 10.884 176.9534086999987 9.477 129.47455230000054 9.831 230.40808650000184 9.844 183.24296390000117 10.371)
Error minima by case: (1.1639 5 2.3938 6 4.1996 7 0.2711 7 3.3218 6 0.0843 6 0.8289 8 0.1423 8 0.1045 8 0.0596 7 2.3355 6 0.8937 8 21.5211 8 0.215 6 0.9882 5 0.128 7 3.0428 6 3.494 8 0.0033 6 0.8286 7 0.5272 8 12.9882 7 0.2498 6 49.0 7 8.2168 8)
Average genome size in population (length): 161.161
Average program size in population (points): 162.161
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 260.0634824731701
Average age in population: 257.5482626869296
Median age in population: 257.8402150021885
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.567
Error (vector) diversity:			 0.592
Behavioral diversity:				 0.593
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 532926990
--- Timings ---
Current time: 1529615947220 milliseconds
Total Time:        1059.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.0 seconds, 26.4%
Fitness Testing:    617.3 seconds, 58.3%
Report:             161.7 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 63524.55539999993
Test mean error for best: 31.76228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_mult} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_mod} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_shove} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_inc} {:instruction float_min} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_mult 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup integer_mod tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_tan integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_shove integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod integer_inc float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_shove integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_inc float_min float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 104.1154 9 58.7829 9]
Total: 967.7953000000001
Mean: 19.355906
Genome size: 166
Size: 167
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4299.685941299998
Median total errors in population: 994.2433000000001
Error averages by case: (148.02039459999963 10.952 169.92464589999918 9.481 190.27538630000015 10.035 150.92845459999995 9.626 183.21540699999858 9.728 160.43012489999902 9.691 172.27985340000066 10.253 127.04829720000028 10.297 130.34257220000126 9.987 136.17380190000037 9.54 163.69638230000064 11.951 145.75613330000027 10.715 153.799767500001 10.612 141.7945264000006 7.943 140.18725930000122 8.869 171.84681890000067 10.089 197.17051959999765 10.127 168.22635480000176 10.097 128.9297120000002 8.911 193.97779480000133 9.03 160.58068829999968 10.821 177.22391219999912 9.444 126.51536840000038 9.741 227.15303180000168 9.791 186.14073370000096 10.317)
Error minima by case: (2.1771 6 1.6041 4 0.8024 5 0.2711 6 2.3879 5 0.4045 5 0.1691 8 0.1214 6 0.2342 6 0.0596 6 1.2166 3 0.8937 7 19.5205 5 0.215 6 1.0118 6 0.128 5 6.0428 6 4.4967 8 0.0 4 0.1714 7 0.4728 5 4.0013 5 0.2498 6 49.0 4 2.2171 6)
Average genome size in population (length): 161.707
Average program size in population (points): 162.707
Average percent parens in population: 0.006
Minimum age in population: 256.4198537261189
Maximum age in population: 261.0590483940375
Average age in population: 259.1406316454313
Median age in population: 259.1633265950039
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.96
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.96
Total error diversity:				 0.567
Error (vector) diversity:			 0.591
Behavioral diversity:				 0.591
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 536970018
--- Timings ---
Current time: 1529615953838 milliseconds
Total Time:        1066.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       281.6 seconds, 26.4%
Fitness Testing:    621.4 seconds, 58.3%
Report:             163.0 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 59958.615499999934
Test mean error for best: 29.97931
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -15.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yank} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dup} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_437} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_mod} {:instruction float_frominteger} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup_times} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup 36.15340410350262 37.2491532139858 integer_yank 36.15340410350262 integer_sub integer_sub float_dup float_dup tagged_308 integer_yank integer_sub integer_sub float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times integer_mod integer_mod integer_inc integer_inc float_dup float_max integer_inc integer_inc float_flush float_flush float_sub integer_inc float_sub integer_inc float_min integer_yankdup integer_inc integer_mod float_max integer_inc integer_inc float_flush float_sub integer_inc float_min integer_inc integer_mod integer_inc tagged_437 float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min float_frominteger integer_mod float_mod float_frominteger integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup_times in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc integer_min integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 104.1154 9 58.7829 9]
Total: 967.7953000000001
Mean: 19.355906
Genome size: 172
Size: 173
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4807.844327800002
Median total errors in population: 995.2170000000001
Error averages by case: (168.79352119999965 10.9 193.66691089999904 9.505 211.61557890000068 9.84 161.84889139999996 9.516 192.91579199999833 9.808 186.09464929999928 9.448 198.68435460000077 10.307 149.5457473000004 10.395 152.8157069000013 10.01 159.01187729999995 9.522 190.27338550000061 11.747 168.5912298000006 10.702 173.08688710000132 10.593 164.46257360000067 7.948 163.30654780000097 8.954 196.05357820000032 10.022 212.73958289999788 10.123 186.92181870000167 10.157 149.7696673999999 8.948 215.66536130000162 9.134 176.86987809999962 10.725 188.7256320999996 9.385 146.0483911 9.811 249.38047680000176 9.768 203.4462876000006 10.242)
Error minima by case: (1.7929 8 1.6041 7 3.801 7 0.2711 7 0.3217 8 2.9025 6 0.1713 8 0.0863 6 0.2342 8 0.0596 7 1.3672 7 1.1063 8 3.3062 8 0.1284 6 2.9855 5 6.872 8 4.0428 8 2.4979 8 0.0033 5 1.1596 7 2.4728 8 9.9967 6 0.2131 7 51.8436 7 7.2168 8)
Average genome size in population (length): 163.689
Average program size in population (points): 164.689
Average percent parens in population: 0.006
Minimum age in population: 257.8180080671325
Maximum age in population: 262.4938053933541
Average age in population: 260.5137348153208
Median age in population: 260.5559587758405
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.615
Error (vector) diversity:			 0.651
Behavioral diversity:				 0.651
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 541062610
--- Timings ---
Current time: 1529615960831 milliseconds
Total Time:        1072.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       283.1 seconds, 26.4%
Fitness Testing:    625.7 seconds, 58.3%
Report:             163.9 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 50824.52809999993
Test mean error for best: 25.41226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015100     
Correct output: -5.4090974816  | Program output: -18.01378     
Correct output: -27.2127680421 | Program output: -70.013801    
Correct output: 122.7288713888 | Program output: 124.013801    
Correct output: 94.6913893946  | Program output: 43.013156     
Correct output: -14.9157086017 | Program output: -2.015801     
Correct output: 9.1842992567   | Program output: -17.013106    
Correct output: 27.1844373898  | Program output: 28.01316      
Correct output: -32.7789176398 | Program output: -38.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 3.01512       
Correct output: -19.9068842187 | Program output: 9.01316       
Correct output: -82.5342639546 | Program output: -44.01316     
Correct output: -0.5071453016  | Program output: 28.01316      
Correct output: -65.0013149084 | Program output: -49.01316     
Correct output: -85.885174074  | Program output: -69.015801    
Correct output: 126.9572193111 | Program output: 63.013178     
Correct output: -41.5110180666 | Program output: 12.01316      
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: -2.013801     
Correct output: 112.5403599984 | Program output: 127.01522     
Correct output: 117.0118101936 | Program output: 75.015801     
Correct output: 25.2929380926  | Program output: 22.01316      
Correct output: -119.128542356 | Program output: -43.01316     
Correct output: 79.7963324215  | Program output: 22.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction float_pop} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction tagged_428} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup float_mod 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub float_pop float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod tagged_428 integer_mod float_frominteger float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [23.821 11 12.6047 9 42.801 8 1.2849 8 51.6782 9 12.8999 7 26.1974 10 0.8287 10 5.2342 9 20.9667 9 20.3507 11 28.92 10 38.5211 10 28.5203 7 15.9882 8 16.8694 9 63.944 10 53.5242 10 1.9936 8 55.8555 9 14.4749 10 41.996 8 3.2798 9 76.1154 10 57.7829 9]
Total: 944.4527
Mean: 18.889053
Genome size: 171
Size: 172
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5041.547477700001
Median total errors in population: 995.2399499999999
Error averages by case: (173.04293349999963 10.819 203.0525594999993 9.607 217.8917671000013 9.604 177.3718334 9.458 205.10786229999795 9.782 193.6393642999995 9.189 206.39753190000113 10.387 160.20290230000018 10.432 162.24242550000176 10.044 169.52659000000003 9.569 196.77682760000067 11.574 177.58789210000066 10.664 178.55897050000124 10.59 173.63797750000126 7.934 174.15687840000072 8.963 203.23000109999978 9.921 225.47259379999767 10.168 198.00378160000187 10.148 159.80244879999987 9.012 221.91826190000177 9.234 189.35281109999923 10.638 202.57351310000038 9.26 159.34726549999988 9.808 255.78997340000194 9.814 210.05151150000032 10.192)
Error minima by case: (0.1771 7 2.6047 4 0.0 5 0.2726 6 0.6782 5 2.9025 5 0.8288 8 0.0073 4 0.2341 8 0.0596 4 2.3221 3 1.1063 7 11.5343 4 0.182 6 2.0118 7 1.1283 5 19.9421 6 1.4979 8 0.0063 6 0.1714 6 3.5269 5 11.9987 5 0.2771 4 49.0 5 6.2179 7)
Average genome size in population (length): 165.353
Average program size in population (points): 166.353
Average percent parens in population: 0.006
Minimum age in population: 259.3671814140105
Maximum age in population: 263.8757029081545
Average age in population: 261.8441721738893
Median age in population: 261.8861933554375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.627
Error (vector) diversity:			 0.667
Behavioral diversity:				 0.667
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 545196786
--- Timings ---
Current time: 1529615967549 milliseconds
Total Time:        1079.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       284.6 seconds, 26.4%
Fitness Testing:    629.7 seconds, 58.3%
Report:             165.1 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 50824.52809999993
Test mean error for best: 25.41226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015100     
Correct output: -5.4090974816  | Program output: -18.01378     
Correct output: -27.2127680421 | Program output: -70.013801    
Correct output: 122.7288713888 | Program output: 124.013801    
Correct output: 94.6913893946  | Program output: 43.013156     
Correct output: -14.9157086017 | Program output: -2.015801     
Correct output: 9.1842992567   | Program output: -17.013106    
Correct output: 27.1844373898  | Program output: 28.01316      
Correct output: -32.7789176398 | Program output: -38.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 3.01512       
Correct output: -19.9068842187 | Program output: 9.01316       
Correct output: -82.5342639546 | Program output: -44.01316     
Correct output: -0.5071453016  | Program output: 28.01316      
Correct output: -65.0013149084 | Program output: -49.01316     
Correct output: -85.885174074  | Program output: -69.015801    
Correct output: 126.9572193111 | Program output: 63.013178     
Correct output: -41.5110180666 | Program output: 12.01316      
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: -2.013801     
Correct output: 112.5403599984 | Program output: 127.01522     
Correct output: 117.0118101936 | Program output: 75.015801     
Correct output: 25.2929380926  | Program output: 22.01316      
Correct output: -119.128542356 | Program output: -43.01316     
Correct output: 79.7963324215  | Program output: 22.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction float_pop} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction tagged_428} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup float_mod 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub float_pop float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod tagged_428 integer_mod float_frominteger float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [23.821 11 12.6047 9 42.801 8 1.2849 8 51.6782 9 12.8999 7 26.1974 10 0.8287 10 5.2342 9 20.9667 9 20.3507 11 28.92 10 38.5211 10 28.5203 7 15.9882 8 16.8694 9 63.944 10 53.5242 10 1.9936 8 55.8555 9 14.4749 10 41.996 8 3.2798 9 76.1154 10 57.7829 9]
Total: 944.4527
Mean: 18.889053
Genome size: 171
Size: 172
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5106.522195200001
Median total errors in population: 999.03935
Error averages by case: (168.67682679999976 10.828 213.95019469999937 9.695 230.55419680000176 9.362 176.94196190000005 9.372 203.53838019999787 9.828 198.7450473999994 8.781 211.01400870000123 10.518 159.48313359999997 10.486 167.0550228000017 10.072 174.26105949999894 9.591 199.64370310000103 11.363 181.3819490000009 10.701 179.28147420000195 10.681 173.87443440000112 7.952 178.79370030000007 8.96 207.13711989999976 9.779 224.87618759999782 10.245 200.90174930000217 10.157 164.67928729999983 9.039 227.59091700000172 9.446 188.77924709999962 10.563 198.17485210000106 9.168 161.68091149999947 9.842 264.936308700002 9.875 204.16652129999983 10.1)
Error minima by case: (0.8209 7 1.6039 6 2.0 6 0.2726 7 1.3237 7 0.0981 6 0.1712 8 0.1046 6 0.2332 5 0.0596 7 1.3672 8 0.1063 8 12.5192 6 0.215 6 1.0118 6 0.1306 7 8.945 8 0.497 8 0.0052 6 0.1714 7 1.4749 7 14.9987 7 0.2508 6 11.8715 7 7.217 7)
Average genome size in population (length): 167.527
Average program size in population (points): 168.527
Average percent parens in population: 0.006
Minimum age in population: 260.7058599214716
Maximum age in population: 265.1739370276128
Average age in population: 263.2055418082869
Median age in population: 263.263663920451
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.678
Error (vector) diversity:			 0.711
Behavioral diversity:				 0.712
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 549385375
--- Timings ---
Current time: 1529615974335 milliseconds
Total Time:        1086.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       286.4 seconds, 26.4%
Fitness Testing:    633.7 seconds, 58.3%
Report:             166.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 50824.52809999993
Test mean error for best: 25.41226
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 27.015100     
Correct output: -5.4090974816  | Program output: -18.01378     
Correct output: -27.2127680421 | Program output: -70.013801    
Correct output: 122.7288713888 | Program output: 124.013801    
Correct output: 94.6913893946  | Program output: 43.013156     
Correct output: -14.9157086017 | Program output: -2.015801     
Correct output: 9.1842992567   | Program output: -17.013106    
Correct output: 27.1844373898  | Program output: 28.01316      
Correct output: -32.7789176398 | Program output: -38.01316     
Correct output: 18.9535126473  | Program output: -2.01316      
Correct output: -17.3355427007 | Program output: 3.01512       
Correct output: -19.9068842187 | Program output: 9.01316       
Correct output: -82.5342639546 | Program output: -44.01316     
Correct output: -0.5071453016  | Program output: 28.01316      
Correct output: -65.0013149084 | Program output: -49.01316     
Correct output: -85.885174074  | Program output: -69.015801    
Correct output: 126.9572193111 | Program output: 63.013178     
Correct output: -41.5110180666 | Program output: 12.01316      
Correct output: -19.0067113372 | Program output: -17.01316     
Correct output: 53.8417318683  | Program output: -2.013801     
Correct output: 112.5403599984 | Program output: 127.01522     
Correct output: 117.0118101936 | Program output: 75.015801     
Correct output: 25.2929380926  | Program output: 22.01316      
Correct output: -119.128542356 | Program output: -43.01316     
Correct output: 79.7963324215  | Program output: 22.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction float_pop} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction tagged_428} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup float_mod 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub float_pop float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_min integer_mod tagged_428 integer_mod float_frominteger float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [23.821 11 12.6047 9 42.801 8 1.2849 8 51.6782 9 12.8999 7 26.1974 10 0.8287 10 5.2342 9 20.9667 9 20.3507 11 28.92 10 38.5211 10 28.5203 7 15.9882 8 16.8694 9 63.944 10 53.5242 10 1.9936 8 55.8555 9 14.4749 10 41.996 8 3.2798 9 76.1154 10 57.7829 9]
Total: 944.4527
Mean: 18.889053
Genome size: 171
Size: 172
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4279.295502500001
Median total errors in population: 993.2247500000001
Error averages by case: (138.52285739999996 10.702 176.8083026999996 9.573 192.81113690000132 9.081 141.93572489999988 9.124 179.73192429999847 9.731 157.01593590000027 8.46 176.67768740000082 10.397 131.34085840000017 10.336 133.8197858000012 9.973 143.28694880000043 9.509 162.22886810000023 11.186 149.60751410000003 10.676 153.36087320000033 10.583 143.2794302000006 7.837 146.1168668000012 8.852 169.98859409999955 9.597 193.40302309999905 10.143 168.926462200001 10.075 132.83634310000002 8.926 190.06335820000146 9.315 153.0484783000002 10.34 168.54745790000095 8.943 128.99771580000032 9.768 229.09268560000194 9.794 174.94266930000006 9.983)
Error minima by case: (1.179 8 2.6047 6 5.803 7 0.2711 7 0.3218 7 1.0975 6 1.1712 8 0.1413 6 0.2342 8 0.0596 6 8.0 6 0.1063 8 1.5211 6 0.4872 6 5.9855 6 4.1286 6 14.0428 8 3.4979 7 0.0063 6 0.1721 7 2.4755 7 11.996 7 0.2771 6 49.0 7 6.2171 7)
Average genome size in population (length): 168.148
Average program size in population (points): 169.148
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 266.5731729980507
Average age in population: 264.2215171386405
Median age in population: 264.5029739138449
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.972
Total error diversity:				 0.679
Error (vector) diversity:			 0.699
Behavioral diversity:				 0.699
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 553589450
--- Timings ---
Current time: 1529615981269 milliseconds
Total Time:        1093.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       288.2 seconds, 26.4%
Fitness Testing:    637.8 seconds, 58.3%
Report:             167.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 50779.16649999995
Test mean error for best: 25.38958
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -44.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.045568148067964} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_flush} {:instruction tagged_308} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.045568148067964 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup integer_flush tagged_308 float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush integer_fromfloat integer_inc integer_inc float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_sin integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod float_frominteger float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 75.1154 10 58.7829 9]
Total: 939.7953000000001
Mean: 18.795906
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4455.5705776999985
Median total errors in population: 992.2080000000001
Error averages by case: (141.26839609999982 10.786 176.6225634999996 9.629 197.64494090000173 9.094 149.6540966999999 9.181 175.8259319999984 9.756 163.62546409999996 8.453 181.44409330000116 10.359 141.33433619999983 10.283 144.01383550000136 9.882 154.70233930000012 9.521 168.68373970000044 11.168 158.50809790000028 10.672 164.04531140000051 10.569 154.36408500000084 7.872 157.69536450000095 8.855 177.84211749999932 9.588 199.56755409999874 10.115 178.98636760000133 10.073 142.16113880000015 8.884 195.86874820000162 9.304 160.65835800000025 10.377 171.74562410000075 8.977 141.06634039999992 9.758 236.48143790000168 9.801 178.86729500000007 9.936)
Error minima by case: (0.8223 6 1.1424 5 0.0 4 0.2711 6 0.3218 6 0.8999 5 0.1708 8 0.1103 6 0.2342 6 0.0596 4 0.6799 4 0.1062 8 3.5211 6 0.5201 4 3.9862 6 4.1306 6 19.944 7 1.4979 8 0.0044 5 0.1721 7 1.4749 7 9.996 6 0.2638 6 66.1134 6 6.2171 6)
Average genome size in population (length): 169.51
Average program size in population (points): 170.51
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 268.1214815899576
Average age in population: 265.6395704762547
Median age in population: 265.9391693685986
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.657
Error (vector) diversity:			 0.686
Behavioral diversity:				 0.687
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 557827650
--- Timings ---
Current time: 1529615988151 milliseconds
Total Time:        1100.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       289.8 seconds, 26.3%
Fitness Testing:    642.1 seconds, 58.4%
Report:             168.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 50779.16649999995
Test mean error for best: 25.38958
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -44.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.045568148067964} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_flush} {:instruction tagged_308} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.045568148067964 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup integer_flush tagged_308 float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush integer_fromfloat integer_inc integer_inc float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_sin integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod float_frominteger float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 75.1154 10 58.7829 9]
Total: 939.7953000000001
Mean: 18.795906
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4679.8020811
Median total errors in population: 993.79895
Error averages by case: (157.52377239999979 10.861 186.7525400999997 9.713 209.0403724000015 9.296 165.70971119999982 9.353 194.82253639999837 9.918 177.2633368000001 8.663 185.08614510000092 10.402 146.93179279999995 10.299 152.09704790000123 10.069 158.81035009999985 9.626 176.0189219000004 11.204 163.30763800000005 10.755 168.15701990000056 10.72 158.21474770000088 8.043 164.39788840000077 9.047 187.51880649999944 9.706 208.02593119999878 10.16 183.40845940000105 10.153 148.79896470000003 9.106 205.60753580000187 9.428 169.6131957000001 10.458 189.59915150000086 9.017 144.73167220000002 9.892 240.37763780000103 10.09 191.81290520000005 10.195)
Error minima by case: (0.179 8 1.3953 8 1.8011 6 0.2711 6 1.3218 7 0.1001 6 0.8263 8 0.1244 7 0.2342 8 0.0596 8 2.6796 6 0.1069 7 3.5191 9 0.215 6 2.9882 6 2.872 7 6.944 8 1.4979 8 0.0063 6 1.2132 7 0.4728 8 4.004 7 0.238 7 65.1154 8 5.2169 8)
Average genome size in population (length): 169.762
Average program size in population (points): 170.762
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 269.2874346393893
Average age in population: 266.2675716172666
Median age in population: 267.4187192740094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.721
Error (vector) diversity:			 0.744
Behavioral diversity:				 0.748
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 562072225
--- Timings ---
Current time: 1529615994724 milliseconds
Total Time:        1106.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       291.3 seconds, 26.3%
Fitness Testing:    646.1 seconds, 58.4%
Report:             169.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 50779.16649999995
Test mean error for best: 25.38958
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -44.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.045568148067964} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_flush} {:instruction tagged_308} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction tagged_493} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction float_frominteger} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.045568148067964 integer_yankdup 36.15340410350262 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub integer_sub float_dup integer_flush tagged_308 float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_sub integer_inc float_sub integer_inc float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush integer_fromfloat integer_inc integer_inc float_dec integer_inc integer_inc float_max integer_inc integer_inc float_flush float_sub integer_inc float_sin integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod integer_inc integer_mod float_sub integer_inc integer_inc float_flush float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc tagged_493 integer_inc integer_min integer_mod float_frominteger float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_yankdup float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 75.1154 10 58.7829 9]
Total: 939.7953000000001
Mean: 18.795906
Genome size: 176
Size: 177
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 4584.625751000002
Median total errors in population: 990.7969499999999
Error averages by case: (162.07146849999987 10.819 192.67810829999968 9.779 208.55529550000117 9.403 154.89914129999994 9.451 185.1080656999987 9.992 178.9845904999995 8.859 195.38590860000096 10.43 136.18100550000014 10.285 142.80194170000075 10.141 148.54754139999977 9.808 185.1086770000005 11.276 154.29557470000015 10.758 164.2711373000006 10.83 148.16542580000063 8.223 154.26021290000085 9.12 190.09090069999976 9.736 206.4529268999988 10.278 174.81143750000052 10.272 139.4265792999999 9.127 210.8897159000016 9.494 166.31261940000005 10.478 180.74971370000023 9.15 135.42301290000003 10.027 227.3478316000011 10.376 193.39791839999987 10.297)
Error minima by case: (5.8219 8 0.3092 5 0.197 6 0.2711 7 1.3242 5 0.5421 5 0.1712 8 0.1044 5 0.2342 7 0.0596 6 0.6796 5 0.1061 7 13.5191 5 0.5202 6 0.9882 6 1.8694 6 19.944 6 0.4979 7 0.0064 6 0.1721 6 0.5251 6 9.996 5 0.2128 6 46.1154 6 5.222 8)
Average genome size in population (length): 170.679
Average program size in population (points): 171.679
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 270.6013904952484
Average age in population: 268.0356828287401
Median age in population: 268.8332963453687
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.978
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.773
Error (vector) diversity:			 0.794
Behavioral diversity:				 0.796
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 566339542
--- Timings ---
Current time: 1529616001634 milliseconds
Total Time:        1113.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       292.8 seconds, 26.3%
Fitness Testing:    650.6 seconds, 58.4%
Report:             170.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 50771.16649999995
Test mean error for best: 25.38558
;;------------------------------
Outputs of best individual on training cases:
Correct output: 50.8360594894  | Program output: 26.015100     
Correct output: -5.4090974816  | Program output: -19.01378     
Correct output: -27.2127680421 | Program output: -71.013801    
Correct output: 122.7288713888 | Program output: 123.013801    
Correct output: 94.6913893946  | Program output: 42.013156     
Correct output: -14.9157086017 | Program output: -3.015801     
Correct output: 9.1842992567   | Program output: -18.013106    
Correct output: 27.1844373898  | Program output: 27.01316      
Correct output: -32.7789176398 | Program output: -39.01316     
Correct output: 18.9535126473  | Program output: -3.01316      
Correct output: -17.3355427007 | Program output: 2.01512       
Correct output: -19.9068842187 | Program output: 8.01316       
Correct output: -82.5342639546 | Program output: -45.01316     
Correct output: -0.5071453016  | Program output: 27.01316      
Correct output: -65.0013149084 | Program output: -50.01316     
Correct output: -85.885174074  | Program output: -70.015801    
Correct output: 126.9572193111 | Program output: 62.013178     
Correct output: -41.5110180666 | Program output: 11.01316      
Correct output: -19.0067113372 | Program output: -18.01316     
Correct output: 53.8417318683  | Program output: -3.013801     
Correct output: 112.5403599984 | Program output: 126.01522     
Correct output: 117.0118101936 | Program output: 74.015801     
Correct output: 25.2929380926  | Program output: 21.01316      
Correct output: -119.128542356 | Program output: -44.01316     
Correct output: 79.7963324215  | Program output: 21.013417     
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 36.15340410350262} {:instruction integer_yankdup} {:instruction float_mod} {:instruction 37.2491532139858} {:instruction integer_yankdup} {:instruction 36.15340410350262} {:instruction integer_sub} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_dup} {:instruction tagged_308} {:instruction integer_yank} {:instruction float_add} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction integer_mod} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction in1} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction in2} {:instruction float_dup_times} {:instruction tagged_357} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction float_add} {:instruction float_flush} {:instruction float_sub} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_sub} {:instruction float_pop} {:instruction float_sub} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_min} {:instruction float_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction float_mod} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_flush} {:instruction integer_inc} {:instruction float_div} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction float_frominteger} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_frominteger} {:instruction print_float} {:instruction integer_swap} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_dec} {:instruction 79.28096162990369} {:instruction integer_add} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_sin} {:instruction tag_integer_374} {:instruction integer_dup} {:instruction in2} {:instruction in2} {:instruction integer_add} {:instruction float_mult} {:instruction float_mult} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_max} {:instruction float_mult} {:instruction integer_fromfloat} {:instruction 15} {:instruction 42.00288187556635} {:instruction float_rot} {:instruction float_mult} {:instruction float_max} {:instruction integer_dup_times} {:instruction float_dup_times} {:instruction float_mult} {:instruction integer_flush} {:instruction 15} {:instruction 15} {:instruction float_tan} {:instruction float_inc} {:instruction 44.559504711189845} {:instruction float_rot} {:instruction integer_dec} {:instruction float_rot} {:instruction integer_dec} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_rot} {:instruction integer_shove} {:instruction print_integer} {:instruction -7.788270215791826} {:instruction in1} {:instruction float_inc} {:instruction float_sin} {:instruction integer_mod} {:instruction float_sin} {:instruction in2} {:instruction float_swap} {:instruction float_min} {:instruction float_stackdepth} {:instruction print_integer})
Best program: (36.15340410350262 integer_yankdup float_mod 37.2491532139858 integer_yankdup 36.15340410350262 integer_sub float_dup_items float_dup float_dup tagged_308 integer_yank float_add integer_shove integer_shove integer_fromfloat float_flush float_dup_times integer_fromfloat in1 integer_yank in2 float_dup_times integer_mod in1 integer_mult integer_shove in1 integer_mult integer_shove integer_fromfloat integer_mult float_swap integer_fromfloat integer_stackdepth integer_yank in2 float_dup_times tagged_357 integer_mod integer_inc integer_min float_max integer_inc float_add float_flush float_sub integer_inc float_sub integer_inc float_min integer_inc float_max integer_inc integer_inc float_flush float_sub float_pop float_sub integer_inc float_min integer_mod integer_inc integer_mod integer_inc integer_min integer_mod integer_mod integer_inc integer_min float_max integer_inc integer_inc float_flush float_mod float_mod integer_inc integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_flush integer_inc integer_inc float_flush integer_inc integer_inc integer_inc float_min integer_mod integer_inc float_flush integer_inc integer_inc float_flush integer_inc float_div integer_mod integer_dup_times float_frominteger float_dup_times integer_dup_times float_div integer_inc integer_yank float_frominteger print_float integer_swap float_flush float_stackdepth float_dec 79.28096162990369 integer_add in1 integer_yankdup integer_add float_sin tag_integer_374 integer_dup in2 in2 integer_add float_mult float_mult integer_min integer_dup_times float_dup_times float_mult integer_max float_mult integer_fromfloat 15 42.00288187556635 float_rot float_mult float_max integer_dup_times float_dup_times float_mult integer_flush 15 15 float_tan float_inc 44.559504711189845 float_rot integer_dec float_rot integer_dec integer_fromfloat float_dup float_rot integer_shove print_integer -7.788270215791826 in1 float_inc float_sin integer_mod float_sin in2 float_swap float_min float_stackdepth print_integer)
Errors: [24.821 11 13.6047 9 43.801 8 0.2849 8 52.6782 9 11.8999 7 27.1974 9 0.1713 9 6.2342 9 21.9667 9 19.3507 11 27.92 11 37.5211 10 27.5203 7 14.9882 8 15.8694 9 64.944 9 52.5242 9 0.9936 8 56.8555 8 13.4749 10 42.996 8 4.2798 9 75.1154 10 58.7829 9]
Total: 939.7953000000001
Mean: 18.795906
Genome size: 167
Size: 168
Percent parens: 0.006
--- Population Statistics ---
Average total errors in population: 5238.179281900001
Median total errors in population: 981.2787000000001
Error averages by case: (182.91512819999988 10.793 222.9319985999994 9.896 236.34764990000141 9.504 181.67255649999993 9.497 211.90501329999827 9.999 206.4654347999992 8.96 224.87545710000106 10.508 161.16759100000013 10.273 174.1594399000012 10.158 177.9249855999991 9.819 206.05344160000078 11.371 183.23564210000063 10.73 186.34126360000133 10.883 169.7247850000008 8.288 182.57924970000022 9.168 216.3150818 9.79 233.8466899999985 10.41 204.09865120000129 10.301 172.7040345999995 9.157 237.56729590000185 9.528 190.6130365999997 10.59 204.1492714000009 9.252 162.3639086999995 10.051 240.88209160000176 10.602 217.48558319999944 10.326)
Error minima by case: (1.1639 8 0.9962 6 5.801 7 0.2711 7 1.6898 7 0.9019 6 0.1705 8 0.1273 6 0.2341 8 0.0596 6 0.7661 6 0.1063 7 1.5211 6 0.4023 6 2.0118 7 4.8714 6 6.0428 8 2.4972 8 0.0033 6 2.828 7 2.473 7 9.0118 7 0.2149 6 7.1154 7 1.2037 8)
Average genome size in population (length): 171.625
Average program size in population (points): 172.625
Average percent parens in population: 0.006
Minimum age in population: 0.0
Maximum age in population: 272.2080012795734
Average age in population: 269.1038114026743
Median age in population: 270.2224263448693
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.792
Error (vector) diversity:			 0.824
Behavioral diversity:				 0.828
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 570630845
--- Timings ---
Current time: 1529616008314 milliseconds
Total Time:        1120.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       294.1 seconds, 26.2%
Fitness Testing:    654.9 seconds, 58.4%
Report:             171.4 seconds, 15.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
