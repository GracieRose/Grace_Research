Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-44.75097999811912 -40] -84.75097999811912]
Train Case:   1 | Input/Output: [[-50.41811888278585 -71] -121.41811888278585]
Train Case:   2 | Input/Output: [[-22.9537020847213 -31] -53.9537020847213]
Train Case:   3 | Input/Output: [[-56.05682406397155 35] -21.056824063971547]
Train Case:   4 | Input/Output: [[-2.412847938191476 -38] -40.412847938191476]
Train Case:   5 | Input/Output: [[-1.2943901356185563 24] 22.705609864381444]
Train Case:   6 | Input/Output: [[-67.47648110061124 -18] -85.47648110061124]
Train Case:   7 | Input/Output: [[-22.77394038847585 -36] -58.77394038847585]
Train Case:   8 | Input/Output: [[69.1172500397974 -91] -21.882749960202602]
Train Case:   9 | Input/Output: [[-48.007199680095944 57] 8.992800319904056]
Train Case:  10 | Input/Output: [[68.94986400588704 -66] 2.9498640058870365]
Train Case:  11 | Input/Output: [[-34.977236668765755 43] 8.022763331234245]
Train Case:  12 | Input/Output: [[40.80737305575565 48] 88.80737305575565]
Train Case:  13 | Input/Output: [[-75.69519951344539 24] -51.69519951344539]
Train Case:  14 | Input/Output: [[-8.144150368322428 25] 16.85584963167757]
Train Case:  15 | Input/Output: [[-75.50199435065005 21] -54.50199435065005]
Train Case:  16 | Input/Output: [[-25.21131826307517 54] 28.78868173692483]
Train Case:  17 | Input/Output: [[29.406689374217876 90] 119.40668937421788]
Train Case:  18 | Input/Output: [[80.1075822423692 -89] -8.892417757630795]
Train Case:  19 | Input/Output: [[-44.576009036161814 14] -30.576009036161814]
Train Case:  20 | Input/Output: [[-14.173848072203342 74] 59.82615192779666]
Train Case:  21 | Input/Output: [[-13.987388143748802 -94] -107.9873881437488]
Train Case:  22 | Input/Output: [[-77.12257392431931 84] 6.877426075680688]
Train Case:  23 | Input/Output: [[59.20889870262653 -36] 23.208898702626527]
Train Case:  24 | Input/Output: [[6.733690483791747 65] 71.73369048379175]
Test Case:   0 | Input/Output: [[99.43386004803753 -23] 76.43386004803753]
Test Case:   1 | Input/Output: [[-85.455374387417 15] -70.455374387417]
Test Case:   2 | Input/Output: [[35.61525216872738 2] 37.61525216872738]
Test Case:   3 | Input/Output: [[72.43791451800263 15] 87.43791451800263]
Test Case:   4 | Input/Output: [[-65.97806626431537 -36] -101.97806626431537]
Test Case:   5 | Input/Output: [[72.20843478992668 -92] -19.791565210073315]
Test Case:   6 | Input/Output: [[14.310754664194718 35] 49.31075466419472]
Test Case:   7 | Input/Output: [[-95.24981625863032 -81] -176.24981625863032]
Test Case:   8 | Input/Output: [[-40.62118272048289 -84] -124.62118272048289]
Test Case:   9 | Input/Output: [[-26.779213119278296 57] 30.220786880721704]
Test Case:  10 | Input/Output: [[85.21625899977798 76] 161.21625899977798]
Test Case:  11 | Input/Output: [[-27.77129428662981 35] 7.228705713370189]
Test Case:  12 | Input/Output: [[4.972967465861828 -21] -16.027032534138172]
Test Case:  13 | Input/Output: [[-1.09116010950612 -81] -82.09116010950612]
Test Case:  14 | Input/Output: [[97.3271393015728 -99] -1.6728606984272005]
Test Case:  15 | Input/Output: [[45.021404088275006 23] 68.021404088275]
Test Case:  16 | Input/Output: [[14.961616669499975 -6] 8.961616669499975]
Test Case:  17 | Input/Output: [[28.07283687064995 36] 64.07283687064995]
Test Case:  18 | Input/Output: [[-98.69282667674035 24] -74.69282667674035]
Test Case:  19 | Input/Output: [[88.59813485119793 79] 167.59813485119793]
Test Case:  20 | Input/Output: [[75.05625304192449 -68] 7.056253041924492]
Test Case:  21 | Input/Output: [[-5.6512203955150255 -73] -78.65122039551503]
Test Case:  22 | Input/Output: [[70.26324377305545 53] 123.26324377305545]
Test Case:  23 | Input/Output: [[-26.017245325532784 -40] -66.01724532553278]
Test Case:  24 | Input/Output: [[-13.201746223130016 62] 48.798253776869984]
Test Case:  25 | Input/Output: [[-32.17269243363947 86] 53.82730756636053]
Test Case:  26 | Input/Output: [[31.69839890902807 29] 60.69839890902807]
Test Case:  27 | Input/Output: [[50.36503023357591 72] 122.36503023357591]
Test Case:  28 | Input/Output: [[68.32278402641802 -31] 37.32278402641802]
Test Case:  29 | Input/Output: [[71.2187277450723 -35] 36.2187277450723]
Test Case:  30 | Input/Output: [[52.88813096306063 -19] 33.88813096306063]
Test Case:  31 | Input/Output: [[-37.820028409308094 -34] -71.8200284093081]
Test Case:  32 | Input/Output: [[-82.71878803900765 -70] -152.71878803900765]
Test Case:  33 | Input/Output: [[-11.84735407326285 38] 26.15264592673715]
Test Case:  34 | Input/Output: [[-70.0121310373022 -22] -92.0121310373022]
Test Case:  35 | Input/Output: [[-43.49714316844886 -70] -113.49714316844886]
Test Case:  36 | Input/Output: [[43.30725134963603 -83] -39.69274865036397]
Test Case:  37 | Input/Output: [[89.95617800048285 -21] 68.95617800048285]
Test Case:  38 | Input/Output: [[11.105675064726967 3] 14.105675064726967]
Test Case:  39 | Input/Output: [[73.71613547532846 13] 86.71613547532846]
Test Case:  40 | Input/Output: [[63.55389007754317 -98] -34.44610992245683]
Test Case:  41 | Input/Output: [[15.150249654255205 15] 30.150249654255205]
Test Case:  42 | Input/Output: [[-87.32506136570741 -61] -148.32506136570743]
Test Case:  43 | Input/Output: [[9.731188330804613 70] 79.73118833080461]
Test Case:  44 | Input/Output: [[2.2150435516818447 49] 51.215043551681845]
Test Case:  45 | Input/Output: [[3.152075446907986 -77] -73.84792455309201]
Test Case:  46 | Input/Output: [[-86.32433907363716 66] -20.324339073637162]
Test Case:  47 | Input/Output: [[18.864391019242888 70] 88.86439101924289]
Test Case:  48 | Input/Output: [[23.600779531263456 16] 39.600779531263456]
Test Case:  49 | Input/Output: [[-60.8266345983967 76] 15.173365401603299]
Test Case:  50 | Input/Output: [[44.955391526608935 53] 97.95539152660893]
Test Case:  51 | Input/Output: [[14.492690077132451 34] 48.49269007713245]
Test Case:  52 | Input/Output: [[-90.39069716950769 -23] -113.39069716950769]
Test Case:  53 | Input/Output: [[-91.76545387561285 20] -71.76545387561285]
Test Case:  54 | Input/Output: [[-11.009250091196577 -80] -91.00925009119658]
Test Case:  55 | Input/Output: [[-43.36461735691142 43] -0.36461735691141683]
Test Case:  56 | Input/Output: [[98.2497175188621 87] 185.2497175188621]
Test Case:  57 | Input/Output: [[-92.34710614023047 -88] -180.34710614023047]
Test Case:  58 | Input/Output: [[11.92436069614611 -10] 1.9243606961461097]
Test Case:  59 | Input/Output: [[24.274842377613453 -62] -37.72515762238655]
Test Case:  60 | Input/Output: [[-21.821996897862334 -49] -70.82199689786233]
Test Case:  61 | Input/Output: [[0.39930328599912457 -54] -53.600696714000875]
Test Case:  62 | Input/Output: [[62.82360236355427 -90] -27.176397636445728]
Test Case:  63 | Input/Output: [[-49.97141865802646 -5] -54.97141865802646]
Test Case:  64 | Input/Output: [[91.78159847287208 -78] 13.781598472872076]
Test Case:  65 | Input/Output: [[64.43254812447705 61] 125.43254812447705]
Test Case:  66 | Input/Output: [[39.07039014504198 -41] -1.9296098549580165]
Test Case:  67 | Input/Output: [[63.8760284942413 -39] 24.876028494241297]
Test Case:  68 | Input/Output: [[-2.1171318135309036 66] 63.882868186469096]
Test Case:  69 | Input/Output: [[-87.23967124914842 -69] -156.23967124914842]
Test Case:  70 | Input/Output: [[38.084189064679805 -79] -40.915810935320195]
Test Case:  71 | Input/Output: [[-21.595412837344767 -86] -107.59541283734477]
Test Case:  72 | Input/Output: [[74.26946389174049 -17] 57.269463891740486]
Test Case:  73 | Input/Output: [[65.81508436586452 49] 114.81508436586452]
Test Case:  74 | Input/Output: [[-86.87362271453456 68] -18.873622714534562]
Test Case:  75 | Input/Output: [[54.709419720612686 17] 71.70941972061269]
Test Case:  76 | Input/Output: [[94.9794466365426 58] 152.9794466365426]
Test Case:  77 | Input/Output: [[-80.6662659537851 72] -8.6662659537851]
Test Case:  78 | Input/Output: [[-21.609459208469616 -42] -63.609459208469616]
Test Case:  79 | Input/Output: [[-76.46778585634291 30] -46.467785856342914]
Test Case:  80 | Input/Output: [[-96.3318678936867 58] -38.331867893686706]
Test Case:  81 | Input/Output: [[67.51241829526981 -53] 14.51241829526981]
Test Case:  82 | Input/Output: [[11.750422339011706 -69] -57.249577660988294]
Test Case:  83 | Input/Output: [[1.3507444452169892 -46] -44.64925555478301]
Test Case:  84 | Input/Output: [[75.84758996403994 -67] 8.84758996403994]
Test Case:  85 | Input/Output: [[-85.4555953639402 -15] -100.4555953639402]
Test Case:  86 | Input/Output: [[66.93514588143276 75] 141.93514588143276]
Test Case:  87 | Input/Output: [[-50.810103287036725 88] 37.189896712963275]
Test Case:  88 | Input/Output: [[-55.404649040950304 -92] -147.4046490409503]
Test Case:  89 | Input/Output: [[8.158842944311061 69] 77.15884294431106]
Test Case:  90 | Input/Output: [[1.3087488585066467 -32] -30.691251141493353]
Test Case:  91 | Input/Output: [[-49.85486332377435 62] 12.145136676225647]
Test Case:  92 | Input/Output: [[6.493940375949421 -26] -19.50605962405058]
Test Case:  93 | Input/Output: [[-61.52944082364178 -1] -62.52944082364178]
Test Case:  94 | Input/Output: [[78.67529880596089 14] 92.67529880596089]
Test Case:  95 | Input/Output: [[19.76941809015473 -70] -50.23058190984527]
Test Case:  96 | Input/Output: [[-8.948133078499936 -76] -84.94813307849994]
Test Case:  97 | Input/Output: [[-17.766626038393454 32] 14.233373961606546]
Test Case:  98 | Input/Output: [[4.0203146214705185 30] 34.02031462147052]
Test Case:  99 | Input/Output: [[58.65151845842482 8] 66.65151845842482]
Test Case: 100 | Input/Output: [[-10.164876403768218 -92] -102.16487640376822]
Test Case: 101 | Input/Output: [[20.140788358882446 35] 55.140788358882446]
Test Case: 102 | Input/Output: [[-39.584159138853934 -45] -84.58415913885393]
Test Case: 103 | Input/Output: [[-15.79386288344719 81] 65.20613711655281]
Test Case: 104 | Input/Output: [[-67.94102144150585 -31] -98.94102144150585]
Test Case: 105 | Input/Output: [[-7.511475755777482 -3] -10.511475755777482]
Test Case: 106 | Input/Output: [[98.93566816243043 50] 148.93566816243043]
Test Case: 107 | Input/Output: [[82.92230137911542 -38] 44.922301379115424]
Test Case: 108 | Input/Output: [[59.10513347550287 33] 92.10513347550287]
Test Case: 109 | Input/Output: [[76.6880767394799 -86] -9.311923260520103]
Test Case: 110 | Input/Output: [[94.86307104922864 37] 131.86307104922864]
Test Case: 111 | Input/Output: [[-33.65233614864549 -58] -91.65233614864549]
Test Case: 112 | Input/Output: [[-35.42435205392273 99] 63.57564794607727]
Test Case: 113 | Input/Output: [[42.17602489941862 47] 89.17602489941862]
Test Case: 114 | Input/Output: [[60.247878751563405 -64] -3.7521212484365947]
Test Case: 115 | Input/Output: [[-97.96258255260004 100] 2.0374174473999602]
Test Case: 116 | Input/Output: [[67.22611293320571 -92] -24.773887066794288]
Test Case: 117 | Input/Output: [[-50.570145334681186 -79] -129.57014533468117]
Test Case: 118 | Input/Output: [[89.08872872326074 22] 111.08872872326074]
Test Case: 119 | Input/Output: [[-83.99606103525198 -70] -153.99606103525198]
Test Case: 120 | Input/Output: [[41.99978664449901 84] 125.99978664449901]
Test Case: 121 | Input/Output: [[-24.531081315239064 29] 4.468918684760936]
Test Case: 122 | Input/Output: [[-70.79329138054153 98] 27.206708619458468]
Test Case: 123 | Input/Output: [[-62.99027637248253 94] 31.009723627517467]
Test Case: 124 | Input/Output: [[87.6779265326609 74] 161.6779265326609]
Test Case: 125 | Input/Output: [[-40.22748240289546 -85] -125.22748240289546]
Test Case: 126 | Input/Output: [[96.78644210281013 -7] 89.78644210281013]
Test Case: 127 | Input/Output: [[86.21005789587326 23] 109.21005789587326]
Test Case: 128 | Input/Output: [[-26.716414531642414 -100] -126.71641453164241]
Test Case: 129 | Input/Output: [[-17.45933081353759 -80] -97.45933081353759]
Test Case: 130 | Input/Output: [[-69.83269976198683 -49] -118.83269976198683]
Test Case: 131 | Input/Output: [[43.52057733223012 55] 98.52057733223012]
Test Case: 132 | Input/Output: [[-15.79214516891301 58] 42.20785483108699]
Test Case: 133 | Input/Output: [[41.13379441052183 78] 119.13379441052183]
Test Case: 134 | Input/Output: [[23.688191971115174 73] 96.68819197111517]
Test Case: 135 | Input/Output: [[-51.535148293424406 -51] -102.53514829342441]
Test Case: 136 | Input/Output: [[-11.20876487444815 51] 39.79123512555185]
Test Case: 137 | Input/Output: [[-18.795432024110426 17] -1.7954320241104256]
Test Case: 138 | Input/Output: [[-8.422386809601122 -22] -30.42238680960112]
Test Case: 139 | Input/Output: [[-51.52912334792086 -26] -77.52912334792086]
Test Case: 140 | Input/Output: [[62.93605757135731 -74] -11.06394242864269]
Test Case: 141 | Input/Output: [[-28.837016695705017 -72] -100.83701669570502]
Test Case: 142 | Input/Output: [[-50.84800189636005 42] -8.848001896360053]
Test Case: 143 | Input/Output: [[-46.5060610595744 92] 45.4939389404256]
Test Case: 144 | Input/Output: [[-64.39687136054758 77] 12.603128639452422]
Test Case: 145 | Input/Output: [[-18.949634218468077 50] 31.050365781531923]
Test Case: 146 | Input/Output: [[-77.32795803581718 -86] -163.32795803581718]
Test Case: 147 | Input/Output: [[49.82913391765814 -69] -19.17086608234186]
Test Case: 148 | Input/Output: [[-12.655418054821482 78] 65.34458194517852]
Test Case: 149 | Input/Output: [[88.22955057869896 -33] 55.22955057869896]
Test Case: 150 | Input/Output: [[14.962318596939511 14] 28.96231859693951]
Test Case: 151 | Input/Output: [[-12.638119484331227 89] 76.36188051566877]
Test Case: 152 | Input/Output: [[-43.74003923874379 -23] -66.74003923874379]
Test Case: 153 | Input/Output: [[73.98931445343905 18] 91.98931445343905]
Test Case: 154 | Input/Output: [[1.7282213874884889 6] 7.728221387488489]
Test Case: 155 | Input/Output: [[64.92033554666753 71] 135.92033554666753]
Test Case: 156 | Input/Output: [[95.34246273227922 -43] 52.342462732279216]
Test Case: 157 | Input/Output: [[-7.482085809258351 -62] -69.48208580925835]
Test Case: 158 | Input/Output: [[9.905618049343616 -40] -30.094381950656384]
Test Case: 159 | Input/Output: [[-60.6329164887343 43] -17.632916488734303]
Test Case: 160 | Input/Output: [[31.204898586473718 -38] -6.795101413526282]
Test Case: 161 | Input/Output: [[-50.751288908501024 72] 21.248711091498976]
Test Case: 162 | Input/Output: [[76.04908636352096 6] 82.04908636352096]
Test Case: 163 | Input/Output: [[42.52170661178786 -13] 29.521706611787863]
Test Case: 164 | Input/Output: [[10.739794427384524 -30] -19.260205572615476]
Test Case: 165 | Input/Output: [[50.44922320586281 -87] -36.55077679413719]
Test Case: 166 | Input/Output: [[9.828969346533526 0] 9.828969346533526]
Test Case: 167 | Input/Output: [[13.253692605919042 -91] -77.74630739408096]
Test Case: 168 | Input/Output: [[7.075240460070177 -21] -13.924759539929823]
Test Case: 169 | Input/Output: [[90.86935600109439 -95] -4.130643998905612]
Test Case: 170 | Input/Output: [[-55.20110699042535 -94] -149.20110699042536]
Test Case: 171 | Input/Output: [[-91.97670183154976 9] -82.97670183154976]
Test Case: 172 | Input/Output: [[-59.448696239217604 86] 26.551303760782396]
Test Case: 173 | Input/Output: [[-76.7100976647923 -11] -87.7100976647923]
Test Case: 174 | Input/Output: [[-89.87653278291006 -17] -106.87653278291006]
Test Case: 175 | Input/Output: [[-2.2158892005189585 -8] -10.215889200518959]
Test Case: 176 | Input/Output: [[34.84198053992708 14] 48.84198053992708]
Test Case: 177 | Input/Output: [[33.36111560273466 -12] 21.361115602734657]
Test Case: 178 | Input/Output: [[-22.39582427022704 -4] -26.39582427022704]
Test Case: 179 | Input/Output: [[93.06649217380794 13] 106.06649217380794]
Test Case: 180 | Input/Output: [[40.58106356276258 -85] -44.41893643723742]
Test Case: 181 | Input/Output: [[36.37461882133525 52] 88.37461882133525]
Test Case: 182 | Input/Output: [[-25.351147840799968 -62] -87.35114784079997]
Test Case: 183 | Input/Output: [[-86.49330114242993 -31] -117.49330114242993]
Test Case: 184 | Input/Output: [[-91.31888231524081 -69] -160.3188823152408]
Test Case: 185 | Input/Output: [[14.630901947615826 32] 46.630901947615826]
Test Case: 186 | Input/Output: [[-20.209395766987143 2] -18.209395766987143]
Test Case: 187 | Input/Output: [[-42.70498904867881 -34] -76.70498904867881]
Test Case: 188 | Input/Output: [[-33.775882735566995 9] -24.775882735566995]
Test Case: 189 | Input/Output: [[-3.2564309632795414 53] 49.74356903672046]
Test Case: 190 | Input/Output: [[-40.19223257120317 25] -15.19223257120317]
Test Case: 191 | Input/Output: [[40.170914855266346 -62] -21.829085144733654]
Test Case: 192 | Input/Output: [[-60.11234940546113 -96] -156.11234940546115]
Test Case: 193 | Input/Output: [[12.77754117765653 97] 109.77754117765653]
Test Case: 194 | Input/Output: [[-26.03233375946128 44] 17.96766624053872]
Test Case: 195 | Input/Output: [[13.167736046340778 81] 94.16773604634078]
Test Case: 196 | Input/Output: [[70.8081918437758 -55] 15.808191843775802]
Test Case: 197 | Input/Output: [[9.96568736730454 53] 62.96568736730454]
Test Case: 198 | Input/Output: [[36.71860812745285 22] 58.71860812745285]
Test Case: 199 | Input/Output: [[-15.964113749179504 -64] -79.9641137491795]
Test Case: 200 | Input/Output: [[16.160987750315513 100] 116.16098775031551]
Test Case: 201 | Input/Output: [[-49.16791094306567 -40] -89.16791094306566]
Test Case: 202 | Input/Output: [[-17.58717643748402 95] 77.41282356251598]
Test Case: 203 | Input/Output: [[-4.982582452558233 91] 86.01741754744177]
Test Case: 204 | Input/Output: [[-41.744297350831516 -44] -85.74429735083152]
Test Case: 205 | Input/Output: [[-36.984314390513084 22] -14.984314390513084]
Test Case: 206 | Input/Output: [[0.9663266233909837 -4] -3.0336733766090163]
Test Case: 207 | Input/Output: [[94.11601862937232 -89] 5.11601862937232]
Test Case: 208 | Input/Output: [[56.270413795861 89] 145.270413795861]
Test Case: 209 | Input/Output: [[25.541133649141855 -37] -11.458866350858145]
Test Case: 210 | Input/Output: [[-58.23027756760419 24] -34.23027756760419]
Test Case: 211 | Input/Output: [[-89.79619112051458 -100] -189.79619112051458]
Test Case: 212 | Input/Output: [[46.596602308397706 -24] 22.596602308397706]
Test Case: 213 | Input/Output: [[72.72533139669056 -15] 57.725331396690564]
Test Case: 214 | Input/Output: [[-32.262698998855726 62] 29.737301001144274]
Test Case: 215 | Input/Output: [[29.68371549393794 -46] -16.31628450606206]
Test Case: 216 | Input/Output: [[79.06950628800524 89] 168.06950628800524]
Test Case: 217 | Input/Output: [[-73.8328533217473 -78] -151.83285332174728]
Test Case: 218 | Input/Output: [[-98.46656668516741 -95] -193.4665666851674]
Test Case: 219 | Input/Output: [[-94.70239814577394 -26] -120.70239814577394]
Test Case: 220 | Input/Output: [[64.51228371041651 30] 94.51228371041651]
Test Case: 221 | Input/Output: [[96.43735310659301 40] 136.437353106593]
Test Case: 222 | Input/Output: [[-22.972021700304836 18] -4.972021700304836]
Test Case: 223 | Input/Output: [[-24.54548487369344 72] 47.45451512630656]
Test Case: 224 | Input/Output: [[-25.022683588644085 -24] -49.022683588644085]
Test Case: 225 | Input/Output: [[88.42850132489397 -24] 64.42850132489397]
Test Case: 226 | Input/Output: [[-63.14888329175421 14] -49.14888329175421]
Test Case: 227 | Input/Output: [[79.33246046961776 -60] 19.332460469617757]
Test Case: 228 | Input/Output: [[39.19235740732529 -5] 34.19235740732529]
Test Case: 229 | Input/Output: [[60.9875527788316 50] 110.9875527788316]
Test Case: 230 | Input/Output: [[35.96500306219474 85] 120.96500306219474]
Test Case: 231 | Input/Output: [[2.2411593303841073 -74] -71.75884066961589]
Test Case: 232 | Input/Output: [[-91.06302705933184 -52] -143.06302705933183]
Test Case: 233 | Input/Output: [[35.847500766683794 51] 86.8475007666838]
Test Case: 234 | Input/Output: [[-32.270132796946086 96] 63.729867203053914]
Test Case: 235 | Input/Output: [[53.86378307947831 -79] -25.13621692052169]
Test Case: 236 | Input/Output: [[29.241302991744135 -31] -1.758697008255865]
Test Case: 237 | Input/Output: [[-2.579336108949221 16] 13.42066389105078]
Test Case: 238 | Input/Output: [[-46.80509721484283 -97] -143.80509721484282]
Test Case: 239 | Input/Output: [[-36.68763586585453 78] 41.31236413414547]
Test Case: 240 | Input/Output: [[72.27945633462662 35] 107.27945633462662]
Test Case: 241 | Input/Output: [[87.52822343136074 78] 165.52822343136074]
Test Case: 242 | Input/Output: [[-71.97803641513934 46] -25.978036415139343]
Test Case: 243 | Input/Output: [[-37.029509346800715 -49] -86.02950934680072]
Test Case: 244 | Input/Output: [[-97.3474575075476 -61] -158.3474575075476]
Test Case: 245 | Input/Output: [[-82.64346947209825 -43] -125.64346947209825]
Test Case: 246 | Input/Output: [[40.86982545745889 36] 76.86982545745889]
Test Case: 247 | Input/Output: [[84.9966528173791 57] 141.9966528173791]
Test Case: 248 | Input/Output: [[-29.505177230968656 14] -15.505177230968656]
Test Case: 249 | Input/Output: [[84.33744808442637 55] 139.33744808442637]
Test Case: 250 | Input/Output: [[-89.47290642357733 -54] -143.47290642357734]
Test Case: 251 | Input/Output: [[-1.2989803713263228 -80] -81.29898037132632]
Test Case: 252 | Input/Output: [[-94.34205592781643 -87] -181.34205592781643]
Test Case: 253 | Input/Output: [[20.145119310957398 -49] -28.854880689042602]
Test Case: 254 | Input/Output: [[3.348864006952894 83] 86.3488640069529]
Test Case: 255 | Input/Output: [[-71.98718867262819 -62] -133.98718867262818]
Test Case: 256 | Input/Output: [[29.855060998183433 -54] -24.144939001816567]
Test Case: 257 | Input/Output: [[3.7120761740008703 58] 61.71207617400087]
Test Case: 258 | Input/Output: [[70.30908277760909 -64] 6.309082777609092]
Test Case: 259 | Input/Output: [[3.7430421669998566 75] 78.74304216699986]
Test Case: 260 | Input/Output: [[43.431386561882874 69] 112.43138656188287]
Test Case: 261 | Input/Output: [[62.170530033656746 -30] 32.170530033656746]
Test Case: 262 | Input/Output: [[-35.95684975587187 -84] -119.95684975587187]
Test Case: 263 | Input/Output: [[94.20902188094166 -83] 11.209021880941663]
Test Case: 264 | Input/Output: [[98.46073843229698 -16] 82.46073843229698]
Test Case: 265 | Input/Output: [[35.579255771935095 -8] 27.579255771935095]
Test Case: 266 | Input/Output: [[41.229829964741185 71] 112.22982996474119]
Test Case: 267 | Input/Output: [[-58.78029309901272 -18] -76.78029309901271]
Test Case: 268 | Input/Output: [[21.216789138953132 36] 57.21678913895313]
Test Case: 269 | Input/Output: [[71.0653630169266 -54] 17.065363016926597]
Test Case: 270 | Input/Output: [[7.630328182368842 -85] -77.36967181763116]
Test Case: 271 | Input/Output: [[-55.710240714026526 -46] -101.71024071402653]
Test Case: 272 | Input/Output: [[17.890276517973064 24] 41.890276517973064]
Test Case: 273 | Input/Output: [[67.61577801123718 36] 103.61577801123718]
Test Case: 274 | Input/Output: [[-43.310253372132166 -36] -79.31025337213217]
Test Case: 275 | Input/Output: [[-81.85493918791158 4] -77.85493918791158]
Test Case: 276 | Input/Output: [[85.46842472442785 53] 138.46842472442785]
Test Case: 277 | Input/Output: [[-42.34881280001228 -92] -134.3488128000123]
Test Case: 278 | Input/Output: [[58.943986522669746 -36] 22.943986522669746]
Test Case: 279 | Input/Output: [[-70.7290134118258 67] -3.729013411825804]
Test Case: 280 | Input/Output: [[41.84170862013909 8] 49.84170862013909]
Test Case: 281 | Input/Output: [[37.25234933105227 24] 61.25234933105227]
Test Case: 282 | Input/Output: [[-88.50522925070871 -71] -159.5052292507087]
Test Case: 283 | Input/Output: [[93.74082094065247 9] 102.74082094065247]
Test Case: 284 | Input/Output: [[-53.77457065608577 54] 0.22542934391422875]
Test Case: 285 | Input/Output: [[11.00605237732806 -43] -31.99394762267194]
Test Case: 286 | Input/Output: [[17.196702448024098 -69] -51.8032975519759]
Test Case: 287 | Input/Output: [[-4.337266258336996 68] 63.662733741663004]
Test Case: 288 | Input/Output: [[-11.087491633138285 -60] -71.08749163313828]
Test Case: 289 | Input/Output: [[14.722521064716034 -96] -81.27747893528397]
Test Case: 290 | Input/Output: [[92.44950366213521 -73] 19.449503662135214]
Test Case: 291 | Input/Output: [[57.49511580449604 -4] 53.49511580449604]
Test Case: 292 | Input/Output: [[44.50211043460661 -71] -26.497889565393393]
Test Case: 293 | Input/Output: [[89.32363695989554 -74] 15.323636959895538]
Test Case: 294 | Input/Output: [[-71.62820023501808 56] -15.628200235018085]
Test Case: 295 | Input/Output: [[-41.65714060836243 34] -7.6571406083624325]
Test Case: 296 | Input/Output: [[-60.33459628444051 -47] -107.33459628444051]
Test Case: 297 | Input/Output: [[50.13495573487023 -82] -31.865044265129768]
Test Case: 298 | Input/Output: [[17.16445486165965 43] 60.16445486165965]
Test Case: 299 | Input/Output: [[-63.00530917319889 -92] -155.0053091731989]
Test Case: 300 | Input/Output: [[-89.44095537891894 55] -34.44095537891894]
Test Case: 301 | Input/Output: [[20.21380979069123 -46] -25.78619020930877]
Test Case: 302 | Input/Output: [[-68.32608956471466 87] 18.673910435285336]
Test Case: 303 | Input/Output: [[-86.74849886715931 8] -78.74849886715931]
Test Case: 304 | Input/Output: [[-38.973816088610434 -99] -137.97381608861042]
Test Case: 305 | Input/Output: [[0.2107090706966943 9] 9.210709070696694]
Test Case: 306 | Input/Output: [[17.446397622725 98] 115.446397622725]
Test Case: 307 | Input/Output: [[9.22941154895554 -4] 5.2294115489555395]
Test Case: 308 | Input/Output: [[-92.82722196878595 -19] -111.82722196878595]
Test Case: 309 | Input/Output: [[93.98302789999286 -71] 22.983027899992862]
Test Case: 310 | Input/Output: [[-18.419229469570325 -83] -101.41922946957033]
Test Case: 311 | Input/Output: [[43.942029122342745 74] 117.94202912234275]
Test Case: 312 | Input/Output: [[21.400314170567597 72] 93.4003141705676]
Test Case: 313 | Input/Output: [[41.75584119771813 -82] -40.24415880228187]
Test Case: 314 | Input/Output: [[83.09584858250989 -21] 62.09584858250989]
Test Case: 315 | Input/Output: [[76.2646550597405 71] 147.2646550597405]
Test Case: 316 | Input/Output: [[32.70262054534501 37] 69.70262054534501]
Test Case: 317 | Input/Output: [[-28.197843428540807 21] -7.197843428540807]
Test Case: 318 | Input/Output: [[2.173320980274738 47] 49.17332098027474]
Test Case: 319 | Input/Output: [[-33.71161417139639 -91] -124.71161417139639]
Test Case: 320 | Input/Output: [[54.46268024811678 -27] 27.462680248116783]
Test Case: 321 | Input/Output: [[62.71540048788137 82] 144.71540048788137]
Test Case: 322 | Input/Output: [[60.01246641386763 -8] 52.01246641386763]
Test Case: 323 | Input/Output: [[54.726607226786314 -69] -14.273392773213686]
Test Case: 324 | Input/Output: [[13.030172945535085 77] 90.03017294553509]
Test Case: 325 | Input/Output: [[66.84070430839247 -87] -20.159295691607525]
Test Case: 326 | Input/Output: [[-24.778739222370078 48] 23.221260777629922]
Test Case: 327 | Input/Output: [[-27.749458089380767 -11] -38.74945808938077]
Test Case: 328 | Input/Output: [[42.261601542071844 -94] -51.738398457928156]
Test Case: 329 | Input/Output: [[99.0117745332009 -66] 33.01177453320091]
Test Case: 330 | Input/Output: [[58.188122756202404 -28] 30.188122756202404]
Test Case: 331 | Input/Output: [[-37.82503589030117 -72] -109.82503589030117]
Test Case: 332 | Input/Output: [[63.81121108437006 3] 66.81121108437006]
Test Case: 333 | Input/Output: [[-68.01871527083858 -97] -165.01871527083858]
Test Case: 334 | Input/Output: [[-45.032582024096236 71] 25.967417975903764]
Test Case: 335 | Input/Output: [[-33.605312466936184 -10] -43.605312466936184]
Test Case: 336 | Input/Output: [[3.5074112666880524 -66] -62.49258873331195]
Test Case: 337 | Input/Output: [[-20.503299036404087 -15] -35.50329903640409]
Test Case: 338 | Input/Output: [[9.307805274522778 -97] -87.69219472547722]
Test Case: 339 | Input/Output: [[46.78305920006375 -59] -12.216940799936253]
Test Case: 340 | Input/Output: [[-40.50850563329351 25] -15.50850563329351]
Test Case: 341 | Input/Output: [[87.68385463005336 -67] 20.68385463005336]
Test Case: 342 | Input/Output: [[-81.26054071015125 68] -13.260540710151247]
Test Case: 343 | Input/Output: [[-88.97937559510419 13] -75.97937559510419]
Test Case: 344 | Input/Output: [[-95.28977038164554 73] -22.28977038164554]
Test Case: 345 | Input/Output: [[11.076253762241066 -99] -87.92374623775893]
Test Case: 346 | Input/Output: [[-57.773790412531255 -21] -78.77379041253126]
Test Case: 347 | Input/Output: [[-37.41839460242788 -54] -91.41839460242788]
Test Case: 348 | Input/Output: [[-77.12283370313443 77] -0.12283370313443243]
Test Case: 349 | Input/Output: [[43.62227925051346 -17] 26.622279250513458]
Test Case: 350 | Input/Output: [[-33.94572924723789 -86] -119.94572924723789]
Test Case: 351 | Input/Output: [[1.3743614417470127 12] 13.374361441747013]
Test Case: 352 | Input/Output: [[42.63557120798066 28] 70.63557120798066]
Test Case: 353 | Input/Output: [[-38.96095827258053 1] -37.96095827258053]
Test Case: 354 | Input/Output: [[80.03379050871041 -3] 77.03379050871041]
Test Case: 355 | Input/Output: [[-3.731357069411928 -40] -43.73135706941193]
Test Case: 356 | Input/Output: [[-31.153736920471815 -85] -116.15373692047181]
Test Case: 357 | Input/Output: [[97.15193030893033 -11] 86.15193030893033]
Test Case: 358 | Input/Output: [[-56.64191756255737 -33] -89.64191756255737]
Test Case: 359 | Input/Output: [[-9.731059528256509 39] 29.26894047174349]
Test Case: 360 | Input/Output: [[-17.88979862489724 98] 80.11020137510276]
Test Case: 361 | Input/Output: [[-10.549896535033355 -38] -48.549896535033355]
Test Case: 362 | Input/Output: [[39.63022214232669 -64] -24.369777857673313]
Test Case: 363 | Input/Output: [[-40.33786109578092 34] -6.337861095780923]
Test Case: 364 | Input/Output: [[38.80887602146953 50] 88.80887602146953]
Test Case: 365 | Input/Output: [[-76.6384616103048 80] 3.3615383896951982]
Test Case: 366 | Input/Output: [[38.660566709395454 56] 94.66056670939545]
Test Case: 367 | Input/Output: [[70.19101852066524 12] 82.19101852066524]
Test Case: 368 | Input/Output: [[27.044461385057986 -60] -32.955538614942014]
Test Case: 369 | Input/Output: [[26.97012515329959 13] 39.97012515329959]
Test Case: 370 | Input/Output: [[50.473077279075085 48] 98.47307727907508]
Test Case: 371 | Input/Output: [[-32.259201086383655 -65] -97.25920108638365]
Test Case: 372 | Input/Output: [[-55.77721143563912 -54] -109.77721143563912]
Test Case: 373 | Input/Output: [[45.836325672365575 -99] -53.163674327634425]
Test Case: 374 | Input/Output: [[15.206736646498697 -14] 1.2067366464986975]
Test Case: 375 | Input/Output: [[-25.35332434397597 18] -7.35332434397597]
Test Case: 376 | Input/Output: [[-38.75919218211836 77] 38.24080781788164]
Test Case: 377 | Input/Output: [[-88.3862053806522 75] -13.3862053806522]
Test Case: 378 | Input/Output: [[-2.0369281817019953 86] 83.963071818298]
Test Case: 379 | Input/Output: [[54.717146844645896 -87] -32.282853155354104]
Test Case: 380 | Input/Output: [[76.63812218315209 -24] 52.63812218315209]
Test Case: 381 | Input/Output: [[-16.736803166623233 -9] -25.736803166623233]
Test Case: 382 | Input/Output: [[-6.220155286899853 -18] -24.220155286899853]
Test Case: 383 | Input/Output: [[16.647126111615478 -63] -46.35287388838452]
Test Case: 384 | Input/Output: [[-65.8985371670894 -70] -135.8985371670894]
Test Case: 385 | Input/Output: [[72.07103977715727 -92] -19.928960222842733]
Test Case: 386 | Input/Output: [[-27.99792223304 64] 36.00207776696]
Test Case: 387 | Input/Output: [[-3.1572834968275316 43] 39.84271650317247]
Test Case: 388 | Input/Output: [[54.95649482892307 75] 129.95649482892307]
Test Case: 389 | Input/Output: [[29.50023763582911 -78] -48.49976236417089]
Test Case: 390 | Input/Output: [[83.33320093211614 50] 133.33320093211614]
Test Case: 391 | Input/Output: [[-54.77467802483549 -13] -67.77467802483548]
Test Case: 392 | Input/Output: [[-68.34501405330376 -76] -144.34501405330377]
Test Case: 393 | Input/Output: [[61.920406577156285 99] 160.92040657715629]
Test Case: 394 | Input/Output: [[28.771276026462658 96] 124.77127602646266]
Test Case: 395 | Input/Output: [[48.80007185922358 -57] -8.199928140776422]
Test Case: 396 | Input/Output: [[-87.0143045221682 -52] -139.0143045221682]
Test Case: 397 | Input/Output: [[-19.834238527121556 0] -19.834238527121556]
Test Case: 398 | Input/Output: [[-74.49308788479263 -10] -84.49308788479263]
Test Case: 399 | Input/Output: [[74.80053257191207 86] 160.80053257191207]
Test Case: 400 | Input/Output: [[82.11213551772587 -93] -10.887864482274125]
Test Case: 401 | Input/Output: [[-95.58124858717684 -50] -145.58124858717684]
Test Case: 402 | Input/Output: [[23.69812512131972 41] 64.69812512131972]
Test Case: 403 | Input/Output: [[-12.736401028550844 -82] -94.73640102855084]
Test Case: 404 | Input/Output: [[13.521170472277404 29] 42.521170472277404]
Test Case: 405 | Input/Output: [[51.190972358827025 -87] -35.809027641172975]
Test Case: 406 | Input/Output: [[-96.1222618338274 -76] -172.1222618338274]
Test Case: 407 | Input/Output: [[45.595314269282795 -100] -54.404685730717205]
Test Case: 408 | Input/Output: [[16.831297592444542 -88] -71.16870240755546]
Test Case: 409 | Input/Output: [[71.60466865556879 -82] -10.395331344431213]
Test Case: 410 | Input/Output: [[53.78053241894895 -14] 39.78053241894895]
Test Case: 411 | Input/Output: [[-99.46026223896112 -63] -162.46026223896112]
Test Case: 412 | Input/Output: [[32.96593826275955 -78] -45.03406173724045]
Test Case: 413 | Input/Output: [[63.881559968747496 -68] -4.118440031252504]
Test Case: 414 | Input/Output: [[77.34484488029292 -73] 4.344844880292925]
Test Case: 415 | Input/Output: [[52.4232511397002 36] 88.4232511397002]
Test Case: 416 | Input/Output: [[-46.00239656452643 -58] -104.00239656452644]
Test Case: 417 | Input/Output: [[90.64665661705925 -78] 12.64665661705925]
Test Case: 418 | Input/Output: [[-23.686511668329885 83] 59.313488331670115]
Test Case: 419 | Input/Output: [[-45.69339039298277 -25] -70.69339039298276]
Test Case: 420 | Input/Output: [[-87.91991910647178 -54] -141.91991910647178]
Test Case: 421 | Input/Output: [[70.28162996021416 75] 145.28162996021416]
Test Case: 422 | Input/Output: [[-27.260791252274984 -26] -53.260791252274984]
Test Case: 423 | Input/Output: [[-94.63694636948973 27] -67.63694636948973]
Test Case: 424 | Input/Output: [[-9.604502788754374 -91] -100.60450278875437]
Test Case: 425 | Input/Output: [[-74.14530617521113 34] -40.14530617521113]
Test Case: 426 | Input/Output: [[45.155099445829535 -36] 9.155099445829535]
Test Case: 427 | Input/Output: [[-76.62841409648387 8] -68.62841409648387]
Test Case: 428 | Input/Output: [[-29.777513679090276 -50] -79.77751367909028]
Test Case: 429 | Input/Output: [[96.91710462145892 2] 98.91710462145892]
Test Case: 430 | Input/Output: [[83.35964908777072 -93] -9.64035091222928]
Test Case: 431 | Input/Output: [[-90.68589611082135 -70] -160.68589611082135]
Test Case: 432 | Input/Output: [[14.40186467728985 32] 46.40186467728985]
Test Case: 433 | Input/Output: [[-99.59297171695478 -55] -154.59297171695476]
Test Case: 434 | Input/Output: [[-76.1128642796692 78] 1.8871357203308037]
Test Case: 435 | Input/Output: [[84.00449950395733 9] 93.00449950395733]
Test Case: 436 | Input/Output: [[75.47704346706371 -69] 6.477043467063709]
Test Case: 437 | Input/Output: [[1.712320598554058 96] 97.71232059855406]
Test Case: 438 | Input/Output: [[79.72744637082116 82] 161.72744637082116]
Test Case: 439 | Input/Output: [[-66.79990137263869 48] -18.799901372638686]
Test Case: 440 | Input/Output: [[64.35057603356742 65] 129.35057603356742]
Test Case: 441 | Input/Output: [[-29.618566872339343 10] -19.618566872339343]
Test Case: 442 | Input/Output: [[25.112889472229497 -35] -9.887110527770503]
Test Case: 443 | Input/Output: [[-76.26273274594897 65] -11.262732745948966]
Test Case: 444 | Input/Output: [[93.26620852053327 36] 129.26620852053327]
Test Case: 445 | Input/Output: [[-6.818501912661958 -91] -97.81850191266196]
Test Case: 446 | Input/Output: [[-61.920983189875734 -15] -76.92098318987573]
Test Case: 447 | Input/Output: [[48.610496631076956 90] 138.61049663107696]
Test Case: 448 | Input/Output: [[31.561118532119423 -39] -7.438881467880577]
Test Case: 449 | Input/Output: [[-85.9966795244012 -78] -163.9966795244012]
Test Case: 450 | Input/Output: [[-97.97357480075281 -38] -135.97357480075283]
Test Case: 451 | Input/Output: [[91.35418228821436 -16] 75.35418228821436]
Test Case: 452 | Input/Output: [[41.76805268748859 54] 95.76805268748859]
Test Case: 453 | Input/Output: [[-28.996890995435436 -6] -34.996890995435436]
Test Case: 454 | Input/Output: [[81.18896233937852 -86] -4.81103766062148]
Test Case: 455 | Input/Output: [[43.979912961195964 90] 133.97991296119596]
Test Case: 456 | Input/Output: [[97.97931102365962 55] 152.97931102365962]
Test Case: 457 | Input/Output: [[43.98901802293901 -12] 31.989018022939007]
Test Case: 458 | Input/Output: [[-21.854101394034856 99] 77.14589860596514]
Test Case: 459 | Input/Output: [[-95.50846219300955 7] -88.50846219300955]
Test Case: 460 | Input/Output: [[86.25606946482301 94] 180.256069464823]
Test Case: 461 | Input/Output: [[34.13751416544605 -15] 19.13751416544605]
Test Case: 462 | Input/Output: [[15.355806753833875 -30] -14.644193246166125]
Test Case: 463 | Input/Output: [[-45.989632178980244 -94] -139.98963217898023]
Test Case: 464 | Input/Output: [[-87.61123729915134 -64] -151.61123729915136]
Test Case: 465 | Input/Output: [[-30.408941997377454 -37] -67.40894199737745]
Test Case: 466 | Input/Output: [[-64.06210332021907 -45] -109.06210332021907]
Test Case: 467 | Input/Output: [[-29.37074392050289 60] 30.62925607949711]
Test Case: 468 | Input/Output: [[-7.504189714979944 85] 77.49581028502006]
Test Case: 469 | Input/Output: [[14.814466515638074 99] 113.81446651563807]
Test Case: 470 | Input/Output: [[74.34200395116105 83] 157.34200395116105]
Test Case: 471 | Input/Output: [[-16.790304538239354 12] -4.790304538239354]
Test Case: 472 | Input/Output: [[53.34357147800526 -81] -27.65642852199474]
Test Case: 473 | Input/Output: [[6.488508653799357 -98] -91.51149134620064]
Test Case: 474 | Input/Output: [[-46.825608487497995 -65] -111.82560848749799]
Test Case: 475 | Input/Output: [[89.69826325497823 39] 128.69826325497823]
Test Case: 476 | Input/Output: [[-71.92021175693431 -56] -127.92021175693431]
Test Case: 477 | Input/Output: [[-85.77739378966172 -14] -99.77739378966172]
Test Case: 478 | Input/Output: [[-48.602529373191494 -45] -93.60252937319149]
Test Case: 479 | Input/Output: [[3.5167698917744588 -44] -40.48323010822554]
Test Case: 480 | Input/Output: [[60.452393318905706 25] 85.4523933189057]
Test Case: 481 | Input/Output: [[-2.689725443409799 -77] -79.6897254434098]
Test Case: 482 | Input/Output: [[87.69544234424583 78] 165.69544234424583]
Test Case: 483 | Input/Output: [[-33.86166632018248 -19] -52.86166632018248]
Test Case: 484 | Input/Output: [[-25.14052056444666 4] -21.14052056444666]
Test Case: 485 | Input/Output: [[12.482813524534237 65] 77.48281352453424]
Test Case: 486 | Input/Output: [[6.529510492579234 -53] -46.470489507420766]
Test Case: 487 | Input/Output: [[32.32709874044201 46] 78.32709874044201]
Test Case: 488 | Input/Output: [[35.04854790604162 36] 71.04854790604162]
Test Case: 489 | Input/Output: [[52.338288136835985 13] 65.33828813683598]
Test Case: 490 | Input/Output: [[-26.6792468165399 52] 25.3207531834601]
Test Case: 491 | Input/Output: [[81.99708944563139 -80] 1.9970894456313886]
Test Case: 492 | Input/Output: [[2.6868020990302313 25] 27.68680209903023]
Test Case: 493 | Input/Output: [[21.37228883181055 -98] -76.62771116818945]
Test Case: 494 | Input/Output: [[96.82389799923604 34] 130.82389799923604]
Test Case: 495 | Input/Output: [[23.33168684981068 5] 28.33168684981068]
Test Case: 496 | Input/Output: [[-27.808190683028357 -56] -83.80819068302836]
Test Case: 497 | Input/Output: [[51.54045180934389 59] 110.54045180934389]
Test Case: 498 | Input/Output: [[33.139145015862084 16] 49.139145015862084]
Test Case: 499 | Input/Output: [[-42.34483764597252 -66] -108.34483764597252]
Test Case: 500 | Input/Output: [[-34.386996028440436 35] 0.6130039715595643]
Test Case: 501 | Input/Output: [[95.09781208948127 80] 175.09781208948127]
Test Case: 502 | Input/Output: [[-62.10207419618526 68] 5.8979258038147435]
Test Case: 503 | Input/Output: [[-60.08755099913871 -16] -76.08755099913871]
Test Case: 504 | Input/Output: [[-33.55115870259107 -93] -126.55115870259107]
Test Case: 505 | Input/Output: [[5.715381739163789 -98] -92.28461826083621]
Test Case: 506 | Input/Output: [[-80.52013355936627 -76] -156.5201335593663]
Test Case: 507 | Input/Output: [[77.78772683910802 47] 124.78772683910802]
Test Case: 508 | Input/Output: [[-4.979750281819648 -36] -40.97975028181965]
Test Case: 509 | Input/Output: [[10.755303644647455 81] 91.75530364464746]
Test Case: 510 | Input/Output: [[-30.21464409740122 -71] -101.21464409740122]
Test Case: 511 | Input/Output: [[-61.31091707395051 -20] -81.31091707395052]
Test Case: 512 | Input/Output: [[-92.73721296690896 38] -54.737212966908956]
Test Case: 513 | Input/Output: [[-19.67659999544074 -72] -91.67659999544074]
Test Case: 514 | Input/Output: [[92.15264105173245 94] 186.15264105173245]
Test Case: 515 | Input/Output: [[-36.125825657323496 -86] -122.1258256573235]
Test Case: 516 | Input/Output: [[-60.35753102738932 -84] -144.3575310273893]
Test Case: 517 | Input/Output: [[93.97432732454317 -75] 18.974327324543168]
Test Case: 518 | Input/Output: [[50.692729147791 13] 63.692729147791]
Test Case: 519 | Input/Output: [[-71.00001599490149 -96] -167.0000159949015]
Test Case: 520 | Input/Output: [[11.150075538804515 33] 44.150075538804515]
Test Case: 521 | Input/Output: [[82.54465158964973 65] 147.54465158964973]
Test Case: 522 | Input/Output: [[37.75858018188768 37] 74.75858018188768]
Test Case: 523 | Input/Output: [[-62.123983777015 -23] -85.123983777015]
Test Case: 524 | Input/Output: [[-25.881470244273586 9] -16.881470244273586]
Test Case: 525 | Input/Output: [[-11.709370395124523 91] 79.29062960487548]
Test Case: 526 | Input/Output: [[27.953620654518915 16] 43.953620654518915]
Test Case: 527 | Input/Output: [[38.87879474971504 75] 113.87879474971504]
Test Case: 528 | Input/Output: [[78.93974885115742 -8] 70.93974885115742]
Test Case: 529 | Input/Output: [[48.50679643788371 -51] -2.4932035621162925]
Test Case: 530 | Input/Output: [[25.7444374467956 -90] -64.2555625532044]
Test Case: 531 | Input/Output: [[46.37904670209437 17] 63.37904670209437]
Test Case: 532 | Input/Output: [[-59.59229801683066 -45] -104.59229801683065]
Test Case: 533 | Input/Output: [[-67.67316489815502 62] -5.673164898155022]
Test Case: 534 | Input/Output: [[-18.28574150291118 -30] -48.28574150291118]
Test Case: 535 | Input/Output: [[49.01620554730036 -91] -41.98379445269964]
Test Case: 536 | Input/Output: [[-50.3309223145131 64] 13.669077685486897]
Test Case: 537 | Input/Output: [[28.56876008299386 -64] -35.43123991700614]
Test Case: 538 | Input/Output: [[42.4844129002837 56] 98.4844129002837]
Test Case: 539 | Input/Output: [[-43.42918141385703 58] 14.57081858614297]
Test Case: 540 | Input/Output: [[-61.69463895004974 68] 6.305361049950257]
Test Case: 541 | Input/Output: [[7.37030842500937 -36] -28.62969157499063]
Test Case: 542 | Input/Output: [[95.93758040520797 -6] 89.93758040520797]
Test Case: 543 | Input/Output: [[-82.28256900640108 -88] -170.28256900640108]
Test Case: 544 | Input/Output: [[38.29470762052284 -59] -20.705292379477157]
Test Case: 545 | Input/Output: [[9.075079366685856 -74] -64.92492063331414]
Test Case: 546 | Input/Output: [[-23.430034587491576 -98] -121.43003458749158]
Test Case: 547 | Input/Output: [[19.57316334559593 -39] -19.42683665440407]
Test Case: 548 | Input/Output: [[-18.58725682162708 36] 17.41274317837292]
Test Case: 549 | Input/Output: [[50.696365258683755 94] 144.69636525868376]
Test Case: 550 | Input/Output: [[78.77747557214079 -4] 74.77747557214079]
Test Case: 551 | Input/Output: [[-89.39570102774292 -22] -111.39570102774292]
Test Case: 552 | Input/Output: [[-50.52662852939231 91] 40.47337147060769]
Test Case: 553 | Input/Output: [[-73.65962791754994 57] -16.65962791754994]
Test Case: 554 | Input/Output: [[29.963571455398153 -95] -65.03642854460185]
Test Case: 555 | Input/Output: [[-75.16742926154566 -22] -97.16742926154566]
Test Case: 556 | Input/Output: [[66.52921493894641 -93] -26.47078506105359]
Test Case: 557 | Input/Output: [[-85.80061780425126 -62] -147.80061780425126]
Test Case: 558 | Input/Output: [[-44.8043616870891 96] 51.1956383129109]
Test Case: 559 | Input/Output: [[-82.70978238302034 -36] -118.70978238302034]
Test Case: 560 | Input/Output: [[4.628695438824721 86] 90.62869543882472]
Test Case: 561 | Input/Output: [[-60.74348611920595 -22] -82.74348611920595]
Test Case: 562 | Input/Output: [[63.31822304632752 -78] -14.681776953672482]
Test Case: 563 | Input/Output: [[52.2498000745517 -15] 37.2498000745517]
Test Case: 564 | Input/Output: [[-40.205560679879795 -93] -133.2055606798798]
Test Case: 565 | Input/Output: [[-84.94506186287367 99] 14.054938137126328]
Test Case: 566 | Input/Output: [[-63.299759690287985 -4] -67.29975969028798]
Test Case: 567 | Input/Output: [[-31.411570188314684 49] 17.588429811685316]
Test Case: 568 | Input/Output: [[-39.201320031225606 -54] -93.2013200312256]
Test Case: 569 | Input/Output: [[34.253806097518776 -94] -59.746193902481224]
Test Case: 570 | Input/Output: [[-36.4333115984939 80] 43.5666884015061]
Test Case: 571 | Input/Output: [[46.73701591275719 -59] -12.262984087242813]
Test Case: 572 | Input/Output: [[41.74600919340375 17] 58.74600919340375]
Test Case: 573 | Input/Output: [[54.38142419339064 -58] -3.618575806609357]
Test Case: 574 | Input/Output: [[-79.48510604732314 -44] -123.48510604732314]
Test Case: 575 | Input/Output: [[-41.94427294981733 85] 43.05572705018267]
Test Case: 576 | Input/Output: [[26.764906840205384 12] 38.764906840205384]
Test Case: 577 | Input/Output: [[14.726988573340776 49] 63.726988573340776]
Test Case: 578 | Input/Output: [[3.985328969297626 -6] -2.014671030702374]
Test Case: 579 | Input/Output: [[-55.6525571002122 72] 16.3474428997878]
Test Case: 580 | Input/Output: [[52.28145092521811 -51] 1.2814509252181097]
Test Case: 581 | Input/Output: [[86.3102211828849 -68] 18.310221182884902]
Test Case: 582 | Input/Output: [[76.67646152933497 35] 111.67646152933497]
Test Case: 583 | Input/Output: [[-33.482092123141996 -28] -61.482092123141996]
Test Case: 584 | Input/Output: [[56.77162401157162 -39] 17.771624011571618]
Test Case: 585 | Input/Output: [[71.45854286395544 59] 130.45854286395544]
Test Case: 586 | Input/Output: [[-86.66656356894798 63] -23.66656356894798]
Test Case: 587 | Input/Output: [[39.51597647106141 19] 58.51597647106141]
Test Case: 588 | Input/Output: [[-73.64175517754845 -1] -74.64175517754845]
Test Case: 589 | Input/Output: [[41.05486076007054 67] 108.05486076007054]
Test Case: 590 | Input/Output: [[93.08757309225737 -63] 30.087573092257372]
Test Case: 591 | Input/Output: [[-1.2777472561972019 -48] -49.2777472561972]
Test Case: 592 | Input/Output: [[42.40717305245363 77] 119.40717305245363]
Test Case: 593 | Input/Output: [[83.46354483305879 97] 180.4635448330588]
Test Case: 594 | Input/Output: [[54.83089370744014 -100] -45.16910629255986]
Test Case: 595 | Input/Output: [[22.85874663516927 -80] -57.14125336483073]
Test Case: 596 | Input/Output: [[-19.98994585928213 -61] -80.98994585928213]
Test Case: 597 | Input/Output: [[44.833988296739335 59] 103.83398829673934]
Test Case: 598 | Input/Output: [[-4.800060316540765 69] 64.19993968345923]
Test Case: 599 | Input/Output: [[-9.128981526989534 85] 75.87101847301047]
Test Case: 600 | Input/Output: [[-73.69709207914319 37] -36.69709207914319]
Test Case: 601 | Input/Output: [[-69.36425197849553 20] -49.36425197849553]
Test Case: 602 | Input/Output: [[70.93427008449535 14] 84.93427008449535]
Test Case: 603 | Input/Output: [[42.57473437660019 -61] -18.42526562339981]
Test Case: 604 | Input/Output: [[-96.34287860276633 90] -6.3428786027663335]
Test Case: 605 | Input/Output: [[-68.62292344852588 48] -20.62292344852588]
Test Case: 606 | Input/Output: [[-48.83862033318953 -14] -62.83862033318953]
Test Case: 607 | Input/Output: [[1.9786228846612204 -6] -4.02137711533878]
Test Case: 608 | Input/Output: [[-31.256309217032268 -4] -35.25630921703227]
Test Case: 609 | Input/Output: [[76.19775671831482 40] 116.19775671831482]
Test Case: 610 | Input/Output: [[44.1162656058807 -75] -30.8837343941193]
Test Case: 611 | Input/Output: [[-62.13607791393325 -95] -157.13607791393326]
Test Case: 612 | Input/Output: [[-48.53298415092677 -14] -62.53298415092677]
Test Case: 613 | Input/Output: [[-54.45704814598402 45] -9.457048145984018]
Test Case: 614 | Input/Output: [[35.42832094025434 86] 121.42832094025434]
Test Case: 615 | Input/Output: [[98.25858168464373 -87] 11.25858168464373]
Test Case: 616 | Input/Output: [[-22.408826179873188 -90] -112.40882617987319]
Test Case: 617 | Input/Output: [[-11.242839808536374 36] 24.757160191463626]
Test Case: 618 | Input/Output: [[97.96700106538589 -48] 49.96700106538589]
Test Case: 619 | Input/Output: [[76.00711461170525 86] 162.00711461170525]
Test Case: 620 | Input/Output: [[27.64108011929862 -53] -25.35891988070138]
Test Case: 621 | Input/Output: [[77.13709395059601 11] 88.13709395059601]
Test Case: 622 | Input/Output: [[92.0272456891864 -53] 39.0272456891864]
Test Case: 623 | Input/Output: [[-80.05401240430015 -76] -156.05401240430015]
Test Case: 624 | Input/Output: [[61.58691818030411 -98] -36.41308181969589]
Test Case: 625 | Input/Output: [[-72.2175305973898 74] 1.7824694026102037]
Test Case: 626 | Input/Output: [[28.665568532433866 66] 94.66556853243387]
Test Case: 627 | Input/Output: [[34.845049632272605 42] 76.8450496322726]
Test Case: 628 | Input/Output: [[-20.942364010547095 99] 78.0576359894529]
Test Case: 629 | Input/Output: [[-12.209477426802536 -72] -84.20947742680254]
Test Case: 630 | Input/Output: [[-31.98316986556948 26] -5.983169865569479]
Test Case: 631 | Input/Output: [[-45.20784114308314 65] 19.792158856916863]
Test Case: 632 | Input/Output: [[-40.52009196812341 17] -23.52009196812341]
Test Case: 633 | Input/Output: [[-0.18303335945158494 21] 20.816966640548415]
Test Case: 634 | Input/Output: [[-96.3987981917332 -15] -111.3987981917332]
Test Case: 635 | Input/Output: [[-15.937082558609106 46] 30.062917441390894]
Test Case: 636 | Input/Output: [[14.747846131881246 23] 37.747846131881246]
Test Case: 637 | Input/Output: [[97.31560479129152 -46] 51.31560479129152]
Test Case: 638 | Input/Output: [[-43.01738146197973 -15] -58.01738146197973]
Test Case: 639 | Input/Output: [[94.05002701941709 -27] 67.05002701941709]
Test Case: 640 | Input/Output: [[92.4630202589708 -17] 75.4630202589708]
Test Case: 641 | Input/Output: [[35.017614534047425 59] 94.01761453404742]
Test Case: 642 | Input/Output: [[58.41183719999722 86] 144.41183719999722]
Test Case: 643 | Input/Output: [[-79.84689023219286 47] -32.84689023219286]
Test Case: 644 | Input/Output: [[-46.94274216433254 43] -3.942742164332543]
Test Case: 645 | Input/Output: [[45.197802111330816 42] 87.19780211133082]
Test Case: 646 | Input/Output: [[-61.277016076340686 -17] -78.27701607634069]
Test Case: 647 | Input/Output: [[88.18347716877037 -94] -5.8165228312296335]
Test Case: 648 | Input/Output: [[35.92286759366496 89] 124.92286759366496]
Test Case: 649 | Input/Output: [[60.32743255918936 96] 156.32743255918936]
Test Case: 650 | Input/Output: [[38.564910905700145 -12] 26.564910905700145]
Test Case: 651 | Input/Output: [[-23.428775105116657 70] 46.57122489488334]
Test Case: 652 | Input/Output: [[96.85937187405861 42] 138.8593718740586]
Test Case: 653 | Input/Output: [[-47.24145797082235 -64] -111.24145797082235]
Test Case: 654 | Input/Output: [[-27.729438958747153 59] 31.270561041252847]
Test Case: 655 | Input/Output: [[43.83971781454832 -15] 28.839717814548322]
Test Case: 656 | Input/Output: [[19.20942480824874 99] 118.20942480824874]
Test Case: 657 | Input/Output: [[-95.44821624594091 91] -4.4482162459409125]
Test Case: 658 | Input/Output: [[-11.354100626032988 74] 62.64589937396701]
Test Case: 659 | Input/Output: [[-37.66548847162863 -89] -126.66548847162863]
Test Case: 660 | Input/Output: [[-36.05647947080144 -38] -74.05647947080143]
Test Case: 661 | Input/Output: [[7.92960567910481 -61] -53.07039432089519]
Test Case: 662 | Input/Output: [[-87.90837957914701 83] -4.9083795791470095]
Test Case: 663 | Input/Output: [[-6.889679596069811 76] 69.11032040393019]
Test Case: 664 | Input/Output: [[-43.13627968427263 -88] -131.13627968427264]
Test Case: 665 | Input/Output: [[-23.542441297582627 65] 41.45755870241737]
Test Case: 666 | Input/Output: [[28.164512340657524 -82] -53.835487659342476]
Test Case: 667 | Input/Output: [[87.37794218007721 -63] 24.377942180077213]
Test Case: 668 | Input/Output: [[-40.741123104745604 -44] -84.74112310474561]
Test Case: 669 | Input/Output: [[38.15045868594507 83] 121.15045868594507]
Test Case: 670 | Input/Output: [[37.90009643595019 15] 52.90009643595019]
Test Case: 671 | Input/Output: [[59.4548499507583 -9] 50.4548499507583]
Test Case: 672 | Input/Output: [[17.098550087078507 11] 28.098550087078507]
Test Case: 673 | Input/Output: [[-75.43995669447307 91] 15.560043305526932]
Test Case: 674 | Input/Output: [[37.235256690325315 -59] -21.764743309674685]
Test Case: 675 | Input/Output: [[82.90392048758724 70] 152.90392048758724]
Test Case: 676 | Input/Output: [[-78.02372436500332 92] 13.976275634996682]
Test Case: 677 | Input/Output: [[45.24168460001442 8] 53.24168460001442]
Test Case: 678 | Input/Output: [[-26.395089483918838 -28] -54.39508948391884]
Test Case: 679 | Input/Output: [[-13.286903844695104 -66] -79.2869038446951]
Test Case: 680 | Input/Output: [[37.56530552022207 49] 86.56530552022207]
Test Case: 681 | Input/Output: [[3.286801010635628 84] 87.28680101063563]
Test Case: 682 | Input/Output: [[-51.09979743869244 30] -21.09979743869244]
Test Case: 683 | Input/Output: [[-20.3954810735774 -69] -89.3954810735774]
Test Case: 684 | Input/Output: [[-29.709217154333317 76] 46.29078284566668]
Test Case: 685 | Input/Output: [[-16.858628118063763 82] 65.14137188193624]
Test Case: 686 | Input/Output: [[-84.35018009167868 -48] -132.35018009167868]
Test Case: 687 | Input/Output: [[50.463510140656325 85] 135.46351014065633]
Test Case: 688 | Input/Output: [[38.47288098618097 27] 65.47288098618097]
Test Case: 689 | Input/Output: [[-44.12209987621309 67] 22.877900123786908]
Test Case: 690 | Input/Output: [[35.53519538696338 71] 106.53519538696338]
Test Case: 691 | Input/Output: [[31.37572739375355 17] 48.37572739375355]
Test Case: 692 | Input/Output: [[33.75108048244033 36] 69.75108048244033]
Test Case: 693 | Input/Output: [[1.224696921558845 -56] -54.775303078441155]
Test Case: 694 | Input/Output: [[-31.6457079189139 45] 13.3542920810861]
Test Case: 695 | Input/Output: [[54.56079547814082 -80] -25.439204521859182]
Test Case: 696 | Input/Output: [[74.79328102096267 -26] 48.79328102096267]
Test Case: 697 | Input/Output: [[35.71080620851578 -39] -3.289193791484223]
Test Case: 698 | Input/Output: [[58.40388968843712 -54] 4.403889688437118]
Test Case: 699 | Input/Output: [[-92.168137563912 77] -15.168137563911998]
Test Case: 700 | Input/Output: [[-53.877802703492804 52] -1.8778027034928044]
Test Case: 701 | Input/Output: [[5.299620266620252 74] 79.29962026662025]
Test Case: 702 | Input/Output: [[-28.041033784908564 28] -0.041033784908563575]
Test Case: 703 | Input/Output: [[-73.93963767939775 77] 3.060362320602252]
Test Case: 704 | Input/Output: [[-84.75795158776633 15] -69.75795158776633]
Test Case: 705 | Input/Output: [[-97.81642825584478 -73] -170.81642825584478]
Test Case: 706 | Input/Output: [[-55.01839056356766 -51] -106.01839056356766]
Test Case: 707 | Input/Output: [[36.99345101848169 34] 70.9934510184817]
Test Case: 708 | Input/Output: [[-73.09248292657098 -70] -143.092482926571]
Test Case: 709 | Input/Output: [[-14.218489651884099 -86] -100.2184896518841]
Test Case: 710 | Input/Output: [[70.32311284782634 27] 97.32311284782634]
Test Case: 711 | Input/Output: [[18.257999133372323 67] 85.25799913337232]
Test Case: 712 | Input/Output: [[-58.739190417369144 -4] -62.739190417369144]
Test Case: 713 | Input/Output: [[-34.22426347882008 96] 61.77573652117992]
Test Case: 714 | Input/Output: [[-48.59973300192617 0] -48.59973300192617]
Test Case: 715 | Input/Output: [[40.60150152008933 33] 73.60150152008933]
Test Case: 716 | Input/Output: [[-4.952178026895226 -31] -35.952178026895226]
Test Case: 717 | Input/Output: [[-99.72196781693188 -98] -197.72196781693188]
Test Case: 718 | Input/Output: [[-32.03490912372567 -73] -105.03490912372567]
Test Case: 719 | Input/Output: [[82.93933769243446 -55] 27.939337692434464]
Test Case: 720 | Input/Output: [[-44.77506211005684 21] -23.775062110056837]
Test Case: 721 | Input/Output: [[-21.849292316441392 47] 25.150707683558608]
Test Case: 722 | Input/Output: [[22.643918550158077 -33] -10.356081449841923]
Test Case: 723 | Input/Output: [[-62.308189117894464 88] 25.691810882105536]
Test Case: 724 | Input/Output: [[8.072587719706334 45] 53.072587719706334]
Test Case: 725 | Input/Output: [[-62.081315410791404 6] -56.081315410791404]
Test Case: 726 | Input/Output: [[-12.348455958158638 -15] -27.348455958158638]
Test Case: 727 | Input/Output: [[-94.32242884067314 13] -81.32242884067314]
Test Case: 728 | Input/Output: [[-49.699901636864105 -74] -123.6999016368641]
Test Case: 729 | Input/Output: [[-34.66343051789724 53] 18.33656948210276]
Test Case: 730 | Input/Output: [[-10.024442166023007 -14] -24.024442166023007]
Test Case: 731 | Input/Output: [[87.94724357332265 83] 170.94724357332265]
Test Case: 732 | Input/Output: [[53.78608736608817 -6] 47.78608736608817]
Test Case: 733 | Input/Output: [[73.98119410639694 -99] -25.01880589360306]
Test Case: 734 | Input/Output: [[-93.80145188361324 -50] -143.80145188361325]
Test Case: 735 | Input/Output: [[36.147055622123645 -67] -30.852944377876355]
Test Case: 736 | Input/Output: [[67.29564116010437 -67] 0.2956411601043669]
Test Case: 737 | Input/Output: [[-75.12270232524412 19] -56.12270232524412]
Test Case: 738 | Input/Output: [[-16.92278455326506 24] 7.0772154467349395]
Test Case: 739 | Input/Output: [[88.84063965757593 24] 112.84063965757593]
Test Case: 740 | Input/Output: [[82.76649256607226 14] 96.76649256607226]
Test Case: 741 | Input/Output: [[-99.84503829779857 79] -20.845038297798567]
Test Case: 742 | Input/Output: [[50.78432108081344 -29] 21.78432108081344]
Test Case: 743 | Input/Output: [[54.67543823535519 -31] 23.675438235355188]
Test Case: 744 | Input/Output: [[-28.36217926163387 65] 36.63782073836613]
Test Case: 745 | Input/Output: [[-46.682329679635195 -22] -68.68232967963519]
Test Case: 746 | Input/Output: [[-90.37452717845869 99] 8.625472821541308]
Test Case: 747 | Input/Output: [[-96.39234856408854 40] -56.392348564088536]
Test Case: 748 | Input/Output: [[60.19952424199488 -19] 41.19952424199488]
Test Case: 749 | Input/Output: [[-6.147380224789316 75] 68.85261977521068]
Test Case: 750 | Input/Output: [[-34.81794277344051 79] 44.18205722655949]
Test Case: 751 | Input/Output: [[-83.81626930111963 -59] -142.81626930111963]
Test Case: 752 | Input/Output: [[-53.04242181570862 -46] -99.04242181570862]
Test Case: 753 | Input/Output: [[-91.34925369722613 65] -26.349253697226132]
Test Case: 754 | Input/Output: [[-64.56113654499336 -78] -142.56113654499336]
Test Case: 755 | Input/Output: [[-0.5847654516813066 61] 60.41523454831869]
Test Case: 756 | Input/Output: [[-28.484922290138613 -2] -30.484922290138613]
Test Case: 757 | Input/Output: [[-68.22684947323322 -53] -121.22684947323322]
Test Case: 758 | Input/Output: [[18.329344831890836 61] 79.32934483189084]
Test Case: 759 | Input/Output: [[-41.037225763292184 -29] -70.03722576329218]
Test Case: 760 | Input/Output: [[-69.75045580085349 60] -9.750455800853487]
Test Case: 761 | Input/Output: [[-94.60713951904252 -32] -126.60713951904252]
Test Case: 762 | Input/Output: [[7.196518211931462 -29] -21.803481788068538]
Test Case: 763 | Input/Output: [[55.58527924001848 -34] 21.58527924001848]
Test Case: 764 | Input/Output: [[75.33886937172753 35] 110.33886937172753]
Test Case: 765 | Input/Output: [[-22.99258808378599 6] -16.99258808378599]
Test Case: 766 | Input/Output: [[38.9596228263089 23] 61.9596228263089]
Test Case: 767 | Input/Output: [[-55.71468438305658 -80] -135.71468438305658]
Test Case: 768 | Input/Output: [[-43.06154701327305 -62] -105.06154701327304]
Test Case: 769 | Input/Output: [[-6.587259088280334 -33] -39.587259088280334]
Test Case: 770 | Input/Output: [[-0.7964360910513335 -78] -78.79643609105133]
Test Case: 771 | Input/Output: [[68.96535334982562 -11] 57.96535334982562]
Test Case: 772 | Input/Output: [[-87.39853358921206 -38] -125.39853358921206]
Test Case: 773 | Input/Output: [[-95.67733398728322 0] -95.67733398728322]
Test Case: 774 | Input/Output: [[-74.82376502154682 -90] -164.82376502154682]
Test Case: 775 | Input/Output: [[97.0628948678987 -29] 68.0628948678987]
Test Case: 776 | Input/Output: [[58.16362922938714 80] 138.16362922938714]
Test Case: 777 | Input/Output: [[6.650192420969091 59] 65.65019242096909]
Test Case: 778 | Input/Output: [[-8.802082238264958 2] -6.802082238264958]
Test Case: 779 | Input/Output: [[28.149458119689825 -46] -17.850541880310175]
Test Case: 780 | Input/Output: [[19.755992209047804 5] 24.755992209047804]
Test Case: 781 | Input/Output: [[13.098339372542682 77] 90.09833937254268]
Test Case: 782 | Input/Output: [[-89.35174749636911 44] -45.351747496369114]
Test Case: 783 | Input/Output: [[3.194723797778451 -43] -39.80527620222155]
Test Case: 784 | Input/Output: [[-27.32004218993403 45] 17.67995781006597]
Test Case: 785 | Input/Output: [[-67.43796335689107 52] -15.437963356891075]
Test Case: 786 | Input/Output: [[90.11352012780077 14] 104.11352012780077]
Test Case: 787 | Input/Output: [[7.7447850146846235 81] 88.74478501468462]
Test Case: 788 | Input/Output: [[-42.20812291885212 -98] -140.20812291885213]
Test Case: 789 | Input/Output: [[36.48777384981457 -9] 27.487773849814573]
Test Case: 790 | Input/Output: [[6.8379318066325965 -21] -14.162068193367404]
Test Case: 791 | Input/Output: [[-41.030557514069564 77] 35.969442485930436]
Test Case: 792 | Input/Output: [[44.579246587291976 13] 57.579246587291976]
Test Case: 793 | Input/Output: [[-11.568536650395387 55] 43.43146334960461]
Test Case: 794 | Input/Output: [[64.99888512907344 -23] 41.99888512907344]
Test Case: 795 | Input/Output: [[0.031965683788783394 38] 38.03196568378878]
Test Case: 796 | Input/Output: [[70.38570463283793 75] 145.38570463283793]
Test Case: 797 | Input/Output: [[-25.228220571686848 24] -1.2282205716868475]
Test Case: 798 | Input/Output: [[-91.2319690334415 8] -83.2319690334415]
Test Case: 799 | Input/Output: [[70.27010911321966 96] 166.27010911321966]
Test Case: 800 | Input/Output: [[47.56753470453026 3] 50.56753470453026]
Test Case: 801 | Input/Output: [[3.6228932870233166 -58] -54.37710671297668]
Test Case: 802 | Input/Output: [[-66.69677544630686 -34] -100.69677544630686]
Test Case: 803 | Input/Output: [[24.225280605402162 86] 110.22528060540216]
Test Case: 804 | Input/Output: [[-61.76392402529351 76] 14.236075974706488]
Test Case: 805 | Input/Output: [[-79.35889373470113 41] -38.35889373470113]
Test Case: 806 | Input/Output: [[-66.29084456565215 70] 3.7091554343478492]
Test Case: 807 | Input/Output: [[58.848456658737916 -31] 27.848456658737916]
Test Case: 808 | Input/Output: [[72.00938583245281 -13] 59.00938583245281]
Test Case: 809 | Input/Output: [[28.210503220344094 0] 28.210503220344094]
Test Case: 810 | Input/Output: [[5.063080179178229 -95] -89.93691982082177]
Test Case: 811 | Input/Output: [[85.96908725651008 -50] 35.96908725651008]
Test Case: 812 | Input/Output: [[-92.86502555406592 -2] -94.86502555406592]
Test Case: 813 | Input/Output: [[-51.34577752748788 -87] -138.34577752748788]
Test Case: 814 | Input/Output: [[45.82421506946872 -2] 43.82421506946872]
Test Case: 815 | Input/Output: [[-16.85230712591263 71] 54.14769287408737]
Test Case: 816 | Input/Output: [[-96.10284067569847 45] -51.102840675698474]
Test Case: 817 | Input/Output: [[-97.5585684520145 -75] -172.5585684520145]
Test Case: 818 | Input/Output: [[-86.03406252775727 -62] -148.03406252775727]
Test Case: 819 | Input/Output: [[45.7193879411642 -64] -18.2806120588358]
Test Case: 820 | Input/Output: [[59.44939833250089 27] 86.44939833250089]
Test Case: 821 | Input/Output: [[-98.43077493003456 -28] -126.43077493003456]
Test Case: 822 | Input/Output: [[-76.6621546689566 1] -75.6621546689566]
Test Case: 823 | Input/Output: [[33.73032446956154 84] 117.73032446956154]
Test Case: 824 | Input/Output: [[34.96000944459769 -82] -47.03999055540231]
Test Case: 825 | Input/Output: [[83.11995335566002 -3] 80.11995335566002]
Test Case: 826 | Input/Output: [[-86.1913884937985 -99] -185.1913884937985]
Test Case: 827 | Input/Output: [[33.53820645096488 43] 76.53820645096488]
Test Case: 828 | Input/Output: [[-78.88140824667651 24] -54.881408246676514]
Test Case: 829 | Input/Output: [[50.49901663543761 30] 80.49901663543761]
Test Case: 830 | Input/Output: [[-20.81576740934507 -19] -39.81576740934507]
Test Case: 831 | Input/Output: [[73.87122650651042 55] 128.87122650651042]
Test Case: 832 | Input/Output: [[66.4537854346215 -64] 2.4537854346214942]
Test Case: 833 | Input/Output: [[-98.02700699792044 76] -22.027006997920438]
Test Case: 834 | Input/Output: [[-13.213113996358473 59] 45.78688600364153]
Test Case: 835 | Input/Output: [[-25.60031780714698 -9] -34.60031780714698]
Test Case: 836 | Input/Output: [[63.42015888440929 84] 147.4201588844093]
Test Case: 837 | Input/Output: [[-59.79720088032345 -60] -119.79720088032346]
Test Case: 838 | Input/Output: [[-97.5561410371879 88] -9.5561410371879]
Test Case: 839 | Input/Output: [[-86.4026956039498 79] -7.402695603949795]
Test Case: 840 | Input/Output: [[-83.04143026837643 -22] -105.04143026837643]
Test Case: 841 | Input/Output: [[-82.21993817200362 22] -60.21993817200362]
Test Case: 842 | Input/Output: [[-1.1363027828563759 -40] -41.136302782856376]
Test Case: 843 | Input/Output: [[97.2838368738451 -87] 10.283836873845104]
Test Case: 844 | Input/Output: [[74.76480196366478 43] 117.76480196366478]
Test Case: 845 | Input/Output: [[4.09708120578523 -91] -86.90291879421477]
Test Case: 846 | Input/Output: [[80.08180277881976 88] 168.08180277881976]
Test Case: 847 | Input/Output: [[94.29800618609954 -35] 59.29800618609954]
Test Case: 848 | Input/Output: [[95.18527944008696 70] 165.18527944008696]
Test Case: 849 | Input/Output: [[-20.992972790499238 -33] -53.99297279049924]
Test Case: 850 | Input/Output: [[2.351123503577952 -82] -79.64887649642205]
Test Case: 851 | Input/Output: [[59.43462436651839 -52] 7.434624366518392]
Test Case: 852 | Input/Output: [[71.20441732807245 76] 147.20441732807245]
Test Case: 853 | Input/Output: [[-87.98331455455184 37] -50.98331455455184]
Test Case: 854 | Input/Output: [[-45.728620619037756 -69] -114.72862061903776]
Test Case: 855 | Input/Output: [[-59.90260214916405 4] -55.90260214916405]
Test Case: 856 | Input/Output: [[31.953309505707182 92] 123.95330950570718]
Test Case: 857 | Input/Output: [[93.26376794690776 -7] 86.26376794690776]
Test Case: 858 | Input/Output: [[39.96531486834178 -36] 3.9653148683417783]
Test Case: 859 | Input/Output: [[-59.16981407076971 -83] -142.16981407076972]
Test Case: 860 | Input/Output: [[27.991939742493173 100] 127.99193974249317]
Test Case: 861 | Input/Output: [[-4.334436425918042 -1] -5.334436425918042]
Test Case: 862 | Input/Output: [[24.225604048793144 -65] -40.774395951206856]
Test Case: 863 | Input/Output: [[-11.29484052865189 -48] -59.29484052865189]
Test Case: 864 | Input/Output: [[-6.146443704917232 8] 1.8535562950827682]
Test Case: 865 | Input/Output: [[8.801450734557733 -25] -16.198549265442267]
Test Case: 866 | Input/Output: [[-54.93350650699551 97] 42.06649349300449]
Test Case: 867 | Input/Output: [[42.521225649125995 10] 52.521225649125995]
Test Case: 868 | Input/Output: [[89.03211532771815 48] 137.03211532771815]
Test Case: 869 | Input/Output: [[-56.64782787813569 -17] -73.6478278781357]
Test Case: 870 | Input/Output: [[8.507548424792716 37] 45.507548424792716]
Test Case: 871 | Input/Output: [[87.40186256471944 -44] 43.40186256471944]
Test Case: 872 | Input/Output: [[58.59334290276797 -3] 55.59334290276797]
Test Case: 873 | Input/Output: [[92.73418584755103 65] 157.73418584755103]
Test Case: 874 | Input/Output: [[47.60561797566177 -63] -15.394382024338228]
Test Case: 875 | Input/Output: [[-17.15493380485165 -37] -54.15493380485165]
Test Case: 876 | Input/Output: [[-9.987037689416155 -14] -23.987037689416155]
Test Case: 877 | Input/Output: [[-92.11081704733152 81] -11.110817047331523]
Test Case: 878 | Input/Output: [[-30.478277353893475 61] 30.521722646106525]
Test Case: 879 | Input/Output: [[87.19510204335563 -54] 33.19510204335563]
Test Case: 880 | Input/Output: [[-63.997154267743774 -11] -74.99715426774378]
Test Case: 881 | Input/Output: [[-94.87646055326667 -7] -101.87646055326667]
Test Case: 882 | Input/Output: [[77.09923978696716 26] 103.09923978696716]
Test Case: 883 | Input/Output: [[-72.02357277910394 -63] -135.02357277910394]
Test Case: 884 | Input/Output: [[8.191560772588076 31] 39.191560772588076]
Test Case: 885 | Input/Output: [[73.87900349100738 -38] 35.87900349100738]
Test Case: 886 | Input/Output: [[64.416678924487 45] 109.416678924487]
Test Case: 887 | Input/Output: [[41.53362431470049 70] 111.53362431470049]
Test Case: 888 | Input/Output: [[62.23608457301674 -77] -14.76391542698326]
Test Case: 889 | Input/Output: [[92.59212566672034 -11] 81.59212566672034]
Test Case: 890 | Input/Output: [[-31.83008249375918 13] -18.83008249375918]
Test Case: 891 | Input/Output: [[49.841183335805994 -40] 9.841183335805994]
Test Case: 892 | Input/Output: [[-11.917446517560109 -68] -79.91744651756011]
Test Case: 893 | Input/Output: [[-44.22884653879831 23] -21.228846538798308]
Test Case: 894 | Input/Output: [[-10.485454219614041 -69] -79.48545421961404]
Test Case: 895 | Input/Output: [[80.81289255703788 52] 132.81289255703788]
Test Case: 896 | Input/Output: [[49.148693261245114 25] 74.14869326124511]
Test Case: 897 | Input/Output: [[-11.367550657024111 36] 24.63244934297589]
Test Case: 898 | Input/Output: [[-11.055827987737004 47] 35.944172012262996]
Test Case: 899 | Input/Output: [[-86.59222661522125 -66] -152.59222661522125]
Test Case: 900 | Input/Output: [[-7.213742581892461 24] 16.78625741810754]
Test Case: 901 | Input/Output: [[9.241245252779478 59] 68.24124525277948]
Test Case: 902 | Input/Output: [[8.995627621266422 11] 19.995627621266422]
Test Case: 903 | Input/Output: [[69.79698492374732 75] 144.79698492374732]
Test Case: 904 | Input/Output: [[99.43075945105059 34] 133.4307594510506]
Test Case: 905 | Input/Output: [[71.49992980044871 57] 128.4999298004487]
Test Case: 906 | Input/Output: [[33.48212333155817 19] 52.48212333155817]
Test Case: 907 | Input/Output: [[-33.983674876074204 -51] -84.9836748760742]
Test Case: 908 | Input/Output: [[49.95237754830285 23] 72.95237754830285]
Test Case: 909 | Input/Output: [[-37.71922684848181 -52] -89.71922684848181]
Test Case: 910 | Input/Output: [[45.80346165207371 86] 131.8034616520737]
Test Case: 911 | Input/Output: [[38.930620557845714 61] 99.93062055784571]
Test Case: 912 | Input/Output: [[-2.176017761145218 20] 17.823982238854782]
Test Case: 913 | Input/Output: [[-54.48467184377434 -74] -128.48467184377435]
Test Case: 914 | Input/Output: [[-24.12468473032692 -69] -93.12468473032692]
Test Case: 915 | Input/Output: [[-42.504961050059386 54] 11.495038949940614]
Test Case: 916 | Input/Output: [[20.78296565318429 8] 28.78296565318429]
Test Case: 917 | Input/Output: [[-61.12334180016325 74] 12.876658199836747]
Test Case: 918 | Input/Output: [[-34.724486318328346 -68] -102.72448631832835]
Test Case: 919 | Input/Output: [[99.2903442895184 11] 110.2903442895184]
Test Case: 920 | Input/Output: [[19.307993024849296 -3] 16.307993024849296]
Test Case: 921 | Input/Output: [[52.55733954987522 -5] 47.55733954987522]
Test Case: 922 | Input/Output: [[48.488701259550254 -44] 4.488701259550254]
Test Case: 923 | Input/Output: [[-87.17482793029805 70] -17.17482793029805]
Test Case: 924 | Input/Output: [[87.51702103769082 -41] 46.517021037690824]
Test Case: 925 | Input/Output: [[42.34449753503503 87] 129.34449753503503]
Test Case: 926 | Input/Output: [[-64.68380698987801 37] -27.683806989878008]
Test Case: 927 | Input/Output: [[-6.329816981785569 -91] -97.32981698178557]
Test Case: 928 | Input/Output: [[-69.14660106672395 -39] -108.14660106672395]
Test Case: 929 | Input/Output: [[-41.41509515805719 -31] -72.4150951580572]
Test Case: 930 | Input/Output: [[24.60877697802266 53] 77.60877697802266]
Test Case: 931 | Input/Output: [[14.134401760979515 7] 21.134401760979515]
Test Case: 932 | Input/Output: [[-54.46574929093162 -79] -133.46574929093163]
Test Case: 933 | Input/Output: [[39.73062273770239 -38] 1.7306227377023902]
Test Case: 934 | Input/Output: [[-0.22311139965466964 -35] -35.22311139965467]
Test Case: 935 | Input/Output: [[-87.07612720854927 79] -8.076127208549266]
Test Case: 936 | Input/Output: [[50.75926382547095 -74] -23.240736174529047]
Test Case: 937 | Input/Output: [[-14.574851218770561 -60] -74.57485121877056]
Test Case: 938 | Input/Output: [[-55.22121684490988 -45] -100.22121684490989]
Test Case: 939 | Input/Output: [[54.3978722250568 -60] -5.602127774943199]
Test Case: 940 | Input/Output: [[-70.52090542067369 -17] -87.52090542067369]
Test Case: 941 | Input/Output: [[-4.987803560035005 31] 26.012196439964995]
Test Case: 942 | Input/Output: [[-28.297760238412792 -90] -118.29776023841279]
Test Case: 943 | Input/Output: [[-66.84610289873854 71] 4.153897101261464]
Test Case: 944 | Input/Output: [[61.60311846900075 67] 128.60311846900075]
Test Case: 945 | Input/Output: [[-62.89372130920232 12] -50.89372130920232]
Test Case: 946 | Input/Output: [[-70.44845990987648 -33] -103.44845990987648]
Test Case: 947 | Input/Output: [[-45.747971211066286 27] -18.747971211066286]
Test Case: 948 | Input/Output: [[74.54066565418032 62] 136.54066565418032]
Test Case: 949 | Input/Output: [[33.68519531602442 77] 110.68519531602442]
Test Case: 950 | Input/Output: [[-58.498026013073414 87] 28.501973986926586]
Test Case: 951 | Input/Output: [[-53.267032428469776 -95] -148.26703242846978]
Test Case: 952 | Input/Output: [[-65.37159161941948 -99] -164.37159161941946]
Test Case: 953 | Input/Output: [[-59.035498970075494 13] -46.035498970075494]
Test Case: 954 | Input/Output: [[-12.933576474054135 -85] -97.93357647405414]
Test Case: 955 | Input/Output: [[-78.68678341409674 -78] -156.68678341409674]
Test Case: 956 | Input/Output: [[49.1201991301198 54] 103.1201991301198]
Test Case: 957 | Input/Output: [[86.82383834495948 53] 139.82383834495948]
Test Case: 958 | Input/Output: [[-93.17069374973002 -97] -190.17069374973002]
Test Case: 959 | Input/Output: [[64.0920932576185 -35] 29.0920932576185]
Test Case: 960 | Input/Output: [[30.23126089771776 -89] -58.76873910228224]
Test Case: 961 | Input/Output: [[70.61987194688439 -82] -11.380128053115612]
Test Case: 962 | Input/Output: [[25.85329001788908 30] 55.85329001788908]
Test Case: 963 | Input/Output: [[87.45155993746874 90] 177.45155993746874]
Test Case: 964 | Input/Output: [[-39.423724556479 3] -36.423724556479]
Test Case: 965 | Input/Output: [[67.80127289004693 -1] 66.80127289004693]
Test Case: 966 | Input/Output: [[-16.144158523573495 -100] -116.1441585235735]
Test Case: 967 | Input/Output: [[-96.65535823299982 22] -74.65535823299982]
Test Case: 968 | Input/Output: [[72.69514749190793 4] 76.69514749190793]
Test Case: 969 | Input/Output: [[-52.92258403352794 -60] -112.92258403352794]
Test Case: 970 | Input/Output: [[-7.186783696873363 -24] -31.186783696873363]
Test Case: 971 | Input/Output: [[33.84562509622998 77] 110.84562509622998]
Test Case: 972 | Input/Output: [[-6.363021353624987 -64] -70.36302135362499]
Test Case: 973 | Input/Output: [[-44.46819769586454 59] 14.53180230413546]
Test Case: 974 | Input/Output: [[-12.635608564619119 -88] -100.63560856461912]
Test Case: 975 | Input/Output: [[92.98344099595087 70] 162.98344099595087]
Test Case: 976 | Input/Output: [[6.473963851455537 35] 41.47396385145554]
Test Case: 977 | Input/Output: [[-76.5821627850249 91] 14.417837214975094]
Test Case: 978 | Input/Output: [[-80.41720609516211 61] -19.417206095162115]
Test Case: 979 | Input/Output: [[-58.90767764168701 -33] -91.907677641687]
Test Case: 980 | Input/Output: [[27.953800601684748 -12] 15.953800601684748]
Test Case: 981 | Input/Output: [[-41.58623395094636 -82] -123.58623395094637]
Test Case: 982 | Input/Output: [[80.44590238635553 -23] 57.44590238635553]
Test Case: 983 | Input/Output: [[37.38381503179647 -14] 23.383815031796473]
Test Case: 984 | Input/Output: [[-47.769991978355606 -34] -81.7699919783556]
Test Case: 985 | Input/Output: [[57.149662061032956 33] 90.14966206103296]
Test Case: 986 | Input/Output: [[96.63968603878723 -21] 75.63968603878723]
Test Case: 987 | Input/Output: [[2.182079714801361 -23] -20.81792028519864]
Test Case: 988 | Input/Output: [[-84.70547679463078 -71] -155.70547679463078]
Test Case: 989 | Input/Output: [[-4.771264275877712 39] 34.22873572412229]
Test Case: 990 | Input/Output: [[47.122809332183635 -36] 11.122809332183635]
Test Case: 991 | Input/Output: [[82.04576282365014 51] 133.04576282365014]
Test Case: 992 | Input/Output: [[65.89848621025197 -81] -15.101513789748026]
Test Case: 993 | Input/Output: [[36.533792320722 -42] -5.466207679278]
Test Case: 994 | Input/Output: [[20.673618300451153 -98] -77.32638169954885]
Test Case: 995 | Input/Output: [[68.08344178849356 55] 123.08344178849356]
Test Case: 996 | Input/Output: [[-27.281031541903687 8] -19.281031541903687]
Test Case: 997 | Input/Output: [[-51.60394926325742 -61] -112.60394926325742]
Test Case: 998 | Input/Output: [[-84.67160687346944 73] -11.671606873469443]
Test Case: 999 | Input/Output: [[75.26213126145362 99] 174.26213126145362]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 58 66 -107 41 7 -78 41 60 68 -78 21 127 -88 101 -56 -100
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 60669.1099
Test mean error for best: 30.33455
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -40.0         
Correct output: -121.4181188828 | Program output: -71.0         
Correct output: -53.9537020847 | Program output: -31.0         
Correct output: -21.056824064  | Program output: 35.0          
Correct output: -40.4128479382 | Program output: -38.0         
Correct output: 22.7056098644  | Program output: 24.0          
Correct output: -85.4764811006 | Program output: -18.0         
Correct output: -58.7739403885 | Program output: -36.0         
Correct output: -21.8827499602 | Program output: -91.0         
Correct output: 8.9928003199   | Program output: 57.0          
Correct output: 2.9498640059   | Program output: -66.0         
Correct output: 8.0227633312   | Program output: 43.0          
Correct output: 88.8073730558  | Program output: 48.0          
Correct output: -51.6951995134 | Program output: 24.0          
Correct output: 16.8558496317  | Program output: 25.0          
Correct output: -54.5019943507 | Program output: 21.0          
Correct output: 28.7886817369  | Program output: 54.0          
Correct output: 119.4066893742 | Program output: 90.0          
Correct output: -8.8924177576  | Program output: -89.0         
Correct output: -30.5760090362 | Program output: 14.0          
Correct output: 59.8261519278  | Program output: 74.0          
Correct output: -107.9873881437 | Program output: -94.0         
Correct output: 6.8774260757   | Program output: 84.0          
Correct output: 23.2088987026  | Program output: -36.0         
Correct output: 71.7336904838  | Program output: 65.0          
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_max} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction float_cos} {:instruction integer_add} {:instruction float_sin} {:instruction integer_add} {:instruction integer_flush} {:instruction float_tan} {:instruction integer_pop} {:instruction float_sin} {:instruction float_mod} {:instruction float_stackdepth} {:instruction print_float} {:instruction float_inc} {:instruction float_tan} {:instruction integer_dup_items} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction float_sub} {:instruction float_mod} {:instruction float_swap} {:instruction float_yank} {:instruction float_max} {:instruction integer_pop} {:instruction float_mod} {:instruction integer_shove} {:instruction integer_yank} {:instruction integer_add} {:instruction integer_min} {:instruction float_dup_items} {:instruction float_dup} {:instruction float_mod} {:instruction in2} {:instruction float_rot} {:instruction float_yankdup} {:instruction float_sub} {:instruction float_frominteger} {:instruction float_div} {:instruction float_sub} {:instruction print_float} {:instruction integer_min} {:instruction float_dup_times} {:instruction print_integer} {:instruction integer_max} {:instruction float_sin} {:instruction float_stackdepth} {:instruction float_yank} {:instruction integer_dec} {:instruction integer_flush})
Best program: (float_max integer_stackdepth in2 float_sub float_cos integer_add float_sin integer_add integer_flush float_tan integer_pop float_sin float_mod float_stackdepth print_float float_inc float_tan integer_dup_items integer_pop integer_stackdepth float_sub float_mod float_swap float_yank float_max integer_pop float_mod integer_shove integer_yank integer_add integer_min float_dup_items float_dup float_mod in2 float_rot float_yankdup float_sub float_frominteger float_div float_sub print_float integer_min float_dup_times print_integer integer_max float_sin float_stackdepth float_yank integer_dec integer_flush)
Errors: [44.751 11 50.4181 12 22.9537 11 56.0568 11 2.4128 12 1.2944 10 67.4765 11 22.7739 11 69.1173 10 48.0072 11 68.9499 10 34.9772 11 40.8074 10 75.6952 13 8.1442 12 75.502 12 25.2113 12 29.4067 12 80.1076 10 44.576 12 14.1738 12 13.9874 12 77.1226 9 59.2089 11 6.7337 11]
Total: 1318.8656
Mean: 26.377312
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 17959.4352011
Median total errors in population: 25335.0
Error averages by case: (717.5325709000015 13.116 728.4253058000014 14.213 709.8920739999987 13.17 697.7104007000017 12.337 706.5285303000015 13.045 689.9377103999999 12.967 716.4694067999988 13.184 711.2630066999994 13.226 708.9224410999991 13.779 697.4333280000003 12.184 703.8144778000008 11.699 695.0691463999999 12.321 705.1058851000013 12.422 703.0185690999987 13.321 691.5495884000009 13.078 703.1842275999979 13.175 698.4590353999997 13.152 715.1511406000019 13.184 708.7783489000004 12.908 696.2085076000001 13.202 704.113034800001 13.213 724.9400951999987 13.939 701.4429687999997 12.243 702.985787700001 12.435 697.6046129999987 12.382)
Error minima by case: (0.4379 1 19.5819 2 0.6527 2 2.9432 2 1.4128 1 0.2944 8 0.2737 2 0.0685 2 2.1173 9 1.0072 8 0.0501 2 1.0961 8 3.7843 1 2.6952 2 0.036 8 0.1044 1 1.2113 7 18.4067 2 1.0493 8 0.576 2 2.8561 8 5.4022 2 0.0493 7 0.7911 2 0.7337 1)
Average genome size in population (length): 50.372
Average program size in population (points): 51.372
Average percent parens in population: 0.043
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.299
Error (vector) diversity:			 0.335
Behavioral diversity:				 0.353
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1262978
--- Timings ---
Current time: 1529615442581 milliseconds
Total Time:           3.5 seconds
Initialization:       0.1 seconds,  3.2%
Reproduction:         0.6 seconds, 16.2%
Fitness Testing:      2.8 seconds, 80.6%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 65823.1351
Test mean error for best: 32.91157
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -48.5851849036



Correct output: -121.4181188828 | Program output: -79.5851849036



Correct output: -53.9537020847 | Program output: -39.5851849036



Correct output: -21.056824064  | Program output: 26.4148150964



Correct output: -40.4128479382 | Program output: -46.5851849036



Correct output: 22.7056098644  | Program output: 15.4148150964



Correct output: -85.4764811006 | Program output: -26.5851849036



Correct output: -58.7739403885 | Program output: -44.5851849036



Correct output: -21.8827499602 | Program output: -99.5851849036



Correct output: 8.9928003199   | Program output: 27.5211271865



Correct output: 2.9498640059   | Program output: -74.5851849036



Correct output: 8.0227633312   | Program output: 27.5211271865



Correct output: 88.8073730558  | Program output: 27.5211271865



Correct output: -51.6951995134 | Program output: 15.4148150964



Correct output: 16.8558496317  | Program output: 16.4148150964



Correct output: -54.5019943507 | Program output: 12.4148150964



Correct output: 28.7886817369  | Program output: 27.5211271865



Correct output: 119.4066893742 | Program output: 27.5211271865



Correct output: -8.8924177576  | Program output: -97.5851849036



Correct output: -30.5760090362 | Program output: 5.4148150964



Correct output: 59.8261519278  | Program output: 27.5211271865



Correct output: -107.9873881437 | Program output: -102.5851849036



Correct output: 6.8774260757   | Program output: 27.5211271865



Correct output: 23.2088987026  | Program output: -44.5851849036



Correct output: 71.7336904838  | Program output: 27.5211271865



;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction float_add} {:instruction integer_dup} {:instruction print_newline} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction -76} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_dup} {:instruction integer_shove} {:instruction integer_min} {:instruction float_mod} {:instruction float_flush} {:instruction float_dup_items} {:instruction -50} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_dup} {:instruction integer_rot} {:instruction float_mult} {:instruction in2} {:instruction integer_mult} {:instruction in2} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction integer_div} {:instruction float_mod} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_flush} {:instruction tag_integer_951} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction integer_yank} {:instruction float_mult} {:instruction print_newline})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_inc integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth integer_flush integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank float_add integer_dup print_newline integer_mult integer_stackdepth integer_fromfloat float_inc integer_dec float_yank -76 float_yankdup integer_add integer_flush integer_dup integer_shove integer_min float_mod float_flush float_dup_items -50 float_dup_items integer_min integer_shove integer_dup integer_rot float_mult in2 integer_mult in2 integer_inc integer_fromfloat float_tan integer_div float_mod float_sub integer_dup integer_flush tag_integer_951 integer_pop integer_yankdup integer_yank float_mult print_newline)
Errors: [36.1658 13 41.8329 14 14.3685 13 47.4716 11 6.1723 11 7.2908 12 58.8913 12 14.1888 12 77.7024 11 18.5283 14 77.535 14 19.4984 12 61.2862 13 67.11 12 0.441 10 66.9168 13 1.2676 13 91.8856 15 88.6928 13 35.9908 13 32.305 12 5.4022 11 20.6437 13 67.7941 13 44.2126 14]
Total: 1317.5945000000002
Mean: 26.35189
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 6631.239684800004
Median total errors in population: 1505.5544
Error averages by case: (277.7266774999978 10.987 301.3392689000021 12.371 256.9281661000022 11.208 235.31813039999915 10.555 252.2132396999989 10.958 222.08738060000042 11.958 276.307131599998 11.232 259.7389595000003 11.277 263.0732909000001 12.63 232.83837649999973 11.435 254.71738690000188 10.193 227.9280922999997 11.54 258.6289242999985 10.708 251.90223079999748 11.6 223.3332234000003 12.179 252.45115980000097 11.317 237.40744249999986 12.355 279.36118449999884 11.232 263.5082163000001 11.774 234.86709460000037 11.388 250.41009350000002 12.471 291.68953150000164 11.68 245.7577001999999 11.32 251.76387489999908 10.707 244.23790760000193 10.63)
Error minima by case: (1.751 1 19.5819 2 0.6527 2 3.0238 2 1.4128 1 0.2944 8 0.2737 2 0.2149 2 2.1979 9 1.78 8 0.0501 2 1.0961 8 4.8074 1 2.6952 2 0.036 8 0.1044 1 1.2113 8 13.0494 2 1.0493 8 0.576 2 1.4588 8 5.4022 2 0.0493 7 1.2089 2 0.7337 1)
Average genome size in population (length): 58.923
Average program size in population (points): 59.923
Average percent parens in population: 0.021
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.484
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.29
Error (vector) diversity:			 0.313
Behavioral diversity:				 0.331
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2740737
--- Timings ---
Current time: 1529615447943 milliseconds
Total Time:           8.9 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.8 seconds, 42.4%
Fitness Testing:      4.5 seconds, 50.0%
Report:               0.6 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 64306.1351
Test mean error for best: 32.15307
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -48.5851849036

Correct output: -121.4181188828 | Program output: -79.5851849036

Correct output: -53.9537020847 | Program output: -39.5851849036

Correct output: -21.056824064  | Program output: 26.4148150964

Correct output: -40.4128479382 | Program output: -46.5851849036

Correct output: 22.7056098644  | Program output: 15.4148150964

Correct output: -85.4764811006 | Program output: -26.5851849036

Correct output: -58.7739403885 | Program output: -44.5851849036

Correct output: -21.8827499602 | Program output: -99.5851849036

Correct output: 8.9928003199   | Program output: 27.5211271865

Correct output: 2.9498640059   | Program output: -74.5851849036

Correct output: 8.0227633312   | Program output: 27.5211271865

Correct output: 88.8073730558  | Program output: 27.5211271865

Correct output: -51.6951995134 | Program output: 15.4148150964

Correct output: 16.8558496317  | Program output: 16.4148150964

Correct output: -54.5019943507 | Program output: 12.4148150964

Correct output: 28.7886817369  | Program output: 27.5211271865

Correct output: 119.4066893742 | Program output: 27.5211271865

Correct output: -8.8924177576  | Program output: -97.5851849036

Correct output: -30.5760090362 | Program output: 5.4148150964
 
Correct output: 59.8261519278  | Program output: 27.5211271865

Correct output: -107.9873881437 | Program output: -102.5851849036

Correct output: 6.8774260757   | Program output: 27.5211271865

Correct output: 23.2088987026  | Program output: -44.5851849036

Correct output: 71.7336904838  | Program output: 27.5211271865

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_inc integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth integer_flush integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [36.1658 11 41.8329 12 14.3685 11 47.4716 9 6.1723 9 7.2908 10 58.8913 10 14.1888 11 77.7024 10 18.5283 12 77.535 12 19.4984 11 61.2862 11 67.11 12 0.441 9 66.9168 13 1.2676 11 91.8856 14 88.6928 12 35.9908 12 32.305 10 5.4022 9 20.6437 11 67.7941 11 44.2126 12]
Total: 1278.5945000000002
Mean: 25.57189
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 4403.7549900000095
Median total errors in population: 1338.8656
Error averages by case: (171.25147959999927 10.082 183.08395340000072 11.705 152.5378273000003 10.698 168.05865730000033 10.438 137.074917900001 10.23 128.92876079999942 11.515 181.61374879999923 10.761 153.65072910000012 10.719 190.3708267000015 12.243 166.21357119999703 11.699 184.80848030000308 9.769 155.57751949999783 11.372 165.95044920000007 10.387 181.6859500999984 11.505 132.68093529999888 12.077 181.19050349999944 11.252 152.06525779999845 12.522 167.9759271000009 10.714 196.1569941999989 10.937 157.9572612000006 11.706 150.13850600000006 12.443 161.2913065000008 10.935 188.68275640000115 10.688 175.20769249999887 10.131 142.65597829999928 10.417)
Error minima by case: (4.751 1 20.5819 2 8.0463 2 3.2022 2 1.4128 1 0.2944 8 16.0 2 13.2261 2 4.0281 9 2.0661 8 1.045 2 1.0961 9 5.5098 1 12.2343 2 0.441 8 9.4275 1 1.2676 7 27.4067 2 1.0493 8 12.7214 2 13.1738 9 5.4022 2 0.0493 7 16.2822 2 4.7337 1)
Average genome size in population (length): 54.273
Average program size in population (points): 55.273
Average percent parens in population: 0.021
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9765
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.67
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.67
Total error diversity:				 0.134
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.154
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4100051
--- Timings ---
Current time: 1529615451122 milliseconds
Total Time:          12.2 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.2 seconds, 42.4%
Fitness Testing:      5.8 seconds, 47.7%
Report:               1.1 seconds,  8.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 64306.1351
Test mean error for best: 32.15307
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -48.5851849036

Correct output: -121.4181188828 | Program output: -79.5851849036

Correct output: -53.9537020847 | Program output: -39.5851849036

Correct output: -21.056824064  | Program output: 26.4148150964

Correct output: -40.4128479382 | Program output: -46.5851849036

Correct output: 22.7056098644  | Program output: 15.4148150964

Correct output: -85.4764811006 | Program output: -26.5851849036

Correct output: -58.7739403885 | Program output: -44.5851849036

Correct output: -21.8827499602 | Program output: -99.5851849036

Correct output: 8.9928003199   | Program output: 27.5211271865

Correct output: 2.9498640059   | Program output: -74.5851849036

Correct output: 8.0227633312   | Program output: 27.5211271865

Correct output: 88.8073730558  | Program output: 27.5211271865

Correct output: -51.6951995134 | Program output: 15.4148150964

Correct output: 16.8558496317  | Program output: 16.4148150964

Correct output: -54.5019943507 | Program output: 12.4148150964

Correct output: 28.7886817369  | Program output: 27.5211271865

Correct output: 119.4066893742 | Program output: 27.5211271865

Correct output: -8.8924177576  | Program output: -97.5851849036

Correct output: -30.5760090362 | Program output: 5.4148150964
 
Correct output: 59.8261519278  | Program output: 27.5211271865

Correct output: -107.9873881437 | Program output: -102.5851849036

Correct output: 6.8774260757   | Program output: 27.5211271865

Correct output: 23.2088987026  | Program output: -44.5851849036

Correct output: 71.7336904838  | Program output: 27.5211271865

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_inc integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth integer_flush integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [36.1658 11 41.8329 12 14.3685 11 47.4716 9 6.1723 9 7.2908 10 58.8913 10 14.1888 11 77.7024 10 18.5283 12 77.535 12 19.4984 11 61.2862 11 67.11 12 0.441 9 66.9168 13 1.2676 11 91.8856 14 88.6928 12 35.9908 12 32.305 10 5.4022 9 20.6437 11 67.7941 11 44.2126 12]
Total: 1278.5945000000002
Mean: 25.57189
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 4513.461286300009
Median total errors in population: 1335.8656
Error averages by case: (172.5166953999986 11.454 181.81373340000147 12.952 153.57135460000055 11.81 175.57499059999944 11.655 137.48419330000124 11.793 129.9873685999993 11.082 189.44618849999796 11.92 154.10048940000016 11.932 198.36511330000266 11.509 171.03372449999662 11.65 194.80682480000348 10.818 159.00153359999752 11.105 167.10129619999955 11.487 191.83899309999737 13.021 136.12236239999885 12.009 192.19468690000053 12.683 151.88698079999855 12.618 165.26117810000042 12.201 207.0306015999976 10.621 164.85863340000063 13.077 148.20246699999961 12.185 154.45694890000087 12.49 198.4019741000015 10.064 184.32723369999852 11.328 138.84872009999887 11.763)
Error minima by case: (13.925 4 11.4079 4 1.1277 5 2.1695 4 1.4128 4 0.2944 8 13.5235 5 4.0521 5 12.7088 10 0.4076 9 1.9499 5 0.5624 10 5.7429 4 24.3048 4 0.0906 7 21.498 4 0.7887 8 24.8564 3 0.2816 8 7.3497 4 13.1738 10 3.0357 5 1.7078 7 2.2089 4 3.7337 3)
Average genome size in population (length): 51.931
Average program size in population (points): 52.931
Average percent parens in population: 0.021
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.5165
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.077
Error (vector) diversity:			 0.08
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5399251
--- Timings ---
Current time: 1529615454462 milliseconds
Total Time:          15.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.0 seconds, 44.4%
Fitness Testing:      7.1 seconds, 45.3%
Report:               1.5 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 64306.1351
Test mean error for best: 32.15307
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -48.5851849036

Correct output: -121.4181188828 | Program output: -79.5851849036

Correct output: -53.9537020847 | Program output: -39.5851849036

Correct output: -21.056824064  | Program output: 26.4148150964

Correct output: -40.4128479382 | Program output: -46.5851849036

Correct output: 22.7056098644  | Program output: 15.4148150964

Correct output: -85.4764811006 | Program output: -26.5851849036

Correct output: -58.7739403885 | Program output: -44.5851849036

Correct output: -21.8827499602 | Program output: -99.5851849036

Correct output: 8.9928003199   | Program output: 27.5211271865

Correct output: 2.9498640059   | Program output: -74.5851849036

Correct output: 8.0227633312   | Program output: 27.5211271865

Correct output: 88.8073730558  | Program output: 27.5211271865

Correct output: -51.6951995134 | Program output: 15.4148150964

Correct output: 16.8558496317  | Program output: 16.4148150964

Correct output: -54.5019943507 | Program output: 12.4148150964

Correct output: 28.7886817369  | Program output: 27.5211271865

Correct output: 119.4066893742 | Program output: 27.5211271865

Correct output: -8.8924177576  | Program output: -97.5851849036

Correct output: -30.5760090362 | Program output: 5.4148150964
 
Correct output: 59.8261519278  | Program output: 27.5211271865

Correct output: -107.9873881437 | Program output: -102.5851849036

Correct output: 6.8774260757   | Program output: 27.5211271865

Correct output: 23.2088987026  | Program output: -44.5851849036

Correct output: 71.7336904838  | Program output: 27.5211271865

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_inc integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth integer_flush integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [36.1658 11 41.8329 12 14.3685 11 47.4716 9 6.1723 9 7.2908 10 58.8913 10 14.1888 11 77.7024 10 18.5283 12 77.535 12 19.4984 11 61.2862 11 67.11 12 0.441 9 66.9168 13 1.2676 11 91.8856 14 88.6928 12 35.9908 12 32.305 10 5.4022 9 20.6437 11 67.7941 11 44.2126 12]
Total: 1278.5945000000002
Mean: 25.57189
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3917.328789800011
Median total errors in population: 1318.8656
Error averages by case: (153.03693539999946 11.506 160.8739127000003 12.606 132.90809089999888 11.477 150.51954820000034 11.124 116.75211300000129 11.905 107.97973349999958 10.702 171.1759494999992 11.464 133.2009019000003 11.512 171.213331100001 10.733 141.61514569999787 11.423 169.64915990000318 10.684 132.3082002999981 11.15 147.40218070000066 10.88 168.67505879999862 12.864 111.6256862999993 11.766 168.7281355999996 12.313 124.94314329999939 12.13 146.16028480000134 12.449 179.40222879999885 10.808 141.65328660000057 12.234 123.49087560000031 12.009 130.68834889999897 12.215 162.5746476000009 9.99 162.19441559999865 11.337 119.75847509999848 11.518)
Error minima by case: (33.7993 1 39.4664 3 11.9537 2 1.0568 2 1.4128 2 0.2944 8 18.0 2 11.8223 2 1.8827 9 0.4076 8 1.9499 2 0.5624 8 5.7429 2 6.6952 2 0.441 7 12.502 2 0.1613 8 24.8564 2 0.2816 8 1.9908 2 5.5887 10 3.0357 2 1.7078 7 1.2089 2 5.7337 2)
Average genome size in population (length): 55.582
Average program size in population (points): 56.582
Average percent parens in population: 0.019
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.11025
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.1
Error (vector) diversity:			 0.105
Behavioral diversity:				 0.112
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6789126
--- Timings ---
Current time: 1529615457678 milliseconds
Total Time:          18.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.5 seconds, 45.0%
Fitness Testing:      8.4 seconds, 44.8%
Report:               1.8 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 61279.62739999994
Test mean error for best: 30.63981
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -48.5851849036

Correct output: -121.4181188828 | Program output: -79.5851849036

Correct output: -53.9537020847 | Program output: -39.5851849036

Correct output: -21.056824064  | Program output: 26.4148150964

Correct output: -40.4128479382 | Program output: -46.5851849036

Correct output: 22.7056098644  | Program output: 15.4148150964

Correct output: -85.4764811006 | Program output: -26.5851849036

Correct output: -58.7739403885 | Program output: -44.5851849036

Correct output: -21.8827499602 | Program output: -99.5851849036

Correct output: 8.9928003199   | Program output: 48.4148150964

Correct output: 2.9498640059   | Program output: -74.5851849036

Correct output: 8.0227633312   | Program output: 34.4148150964

Correct output: 88.8073730558  | Program output: 39.4148150964

Correct output: -51.6951995134 | Program output: 15.4148150964

Correct output: 16.8558496317  | Program output: 16.4148150964

Correct output: -54.5019943507 | Program output: 12.4148150964

Correct output: 28.7886817369  | Program output: 45.4148150964

Correct output: 119.4066893742 | Program output: 81.4148150964

Correct output: -8.8924177576  | Program output: -97.5851849036

Correct output: -30.5760090362 | Program output: 5.4148150964
 
Correct output: 59.8261519278  | Program output: 65.4148150964

Correct output: -107.9873881437 | Program output: -102.5851849036

Correct output: 6.8774260757   | Program output: 75.4148150964

Correct output: 23.2088987026  | Program output: -44.5851849036

Correct output: 71.7336904838  | Program output: 56.4148150964

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction float_max} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger float_max integer_rot integer_inc integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth integer_flush integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [36.1658 11 41.8329 12 14.3685 11 47.4716 9 6.1723 9 7.2908 10 58.8913 10 14.1888 11 77.7024 10 39.422 10 77.535 12 26.3921 13 49.3926 12 67.11 12 0.441 9 66.9168 13 16.6261 11 37.9919 11 88.6928 12 35.9908 12 5.5887 10 5.4022 9 68.5374 12 67.7941 11 15.3189 12]
Total: 1247.2368
Mean: 24.944736
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3810.3298970000064
Median total errors in population: 1318.8656
Error averages by case: (143.09599230000032 11.846 150.1491386999991 12.809 123.07392959999824 11.749 147.39276950000055 10.72 110.94002640000119 11.182 108.37815740000042 10.792 162.01552090000004 11.286 123.21211620000132 11.553 167.6813258000004 10.777 130.30511969999984 11.941 166.2462898000029 11.634 125.75547689999797 11.35 151.75798180000132 11.337 165.6845170999986 12.608 107.5566747000004 10.814 165.71969130000107 12.579 114.95174150000062 11.935 163.30207520000036 13.304 176.04506709999907 11.549 138.4864025000001 12.217 126.61480659999889 11.647 119.07420429999844 11.392 142.35179100000022 10.893 158.6949637999991 11.7 130.11911689999877 12.111)
Error minima by case: (0.0595 1 5.7266 10 12.002 9 11.1051 2 1.2174 8 0.2944 8 18.0 2 11.8223 8 11.9311 9 0.4076 8 0.3168 9 0.5624 8 5.7429 2 24.0 2 0.441 7 21.0 2 0.1613 8 20.2327 2 0.2816 8 0.1155 2 3.2222 9 3.0357 8 0.1119 7 4.3122 9 2.4403 2)
Average genome size in population (length): 52.687
Average program size in population (points): 53.687
Average percent parens in population: 0.020
Minimum age in population: 5.0
Maximum age in population: 9.5
Average age in population: 7.5261875
Median age in population: 7.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 113
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 113
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.113
Error (vector) diversity:			 0.117
Behavioral diversity:				 0.121
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8106351
--- Timings ---
Current time: 1529615461071 milliseconds
Total Time:          22.2 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.9 seconds, 44.3%
Fitness Testing:     10.1 seconds, 45.4%
Report:               2.2 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 61470.924399999996
Test mean error for best: 30.73546
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -50.9516834017

Correct output: -121.4181188828 | Program output: -81.9516834017

Correct output: -53.9537020847 | Program output: -41.9516834017

Correct output: -21.056824064  | Program output: 24.0483165983

Correct output: -40.4128479382 | Program output: -48.9516834017

Correct output: 22.7056098644  | Program output: 13.0483165983

Correct output: -85.4764811006 | Program output: -28.9516834017

Correct output: -58.7739403885 | Program output: -46.9516834017

Correct output: -21.8827499602 | Program output: -101.9516834017

Correct output: 8.9928003199   | Program output: 46.0483165983

Correct output: 2.9498640059   | Program output: -76.9516834017

Correct output: 8.0227633312   | Program output: 32.0483165983

Correct output: 88.8073730558  | Program output: 37.0483165983

Correct output: -51.6951995134 | Program output: 13.0483165983

Correct output: 16.8558496317  | Program output: 14.0483165983

Correct output: -54.5019943507 | Program output: 10.0483165983

Correct output: 28.7886817369  | Program output: 43.0483165983

Correct output: 119.4066893742 | Program output: 79.0483165983

Correct output: -8.8924177576  | Program output: -99.9516834017

Correct output: -30.5760090362 | Program output: 3.0483165983
 
Correct output: 59.8261519278  | Program output: 63.0483165983

Correct output: -107.9873881437 | Program output: -104.9516834017

Correct output: 6.8774260757   | Program output: 73.0483165983

Correct output: 23.2088987026  | Program output: -46.9516834017

Correct output: 71.7336904838  | Program output: 54.0483165983

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction integer_add} {:instruction integer_rot} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction 9.951683401689253} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction float_add} {:instruction integer_dup} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction -76} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_dup} {:instruction integer_flush} {:instruction integer_min} {:instruction float_mod} {:instruction float_flush} {:instruction float_dup_items} {:instruction -50} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_tan} {:instruction integer_swap} {:instruction float_yankdup} {:instruction in1} {:instruction float_add} {:instruction float_sub} {:instruction float_cos})
Best program: (integer_shove in2 integer_div float_frominteger integer_add integer_rot integer_inc integer_yankdup integer_pop integer_stackdepth 9.951683401689253 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank float_add integer_dup integer_max integer_mult integer_stackdepth integer_fromfloat float_inc integer_dec float_yank -76 float_yankdup integer_add integer_flush integer_dup integer_flush integer_min float_mod float_flush float_dup_items -50 float_dup_items integer_min integer_shove integer_dec float_tan integer_swap float_yankdup in1 float_add float_sub float_cos)
Errors: [33.7993 12 39.4664 12 12.002 10 45.1051 12 8.5388 10 9.6573 11 56.5248 11 11.8223 12 80.0689 13 37.0555 12 79.9015 10 24.0256 11 51.7591 11 64.7435 12 2.8075 10 64.5503 13 14.2596 11 40.3584 11 91.0593 12 33.6243 11 3.2222 11 3.0357 9 66.1709 12 70.1606 13 17.6854 10]
Total: 1243.4043
Mean: 24.868086
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2512.544675399999
Median total errors in population: 1278.5945000000002
Error averages by case: (88.99749100000113 11.477 96.77303789999893 12.373 68.07021269999903 11.385 94.28670980000041 9.66 59.729699799999054 9.86 57.67267610000043 10.456 108.4278431000017 10.553 68.2629516000013 11.27 120.60967919999851 10.454 69.73880649999995 11.959 119.04900120000221 12.018 69.23708899999893 11.249 108.30092740000134 11.334 113.49011440000046 12.182 52.42927609999956 9.617 113.41862310000157 12.842 54.63368489999959 11.226 133.1747133999984 13.749 129.318772400001 11.944 84.48249449999976 12.008 79.91114829999923 10.582 64.47638549999915 9.93 74.33995020000039 11.298 110.36969209999931 11.321 90.4486951999992 12.148)
Error minima by case: (0.0595 8 5.7266 10 5.7833 8 5.2344 8 1.4128 8 0.2944 9 1.5059 8 5.6036 8 6.0604 9 0.4076 9 1.2558 9 0.4376 8 14.4367 8 20.3048 9 0.233 7 17.498 10 0.1613 8 3.036 9 0.2816 8 0.1155 8 3.2222 9 3.0357 8 0.7078 7 4.3122 9 5.7337 9)
Average genome size in population (length): 41.046
Average program size in population (points): 42.046
Average percent parens in population: 0.026
Minimum age in population: 6.75
Maximum age in population: 10.96875
Average age in population: 8.93009375
Median age in population: 8.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 255
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 255
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.091
Error (vector) diversity:			 0.094
Behavioral diversity:				 0.096
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9132576
--- Timings ---
Current time: 1529615464471 milliseconds
Total Time:          25.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.4 seconds, 44.4%
Fitness Testing:     11.6 seconds, 45.4%
Report:               2.5 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 62521.44400000006
Test mean error for best: 31.26072
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071

Correct output: -121.4181188828 | Program output: -88.1703698071

Correct output: -53.9537020847 | Program output: -48.1703698071

Correct output: -21.056824064  | Program output: 17.8296301929

Correct output: -40.4128479382 | Program output: -55.1703698071

Correct output: 22.7056098644  | Program output: 6.8296301929
 
Correct output: -85.4764811006 | Program output: -35.1703698071

Correct output: -58.7739403885 | Program output: -53.1703698071

Correct output: -21.8827499602 | Program output: -108.1703698071

Correct output: 8.9928003199   | Program output: 39.8296301929

Correct output: 2.9498640059   | Program output: -83.1703698071

Correct output: 8.0227633312   | Program output: 25.8296301929

Correct output: 88.8073730558  | Program output: 30.8296301929

Correct output: -51.6951995134 | Program output: 6.8296301929
 
Correct output: 16.8558496317  | Program output: 7.8296301929
 
Correct output: -54.5019943507 | Program output: 3.8296301929
 
Correct output: 28.7886817369  | Program output: 36.8296301929

Correct output: 119.4066893742 | Program output: 72.8296301929

Correct output: -8.8924177576  | Program output: -106.1703698071

Correct output: -30.5760090362 | Program output: -3.1703698071

Correct output: 59.8261519278  | Program output: 56.8296301929

Correct output: -107.9873881437 | Program output: -111.1703698071

Correct output: 6.8774260757   | Program output: 66.8296301929

Correct output: 23.2088987026  | Program output: -53.1703698071

Correct output: 71.7336904838  | Program output: 47.8296301929

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [27.5806 10 33.2477 13 5.7833 11 38.8865 13 14.7575 12 15.876 11 50.3061 10 5.6036 9 86.2876 11 30.8368 10 86.1202 12 17.8069 10 57.9777 11 58.5248 12 9.0262 11 58.3316 13 8.0409 11 46.5771 13 97.278 13 27.4056 9 2.9965 6 3.183 11 59.9522 11 76.3793 10 23.9041 11]
Total: 1216.6698000000001
Mean: 24.333397
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2297.1232614000023
Median total errors in population: 1278.5945000000002
Error averages by case: (80.26446390000098 11.341 88.52396459999908 12.152 60.21221469999893 11.231 83.48235280000016 9.459 53.591372499999174 9.724 50.59816530000061 10.476 99.98846050000161 10.251 60.477467500001424 11.2 114.23682149999844 10.578 63.766642499999435 11.356 112.3108293000022 11.875 60.212103699998906 11.541 98.9872210000014 11.363 103.14704870000043 12.067 44.719825599999645 9.645 103.23239990000157 12.713 48.93632669999978 10.887 114.68130069999833 12.845 122.67822530000109 11.904 74.39615469999985 11.751 65.81794190000015 10.369 58.342813099998956 9.723 74.57806850000038 11.348 103.96064659999941 11.14 77.18942989999917 11.852)
Error minima by case: (0.0595 2 5.7266 4 5.7833 3 6.358 3 2.4128 3 1.2944 10 9.4148 3 3.8112 3 10.7772 10 0.4076 8 0.3168 3 0.3311 9 11.9436 3 8.5852 3 0.441 6 8.0832 3 0.0114 8 29.4067 3 0.3072 8 0.1155 3 2.9965 6 3.0357 3 0.1119 9 1.9457 3 5.1301 3)
Average genome size in population (length): 37.747
Average program size in population (points): 38.747
Average percent parens in population: 0.028
Minimum age in population: 7.75
Maximum age in population: 12.4375
Average age in population: 10.472390625
Median age in population: 10.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 133
Genome diversity (% unique Plush genomes):	 0.56
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 133
Syntactic diversity (% unique Push programs):	 0.56
Total error diversity:				 0.095
Error (vector) diversity:			 0.098
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 10076376
--- Timings ---
Current time: 1529615467590 milliseconds
Total Time:          28.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        12.7 seconds, 44.3%
Fitness Testing:     13.0 seconds, 45.3%
Report:               2.9 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 62521.44400000006
Test mean error for best: 31.26072
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071

Correct output: -121.4181188828 | Program output: -88.1703698071

Correct output: -53.9537020847 | Program output: -48.1703698071

Correct output: -21.056824064  | Program output: 17.8296301929

Correct output: -40.4128479382 | Program output: -55.1703698071

Correct output: 22.7056098644  | Program output: 6.8296301929
 
Correct output: -85.4764811006 | Program output: -35.1703698071

Correct output: -58.7739403885 | Program output: -53.1703698071

Correct output: -21.8827499602 | Program output: -108.1703698071

Correct output: 8.9928003199   | Program output: 39.8296301929

Correct output: 2.9498640059   | Program output: -83.1703698071

Correct output: 8.0227633312   | Program output: 25.8296301929

Correct output: 88.8073730558  | Program output: 30.8296301929

Correct output: -51.6951995134 | Program output: 6.8296301929
 
Correct output: 16.8558496317  | Program output: 7.8296301929
 
Correct output: -54.5019943507 | Program output: 3.8296301929
 
Correct output: 28.7886817369  | Program output: 36.8296301929

Correct output: 119.4066893742 | Program output: 72.8296301929

Correct output: -8.8924177576  | Program output: -106.1703698071

Correct output: -30.5760090362 | Program output: -3.1703698071

Correct output: 59.8261519278  | Program output: 56.8296301929

Correct output: -107.9873881437 | Program output: -111.1703698071

Correct output: 6.8774260757   | Program output: 66.8296301929

Correct output: 23.2088987026  | Program output: -53.1703698071

Correct output: 71.7336904838  | Program output: 47.8296301929

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [27.5806 10 33.2477 13 5.7833 11 38.8865 13 14.7575 12 15.876 11 50.3061 10 5.6036 9 86.2876 11 30.8368 10 86.1202 12 17.8069 10 57.9777 11 58.5248 12 9.0262 11 58.3316 13 8.0409 11 46.5771 13 97.278 13 27.4056 9 2.9965 6 3.183 11 59.9522 11 76.3793 10 23.9041 11]
Total: 1216.6698000000001
Mean: 24.333397
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2325.5667487999835
Median total errors in population: 1247.2368
Error averages by case: (82.3006411000007 11.422 89.7271440999994 12.129 61.43191319999916 11.085 86.33812700000027 9.738 54.43867669999952 9.676 51.10659090000058 10.487 101.95142370000117 10.356 61.55763570000107 11.319 117.0685641999984 10.849 75.83016770000005 10.688 115.70731530000221 11.568 65.79621499999932 12.275 94.54139880000118 11.722 105.41231790000006 12.02 45.02949589999972 9.523 105.2978001000018 12.813 57.36228040000031 10.964 90.97930909999891 11.532 126.08152360000055 11.938 75.98421109999988 11.703 54.49771999999991 10.414 57.318401299999216 9.495 98.93289490000024 11.824 107.3688960999997 11.365 64.93508499999943 11.666)
Error minima by case: (0.1858 8 4.7266 10 3.4168 8 7.358 8 2.4128 8 0.8022 8 7.0483 8 3.2371 9 9.9367 10 0.4076 9 0.5006 8 0.4376 9 39.8074 9 14.5889 8 0.441 6 17.3957 9 0.1613 8 28.4067 8 1.0593 8 0.3608 8 2.2222 6 2.0357 8 0.7078 9 1.3055 9 5.7337 8)
Average genome size in population (length): 34.718
Average program size in population (points): 35.718
Average percent parens in population: 0.030
Minimum age in population: 9.421875
Maximum age in population: 13.640625
Average age in population: 11.9529453125
Median age in population: 11.96875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 91
Genome diversity (% unique Plush genomes):	 0.513
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.513
Total error diversity:				 0.077
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 10944376
--- Timings ---
Current time: 1529615470951 milliseconds
Total Time:          32.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.1 seconds, 44.0%
Fitness Testing:     14.5 seconds, 45.4%
Report:               3.3 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 62521.44400000006
Test mean error for best: 31.26072
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071

Correct output: -121.4181188828 | Program output: -88.1703698071

Correct output: -53.9537020847 | Program output: -48.1703698071

Correct output: -21.056824064  | Program output: 17.8296301929

Correct output: -40.4128479382 | Program output: -55.1703698071

Correct output: 22.7056098644  | Program output: 6.8296301929
 
Correct output: -85.4764811006 | Program output: -35.1703698071

Correct output: -58.7739403885 | Program output: -53.1703698071

Correct output: -21.8827499602 | Program output: -108.1703698071

Correct output: 8.9928003199   | Program output: 39.8296301929

Correct output: 2.9498640059   | Program output: -83.1703698071

Correct output: 8.0227633312   | Program output: 25.8296301929

Correct output: 88.8073730558  | Program output: 30.8296301929

Correct output: -51.6951995134 | Program output: 6.8296301929
 
Correct output: 16.8558496317  | Program output: 7.8296301929
 
Correct output: -54.5019943507 | Program output: 3.8296301929
 
Correct output: 28.7886817369  | Program output: 36.8296301929

Correct output: 119.4066893742 | Program output: 72.8296301929

Correct output: -8.8924177576  | Program output: -106.1703698071

Correct output: -30.5760090362 | Program output: -3.1703698071

Correct output: 59.8261519278  | Program output: 56.8296301929

Correct output: -107.9873881437 | Program output: -111.1703698071

Correct output: 6.8774260757   | Program output: 66.8296301929

Correct output: 23.2088987026  | Program output: -53.1703698071

Correct output: 71.7336904838  | Program output: 47.8296301929

;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction print_newline} {:instruction float_dup} {:instruction integer_div} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction -76} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_dup} {:instruction integer_flush} {:instruction integer_min} {:instruction float_mod} {:instruction float_flush} {:instruction float_dup_items} {:instruction -50} {:instruction float_dup_items} {:instruction integer_min} {:instruction integer_shove} {:instruction integer_dec})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float print_newline float_dup integer_div integer_mult integer_stackdepth integer_fromfloat float_inc integer_dec float_yank -76 float_yankdup integer_add integer_flush integer_dup integer_flush integer_min float_mod float_flush float_dup_items -50 float_dup_items integer_min integer_shove integer_dec)
Errors: [27.5806 10 33.2477 13 5.7833 11 38.8865 13 14.7575 12 15.876 11 50.3061 10 5.6036 9 86.2876 11 30.8368 10 86.1202 12 17.8069 10 57.9777 11 58.5248 12 9.0262 11 58.3316 13 8.0409 11 46.5771 13 97.278 13 27.4056 9 2.9965 6 3.183 11 59.9522 11 76.3793 10 23.9041 11]
Total: 1216.6698000000001
Mean: 24.333397
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2647.481994099997
Median total errors in population: 1243.4043
Error averages by case: (94.00344640000017 11.715 101.27927819999974 12.12 73.05772479999933 10.817 99.37922290000066 10.574 67.44030949999976 10.009 66.02335520000022 10.804 113.98665320000053 10.591 73.18469480000066 11.654 129.29258509999858 11.79 91.27963730000081 11.137 128.10784990000235 10.918 79.83644599999924 11.798 107.12296040000068 11.422 118.34191969999954 11.946 59.92791730000015 9.832 118.33484750000157 12.779 72.33451100000008 10.975 99.19895169999883 11.372 138.2861563999992 11.93 89.77607959999972 11.344 64.92934279999955 10.678 68.70203309999941 9.434 116.88031699999974 11.829 120.08494930000026 11.837 76.1908049999998 11.195)
Error minima by case: (2.2636 8 28.5148 9 1.0503 8 10.1051 8 1.8311 8 0.7126 8 2.9891 7 0.8706 9 10.3323 9 0.4076 9 2.9499 8 0.5624 10 32.2222 9 7.5284 9 0.3145 7 10.3352 10 1.2676 8 20.8215 10 0.3072 8 1.6391 8 1.3455 6 1.159 8 1.7078 9 1.9457 9 0.8515 8)
Average genome size in population (length): 34.117
Average program size in population (points): 35.117
Average percent parens in population: 0.030
Minimum age in population: 11.1171875
Maximum age in population: 15.0390625
Average age in population: 13.40755078125
Median age in population: 13.40234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.514
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.514
Total error diversity:				 0.073
Error (vector) diversity:			 0.074
Behavioral diversity:				 0.076
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 11797301
--- Timings ---
Current time: 1529615474039 milliseconds
Total Time:          35.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.4 seconds, 43.9%
Fitness Testing:     15.9 seconds, 45.2%
Report:               3.7 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 61919.44400000006
Test mean error for best: 30.95972
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071
Correct output: -121.4181188828 | Program output: -88.1703698071
Correct output: -53.9537020847 | Program output: -48.1703698071
Correct output: -21.056824064  | Program output: 17.8296301929 
Correct output: -40.4128479382 | Program output: -55.1703698071
Correct output: 22.7056098644  | Program output: 6.8296301929  
Correct output: -85.4764811006 | Program output: -35.1703698071
Correct output: -58.7739403885 | Program output: -53.1703698071
Correct output: -21.8827499602 | Program output: -108.1703698071
Correct output: 8.9928003199   | Program output: 39.8296301929 
Correct output: 2.9498640059   | Program output: -83.1703698071
Correct output: 8.0227633312   | Program output: 25.8296301929 
Correct output: 88.8073730558  | Program output: 30.8296301929 
Correct output: -51.6951995134 | Program output: 6.8296301929  
Correct output: 16.8558496317  | Program output: 7.8296301929  
Correct output: -54.5019943507 | Program output: 3.8296301929  
Correct output: 28.7886817369  | Program output: 36.8296301929 
Correct output: 119.4066893742 | Program output: 72.8296301929 
Correct output: -8.8924177576  | Program output: -106.1703698071
Correct output: -30.5760090362 | Program output: -3.1703698071 
Correct output: 59.8261519278  | Program output: 56.8296301929 
Correct output: -107.9873881437 | Program output: -111.1703698071
Correct output: 6.8774260757   | Program output: 66.8296301929 
Correct output: 23.2088987026  | Program output: -53.1703698071
Correct output: 71.7336904838  | Program output: 47.8296301929 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction float_min} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction -76} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_dup})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float float_min float_dup integer_div float_yank integer_max float_stackdepth integer_rot float_dup_times integer_mult integer_stackdepth integer_fromfloat float_inc integer_dec float_yank -76 float_yankdup integer_add integer_flush integer_dup)
Errors: [27.5806 9 33.2477 12 5.7833 10 38.8865 12 14.7575 11 15.876 11 50.3061 9 5.6036 9 86.2876 10 30.8368 9 86.1202 11 17.8069 9 57.9777 10 58.5248 12 9.0262 10 58.3316 13 8.0409 10 46.5771 12 97.278 12 27.4056 9 2.9965 6 3.183 11 59.9522 10 76.3793 9 23.9041 10]
Total: 1198.6698000000001
Mean: 23.973396
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2652.258056999999
Median total errors in population: 1233.2368
Error averages by case: (93.2413935000007 11.377 100.48631059999958 11.876 72.25857449999894 10.994 99.2552402000001 10.002 67.9705899999996 10.182 67.06146990000032 10.642 112.9826579000011 10.029 72.38246840000122 11.145 130.40529879999846 11.186 92.07191430000074 10.694 129.43803080000228 11.03 80.51797509999923 11.573 108.9431367000013 11.211 117.79027789999991 11.611 61.07559719999976 9.91 117.69678690000188 12.358 72.98183560000038 10.637 100.92545459999872 11.614 139.57214170000006 11.693 88.95087389999973 10.914 66.41973489999987 9.977 68.97834739999895 9.362 117.8373094000001 11.315 121.34607689999987 10.877 77.9485598999995 11.511)
Error minima by case: (0.3008 3 2.8586 8 1.0503 8 2.7801 3 0.4488 9 0.6697 7 0.4247 2 0.8706 8 4.7124 9 0.0411 7 0.5834 4 0.5624 8 2.751 8 4.4318 3 0.3145 7 10.2386 2 1.2676 8 28.4067 9 0.3072 7 2.6391 3 1.3455 6 1.159 8 1.5989 8 4.3122 3 5.7337 8)
Average genome size in population (length): 33.989
Average program size in population (points): 34.989
Average percent parens in population: 0.030
Minimum age in population: 12.5703125
Maximum age in population: 16.921875
Average age in population: 14.87278125
Median age in population: 14.9453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 83
Genome diversity (% unique Plush genomes):	 0.512
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.512
Total error diversity:				 0.085
Error (vector) diversity:			 0.085
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 12647026
--- Timings ---
Current time: 1529615477070 milliseconds
Total Time:          38.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.8 seconds, 43.9%
Fitness Testing:     17.2 seconds, 45.0%
Report:               4.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 61919.44400000006
Test mean error for best: 30.95972
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071
Correct output: -121.4181188828 | Program output: -88.1703698071
Correct output: -53.9537020847 | Program output: -48.1703698071
Correct output: -21.056824064  | Program output: 17.8296301929 
Correct output: -40.4128479382 | Program output: -55.1703698071
Correct output: 22.7056098644  | Program output: 6.8296301929  
Correct output: -85.4764811006 | Program output: -35.1703698071
Correct output: -58.7739403885 | Program output: -53.1703698071
Correct output: -21.8827499602 | Program output: -108.1703698071
Correct output: 8.9928003199   | Program output: 39.8296301929 
Correct output: 2.9498640059   | Program output: -83.1703698071
Correct output: 8.0227633312   | Program output: 25.8296301929 
Correct output: 88.8073730558  | Program output: 30.8296301929 
Correct output: -51.6951995134 | Program output: 6.8296301929  
Correct output: 16.8558496317  | Program output: 7.8296301929  
Correct output: -54.5019943507 | Program output: 3.8296301929  
Correct output: 28.7886817369  | Program output: 36.8296301929 
Correct output: 119.4066893742 | Program output: 72.8296301929 
Correct output: -8.8924177576  | Program output: -106.1703698071
Correct output: -30.5760090362 | Program output: -3.1703698071 
Correct output: 59.8261519278  | Program output: 56.8296301929 
Correct output: -107.9873881437 | Program output: -111.1703698071
Correct output: 6.8774260757   | Program output: 66.8296301929 
Correct output: 23.2088987026  | Program output: -53.1703698071
Correct output: 71.7336904838  | Program output: 47.8296301929 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.5806 9 33.2477 12 5.7833 10 38.8865 12 14.7575 11 15.876 11 50.3061 9 5.6036 9 86.2876 10 30.8368 9 86.1202 11 17.8069 9 57.9777 10 58.5248 12 9.0262 10 58.3316 13 8.0409 10 46.5771 12 97.278 12 27.4056 9 2.9965 6 3.183 11 59.9522 10 76.3793 9 23.9041 10]
Total: 1198.6698000000001
Mean: 23.973396
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2636.700317599984
Median total errors in population: 1219.9369
Error averages by case: (90.42807030000064 10.945 98.74896810000068 12.579 69.25348879999989 11.125 94.52729999999931 11.37 71.55678880000019 11.258 70.66764649999973 10.922 109.59800510000107 10.207 69.5604956000009 10.236 131.946055999999 11.202 87.04378910000028 10.384 130.29260590000152 11.56 75.76771690000005 10.982 112.52044060000196 11.237 113.72418629999993 11.861 64.47079679999985 10.569 113.75761490000153 12.516 69.2309572000004 10.872 106.1363673999987 12.34 140.44756980000068 12.392 85.26769589999931 10.191 66.85707620000031 8.351 71.12544129999924 10.499 112.1104298000001 11.15 122.72657579999988 10.479 82.30423449999968 11.403)
Error minima by case: (0.0595 8 4.7266 10 1.0503 8 0.1535 7 2.4128 9 1.2944 8 0.8296 8 0.8706 8 0.9794 9 0.4076 7 0.5834 8 0.4376 9 38.8074 9 22.9622 8 0.3145 7 19.6667 8 0.5442 8 27.4067 9 0.3072 9 0.1155 8 1.7282 6 1.9147 8 0.7078 8 1.9457 9 4.7337 8)
Average genome size in population (length): 36.165
Average program size in population (points): 37.165
Average percent parens in population: 0.028
Minimum age in population: 13.82421875
Maximum age in population: 18.1484375
Average age in population: 16.179400390625
Median age in population: 16.25439453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 172
Genome diversity (% unique Plush genomes):	 0.532
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 172
Syntactic diversity (% unique Push programs):	 0.532
Total error diversity:				 0.097
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 13551151
--- Timings ---
Current time: 1529615480372 milliseconds
Total Time:          41.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.2 seconds, 43.9%
Fitness Testing:     18.6 seconds, 44.9%
Report:               4.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 61919.44400000006
Test mean error for best: 30.95972
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071
Correct output: -121.4181188828 | Program output: -88.1703698071
Correct output: -53.9537020847 | Program output: -48.1703698071
Correct output: -21.056824064  | Program output: 17.8296301929 
Correct output: -40.4128479382 | Program output: -55.1703698071
Correct output: 22.7056098644  | Program output: 6.8296301929  
Correct output: -85.4764811006 | Program output: -35.1703698071
Correct output: -58.7739403885 | Program output: -53.1703698071
Correct output: -21.8827499602 | Program output: -108.1703698071
Correct output: 8.9928003199   | Program output: 39.8296301929 
Correct output: 2.9498640059   | Program output: -83.1703698071
Correct output: 8.0227633312   | Program output: 25.8296301929 
Correct output: 88.8073730558  | Program output: 30.8296301929 
Correct output: -51.6951995134 | Program output: 6.8296301929  
Correct output: 16.8558496317  | Program output: 7.8296301929  
Correct output: -54.5019943507 | Program output: 3.8296301929  
Correct output: 28.7886817369  | Program output: 36.8296301929 
Correct output: 119.4066893742 | Program output: 72.8296301929 
Correct output: -8.8924177576  | Program output: -106.1703698071
Correct output: -30.5760090362 | Program output: -3.1703698071 
Correct output: 59.8261519278  | Program output: 56.8296301929 
Correct output: -107.9873881437 | Program output: -111.1703698071
Correct output: 6.8774260757   | Program output: 66.8296301929 
Correct output: 23.2088987026  | Program output: -53.1703698071
Correct output: 71.7336904838  | Program output: 47.8296301929 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction float_min} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction -76} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_dup})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float float_min float_dup integer_div float_yank integer_max float_stackdepth integer_rot float_dup_times integer_mult integer_stackdepth integer_fromfloat float_inc integer_dec float_yank -76 float_yankdup integer_add integer_flush integer_dup)
Errors: [27.5806 9 33.2477 12 5.7833 10 38.8865 12 14.7575 11 15.876 11 50.3061 9 5.6036 9 86.2876 10 30.8368 9 86.1202 11 17.8069 9 57.9777 10 58.5248 12 9.0262 10 58.3316 13 8.0409 10 46.5771 12 97.278 12 27.4056 9 2.9965 6 3.183 11 59.9522 10 76.3793 9 23.9041 10]
Total: 1198.6698000000001
Mean: 23.973396
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2013.6680317000066
Median total errors in population: 1216.6698000000001
Error averages by case: (64.17558050000049 10.324 73.32321630000058 12.908 42.106677900000136 11.045 67.1623065000001 12.491 48.27002969999978 11.824 47.622700899999316 11.071 83.52800670000109 10.185 42.515581000000225 9.501 109.09299529999957 11.132 59.61294629999923 10.158 107.34036310000097 11.701 48.30848860000056 10.276 91.48881760000168 11.031 87.05696979999948 12.012 41.22006770000009 10.832 87.14015210000055 12.709 42.25199750000001 10.949 86.33332779999958 12.688 117.51681310000131 12.709 57.992071999999155 9.487 42.27855410000045 7.181 46.404923299999695 11.197 84.55241109999972 10.927 99.95518830000029 10.184 60.90884449999983 10.987)
Error minima by case: (10.4102 4 16.0774 5 1.0503 4 2.8865 4 2.4128 3 0.7378 3 0.8296 3 0.8706 4 3.7124 10 0.4076 8 0.5834 4 0.4376 8 40.8074 4 32.3899 4 0.2864 7 35.8041 4 0.5442 8 29.4067 4 0.3072 9 10.2353 4 1.6978 6 1.8842 4 0.7078 8 4.273 4 6.7337 3)
Average genome size in population (length): 38.34
Average program size in population (points): 39.34
Average percent parens in population: 0.026
Minimum age in population: 15.43603515625
Maximum age in population: 19.52734375
Average age in population: 17.6346708984375
Median age in population: 17.689453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 183
Genome diversity (% unique Plush genomes):	 0.525
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 183
Syntactic diversity (% unique Push programs):	 0.525
Total error diversity:				 0.09
Error (vector) diversity:			 0.091
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 14509651
--- Timings ---
Current time: 1529615483727 milliseconds
Total Time:          44.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.7 seconds, 43.9%
Fitness Testing:     20.1 seconds, 44.8%
Report:               4.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 61919.44400000006
Test mean error for best: 30.95972
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071
Correct output: -121.4181188828 | Program output: -88.1703698071
Correct output: -53.9537020847 | Program output: -48.1703698071
Correct output: -21.056824064  | Program output: 17.8296301929 
Correct output: -40.4128479382 | Program output: -55.1703698071
Correct output: 22.7056098644  | Program output: 6.8296301929  
Correct output: -85.4764811006 | Program output: -35.1703698071
Correct output: -58.7739403885 | Program output: -53.1703698071
Correct output: -21.8827499602 | Program output: -108.1703698071
Correct output: 8.9928003199   | Program output: 39.8296301929 
Correct output: 2.9498640059   | Program output: -83.1703698071
Correct output: 8.0227633312   | Program output: 25.8296301929 
Correct output: 88.8073730558  | Program output: 30.8296301929 
Correct output: -51.6951995134 | Program output: 6.8296301929  
Correct output: 16.8558496317  | Program output: 7.8296301929  
Correct output: -54.5019943507 | Program output: 3.8296301929  
Correct output: 28.7886817369  | Program output: 36.8296301929 
Correct output: 119.4066893742 | Program output: 72.8296301929 
Correct output: -8.8924177576  | Program output: -106.1703698071
Correct output: -30.5760090362 | Program output: -3.1703698071 
Correct output: 59.8261519278  | Program output: 56.8296301929 
Correct output: -107.9873881437 | Program output: -111.1703698071
Correct output: 6.8774260757   | Program output: 66.8296301929 
Correct output: 23.2088987026  | Program output: -53.1703698071
Correct output: 71.7336904838  | Program output: 47.8296301929 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction float_mult} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction integer_dup} {:instruction float_sin} {:instruction integer_flush} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub 7.585184903564809 integer_yank float_inc float_sub in2 print_float float_mult float_dup integer_div float_yank integer_max float_stackdepth integer_rot integer_dup float_sin integer_flush integer_sub -29)
Errors: [27.5806 9 33.2477 12 5.7833 10 38.8865 12 14.7575 11 15.876 11 50.3061 9 5.6036 9 86.2876 10 30.8368 9 86.1202 11 17.8069 9 57.9777 10 58.5248 12 9.0262 10 58.3316 13 8.0409 10 46.5771 12 97.278 12 27.4056 9 2.9965 6 3.183 11 59.9522 10 76.3793 9 23.9041 10]
Total: 1198.6698000000001
Mean: 23.973396
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2659.4638840000034
Median total errors in population: 1216.6698000000001
Error averages by case: (89.93291350000061 10.232 98.10627090000146 12.632 68.86046930000036 10.815 93.52172999999868 12.13 75.31756940000052 11.518 73.87733989999931 11.145 109.14728800000104 9.94 69.15175590000071 9.686 136.14800849999946 10.975 85.8817800000004 9.954 134.3804527000016 11.288 74.64529200000061 10.068 115.81048430000206 10.729 112.76838899999953 12.075 67.62739409999969 10.563 112.80897420000124 12.616 68.3752944000006 10.667 109.75871289999903 12.355 144.6380162000006 12.424 84.29447359999902 9.655 67.69064330000029 7.325 71.93027429999955 11.258 110.76292009999973 10.625 126.85183460000032 9.954 85.80460289999988 10.742)
Error minima by case: (0.0595 9 5.7266 10 2.8019 8 1.2272 6 2.4128 8 0.2944 8 0.8296 7 2.9816 9 4.7124 9 0.4076 8 0.5834 8 0.4376 8 9.9777 8 21.8042 8 0.2864 7 24.611 8 0.5442 8 29.4067 7 0.3072 9 0.1155 8 0.9965 6 1.183 8 0.7078 8 6.0385 9 6.7337 9)
Average genome size in population (length): 39.723
Average program size in population (points): 40.723
Average percent parens in population: 0.025
Minimum age in population: 16.568359375
Maximum age in population: 20.99462890625
Average age in population: 19.16988012695312
Median age in population: 19.21630859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 65
Genome diversity (% unique Plush genomes):	 0.595
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 65
Syntactic diversity (% unique Push programs):	 0.595
Total error diversity:				 0.088
Error (vector) diversity:			 0.092
Behavioral diversity:				 0.095
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 15502726
--- Timings ---
Current time: 1529615487049 milliseconds
Total Time:          48.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.1 seconds, 43.8%
Fitness Testing:     21.6 seconds, 44.9%
Report:               5.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 61919.44400000006
Test mean error for best: 30.95972
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1703698071
Correct output: -121.4181188828 | Program output: -88.1703698071
Correct output: -53.9537020847 | Program output: -48.1703698071
Correct output: -21.056824064  | Program output: 17.8296301929 
Correct output: -40.4128479382 | Program output: -55.1703698071
Correct output: 22.7056098644  | Program output: 6.8296301929  
Correct output: -85.4764811006 | Program output: -35.1703698071
Correct output: -58.7739403885 | Program output: -53.1703698071
Correct output: -21.8827499602 | Program output: -108.1703698071
Correct output: 8.9928003199   | Program output: 39.8296301929 
Correct output: 2.9498640059   | Program output: -83.1703698071
Correct output: 8.0227633312   | Program output: 25.8296301929 
Correct output: 88.8073730558  | Program output: 30.8296301929 
Correct output: -51.6951995134 | Program output: 6.8296301929  
Correct output: 16.8558496317  | Program output: 7.8296301929  
Correct output: -54.5019943507 | Program output: 3.8296301929  
Correct output: 28.7886817369  | Program output: 36.8296301929 
Correct output: 119.4066893742 | Program output: 72.8296301929 
Correct output: -8.8924177576  | Program output: -106.1703698071
Correct output: -30.5760090362 | Program output: -3.1703698071 
Correct output: 59.8261519278  | Program output: 56.8296301929 
Correct output: -107.9873881437 | Program output: -111.1703698071
Correct output: 6.8774260757   | Program output: 66.8296301929 
Correct output: 23.2088987026  | Program output: -53.1703698071
Correct output: 71.7336904838  | Program output: 47.8296301929 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction float_min} {:instruction float_dup} {:instruction integer_div} {:instruction float_yank} {:instruction integer_max} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_dec} {:instruction float_yank} {:instruction -76} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_flush} {:instruction integer_dup})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub in2 print_float float_min float_dup integer_div float_yank integer_max float_stackdepth integer_rot float_dup_times integer_mult integer_stackdepth integer_fromfloat float_inc integer_dec float_yank -76 float_yankdup integer_add integer_flush integer_dup)
Errors: [27.5806 9 33.2477 12 5.7833 10 38.8865 12 14.7575 11 15.876 11 50.3061 9 5.6036 9 86.2876 10 30.8368 9 86.1202 11 17.8069 9 57.9777 10 58.5248 12 9.0262 10 58.3316 13 8.0409 10 46.5771 12 97.278 12 27.4056 9 2.9965 6 3.183 11 59.9522 10 76.3793 9 23.9041 10]
Total: 1198.6698000000001
Mean: 23.973396
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2306.699246500005
Median total errors in population: 1198.6698000000001
Error averages by case: (75.93105410000061 9.579 84.01330430000098 12.17 54.382026200000595 10.346 80.78027019999939 11.729 60.52293609999975 11.082 59.63263609999879 11.025 95.16440020000111 9.424 54.63097200000062 9.514 122.54871409999902 10.361 73.06702469999925 9.383 121.12806500000165 10.986 61.56002200000116 9.513 102.41305850000182 10.308 100.0426981999995 11.963 53.32147850000011 10.133 99.95531100000092 12.736 54.6973931 10.229 95.59239129999933 12.007 131.4376888000019 11.946 70.60567629999899 9.499 53.092501300000606 7.053 56.64158389999911 11.076 98.54265239999974 10.194 113.42503360000026 9.439 71.56235459999976 10.313)
Error minima by case: (18.9954 9 24.6626 10 2.4168 9 1.2272 8 2.4128 9 1.2944 8 41.7209 6 2.2371 9 1.3005 8 0.4076 8 0.5834 8 0.4376 8 8.7997 7 32.3899 8 0.441 6 35.8041 8 0.5442 7 28.4067 9 0.1089 8 13.3836 8 1.1447 6 0.2052 8 0.7078 7 4.273 8 5.7337 9)
Average genome size in population (length): 40.448
Average program size in population (points): 41.448
Average percent parens in population: 0.025
Minimum age in population: 18.2568359375
Maximum age in population: 22.50830078125
Average age in population: 20.61302111816406
Median age in population: 20.673828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 94
Genome diversity (% unique Plush genomes):	 0.53
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 94
Syntactic diversity (% unique Push programs):	 0.53
Total error diversity:				 0.078
Error (vector) diversity:			 0.079
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 16513926
--- Timings ---
Current time: 1529615490065 milliseconds
Total Time:          51.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.4 seconds, 43.8%
Fitness Testing:     23.0 seconds, 44.9%
Report:               5.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 61877.12730000001
Test mean error for best: 30.93856
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1842150632
Correct output: -121.4181188828 | Program output: -88.1842150632
Correct output: -53.9537020847 | Program output: -48.1842150632
Correct output: -21.056824064  | Program output: 17.8157849368 
Correct output: -40.4128479382 | Program output: -55.1842150632
Correct output: 22.7056098644  | Program output: 6.8157849368  
Correct output: -85.4764811006 | Program output: -35.1842150632
Correct output: -58.7739403885 | Program output: -53.1842150632
Correct output: -21.8827499602 | Program output: -108.1842150632
Correct output: 8.9928003199   | Program output: 39.8157849368 
Correct output: 2.9498640059   | Program output: -83.1842150632
Correct output: 8.0227633312   | Program output: 25.8157849368 
Correct output: 88.8073730558  | Program output: 30.8157849368 
Correct output: -51.6951995134 | Program output: 6.8157849368  
Correct output: 16.8558496317  | Program output: 7.8157849368  
Correct output: -54.5019943507 | Program output: 3.8157849368  
Correct output: 28.7886817369  | Program output: 36.8157849368 
Correct output: 119.4066893742 | Program output: 72.8157849368 
Correct output: -8.8924177576  | Program output: -106.1842150632
Correct output: -30.5760090362 | Program output: -3.1842150632 
Correct output: 59.8261519278  | Program output: 56.8157849368 
Correct output: -107.9873881437 | Program output: -111.1842150632
Correct output: 6.8774260757   | Program output: 66.8157849368 
Correct output: 23.2088987026  | Program output: -53.1842150632
Correct output: 71.7336904838  | Program output: 47.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.5668 12 33.2339 11 5.7695 11 38.8726 10 14.7714 10 15.8898 10 50.2923 9 5.5897 11 86.3015 10 30.823 11 86.1341 12 17.793 10 57.9916 10 58.511 12 9.0401 7 58.3178 11 8.0271 9 46.5909 11 97.2918 11 27.3918 9 3.0104 8 3.1968 10 59.9384 10 76.3931 11 23.9179 10]
Total: 1198.6562999999999
Mean: 23.973125
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2578.285978800005
Median total errors in population: 1198.6698000000001
Error averages by case: (87.90102030000075 9.663 96.42594140000156 12.257 66.60212330000068 10.475 90.64522679999887 11.816 72.63138770000047 11.19 68.79213299999908 11.127 106.40388660000121 9.523 66.94491910000076 9.608 133.27795699999908 10.482 83.08676480000028 9.447 131.42867580000177 11.112 71.84877880000074 9.609 113.11978550000187 10.416 108.31553079999956 12.013 62.64037740000014 10.18 108.1938121000011 12.788 65.74124640000004 10.314 107.58840429999897 12.105 141.72153950000111 12.037 80.67390419999894 9.57 65.06878910000073 7.181 69.97841189999941 11.211 107.90908749999974 10.307 123.83095150000024 9.542 83.1523239999997 10.39)
Error minima by case: (0.0595 8 5.7266 9 2.8019 9 2.9828 8 1.4488 9 0.3303 8 7.7556 7 2.9816 9 2.3005 9 0.4076 8 1.2622 9 0.4017 8 40.8074 8 31.0037 8 0.441 7 18.6667 8 0.5442 8 29.4067 9 0.3072 8 0.1155 8 0.9584 6 0.772 8 0.7078 8 4.273 8 6.7337 8)
Average genome size in population (length): 40.515
Average program size in population (points): 41.515
Average percent parens in population: 0.025
Minimum age in population: 19.5009765625
Maximum age in population: 24.18377685546875
Average age in population: 22.08015057373047
Median age in population: 22.13650512695312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 74
Genome diversity (% unique Plush genomes):	 0.628
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 74
Syntactic diversity (% unique Push programs):	 0.628
Total error diversity:				 0.083
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 17526801
--- Timings ---
Current time: 1529615493297 milliseconds
Total Time:          54.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.7 seconds, 43.5%
Fitness Testing:     24.6 seconds, 45.1%
Report:               6.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 61877.12730000001
Test mean error for best: 30.93856
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1842150632
Correct output: -121.4181188828 | Program output: -88.1842150632
Correct output: -53.9537020847 | Program output: -48.1842150632
Correct output: -21.056824064  | Program output: 17.8157849368 
Correct output: -40.4128479382 | Program output: -55.1842150632
Correct output: 22.7056098644  | Program output: 6.8157849368  
Correct output: -85.4764811006 | Program output: -35.1842150632
Correct output: -58.7739403885 | Program output: -53.1842150632
Correct output: -21.8827499602 | Program output: -108.1842150632
Correct output: 8.9928003199   | Program output: 39.8157849368 
Correct output: 2.9498640059   | Program output: -83.1842150632
Correct output: 8.0227633312   | Program output: 25.8157849368 
Correct output: 88.8073730558  | Program output: 30.8157849368 
Correct output: -51.6951995134 | Program output: 6.8157849368  
Correct output: 16.8558496317  | Program output: 7.8157849368  
Correct output: -54.5019943507 | Program output: 3.8157849368  
Correct output: 28.7886817369  | Program output: 36.8157849368 
Correct output: 119.4066893742 | Program output: 72.8157849368 
Correct output: -8.8924177576  | Program output: -106.1842150632
Correct output: -30.5760090362 | Program output: -3.1842150632 
Correct output: 59.8261519278  | Program output: 56.8157849368 
Correct output: -107.9873881437 | Program output: -111.1842150632
Correct output: 6.8774260757   | Program output: 66.8157849368 
Correct output: 23.2088987026  | Program output: -53.1842150632
Correct output: 71.7336904838  | Program output: 47.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.5668 12 33.2339 11 5.7695 11 38.8726 10 14.7714 10 15.8898 10 50.2923 9 5.5897 11 86.3015 10 30.823 11 86.1341 12 17.793 10 57.9916 10 58.511 12 9.0401 7 58.3178 11 8.0271 9 46.5909 11 97.2918 11 27.3918 9 3.0104 8 3.1968 10 59.9384 10 76.3931 11 23.9179 10]
Total: 1198.6562999999999
Mean: 23.973125
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2723.6344311000053
Median total errors in population: 1198.6698000000001
Error averages by case: (93.72944440000079 9.658 101.73277950000212 12.257 72.72347750000024 10.467 96.04810829999826 11.819 78.82697310000104 11.188 76.2584153999995 11.116 112.37497340000125 9.538 72.98548020000099 9.604 138.46135719999978 10.465 88.50351230000027 9.442 137.05261780000203 11.098 77.5359339000004 9.577 118.51997410000199 10.395 114.87502629999952 12.027 70.04367559999952 10.225 114.80907600000141 12.794 71.3143369000006 10.328 112.41152739999869 12.072 146.89391960000086 12.033 87.26170779999887 9.58 70.44574230000015 7.184 75.22331989999977 11.216 112.78991229999971 10.281 130.04014540000023 9.533 88.50399449999966 10.372)
Error minima by case: (5.4273 9 16.0774 10 1.8019 9 1.2272 8 2.4128 8 1.2944 8 0.8296 8 1.9816 9 3.718 9 0.358 8 1.9499 8 0.4376 8 21.8714 8 1.6939 9 0.441 7 4.5007 6 0.4558 8 10.4707 9 0.2934 7 10.2353 7 0.9965 6 1.183 8 0.4422 8 13.8581 7 2.9664 8)
Average genome size in population (length): 39.964
Average program size in population (points): 40.964
Average percent parens in population: 0.025
Minimum age in population: 20.844482421875
Maximum age in population: 25.97653198242188
Average age in population: 23.53572735595703
Median age in population: 23.60218811035156
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.075
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 18525901
--- Timings ---
Current time: 1529615496588 milliseconds
Total Time:          57.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.1 seconds, 43.4%
Fitness Testing:     26.2 seconds, 45.3%
Report:               6.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 61877.12730000001
Test mean error for best: 30.93856
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1842150632
Correct output: -121.4181188828 | Program output: -88.1842150632
Correct output: -53.9537020847 | Program output: -48.1842150632
Correct output: -21.056824064  | Program output: 17.8157849368 
Correct output: -40.4128479382 | Program output: -55.1842150632
Correct output: 22.7056098644  | Program output: 6.8157849368  
Correct output: -85.4764811006 | Program output: -35.1842150632
Correct output: -58.7739403885 | Program output: -53.1842150632
Correct output: -21.8827499602 | Program output: -108.1842150632
Correct output: 8.9928003199   | Program output: 39.8157849368 
Correct output: 2.9498640059   | Program output: -83.1842150632
Correct output: 8.0227633312   | Program output: 25.8157849368 
Correct output: 88.8073730558  | Program output: 30.8157849368 
Correct output: -51.6951995134 | Program output: 6.8157849368  
Correct output: 16.8558496317  | Program output: 7.8157849368  
Correct output: -54.5019943507 | Program output: 3.8157849368  
Correct output: 28.7886817369  | Program output: 36.8157849368 
Correct output: 119.4066893742 | Program output: 72.8157849368 
Correct output: -8.8924177576  | Program output: -106.1842150632
Correct output: -30.5760090362 | Program output: -3.1842150632 
Correct output: 59.8261519278  | Program output: 56.8157849368 
Correct output: -107.9873881437 | Program output: -111.1842150632
Correct output: 6.8774260757   | Program output: 66.8157849368 
Correct output: 23.2088987026  | Program output: -53.1842150632
Correct output: 71.7336904838  | Program output: 47.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.5668 12 33.2339 11 5.7695 11 38.8726 10 14.7714 10 15.8898 10 50.2923 9 5.5897 11 86.3015 10 30.823 11 86.1341 12 17.793 10 57.9916 10 58.511 12 9.0401 7 58.3178 11 8.0271 9 46.5909 11 97.2918 11 27.3918 9 3.0104 8 3.1968 10 59.9384 10 76.3931 11 23.9179 10]
Total: 1198.6562999999999
Mean: 23.973125
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2539.170003300004
Median total errors in population: 1198.6698000000001
Error averages by case: (86.41917820000076 9.668 95.40839560000188 12.213 65.05430410000089 10.425 87.72112219999883 11.744 71.18504740000067 11.14 68.03032489999897 11.055 105.27263030000125 9.528 65.4787605000009 9.615 131.59853149999893 10.444 80.58952750000003 9.449 129.68542750000194 11.09 69.45668730000068 9.607 111.80224110000182 10.379 106.4773507999995 11.955 61.805868600000125 10.086 106.52680240000144 12.685 63.68526189999994 10.276 107.05083339999874 12.008 139.9496759000013 11.961 79.87421759999897 9.563 63.89891070000062 7.273 69.42498969999949 11.17 105.17569129999977 10.249 122.14578880000026 9.566 81.95043409999965 10.353)
Error minima by case: (0.9405 9 4.7266 10 2.8019 9 2.0711 8 2.4128 8 1.2944 8 8.1613 8 2.9816 8 3.718 9 0.4076 8 1.9499 9 0.4376 8 39.8074 8 0.0574 7 0.3145 7 0.1358 8 0.2676 8 28.4067 10 0.3072 8 1.1155 8 1.1447 6 0.2052 8 0.7078 7 4.273 8 5.7337 9)
Average genome size in population (length): 39.849
Average program size in population (points): 40.849
Average percent parens in population: 0.025
Minimum age in population: 21.844482421875
Maximum age in population: 26.87181091308594
Average age in population: 24.95047583007812
Median age in population: 24.99311828613281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.085
Error (vector) diversity:			 0.087
Behavioral diversity:				 0.087
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 19522126
--- Timings ---
Current time: 1529615499593 milliseconds
Total Time:          60.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.4 seconds, 43.5%
Fitness Testing:     27.5 seconds, 45.3%
Report:               6.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 61877.12730000001
Test mean error for best: 30.93856
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1842150632
Correct output: -121.4181188828 | Program output: -88.1842150632
Correct output: -53.9537020847 | Program output: -48.1842150632
Correct output: -21.056824064  | Program output: 17.8157849368 
Correct output: -40.4128479382 | Program output: -55.1842150632
Correct output: 22.7056098644  | Program output: 6.8157849368  
Correct output: -85.4764811006 | Program output: -35.1842150632
Correct output: -58.7739403885 | Program output: -53.1842150632
Correct output: -21.8827499602 | Program output: -108.1842150632
Correct output: 8.9928003199   | Program output: 39.8157849368 
Correct output: 2.9498640059   | Program output: -83.1842150632
Correct output: 8.0227633312   | Program output: 25.8157849368 
Correct output: 88.8073730558  | Program output: 30.8157849368 
Correct output: -51.6951995134 | Program output: 6.8157849368  
Correct output: 16.8558496317  | Program output: 7.8157849368  
Correct output: -54.5019943507 | Program output: 3.8157849368  
Correct output: 28.7886817369  | Program output: 36.8157849368 
Correct output: 119.4066893742 | Program output: 72.8157849368 
Correct output: -8.8924177576  | Program output: -106.1842150632
Correct output: -30.5760090362 | Program output: -3.1842150632 
Correct output: 59.8261519278  | Program output: 56.8157849368 
Correct output: -107.9873881437 | Program output: -111.1842150632
Correct output: 6.8774260757   | Program output: 66.8157849368 
Correct output: 23.2088987026  | Program output: -53.1842150632
Correct output: 71.7336904838  | Program output: 47.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.5668 12 33.2339 11 5.7695 11 38.8726 10 14.7714 10 15.8898 10 50.2923 9 5.5897 11 86.3015 10 30.823 11 86.1341 12 17.793 10 57.9916 10 58.511 12 9.0401 7 58.3178 11 8.0271 9 46.5909 11 97.2918 11 27.3918 9 3.0104 8 3.1968 10 59.9384 10 76.3931 11 23.9179 10]
Total: 1198.6562999999999
Mean: 23.973125
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2353.319028800005
Median total errors in population: 1198.6698000000001
Error averages by case: (79.23793120000069 9.898 88.38977750000151 12.067 57.55848070000069 10.508 80.95258519999942 11.531 63.43483619999963 10.989 60.62933019999881 10.972 97.7565027000012 9.448 57.97982530000048 9.74 123.60878049999928 10.402 73.37472539999959 9.619 121.54862450000138 11.145 62.14816700000086 9.669 104.74622670000134 10.332 100.09626939999953 11.94 54.31988229999999 9.835 100.08285610000104 12.506 56.38340559999992 10.172 100.01810579999905 11.913 131.87347680000175 11.854 71.13376649999897 9.492 56.46046220000054 7.37 61.85483619999912 11.024 98.12919759999966 10.26 114.19009200000025 9.674 74.72688519999974 10.324)
Error minima by case: (0.9405 1 4.7266 3 2.8019 2 0.4988 2 4.7595 2 2.0141 8 0.8296 2 2.9816 2 2.3005 9 0.3938 7 1.9499 2 0.4237 9 38.6299 2 18.8954 2 0.441 6 16.0886 2 0.5442 8 36.9919 2 0.3072 8 1.1155 2 1.9965 6 2.183 2 0.2922 8 4.3122 2 14.3189 2)
Average genome size in population (length): 38.621
Average program size in population (points): 39.621
Average percent parens in population: 0.026
Minimum age in population: 23.826904296875
Maximum age in population: 28.79795837402344
Average age in population: 26.40115727233887
Median age in population: 26.42285919189453
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 70
Genome diversity (% unique Plush genomes):	 0.679
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 70
Syntactic diversity (% unique Push programs):	 0.679
Total error diversity:				 0.087
Error (vector) diversity:			 0.088
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 20487651
--- Timings ---
Current time: 1529615502806 milliseconds
Total Time:          64.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.0 seconds, 43.7%
Fitness Testing:     28.9 seconds, 45.1%
Report:               7.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 61877.12730000001
Test mean error for best: 30.93856
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -57.1842150632
Correct output: -121.4181188828 | Program output: -88.1842150632
Correct output: -53.9537020847 | Program output: -48.1842150632
Correct output: -21.056824064  | Program output: 17.8157849368 
Correct output: -40.4128479382 | Program output: -55.1842150632
Correct output: 22.7056098644  | Program output: 6.8157849368  
Correct output: -85.4764811006 | Program output: -35.1842150632
Correct output: -58.7739403885 | Program output: -53.1842150632
Correct output: -21.8827499602 | Program output: -108.1842150632
Correct output: 8.9928003199   | Program output: 39.8157849368 
Correct output: 2.9498640059   | Program output: -83.1842150632
Correct output: 8.0227633312   | Program output: 25.8157849368 
Correct output: 88.8073730558  | Program output: 30.8157849368 
Correct output: -51.6951995134 | Program output: 6.8157849368  
Correct output: 16.8558496317  | Program output: 7.8157849368  
Correct output: -54.5019943507 | Program output: 3.8157849368  
Correct output: 28.7886817369  | Program output: 36.8157849368 
Correct output: 119.4066893742 | Program output: 72.8157849368 
Correct output: -8.8924177576  | Program output: -106.1842150632
Correct output: -30.5760090362 | Program output: -3.1842150632 
Correct output: 59.8261519278  | Program output: 56.8157849368 
Correct output: -107.9873881437 | Program output: -111.1842150632
Correct output: 6.8774260757   | Program output: 66.8157849368 
Correct output: 23.2088987026  | Program output: -53.1842150632
Correct output: 71.7336904838  | Program output: 47.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.5668 12 33.2339 11 5.7695 11 38.8726 10 14.7714 10 15.8898 10 50.2923 9 5.5897 11 86.3015 10 30.823 11 86.1341 12 17.793 10 57.9916 10 58.511 12 9.0401 7 58.3178 11 8.0271 9 46.5909 11 97.2918 11 27.3918 9 3.0104 8 3.1968 10 59.9384 10 76.3931 11 23.9179 10]
Total: 1198.6562999999999
Mean: 23.973125
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2489.851766800004
Median total errors in population: 1198.6698000000001
Error averages by case: (83.84612540000049 10.89 92.45568150000146 11.766 62.444456100000444 10.826 86.64540649999995 10.951 68.65304909999979 10.671 67.1384898999993 10.673 102.94405500000092 9.488 62.78399029999985 10.371 129.26245260000013 10.412 79.3476583 10.264 127.4750983000003 11.458 68.07134660000011 9.919 109.71428220000024 10.275 106.1062551999993 12.013 60.83225209999958 8.888 106.16444240000096 11.899 61.95059209999969 9.87 103.95012019999905 11.596 137.66397060000162 11.503 78.43932649999903 9.496 61.168134099999996 7.915 65.94764829999964 10.745 104.24859549999954 10.241 120.2839608000005 10.319 79.54437719999997 10.321)
Error minima by case: (0.9544 8 2.8724 7 1.8295 7 2.7663 8 0.4128 8 1.2517 8 0.8158 8 2.0093 9 4.7124 9 0.3938 7 1.9499 8 0.4237 9 41.663 9 15.0879 8 0.441 7 12.2811 8 0.4281 8 31.3714 9 0.3072 8 1.1293 8 0.9584 6 0.772 8 0.7078 9 4.2868 8 8.7247 8)
Average genome size in population (length): 33.83
Average program size in population (points): 34.83
Average percent parens in population: 0.030
Minimum age in population: 25.46311950683594
Maximum age in population: 29.99249267578125
Average age in population: 27.85810470199585
Median age in population: 27.89926719665527
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 246
Genome diversity (% unique Plush genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 246
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.086
Error (vector) diversity:			 0.088
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 21333401
--- Timings ---
Current time: 1529615505921 milliseconds
Total Time:          67.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.4 seconds, 43.9%
Fitness Testing:     30.2 seconds, 45.0%
Report:               7.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 62087.195100000004
Test mean error for best: 31.04360
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -58.1842150632
Correct output: -121.4181188828 | Program output: -89.1842150632
Correct output: -53.9537020847 | Program output: -49.1842150632
Correct output: -21.056824064  | Program output: 16.8157849368 
Correct output: -40.4128479382 | Program output: -56.1842150632
Correct output: 22.7056098644  | Program output: 5.8157849368  
Correct output: -85.4764811006 | Program output: -36.1842150632
Correct output: -58.7739403885 | Program output: -54.1842150632
Correct output: -21.8827499602 | Program output: -109.1842150632
Correct output: 8.9928003199   | Program output: 38.8157849368 
Correct output: 2.9498640059   | Program output: -84.1842150632
Correct output: 8.0227633312   | Program output: 24.8157849368 
Correct output: 88.8073730558  | Program output: 29.8157849368 
Correct output: -51.6951995134 | Program output: 5.8157849368  
Correct output: 16.8558496317  | Program output: 6.8157849368  
Correct output: -54.5019943507 | Program output: 2.8157849368  
Correct output: 28.7886817369  | Program output: 35.8157849368 
Correct output: 119.4066893742 | Program output: 71.8157849368 
Correct output: -8.8924177576  | Program output: -107.1842150632
Correct output: -30.5760090362 | Program output: -4.1842150632 
Correct output: 59.8261519278  | Program output: 55.8157849368 
Correct output: -107.9873881437 | Program output: -112.1842150632
Correct output: 6.8774260757   | Program output: 65.8157849368 
Correct output: 23.2088987026  | Program output: -54.1842150632
Correct output: 71.7336904838  | Program output: 46.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [26.5668 12 32.2339 11 4.7695 11 37.8726 10 15.7714 10 16.8898 10 49.2923 10 4.5897 11 87.3015 10 29.823 10 87.1341 12 16.793 10 58.9916 10 57.511 11 10.0401 6 57.3178 11 7.0271 9 47.5909 10 98.2918 11 26.3918 10 4.0104 8 4.1968 10 58.9384 10 77.3931 12 24.9179 10]
Total: 1196.6562999999999
Mean: 23.933126
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2087.860766900003
Median total errors in population: 1198.6562999999999
Error averages by case: (68.41080310000022 11.93 77.6189682000005 11.276 46.491620800000284 11.075 70.59220380000068 10.13 52.42917319999934 10.186 51.31740479999924 10.286 87.53309000000056 9.366 46.914914099999436 10.996 111.73740470000088 10.296 62.874157699998904 10.93 109.67069899999883 11.695 51.795922899999454 10.217 94.9229167999991 10.141 90.58148519999929 11.922 44.97678289999937 7.728 90.73210450000043 11.013 45.984867199999634 9.423 89.72299689999952 11.155 119.83566390000186 10.941 61.87367129999931 9.37 46.0031938999995 8.594 50.9548099999995 10.263 87.42016489999948 10.201 102.64613040000062 10.948 64.4956167000002 10.242)
Error minima by case: (0.9544 1 4.7128 3 1.8157 2 1.241 2 2.4128 2 0.0499 8 0.8158 2 1.9955 2 2.9507 7 0.3938 7 1.8659 2 0.4237 9 39.8074 2 18.489 2 0.441 6 15.6822 2 0.4281 8 28.4067 2 0.2934 7 1.1293 2 1.6718 6 1.8583 2 0.7078 8 3.2868 2 5.7337 2)
Average genome size in population (length): 28.623
Average program size in population (points): 29.623
Average percent parens in population: 0.034
Minimum age in population: 27.24252319335938
Maximum age in population: 31.54915237426758
Average age in population: 29.35390660095215
Median age in population: 29.38275051116943
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 387
Genome diversity (% unique Plush genomes):	 0.394
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 387
Syntactic diversity (% unique Push programs):	 0.394
Total error diversity:				 0.072
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 22048976
--- Timings ---
Current time: 1529615509053 milliseconds
Total Time:          70.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.8 seconds, 43.9%
Fitness Testing:     31.5 seconds, 44.9%
Report:               7.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 61916.561099999904
Test mean error for best: 30.95828
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -56.9836403381
Correct output: -121.4181188828 | Program output: -87.9836403381
Correct output: -53.9537020847 | Program output: -47.9836403381
Correct output: -21.056824064  | Program output: 18.0163596619 
Correct output: -40.4128479382 | Program output: -54.9836403381
Correct output: 22.7056098644  | Program output: 7.0163596619  
Correct output: -85.4764811006 | Program output: -34.9836403381
Correct output: -58.7739403885 | Program output: -52.9836403381
Correct output: -21.8827499602 | Program output: -107.9836403381
Correct output: 8.9928003199   | Program output: 40.0163596619 
Correct output: 2.9498640059   | Program output: -82.9836403381
Correct output: 8.0227633312   | Program output: 26.0163596619 
Correct output: 88.8073730558  | Program output: 31.0163596619 
Correct output: -51.6951995134 | Program output: 7.0163596619  
Correct output: 16.8558496317  | Program output: 8.0163596619  
Correct output: -54.5019943507 | Program output: 4.0163596619  
Correct output: 28.7886817369  | Program output: 37.0163596619 
Correct output: 119.4066893742 | Program output: 73.0163596619 
Correct output: -8.8924177576  | Program output: -105.9836403381
Correct output: -30.5760090362 | Program output: -2.9836403381 
Correct output: 59.8261519278  | Program output: 57.0163596619 
Correct output: -107.9873881437 | Program output: -110.9836403381
Correct output: 6.8774260757   | Program output: 67.0163596619 
Correct output: 23.2088987026  | Program output: -52.9836403381
Correct output: 71.7336904838  | Program output: 48.0163596619 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.384610178493296} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.384610178493296 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.7673 10 33.4345 12 5.9701 9 39.0732 10 14.5708 9 15.6893 9 50.4928 11 5.7903 6 86.1009 11 31.0236 11 85.9335 9 17.9936 10 57.791 11 58.7116 10 8.8395 9 58.5184 11 8.2277 10 46.3903 11 97.0912 12 27.5924 10 2.8098 9 2.9963 9 60.1389 11 76.1925 12 23.7173 11]
Total: 1195.8567999999998
Mean: 23.917135
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2474.930897800003
Median total errors in population: 1198.6562999999999
Error averages by case: (83.84425600000031 12.028 92.86726020000098 11.365 62.27871360000056 11.158 86.31298820000117 10.151 68.25940789999926 10.265 66.81396829999936 10.293 102.0755055000007 9.506 62.6972457999988 11.077 127.02162690000107 10.381 78.51234349999983 10.962 125.07288639999867 11.753 67.58148029999971 10.305 109.8896719999985 10.232 105.82292769999914 11.908 60.63313829999903 7.731 105.73877910000083 11.044 61.70891079999957 9.478 104.83507119999908 11.162 135.07003270000232 10.956 76.65003779999904 9.509 61.745276199999395 8.705 66.70974679999966 10.331 102.67070739999946 10.264 118.13354890000069 11.121 79.99436630000018 10.306)
Error minima by case: (8.5395 7 2.8724 10 1.8157 9 1.5406 7 2.4128 7 0.7341 8 0.8158 8 1.9955 6 2.2866 7 0.3938 7 1.9637 8 0.4237 9 9.9916 8 22.4047 7 0.2707 5 22.2115 8 0.3412 8 29.4067 9 0.2934 7 4.7928 8 0.9867 8 1.1731 8 0.7078 9 0.5605 8 2.1547 8)
Average genome size in population (length): 28.652
Average program size in population (points): 29.652
Average percent parens in population: 0.034
Minimum age in population: 28.47916793823242
Maximum age in population: 32.57482528686523
Average age in population: 30.7853608455658
Median age in population: 30.83828163146973
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 315
Genome diversity (% unique Plush genomes):	 0.453
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 315
Syntactic diversity (% unique Push programs):	 0.453
Total error diversity:				 0.08
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 22765276
--- Timings ---
Current time: 1529615511964 milliseconds
Total Time:          73.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.2 seconds, 44.0%
Fitness Testing:     32.8 seconds, 44.8%
Report:               8.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 61916.561099999904
Test mean error for best: 30.95828
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -56.9836403381
Correct output: -121.4181188828 | Program output: -87.9836403381
Correct output: -53.9537020847 | Program output: -47.9836403381
Correct output: -21.056824064  | Program output: 18.0163596619 
Correct output: -40.4128479382 | Program output: -54.9836403381
Correct output: 22.7056098644  | Program output: 7.0163596619  
Correct output: -85.4764811006 | Program output: -34.9836403381
Correct output: -58.7739403885 | Program output: -52.9836403381
Correct output: -21.8827499602 | Program output: -107.9836403381
Correct output: 8.9928003199   | Program output: 40.0163596619 
Correct output: 2.9498640059   | Program output: -82.9836403381
Correct output: 8.0227633312   | Program output: 26.0163596619 
Correct output: 88.8073730558  | Program output: 31.0163596619 
Correct output: -51.6951995134 | Program output: 7.0163596619  
Correct output: 16.8558496317  | Program output: 8.0163596619  
Correct output: -54.5019943507 | Program output: 4.0163596619  
Correct output: 28.7886817369  | Program output: 37.0163596619 
Correct output: 119.4066893742 | Program output: 73.0163596619 
Correct output: -8.8924177576  | Program output: -105.9836403381
Correct output: -30.5760090362 | Program output: -2.9836403381 
Correct output: 59.8261519278  | Program output: 57.0163596619 
Correct output: -107.9873881437 | Program output: -110.9836403381
Correct output: 6.8774260757   | Program output: 67.0163596619 
Correct output: 23.2088987026  | Program output: -52.9836403381
Correct output: 71.7336904838  | Program output: 48.0163596619 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.384610178493296} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.384610178493296 integer_yank float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [27.7673 10 33.4345 12 5.9701 9 39.0732 10 14.5708 9 15.6893 9 50.4928 11 5.7903 6 86.1009 11 31.0236 11 85.9335 9 17.9936 10 57.791 11 58.7116 10 8.8395 9 58.5184 11 8.2277 10 46.3903 11 97.0912 12 27.5924 10 2.8098 9 2.9963 9 60.1389 11 76.1925 12 23.7173 11]
Total: 1195.8567999999998
Mean: 23.917135
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2078.472708800002
Median total errors in population: 1198.6562999999999
Error averages by case: (67.67902870000023 11.914 76.65600590000034 11.334 45.76118640000017 11.075 70.27249250000078 10.121 52.02941569999957 10.189 50.9545314999996 10.214 87.08233460000059 9.604 46.13589349999948 10.977 111.28821750000098 10.315 62.78473869999899 10.79 109.78427849999896 11.699 51.63953199999963 10.25 95.01009409999911 10.193 89.77516699999916 11.681 44.588871299999276 7.601 89.92285590000036 10.969 45.67538589999969 9.483 89.18717659999957 10.945 119.55320640000183 10.924 61.54150199999933 9.578 45.70374999999954 8.709 50.07693709999972 10.225 87.32237439999943 10.264 103.25731270000065 11.25 64.26941990000022 10.217)
Error minima by case: (10.3825 7 16.0497 10 0.8157 9 1.2272 8 2.4128 7 1.2944 8 0.1842 8 0.9955 6 2.9926 8 0.3938 7 1.9637 8 0.4237 8 27.2806 9 17.6884 8 0.4549 6 14.8816 9 0.4419 8 15.8799 9 0.2934 7 6.7972 7 0.7517 7 0.5652 8 0.7078 8 4.2868 8 5.7337 7)
Average genome size in population (length): 28.928
Average program size in population (points): 29.928
Average percent parens in population: 0.034
Minimum age in population: 29.95905494689941
Maximum age in population: 34.14881563186646
Average age in population: 32.28966616916656
Median age in population: 32.31751322746277
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 213
Genome diversity (% unique Plush genomes):	 0.458
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 213
Syntactic diversity (% unique Push programs):	 0.458
Total error diversity:				 0.083
Error (vector) diversity:			 0.084
Behavioral diversity:				 0.084
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 23488476
--- Timings ---
Current time: 1529615514714 milliseconds
Total Time:          75.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.4 seconds, 44.0%
Fitness Testing:     34.0 seconds, 44.8%
Report:               8.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 62498.066700000025
Test mean error for best: 31.24903
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -60.1842150632
Correct output: -121.4181188828 | Program output: -91.1842150632
Correct output: -53.9537020847 | Program output: -51.1842150632
Correct output: -21.056824064  | Program output: 14.8157849368 
Correct output: -40.4128479382 | Program output: -58.1842150632
Correct output: 22.7056098644  | Program output: 3.8157849368  
Correct output: -85.4764811006 | Program output: -38.1842150632
Correct output: -58.7739403885 | Program output: -56.1842150632
Correct output: -21.8827499602 | Program output: -111.1842150632
Correct output: 8.9928003199   | Program output: 36.8157849368 
Correct output: 2.9498640059   | Program output: -86.1842150632
Correct output: 8.0227633312   | Program output: 22.8157849368 
Correct output: 88.8073730558  | Program output: 27.8157849368 
Correct output: -51.6951995134 | Program output: 3.8157849368  
Correct output: 16.8558496317  | Program output: 4.8157849368  
Correct output: -54.5019943507 | Program output: 0.8157849368  
Correct output: 28.7886817369  | Program output: 33.8157849368 
Correct output: 119.4066893742 | Program output: 69.8157849368 
Correct output: -8.8924177576  | Program output: -109.1842150632
Correct output: -30.5760090362 | Program output: -6.1842150632 
Correct output: 59.8261519278  | Program output: 53.8157849368 
Correct output: -107.9873881437 | Program output: -114.1842150632
Correct output: 6.8774260757   | Program output: 63.8157849368 
Correct output: 23.2088987026  | Program output: -56.1842150632
Correct output: 71.7336904838  | Program output: 44.8157849368 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction 7.5990301595915195} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank float_inc float_inc float_sub integer_stackdepth 7.5990301595915195 integer_yank float_inc float_inc integer_yank float_inc float_sub in2 print_float integer_sub -29)
Errors: [24.5668 12 30.2339 10 2.7695 10 35.8726 10 17.7714 10 18.8898 10 47.2923 10 2.5897 11 89.3015 9 27.823 11 89.1341 12 14.793 10 60.9916 10 55.511 12 12.0401 7 55.3178 11 5.0271 9 49.5909 10 100.2918 11 24.3918 10 6.0104 8 6.1968 10 56.9384 10 79.3931 12 26.9179 10]
Total: 1194.6562999999999
Mean: 23.893126
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2067.6037608000015
Median total errors in population: 1196.6562999999999
Error averages by case: (66.4957117000002 11.852 75.85918310000024 11.355 44.73308460000003 11.003 68.77948610000064 10.155 52.253873499999706 10.202 51.62117939999954 10.216 85.7074489000006 10.096 45.15564629999966 10.866 111.65559570000097 10.351 61.470457699999116 10.382 110.04369399999915 11.634 50.29394189999983 10.251 95.34939409999905 10.256 88.62063429999922 11.215 45.19237109999934 7.261 88.74020320000024 10.994 44.591480899999624 9.488 89.96927009999958 10.558 119.8537963000016 10.961 59.91144129999959 10.019 45.99039749999955 8.717 50.80028769999979 10.205 86.1276115999995 10.291 103.35029110000066 11.718 64.73327870000017 10.258)
Error minima by case: (0.0456 7 5.7128 7 0.8157 8 1.241 7 0.3865 7 0.2517 8 9.7077 8 0.6118 6 3.5925 8 0.3938 7 0.9637 8 0.4237 8 10.9916 8 6.467 8 0.441 6 3.6602 8 0.4281 8 30.4067 8 0.2934 7 0.1293 7 1.0104 8 1.1968 8 0.2922 8 4.2984 9 7.7337 7)
Average genome size in population (length): 29.475
Average program size in population (points): 30.475
Average percent parens in population: 0.033
Minimum age in population: 31.21685791015625
Maximum age in population: 35.6793897151947
Average age in population: 33.75937403941154
Median age in population: 33.79708862304688
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 111
Genome diversity (% unique Plush genomes):	 0.446
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 111
Syntactic diversity (% unique Push programs):	 0.446
Total error diversity:				 0.094
Error (vector) diversity:			 0.094
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 24225351
--- Timings ---
Current time: 1529615517856 milliseconds
Total Time:          79.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.8 seconds, 44.1%
Fitness Testing:     35.3 seconds, 44.7%
Report:               8.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 19257.20000000009
Test mean error for best: 9.62860
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -93.3361649017
Correct output: -121.4181188828 | Program output: -130.0033037864
Correct output: -53.9537020847 | Program output: -62.5388869883
Correct output: -21.056824064  | Program output: -29.6420089675
Correct output: -40.4128479382 | Program output: -48.9980328418
Correct output: 22.7056098644  | Program output: 14.1204249608 
Correct output: -85.4764811006 | Program output: -94.0616660042
Correct output: -58.7739403885 | Program output: -67.359125292 
Correct output: -21.8827499602 | Program output: -30.4679348638
Correct output: 8.9928003199   | Program output: 0.4076154163  
Correct output: 2.9498640059   | Program output: -5.6353208977 
Correct output: 8.0227633312   | Program output: -0.5624215723 
Correct output: 88.8073730558  | Program output: 80.2221881522 
Correct output: -51.6951995134 | Program output: -60.280384417 
Correct output: 16.8558496317  | Program output: 8.2706647281  
Correct output: -54.5019943507 | Program output: -63.0871792542
Correct output: 28.7886817369  | Program output: 20.2034968334 
Correct output: 119.4066893742 | Program output: 110.8215044707
Correct output: -8.8924177576  | Program output: -17.4776026612
Correct output: -30.5760090362 | Program output: -39.1611939397
Correct output: 59.8261519278  | Program output: 51.2409670242 
Correct output: -107.9873881437 | Program output: -116.5725730473
Correct output: 6.8774260757   | Program output: -1.7077588279 
Correct output: 23.2088987026  | Program output: 14.6237137991 
Correct output: 71.7336904838  | Program output: 63.1485055802 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [8.5852 11 8.5852 11 8.5852 10 8.5852 9 8.5852 10 8.5852 10 8.5852 10 8.5852 11 8.5852 11 8.5852 10 8.5852 12 8.5852 11 8.5852 10 8.5852 11 8.5852 11 8.5852 10 8.5852 10 8.5852 10 8.5852 12 8.5852 9 8.5852 10 8.5852 11 8.5852 10 8.5852 11 8.5852 11]
Total: 476.62999999999977
Mean: 9.5326
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2037.7776409000035
Median total errors in population: 1196.6562999999999
Error averages by case: (66.16898320000013 11.675 75.20640140000025 11.408 44.355675800000164 10.731 67.29927420000053 10.14 51.69506419999977 10.044 49.372915899999434 10.127 85.26618950000072 10.385 44.76025809999959 10.321 110.64680090000097 10.404 59.96533729999928 10.443 109.21691809999909 11.327 48.995944399999786 10.282 93.80806139999908 10.352 86.91472249999923 11.031 43.00558789999955 7.451 86.99347190000054 11.057 43.15911709999979 9.617 88.37912969999934 10.563 118.98851460000141 11.042 58.88215769999955 10.181 44.5097088999997 8.793 49.897578199999636 10.102 84.24807389999974 10.408 102.68053620000069 11.863 63.20021790000001 10.414)
Error minima by case: (0.9544 1 4.7128 3 1.8606 2 2.8726 2 2.4128 2 1.2944 8 0.1842 2 1.4777 2 1.1782 8 0.3938 7 1.212 2 0.3912 7 8.5852 2 5.6011 2 0.2405 6 2.7943 2 0.5719 8 8.5852 2 0.7066 8 1.1293 2 1.8098 8 1.9963 2 0.5072 8 4.0862 2 5.7337 2)
Average genome size in population (length): 29.658
Average program size in population (points): 30.658
Average percent parens in population: 0.033
Minimum age in population: 32.88107109069824
Maximum age in population: 37.31364321708679
Average age in population: 35.31006105160713
Median age in population: 35.37423801422119
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 114
Genome diversity (% unique Plush genomes):	 0.458
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 114
Syntactic diversity (% unique Push programs):	 0.458
Total error diversity:				 0.103
Error (vector) diversity:			 0.104
Behavioral diversity:				 0.104
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 24966801
--- Timings ---
Current time: 1529615520913 milliseconds
Total Time:          82.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.3 seconds, 44.3%
Fitness Testing:     36.6 seconds, 44.5%
Report:               9.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 19257.20000000009
Test mean error for best: 9.62860
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -93.3361649017
Correct output: -121.4181188828 | Program output: -130.0033037864
Correct output: -53.9537020847 | Program output: -62.5388869883
Correct output: -21.056824064  | Program output: -29.6420089675
Correct output: -40.4128479382 | Program output: -48.9980328418
Correct output: 22.7056098644  | Program output: 14.1204249608 
Correct output: -85.4764811006 | Program output: -94.0616660042
Correct output: -58.7739403885 | Program output: -67.359125292 
Correct output: -21.8827499602 | Program output: -30.4679348638
Correct output: 8.9928003199   | Program output: 0.4076154163  
Correct output: 2.9498640059   | Program output: -5.6353208977 
Correct output: 8.0227633312   | Program output: -0.5624215723 
Correct output: 88.8073730558  | Program output: 80.2221881522 
Correct output: -51.6951995134 | Program output: -60.280384417 
Correct output: 16.8558496317  | Program output: 8.2706647281  
Correct output: -54.5019943507 | Program output: -63.0871792542
Correct output: 28.7886817369  | Program output: 20.2034968334 
Correct output: 119.4066893742 | Program output: 110.8215044707
Correct output: -8.8924177576  | Program output: -17.4776026612
Correct output: -30.5760090362 | Program output: -39.1611939397
Correct output: 59.8261519278  | Program output: 51.2409670242 
Correct output: -107.9873881437 | Program output: -116.5725730473
Correct output: 6.8774260757   | Program output: -1.7077588279 
Correct output: 23.2088987026  | Program output: 14.6237137991 
Correct output: 71.7336904838  | Program output: 63.1485055802 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 float_frominteger float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [8.5852 11 8.5852 11 8.5852 10 8.5852 9 8.5852 10 8.5852 10 8.5852 10 8.5852 11 8.5852 11 8.5852 10 8.5852 12 8.5852 11 8.5852 10 8.5852 11 8.5852 11 8.5852 10 8.5852 10 8.5852 10 8.5852 12 8.5852 9 8.5852 10 8.5852 11 8.5852 10 8.5852 11 8.5852 11]
Total: 476.62999999999977
Mean: 9.5326
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2187.39146289999
Median total errors in population: 1195.8567999999998
Error averages by case: (71.53218010000016 11.275 80.3724046000007 11.541 49.96260879999991 10.091 73.61973870000021 10.177 57.65071990000002 9.892 56.270948499999356 9.921 90.85977760000111 10.537 50.31748969999984 9.429 116.86476660000119 10.296 66.24577339999944 10.836 115.38457969999912 10.81 55.129587500000206 10.241 99.39655319999903 10.26 93.28141049999925 11.092 49.89346249999959 8.206 93.41427760000042 11.083 49.199836899999994 9.758 93.65992569999949 10.952 125.18057440000068 10.953 65.68363649999985 10.199 50.38065249999991 8.924 55.288061499999706 9.955 90.80055599999996 10.514 108.65177610000067 11.912 68.95816439999976 10.538)
Error minima by case: (0.9544 2 4.7128 3 1.629 2 0.241 2 2.4128 2 1.2944 8 3.3199 2 1.5897 2 2.4305 9 0.3938 7 0.0634 2 0.4237 8 8.5852 2 8.5852 2 0.2405 6 8.5852 1 0.4281 7 8.5852 3 0.494 8 1.1293 2 0.621 6 0.4345 2 0.2922 8 5.0247 2 6.7337 1)
Average genome size in population (length): 30.206
Average program size in population (points): 31.206
Average percent parens in population: 0.033
Minimum age in population: 34.60925769805908
Maximum age in population: 38.79521381855011
Average age in population: 36.87656949317455
Median age in population: 36.93308675289154
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 196
Genome diversity (% unique Plush genomes):	 0.449
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 196
Syntactic diversity (% unique Push programs):	 0.449
Total error diversity:				 0.1
Error (vector) diversity:			 0.104
Behavioral diversity:				 0.105
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 25721951
--- Timings ---
Current time: 1529615523878 milliseconds
Total Time:          85.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.8 seconds, 44.4%
Fitness Testing:     37.8 seconds, 44.4%
Report:               9.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 19257.20000000009
Test mean error for best: 9.62860
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -93.3361649017
Correct output: -121.4181188828 | Program output: -130.0033037864
Correct output: -53.9537020847 | Program output: -62.5388869883
Correct output: -21.056824064  | Program output: -29.6420089675
Correct output: -40.4128479382 | Program output: -48.9980328418
Correct output: 22.7056098644  | Program output: 14.1204249608 
Correct output: -85.4764811006 | Program output: -94.0616660042
Correct output: -58.7739403885 | Program output: -67.359125292 
Correct output: -21.8827499602 | Program output: -30.4679348638
Correct output: 8.9928003199   | Program output: 0.4076154163  
Correct output: 2.9498640059   | Program output: -5.6353208977 
Correct output: 8.0227633312   | Program output: -0.5624215723 
Correct output: 88.8073730558  | Program output: 80.2221881522 
Correct output: -51.6951995134 | Program output: -60.280384417 
Correct output: 16.8558496317  | Program output: 8.2706647281  
Correct output: -54.5019943507 | Program output: -63.0871792542
Correct output: 28.7886817369  | Program output: 20.2034968334 
Correct output: 119.4066893742 | Program output: 110.8215044707
Correct output: -8.8924177576  | Program output: -17.4776026612
Correct output: -30.5760090362 | Program output: -39.1611939397
Correct output: 59.8261519278  | Program output: 51.2409670242 
Correct output: -107.9873881437 | Program output: -116.5725730473
Correct output: 6.8774260757   | Program output: -1.7077588279 
Correct output: 23.2088987026  | Program output: 14.6237137991 
Correct output: 71.7336904838  | Program output: 63.1485055802 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction 7.585184903564809} {:instruction integer_yank} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth 7.585184903564809 integer_yank in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [8.5852 11 8.5852 11 8.5852 10 8.5852 9 8.5852 10 8.5852 10 8.5852 10 8.5852 11 8.5852 11 8.5852 10 8.5852 12 8.5852 11 8.5852 10 8.5852 11 8.5852 11 8.5852 10 8.5852 10 8.5852 10 8.5852 12 8.5852 9 8.5852 10 8.5852 11 8.5852 10 8.5852 11 8.5852 11]
Total: 476.62999999999977
Mean: 9.5326
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2094.2243676000016
Median total errors in population: 1195.6562999999999
Error averages by case: (68.2445986000002 11.654 77.21401700000064 11.237 46.819369600000144 10.166 68.88566800000049 10.122 55.476701399999776 10.107 52.2969490999994 10.039 86.59743420000069 10.291 47.230289799999625 10.318 113.42362140000094 9.869 61.59425069999924 10.91 111.95013269999919 11.309 50.63483329999982 10.265 95.36910569999884 9.966 88.00744479999932 11.57 46.147113099999416 8.066 88.96519150000034 11.178 44.74453229999984 9.591 89.93468709999945 10.922 121.6151145000013 10.671 61.226701899999654 10.098 47.34409179999976 8.8 53.9685245999997 10.14 85.84711009999971 10.356 105.29484840000065 11.892 65.47003599999998 10.385)
Error minima by case: (1.9544 8 3.7128 9 0.9701 8 0.4444 7 0.4267 8 0.2944 8 0.1842 8 0.7903 6 1.5925 8 0.3938 7 0.9637 8 0.3618 8 8.5852 8 8.5852 8 0.1265 6 8.5852 8 0.5719 8 8.5852 8 0.2934 7 2.1293 7 0.0554 8 0.2419 8 0.2922 7 5.2253 8 6.7337 8)
Average genome size in population (length): 31.813
Average program size in population (points): 32.813
Average percent parens in population: 0.031
Minimum age in population: 36.03559505939484
Maximum age in population: 40.31463551521301
Average age in population: 38.49462965637445
Median age in population: 38.52686887979507
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.45
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.45
Total error diversity:				 0.124
Error (vector) diversity:			 0.129
Behavioral diversity:				 0.129
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 26517276
--- Timings ---
Current time: 1529615526828 milliseconds
Total Time:          88.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.2 seconds, 44.5%
Fitness Testing:     39.0 seconds, 44.4%
Report:               9.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 15768.879
Test mean error for best: 7.88444
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -86.868194929 
Correct output: -121.4181188828 | Program output: -125.495739286
Correct output: -53.9537020847 | Program output: -55.3953976527
Correct output: -21.056824064  | Program output: -22.5306387844
Correct output: -40.4128479382 | Program output: -41.1025382772
Correct output: 22.7056098644  | Program output: 23.8405065621 
Correct output: -85.4764811006 | Program output: -87.6137948129
Correct output: -58.7739403885 | Program output: -52.0234694828
Correct output: -21.8827499602 | Program output: -22.9893378323
Correct output: 8.9928003199   | Program output: 7.5081010931  
Correct output: 2.9498640059   | Program output: 1.9764245237  
Correct output: 8.0227633312   | Program output: 8.5211506701  
Correct output: 88.8073730558  | Program output: 86.6072458126 
Correct output: -51.6951995134 | Program output: -50.5603028157
Correct output: 16.8558496317  | Program output: 15.9893760387 
Correct output: -54.5019943507 | Program output: -53.974495823 
Correct output: 28.7886817369  | Program output: 27.1148816363 
Correct output: 119.4066893742 | Program output: 120.4018897864
Correct output: -8.8924177576  | Program output: -8.2065923871 
Correct output: -30.5760090362 | Program output: -38.8206156523
Correct output: 59.8261519278  | Program output: 64.5631744671 
Correct output: -107.9873881437 | Program output: -109.2403662405
Correct output: 6.8774260757   | Program output: 6.9556098808  
Correct output: 23.2088987026  | Program output: 29.9593696083 
Correct output: 71.7336904838  | Program output: 72.2037287415 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction integer_yank} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 float_frominteger float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth float_tan integer_yank in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [2.1172 9 4.0776 9 1.4417 8 1.4738 9 0.6897 9 1.1349 8 2.1373 9 6.7505 9 1.1066 10 1.4847 9 0.9734 9 0.4984 9 2.2001 9 1.1349 10 0.8665 9 0.5275 10 1.6738 7 0.9952 8 0.6858 9 8.2446 10 4.737 10 1.253 9 0.0782 10 6.7505 10 0.47 10]
Total: 281.5029
Mean: 5.630058
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2422.130475500009
Median total errors in population: 1193.8567999999998
Error averages by case: (81.93438140000058 11.106 90.9658151000011 11.363 61.91824200000001 9.934 82.42632430000015 10.104 69.47516080000007 9.884 66.7842534999993 9.784 98.87355380000143 10.309 62.396942899999765 9.188 123.07084230000126 10.477 75.69301760000003 10.831 121.25295009999924 10.636 65.40313710000021 10.34 106.66799839999896 10.561 100.23304869999934 11.079 61.097186199999875 8.807 100.27756250000074 11.341 60.06067720000046 9.933 102.62856329999936 10.837 130.5588780000003 11.331 75.1001248999995 9.879 63.01696830000034 9.239 69.78043389999968 10.037 98.40916370000036 10.616 114.58194130000084 11.825 79.3893082 10.693)
Error minima by case: (1.6674 2 4.0776 2 0.2305 1 0.8726 3 0.6897 2 0.2944 7 0.9419 2 0.4103 2 1.1066 8 0.3918 7 0.3196 2 0.3618 8 0.5936 3 1.1349 3 0.0662 5 0.5275 3 1.5719 7 0.9952 3 0.2934 7 7.5852 3 0.8775 7 0.5978 2 0.0782 7 2.2984 2 0.47 2)
Average genome size in population (length): 30.599
Average program size in population (points): 31.599
Average percent parens in population: 0.032
Minimum age in population: 37.19421243667603
Maximum age in population: 41.64427527785301
Average age in population: 40.05910052482784
Median age in population: 40.12790931761265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.485
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.485
Total error diversity:				 0.132
Error (vector) diversity:			 0.137
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 27282251
--- Timings ---
Current time: 1529615529924 milliseconds
Total Time:          91.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.7 seconds, 44.6%
Fitness Testing:     40.4 seconds, 44.3%
Report:              10.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 15768.879
Test mean error for best: 7.88444
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -86.868194929 
Correct output: -121.4181188828 | Program output: -125.495739286
Correct output: -53.9537020847 | Program output: -55.3953976527
Correct output: -21.056824064  | Program output: -22.5306387844
Correct output: -40.4128479382 | Program output: -41.1025382772
Correct output: 22.7056098644  | Program output: 23.8405065621 
Correct output: -85.4764811006 | Program output: -87.6137948129
Correct output: -58.7739403885 | Program output: -52.0234694828
Correct output: -21.8827499602 | Program output: -22.9893378323
Correct output: 8.9928003199   | Program output: 7.5081010931  
Correct output: 2.9498640059   | Program output: 1.9764245237  
Correct output: 8.0227633312   | Program output: 8.5211506701  
Correct output: 88.8073730558  | Program output: 86.6072458126 
Correct output: -51.6951995134 | Program output: -50.5603028157
Correct output: 16.8558496317  | Program output: 15.9893760387 
Correct output: -54.5019943507 | Program output: -53.974495823 
Correct output: 28.7886817369  | Program output: 27.1148816363 
Correct output: 119.4066893742 | Program output: 120.4018897864
Correct output: -8.8924177576  | Program output: -8.2065923871 
Correct output: -30.5760090362 | Program output: -38.8206156523
Correct output: 59.8261519278  | Program output: 64.5631744671 
Correct output: -107.9873881437 | Program output: -109.2403662405
Correct output: 6.8774260757   | Program output: 6.9556098808  
Correct output: 23.2088987026  | Program output: 29.9593696083 
Correct output: 71.7336904838  | Program output: 72.2037287415 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction integer_yank} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 float_frominteger float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth float_tan integer_yank in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [2.1172 9 4.0776 9 1.4417 8 1.4738 9 0.6897 9 1.1349 8 2.1373 9 6.7505 9 1.1066 10 1.4847 9 0.9734 9 0.4984 9 2.2001 9 1.1349 10 0.8665 9 0.5275 10 1.6738 7 0.9952 8 0.6858 9 8.2446 10 4.737 10 1.253 9 0.0782 10 6.7505 10 0.47 10]
Total: 281.5029
Mean: 5.630058
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2113.625896799992
Median total errors in population: 1193.6562999999999
Error averages by case: (73.72136200000043 11.017 80.65669600000065 11.23 59.94061700000021 9.977 71.03475220000036 9.78 64.01875690000035 9.977 58.73559219999991 9.821 84.0996786000008 10.318 60.43906040000021 9.8 96.82607960000078 10.729 65.11240410000015 10.5 95.83732230000004 10.971 59.411458800000446 10.606 86.59419389999987 10.51 83.20153890000016 10.964 55.10560910000012 9.59 83.21725470000047 10.881 54.858446800000436 10.044 85.75187180000013 10.662 101.80949810000047 11.539 65.4749731000004 9.708 58.60760340000046 9.641 67.02051270000005 10.412 80.88201920000031 10.486 90.76672480000049 11.543 69.04087020000016 10.755)
Error minima by case: (2.1172 1 4.0776 2 0.2305 1 0.1274 2 0.6897 2 0.2944 7 2.1373 2 0.4103 2 0.6985 7 0.3938 7 0.3196 2 0.3618 8 2.2001 2 1.1349 2 0.1265 6 0.5275 2 1.0078 7 0.9952 2 0.3206 8 7.5852 2 1.7892 7 1.253 2 0.0782 9 4.0247 2 0.47 2)
Average genome size in population (length): 30.118
Average program size in population (points): 31.118
Average percent parens in population: 0.033
Minimum age in population: 38.91491906344891
Maximum age in population: 43.42463578283787
Average age in population: 41.57115954238921
Median age in population: 41.60111619159579
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 131
Genome diversity (% unique Plush genomes):	 0.445
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 131
Syntactic diversity (% unique Push programs):	 0.445
Total error diversity:				 0.114
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 28035201
--- Timings ---
Current time: 1529615532815 milliseconds
Total Time:          94.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.0 seconds, 44.7%
Fitness Testing:     41.6 seconds, 44.2%
Report:              10.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 2128.0
Test mean error for best: 1.06400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -85.7509799981
Correct output: -121.4181188828 | Program output: -122.4181188828
Correct output: -53.9537020847 | Program output: -54.9537020847
Correct output: -21.056824064  | Program output: -22.056824064 
Correct output: -40.4128479382 | Program output: -41.4128479382
Correct output: 22.7056098644  | Program output: 21.7056098644 
Correct output: -85.4764811006 | Program output: -86.4764811006
Correct output: -58.7739403885 | Program output: -59.7739403885
Correct output: -21.8827499602 | Program output: -22.8827499602
Correct output: 8.9928003199   | Program output: 7.9928003199  
Correct output: 2.9498640059   | Program output: 1.9498640059  
Correct output: 8.0227633312   | Program output: 7.0227633312  
Correct output: 88.8073730558  | Program output: 87.8073730558 
Correct output: -51.6951995134 | Program output: -52.6951995134
Correct output: 16.8558496317  | Program output: 15.8558496317 
Correct output: -54.5019943507 | Program output: -55.5019943507
Correct output: 28.7886817369  | Program output: 27.7886817369 
Correct output: 119.4066893742 | Program output: 118.4066893742
Correct output: -8.8924177576  | Program output: -9.8924177576 
Correct output: -30.5760090362 | Program output: -31.5760090362
Correct output: 59.8261519278  | Program output: 58.8261519278 
Correct output: -107.9873881437 | Program output: -108.9873881437
Correct output: 6.8774260757   | Program output: 5.8774260757  
Correct output: 23.2088987026  | Program output: 22.2088987026 
Correct output: 71.7336904838  | Program output: 70.7336904838 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth float_frominteger integer_div in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 50.0
Mean: 1.0
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1437.015986800001
Median total errors in population: 476.62999999999977
Error averages by case: (50.18472820000061 10.924 54.234871900000705 10.844 44.99182900000055 10.093 46.9538713000005 9.263 42.857285600000644 10.025 39.659248100000525 10.098 52.37288780000071 10.099 45.613331000000585 10.767 47.32973370000056 10.832 44.489468600000684 10.092 48.02440540000065 11.528 42.44574410000062 10.87 50.75922760000069 10.184 51.31161120000063 10.851 38.756215300000434 10.671 51.25018970000068 10.241 40.62291750000054 10.025 53.09820110000061 10.209 49.22038940000055 11.572 45.35196580000071 9.399 43.58044530000064 10.072 49.49573330000059 10.892 49.042629200000725 10.236 47.971170900000644 10.971 45.90488580000061 10.735)
Error minima by case: (0.1172 1 1.0 1 0.2305 1 0.5262 1 0.6897 1 0.9009 1 0.1373 1 0.4103 1 0.8934 1 0.5153 1 0.9734 1 0.4376 1 0.2001 1 1.0 1 0.1265 1 0.5275 1 0.3262 1 0.9952 1 0.6858 1 1.0 1 1.0 1 0.747 1 0.0782 1 1.0 1 0.47 1)
Average genome size in population (length): 28.105
Average program size in population (points): 29.105
Average percent parens in population: 0.035
Minimum age in population: 40.92378607392311
Maximum age in population: 44.91987333074212
Average age in population: 43.12101969558746
Median age in population: 43.15748398937285
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 202
Genome diversity (% unique Plush genomes):	 0.394
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 202
Syntactic diversity (% unique Push programs):	 0.394
Total error diversity:				 0.088
Error (vector) diversity:			 0.089
Behavioral diversity:				 0.089
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 28737826
--- Timings ---
Current time: 1529615535757 milliseconds
Total Time:          97.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.5 seconds, 44.8%
Fitness Testing:     42.8 seconds, 44.1%
Report:              10.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 2128.0
Test mean error for best: 1.06400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -85.7509799981
Correct output: -121.4181188828 | Program output: -122.4181188828
Correct output: -53.9537020847 | Program output: -54.9537020847
Correct output: -21.056824064  | Program output: -22.056824064 
Correct output: -40.4128479382 | Program output: -41.4128479382
Correct output: 22.7056098644  | Program output: 21.7056098644 
Correct output: -85.4764811006 | Program output: -86.4764811006
Correct output: -58.7739403885 | Program output: -59.7739403885
Correct output: -21.8827499602 | Program output: -22.8827499602
Correct output: 8.9928003199   | Program output: 7.9928003199  
Correct output: 2.9498640059   | Program output: 1.9498640059  
Correct output: 8.0227633312   | Program output: 7.0227633312  
Correct output: 88.8073730558  | Program output: 87.8073730558 
Correct output: -51.6951995134 | Program output: -52.6951995134
Correct output: 16.8558496317  | Program output: 15.8558496317 
Correct output: -54.5019943507 | Program output: -55.5019943507
Correct output: 28.7886817369  | Program output: 27.7886817369 
Correct output: 119.4066893742 | Program output: 118.4066893742
Correct output: -8.8924177576  | Program output: -9.8924177576 
Correct output: -30.5760090362 | Program output: -31.5760090362
Correct output: 59.8261519278  | Program output: 58.8261519278 
Correct output: -107.9873881437 | Program output: -108.9873881437
Correct output: 6.8774260757   | Program output: 5.8774260757  
Correct output: 23.2088987026  | Program output: 22.2088987026 
Correct output: 71.7336904838  | Program output: 70.7336904838 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth float_frominteger integer_div in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 50.0
Mean: 1.0
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1604.6645159000018
Median total errors in population: 448.62999999999977
Error averages by case: (58.18083380000051 10.435 62.39381160000029 9.896 53.803478100000454 9.721 55.040293300000364 9.148 50.45209610000043 9.688 43.92813890000033 9.854 58.252528300000456 9.821 55.32792920000039 10.328 56.168976500000326 10.467 50.24392840000054 9.908 56.04658950000052 10.801 50.23170010000034 10.485 55.63553060000039 9.727 57.35935640000036 10.27 43.02551850000025 10.398 57.04625440000032 10.156 48.17222360000029 9.513 59.51791340000031 9.687 57.423333800000286 10.996 53.056767900000544 9.493 51.600763600000526 10.135 59.20246100000036 10.365 56.16640920000063 10.321 53.607557500000404 10.517 50.21812220000054 10.432)
Error minima by case: (0.1172 1 1.0 1 0.2777 1 0.4738 1 0.3103 1 0.1595 1 0.1373 1 1.0 1 0.1066 1 0.4847 1 0.0266 1 0.1291 1 0.2001 1 1.0 1 0.1265 1 0.5275 1 0.3262 1 0.9952 1 0.6858 1 1.0 1 0.7784 1 0.253 1 0.0782 1 1.0 1 0.47 1)
Average genome size in population (length): 27.912
Average program size in population (points): 28.912
Average percent parens in population: 0.035
Minimum age in population: 42.45240122079849
Maximum age in population: 46.3638470005244
Average age in population: 44.74323472658172
Median age in population: 44.78072066791356
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 130
Genome diversity (% unique Plush genomes):	 0.429
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 130
Syntactic diversity (% unique Push programs):	 0.429
Total error diversity:				 0.09
Error (vector) diversity:			 0.09
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 29435626
--- Timings ---
Current time: 1529615538756 milliseconds
Total Time:         100.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.9 seconds, 45.0%
Fitness Testing:     44.0 seconds, 44.0%
Report:              10.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 2128.0
Test mean error for best: 1.06400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -85.7509799981
Correct output: -121.4181188828 | Program output: -122.4181188828
Correct output: -53.9537020847 | Program output: -54.9537020847
Correct output: -21.056824064  | Program output: -22.056824064 
Correct output: -40.4128479382 | Program output: -41.4128479382
Correct output: 22.7056098644  | Program output: 21.7056098644 
Correct output: -85.4764811006 | Program output: -86.4764811006
Correct output: -58.7739403885 | Program output: -59.7739403885
Correct output: -21.8827499602 | Program output: -22.8827499602
Correct output: 8.9928003199   | Program output: 7.9928003199  
Correct output: 2.9498640059   | Program output: 1.9498640059  
Correct output: 8.0227633312   | Program output: 7.0227633312  
Correct output: 88.8073730558  | Program output: 87.8073730558 
Correct output: -51.6951995134 | Program output: -52.6951995134
Correct output: 16.8558496317  | Program output: 15.8558496317 
Correct output: -54.5019943507 | Program output: -55.5019943507
Correct output: 28.7886817369  | Program output: 27.7886817369 
Correct output: 119.4066893742 | Program output: 118.4066893742
Correct output: -8.8924177576  | Program output: -9.8924177576 
Correct output: -30.5760090362 | Program output: -31.5760090362
Correct output: 59.8261519278  | Program output: 58.8261519278 
Correct output: -107.9873881437 | Program output: -108.9873881437
Correct output: 6.8774260757   | Program output: 5.8774260757  
Correct output: 23.2088987026  | Program output: 22.2088987026 
Correct output: 71.7336904838  | Program output: 70.7336904838 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_frominteger} {:instruction in2} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger integer_div float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min integer_dup_times float_stackdepth float_yankdup integer_stackdepth float_frominteger in2 in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 50.0
Mean: 1.0
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1567.8338883000013
Median total errors in population: 281.5029
Error averages by case: (54.442939800000396 9.024 59.033841999999304 9.033 50.843140000000716 8.304 52.0577213 8.64 48.901120000000525 8.894 47.38892429999961 8.619 55.20338080000056 8.879 54.74606860000044 9.13 54.90563419999973 9.865 52.13506300000058 9.12 54.48074010000068 9.143 49.72747839999954 9.434 55.97513360000033 8.913 53.9361495999995 9.506 46.996990499999484 9.324 53.603516899999235 9.469 50.19655559999944 7.933 59.23791799999955 8.4 55.15556889999974 9.484 55.03008009999995 9.308 55.20193140000057 9.886 55.711596199999434 9.132 54.963217500001136 9.861 56.24155370000041 9.635 53.154623800000564 9.627)
Error minima by case: (0.1172 1 0.0489 1 0.1902 1 0.1902 1 0.1902 1 0.0944 1 0.1373 1 0.1839 1 0.1066 1 0.1898 1 0.0266 1 0.0087 1 0.1902 1 0.0944 1 0.1335 1 0.0089 1 0.1902 1 0.0048 1 0.0354 1 0.1902 1 0.0149 1 0.1902 1 0.0782 1 0.1902 1 0.0266 1)
Average genome size in population (length): 27.887
Average program size in population (points): 28.887
Average percent parens in population: 0.035
Minimum age in population: 43.62989885360003
Maximum age in population: 48.00162017531693
Average age in population: 46.16513165580761
Median age in population: 46.22267195535824
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 342
Genome diversity (% unique Plush genomes):	 0.392
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 342
Syntactic diversity (% unique Push programs):	 0.392
Total error diversity:				 0.087
Error (vector) diversity:			 0.088
Behavioral diversity:				 0.089
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 30132801
--- Timings ---
Current time: 1529615541761 milliseconds
Total Time:         103.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.3 seconds, 45.0%
Fitness Testing:     45.3 seconds, 44.0%
Report:              11.2 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 2128.0
Test mean error for best: 1.06400
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -85.7509799981
Correct output: -121.4181188828 | Program output: -122.4181188828
Correct output: -53.9537020847 | Program output: -54.9537020847
Correct output: -21.056824064  | Program output: -22.056824064 
Correct output: -40.4128479382 | Program output: -41.4128479382
Correct output: 22.7056098644  | Program output: 21.7056098644 
Correct output: -85.4764811006 | Program output: -86.4764811006
Correct output: -58.7739403885 | Program output: -59.7739403885
Correct output: -21.8827499602 | Program output: -22.8827499602
Correct output: 8.9928003199   | Program output: 7.9928003199  
Correct output: 2.9498640059   | Program output: 1.9498640059  
Correct output: 8.0227633312   | Program output: 7.0227633312  
Correct output: 88.8073730558  | Program output: 87.8073730558 
Correct output: -51.6951995134 | Program output: -52.6951995134
Correct output: 16.8558496317  | Program output: 15.8558496317 
Correct output: -54.5019943507 | Program output: -55.5019943507
Correct output: 28.7886817369  | Program output: 27.7886817369 
Correct output: 119.4066893742 | Program output: 118.4066893742
Correct output: -8.8924177576  | Program output: -9.8924177576 
Correct output: -30.5760090362 | Program output: -31.5760090362
Correct output: 59.8261519278  | Program output: 58.8261519278 
Correct output: -107.9873881437 | Program output: -108.9873881437
Correct output: 6.8774260757   | Program output: 5.8774260757  
Correct output: 23.2088987026  | Program output: 22.2088987026 
Correct output: 71.7336904838  | Program output: 70.7336904838 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction integer_div} {:instruction float_rot} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction tag_integer_981} {:instruction integer_rot} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger integer_div float_rot 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min tag_integer_981 integer_rot float_yankdup integer_stackdepth float_frominteger integer_div in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1 1.0 1]
Total: 50.0
Mean: 1.0
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1335.3362155000002
Median total errors in population: 281.5029
Error averages by case: (49.05701840000028 6.898 54.13492669999959 7.046 44.42887410000015 6.341 45.31096939999983 6.751 40.538404799999995 6.836 38.85024859999997 6.789 50.34344860000004 6.914 47.62909279999994 6.942 45.24001359999959 7.946 44.24855820000042 7.21 45.2117922000002 6.745 42.18497319999983 7.435 48.50748569999982 6.863 48.30358039999965 7.547 39.005906499999796 7.292 48.07975739999956 7.438 42.21755129999981 6.095 51.06860359999972 6.375 48.44229859999966 7.326 47.954839700000136 7.471 46.946611900000285 7.984 49.81605719999977 7.001 47.14439410000052 7.98 48.02959339999997 7.497 44.48521510000034 7.434)
Error minima by case: (0.1902 1 0.0489 1 0.1902 1 0.1902 1 0.1073 1 0.0944 1 0.1902 1 0.1839 1 0.1066 1 0.1902 1 0.0266 1 0.1682 1 0.1902 1 0.0944 1 0.1335 1 0.1902 1 0.0919 1 0.0048 1 0.1399 1 0.144 1 0.0149 1 0.1902 1 0.0782 1 0.1902 1 0.1902 1)
Average genome size in population (length): 28.104
Average program size in population (points): 29.104
Average percent parens in population: 0.035
Minimum age in population: 45.17524707317352
Maximum age in population: 49.49413149245083
Average age in population: 47.53365177332563
Median age in population: 47.55774924950674
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 252
Genome diversity (% unique Plush genomes):	 0.421
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 252
Syntactic diversity (% unique Push programs):	 0.421
Total error diversity:				 0.085
Error (vector) diversity:			 0.087
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 30835401
--- Timings ---
Current time: 1529615544655 milliseconds
Total Time:         105.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.7 seconds, 45.0%
Fitness Testing:     46.5 seconds, 43.9%
Report:              11.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -84.7509799981
Correct output: -121.4181188828 | Program output: -121.4181188828
Correct output: -53.9537020847 | Program output: -53.9537020847
Correct output: -21.056824064  | Program output: -21.056824064 
Correct output: -40.4128479382 | Program output: -40.4128479382
Correct output: 22.7056098644  | Program output: 22.7056098644 
Correct output: -85.4764811006 | Program output: -85.4764811006
Correct output: -58.7739403885 | Program output: -58.7739403885
Correct output: -21.8827499602 | Program output: -21.8827499602
Correct output: 8.9928003199   | Program output: 8.9928003199  
Correct output: 2.9498640059   | Program output: 2.9498640059  
Correct output: 8.0227633312   | Program output: 8.0227633312  
Correct output: 88.8073730558  | Program output: 88.8073730558 
Correct output: -51.6951995134 | Program output: -51.6951995134
Correct output: 16.8558496317  | Program output: 16.8558496317 
Correct output: -54.5019943507 | Program output: -54.5019943507
Correct output: 28.7886817369  | Program output: 28.7886817369 
Correct output: 119.4066893742 | Program output: 119.4066893742
Correct output: -8.8924177576  | Program output: -8.8924177576 
Correct output: -30.5760090362 | Program output: -30.5760090362
Correct output: 59.8261519278  | Program output: 59.8261519278 
Correct output: -107.9873881437 | Program output: -107.9873881437
Correct output: 6.8774260757   | Program output: 6.8774260757  
Correct output: 23.2088987026  | Program output: 23.2088987026 
Correct output: 71.7336904838  | Program output: 71.7336904838 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction in2} {:instruction integer_yank} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_frominteger} {:instruction 36.10631209003324} {:instruction integer_rot} {:instruction integer_fromfloat} {:instruction integer_yankdup} {:instruction integer_pop} {:instruction float_min} {:instruction integer_min} {:instruction tag_integer_981} {:instruction integer_rot} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_frominteger} {:instruction integer_div} {:instruction in1} {:instruction float_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_sub} {:instruction in2} {:instruction print_float} {:instruction integer_sub} {:instruction -29})
Best program: (integer_shove in2 integer_yank float_frominteger float_inc float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min tag_integer_981 integer_rot float_yankdup integer_stackdepth float_frominteger integer_div in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 967.2771080000001
Median total errors in population: 50.0
Error averages by case: (37.915811900000044 2.746 41.55809079999998 2.941 34.085533199999944 2.754 34.71747749999995 2.675 31.878641299999988 2.822 30.187307799999992 3.207 39.33779799999999 2.766 35.059767299999955 2.91 35.53201559999993 3.438 33.63007600000006 3.36 35.447622 2.686 32.000491000000025 3.416 38.09738249999993 2.935 38.001893399999965 2.924 29.72426809999999 3.323 38.04829120000002 2.873 31.59054370000002 3.183 41.14396129999995 2.958 36.93385499999995 3.38 34.62108110000005 2.858 34.916737900000044 3.61 38.41088080000004 2.932 37.172661500000046 3.643 35.76882099999995 2.882 35.28209810000006 2.992)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 28.077
Average program size in population (points): 29.077
Average percent parens in population: 0.035
Minimum age in population: 46.63179789576679
Maximum age in population: 50.7383420872502
Average age in population: 48.84853819230455
Median age in population: 48.89504010474775
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 306
Genome diversity (% unique Plush genomes):	 0.402
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 306
Syntactic diversity (% unique Push programs):	 0.402
Total error diversity:				 0.065
Error (vector) diversity:			 0.065
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 31537326
--- Timings ---
Current time: 1529615547567 milliseconds
Total Time:         108.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.0 seconds, 45.1%
Fitness Testing:     47.7 seconds, 43.9%
Report:              11.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 33
Successful program: (integer_shove in2 integer_yank float_frominteger float_inc float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min tag_integer_981 integer_rot float_yankdup integer_stackdepth float_frominteger integer_div in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 29


Auto-simplifying with starting size: 29
step: 0
program: (integer_shove in2 integer_yank float_frominteger float_inc float_frominteger 36.10631209003324 integer_rot integer_fromfloat integer_yankdup integer_pop float_min integer_min tag_integer_981 integer_rot float_yankdup integer_stackdepth float_frominteger integer_div in1 float_sub integer_stackdepth float_inc float_sub in2 print_float integer_sub -29)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 29

step: 500
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 1000
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 1500
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 2000
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 2500
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 3000
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 3500
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 4000
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 4500
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

step: 5000
program: (in2 float_frominteger integer_stackdepth float_frominteger in1 float_sub float_sub print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 9

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -84.7509799981 | Program output: -84.7509799981
Correct output: -121.4181188828 | Program output: -121.4181188828
Correct output: -53.9537020847 | Program output: -53.9537020847
Correct output: -21.056824064  | Program output: -21.056824064 
Correct output: -40.4128479382 | Program output: -40.4128479382
Correct output: 22.7056098644  | Program output: 22.7056098644 
Correct output: -85.4764811006 | Program output: -85.4764811006
Correct output: -58.7739403885 | Program output: -58.7739403885
Correct output: -21.8827499602 | Program output: -21.8827499602
Correct output: 8.9928003199   | Program output: 8.9928003199  
Correct output: 2.9498640059   | Program output: 2.9498640059  
Correct output: 8.0227633312   | Program output: 8.0227633312  
Correct output: 88.8073730558  | Program output: 88.8073730558 
Correct output: -51.6951995134 | Program output: -51.6951995134
Correct output: 16.8558496317  | Program output: 16.8558496317 
Correct output: -54.5019943507 | Program output: -54.5019943507
Correct output: 28.7886817369  | Program output: 28.7886817369 
Correct output: 119.4066893742 | Program output: 119.4066893742
Correct output: -8.8924177576  | Program output: -8.8924177576 
Correct output: -30.5760090362 | Program output: -30.5760090362
Correct output: 59.8261519278  | Program output: 59.8261519278 
Correct output: -107.9873881437 | Program output: -107.9873881437
Correct output: 6.8774260757   | Program output: 6.8774260757  
Correct output: 23.2088987026  | Program output: 23.2088987026 
Correct output: 71.7336904838  | Program output: 71.7336904838 
;;******************************
