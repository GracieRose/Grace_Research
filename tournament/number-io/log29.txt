Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-30.113445172053318 -98] -128.11344517205333]
Train Case:   1 | Input/Output: [[-42.63734931933476 -27] -69.63734931933476]
Train Case:   2 | Input/Output: [[94.03355684153647 -63] 31.033556841536466]
Train Case:   3 | Input/Output: [[95.95837618247731 48] 143.9583761824773]
Train Case:   4 | Input/Output: [[-50.14280661222179 -47] -97.14280661222179]
Train Case:   5 | Input/Output: [[53.78205498493017 42] 95.78205498493017]
Train Case:   6 | Input/Output: [[21.75735276122856 -69] -47.24264723877144]
Train Case:   7 | Input/Output: [[0.817323694025518 -1] -0.18267630597448203]
Train Case:   8 | Input/Output: [[55.168519062200005 -93] -37.831480937799995]
Train Case:   9 | Input/Output: [[-96.67156394685267 -40] -136.67156394685267]
Train Case:  10 | Input/Output: [[-28.459541631087532 -82] -110.45954163108753]
Train Case:  11 | Input/Output: [[-85.19600089274574 -8] -93.19600089274574]
Train Case:  12 | Input/Output: [[34.4784528400688 73] 107.4784528400688]
Train Case:  13 | Input/Output: [[-55.050955448951264 48] -7.050955448951264]
Train Case:  14 | Input/Output: [[-67.49233008037015 86] 18.507669919629848]
Train Case:  15 | Input/Output: [[10.18231135633279 95] 105.18231135633279]
Train Case:  16 | Input/Output: [[-38.67671691556009 -23] -61.67671691556009]
Train Case:  17 | Input/Output: [[59.08108239213658 -36] 23.08108239213658]
Train Case:  18 | Input/Output: [[-20.677443410769868 -91] -111.67744341076987]
Train Case:  19 | Input/Output: [[41.062456565660625 -50] -8.937543434339375]
Train Case:  20 | Input/Output: [[-83.32827739846525 25] -58.32827739846525]
Train Case:  21 | Input/Output: [[79.98248443144152 -91] -11.01751556855848]
Train Case:  22 | Input/Output: [[10.889332360436981 24] 34.88933236043698]
Train Case:  23 | Input/Output: [[55.674684540465165 3] 58.674684540465165]
Train Case:  24 | Input/Output: [[-37.92929980805775 91] 53.07070019194225]
Test Case:   0 | Input/Output: [[-30.61285002780805 -61] -91.61285002780805]
Test Case:   1 | Input/Output: [[-23.856832355682783 -90] -113.85683235568278]
Test Case:   2 | Input/Output: [[-65.15245547583872 10] -55.15245547583872]
Test Case:   3 | Input/Output: [[47.314097225506146 30] 77.31409722550615]
Test Case:   4 | Input/Output: [[45.30961804298485 54] 99.30961804298485]
Test Case:   5 | Input/Output: [[24.676768677500817 84] 108.67676867750082]
Test Case:   6 | Input/Output: [[48.661854888032735 -31] 17.661854888032735]
Test Case:   7 | Input/Output: [[57.31125850099693 8] 65.31125850099693]
Test Case:   8 | Input/Output: [[57.15955454387341 5] 62.15955454387341]
Test Case:   9 | Input/Output: [[-82.34434105336517 -29] -111.34434105336517]
Test Case:  10 | Input/Output: [[-52.309449923167975 -54] -106.30944992316797]
Test Case:  11 | Input/Output: [[36.95312379227673 75] 111.95312379227673]
Test Case:  12 | Input/Output: [[34.553511943328516 -94] -59.446488056671484]
Test Case:  13 | Input/Output: [[91.31728419893926 54] 145.31728419893926]
Test Case:  14 | Input/Output: [[-53.59100894549327 45] -8.591008945493272]
Test Case:  15 | Input/Output: [[27.131042482152807 -61] -33.86895751784719]
Test Case:  16 | Input/Output: [[54.92028322967633 -28] 26.92028322967633]
Test Case:  17 | Input/Output: [[88.89724951157604 87] 175.89724951157604]
Test Case:  18 | Input/Output: [[-13.912007625012635 -94] -107.91200762501263]
Test Case:  19 | Input/Output: [[-35.41698378460252 -1] -36.41698378460252]
Test Case:  20 | Input/Output: [[-49.330708880687915 -78] -127.33070888068792]
Test Case:  21 | Input/Output: [[56.258560769170316 42] 98.25856076917032]
Test Case:  22 | Input/Output: [[15.230246657468854 35] 50.230246657468854]
Test Case:  23 | Input/Output: [[-48.390086845396056 86] 37.609913154603944]
Test Case:  24 | Input/Output: [[36.605803713146656 52] 88.60580371314666]
Test Case:  25 | Input/Output: [[-33.860575971713885 8] -25.860575971713885]
Test Case:  26 | Input/Output: [[95.76601942234862 66] 161.76601942234862]
Test Case:  27 | Input/Output: [[-22.615899864765836 -88] -110.61589986476584]
Test Case:  28 | Input/Output: [[-43.24611567305992 -40] -83.24611567305992]
Test Case:  29 | Input/Output: [[8.430719227091828 -44] -35.56928077290817]
Test Case:  30 | Input/Output: [[64.89551522931723 8] 72.89551522931723]
Test Case:  31 | Input/Output: [[-97.46457079640005 -90] -187.46457079640004]
Test Case:  32 | Input/Output: [[10.141245097392158 -5] 5.141245097392158]
Test Case:  33 | Input/Output: [[-48.64352267245331 -69] -117.64352267245332]
Test Case:  34 | Input/Output: [[-86.65970249742752 -23] -109.65970249742752]
Test Case:  35 | Input/Output: [[-43.572137221146214 -76] -119.57213722114622]
Test Case:  36 | Input/Output: [[67.22878797469548 16] 83.22878797469548]
Test Case:  37 | Input/Output: [[-6.291511352172961 56] 49.70848864782704]
Test Case:  38 | Input/Output: [[22.01998176120395 94] 116.01998176120395]
Test Case:  39 | Input/Output: [[-72.43685723790641 -57] -129.4368572379064]
Test Case:  40 | Input/Output: [[-86.76263867658668 -33] -119.76263867658668]
Test Case:  41 | Input/Output: [[-23.155139949450614 -81] -104.15513994945061]
Test Case:  42 | Input/Output: [[99.07504535702535 -98] 1.0750453570253455]
Test Case:  43 | Input/Output: [[-11.46887464455466 69] 57.53112535544534]
Test Case:  44 | Input/Output: [[-31.019573548726726 8] -23.019573548726726]
Test Case:  45 | Input/Output: [[62.132448207627675 36] 98.13244820762768]
Test Case:  46 | Input/Output: [[-10.737389376355708 54] 43.26261062364429]
Test Case:  47 | Input/Output: [[-57.02866437653569 -76] -133.0286643765357]
Test Case:  48 | Input/Output: [[85.32405344731114 -45] 40.324053447311144]
Test Case:  49 | Input/Output: [[-9.670957586125525 -2] -11.670957586125525]
Test Case:  50 | Input/Output: [[-74.04247263783645 34] -40.042472637836454]
Test Case:  51 | Input/Output: [[63.24581797001002 50] 113.24581797001002]
Test Case:  52 | Input/Output: [[38.1876229559561 37] 75.1876229559561]
Test Case:  53 | Input/Output: [[71.80340752054559 14] 85.80340752054559]
Test Case:  54 | Input/Output: [[-76.20478569765737 59] -17.20478569765737]
Test Case:  55 | Input/Output: [[82.33565399495714 -97] -14.664346005042859]
Test Case:  56 | Input/Output: [[0.5878565301392484 -82] -81.41214346986075]
Test Case:  57 | Input/Output: [[80.28665628207341 89] 169.2866562820734]
Test Case:  58 | Input/Output: [[77.4694969824011 47] 124.4694969824011]
Test Case:  59 | Input/Output: [[60.37592191968665 80] 140.37592191968665]
Test Case:  60 | Input/Output: [[-11.131396939030395 18] 6.868603060969605]
Test Case:  61 | Input/Output: [[-34.46485844212661 71] 36.53514155787339]
Test Case:  62 | Input/Output: [[43.51349152074789 57] 100.51349152074789]
Test Case:  63 | Input/Output: [[96.37355403431499 -95] 1.3735540343149921]
Test Case:  64 | Input/Output: [[-26.622546070517686 43] 16.377453929482314]
Test Case:  65 | Input/Output: [[0.3762870838303485 -22] -21.62371291616965]
Test Case:  66 | Input/Output: [[48.269086188440156 -35] 13.269086188440156]
Test Case:  67 | Input/Output: [[-25.088361559576967 -21] -46.08836155957697]
Test Case:  68 | Input/Output: [[-13.966890449621644 64] 50.033109550378356]
Test Case:  69 | Input/Output: [[10.794110424409027 68] 78.79411042440903]
Test Case:  70 | Input/Output: [[-54.51158739018853 63] 8.48841260981147]
Test Case:  71 | Input/Output: [[66.46086065346287 46] 112.46086065346287]
Test Case:  72 | Input/Output: [[-77.25731005300858 45] -32.25731005300858]
Test Case:  73 | Input/Output: [[-20.389657734556366 -35] -55.389657734556366]
Test Case:  74 | Input/Output: [[-58.66242287613945 -25] -83.66242287613946]
Test Case:  75 | Input/Output: [[95.90241720902989 31] 126.90241720902989]
Test Case:  76 | Input/Output: [[50.204103059069524 -83] -32.795896940930476]
Test Case:  77 | Input/Output: [[65.16672850513177 64] 129.16672850513177]
Test Case:  78 | Input/Output: [[-65.2840375279956 27] -38.284037527995594]
Test Case:  79 | Input/Output: [[76.28448195439822 -8] 68.28448195439822]
Test Case:  80 | Input/Output: [[15.444748794279548 -16] -0.5552512057204524]
Test Case:  81 | Input/Output: [[14.162357472108695 -69] -54.837642527891305]
Test Case:  82 | Input/Output: [[-82.65878487140014 65] -17.658784871400144]
Test Case:  83 | Input/Output: [[-21.96093041290237 96] 74.03906958709763]
Test Case:  84 | Input/Output: [[14.808480860095273 -13] 1.8084808600952726]
Test Case:  85 | Input/Output: [[30.70406722695222 76] 106.70406722695222]
Test Case:  86 | Input/Output: [[43.83147344643314 -35] 8.831473446433137]
Test Case:  87 | Input/Output: [[69.44563182943617 -81] -11.554368170563833]
Test Case:  88 | Input/Output: [[0.6722926996654479 -79] -78.32770730033455]
Test Case:  89 | Input/Output: [[24.60705632148614 95] 119.60705632148614]
Test Case:  90 | Input/Output: [[79.76012037766981 -10] 69.76012037766981]
Test Case:  91 | Input/Output: [[24.906980087552526 -73] -48.093019912447474]
Test Case:  92 | Input/Output: [[-19.239183501443165 31] 11.760816498556835]
Test Case:  93 | Input/Output: [[-41.87814728987567 62] 20.12185271012433]
Test Case:  94 | Input/Output: [[-78.28059697021303 -44] -122.28059697021303]
Test Case:  95 | Input/Output: [[47.04280349181934 -84] -36.95719650818066]
Test Case:  96 | Input/Output: [[35.70244003623179 -75] -39.29755996376821]
Test Case:  97 | Input/Output: [[45.81592731556009 -17] 28.81592731556009]
Test Case:  98 | Input/Output: [[-84.66236395439289 5] -79.66236395439289]
Test Case:  99 | Input/Output: [[-82.34008709222047 15] -67.34008709222047]
Test Case: 100 | Input/Output: [[-25.913883834729234 -46] -71.91388383472923]
Test Case: 101 | Input/Output: [[-23.103535648065957 89] 65.89646435193404]
Test Case: 102 | Input/Output: [[56.755721478694 -61] -4.244278521306001]
Test Case: 103 | Input/Output: [[20.286244307207824 72] 92.28624430720782]
Test Case: 104 | Input/Output: [[-56.530536655264086 -82] -138.5305366552641]
Test Case: 105 | Input/Output: [[64.3758241617013 -98] -33.6241758382987]
Test Case: 106 | Input/Output: [[12.631339278986147 92] 104.63133927898615]
Test Case: 107 | Input/Output: [[0.0981806566911132 -75] -74.90181934330889]
Test Case: 108 | Input/Output: [[-85.24186773398709 -41] -126.24186773398709]
Test Case: 109 | Input/Output: [[85.50050760554004 -94] -8.499492394459963]
Test Case: 110 | Input/Output: [[-46.84742886057389 -43] -89.8474288605739]
Test Case: 111 | Input/Output: [[73.39689379007467 -22] 51.39689379007467]
Test Case: 112 | Input/Output: [[66.0239063427102 19] 85.0239063427102]
Test Case: 113 | Input/Output: [[58.19897730068712 0] 58.19897730068712]
Test Case: 114 | Input/Output: [[68.79834845516294 -26] 42.79834845516294]
Test Case: 115 | Input/Output: [[40.76043966201527 82] 122.76043966201527]
Test Case: 116 | Input/Output: [[-4.376293939203663 -48] -52.37629393920366]
Test Case: 117 | Input/Output: [[-31.785004053365597 -33] -64.7850040533656]
Test Case: 118 | Input/Output: [[-76.18818982673044 -67] -143.18818982673042]
Test Case: 119 | Input/Output: [[-1.1902615622320951 89] 87.8097384377679]
Test Case: 120 | Input/Output: [[29.162903223339754 -92] -62.837096776660246]
Test Case: 121 | Input/Output: [[89.34550436059754 82] 171.34550436059754]
Test Case: 122 | Input/Output: [[-52.238952161142585 -39] -91.23895216114258]
Test Case: 123 | Input/Output: [[-6.20346663632516 6] -0.20346663632516027]
Test Case: 124 | Input/Output: [[-64.43159048012832 42] -22.43159048012832]
Test Case: 125 | Input/Output: [[-51.7472761553037 -72] -123.7472761553037]
Test Case: 126 | Input/Output: [[-95.59891900610988 -99] -194.5989190061099]
Test Case: 127 | Input/Output: [[8.976370674146978 -81] -72.02362932585302]
Test Case: 128 | Input/Output: [[-70.43089300440676 -43] -113.43089300440676]
Test Case: 129 | Input/Output: [[-19.299529408884126 -57] -76.29952940888413]
Test Case: 130 | Input/Output: [[29.748959566693856 38] 67.74895956669386]
Test Case: 131 | Input/Output: [[29.26987343016407 67] 96.26987343016407]
Test Case: 132 | Input/Output: [[-24.99312415673451 -18] -42.99312415673451]
Test Case: 133 | Input/Output: [[-30.845786252107587 65] 34.15421374789241]
Test Case: 134 | Input/Output: [[6.987427996037482 -13] -6.012572003962518]
Test Case: 135 | Input/Output: [[68.22010202624662 -25] 43.22010202624662]
Test Case: 136 | Input/Output: [[-45.31191391901987 -68] -113.31191391901987]
Test Case: 137 | Input/Output: [[8.431920754940435 41] 49.431920754940435]
Test Case: 138 | Input/Output: [[12.72187512437253 -14] -1.2781248756274692]
Test Case: 139 | Input/Output: [[14.051685124149486 -53] -38.948314875850514]
Test Case: 140 | Input/Output: [[64.72536302018668 -100] -35.27463697981332]
Test Case: 141 | Input/Output: [[-34.78557888258942 28] -6.785578882589419]
Test Case: 142 | Input/Output: [[-60.210521829075425 -87] -147.21052182907542]
Test Case: 143 | Input/Output: [[-38.57749654997862 -96] -134.5774965499786]
Test Case: 144 | Input/Output: [[-10.684979838321055 -45] -55.684979838321055]
Test Case: 145 | Input/Output: [[-0.33650565383057085 89] 88.66349434616943]
Test Case: 146 | Input/Output: [[99.28313817390628 -11] 88.28313817390628]
Test Case: 147 | Input/Output: [[84.96027458618713 -58] 26.960274586187126]
Test Case: 148 | Input/Output: [[-31.944522744713822 80] 48.05547725528618]
Test Case: 149 | Input/Output: [[-33.15721521002388 42] 8.842784789976122]
Test Case: 150 | Input/Output: [[-46.8997872908512 -3] -49.8997872908512]
Test Case: 151 | Input/Output: [[4.434836849219195 -26] -21.565163150780805]
Test Case: 152 | Input/Output: [[30.52440852676216 1] 31.52440852676216]
Test Case: 153 | Input/Output: [[-87.57636160858135 15] -72.57636160858135]
Test Case: 154 | Input/Output: [[-74.66682146738883 -96] -170.66682146738884]
Test Case: 155 | Input/Output: [[-5.588002946006469 97] 91.41199705399353]
Test Case: 156 | Input/Output: [[-62.4769539708869 -66] -128.4769539708869]
Test Case: 157 | Input/Output: [[-46.005422591541475 37] -9.005422591541475]
Test Case: 158 | Input/Output: [[70.59177745647196 46] 116.59177745647196]
Test Case: 159 | Input/Output: [[-28.69317666416707 -65] -93.69317666416707]
Test Case: 160 | Input/Output: [[-34.28515240298782 -84] -118.28515240298782]
Test Case: 161 | Input/Output: [[-51.51561399737157 95] 43.48438600262843]
Test Case: 162 | Input/Output: [[10.39888330989018 42] 52.39888330989018]
Test Case: 163 | Input/Output: [[30.483172471529087 63] 93.48317247152909]
Test Case: 164 | Input/Output: [[-68.29602178147354 -54] -122.29602178147354]
Test Case: 165 | Input/Output: [[-26.150010216857524 56] 29.849989783142476]
Test Case: 166 | Input/Output: [[-34.740880993437045 59] 24.259119006562955]
Test Case: 167 | Input/Output: [[-5.5806443268387795 -22] -27.58064432683878]
Test Case: 168 | Input/Output: [[77.01449173506023 38] 115.01449173506023]
Test Case: 169 | Input/Output: [[-61.684109364364595 50] -11.684109364364595]
Test Case: 170 | Input/Output: [[-33.525140379761325 54] 20.474859620238675]
Test Case: 171 | Input/Output: [[-51.50360400302147 -75] -126.50360400302148]
Test Case: 172 | Input/Output: [[24.54606886385413 -100] -75.45393113614587]
Test Case: 173 | Input/Output: [[-93.5101624298088 -51] -144.51016242980882]
Test Case: 174 | Input/Output: [[-66.02749844392108 11] -55.027498443921075]
Test Case: 175 | Input/Output: [[-54.95416147110737 65] 10.04583852889263]
Test Case: 176 | Input/Output: [[-97.08773764083456 -91] -188.08773764083458]
Test Case: 177 | Input/Output: [[-97.435550862619 -39] -136.43555086261898]
Test Case: 178 | Input/Output: [[98.31784134205765 -91] 7.317841342057648]
Test Case: 179 | Input/Output: [[-60.66290505743241 -57] -117.66290505743241]
Test Case: 180 | Input/Output: [[-98.871410477783 18] -80.871410477783]
Test Case: 181 | Input/Output: [[42.1548479574939 -54] -11.8451520425061]
Test Case: 182 | Input/Output: [[17.913143795245475 -81] -63.086856204754525]
Test Case: 183 | Input/Output: [[-58.174838401681185 -88] -146.1748384016812]
Test Case: 184 | Input/Output: [[-80.14674742066374 -7] -87.14674742066374]
Test Case: 185 | Input/Output: [[73.99230421700884 2] 75.99230421700884]
Test Case: 186 | Input/Output: [[-18.45304605598352 -80] -98.45304605598352]
Test Case: 187 | Input/Output: [[20.005509104074704 -69] -48.994490895925296]
Test Case: 188 | Input/Output: [[-15.860394189006982 -42] -57.86039418900698]
Test Case: 189 | Input/Output: [[-43.42848506550785 -79] -122.42848506550786]
Test Case: 190 | Input/Output: [[26.48304163716486 54] 80.48304163716486]
Test Case: 191 | Input/Output: [[-40.811774581476136 -51] -91.81177458147613]
Test Case: 192 | Input/Output: [[35.098415302341266 56] 91.09841530234127]
Test Case: 193 | Input/Output: [[82.8819728232362 -83] -0.11802717676380325]
Test Case: 194 | Input/Output: [[91.50808282041413 -95] -3.491917179585869]
Test Case: 195 | Input/Output: [[7.542964710507903 -59] -51.4570352894921]
Test Case: 196 | Input/Output: [[-84.19892342567992 47] -37.19892342567992]
Test Case: 197 | Input/Output: [[87.37820891456559 -27] 60.37820891456559]
Test Case: 198 | Input/Output: [[-33.24436278430652 -74] -107.24436278430652]
Test Case: 199 | Input/Output: [[-82.43724468305524 1] -81.43724468305524]
Test Case: 200 | Input/Output: [[-50.20907589688075 -18] -68.20907589688075]
Test Case: 201 | Input/Output: [[-85.42699848395799 55] -30.426998483957988]
Test Case: 202 | Input/Output: [[14.229952491507603 87] 101.2299524915076]
Test Case: 203 | Input/Output: [[-59.29389912095782 -44] -103.29389912095782]
Test Case: 204 | Input/Output: [[8.184323609832774 -68] -59.815676390167226]
Test Case: 205 | Input/Output: [[-6.208959887355107 -73] -79.2089598873551]
Test Case: 206 | Input/Output: [[30.66706129147451 14] 44.66706129147451]
Test Case: 207 | Input/Output: [[-98.27609463990692 -30] -128.27609463990692]
Test Case: 208 | Input/Output: [[-55.31206082737938 -51] -106.31206082737938]
Test Case: 209 | Input/Output: [[-38.69690018777623 79] 40.30309981222377]
Test Case: 210 | Input/Output: [[45.668383509940185 -58] -12.331616490059815]
Test Case: 211 | Input/Output: [[55.27393065531197 88] 143.27393065531197]
Test Case: 212 | Input/Output: [[95.07398292793184 -19] 76.07398292793184]
Test Case: 213 | Input/Output: [[-40.31427285693292 32] -8.314272856932917]
Test Case: 214 | Input/Output: [[65.00117877587101 -82] -16.99882122412899]
Test Case: 215 | Input/Output: [[-52.210919014437884 39] -13.210919014437884]
Test Case: 216 | Input/Output: [[18.121413304190284 52] 70.12141330419028]
Test Case: 217 | Input/Output: [[78.83637325089688 92] 170.83637325089688]
Test Case: 218 | Input/Output: [[12.131366519364036 76] 88.13136651936404]
Test Case: 219 | Input/Output: [[88.12232741932726 -31] 57.12232741932726]
Test Case: 220 | Input/Output: [[-13.946530435652633 -53] -66.94653043565263]
Test Case: 221 | Input/Output: [[37.35248573069285 -96] -58.64751426930715]
Test Case: 222 | Input/Output: [[-43.6398439259444 63] 19.360156074055602]
Test Case: 223 | Input/Output: [[-96.79979450171454 -28] -124.79979450171454]
Test Case: 224 | Input/Output: [[-36.18321742024273 57] 20.816782579757273]
Test Case: 225 | Input/Output: [[80.10916792459108 -50] 30.109167924591077]
Test Case: 226 | Input/Output: [[-35.124323305508625 64] 28.875676694491375]
Test Case: 227 | Input/Output: [[68.82974934222838 -54] 14.829749342228382]
Test Case: 228 | Input/Output: [[89.76978697701873 -71] 18.769786977018725]
Test Case: 229 | Input/Output: [[-12.00321510659235 -6] -18.00321510659235]
Test Case: 230 | Input/Output: [[76.51408907518876 53] 129.51408907518876]
Test Case: 231 | Input/Output: [[-36.22731012885993 -75] -111.22731012885993]
Test Case: 232 | Input/Output: [[23.982321397919975 -82] -58.017678602080025]
Test Case: 233 | Input/Output: [[31.641775001620033 -52] -20.358224998379967]
Test Case: 234 | Input/Output: [[-69.36991248800871 12] -57.36991248800871]
Test Case: 235 | Input/Output: [[-23.990318203025154 -78] -101.99031820302515]
Test Case: 236 | Input/Output: [[81.52652958809887 -12] 69.52652958809887]
Test Case: 237 | Input/Output: [[19.95274449159811 14] 33.95274449159811]
Test Case: 238 | Input/Output: [[-99.18931001759393 61] -38.189310017593925]
Test Case: 239 | Input/Output: [[40.97659016263563 69] 109.97659016263563]
Test Case: 240 | Input/Output: [[58.47934673582313 -6] 52.47934673582313]
Test Case: 241 | Input/Output: [[55.95506814895495 41] 96.95506814895495]
Test Case: 242 | Input/Output: [[-20.65211373023243 87] 66.34788626976757]
Test Case: 243 | Input/Output: [[-54.0720787924402 96] 41.9279212075598]
Test Case: 244 | Input/Output: [[86.28429088671231 47] 133.2842908867123]
Test Case: 245 | Input/Output: [[-83.60535821000965 88] 4.394641789990345]
Test Case: 246 | Input/Output: [[56.52752980818261 -34] 22.527529808182607]
Test Case: 247 | Input/Output: [[-57.832795933824734 61] 3.167204066175266]
Test Case: 248 | Input/Output: [[-59.869119574411144 -98] -157.86911957441114]
Test Case: 249 | Input/Output: [[29.84828808391714 -75] -45.15171191608286]
Test Case: 250 | Input/Output: [[51.71645770065504 -71] -19.28354229934496]
Test Case: 251 | Input/Output: [[51.86472607980434 -16] 35.86472607980434]
Test Case: 252 | Input/Output: [[23.99234113581133 83] 106.99234113581133]
Test Case: 253 | Input/Output: [[-2.78241238141905 41] 38.21758761858095]
Test Case: 254 | Input/Output: [[-26.764649646865863 75] 48.23535035313414]
Test Case: 255 | Input/Output: [[-96.95277806987153 11] -85.95277806987153]
Test Case: 256 | Input/Output: [[0.22112515756191442 -19] -18.778874842438086]
Test Case: 257 | Input/Output: [[51.774778473636644 -61] -9.225221526363356]
Test Case: 258 | Input/Output: [[70.78089014436603 37] 107.78089014436603]
Test Case: 259 | Input/Output: [[5.8190438501016075 -49] -43.18095614989839]
Test Case: 260 | Input/Output: [[43.90137554266704 -7] 36.90137554266704]
Test Case: 261 | Input/Output: [[-14.042362042155546 -55] -69.04236204215555]
Test Case: 262 | Input/Output: [[53.87625023993331 46] 99.87625023993331]
Test Case: 263 | Input/Output: [[65.6972770732454 6] 71.6972770732454]
Test Case: 264 | Input/Output: [[52.44880324173488 -95] -42.55119675826512]
Test Case: 265 | Input/Output: [[-79.19156670501974 13] -66.19156670501974]
Test Case: 266 | Input/Output: [[72.70244700241525 41] 113.70244700241525]
Test Case: 267 | Input/Output: [[50.52070439355896 37] 87.52070439355896]
Test Case: 268 | Input/Output: [[70.83240740465365 -12] 58.83240740465365]
Test Case: 269 | Input/Output: [[59.58338719238853 47] 106.58338719238853]
Test Case: 270 | Input/Output: [[-76.89243823966079 -80] -156.8924382396608]
Test Case: 271 | Input/Output: [[89.97311688009091 -94] -4.026883119909087]
Test Case: 272 | Input/Output: [[-70.98682855588024 -6] -76.98682855588024]
Test Case: 273 | Input/Output: [[41.37084055073879 87] 128.3708405507388]
Test Case: 274 | Input/Output: [[-5.202816295489882 -49] -54.20281629548988]
Test Case: 275 | Input/Output: [[93.3280750493208 -28] 65.3280750493208]
Test Case: 276 | Input/Output: [[26.247314662878594 -100] -73.7526853371214]
Test Case: 277 | Input/Output: [[16.88060883300429 -15] 1.8806088330042883]
Test Case: 278 | Input/Output: [[-24.2687592618783 54] 29.7312407381217]
Test Case: 279 | Input/Output: [[-70.09729376370547 -91] -161.09729376370547]
Test Case: 280 | Input/Output: [[87.96666173122983 -80] 7.966661731229834]
Test Case: 281 | Input/Output: [[33.33785990046235 -59] -25.662140099537652]
Test Case: 282 | Input/Output: [[40.61367713696745 24] 64.61367713696745]
Test Case: 283 | Input/Output: [[-82.95567611120873 -50] -132.95567611120873]
Test Case: 284 | Input/Output: [[73.21495638382953 57] 130.21495638382953]
Test Case: 285 | Input/Output: [[77.48170958208672 36] 113.48170958208672]
Test Case: 286 | Input/Output: [[65.47724361725776 45] 110.47724361725776]
Test Case: 287 | Input/Output: [[-55.81451949045424 -21] -76.81451949045424]
Test Case: 288 | Input/Output: [[-18.409552460231964 98] 79.59044753976804]
Test Case: 289 | Input/Output: [[17.251909027724906 -46] -28.748090972275094]
Test Case: 290 | Input/Output: [[-24.051943790042387 50] 25.948056209957613]
Test Case: 291 | Input/Output: [[38.96722227777303 63] 101.96722227777303]
Test Case: 292 | Input/Output: [[91.75013513545613 0] 91.75013513545613]
Test Case: 293 | Input/Output: [[-45.70374712974641 -13] -58.70374712974641]
Test Case: 294 | Input/Output: [[-83.40717252973423 -11] -94.40717252973423]
Test Case: 295 | Input/Output: [[6.054702045163822 -69] -62.94529795483618]
Test Case: 296 | Input/Output: [[-64.49827312950825 -28] -92.49827312950825]
Test Case: 297 | Input/Output: [[-19.01772518085467 -71] -90.01772518085467]
Test Case: 298 | Input/Output: [[87.70978851895876 11] 98.70978851895876]
Test Case: 299 | Input/Output: [[-5.49221790978001 77] 71.50778209021999]
Test Case: 300 | Input/Output: [[-99.02949017013638 -27] -126.02949017013638]
Test Case: 301 | Input/Output: [[-1.6738821290248609 3] 1.3261178709751391]
Test Case: 302 | Input/Output: [[11.472823930636238 53] 64.47282393063624]
Test Case: 303 | Input/Output: [[-35.48194465404781 -46] -81.48194465404781]
Test Case: 304 | Input/Output: [[18.788178131292185 63] 81.78817813129218]
Test Case: 305 | Input/Output: [[7.363627097135449 -63] -55.63637290286455]
Test Case: 306 | Input/Output: [[86.96262602248547 -96] -9.037373977514534]
Test Case: 307 | Input/Output: [[-0.22781390257797796 -24] -24.227813902577978]
Test Case: 308 | Input/Output: [[39.917972958362014 55] 94.91797295836201]
Test Case: 309 | Input/Output: [[36.54605596569078 25] 61.54605596569078]
Test Case: 310 | Input/Output: [[81.7588519172154 -24] 57.758851917215395]
Test Case: 311 | Input/Output: [[-15.722987904777469 94] 78.27701209522253]
Test Case: 312 | Input/Output: [[16.86762300298443 -43] -26.13237699701557]
Test Case: 313 | Input/Output: [[90.60178944408571 -65] 25.60178944408571]
Test Case: 314 | Input/Output: [[5.8487661622146305 -84] -78.15123383778537]
Test Case: 315 | Input/Output: [[99.55449554343701 27] 126.55449554343701]
Test Case: 316 | Input/Output: [[20.989674249539775 -78] -57.010325750460225]
Test Case: 317 | Input/Output: [[-31.093763112597102 7] -24.093763112597102]
Test Case: 318 | Input/Output: [[-10.736142486045168 -12] -22.736142486045168]
Test Case: 319 | Input/Output: [[-15.57609001015095 79] 63.42390998984905]
Test Case: 320 | Input/Output: [[97.52386463818925 9] 106.52386463818925]
Test Case: 321 | Input/Output: [[1.7199876395915084 -42] -40.28001236040849]
Test Case: 322 | Input/Output: [[-79.70496475301744 -89] -168.70496475301744]
Test Case: 323 | Input/Output: [[36.521221836495044 100] 136.52122183649504]
Test Case: 324 | Input/Output: [[-60.40210542080799 -29] -89.402105420808]
Test Case: 325 | Input/Output: [[-86.27901805200315 -1] -87.27901805200315]
Test Case: 326 | Input/Output: [[59.29675226566076 23] 82.29675226566076]
Test Case: 327 | Input/Output: [[88.88285345758766 -34] 54.88285345758766]
Test Case: 328 | Input/Output: [[-76.16038461597911 -84] -160.16038461597913]
Test Case: 329 | Input/Output: [[-87.26535124693979 -9] -96.26535124693979]
Test Case: 330 | Input/Output: [[48.92452033708116 42] 90.92452033708116]
Test Case: 331 | Input/Output: [[45.041875219309645 55] 100.04187521930965]
Test Case: 332 | Input/Output: [[-65.79293775688227 -15] -80.79293775688227]
Test Case: 333 | Input/Output: [[27.550755524239406 -34] -6.449244475760594]
Test Case: 334 | Input/Output: [[-29.62027613826291 0] -29.62027613826291]
Test Case: 335 | Input/Output: [[-68.23745432240477 33] -35.23745432240477]
Test Case: 336 | Input/Output: [[28.219864557257978 49] 77.21986455725798]
Test Case: 337 | Input/Output: [[33.516984058191554 -22] 11.516984058191554]
Test Case: 338 | Input/Output: [[-75.2825467074534 -79] -154.2825467074534]
Test Case: 339 | Input/Output: [[-56.78660865800431 -41] -97.78660865800431]
Test Case: 340 | Input/Output: [[72.91254452032533 76] 148.91254452032533]
Test Case: 341 | Input/Output: [[6.3065155666345305 -88] -81.69348443336547]
Test Case: 342 | Input/Output: [[-41.40858297096423 35] -6.408582970964233]
Test Case: 343 | Input/Output: [[-49.0040368167497 -38] -87.0040368167497]
Test Case: 344 | Input/Output: [[23.50869948084376 5] 28.50869948084376]
Test Case: 345 | Input/Output: [[-37.91653845778748 -67] -104.91653845778748]
Test Case: 346 | Input/Output: [[-87.94977053790814 -95] -182.94977053790814]
Test Case: 347 | Input/Output: [[-12.10620418611586 2] -10.10620418611586]
Test Case: 348 | Input/Output: [[48.33283468493218 92] 140.33283468493218]
Test Case: 349 | Input/Output: [[-2.6692536009199017 25] 22.3307463990801]
Test Case: 350 | Input/Output: [[50.34457406558181 28] 78.34457406558181]
Test Case: 351 | Input/Output: [[-51.28584599970176 90] 38.71415400029824]
Test Case: 352 | Input/Output: [[-71.74555115140227 -58] -129.74555115140225]
Test Case: 353 | Input/Output: [[74.36437032257041 4] 78.36437032257041]
Test Case: 354 | Input/Output: [[-78.34738522224586 67] -11.347385222245862]
Test Case: 355 | Input/Output: [[18.146962801637173 -73] -54.85303719836283]
Test Case: 356 | Input/Output: [[7.213670873878584 30] 37.213670873878584]
Test Case: 357 | Input/Output: [[-72.6985426074769 52] -20.698542607476895]
Test Case: 358 | Input/Output: [[56.199481060597606 93] 149.1994810605976]
Test Case: 359 | Input/Output: [[-64.4468430015789 75] 10.553156998421102]
Test Case: 360 | Input/Output: [[-79.11247506735575 45] -34.112475067355746]
Test Case: 361 | Input/Output: [[-91.36557078120791 -76] -167.3655707812079]
Test Case: 362 | Input/Output: [[86.33336034808906 -31] 55.33336034808906]
Test Case: 363 | Input/Output: [[-11.859449944678673 -23] -34.85944994467867]
Test Case: 364 | Input/Output: [[-37.36105756757333 28] -9.361057567573333]
Test Case: 365 | Input/Output: [[21.9289335997032 -82] -60.0710664002968]
Test Case: 366 | Input/Output: [[-5.240491117685451 -89] -94.24049111768545]
Test Case: 367 | Input/Output: [[-97.83815994879555 33] -64.83815994879555]
Test Case: 368 | Input/Output: [[-67.86578944296372 -54] -121.86578944296372]
Test Case: 369 | Input/Output: [[-49.09475343000058 66] 16.90524656999942]
Test Case: 370 | Input/Output: [[64.74429546445452 -13] 51.744295464454524]
Test Case: 371 | Input/Output: [[-7.243282055923018 82] 74.75671794407698]
Test Case: 372 | Input/Output: [[-79.3619950772217 -90] -169.3619950772217]
Test Case: 373 | Input/Output: [[7.007528655974895 37] 44.007528655974895]
Test Case: 374 | Input/Output: [[74.34263290547955 13] 87.34263290547955]
Test Case: 375 | Input/Output: [[3.736160523674897 -81] -77.2638394763251]
Test Case: 376 | Input/Output: [[19.909111262952777 -11] 8.909111262952777]
Test Case: 377 | Input/Output: [[27.264950614953975 -100] -72.73504938504603]
Test Case: 378 | Input/Output: [[81.67826328902444 67] 148.67826328902444]
Test Case: 379 | Input/Output: [[26.482004690123077 43] 69.48200469012308]
Test Case: 380 | Input/Output: [[-36.035218123844516 28] -8.035218123844516]
Test Case: 381 | Input/Output: [[16.399658848813317 9] 25.399658848813317]
Test Case: 382 | Input/Output: [[-14.58740154748925 59] 44.41259845251075]
Test Case: 383 | Input/Output: [[-22.871273396980385 -49] -71.87127339698038]
Test Case: 384 | Input/Output: [[-7.451305874225639 -27] -34.45130587422564]
Test Case: 385 | Input/Output: [[-6.440007408280991 -91] -97.44000740828099]
Test Case: 386 | Input/Output: [[27.747674653314334 46] 73.74767465331433]
Test Case: 387 | Input/Output: [[-19.142514148357208 -98] -117.14251414835721]
Test Case: 388 | Input/Output: [[77.58293928332509 38] 115.58293928332509]
Test Case: 389 | Input/Output: [[-0.9909007501167366 -75] -75.99090075011674]
Test Case: 390 | Input/Output: [[-8.816983252379828 -30] -38.81698325237983]
Test Case: 391 | Input/Output: [[73.15955568170091 38] 111.15955568170091]
Test Case: 392 | Input/Output: [[7.9454210398574645 -40] -32.054578960142535]
Test Case: 393 | Input/Output: [[43.281627108015414 89] 132.2816271080154]
Test Case: 394 | Input/Output: [[17.609404451313225 -58] -40.390595548686775]
Test Case: 395 | Input/Output: [[28.41772795284777 -92] -63.58227204715223]
Test Case: 396 | Input/Output: [[12.56384568901818 -81] -68.43615431098182]
Test Case: 397 | Input/Output: [[60.86728172094118 38] 98.86728172094118]
Test Case: 398 | Input/Output: [[22.57335770806364 21] 43.57335770806364]
Test Case: 399 | Input/Output: [[81.8390859194524 13] 94.8390859194524]
Test Case: 400 | Input/Output: [[-90.77970579505691 8] -82.77970579505691]
Test Case: 401 | Input/Output: [[78.46788221562414 -70] 8.467882215624144]
Test Case: 402 | Input/Output: [[-18.040508889093346 -40] -58.040508889093346]
Test Case: 403 | Input/Output: [[-56.384271442665515 -79] -135.38427144266552]
Test Case: 404 | Input/Output: [[-97.37585511835609 75] -22.375855118356085]
Test Case: 405 | Input/Output: [[3.442447581350109 28] 31.44244758135011]
Test Case: 406 | Input/Output: [[1.6618057996424795 64] 65.66180579964248]
Test Case: 407 | Input/Output: [[66.5235907189928 14] 80.5235907189928]
Test Case: 408 | Input/Output: [[87.73733978586978 -88] -0.26266021413022145]
Test Case: 409 | Input/Output: [[-3.3964883651067055 -1] -4.3964883651067055]
Test Case: 410 | Input/Output: [[96.3934033673556 6] 102.3934033673556]
Test Case: 411 | Input/Output: [[77.12037104146617 28] 105.12037104146617]
Test Case: 412 | Input/Output: [[23.957197600504216 -29] -5.042802399495784]
Test Case: 413 | Input/Output: [[-91.49267170668345 83] -8.492671706683453]
Test Case: 414 | Input/Output: [[-46.761744209467615 51] 4.238255790532385]
Test Case: 415 | Input/Output: [[-94.3995948865598 67] -27.399594886559797]
Test Case: 416 | Input/Output: [[-89.85886612371002 29] -60.858866123710015]
Test Case: 417 | Input/Output: [[-61.77612029054706 -35] -96.77612029054706]
Test Case: 418 | Input/Output: [[20.511389137134188 83] 103.51138913713419]
Test Case: 419 | Input/Output: [[-55.5387845923107 89] 33.4612154076893]
Test Case: 420 | Input/Output: [[-78.4237416672746 90] 11.576258332725402]
Test Case: 421 | Input/Output: [[85.94597370140838 -80] 5.945973701408377]
Test Case: 422 | Input/Output: [[-38.18311862597028 -41] -79.18311862597028]
Test Case: 423 | Input/Output: [[64.50453768325565 -69] -4.4954623167443515]
Test Case: 424 | Input/Output: [[-55.979188587956806 74] 18.020811412043194]
Test Case: 425 | Input/Output: [[-55.89042701605935 -77] -132.89042701605933]
Test Case: 426 | Input/Output: [[-17.981361775209166 -76] -93.98136177520917]
Test Case: 427 | Input/Output: [[84.16073676000923 72] 156.16073676000923]
Test Case: 428 | Input/Output: [[77.67252290574612 31] 108.67252290574612]
Test Case: 429 | Input/Output: [[-86.88454306108666 -9] -95.88454306108666]
Test Case: 430 | Input/Output: [[-8.292476383272103 -79] -87.2924763832721]
Test Case: 431 | Input/Output: [[98.46418686447436 33] 131.46418686447436]
Test Case: 432 | Input/Output: [[-78.32623675336734 28] -50.32623675336734]
Test Case: 433 | Input/Output: [[-82.33056306766517 -31] -113.33056306766517]
Test Case: 434 | Input/Output: [[74.55580814948982 -24] 50.55580814948982]
Test Case: 435 | Input/Output: [[7.787377158749351 58] 65.78737715874935]
Test Case: 436 | Input/Output: [[-5.680871317823758 -66] -71.68087131782376]
Test Case: 437 | Input/Output: [[62.3607783679015 6] 68.3607783679015]
Test Case: 438 | Input/Output: [[-36.96607427806931 -15] -51.96607427806931]
Test Case: 439 | Input/Output: [[5.768607552439192 32] 37.76860755243919]
Test Case: 440 | Input/Output: [[69.91842546813103 -67] 2.9184254681310335]
Test Case: 441 | Input/Output: [[93.76137396209575 20] 113.76137396209575]
Test Case: 442 | Input/Output: [[-98.7984492337043 -50] -148.7984492337043]
Test Case: 443 | Input/Output: [[49.909940415267016 -49] 0.9099404152670161]
Test Case: 444 | Input/Output: [[87.29166576035007 -5] 82.29166576035007]
Test Case: 445 | Input/Output: [[-27.121308120999245 89] 61.878691879000755]
Test Case: 446 | Input/Output: [[47.80090466070192 -59] -11.199095339298083]
Test Case: 447 | Input/Output: [[-73.07556296344202 -32] -105.07556296344202]
Test Case: 448 | Input/Output: [[-4.564525269035784 21] 16.435474730964216]
Test Case: 449 | Input/Output: [[-76.482029977375 36] -40.48202997737501]
Test Case: 450 | Input/Output: [[28.9016737444083 80] 108.9016737444083]
Test Case: 451 | Input/Output: [[-56.973071920699866 74] 17.026928079300134]
Test Case: 452 | Input/Output: [[-85.24715856944896 55] -30.247158569448956]
Test Case: 453 | Input/Output: [[-86.40974293245452 -69] -155.40974293245452]
Test Case: 454 | Input/Output: [[-70.69301321713098 -1] -71.69301321713098]
Test Case: 455 | Input/Output: [[73.70272629265727 54] 127.70272629265727]
Test Case: 456 | Input/Output: [[-47.93401629501726 -92] -139.93401629501727]
Test Case: 457 | Input/Output: [[69.49897269026067 -23] 46.49897269026067]
Test Case: 458 | Input/Output: [[-49.32763255407333 47] -2.3276325540733325]
Test Case: 459 | Input/Output: [[38.75048118124923 -48] -9.249518818750772]
Test Case: 460 | Input/Output: [[59.349763802296934 -23] 36.349763802296934]
Test Case: 461 | Input/Output: [[87.43199973408898 73] 160.43199973408898]
Test Case: 462 | Input/Output: [[77.2078171098662 25] 102.2078171098662]
Test Case: 463 | Input/Output: [[32.193909444910815 10] 42.193909444910815]
Test Case: 464 | Input/Output: [[-48.12858333345853 -68] -116.12858333345852]
Test Case: 465 | Input/Output: [[-44.55705299623578 22] -22.557052996235782]
Test Case: 466 | Input/Output: [[-0.4584881375039487 -28] -28.45848813750395]
Test Case: 467 | Input/Output: [[67.07099053508924 36] 103.07099053508924]
Test Case: 468 | Input/Output: [[86.47453797450743 -71] 15.474537974507427]
Test Case: 469 | Input/Output: [[-68.49177640391757 -5] -73.49177640391757]
Test Case: 470 | Input/Output: [[10.013716687956673 14] 24.013716687956673]
Test Case: 471 | Input/Output: [[37.18762402287851 11] 48.18762402287851]
Test Case: 472 | Input/Output: [[-30.42418519173731 59] 28.57581480826269]
Test Case: 473 | Input/Output: [[-20.139345383460736 14] -6.139345383460736]
Test Case: 474 | Input/Output: [[84.42989178591728 39] 123.42989178591728]
Test Case: 475 | Input/Output: [[-77.25561740245661 71] -6.255617402456608]
Test Case: 476 | Input/Output: [[-59.532644160256986 -50] -109.53264416025698]
Test Case: 477 | Input/Output: [[50.347738374158325 21] 71.34773837415833]
Test Case: 478 | Input/Output: [[0.2210724415624412 60] 60.22107244156244]
Test Case: 479 | Input/Output: [[82.01844478094318 -28] 54.018444780943184]
Test Case: 480 | Input/Output: [[-72.10245260937029 33] -39.10245260937029]
Test Case: 481 | Input/Output: [[91.49851118497295 -60] 31.498511184972955]
Test Case: 482 | Input/Output: [[-65.97720618750915 -5] -70.97720618750915]
Test Case: 483 | Input/Output: [[-97.14970985670223 -32] -129.14970985670223]
Test Case: 484 | Input/Output: [[-17.591766044831473 -82] -99.59176604483147]
Test Case: 485 | Input/Output: [[54.44987487466673 -39] 15.449874874666733]
Test Case: 486 | Input/Output: [[30.461470208275358 0] 30.461470208275358]
Test Case: 487 | Input/Output: [[36.34801059878231 -86] -49.65198940121769]
Test Case: 488 | Input/Output: [[13.501979266794038 -72] -58.49802073320596]
Test Case: 489 | Input/Output: [[-34.09865485206454 -59] -93.09865485206454]
Test Case: 490 | Input/Output: [[-39.77429120946692 5] -34.77429120946692]
Test Case: 491 | Input/Output: [[86.08880570717761 57] 143.0888057071776]
Test Case: 492 | Input/Output: [[30.48106513930469 51] 81.48106513930469]
Test Case: 493 | Input/Output: [[-90.89823238608645 -91] -181.89823238608645]
Test Case: 494 | Input/Output: [[42.02657595365264 27] 69.02657595365264]
Test Case: 495 | Input/Output: [[-55.30091653437661 44] -11.300916534376611]
Test Case: 496 | Input/Output: [[28.5400886588408 -67] -38.4599113411592]
Test Case: 497 | Input/Output: [[47.0301258583134 -17] 30.030125858313397]
Test Case: 498 | Input/Output: [[-3.8623067098549058 43] 39.137693290145094]
Test Case: 499 | Input/Output: [[-42.13379360668903 -7] -49.13379360668903]
Test Case: 500 | Input/Output: [[-18.651874020980202 30] 11.348125979019798]
Test Case: 501 | Input/Output: [[-71.91757667746535 44] -27.917576677465348]
Test Case: 502 | Input/Output: [[-9.82085885113284 40] 30.17914114886716]
Test Case: 503 | Input/Output: [[-31.97395474900526 -96] -127.97395474900526]
Test Case: 504 | Input/Output: [[-57.02415077826113 12] -45.02415077826113]
Test Case: 505 | Input/Output: [[50.50494728478958 37] 87.50494728478958]
Test Case: 506 | Input/Output: [[-23.338372410793255 75] 51.661627589206745]
Test Case: 507 | Input/Output: [[98.35815487978644 -74] 24.35815487978644]
Test Case: 508 | Input/Output: [[91.07375126249246 12] 103.07375126249246]
Test Case: 509 | Input/Output: [[96.19700223440256 -48] 48.19700223440256]
Test Case: 510 | Input/Output: [[-84.5990307522809 27] -57.599030752280896]
Test Case: 511 | Input/Output: [[26.34860942791029 -86] -59.65139057208971]
Test Case: 512 | Input/Output: [[-22.21518277136431 49] 26.78481722863569]
Test Case: 513 | Input/Output: [[-91.05673329002086 97] 5.943266709979142]
Test Case: 514 | Input/Output: [[42.334082648538896 52] 94.3340826485389]
Test Case: 515 | Input/Output: [[-33.873306702187776 14] -19.873306702187776]
Test Case: 516 | Input/Output: [[46.21001460495617 -94] -47.78998539504383]
Test Case: 517 | Input/Output: [[54.673006713155615 29] 83.67300671315562]
Test Case: 518 | Input/Output: [[-65.3079875585567 -8] -73.3079875585567]
Test Case: 519 | Input/Output: [[-69.07485320151876 -83] -152.07485320151875]
Test Case: 520 | Input/Output: [[-79.90650903367617 92] 12.093490966323827]
Test Case: 521 | Input/Output: [[52.36022038169335 28] 80.36022038169335]
Test Case: 522 | Input/Output: [[70.88638896708665 -17] 53.886388967086646]
Test Case: 523 | Input/Output: [[27.355087507773447 32] 59.35508750777345]
Test Case: 524 | Input/Output: [[58.823089964269684 -2] 56.823089964269684]
Test Case: 525 | Input/Output: [[-18.341911321089427 -66] -84.34191132108943]
Test Case: 526 | Input/Output: [[51.70314142691683 -38] 13.70314142691683]
Test Case: 527 | Input/Output: [[19.79882220225599 19] 38.79882220225599]
Test Case: 528 | Input/Output: [[-14.231232898008201 -40] -54.2312328980082]
Test Case: 529 | Input/Output: [[72.93860220286953 26] 98.93860220286953]
Test Case: 530 | Input/Output: [[-25.079158013599724 -84] -109.07915801359972]
Test Case: 531 | Input/Output: [[-21.898342388390006 5] -16.898342388390006]
Test Case: 532 | Input/Output: [[-33.12756290215407 -72] -105.12756290215407]
Test Case: 533 | Input/Output: [[-82.52445803297994 -31] -113.52445803297994]
Test Case: 534 | Input/Output: [[-96.7491425958524 -40] -136.7491425958524]
Test Case: 535 | Input/Output: [[-45.943950046699086 -90] -135.9439500466991]
Test Case: 536 | Input/Output: [[22.984475555463348 -17] 5.984475555463348]
Test Case: 537 | Input/Output: [[89.3529685458 -16] 73.3529685458]
Test Case: 538 | Input/Output: [[48.05370525687209 94] 142.0537052568721]
Test Case: 539 | Input/Output: [[-53.644633770523996 -59] -112.644633770524]
Test Case: 540 | Input/Output: [[-50.092067881108825 -61] -111.09206788110882]
Test Case: 541 | Input/Output: [[94.31821063924062 98] 192.31821063924062]
Test Case: 542 | Input/Output: [[-81.49787237216535 -45] -126.49787237216535]
Test Case: 543 | Input/Output: [[-24.76752261101423 94] 69.23247738898577]
Test Case: 544 | Input/Output: [[-20.77107641083053 -26] -46.77107641083053]
Test Case: 545 | Input/Output: [[57.86411473025274 -3] 54.86411473025274]
Test Case: 546 | Input/Output: [[-31.90040327662335 22] -9.90040327662335]
Test Case: 547 | Input/Output: [[50.725994579068015 21] 71.72599457906801]
Test Case: 548 | Input/Output: [[-82.34022382974175 -25] -107.34022382974175]
Test Case: 549 | Input/Output: [[86.7288564332444 -52] 34.7288564332444]
Test Case: 550 | Input/Output: [[-40.94973395976025 76] 35.05026604023975]
Test Case: 551 | Input/Output: [[76.64145731554166 -9] 67.64145731554166]
Test Case: 552 | Input/Output: [[-65.31154606910181 44] -21.31154606910181]
Test Case: 553 | Input/Output: [[62.099698427142755 -94] -31.900301572857245]
Test Case: 554 | Input/Output: [[-68.56965614396063 79] 10.430343856039372]
Test Case: 555 | Input/Output: [[-7.6113558285410505 -20] -27.61135582854105]
Test Case: 556 | Input/Output: [[71.32020843444374 -19] 52.32020843444374]
Test Case: 557 | Input/Output: [[93.38350276960301 -6] 87.38350276960301]
Test Case: 558 | Input/Output: [[-69.26820187973419 -100] -169.2682018797342]
Test Case: 559 | Input/Output: [[-69.64095038693202 -74] -143.64095038693202]
Test Case: 560 | Input/Output: [[-23.195849807519053 -48] -71.19584980751905]
Test Case: 561 | Input/Output: [[44.28707484703912 -51] -6.712925152960878]
Test Case: 562 | Input/Output: [[-16.711668878425925 43] 26.288331121574075]
Test Case: 563 | Input/Output: [[55.09080400226679 -75] -19.909195997733207]
Test Case: 564 | Input/Output: [[84.66043046025834 -46] 38.66043046025834]
Test Case: 565 | Input/Output: [[67.18109996874628 -44] 23.18109996874628]
Test Case: 566 | Input/Output: [[-39.90954928179089 -90] -129.90954928179087]
Test Case: 567 | Input/Output: [[-20.64983970554097 -33] -53.64983970554097]
Test Case: 568 | Input/Output: [[72.65982581411532 73] 145.65982581411532]
Test Case: 569 | Input/Output: [[1.1861009558990645 3] 4.1861009558990645]
Test Case: 570 | Input/Output: [[22.52749183035654 -84] -61.47250816964346]
Test Case: 571 | Input/Output: [[-70.70799418548992 9] -61.70799418548992]
Test Case: 572 | Input/Output: [[77.14106351771281 -74] 3.1410635177128086]
Test Case: 573 | Input/Output: [[63.10912816143258 62] 125.10912816143258]
Test Case: 574 | Input/Output: [[0.9322733653731774 -97] -96.06772663462682]
Test Case: 575 | Input/Output: [[-70.65777130507351 100] 29.34222869492649]
Test Case: 576 | Input/Output: [[58.198677769561414 -94] -35.801322230438586]
Test Case: 577 | Input/Output: [[-89.7561664996869 4] -85.7561664996869]
Test Case: 578 | Input/Output: [[-36.45219309225014 9] -27.45219309225014]
Test Case: 579 | Input/Output: [[34.05965394235645 -79] -44.94034605764355]
Test Case: 580 | Input/Output: [[50.424890091309294 81] 131.4248900913093]
Test Case: 581 | Input/Output: [[-74.0059431169943 -59] -133.0059431169943]
Test Case: 582 | Input/Output: [[0.21860793966115466 77] 77.21860793966115]
Test Case: 583 | Input/Output: [[98.306382448529 -18] 80.306382448529]
Test Case: 584 | Input/Output: [[-5.964768980626275 -11] -16.964768980626275]
Test Case: 585 | Input/Output: [[-66.88601732974229 63] -3.8860173297422875]
Test Case: 586 | Input/Output: [[-96.28363232220866 0] -96.28363232220866]
Test Case: 587 | Input/Output: [[-31.287096828158838 71] 39.71290317184116]
Test Case: 588 | Input/Output: [[30.940090866932564 42] 72.94009086693256]
Test Case: 589 | Input/Output: [[-14.941047081093913 56] 41.05895291890609]
Test Case: 590 | Input/Output: [[93.81368904354699 -97] -3.1863109564530134]
Test Case: 591 | Input/Output: [[-5.792900992979071 54] 48.20709900702093]
Test Case: 592 | Input/Output: [[23.987249340155145 77] 100.98724934015515]
Test Case: 593 | Input/Output: [[16.258955325216974 -31] -14.741044674783026]
Test Case: 594 | Input/Output: [[-20.73577950903764 -73] -93.73577950903764]
Test Case: 595 | Input/Output: [[-31.876471568335333 19] -12.876471568335333]
Test Case: 596 | Input/Output: [[-66.90589460471537 22] -44.90589460471537]
Test Case: 597 | Input/Output: [[18.19117321916184 34] 52.19117321916184]
Test Case: 598 | Input/Output: [[33.629445695205305 77] 110.6294456952053]
Test Case: 599 | Input/Output: [[-24.113946825448252 -14] -38.11394682544825]
Test Case: 600 | Input/Output: [[73.03141489012319 -92] -18.968585109876813]
Test Case: 601 | Input/Output: [[76.22079652524766 9] 85.22079652524766]
Test Case: 602 | Input/Output: [[-9.371383055113697 -15] -24.371383055113697]
Test Case: 603 | Input/Output: [[-68.67033427165332 -93] -161.6703342716533]
Test Case: 604 | Input/Output: [[71.05524495214937 95] 166.05524495214937]
Test Case: 605 | Input/Output: [[63.185263907060886 -2] 61.185263907060886]
Test Case: 606 | Input/Output: [[92.76330560194916 93] 185.76330560194916]
Test Case: 607 | Input/Output: [[33.348158324016 84] 117.348158324016]
Test Case: 608 | Input/Output: [[-99.50843938946736 3] -96.50843938946736]
Test Case: 609 | Input/Output: [[11.01519219482907 15] 26.01519219482907]
Test Case: 610 | Input/Output: [[-48.17011009141119 -82] -130.17011009141117]
Test Case: 611 | Input/Output: [[57.84060183194663 86] 143.84060183194663]
Test Case: 612 | Input/Output: [[-79.46429217995241 -54] -133.4642921799524]
Test Case: 613 | Input/Output: [[34.59317608694289 -55] -20.40682391305711]
Test Case: 614 | Input/Output: [[61.82049170399651 90] 151.8204917039965]
Test Case: 615 | Input/Output: [[-26.65348974812352 0] -26.65348974812352]
Test Case: 616 | Input/Output: [[89.61132645517779 -49] 40.61132645517779]
Test Case: 617 | Input/Output: [[-26.293987264177645 99] 72.70601273582236]
Test Case: 618 | Input/Output: [[80.91094257462146 27] 107.91094257462146]
Test Case: 619 | Input/Output: [[66.14650515534274 77] 143.14650515534274]
Test Case: 620 | Input/Output: [[-37.586417771258 17] -20.586417771258]
Test Case: 621 | Input/Output: [[91.94478048658144 6] 97.94478048658144]
Test Case: 622 | Input/Output: [[-11.989902058603576 -12] -23.989902058603576]
Test Case: 623 | Input/Output: [[7.260872929607672 -21] -13.739127070392328]
Test Case: 624 | Input/Output: [[84.62370856892639 -19] 65.62370856892639]
Test Case: 625 | Input/Output: [[-94.76397208004887 -8] -102.76397208004887]
Test Case: 626 | Input/Output: [[46.972248408075785 -37] 9.972248408075785]
Test Case: 627 | Input/Output: [[45.32887802658075 20] 65.32887802658075]
Test Case: 628 | Input/Output: [[-65.16288068681735 -2] -67.16288068681735]
Test Case: 629 | Input/Output: [[43.84113606265049 -20] 23.84113606265049]
Test Case: 630 | Input/Output: [[96.89650516524722 -38] 58.89650516524722]
Test Case: 631 | Input/Output: [[-84.28939999660909 58] -26.28939999660909]
Test Case: 632 | Input/Output: [[88.50266976696827 -55] 33.50266976696827]
Test Case: 633 | Input/Output: [[29.639801895486613 81] 110.63980189548661]
Test Case: 634 | Input/Output: [[-1.4861966879248882 -90] -91.48619668792489]
Test Case: 635 | Input/Output: [[-7.496621261952427 28] 20.503378738047573]
Test Case: 636 | Input/Output: [[-99.77303176710525 6] -93.77303176710525]
Test Case: 637 | Input/Output: [[9.89748566249493 -97] -87.10251433750507]
Test Case: 638 | Input/Output: [[-44.709351712223146 -3] -47.709351712223146]
Test Case: 639 | Input/Output: [[20.024712152299756 -24] -3.975287847700244]
Test Case: 640 | Input/Output: [[47.15460428145343 46] 93.15460428145343]
Test Case: 641 | Input/Output: [[45.94291094750784 0] 45.94291094750784]
Test Case: 642 | Input/Output: [[-57.900631339968655 -34] -91.90063133996865]
Test Case: 643 | Input/Output: [[-44.48889410707297 54] 9.511105892927027]
Test Case: 644 | Input/Output: [[-22.916275594417158 10] -12.916275594417158]
Test Case: 645 | Input/Output: [[-36.765686805254646 87] 50.234313194745354]
Test Case: 646 | Input/Output: [[-56.18441154319491 -24] -80.18441154319491]
Test Case: 647 | Input/Output: [[48.64819806909708 89] 137.64819806909708]
Test Case: 648 | Input/Output: [[-94.08212040322879 -16] -110.08212040322879]
Test Case: 649 | Input/Output: [[63.346209054470705 40] 103.3462090544707]
Test Case: 650 | Input/Output: [[93.53853191651936 24] 117.53853191651936]
Test Case: 651 | Input/Output: [[-32.73574927578153 27] -5.735749275781529]
Test Case: 652 | Input/Output: [[-45.74879571599231 68] 22.25120428400769]
Test Case: 653 | Input/Output: [[97.61459758743453 -41] 56.61459758743453]
Test Case: 654 | Input/Output: [[-35.461566261597994 15] -20.461566261597994]
Test Case: 655 | Input/Output: [[-19.596817197863572 -72] -91.59681719786357]
Test Case: 656 | Input/Output: [[31.714113594532904 73] 104.7141135945329]
Test Case: 657 | Input/Output: [[27.26242661572627 49] 76.26242661572627]
Test Case: 658 | Input/Output: [[94.46520328503226 65] 159.46520328503226]
Test Case: 659 | Input/Output: [[46.796035708354225 -1] 45.796035708354225]
Test Case: 660 | Input/Output: [[35.76450335055381 -47] -11.23549664944619]
Test Case: 661 | Input/Output: [[-25.910364250414958 88] 62.08963574958504]
Test Case: 662 | Input/Output: [[-53.364353898198644 15] -38.364353898198644]
Test Case: 663 | Input/Output: [[-65.32920465103558 88] 22.67079534896442]
Test Case: 664 | Input/Output: [[59.591324758470535 23] 82.59132475847053]
Test Case: 665 | Input/Output: [[14.10381233457639 27] 41.10381233457639]
Test Case: 666 | Input/Output: [[47.91127098046749 -64] -16.088729019532508]
Test Case: 667 | Input/Output: [[51.82342588360609 -85] -33.17657411639391]
Test Case: 668 | Input/Output: [[36.46776932277464 -77] -40.53223067722536]
Test Case: 669 | Input/Output: [[32.68202010506326 7] 39.68202010506326]
Test Case: 670 | Input/Output: [[-82.677302088049 74] -8.677302088049004]
Test Case: 671 | Input/Output: [[92.62582329115875 -58] 34.62582329115875]
Test Case: 672 | Input/Output: [[62.66888315367504 -72] -9.33111684632496]
Test Case: 673 | Input/Output: [[-35.37193060925539 -89] -124.37193060925539]
Test Case: 674 | Input/Output: [[-13.508213472329729 -98] -111.50821347232973]
Test Case: 675 | Input/Output: [[-68.22282251106493 84] 15.777177488935067]
Test Case: 676 | Input/Output: [[34.73532435241023 -97] -62.26467564758977]
Test Case: 677 | Input/Output: [[93.58891109967595 -55] 38.588911099675954]
Test Case: 678 | Input/Output: [[-25.19914140320327 30] 4.800858596796729]
Test Case: 679 | Input/Output: [[30.78182496813446 53] 83.78182496813446]
Test Case: 680 | Input/Output: [[-43.147609501901684 -61] -104.14760950190168]
Test Case: 681 | Input/Output: [[29.31940801927334 45] 74.31940801927334]
Test Case: 682 | Input/Output: [[-64.2147349871857 72] 7.785265012814307]
Test Case: 683 | Input/Output: [[-80.80051344580097 -20] -100.80051344580097]
Test Case: 684 | Input/Output: [[-30.342996368968755 39] 8.657003631031245]
Test Case: 685 | Input/Output: [[-56.45993542153431 25] -31.45993542153431]
Test Case: 686 | Input/Output: [[-28.63673140853456 22] -6.636731408534558]
Test Case: 687 | Input/Output: [[8.779960615505189 -65] -56.22003938449481]
Test Case: 688 | Input/Output: [[69.56294827475958 -87] -17.437051725240423]
Test Case: 689 | Input/Output: [[-50.06274011856304 -17] -67.06274011856304]
Test Case: 690 | Input/Output: [[-79.46982527379467 78] -1.4698252737946689]
Test Case: 691 | Input/Output: [[-44.30532728844652 -37] -81.30532728844652]
Test Case: 692 | Input/Output: [[64.73216488641597 -5] 59.73216488641597]
Test Case: 693 | Input/Output: [[72.9412255232319 73] 145.9412255232319]
Test Case: 694 | Input/Output: [[-5.779586043926102 -51] -56.7795860439261]
Test Case: 695 | Input/Output: [[-80.29086284839858 89] 8.709137151601425]
Test Case: 696 | Input/Output: [[84.71504070222196 85] 169.71504070222196]
Test Case: 697 | Input/Output: [[3.1532594499701787 -46] -42.84674055002982]
Test Case: 698 | Input/Output: [[58.387283754792264 -97] -38.612716245207736]
Test Case: 699 | Input/Output: [[-68.5987983115239 11] -57.59879831152389]
Test Case: 700 | Input/Output: [[70.595275013557 -28] 42.595275013557]
Test Case: 701 | Input/Output: [[-91.04467798326982 17] -74.04467798326982]
Test Case: 702 | Input/Output: [[11.557308208755089 2] 13.557308208755089]
Test Case: 703 | Input/Output: [[30.335807724403026 -51] -20.664192275596974]
Test Case: 704 | Input/Output: [[95.75542925503882 -73] 22.75542925503882]
Test Case: 705 | Input/Output: [[-27.913049427668682 -37] -64.91304942766868]
Test Case: 706 | Input/Output: [[86.05121871373726 74] 160.05121871373726]
Test Case: 707 | Input/Output: [[79.67910683037493 -62] 17.679106830374934]
Test Case: 708 | Input/Output: [[52.4060233194495 -56] -3.5939766805504973]
Test Case: 709 | Input/Output: [[84.34393524066354 20] 104.34393524066354]
Test Case: 710 | Input/Output: [[19.84533546437474 32] 51.84533546437474]
Test Case: 711 | Input/Output: [[-19.57216152799559 -52] -71.57216152799559]
Test Case: 712 | Input/Output: [[-90.297673019306 35] -55.297673019306]
Test Case: 713 | Input/Output: [[66.982780205332 -41] 25.982780205332006]
Test Case: 714 | Input/Output: [[2.3909701843205795 73] 75.39097018432058]
Test Case: 715 | Input/Output: [[-59.94579033306211 0] -59.94579033306211]
Test Case: 716 | Input/Output: [[44.69973735653244 25] 69.69973735653244]
Test Case: 717 | Input/Output: [[85.27021039302983 -61] 24.270210393029828]
Test Case: 718 | Input/Output: [[55.16087788524587 59] 114.16087788524587]
Test Case: 719 | Input/Output: [[43.684105667741704 68] 111.6841056677417]
Test Case: 720 | Input/Output: [[31.136493725161415 13] 44.136493725161415]
Test Case: 721 | Input/Output: [[66.87151274511939 -60] 6.871512745119389]
Test Case: 722 | Input/Output: [[-47.64856686576942 85] 37.35143313423058]
Test Case: 723 | Input/Output: [[-56.444328708006154 -28] -84.44432870800615]
Test Case: 724 | Input/Output: [[-25.994090109133012 62] 36.00590989086699]
Test Case: 725 | Input/Output: [[45.07120743367474 21] 66.07120743367474]
Test Case: 726 | Input/Output: [[-13.180840102207128 25] 11.819159897792872]
Test Case: 727 | Input/Output: [[-37.58356464845889 13] -24.58356464845889]
Test Case: 728 | Input/Output: [[84.77412076552415 73] 157.77412076552415]
Test Case: 729 | Input/Output: [[2.183020344097571 43] 45.18302034409757]
Test Case: 730 | Input/Output: [[-61.71086013947378 49] -12.71086013947378]
Test Case: 731 | Input/Output: [[37.562227040623355 -17] 20.562227040623355]
Test Case: 732 | Input/Output: [[0.3916291698314467 70] 70.39162916983145]
Test Case: 733 | Input/Output: [[86.00994164866901 86] 172.009941648669]
Test Case: 734 | Input/Output: [[-77.23965202007166 -23] -100.23965202007166]
Test Case: 735 | Input/Output: [[81.28355978117946 -66] 15.283559781179463]
Test Case: 736 | Input/Output: [[-75.5882709578749 6] -69.5882709578749]
Test Case: 737 | Input/Output: [[-58.79725310170538 77] 18.20274689829462]
Test Case: 738 | Input/Output: [[-84.0572248147094 -45] -129.0572248147094]
Test Case: 739 | Input/Output: [[-40.86692094718381 -98] -138.86692094718381]
Test Case: 740 | Input/Output: [[-22.337601160020483 65] 42.66239883997952]
Test Case: 741 | Input/Output: [[-35.21521569477011 -34] -69.21521569477011]
Test Case: 742 | Input/Output: [[-30.9035696436585 1] -29.9035696436585]
Test Case: 743 | Input/Output: [[6.096732204394868 31] 37.09673220439487]
Test Case: 744 | Input/Output: [[62.9053717416007 82] 144.9053717416007]
Test Case: 745 | Input/Output: [[-37.80061510047281 36] -1.800615100472811]
Test Case: 746 | Input/Output: [[-82.02103546374684 85] 2.9789645362531587]
Test Case: 747 | Input/Output: [[1.303767765207155 -73] -71.69623223479284]
Test Case: 748 | Input/Output: [[41.165207995952926 63] 104.16520799595293]
Test Case: 749 | Input/Output: [[-79.35563222662896 84] 4.6443677733710444]
Test Case: 750 | Input/Output: [[-32.33417533429328 95] 62.66582466570672]
Test Case: 751 | Input/Output: [[-89.17864597227026 -23] -112.17864597227026]
Test Case: 752 | Input/Output: [[58.534630138567536 -28] 30.534630138567536]
Test Case: 753 | Input/Output: [[98.47857500076171 -2] 96.47857500076171]
Test Case: 754 | Input/Output: [[0.7038927112867697 -32] -31.29610728871323]
Test Case: 755 | Input/Output: [[19.637154407405873 -91] -71.36284559259413]
Test Case: 756 | Input/Output: [[1.776752783394059 63] 64.77675278339406]
Test Case: 757 | Input/Output: [[67.60657555891342 -48] 19.60657555891342]
Test Case: 758 | Input/Output: [[-75.20989432004282 -8] -83.20989432004282]
Test Case: 759 | Input/Output: [[31.834966483440724 57] 88.83496648344072]
Test Case: 760 | Input/Output: [[-5.986507612806832 39] 33.01349238719317]
Test Case: 761 | Input/Output: [[-21.543897959886934 -31] -52.543897959886934]
Test Case: 762 | Input/Output: [[71.17237070007951 -79] -7.827629299920488]
Test Case: 763 | Input/Output: [[15.933409895355027 -47] -31.066590104644973]
Test Case: 764 | Input/Output: [[-25.30673142980318 88] 62.69326857019682]
Test Case: 765 | Input/Output: [[-81.88670676899491 36] -45.88670676899491]
Test Case: 766 | Input/Output: [[95.90106053672562 -13] 82.90106053672562]
Test Case: 767 | Input/Output: [[98.10227983447291 -23] 75.10227983447291]
Test Case: 768 | Input/Output: [[-95.01872927666857 -18] -113.01872927666857]
Test Case: 769 | Input/Output: [[-94.5994740096817 -25] -119.5994740096817]
Test Case: 770 | Input/Output: [[66.57117217116192 -71] -4.428827828838081]
Test Case: 771 | Input/Output: [[13.359072661563886 98] 111.35907266156389]
Test Case: 772 | Input/Output: [[92.84591767722426 3] 95.84591767722426]
Test Case: 773 | Input/Output: [[-14.803095847178867 -50] -64.80309584717887]
Test Case: 774 | Input/Output: [[87.85968733265551 -11] 76.85968733265551]
Test Case: 775 | Input/Output: [[54.28009919932657 -22] 32.28009919932657]
Test Case: 776 | Input/Output: [[25.93005288651983 -42] -16.06994711348017]
Test Case: 777 | Input/Output: [[42.4176575078057 -63] -20.5823424921943]
Test Case: 778 | Input/Output: [[77.40765354058306 88] 165.40765354058306]
Test Case: 779 | Input/Output: [[32.14060767185393 -15] 17.140607671853928]
Test Case: 780 | Input/Output: [[45.92605539373912 73] 118.92605539373912]
Test Case: 781 | Input/Output: [[-21.24794207923175 43] 21.75205792076825]
Test Case: 782 | Input/Output: [[-23.734721099669585 8] -15.734721099669585]
Test Case: 783 | Input/Output: [[41.3125525331279 68] 109.3125525331279]
Test Case: 784 | Input/Output: [[14.441027095240116 -77] -62.558972904759884]
Test Case: 785 | Input/Output: [[-55.16005397360981 33] -22.160053973609813]
Test Case: 786 | Input/Output: [[-69.52246868359671 5] -64.52246868359671]
Test Case: 787 | Input/Output: [[-90.60633931700318 16] -74.60633931700318]
Test Case: 788 | Input/Output: [[-56.25323413045349 27] -29.253234130453492]
Test Case: 789 | Input/Output: [[37.008279903706295 -21] 16.008279903706295]
Test Case: 790 | Input/Output: [[70.32695885565755 -46] 24.32695885565755]
Test Case: 791 | Input/Output: [[90.64686427431118 86] 176.64686427431118]
Test Case: 792 | Input/Output: [[27.27048583002447 5] 32.27048583002447]
Test Case: 793 | Input/Output: [[-38.72664476815333 54] 15.273355231846672]
Test Case: 794 | Input/Output: [[-43.40607748095755 22] -21.40607748095755]
Test Case: 795 | Input/Output: [[39.58851012598055 -46] -6.411489874019452]
Test Case: 796 | Input/Output: [[-40.663302623144126 37] -3.6633026231441264]
Test Case: 797 | Input/Output: [[-26.674508386157925 -18] -44.674508386157925]
Test Case: 798 | Input/Output: [[-35.01765206008662 -9] -44.01765206008662]
Test Case: 799 | Input/Output: [[3.108102168069891 -36] -32.89189783193011]
Test Case: 800 | Input/Output: [[-91.55097428707741 50] -41.55097428707741]
Test Case: 801 | Input/Output: [[36.76483406410847 85] 121.76483406410847]
Test Case: 802 | Input/Output: [[-57.80900449409134 29] -28.80900449409134]
Test Case: 803 | Input/Output: [[80.22126501068155 -65] 15.221265010681549]
Test Case: 804 | Input/Output: [[45.549211371686965 -89] -43.450788628313035]
Test Case: 805 | Input/Output: [[5.8958984396701055 -70] -64.1041015603299]
Test Case: 806 | Input/Output: [[94.309347512924 44] 138.309347512924]
Test Case: 807 | Input/Output: [[-95.34238630378822 74] -21.342386303788217]
Test Case: 808 | Input/Output: [[59.57211943470085 41] 100.57211943470085]
Test Case: 809 | Input/Output: [[-25.66242878653746 73] 47.33757121346254]
Test Case: 810 | Input/Output: [[71.30410963692131 97] 168.3041096369213]
Test Case: 811 | Input/Output: [[83.54188957286928 40] 123.54188957286928]
Test Case: 812 | Input/Output: [[21.64882113144087 89] 110.64882113144087]
Test Case: 813 | Input/Output: [[73.0609726012689 -81] -7.939027398731099]
Test Case: 814 | Input/Output: [[-29.5235580507281 6] -23.5235580507281]
Test Case: 815 | Input/Output: [[-36.57716741250434 -41] -77.57716741250434]
Test Case: 816 | Input/Output: [[36.40121705293623 -100] -63.59878294706377]
Test Case: 817 | Input/Output: [[-22.077605810893417 -30] -52.07760581089342]
Test Case: 818 | Input/Output: [[3.8163820545690896 11] 14.81638205456909]
Test Case: 819 | Input/Output: [[-38.581938085932975 -89] -127.58193808593298]
Test Case: 820 | Input/Output: [[-19.83895302909295 61] 41.16104697090705]
Test Case: 821 | Input/Output: [[17.96338199426569 50] 67.96338199426569]
Test Case: 822 | Input/Output: [[-98.63249257941422 96] -2.632492579414219]
Test Case: 823 | Input/Output: [[42.056335613187855 -55] -12.943664386812145]
Test Case: 824 | Input/Output: [[-87.97635533011567 29] -58.976355330115666]
Test Case: 825 | Input/Output: [[62.26568921465338 14] 76.26568921465338]
Test Case: 826 | Input/Output: [[71.68355777401874 22] 93.68355777401874]
Test Case: 827 | Input/Output: [[-55.992991694592575 4] -51.992991694592575]
Test Case: 828 | Input/Output: [[-18.99571138313712 28] 9.00428861686288]
Test Case: 829 | Input/Output: [[-37.068242481209325 29] -8.068242481209325]
Test Case: 830 | Input/Output: [[-31.18769191044433 88] 56.81230808955567]
Test Case: 831 | Input/Output: [[-71.65833826000718 68] -3.6583382600071843]
Test Case: 832 | Input/Output: [[-45.83999221722623 -96] -141.83999221722624]
Test Case: 833 | Input/Output: [[-15.086861819234016 -12] -27.086861819234016]
Test Case: 834 | Input/Output: [[4.612477141130071 18] 22.61247714113007]
Test Case: 835 | Input/Output: [[-52.72931751693726 -61] -113.72931751693726]
Test Case: 836 | Input/Output: [[-52.8030252409651 70] 17.1969747590349]
Test Case: 837 | Input/Output: [[-11.240135025891448 85] 73.75986497410855]
Test Case: 838 | Input/Output: [[34.72373514929416 81] 115.72373514929416]
Test Case: 839 | Input/Output: [[-58.165014133484846 -40] -98.16501413348485]
Test Case: 840 | Input/Output: [[-57.09456427520983 -87] -144.09456427520982]
Test Case: 841 | Input/Output: [[82.3198838138745 -71] 11.319883813874497]
Test Case: 842 | Input/Output: [[-48.57849915369889 -76] -124.57849915369889]
Test Case: 843 | Input/Output: [[32.06013718734536 -99] -66.93986281265464]
Test Case: 844 | Input/Output: [[-93.7519525607948 66] -27.751952560794805]
Test Case: 845 | Input/Output: [[22.96346719144273 -42] -19.03653280855727]
Test Case: 846 | Input/Output: [[13.678714589481118 -76] -62.32128541051888]
Test Case: 847 | Input/Output: [[35.074417241390506 -51] -15.925582758609494]
Test Case: 848 | Input/Output: [[91.45629732935424 43] 134.45629732935424]
Test Case: 849 | Input/Output: [[-77.36599454744726 -28] -105.36599454744726]
Test Case: 850 | Input/Output: [[-77.81491563225083 -23] -100.81491563225083]
Test Case: 851 | Input/Output: [[-40.91780906377682 -21] -61.91780906377682]
Test Case: 852 | Input/Output: [[-66.8336996253704 -27] -93.8336996253704]
Test Case: 853 | Input/Output: [[-43.994961151661194 59] 15.005038848338806]
Test Case: 854 | Input/Output: [[-61.505272784298 51] -10.505272784298]
Test Case: 855 | Input/Output: [[-95.05483811399189 -57] -152.05483811399188]
Test Case: 856 | Input/Output: [[-9.785555901903436 -59] -68.78555590190344]
Test Case: 857 | Input/Output: [[10.481859678216978 20] 30.481859678216978]
Test Case: 858 | Input/Output: [[-99.25340527845843 65] -34.25340527845843]
Test Case: 859 | Input/Output: [[87.79614535230198 54] 141.79614535230198]
Test Case: 860 | Input/Output: [[5.603182414328728 79] 84.60318241432873]
Test Case: 861 | Input/Output: [[-53.94256988294801 -26] -79.942569882948]
Test Case: 862 | Input/Output: [[-49.87304413008415 -84] -133.87304413008417]
Test Case: 863 | Input/Output: [[-56.813828733112715 -46] -102.81382873311271]
Test Case: 864 | Input/Output: [[80.73428357796556 -95] -14.265716422034444]
Test Case: 865 | Input/Output: [[-55.29785030927745 -6] -61.29785030927745]
Test Case: 866 | Input/Output: [[9.8513163828881 93] 102.8513163828881]
Test Case: 867 | Input/Output: [[53.263515085847985 -48] 5.263515085847985]
Test Case: 868 | Input/Output: [[3.9292539026424294 11] 14.92925390264243]
Test Case: 869 | Input/Output: [[-54.40409203445811 -66] -120.4040920344581]
Test Case: 870 | Input/Output: [[-2.557287540920555 -93] -95.55728754092056]
Test Case: 871 | Input/Output: [[75.15547177030979 -28] 47.15547177030979]
Test Case: 872 | Input/Output: [[53.731474692053524 56] 109.73147469205352]
Test Case: 873 | Input/Output: [[86.68357670955771 -38] 48.68357670955771]
Test Case: 874 | Input/Output: [[-99.88202830689829 -31] -130.8820283068983]
Test Case: 875 | Input/Output: [[6.344710289940522 77] 83.34471028994052]
Test Case: 876 | Input/Output: [[-98.02653840319608 -7] -105.02653840319608]
Test Case: 877 | Input/Output: [[-63.99071347123706 38] -25.990713471237058]
Test Case: 878 | Input/Output: [[-38.91589024853981 -49] -87.91589024853981]
Test Case: 879 | Input/Output: [[-84.3061245401685 -49] -133.3061245401685]
Test Case: 880 | Input/Output: [[-25.333224478560325 -33] -58.333224478560325]
Test Case: 881 | Input/Output: [[-82.46590385036242 84] 1.534096149637577]
Test Case: 882 | Input/Output: [[-98.2035935621377 -63] -161.2035935621377]
Test Case: 883 | Input/Output: [[-97.47386944365127 15] -82.47386944365127]
Test Case: 884 | Input/Output: [[-89.98616915121518 94] 4.013830848784821]
Test Case: 885 | Input/Output: [[-26.46041733874904 47] 20.53958266125096]
Test Case: 886 | Input/Output: [[24.56354540198113 74] 98.56354540198113]
Test Case: 887 | Input/Output: [[-37.69807998163157 -33] -70.69807998163157]
Test Case: 888 | Input/Output: [[-21.357213811519273 90] 68.64278618848073]
Test Case: 889 | Input/Output: [[-1.9010513939137894 12] 10.09894860608621]
Test Case: 890 | Input/Output: [[92.1440438123295 58] 150.1440438123295]
Test Case: 891 | Input/Output: [[-80.7659710877062 17] -63.765971087706205]
Test Case: 892 | Input/Output: [[-6.910622899931823 -20] -26.910622899931823]
Test Case: 893 | Input/Output: [[-68.94196864243156 -2] -70.94196864243156]
Test Case: 894 | Input/Output: [[16.607426283484045 -96] -79.39257371651595]
Test Case: 895 | Input/Output: [[-31.65623582769767 -28] -59.65623582769767]
Test Case: 896 | Input/Output: [[-59.27330943232605 96] 36.72669056767395]
Test Case: 897 | Input/Output: [[9.015995181529135 -81] -71.98400481847086]
Test Case: 898 | Input/Output: [[-73.87364004535635 -4] -77.87364004535635]
Test Case: 899 | Input/Output: [[-42.668993241698814 -9] -51.668993241698814]
Test Case: 900 | Input/Output: [[3.270126522636474E-4 -54] -53.999672987347736]
Test Case: 901 | Input/Output: [[-45.653132318308145 -73] -118.65313231830814]
Test Case: 902 | Input/Output: [[-26.25298717187998 -86] -112.25298717187998]
Test Case: 903 | Input/Output: [[-29.19996410548889 21] -8.199964105488888]
Test Case: 904 | Input/Output: [[57.71380883099272 12] 69.71380883099272]
Test Case: 905 | Input/Output: [[31.219868078524144 -26] 5.219868078524144]
Test Case: 906 | Input/Output: [[-52.94625658107637 52] -0.9462565810763692]
Test Case: 907 | Input/Output: [[-56.02454327297461 -42] -98.02454327297461]
Test Case: 908 | Input/Output: [[73.29467293475162 -27] 46.29467293475162]
Test Case: 909 | Input/Output: [[97.47702320596449 31] 128.47702320596449]
Test Case: 910 | Input/Output: [[-33.19098319428859 -56] -89.19098319428859]
Test Case: 911 | Input/Output: [[-86.56838479399536 82] -4.568384793995364]
Test Case: 912 | Input/Output: [[63.61866331044723 -38] 25.618663310447232]
Test Case: 913 | Input/Output: [[-29.00384084422285 -61] -90.00384084422285]
Test Case: 914 | Input/Output: [[-32.65521142915304 -49] -81.65521142915304]
Test Case: 915 | Input/Output: [[-83.15499401509308 38] -45.15499401509308]
Test Case: 916 | Input/Output: [[-83.13290014182783 -78] -161.13290014182783]
Test Case: 917 | Input/Output: [[72.67334428964472 91] 163.67334428964472]
Test Case: 918 | Input/Output: [[72.20551492282374 13] 85.20551492282374]
Test Case: 919 | Input/Output: [[-77.43000632132788 -70] -147.43000632132788]
Test Case: 920 | Input/Output: [[65.43332180973056 49] 114.43332180973056]
Test Case: 921 | Input/Output: [[94.92769339420607 -93] 1.9276933942060737]
Test Case: 922 | Input/Output: [[-22.883880104702598 50] 27.116119895297402]
Test Case: 923 | Input/Output: [[-78.1399941088538 -61] -139.13999410885378]
Test Case: 924 | Input/Output: [[-92.25160032194626 70] -22.251600321946256]
Test Case: 925 | Input/Output: [[66.77183076261238 -29] 37.77183076261238]
Test Case: 926 | Input/Output: [[-50.06966942127222 -52] -102.06966942127222]
Test Case: 927 | Input/Output: [[-29.7655182957632 -8] -37.7655182957632]
Test Case: 928 | Input/Output: [[-60.27018905399737 -35] -95.27018905399737]
Test Case: 929 | Input/Output: [[44.23797633199851 -59] -14.76202366800149]
Test Case: 930 | Input/Output: [[98.14562737041413 29] 127.14562737041413]
Test Case: 931 | Input/Output: [[54.79177402972951 -67] -12.20822597027049]
Test Case: 932 | Input/Output: [[-71.58697837555081 24] -47.586978375550814]
Test Case: 933 | Input/Output: [[23.026831955704296 -35] -11.973168044295704]
Test Case: 934 | Input/Output: [[-16.02056264533529 95] 78.97943735466471]
Test Case: 935 | Input/Output: [[-25.439236234613418 -98] -123.43923623461342]
Test Case: 936 | Input/Output: [[-24.02294766323341 20] -4.02294766323341]
Test Case: 937 | Input/Output: [[16.94347938045979 87] 103.94347938045979]
Test Case: 938 | Input/Output: [[23.94313950395201 87] 110.94313950395201]
Test Case: 939 | Input/Output: [[-71.7182200634835 -8] -79.7182200634835]
Test Case: 940 | Input/Output: [[55.191040750800795 71] 126.1910407508008]
Test Case: 941 | Input/Output: [[64.08499516820112 -98] -33.91500483179888]
Test Case: 942 | Input/Output: [[-26.696915675027228 -33] -59.69691567502723]
Test Case: 943 | Input/Output: [[-70.94253757750377 82] 11.05746242249623]
Test Case: 944 | Input/Output: [[74.1431004503128 -29] 45.1431004503128]
Test Case: 945 | Input/Output: [[19.377046789443185 15] 34.377046789443185]
Test Case: 946 | Input/Output: [[12.487507223315703 -58] -45.5124927766843]
Test Case: 947 | Input/Output: [[-31.012013485822635 -1] -32.012013485822635]
Test Case: 948 | Input/Output: [[-36.37505165493866 98] 61.62494834506134]
Test Case: 949 | Input/Output: [[-66.29070824263184 44] -22.290708242631837]
Test Case: 950 | Input/Output: [[39.58832664496998 -85] -45.41167335503002]
Test Case: 951 | Input/Output: [[-60.38423222267688 -29] -89.38423222267687]
Test Case: 952 | Input/Output: [[-12.833265785945372 -20] -32.83326578594537]
Test Case: 953 | Input/Output: [[-95.46225643598885 -55] -150.46225643598885]
Test Case: 954 | Input/Output: [[-98.17907727002064 65] -33.17907727002064]
Test Case: 955 | Input/Output: [[16.831540838036616 8] 24.831540838036616]
Test Case: 956 | Input/Output: [[-47.52616475279463 -63] -110.52616475279463]
Test Case: 957 | Input/Output: [[-76.82603656025222 65] -11.82603656025222]
Test Case: 958 | Input/Output: [[-84.1360895240549 -75] -159.1360895240549]
Test Case: 959 | Input/Output: [[37.889556145277425 -87] -49.110443854722575]
Test Case: 960 | Input/Output: [[-14.101784543344522 -49] -63.10178454334452]
Test Case: 961 | Input/Output: [[3.634442839508978 10] 13.634442839508978]
Test Case: 962 | Input/Output: [[-4.968057193119861 63] 58.03194280688014]
Test Case: 963 | Input/Output: [[71.48089992556729 -92] -20.519100074432714]
Test Case: 964 | Input/Output: [[-40.20246002616865 -90] -130.20246002616864]
Test Case: 965 | Input/Output: [[-49.254540250778355 -66] -115.25454025077835]
Test Case: 966 | Input/Output: [[47.735211546187315 74] 121.73521154618732]
Test Case: 967 | Input/Output: [[-81.9971783406778 -59] -140.9971783406778]
Test Case: 968 | Input/Output: [[-77.90480761563128 -55] -132.90480761563128]
Test Case: 969 | Input/Output: [[-60.41315628787907 65] 4.586843712120931]
Test Case: 970 | Input/Output: [[8.825405975696015 66] 74.82540597569601]
Test Case: 971 | Input/Output: [[3.3521573164982783 -79] -75.64784268350172]
Test Case: 972 | Input/Output: [[74.57419472675599 -98] -23.42580527324401]
Test Case: 973 | Input/Output: [[0.6639160160036823 35] 35.66391601600368]
Test Case: 974 | Input/Output: [[-9.063147671775454 -23] -32.063147671775454]
Test Case: 975 | Input/Output: [[-24.105419938793602 97] 72.8945800612064]
Test Case: 976 | Input/Output: [[-21.118598622859963 -33] -54.11859862285996]
Test Case: 977 | Input/Output: [[19.080150652600153 81] 100.08015065260015]
Test Case: 978 | Input/Output: [[35.30448864097957 -32] 3.304488640979571]
Test Case: 979 | Input/Output: [[-38.94591939181424 91] 52.05408060818576]
Test Case: 980 | Input/Output: [[83.69730698686536 -41] 42.69730698686536]
Test Case: 981 | Input/Output: [[98.83562583234001 -92] 6.835625832340014]
Test Case: 982 | Input/Output: [[-94.9158175921502 93] -1.915817592150205]
Test Case: 983 | Input/Output: [[-96.10410777563094 -5] -101.10410777563094]
Test Case: 984 | Input/Output: [[31.89953595684517 -66] -34.10046404315483]
Test Case: 985 | Input/Output: [[5.78630690961279 -80] -74.21369309038721]
Test Case: 986 | Input/Output: [[12.559854009161825 -14] -1.4401459908381753]
Test Case: 987 | Input/Output: [[-64.17152328429954 17] -47.17152328429954]
Test Case: 988 | Input/Output: [[67.1984282147514 98] 165.1984282147514]
Test Case: 989 | Input/Output: [[-0.035357824389834036 -89] -89.03535782438983]
Test Case: 990 | Input/Output: [[10.079070162039685 -92] -81.92092983796032]
Test Case: 991 | Input/Output: [[-93.81391747516174 -98] -191.81391747516176]
Test Case: 992 | Input/Output: [[-96.13941973510738 28] -68.13941973510738]
Test Case: 993 | Input/Output: [[38.87486120984158 -4] 34.87486120984158]
Test Case: 994 | Input/Output: [[98.23156410928479 -68] 30.23156410928479]
Test Case: 995 | Input/Output: [[-89.81241729822426 2] -87.81241729822426]
Test Case: 996 | Input/Output: [[32.1653527987302 45] 77.1653527987302]
Test Case: 997 | Input/Output: [[-19.802040885222723 7] -12.802040885222723]
Test Case: 998 | Input/Output: [[0.2042090958768199 28] 28.20420909587682]
Test Case: 999 | Input/Output: [[-32.39968690544221 -50] -82.39968690544221]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 27 -18 112 -119 97 49 115 101 124 -60 113 -24 -43 -77 110 -32
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 54594.0
Test mean error for best: 27.29700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -32.1134451721
Correct output: -69.6373493193 | Program output: -44.6373493193
Correct output: 31.0335568415  | Program output: 92.0335568415 
Correct output: 143.9583761825 | Program output: 93.9583761825 
Correct output: -97.1428066122 | Program output: -52.1428066122
Correct output: 95.7820549849  | Program output: 51.7820549849 
Correct output: -47.2426472388 | Program output: 19.7573527612 
Correct output: -0.182676306   | Program output: -1.182676306  
Correct output: -37.8314809378 | Program output: 53.1685190622 
Correct output: -136.6715639469 | Program output: -98.6715639469
Correct output: -110.4595416311 | Program output: -30.4595416311
Correct output: -93.1960008927 | Program output: -87.1960008927
Correct output: 107.4784528401 | Program output: 32.4784528401 
Correct output: -7.050955449   | Program output: -57.050955449 
Correct output: 18.5076699196  | Program output: -69.4923300804
Correct output: 105.1823113563 | Program output: 8.1823113563  
Correct output: -61.6767169156 | Program output: -40.6767169156
Correct output: 23.0810823921  | Program output: 57.0810823921 
Correct output: -111.6774434108 | Program output: -22.6774434108
Correct output: -8.9375434343  | Program output: 39.0624565657 
Correct output: -58.3282773985 | Program output: -85.3282773985
Correct output: -11.0175155686 | Program output: 77.9824844314 
Correct output: 34.8893323604  | Program output: 8.8893323604  
Correct output: 58.6746845405  | Program output: 53.6746845405 
Correct output: 53.0707001919  | Program output: -39.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1} {:instruction integer_swap} {:instruction 36} {:instruction integer_swap} {:instruction -98.67805871185303} {:instruction 85} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_max} {:instruction float_pop} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_max} {:instruction float_flush} {:instruction float_min} {:instruction integer_dup_times} {:instruction float_flush})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc integer_mod float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736 in1 integer_swap 36 integer_swap -98.67805871185303 85 integer_swap float_dup integer_stackdepth float_yank float_max float_pop float_frominteger integer_dec float_shove integer_swap integer_max float_flush float_min integer_dup_times float_flush)
Errors: [96.0 2 25.0 2 61.0 2 50.0 2 45.0 2 44.0 2 67.0 13 1.0 1 91.0 11 38.0 3 80.0 2 6.0 2 75.0 3 50.0 1 88.0 13 97.0 3 21.0 2 34.0 2 89.0 3 48.0 12 27.0 2 89.0 13 26.0 2 5.0 1 93.0 12]
Total: 1459.0
Mean: 29.18
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 17875.554263899998
Median total errors in population: 25342.0
Error averages by case: (721.8395413 14.162 704.5097465999976 13.301 698.2923626999998 12.48 716.7496172000007 13.282 711.9096738999993 13.182 702.4952430999988 12.45 697.9403457999994 13.916 677.2682554000005 11.772 699.5495561999986 13.701 723.323329 14.096 717.0470279999995 14.116 710.3708081999995 13.172 706.8851710000002 13.17 690.7211168999985 11.665 696.3580031000001 13.173 705.6683169999982 13.175 701.4481350999989 13.35 693.6521888999994 12.443 716.0903958000007 14.095 692.6932853999997 13.16 698.8575827000013 13.296 697.1936697000002 13.839 684.4436735000004 12.454 681.3256799999974 12.437 699.9325374000002 13.102)
Error minima by case: (29.1134 2 0.0136 2 0.0336 2 0.3077 2 1.1428 2 0.0967 2 1.6069 8 0.0 1 0.8315 9 25.3284 2 11.4595 2 1.804 2 7.8989 3 1.2318 1 1.3666 8 5.0 1 0.0302 2 0.9189 2 12.6774 2 1.9118 7 0.5634 2 0.1682 8 1.4345 2 0.7538 1 0.7683 9)
Average genome size in population (length): 51.369
Average program size in population (points): 52.369
Average percent parens in population: 0.042
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.337
Error (vector) diversity:			 0.353
Behavioral diversity:				 0.37
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1287120
--- Timings ---
Current time: 1529614897777 milliseconds
Total Time:           4.0 seconds
Initialization:       0.1 seconds,  2.8%
Reproduction:         0.6 seconds, 14.3%
Fitness Testing:      3.3 seconds, 82.9%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 54594.0
Test mean error for best: 27.29700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -32.1134451721
Correct output: -69.6373493193 | Program output: -44.6373493193
Correct output: 31.0335568415  | Program output: 92.0335568415 
Correct output: 143.9583761825 | Program output: 93.9583761825 
Correct output: -97.1428066122 | Program output: -52.1428066122
Correct output: 95.7820549849  | Program output: 51.7820549849 
Correct output: -47.2426472388 | Program output: 19.7573527612 
Correct output: -0.182676306   | Program output: -1.182676306  
Correct output: -37.8314809378 | Program output: 53.1685190622 
Correct output: -136.6715639469 | Program output: -98.6715639469
Correct output: -110.4595416311 | Program output: -30.4595416311
Correct output: -93.1960008927 | Program output: -87.1960008927
Correct output: 107.4784528401 | Program output: 32.4784528401 
Correct output: -7.050955449   | Program output: -57.050955449 
Correct output: 18.5076699196  | Program output: -69.4923300804
Correct output: 105.1823113563 | Program output: 8.1823113563  
Correct output: -61.6767169156 | Program output: -40.6767169156
Correct output: 23.0810823921  | Program output: 57.0810823921 
Correct output: -111.6774434108 | Program output: -22.6774434108
Correct output: -8.9375434343  | Program output: 39.0624565657 
Correct output: -58.3282773985 | Program output: -85.3282773985
Correct output: -11.0175155686 | Program output: 77.9824844314 
Correct output: 34.8893323604  | Program output: 8.8893323604  
Correct output: 58.6746845405  | Program output: 53.6746845405 
Correct output: 53.0707001919  | Program output: -39.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1} {:instruction integer_swap} {:instruction 36} {:instruction integer_swap} {:instruction -98.67805871185303} {:instruction 85} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_max} {:instruction float_pop} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_max} {:instruction float_flush} {:instruction float_min} {:instruction integer_dup_times} {:instruction float_flush})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc integer_mod float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736 in1 integer_swap 36 integer_swap -98.67805871185303 85 integer_swap float_dup integer_stackdepth float_yank float_max float_pop float_frominteger integer_dec float_shove integer_swap integer_max float_flush float_min integer_dup_times float_flush)
Errors: [96.0 2 25.0 2 61.0 2 50.0 2 45.0 2 44.0 2 67.0 13 1.0 1 91.0 11 38.0 3 80.0 2 6.0 2 75.0 3 50.0 1 88.0 13 97.0 3 21.0 2 34.0 2 89.0 3 48.0 12 27.0 2 89.0 13 26.0 2 5.0 1 93.0 12]
Total: 1459.0
Mean: 29.18
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 6092.424243399995
Median total errors in population: 1954.2298500000002
Error averages by case: (268.8451521 11.691 228.71190130000062 10.894 230.9803097999987 10.237 269.8727071000011 10.951 245.96826530000052 10.69 239.61184360000146 10.216 225.2410916 12.952 185.85474549999995 10.372 231.04325859999994 12.426 270.95561230000055 11.522 257.4122145999989 11.729 242.18100779999887 10.671 250.07416099999935 10.872 204.06786320000145 9.622 221.3145298999996 12.391 248.950774999997 10.679 222.49031390000158 11.016 216.6173671000012 10.254 258.08416079999705 11.541 210.67460479999994 12.32 221.16069439999842 10.978 226.57958810000014 12.793 200.02570930000113 10.172 205.836773700001 10.172 230.52659260000019 12.182)
Error minima by case: (29.1134 2 0.0136 2 0.0336 2 0.3077 2 1.1428 2 0.0967 2 1.6069 8 0.0 0 0.8315 9 25.3284 2 14.4595 2 1.804 2 11.7931 3 0.841 1 2.4923 8 5.0 1 0.0302 2 2.0811 2 15.6774 2 1.9118 7 3.3283 2 0.1682 6 2.5699 2 0.7538 1 0.0707 9)
Average genome size in population (length): 59.13
Average program size in population (points): 60.13
Average percent parens in population: 0.022
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.509
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.752
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.752
Total error diversity:				 0.289
Error (vector) diversity:			 0.297
Behavioral diversity:				 0.319
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2768420
--- Timings ---
Current time: 1529614903009 milliseconds
Total Time:           9.5 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.6 seconds, 37.3%
Fitness Testing:      5.0 seconds, 52.0%
Report:               0.9 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 54594.0
Test mean error for best: 27.29700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -32.1134451721
Correct output: -69.6373493193 | Program output: -44.6373493193
Correct output: 31.0335568415  | Program output: 92.0335568415 
Correct output: 143.9583761825 | Program output: 93.9583761825 
Correct output: -97.1428066122 | Program output: -52.1428066122
Correct output: 95.7820549849  | Program output: 51.7820549849 
Correct output: -47.2426472388 | Program output: 19.7573527612 
Correct output: -0.182676306   | Program output: -1.182676306  
Correct output: -37.8314809378 | Program output: 53.1685190622 
Correct output: -136.6715639469 | Program output: -98.6715639469
Correct output: -110.4595416311 | Program output: -30.4595416311
Correct output: -93.1960008927 | Program output: -87.1960008927
Correct output: 107.4784528401 | Program output: 32.4784528401 
Correct output: -7.050955449   | Program output: -57.050955449 
Correct output: 18.5076699196  | Program output: -69.4923300804
Correct output: 105.1823113563 | Program output: 8.1823113563  
Correct output: -61.6767169156 | Program output: -40.6767169156
Correct output: 23.0810823921  | Program output: 57.0810823921 
Correct output: -111.6774434108 | Program output: -22.6774434108
Correct output: -8.9375434343  | Program output: 39.0624565657 
Correct output: -58.3282773985 | Program output: -85.3282773985
Correct output: -11.0175155686 | Program output: 77.9824844314 
Correct output: 34.8893323604  | Program output: 8.8893323604  
Correct output: 58.6746845405  | Program output: 53.6746845405 
Correct output: 53.0707001919  | Program output: -39.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_stackdepth} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction print_float} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1} {:instruction integer_swap} {:instruction 36} {:instruction integer_swap} {:instruction -98.67805871185303} {:instruction 85} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction float_yank} {:instruction float_max} {:instruction float_pop} {:instruction float_frominteger} {:instruction integer_dec} {:instruction float_shove} {:instruction integer_swap} {:instruction integer_max} {:instruction float_flush} {:instruction float_min} {:instruction integer_dup_times} {:instruction float_flush})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_stackdepth float_flush float_cos integer_dup float_inc integer_mod float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub print_float integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736 in1 integer_swap 36 integer_swap -98.67805871185303 85 integer_swap float_dup integer_stackdepth float_yank float_max float_pop float_frominteger integer_dec float_shove integer_swap integer_max float_flush float_min integer_dup_times float_flush)
Errors: [96.0 2 25.0 2 61.0 2 50.0 2 45.0 2 44.0 2 67.0 13 1.0 1 91.0 11 38.0 3 80.0 2 6.0 2 75.0 3 50.0 1 88.0 13 97.0 3 21.0 2 34.0 2 89.0 3 48.0 12 27.0 2 89.0 13 26.0 2 5.0 1 93.0 12]
Total: 1459.0
Mean: 29.18
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4539.10366100001
Median total errors in population: 1497.0
Error averages by case: (202.64190620000025 7.027 155.22602840000025 6.211 185.41371859999947 6.045 181.1509955000005 6.591 171.29780870000025 6.17 167.26126980000018 5.848 177.1046536000003 13.063 123.18016459999973 9.022 198.55500199999994 12.276 176.90366310000024 6.644 190.9946835999995 7.256 151.9380973999997 6.157 185.04079939999963 6.775 168.85159560000068 5.686 196.43282740000058 13.189 195.28260399999903 5.852 151.5210471000002 6.353 160.84933070000017 6.006 195.57766819999912 7.017 166.1906100000001 12.388 161.31410769999937 6.248 200.46091730000055 13.286 144.86542839999981 5.864 136.14809830000053 5.452 196.09263539999964 12.382)
Error minima by case: (29.1134 2 17.6373 2 14.9664 2 45.9584 2 5.1428 2 9.7821 2 3.2426 8 0.0 0 6.1685 9 38.0 2 27.4595 2 6.0 2 22.4785 3 0.841 1 15.5077 8 5.0 1 17.6767 2 20.0811 2 19.6774 2 1.9118 7 14.3283 2 0.1682 6 8.8893 2 2.0 1 7.0707 8)
Average genome size in population (length): 53.572
Average program size in population (points): 54.572
Average percent parens in population: 0.024
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.0115
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.124
Error (vector) diversity:			 0.13
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4109855
--- Timings ---
Current time: 1529614907051 milliseconds
Total Time:          13.4 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.1 seconds, 38.4%
Fitness Testing:      6.7 seconds, 49.7%
Report:               1.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 54642.0
Test mean error for best: 27.32100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -34.1134451721
Correct output: -69.6373493193 | Program output: -46.6373493193
Correct output: 31.0335568415  | Program output: 90.0335568415 
Correct output: 143.9583761825 | Program output: 91.9583761825 
Correct output: -97.1428066122 | Program output: -54.1428066122
Correct output: 95.7820549849  | Program output: 49.7820549849 
Correct output: -47.2426472388 | Program output: 17.7573527612 
Correct output: -0.182676306   | Program output: -3.182676306  
Correct output: -37.8314809378 | Program output: 51.1685190622 
Correct output: -136.6715639469 | Program output: -100.6715639469
Correct output: -110.4595416311 | Program output: -32.4595416311
Correct output: -93.1960008927 | Program output: -89.1960008927
Correct output: 107.4784528401 | Program output: 30.4784528401 
Correct output: -7.050955449   | Program output: -59.050955449 
Correct output: 18.5076699196  | Program output: -71.4923300804
Correct output: 105.1823113563 | Program output: 6.1823113563  
Correct output: -61.6767169156 | Program output: -42.6767169156
Correct output: 23.0810823921  | Program output: 55.0810823921 
Correct output: -111.6774434108 | Program output: -24.6774434108
Correct output: -8.9375434343  | Program output: 37.0624565657 
Correct output: -58.3282773985 | Program output: -87.3282773985
Correct output: -11.0175155686 | Program output: 75.9824844314 
Correct output: 34.8893323604  | Program output: 6.8893323604  
Correct output: 58.6746845405  | Program output: 51.6746845405 
Correct output: 53.0707001919  | Program output: -41.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1} {:instruction integer_swap} {:instruction 36} {:instruction integer_swap} {:instruction -98.67805871185303} {:instruction 85} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_stackdepth})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc integer_sub float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736 in1 integer_swap 36 integer_swap -98.67805871185303 85 integer_swap float_dup integer_stackdepth)
Errors: [94.0 3 23.0 2 59.0 2 52.0 3 43.0 2 46.0 2 65.0 12 3.0 1 89.0 12 36.0 2 78.0 3 4.0 2 77.0 2 52.0 2 90.0 13 99.0 3 19.0 2 32.0 2 87.0 3 46.0 12 29.0 2 87.0 13 28.0 2 7.0 1 95.0 13]
Total: 1456.0
Mean: 29.12
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 4296.8232386
Median total errors in population: 1477.0
Error averages by case: (204.847852 4.194 142.4508676 3.539 172.93047589999998 3.433 160.72994140000003 4.032 160.00247699999997 3.58 154.92582670000004 3.391 178.20997240000003 13.304 117.7780209 6.499 199.2718963 12.166 154.3486772 3.972 190.7410829 4.208 127.27808739999999 3.56 182.14259389999998 4.376 160.99839620000003 3.075 194.3020099 13.317 201.49766260000007 3.335 138.91200590000005 3.542 149.21398950000003 3.447 198.6542847 4.461 161.3717918 12.414 141.2986566 3.532 197.3556568 13.415 138.82483459999997 3.4 120.81660940000002 2.552 198.752569 12.423)
Error minima by case: (65.8866 2 14.6373 2 3.1866 1 45.9584 2 2.1428 2 9.7821 2 44.2699 9 0.0 0 36.021 8 36.0 2 51.5405 2 4.0 2 37.5215 2 5.124 1 9.3393 8 58.1823 1 14.6767 1 4.7659 2 68.3226 2 5.962 7 12.7021 2 8.8897 10 7.0424 2 2.0 1 6.0707 9)
Average genome size in population (length): 51.604
Average program size in population (points): 52.604
Average percent parens in population: 0.026
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.542
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 94
Genome diversity (% unique Plush genomes):	 0.638
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 94
Syntactic diversity (% unique Push programs):	 0.638
Total error diversity:				 0.044
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5401290
--- Timings ---
Current time: 1529614910868 milliseconds
Total Time:          17.4 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         6.7 seconds, 38.4%
Fitness Testing:      8.4 seconds, 48.2%
Report:               2.2 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 54642.0
Test mean error for best: 27.32100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -34.1134451721
Correct output: -69.6373493193 | Program output: -46.6373493193
Correct output: 31.0335568415  | Program output: 90.0335568415 
Correct output: 143.9583761825 | Program output: 91.9583761825 
Correct output: -97.1428066122 | Program output: -54.1428066122
Correct output: 95.7820549849  | Program output: 49.7820549849 
Correct output: -47.2426472388 | Program output: 17.7573527612 
Correct output: -0.182676306   | Program output: -3.182676306  
Correct output: -37.8314809378 | Program output: 51.1685190622 
Correct output: -136.6715639469 | Program output: -100.6715639469
Correct output: -110.4595416311 | Program output: -32.4595416311
Correct output: -93.1960008927 | Program output: -89.1960008927
Correct output: 107.4784528401 | Program output: 30.4784528401 
Correct output: -7.050955449   | Program output: -59.050955449 
Correct output: 18.5076699196  | Program output: -71.4923300804
Correct output: 105.1823113563 | Program output: 6.1823113563  
Correct output: -61.6767169156 | Program output: -42.6767169156
Correct output: 23.0810823921  | Program output: 55.0810823921 
Correct output: -111.6774434108 | Program output: -24.6774434108
Correct output: -8.9375434343  | Program output: 37.0624565657 
Correct output: -58.3282773985 | Program output: -87.3282773985
Correct output: -11.0175155686 | Program output: 75.9824844314 
Correct output: 34.8893323604  | Program output: 6.8893323604  
Correct output: 58.6746845405  | Program output: 51.6746845405 
Correct output: 53.0707001919  | Program output: -41.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1} {:instruction integer_swap} {:instruction 36} {:instruction integer_swap} {:instruction -98.67805871185303} {:instruction 85} {:instruction integer_swap} {:instruction float_dup} {:instruction integer_stackdepth})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc integer_sub float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736 in1 integer_swap 36 integer_swap -98.67805871185303 85 integer_swap float_dup integer_stackdepth)
Errors: [94.0 3 23.0 2 59.0 2 52.0 3 43.0 2 46.0 2 65.0 12 3.0 1 89.0 12 36.0 2 78.0 3 4.0 2 77.0 2 52.0 2 90.0 13 99.0 3 19.0 2 32.0 2 87.0 3 46.0 12 29.0 2 87.0 13 28.0 2 7.0 1 95.0 13]
Total: 1456.0
Mean: 29.12
Genome size: 84
Size: 85
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2695.0540406999994
Median total errors in population: 1459.0
Error averages by case: (141.8774215 2.928 74.84502410000002 2.756 109.97030129999999 2.674 99.50831570000004 2.816 93.50210110000003 2.755 93.39784749999995 2.695 114.79116110000002 13.051 51.98435979999999 2.136 137.8605832 11.32 87.61150420000003 3.659 126.7213449 2.918 57.76584590000003 2.744 122.70402710000002 3.669 99.77940820000003 1.859 135.8628365 13.02 143.132169 3.562 71.08157570000004 2.75 84.0278713 2.72 135.3080375 3.709 97.0275231 12.054 78.38004139999998 2.76 136.24072309999997 13.103 75.82134109999997 2.691 57.269343900000024 1.77 140.33133250000003 12.133)
Error minima by case: (30.1134 2 17.6373 2 31.0336 1 44.9584 2 5.1428 2 8.7821 2 1.3445 8 0.0 0 8.0667 9 36.0 2 28.4595 2 4.0 2 34.4785 2 7.051 1 18.5077 11 10.1823 1 15.7786 1 23.0811 2 20.6774 2 8.9375 9 12.4301 2 11.0175 10 10.8893 2 3.0 1 37.9293 11)
Average genome size in population (length): 62.826
Average program size in population (points): 63.826
Average percent parens in population: 0.019
Minimum age in population: 4.0
Maximum age in population: 8.0
Average age in population: 6.152125
Median age in population: 6.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6972940
--- Timings ---
Current time: 1529614915024 milliseconds
Total Time:          21.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.4 seconds, 39.1%
Fitness Testing:     10.2 seconds, 47.3%
Report:               2.8 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 54642.0
Test mean error for best: 27.32100
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -34.1134451721
Correct output: -69.6373493193 | Program output: -46.6373493193
Correct output: 31.0335568415  | Program output: 90.0335568415 
Correct output: 143.9583761825 | Program output: 91.9583761825 
Correct output: -97.1428066122 | Program output: -54.1428066122
Correct output: 95.7820549849  | Program output: 49.7820549849 
Correct output: -47.2426472388 | Program output: 17.7573527612 
Correct output: -0.182676306   | Program output: -3.182676306  
Correct output: -37.8314809378 | Program output: 51.1685190622 
Correct output: -136.6715639469 | Program output: -100.6715639469
Correct output: -110.4595416311 | Program output: -32.4595416311
Correct output: -93.1960008927 | Program output: -89.1960008927
Correct output: 107.4784528401 | Program output: 30.4784528401 
Correct output: -7.050955449   | Program output: -59.050955449 
Correct output: 18.5076699196  | Program output: -71.4923300804
Correct output: 105.1823113563 | Program output: 6.1823113563  
Correct output: -61.6767169156 | Program output: -42.6767169156
Correct output: 23.0810823921  | Program output: 55.0810823921 
Correct output: -111.6774434108 | Program output: -24.6774434108
Correct output: -8.9375434343  | Program output: 37.0624565657 
Correct output: -58.3282773985 | Program output: -87.3282773985
Correct output: -11.0175155686 | Program output: 75.9824844314 
Correct output: 34.8893323604  | Program output: 6.8893323604  
Correct output: 58.6746845405  | Program output: 51.6746845405 
Correct output: 53.0707001919  | Program output: -41.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction float_sin} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction integer_stackdepth} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_sub} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1} {:instruction integer_swap} {:instruction 36} {:instruction integer_swap} {:instruction -98.67805871185303} {:instruction integer_swap} {:instruction float_dup})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float integer_dec integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos float_sin integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 integer_stackdepth integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc integer_sub float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736 in1 integer_swap 36 integer_swap -98.67805871185303 integer_swap float_dup)
Errors: [94.0 3 23.0 2 59.0 2 52.0 3 43.0 2 46.0 2 65.0 12 3.0 1 89.0 12 36.0 2 78.0 3 4.0 2 77.0 2 52.0 2 90.0 13 99.0 3 19.0 2 32.0 2 87.0 3 46.0 12 29.0 2 87.0 13 28.0 2 7.0 1 95.0 13]
Total: 1456.0
Mean: 29.12
Genome size: 91
Size: 92
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2548.3160583999993
Median total errors in population: 1459.0
Error averages by case: (137.0837707 2.904 69.70912960000001 2.671 105.12370869999997 2.513 92.20923020000002 2.802 88.38753110000002 2.661 85.95520569999996 2.615 109.93675980000002 12.962 47.15253379999999 1.621 133.16456449999998 11.327 82.63647230000002 3.592 121.83655280000004 2.802 52.758393400000024 2.657 115.55517430000002 3.535 92.59283390000003 1.823 129.0028505 12.975 136.8315086 3.613 65.93160670000003 2.579 78.9660147 2.652 130.498314 3.663 92.00320970000001 11.909 71.1932361 2.676 131.50483509999998 13.051 68.9491086 2.622 49.71703750000001 1.693 133.48947610000002 12.209)
Error minima by case: (60.8866 2 17.6373 2 31.0564 1 40.9584 2 5.1428 2 4.7821 2 45.2699 10 0.0 0 36.8598 8 36.0 2 46.5405 2 4.0 2 40.5215 2 6.124 1 17.578 8 86.8177 1 17.6767 1 21.8397 2 63.3226 2 6.962 7 25.0 2 9.8897 10 15.1107 2 3.0 1 53.0971 10)
Average genome size in population (length): 62.461
Average program size in population (points): 63.461
Average percent parens in population: 0.019
Minimum age in population: 5.25
Maximum age in population: 9.625
Average age in population: 7.686375
Median age in population: 7.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.02
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8535140
--- Timings ---
Current time: 1529614919058 milliseconds
Total Time:          25.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        10.1 seconds, 39.3%
Fitness Testing:     12.0 seconds, 47.1%
Report:               3.4 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 54637.0
Test mean error for best: 27.31850
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -36.1134451721
Correct output: -69.6373493193 | Program output: -48.6373493193
Correct output: 31.0335568415  | Program output: 88.0335568415 
Correct output: 143.9583761825 | Program output: 89.9583761825 
Correct output: -97.1428066122 | Program output: -56.1428066122
Correct output: 95.7820549849  | Program output: 47.7820549849 
Correct output: -47.2426472388 | Program output: 15.7573527612 
Correct output: -0.182676306   | Program output: -5.182676306  
Correct output: -37.8314809378 | Program output: 49.1685190622 
Correct output: -136.6715639469 | Program output: -102.6715639469
Correct output: -110.4595416311 | Program output: -34.4595416311
Correct output: -93.1960008927 | Program output: -91.1960008927
Correct output: 107.4784528401 | Program output: 28.4784528401 
Correct output: -7.050955449   | Program output: -61.050955449 
Correct output: 18.5076699196  | Program output: -73.4923300804
Correct output: 105.1823113563 | Program output: 4.1823113563  
Correct output: -61.6767169156 | Program output: -44.6767169156
Correct output: 23.0810823921  | Program output: 53.0810823921 
Correct output: -111.6774434108 | Program output: -26.6774434108
Correct output: -8.9375434343  | Program output: 35.0624565657 
Correct output: -58.3282773985 | Program output: -89.3282773985
Correct output: -11.0175155686 | Program output: 73.9824844314 
Correct output: 34.8893323604  | Program output: 4.8893323604  
Correct output: 58.6746845405  | Program output: 49.6746845405 
Correct output: 53.0707001919  | Program output: -43.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction float_div} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction float_yank} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc})
Best program: (float_swap integer_mult float_add in1 float_dec integer_yankdup float_add float_dec float_add float_dec integer_dup_times float_dec integer_max float_add float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup float_div -31 float_cos integer_sub integer_stackdepth float_tan in2 integer_stackdepth float_tan in2 float_min float_yank float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc)
Errors: [92.0 3 21.0 2 57.0 2 54.0 3 41.0 2 48.0 2 63.0 13 5.0 1 87.0 12 34.0 2 76.0 3 2.0 1 79.0 3 54.0 2 92.0 13 101.0 3 17.0 2 30.0 1 85.0 3 44.0 12 31.0 2 85.0 13 30.0 1 9.0 2 97.0 12]
Total: 1449.0
Mean: 28.98
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2797.592581599998
Median total errors in population: 1458.0
Error averages by case: (146.17754939999998 3.598 79.91221360000002 2.885 115.3536089 2.479 101.93111590000004 3.468 98.16648950000003 2.872 95.29019969999997 2.818 119.54040800000003 12.733 57.880693400000006 1.836 142.62657529999998 11.822 93.14987750000003 3.57 131.0968118 3.246 63.92800680000003 2.852 124.49035230000003 3.496 102.19103000000003 2.48 138.28176369999997 12.984 145.66116630000002 3.807 76.16990700000002 2.558 89.26903560000001 2.871 139.70532010000002 3.903 101.8960588 11.656 81.51801789999999 2.894 141.1264722 13.067 78.38897709999999 2.82 59.97202370000002 1.913 142.55190710000005 12.689)
Error minima by case: (33.7731 2 17.6373 2 29.0336 1 40.9584 2 5.1428 2 4.7821 2 43.0045 10 0.0 0 28.6499 9 30.9963 2 21.0809 2 1.0037 1 8.0431 2 5.9296 1 16.5077 8 78.6354 1 13.9963 1 2.9602 1 45.6451 2 5.163 8 25.0 1 8.1139 10 6.2213 1 3.0 1 51.0707 10)
Average genome size in population (length): 62.232
Average program size in population (points): 63.232
Average percent parens in population: 0.018
Minimum age in population: 6.75
Maximum age in population: 11.34375
Average age in population: 9.40971875
Median age in population: 9.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.032
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 10091140
--- Timings ---
Current time: 1529614922873 milliseconds
Total Time:          29.5 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.6 seconds, 39.3%
Fitness Testing:     13.8 seconds, 46.9%
Report:               3.9 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc float_yankdup float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2683.6624660999987
Median total errors in population: 1456.0
Error averages by case: (140.8711032 3.762 74.13573360000001 2.771 109.74102679999999 2.595 98.34171010000003 3.656 92.56977110000003 2.761 91.98261249999997 2.721 114.21115460000003 12.279 53.87049009999999 1.742 137.4962084 12.097 87.09581930000002 2.961 125.73182110000003 3.642 57.62264250000002 2.715 121.43179330000002 2.932 99.3134294 2.664 135.58821659999998 12.973 142.7472631 3.697 70.4014551 2.667 83.5706262 2.741 134.3860981 3.788 96.51150670000001 11.888 78.11876840000001 2.77 135.9968524 13.053 75.36234139999999 2.703 56.41462600000001 1.825 139.79939610000005 12.947)
Error minima by case: (33.7731 2 18.6373 1 30.7 1 12.6016 2 6.1428 1 2.5752 1 47.5232 10 0.0 0 36.5883 10 32.0 2 21.0809 2 0.0 0 8.0431 2 5.5017 1 19.9039 10 6.8251 1 15.0 1 23.4919 1 45.6451 2 12.6886 8 10.3984 1 9.3943 11 6.2213 1 3.0 1 45.2865 10)
Average genome size in population (length): 66.848
Average program size in population (points): 67.848
Average percent parens in population: 0.016
Minimum age in population: 7.75
Maximum age in population: 12.796875
Average age in population: 10.991609375
Median age in population: 11.03125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.027
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 11762465
--- Timings ---
Current time: 1529614927045 milliseconds
Total Time:          33.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        13.2 seconds, 39.5%
Fitness Testing:     15.7 seconds, 47.0%
Report:               4.4 seconds, 13.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc float_yankdup float_dup_items integer_add float_mult float_rot integer_stackdepth integer_yank float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2787.4191592999996
Median total errors in population: 1456.0
Error averages by case: (144.2963135 3.839 77.79069670000003 2.827 112.31700229999997 2.763 104.43117690000003 3.752 96.2965022 2.824 97.96375829999997 2.789 117.12261410000002 12.337 59.364301999999995 1.796 139.85912049999996 12.09 90.87862060000002 2.938 129.19186530000002 3.81 61.19921640000002 2.601 127.15602500000004 3.077 103.93862120000003 2.728 139.7872677 12.983 148.0153765 3.686 74.03356970000002 2.835 86.61626249999999 2.697 137.7073148 3.86 99.32477779999998 11.974 83.13327149999998 2.765 138.10572159999995 13.05 80.91685190000001 2.66 62.07877570000001 1.999 144.37013460000003 12.844)
Error minima by case: (29.7754 2 18.0 1 30.0113 1 41.9584 2 1.1952 1 5.7821 1 27.0297 9 0.0 0 17.6185 8 31.0 2 12.1215 2 0.0 0 33.973 2 2.124 1 17.5356 10 31.6769 1 14.0 1 22.0448 1 13.3394 2 2.962 7 25.0 1 5.8897 9 17.1107 1 3.0 1 20.4347 9)
Average genome size in population (length): 67.767
Average program size in population (points): 68.767
Average percent parens in population: 0.016
Minimum age in population: 9.75
Maximum age in population: 14.421875
Average age in population: 12.5766015625
Median age in population: 12.59765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.84
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.84
Total error diversity:				 0.036
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 13456940
--- Timings ---
Current time: 1529614931003 milliseconds
Total Time:          37.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.7 seconds, 39.2%
Fitness Testing:     17.6 seconds, 46.9%
Report:               5.1 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc float_yankdup float_dup_items integer_add float_mult float_rot integer_stackdepth integer_yank float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 83
Size: 84
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2882.2363964999995
Median total errors in population: 1449.0
Error averages by case: (147.51046299999996 3.826 81.54289400000002 2.77 116.24074009999998 2.789 107.97753200000004 3.757 99.93870190000001 2.765 101.59884869999999 2.764 120.81753780000003 12.747 63.5073726 1.82 143.69447660000003 12.083 94.53050830000002 2.945 132.51597780000003 3.843 65.20271580000002 2.095 130.61778740000003 3.511 108.33068140000002 2.739 144.13712990000002 12.977 151.56201650000003 3.614 77.81521930000001 2.864 90.48072510000002 2.42 141.0256204 3.879 103.2511209 12.003 87.43666109999998 2.703 142.13142210000004 13.023 84.83114100000002 2.323 65.97682830000001 2.354 148.3862745 12.562)
Error minima by case: (30.1134 2 0.4323 1 31.3861 1 35.9584 2 7.1428 1 0.2179 1 16.2426 10 0.0 0 6.8315 10 13.4323 1 20.0809 2 0.0 0 8.0431 2 4.0483 1 17.5121 9 10.1823 1 3.5677 1 9.4323 1 20.6774 2 4.7176 8 25.0 1 6.0257 9 6.2213 1 3.0 1 12.7345 10)
Average genome size in population (length): 68.337
Average program size in population (points): 69.337
Average percent parens in population: 0.015
Minimum age in population: 11.46875
Maximum age in population: 16.0625
Average age in population: 14.20659765625
Median age in population: 14.3125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.035
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 15166140
--- Timings ---
Current time: 1529614935158 milliseconds
Total Time:          41.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.2 seconds, 39.0%
Fitness Testing:     19.6 seconds, 47.1%
Report:               5.7 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub})
Best program: (float_dec integer_mult float_add in1 float_dec integer_yankdup float_add float_dec float_add float_dec integer_dup_times float_dec integer_max integer_dup_times float_dec float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc float_yankdup float_dup_items integer_add float_mult float_rot integer_stackdepth integer_inc float_tan integer_sub)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2969.7786930999987
Median total errors in population: 1443.0
Error averages by case: (148.72909399999998 3.809 82.9701166 2.625 118.13557449999996 2.884 113.79882040000004 3.839 101.11542600000003 2.608 107.36954109999996 2.75 122.32501050000003 12.68 67.6479615 1.915 145.2767174 11.99 95.93862940000004 3.037 133.7768925 3.958 67.19876060000001 1.897 136.55240820000003 3.519 114.49307250000004 2.85 150.27667060000002 12.979 157.55510100000004 3.9 79.2912579 2.986 92.2983738 2.668 142.3092037 3.985 104.9020462 12.021 93.7624972 2.97 143.804541 12.91 90.9443923 2.405 72.33266340000002 2.552 154.52392080000004 12.713)
Error minima by case: (57.8866 2 15.0 1 29.9987 1 36.9584 2 8.1428 1 0.7821 1 6.5649 8 0.2835 1 15.9761 10 28.0 1 43.5405 2 0.0 0 43.5215 2 1.6738 1 17.2321 9 89.8177 2 7.8691 1 22.0224 1 57.8698 2 7.4632 9 4.5207 1 5.576 9 18.1107 1 6.0 1 52.136 9)
Average genome size in population (length): 68.824
Average program size in population (points): 69.824
Average percent parens in population: 0.015
Minimum age in population: 13.265625
Maximum age in population: 17.52734375
Average age in population: 15.671228515625
Median age in population: 15.6943359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 44
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.785
Total error diversity:				 0.03
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 16887390
--- Timings ---
Current time: 1529614939237 milliseconds
Total Time:          45.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        17.7 seconds, 38.6%
Fitness Testing:     21.7 seconds, 47.3%
Report:               6.3 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec float_shove float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc float_yankdup float_dup_items integer_add float_mult float_rot integer_stackdepth integer_yank float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 76
Size: 77
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2733.4116215999993
Median total errors in population: 1441.0
Error averages by case: (139.14616189999998 3.228 72.52705050000003 2.578 107.35287339999998 2.748 106.16151380000002 3.698 91.07532730000001 2.563 99.82424809999998 2.167 112.07515430000002 12.765 59.57239629999999 1.779 135.01615779999997 11.517 85.50964240000003 2.851 124.02176620000002 3.809 56.21330700000002 1.314 129.24728810000002 3.487 106.29951310000006 2.699 142.3068885 12.954 149.3181661 3.881 68.77389350000001 2.831 81.49116760000003 2.763 132.5897543 3.821 94.3162746 11.995 85.28718979999998 2.814 133.36282169999998 12.462 82.18707379999998 2.717 64.03329190000002 2.532 146.7966996 12.933)
Error minima by case: (55.8866 2 12.0 1 4.5785 1 2.6188 2 10.1428 1 0.2179 1 8.3948 8 0.3642 1 1.0163 7 25.0 1 41.5405 2 0.0 0 27.6188 2 0.876 1 17.1044 9 49.6188 1 8.0 1 12.531 1 58.3226 2 0.038 6 19.4805 1 2.8897 9 0.7227 1 3.0 1 17.4587 9)
Average genome size in population (length): 68.192
Average program size in population (points): 69.192
Average percent parens in population: 0.015
Minimum age in population: 14.453125
Maximum age in population: 19.0146484375
Average age in population: 17.2183798828125
Median age in population: 17.2705078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.767
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.767
Total error diversity:				 0.034
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 18592340
--- Timings ---
Current time: 1529614943099 milliseconds
Total Time:          49.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        19.2 seconds, 38.6%
Fitness Testing:     23.6 seconds, 47.5%
Report:               6.8 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dec} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction integer_dec} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_dup_times} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2})
Best program: (float_dec integer_mult float_add in1 float_dec integer_yankdup float_add float_dec float_add float_dec integer_dup_times float_dec integer_max integer_dup_times float_dec float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float integer_dec integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_dup_times print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_swap integer_stackdepth float_tan in2)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2544.7220032999994
Median total errors in population: 1441.0
Error averages by case: (131.7859629 2.92 64.6823042 2.684 99.59562670000001 2.677 99.18883480000002 3.616 83.43815420000001 2.672 92.6732521 1.873 104.31850220000003 12.955 51.642353899999996 1.696 127.37045279999998 11.292 77.9510943 2.785 116.51728850000003 3.72 48.16623040000002 1.001 122.18097150000003 3.59 98.72869159999999 2.628 135.00725989999998 12.966 143.2837763 3.77 60.86665610000001 2.735 73.5316221 2.702 125.1479583 3.734 86.34991280000003 12.005 77.69331470000002 2.73 125.67776949999998 12.239 75.5044388 2.794 56.39880050000001 2.624 139.65777420000003 12.955)
Error minima by case: (27.7731 2 13.0 1 31.3236 1 34.9584 2 10.1428 1 0.2179 1 1.4575 9 0.0 0 10.8687 7 26.0 1 15.0809 2 0.0 0 14.0431 2 0.876 1 18.5633 9 84.6354 1 9.0 1 3.0398 1 39.6451 2 0.038 6 9.6281 1 2.8897 9 12.2213 1 3.0 1 53.3496 8)
Average genome size in population (length): 68.294
Average program size in population (points): 69.294
Average percent parens in population: 0.015
Minimum age in population: 15.453125
Maximum age in population: 20.537109375
Average age in population: 18.69580517578125
Median age in population: 18.78564453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.035
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 20299840
--- Timings ---
Current time: 1529614947302 milliseconds
Total Time:          53.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.8 seconds, 38.6%
Fitness Testing:     25.7 seconds, 47.6%
Report:               7.3 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction float_dup} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc float_dup integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush float_cos integer_dup float_inc float_yankdup float_dup_items integer_add)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2745.617072299999
Median total errors in population: 1441.0
Error averages by case: (140.81133599999995 3.047 74.53473050000002 2.825 108.29573210000001 2.803 105.16850210000003 3.749 92.98160480000001 2.819 98.46525079999996 1.992 112.7448231 12.941 60.69930849999998 1.824 135.53185259999995 11.286 87.82231610000002 2.934 125.71070370000004 3.861 58.45661360000001 1.127 127.85095430000003 3.716 105.37110830000003 2.757 141.3722807 12.987 148.78549190000004 3.887 70.7925121 2.887 82.5177927 2.846 134.22905169999999 3.881 94.98948940000001 11.993 84.67787409999998 2.882 133.79649469999998 12.247 81.39809440000002 2.884 62.68909810000002 2.772 146.021056 12.956)
Error minima by case: (36.5958 2 12.0 1 31.0336 1 23.9584 2 5.6252 1 1.7821 1 10.0507 8 0.717 1 19.4619 8 25.0 1 18.9419 2 0.0 0 41.5215 2 0.124 1 18.7207 8 86.6489 2 4.3834 1 21.0 1 20.1598 2 0.962 7 1.0349 1 3.8897 9 15.6489 1 5.0 1 54.0721 9)
Average genome size in population (length): 68.008
Average program size in population (points): 69.008
Average percent parens in population: 0.015
Minimum age in population: 17.8203125
Maximum age in population: 22.179931640625
Average age in population: 20.22258203125
Median age in population: 20.295654296875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.044
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 22000310
--- Timings ---
Current time: 1529614951171 milliseconds
Total Time:          57.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.2 seconds, 38.5%
Fitness Testing:     27.6 seconds, 47.7%
Report:               7.8 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_min} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction float_flush})
Best program: (float_swap integer_mult float_add float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_shove float_dec float_mult float_dec float_frominteger float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_min integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc float_flush)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2779.6250681999986
Median total errors in population: 1441.0
Error averages by case: (140.7506666 3.11 74.66277930000003 2.874 109.4391168 2.853 107.74157470000006 3.786 92.98298550000001 2.852 101.05378219999996 2.051 113.8121473 12.937 62.634837399999995 1.878 136.69213799999997 11.3 87.95680250000004 3.002 125.66642260000005 3.908 58.774087700000024 1.202 130.3467813 3.761 107.43584550000004 2.807 143.31930240000003 12.948 151.2574207 3.956 70.92814340000001 2.943 83.5745809 2.893 134.1957203 3.928 96.1082265 11.973 86.9208903 2.935 135.044645 12.225 84.15198089999998 2.94 65.57358400000001 2.824 147.7916064 12.923)
Error minima by case: (24.5952 2 8.2716 1 0.9146 1 33.9584 2 6.3754 1 0.2179 1 21.7574 9 0.0 0 24.6499 8 4.7284 1 6.9413 2 0.0 0 34.4785 2 0.5284 1 13.4405 9 10.1823 2 10.0 1 0.7284 1 8.1592 2 1.163 8 26.0 1 3.5892 7 2.9411 1 4.0 1 21.1225 8)
Average genome size in population (length): 67.023
Average program size in population (points): 68.023
Average percent parens in population: 0.015
Minimum age in population: 19.0859375
Maximum age in population: 23.482421875
Average age in population: 21.70354345703125
Median age in population: 21.75506591796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.874
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.874
Total error diversity:				 0.04
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 23676275
--- Timings ---
Current time: 1529614955085 milliseconds
Total Time:          61.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.9 seconds, 38.6%
Fitness Testing:     29.4 seconds, 47.7%
Report:               8.4 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction integer_dec} {:instruction float_min} {:instruction integer_swap} {:instruction float_mult} {:instruction float_dup_times} {:instruction -87.14686532230445} {:instruction float_tan} {:instruction integer_div} {:instruction tag_integer_185})
Best program: (float_swap integer_mult float_add in1 float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup integer_dec float_min integer_swap float_mult float_dup_times -87.14686532230445 float_tan integer_div tag_integer_185)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2565.3368864
Median total errors in population: 1441.0
Error averages by case: (133.85960849999998 2.912 66.8339516 2.681 101.2623163 2.676 98.05145900000002 3.607 85.5431298 2.669 91.53470529999998 1.868 106.33986420000001 12.951 54.71945059999999 1.69 129.2569524 11.289 80.0710476 2.78 118.61598040000003 3.717 50.35175870000001 0.99 121.13930000000002 3.599 97.81006410000003 2.625 133.94456649999998 12.988 142.2172293 3.793 63.02353460000002 2.737 75.35578709999999 2.69 127.21121589999998 3.727 88.29310340000002 12.015 76.8744114 2.731 127.46647099999997 12.255 74.4495926 2.8 55.23106060000001 2.621 138.5173255 12.952)
Error minima by case: (55.8866 2 13.0 1 1.6391 2 35.9584 2 10.1428 1 0.2179 1 38.3885 9 0.0 0 29.8496 9 26.0 1 41.5405 2 0.0 0 42.5245 2 1.0483 1 14.165 9 40.2284 2 9.0 2 3.0398 1 58.3226 2 1.7176 8 26.0 1 3.0257 8 2.2167 1 4.0 1 7.5293 9)
Average genome size in population (length): 66.392
Average program size in population (points): 67.392
Average percent parens in population: 0.016
Minimum age in population: 20.564453125
Maximum age in population: 24.96942138671875
Average age in population: 23.12593579101562
Median age in population: 23.177734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.884
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.036
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 25336445
--- Timings ---
Current time: 1529614959135 milliseconds
Total Time:          65.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.5 seconds, 38.7%
Fitness Testing:     31.5 seconds, 47.9%
Report:               8.8 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_shove} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction float_sin} {:instruction integer_swap} {:instruction integer_rot} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub})
Best program: (integer_fromfloat integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_shove float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer float_sin integer_swap integer_rot tag_integer_765 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2434.002678299999
Median total errors in population: 1441.0
Error averages by case: (128.00328519999997 2.915 60.83589910000003 2.7 96.62156339999999 2.689 93.06732360000005 3.617 79.37108170000002 2.677 86.31973719999995 1.856 100.89074180000004 12.949 46.5894244 1.71 124.3101997 11.285 74.29460980000003 2.807 112.69349500000004 3.73 44.77035070000003 0.986 116.22121430000004 3.597 93.43753660000003 2.667 130.04831609999997 12.998 137.687641 3.7 57.04418810000004 2.763 70.17511000000003 2.74 121.41955530000001 3.767 82.95733849999999 11.996 72.49670559999998 2.755 122.77840469999997 12.23 69.4741698 2.694 50.57662090000002 2.649 134.46116580000006 12.98)
Error minima by case: (57.8866 2 14.0 1 30.0336 1 27.6252 2 11.1428 1 1.7821 1 40.4743 8 0.1827 1 29.8496 8 27.0 1 43.5405 2 0.0 0 46.5215 2 1.0483 1 17.5077 10 74.6252 2 10.0 1 22.0811 1 60.3226 2 1.7176 9 4.6252 1 3.0257 10 3.6252 1 6.0 1 52.0707 10)
Average genome size in population (length): 65.153
Average program size in population (points): 66.153
Average percent parens in population: 0.016
Minimum age in population: 22.155517578125
Maximum age in population: 26.56805419921875
Average age in population: 24.58718478393555
Median age in population: 24.59799194335938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.886
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.886
Total error diversity:				 0.041
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 26965550
--- Timings ---
Current time: 1529614963120 milliseconds
Total Time:          69.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.9 seconds, 38.6%
Fitness Testing:     33.7 seconds, 48.2%
Report:               9.2 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction float_add} {:instruction float_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_max} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2})
Best program: (float_swap integer_mult float_add in1 float_dec integer_yankdup float_add float_dec float_add float_dec integer_yankdup float_add float_dec float_add float_dec integer_yank float_dec integer_max float_add float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add print_integer integer_inc integer_swap integer_rot float_inc float_frominteger float_frominteger integer_shove integer_inc integer_swap integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger integer_shove -31 float_cos integer_sub integer_stackdepth float_tan in2)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2303.1763808999995
Median total errors in population: 1441.0
Error averages by case: (124.74872949999997 2.826 57.093531100000014 2.592 90.29244419999998 2.599 87.0371811 3.525 75.9739428 2.58 80.25263779999997 1.792 95.0491994 12.922 40.94090129999999 1.624 118.22421559999998 11.248 70.63665380000002 2.697 109.36054270000002 3.635 40.6801499 0.892 110.14957160000003 3.511 88.34878590000004 2.564 124.90498679999996 12.969 131.4740349 3.744 53.25635710000002 2.662 64.05817940000001 2.616 118.03321009999998 3.653 76.89548309999998 11.97 67.3216438 2.653 116.4377592 12.216 62.95865059999999 2.736 43.78247420000002 2.561 129.534115 12.944)
Error minima by case: (56.8866 2 13.0 1 22.2296 1 19.6447 2 10.1428 1 0.7821 1 6.8532 9 0.0 0 2.558 7 26.0 1 42.5405 2 0.0 0 5.3553 2 0.876 1 17.5121 8 23.9754 2 9.0 1 22.0 1 59.3226 2 0.038 6 17.9388 1 2.8715 8 18.3738 1 4.0 1 0.1925 10)
Average genome size in population (length): 64.996
Average program size in population (points): 65.996
Average percent parens in population: 0.016
Minimum age in population: 23.69842529296875
Maximum age in population: 27.85772705078125
Average age in population: 26.05923257446289
Median age in population: 26.11372375488281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.894
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.894
Total error diversity:				 0.042
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 28590980
--- Timings ---
Current time: 1529614966787 milliseconds
Total Time:          73.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        28.3 seconds, 38.6%
Fitness Testing:     35.5 seconds, 48.3%
Report:               9.5 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_add} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_add} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction float_flush} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction float_max} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_div} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736} {:instruction in1})
Best program: (float_swap integer_add float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max integer_add integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger integer_mod float_sin float_inc -65.64287366959917 float_yankdup integer_stackdepth float_tan in2 float_min float_flush float_cos integer_dup float_inc integer_mod float_dup_items integer_add float_mult float_rot float_max integer_inc float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup float_div integer_dup 34 tag_integer_736 in1)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2895.3773642999995
Median total errors in population: 1441.0
Error averages by case: (146.8237758 3.019 80.6050494 2.78 114.15564889999999 2.765 111.30442460000003 3.724 99.19349430000001 2.775 105.01120949999998 1.956 119.45337300000001 12.993 67.5354349 1.78 141.8525521 11.342 93.51751450000002 2.893 131.79798940000003 3.816 63.90504030000001 1.096 134.10791410000004 3.69 110.66323910000001 2.711 146.2550664 13.024 154.7593948 3.797 76.81714290000002 2.826 88.80400130000001 2.778 140.2250835 3.826 101.5730304 12.074 89.90981839999999 2.825 139.97647100000003 12.291 88.02121020000001 2.798 68.9118015 2.709 150.91568400000003 12.994)
Error minima by case: (57.8866 2 14.0 1 12.3041 1 37.9584 2 10.1428 1 1.7821 1 39.0045 10 0.0 0 24.6499 10 27.0 1 43.5405 2 0.0 0 21.5178 2 1.5284 1 17.5121 8 19.2217 1 10.0 1 20.2566 1 60.3226 2 1.163 8 25.0 1 4.1139 10 8.4483 1 3.0 1 9.733 9)
Average genome size in population (length): 62.777
Average program size in population (points): 63.777
Average percent parens in population: 0.016
Minimum age in population: 25.0682373046875
Maximum age in population: 29.59297180175781
Average age in population: 27.51727864074707
Median age in population: 27.56014251708984
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.871
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.871
Total error diversity:				 0.042
Error (vector) diversity:			 0.048
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 30161375
--- Timings ---
Current time: 1529614970560 milliseconds
Total Time:          77.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        29.8 seconds, 38.6%
Fitness Testing:     37.3 seconds, 48.3%
Report:              10.0 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction print_float} {:instruction in2} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_765} {:instruction integer_shove} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction float_cos} {:instruction integer_dup} {:instruction float_inc} {:instruction in2} {:instruction float_dup_items})
Best program: (float_swap integer_mult float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_pop float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod print_float in2 integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_765 integer_shove integer_swap integer_rot integer_yank float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc float_cos integer_dup float_inc in2 float_dup_items)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2402.5976143999987
Median total errors in population: 1441.0
Error averages by case: (126.17045859999999 2.873 58.72116740000001 2.638 93.55808879999998 2.637 92.85147070000004 3.564 77.37925870000004 2.624 86.36068129999997 1.822 98.06702410000003 12.963 46.680264699999995 1.656 121.5632728 11.287 71.97227330000001 2.743 110.83358110000003 3.684 42.338341600000014 0.936 116.22863080000002 3.543 94.40414750000005 2.615 130.95479079999998 12.985 137.6914681 3.749 54.93320660000003 2.709 67.07800710000002 2.677 119.5714611 3.695 80.0726264 12.003 73.2480732 2.702 119.96256579999998 12.234 69.52715619999998 2.749 50.390646400000016 2.608 135.36895130000005 12.974)
Error minima by case: (53.8866 2 13.0 1 29.0336 1 14.3175 2 10.1428 1 1.7821 1 43.355 8 0.0 0 34.7342 9 26.0 1 39.5405 2 0.0 0 10.6825 2 3.4543 1 16.5077 10 32.6825 2 9.0 1 21.0811 1 56.3226 2 5.343 8 26.0 1 7.576 10 20.1107 1 4.0 1 28.6825 11)
Average genome size in population (length): 62.353
Average program size in population (points): 63.353
Average percent parens in population: 0.017
Minimum age in population: 26.55694580078125
Maximum age in population: 30.77024078369141
Average age in population: 28.97054973602295
Median age in population: 29.0223503112793
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.031
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 31721045
--- Timings ---
Current time: 1529614974362 milliseconds
Total Time:          81.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        31.4 seconds, 38.7%
Fitness Testing:     39.1 seconds, 48.2%
Report:              10.5 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 54667.0
Test mean error for best: 27.33350
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -38.1134451721
Correct output: -69.6373493193 | Program output: -50.6373493193
Correct output: 31.0335568415  | Program output: 86.0335568415 
Correct output: 143.9583761825 | Program output: 87.9583761825 
Correct output: -97.1428066122 | Program output: -58.1428066122
Correct output: 95.7820549849  | Program output: 45.7820549849 
Correct output: -47.2426472388 | Program output: 13.7573527612 
Correct output: -0.182676306   | Program output: -7.182676306  
Correct output: -37.8314809378 | Program output: 47.1685190622 
Correct output: -136.6715639469 | Program output: -104.6715639469
Correct output: -110.4595416311 | Program output: -36.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 26.4784528401 
Correct output: -7.050955449   | Program output: -63.050955449 
Correct output: 18.5076699196  | Program output: -75.4923300804
Correct output: 105.1823113563 | Program output: 2.1823113563  
Correct output: -61.6767169156 | Program output: -46.6767169156
Correct output: 23.0810823921  | Program output: 51.0810823921 
Correct output: -111.6774434108 | Program output: -28.6774434108
Correct output: -8.9375434343  | Program output: 33.0624565657 
Correct output: -58.3282773985 | Program output: -91.3282773985
Correct output: -11.0175155686 | Program output: 71.9824844314 
Correct output: 34.8893323604  | Program output: 2.8893323604  
Correct output: 58.6746845405  | Program output: 47.6746845405 
Correct output: 53.0707001919  | Program output: -45.9292998081
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_flush} {:instruction integer_shove} {:instruction float_swap} {:instruction integer_flush} {:instruction float_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_stackdepth} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction tagged_36} {:instruction float_sub} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction float_stackdepth} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_yankdup} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction in2})
Best program: (float_swap float_flush integer_shove float_swap integer_flush float_add in1 integer_mod integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_stackdepth integer_yank integer_mult float_dup_items integer_dup float_mod tagged_36 float_sub print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger float_frominteger float_stackdepth tagged_36 integer_flush float_frominteger integer_dup integer_yankdup -31 float_cos integer_sub integer_fromfloat float_tan in2)
Errors: [90.0 2 19.0 2 55.0 2 56.0 3 39.0 2 50.0 1 61.0 13 7.0 1 85.0 11 32.0 2 74.0 3 0.0 0 81.0 3 56.0 2 94.0 13 103.0 3 15.0 2 28.0 2 83.0 3 42.0 12 33.0 2 83.0 12 32.0 2 11.0 2 99.0 13]
Total: 1441.0
Mean: 28.82
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3102.4269937999993
Median total errors in population: 1441.0
Error averages by case: (153.88578319999996 3.236 87.6202047 3.006 121.28585339999998 2.966 120.9482309 3.925 105.91434290000002 2.988 114.48699859999999 2.167 126.0780246 13.011 75.63640809999998 2.017 149.29482769999998 11.371 100.7003801 3.117 138.15641430000002 4.034 71.6161772 1.332 143.24021000000002 3.897 120.25742730000003 2.92 155.5319237 13.038 163.74040540000001 4.006 83.91839949999998 3.059 96.029044 2.991 147.40847920000004 4.053 108.43149330000001 12.073 100.09464999999997 3.052 147.4426708 12.319 97.7790971 3.007 79.29642560000003 2.939 160.09912219999998 13.01)
Error minima by case: (10.969 2 13.0 1 24.031 1 21.6838 2 10.1428 1 0.9392 1 18.031 7 0.0 0 5.969 7 26.0 1 5.031 2 0.0 0 3.3162 2 0.124 1 16.3162 9 10.3395 1 9.0 1 22.0 1 3.969 2 0.038 6 10.7018 1 1.8897 9 9.7018 1 3.0 1 21.3162 9)
Average genome size in population (length): 60.936
Average program size in population (points): 61.936
Average percent parens in population: 0.017
Minimum age in population: 27.69331359863281
Maximum age in population: 32.2609806060791
Average age in population: 30.39340572166443
Median age in population: 30.44572353363037
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.855
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.855
Total error diversity:				 0.05
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 33245300
--- Timings ---
Current time: 1529614978097 milliseconds
Total Time:          84.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.9 seconds, 38.8%
Fitness Testing:     40.8 seconds, 48.2%
Report:              10.9 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 10138.0
Test mean error for best: 5.06900
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -136.1134451721
Correct output: -69.6373493193 | Program output: -77.6373493193
Correct output: 31.0335568415  | Program output: 23.0335568415 
Correct output: 143.9583761825 | Program output: 135.9583761825
Correct output: -97.1428066122 | Program output: -105.1428066122
Correct output: 95.7820549849  | Program output: 87.7820549849 
Correct output: -47.2426472388 | Program output: -55.2426472388
Correct output: -0.182676306   | Program output: -8.182676306  
Correct output: -37.8314809378 | Program output: -45.8314809378
Correct output: -136.6715639469 | Program output: -144.6715639469
Correct output: -110.4595416311 | Program output: -118.4595416311
Correct output: -93.1960008927 | Program output: -101.1960008927
Correct output: 107.4784528401 | Program output: 99.4784528401 
Correct output: -7.050955449   | Program output: -15.050955449 
Correct output: 18.5076699196  | Program output: 10.5076699196 
Correct output: 105.1823113563 | Program output: 97.1823113563 
Correct output: -61.6767169156 | Program output: -69.6767169156
Correct output: 23.0810823921  | Program output: 15.0810823921 
Correct output: -111.6774434108 | Program output: -119.6774434108
Correct output: -8.9375434343  | Program output: -16.9375434343
Correct output: -58.3282773985 | Program output: -66.3282773985
Correct output: -11.0175155686 | Program output: -19.0175155686
Correct output: 34.8893323604  | Program output: 26.8893323604 
Correct output: 58.6746845405  | Program output: 50.6746845405 
Correct output: 53.0707001919  | Program output: 45.0707001919 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction float_div} {:instruction print_integer} {:instruction float_mult} {:instruction integer_sub} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction -6.081139161484785} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos})
Best program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add float_dec integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec float_dec float_dec integer_max float_dec integer_dup_times float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max float_div print_integer float_mult integer_sub integer_rot print_integer integer_inc integer_swap -6.081139161484785 integer_rot float_frominteger float_mult float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos)
Errors: [8.0 2 8.0 2 8.0 2 8.0 2 8.0 3 8.0 2 8.0 2 8.0 1 8.0 2 8.0 2 8.0 1 8.0 3 8.0 3 8.0 2 8.0 1 8.0 3 8.0 1 8.0 2 8.0 1 8.0 2 8.0 2 8.0 1 8.0 2 8.0 1 8.0 2]
Total: 247.0
Mean: 4.94
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2582.7322097999995
Median total errors in population: 1441.0
Error averages by case: (132.7687992 3.023 65.92732920000002 2.804 100.63131389999997 2.777 101.14254140000004 3.708 84.55861310000002 2.791 94.40451769999997 1.949 105.29192140000002 12.947 53.670369899999976 1.789 128.2404334 11.268 79.42488380000005 2.896 117.52169840000002 3.831 49.85639350000004 1.106 123.86568530000001 3.697 100.60479720000006 2.735 136.66728119999996 12.937 144.88201040000004 3.873 62.108037400000036 2.854 74.61349440000001 2.814 126.1305833 3.839 87.259948 11.977 80.0752071 2.854 126.52886959999996 12.201 77.43054229999998 2.903 58.598662800000035 2.755 141.26527590000003 12.935)
Error minima by case: (8.0 2 8.0 1 8.0 1 8.0 2 8.0 1 1.2179 1 8.0 2 0.0 0 8.0 2 8.0 1 8.0 1 0.0 0 8.0 2 0.7232 1 8.0 1 8.0 2 8.0 1 3.0398 1 8.0 1 0.038 2 8.0 1 2.8897 1 8.0 1 4.0 1 8.0 2)
Average genome size in population (length): 60.647
Average program size in population (points): 61.647
Average percent parens in population: 0.017
Minimum age in population: 29.69322109222412
Maximum age in population: 33.55138206481934
Average age in population: 31.82847350978851
Median age in population: 31.84426927566528
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.856
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.856
Total error diversity:				 0.039
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 34762420
--- Timings ---
Current time: 1529614981882 milliseconds
Total Time:          88.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.5 seconds, 38.9%
Fitness Testing:     42.6 seconds, 48.1%
Report:              11.4 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 3294.0
Test mean error for best: 1.64700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -130.1134451721
Correct output: -69.6373493193 | Program output: -71.6373493193
Correct output: 31.0335568415  | Program output: 29.0335568415 
Correct output: 143.9583761825 | Program output: 141.9583761825
Correct output: -97.1428066122 | Program output: -99.1428066122
Correct output: 95.7820549849  | Program output: 93.7820549849 
Correct output: -47.2426472388 | Program output: -49.2426472388
Correct output: -0.182676306   | Program output: -2.182676306  
Correct output: -37.8314809378 | Program output: -39.8314809378
Correct output: -136.6715639469 | Program output: -138.6715639469
Correct output: -110.4595416311 | Program output: -112.4595416311
Correct output: -93.1960008927 | Program output: -95.1960008927
Correct output: 107.4784528401 | Program output: 105.4784528401
Correct output: -7.050955449   | Program output: -9.050955449  
Correct output: 18.5076699196  | Program output: 16.5076699196 
Correct output: 105.1823113563 | Program output: 103.1823113563
Correct output: -61.6767169156 | Program output: -63.6767169156
Correct output: 23.0810823921  | Program output: 21.0810823921 
Correct output: -111.6774434108 | Program output: -113.6774434108
Correct output: -8.9375434343  | Program output: -10.9375434343
Correct output: -58.3282773985 | Program output: -60.3282773985
Correct output: -11.0175155686 | Program output: -13.0175155686
Correct output: 34.8893323604  | Program output: 32.8893323604 
Correct output: 58.6746845405  | Program output: 56.6746845405 
Correct output: 53.0707001919  | Program output: 51.0707001919 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction float_div} {:instruction print_integer} {:instruction float_mult} {:instruction integer_sub} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction -6.081139161484785} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos})
Best program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add float_dec integer_dup_times integer_dec float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max float_div print_integer float_mult integer_sub integer_rot print_integer integer_inc integer_swap -6.081139161484785 integer_rot float_frominteger float_mult float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos)
Errors: [2.0 2 2.0 2 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 80.0
Mean: 1.6
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2506.9219399999993
Median total errors in population: 1441.0
Error averages by case: (130.28481929999998 2.819 63.4096532 2.615 98.7047442 2.603 96.68906850000002 3.547 81.97013310000001 2.603 90.38655579999995 1.768 103.30545610000001 12.922 51.789232999999996 1.624 126.46313679999997 11.23 76.3543132 2.701 115.09692100000004 3.64 46.837741000000015 0.896 120.06407670000002 3.521 97.12311320000002 2.569 133.48260039999997 12.954 141.29553570000007 3.696 59.66825230000001 2.666 72.61489599999999 2.634 123.72830319999998 3.654 85.5262523 11.978 75.76938389999998 2.662 124.86460859999997 12.182 73.55336350000002 2.708 54.29177700000002 2.56 137.961002 12.935)
Error minima by case: (0.5471 1 2.0 1 2.0 1 2.0 1 2.0 1 0.7821 1 2.0 1 0.1776 1 2.0 1 2.0 1 2.0 1 0.0 0 2.0 1 0.5943 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 0.9517 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1)
Average genome size in population (length): 59.08
Average program size in population (points): 60.08
Average percent parens in population: 0.017
Minimum age in population: 30.87985992431641
Maximum age in population: 35.20249128341675
Average age in population: 33.27715808153152
Median age in population: 33.3332781791687
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.86
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.86
Total error diversity:				 0.035
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 36240240
--- Timings ---
Current time: 1529614985634 milliseconds
Total Time:          92.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.0 seconds, 39.0%
Fitness Testing:     44.4 seconds, 48.1%
Report:              11.7 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 3294.0
Test mean error for best: 1.64700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -130.1134451721
Correct output: -69.6373493193 | Program output: -71.6373493193
Correct output: 31.0335568415  | Program output: 29.0335568415 
Correct output: 143.9583761825 | Program output: 141.9583761825
Correct output: -97.1428066122 | Program output: -99.1428066122
Correct output: 95.7820549849  | Program output: 93.7820549849 
Correct output: -47.2426472388 | Program output: -49.2426472388
Correct output: -0.182676306   | Program output: -2.182676306  
Correct output: -37.8314809378 | Program output: -39.8314809378
Correct output: -136.6715639469 | Program output: -138.6715639469
Correct output: -110.4595416311 | Program output: -112.4595416311
Correct output: -93.1960008927 | Program output: -95.1960008927
Correct output: 107.4784528401 | Program output: 105.4784528401
Correct output: -7.050955449   | Program output: -9.050955449  
Correct output: 18.5076699196  | Program output: 16.5076699196 
Correct output: 105.1823113563 | Program output: 103.1823113563
Correct output: -61.6767169156 | Program output: -63.6767169156
Correct output: 23.0810823921  | Program output: 21.0810823921 
Correct output: -111.6774434108 | Program output: -113.6774434108
Correct output: -8.9375434343  | Program output: -10.9375434343
Correct output: -58.3282773985 | Program output: -60.3282773985
Correct output: -11.0175155686 | Program output: -13.0175155686
Correct output: 34.8893323604  | Program output: 32.8893323604 
Correct output: 58.6746845405  | Program output: 56.6746845405 
Correct output: 53.0707001919  | Program output: 51.0707001919 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction float_div} {:instruction print_integer} {:instruction float_mult} {:instruction integer_sub} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction -6.081139161484785} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos})
Best program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add float_dec integer_dup_times integer_dec float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup float_mod integer_max float_div print_integer float_mult integer_sub integer_rot print_integer integer_inc integer_swap -6.081139161484785 integer_rot float_frominteger float_mult float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos)
Errors: [2.0 2 2.0 2 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 80.0
Mean: 1.6
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2738.9005018999987
Median total errors in population: 1441.0
Error averages by case: (139.0748444 3.021 74.28420330000003 2.828 108.16293029999999 2.792 105.83229080000005 3.695 92.28873540000004 2.822 99.33677939999997 1.979 112.55477540000001 12.729 61.65153789999998 1.823 134.83792839999998 11.08 87.29109410000002 2.913 124.30231400000001 3.803 58.63744190000004 1.159 127.94113150000001 3.714 105.18291810000002 2.732 140.2498187 12.723 147.8765937 3.936 70.63386130000002 2.859 82.93126290000004 2.827 132.64074910000002 3.821 95.156109 11.789 85.1427929 2.856 133.11746209999998 11.99 82.19739729999999 2.975 64.45747360000003 2.759 144.7880564 12.705)
Error minima by case: (2.0 1 2.0 1 2.0 1 1.9104 1 0.8572 1 0.2179 1 2.0 1 0.1776 1 2.0 1 2.0 1 2.0 1 0.0 0 1.4055 1 0.997 1 1.4217 1 1.0873 1 2.0 1 2.0 1 2.0 1 1.7176 1 0.6967 1 2.0 1 1.8653 1 1.6447 1 0.9797 1)
Average genome size in population (length): 58.473
Average program size in population (points): 59.473
Average percent parens in population: 0.018
Minimum age in population: 31.89123725891113
Maximum age in population: 36.387127161026
Average age in population: 34.74594556951523
Median age in population: 34.7920960187912
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.865
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.865
Total error diversity:				 0.049
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 37702795
--- Timings ---
Current time: 1529614989243 milliseconds
Total Time:          95.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.5 seconds, 39.0%
Fitness Testing:     46.2 seconds, 48.1%
Report:              12.2 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 3294.0
Test mean error for best: 1.64700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -130.1134451721
Correct output: -69.6373493193 | Program output: -71.6373493193
Correct output: 31.0335568415  | Program output: 29.0335568415 
Correct output: 143.9583761825 | Program output: 141.9583761825
Correct output: -97.1428066122 | Program output: -99.1428066122
Correct output: 95.7820549849  | Program output: 93.7820549849 
Correct output: -47.2426472388 | Program output: -49.2426472388
Correct output: -0.182676306   | Program output: -2.182676306  
Correct output: -37.8314809378 | Program output: -39.8314809378
Correct output: -136.6715639469 | Program output: -138.6715639469
Correct output: -110.4595416311 | Program output: -112.4595416311
Correct output: -93.1960008927 | Program output: -95.1960008927
Correct output: 107.4784528401 | Program output: 105.4784528401
Correct output: -7.050955449   | Program output: -9.050955449  
Correct output: 18.5076699196  | Program output: 16.5076699196 
Correct output: 105.1823113563 | Program output: 103.1823113563
Correct output: -61.6767169156 | Program output: -63.6767169156
Correct output: 23.0810823921  | Program output: 21.0810823921 
Correct output: -111.6774434108 | Program output: -113.6774434108
Correct output: -8.9375434343  | Program output: -10.9375434343
Correct output: -58.3282773985 | Program output: -60.3282773985
Correct output: -11.0175155686 | Program output: -13.0175155686
Correct output: 34.8893323604  | Program output: 32.8893323604 
Correct output: 58.6746845405  | Program output: 56.6746845405 
Correct output: 53.0707001919  | Program output: 51.0707001919 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_dec} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction float_shove} {:instruction integer_yank} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction integer_mult} {:instruction float_dup_items} {:instruction integer_dup} {:instruction float_mod} {:instruction integer_max} {:instruction integer_dec} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_frominteger} {:instruction tag_integer_779} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction in2} {:instruction float_min} {:instruction integer_mod} {:instruction float_sin} {:instruction float_inc} {:instruction -65.64287366959917} {:instruction float_yankdup} {:instruction float_flush} {:instruction integer_swap} {:instruction integer_dup} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_mult} {:instruction float_rot} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_tan} {:instruction integer_sub} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_shove} {:instruction integer_dup} {:instruction 34} {:instruction tag_integer_736})
Best program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add float_dec integer_dup_times integer_dec float_dec integer_max print_float float_shove integer_yank integer_mult float_dup_items integer_dup integer_mult float_dup_items integer_dup float_mod integer_max integer_dec print_integer integer_inc integer_swap integer_rot print_integer integer_inc integer_swap integer_rot integer_rot float_frominteger tag_integer_779 integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos integer_sub integer_stackdepth float_tan in2 float_min integer_mod float_sin float_inc -65.64287366959917 float_yankdup float_flush integer_swap integer_dup float_inc float_yankdup float_dup_items integer_add float_mult float_rot integer_stackdepth integer_yank float_tan integer_sub float_pop integer_stackdepth float_rot float_dec float_yankdup integer_shove integer_dup 34 tag_integer_736)
Errors: [2.0 2 2.0 2 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 2 2.0 2 2.0 1 2.0 1 2.0 1 2.0 1]
Total: 80.0
Mean: 1.6
Genome size: 75
Size: 76
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2706.7585605000004
Median total errors in population: 1441.0
Error averages by case: (134.9652229 2.998 78.82595690000001 2.804 106.17115620000001 2.787 104.38956570000002 3.569 94.759708 2.864 98.77227919999999 2.048 109.82505280000002 11.435 66.50390589999999 1.821 129.4453787 10.02 90.10890790000002 2.863 122.24528490000002 3.581 64.80288460000001 1.4 123.10936509999999 3.607 103.53613830000002 2.696 133.83675069999998 11.419 139.1422585 3.767 75.59469010000002 2.747 84.69154010000001 2.75 129.01719540000002 3.588 95.26818949999999 10.696 86.1753854 2.846 127.76972559999996 10.779 82.0868477 2.819 67.75001060000001 2.638 137.9561598 11.467)
Error minima by case: (2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 1.2179 1 2.0 1 0.0 0 2.0 1 2.0 1 2.0 1 0.0 0 2.0 1 0.3616 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1 0.038 1 2.0 1 2.0 1 2.0 1 2.0 1 2.0 1)
Average genome size in population (length): 57.377
Average program size in population (points): 58.377
Average percent parens in population: 0.018
Minimum age in population: 33.56781244277954
Maximum age in population: 38.22410655021667
Average age in population: 36.23012259697914
Median age in population: 36.24648851156235
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.836
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.836
Total error diversity:				 0.063
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 39137890
--- Timings ---
Current time: 1529614993127 milliseconds
Total Time:          99.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.9 seconds, 39.1%
Fitness Testing:     47.9 seconds, 48.1%
Report:              12.6 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -128.1134451721
Correct output: -69.6373493193 | Program output: -69.6373493193
Correct output: 31.0335568415  | Program output: 31.0335568415 
Correct output: 143.9583761825 | Program output: 143.9583761825
Correct output: -97.1428066122 | Program output: -97.1428066122
Correct output: 95.7820549849  | Program output: 95.7820549849 
Correct output: -47.2426472388 | Program output: -47.2426472388
Correct output: -0.182676306   | Program output: -0.182676306  
Correct output: -37.8314809378 | Program output: -37.8314809378
Correct output: -136.6715639469 | Program output: -136.6715639469
Correct output: -110.4595416311 | Program output: -110.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 107.4784528401
Correct output: -7.050955449   | Program output: -7.050955449  
Correct output: 18.5076699196  | Program output: 18.5076699196 
Correct output: 105.1823113563 | Program output: 105.1823113563
Correct output: -61.6767169156 | Program output: -61.6767169156
Correct output: 23.0810823921  | Program output: 23.0810823921 
Correct output: -111.6774434108 | Program output: -111.6774434108
Correct output: -8.9375434343  | Program output: -8.9375434343 
Correct output: -58.3282773985 | Program output: -58.3282773985
Correct output: -11.0175155686 | Program output: -11.0175155686
Correct output: 34.8893323604  | Program output: 34.8893323604 
Correct output: 58.6746845405  | Program output: 58.6746845405 
Correct output: 53.0707001919  | Program output: 53.0707001919 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction integer_mult} {:instruction in2} {:instruction in1} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction float_add} {:instruction print_float} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_dec} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_max} {:instruction float_dec} {:instruction integer_max} {:instruction float_frominteger} {:instruction float_dec} {:instruction integer_max} {:instruction print_float} {:instruction integer_rot} {:instruction print_integer} {:instruction integer_inc} {:instruction integer_swap} {:instruction -6.081139161484785} {:instruction integer_rot} {:instruction float_frominteger} {:instruction float_mult} {:instruction float_frominteger} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tagged_36} {:instruction integer_flush} {:instruction float_frominteger} {:instruction integer_dup} {:instruction integer_inc} {:instruction -31} {:instruction float_cos})
Best program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add print_float integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec float_dec float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_max float_frominteger float_dec integer_max print_float integer_rot print_integer integer_inc integer_swap -6.081139161484785 integer_rot float_frominteger float_mult float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2216.5264313000007
Median total errors in population: 277.0
Error averages by case: (99.05428380000002 3.06 75.38461920000003 2.936 88.38557399999998 2.867 85.17848150000002 3.024 82.36123530000003 3.094 81.77143789999998 2.316 88.54949390000003 6.346 68.71695430000001 1.92 97.29666540000001 5.734 81.59601510000002 2.813 93.56592359999998 2.836 70.47080690000004 2.346 91.77285159999997 3.192 83.19586970000005 2.581 96.29592399999999 6.028 98.61325389999999 3.328 73.90644940000003 2.475 78.47968589999998 2.655 96.3909154 2.87 82.4957237 6.169 76.77049179999996 2.944 97.09579619999998 5.809 74.40785200000002 2.58 68.76968590000004 2.346 97.46544090000005 6.266)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 54.797
Average program size in population (points): 55.797
Average percent parens in population: 0.019
Minimum age in population: 34.78467226028442
Maximum age in population: 39.89590501785278
Average age in population: 37.82744453769922
Median age in population: 37.86985141038895
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 67
Genome diversity (% unique Plush genomes):	 0.749
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 67
Syntactic diversity (% unique Push programs):	 0.749
Total error diversity:				 0.06
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 40508035
--- Timings ---
Current time: 1529614997047 milliseconds
Total Time:         103.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.6 seconds, 39.2%
Fitness Testing:     49.7 seconds, 47.9%
Report:              13.3 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 25
Successful program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add print_float integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec float_dec float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_max float_frominteger float_dec integer_max print_float integer_rot print_integer integer_inc integer_swap -6.081139161484785 integer_rot float_frominteger float_mult float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 46


Auto-simplifying with starting size: 46
step: 0
program: (float_swap integer_mult in2 in1 float_frominteger integer_yankdup float_add print_float integer_dup_times float_dec integer_max float_dec integer_dup_times float_dec float_dec float_dec integer_max float_dec integer_dup_times float_dec integer_max float_dec integer_max float_frominteger float_dec integer_max print_float integer_rot print_integer integer_inc integer_swap -6.081139161484785 integer_rot float_frominteger float_mult float_frominteger float_frominteger integer_shove tagged_36 integer_flush float_frominteger integer_dup integer_inc -31 float_cos)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 46

step: 500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in2 in1 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: -128.1134451721 | Program output: -128.1134451721
Correct output: -69.6373493193 | Program output: -69.6373493193
Correct output: 31.0335568415  | Program output: 31.0335568415 
Correct output: 143.9583761825 | Program output: 143.9583761825
Correct output: -97.1428066122 | Program output: -97.1428066122
Correct output: 95.7820549849  | Program output: 95.7820549849 
Correct output: -47.2426472388 | Program output: -47.2426472388
Correct output: -0.182676306   | Program output: -0.182676306  
Correct output: -37.8314809378 | Program output: -37.8314809378
Correct output: -136.6715639469 | Program output: -136.6715639469
Correct output: -110.4595416311 | Program output: -110.4595416311
Correct output: -93.1960008927 | Program output: -93.1960008927
Correct output: 107.4784528401 | Program output: 107.4784528401
Correct output: -7.050955449   | Program output: -7.050955449  
Correct output: 18.5076699196  | Program output: 18.5076699196 
Correct output: 105.1823113563 | Program output: 105.1823113563
Correct output: -61.6767169156 | Program output: -61.6767169156
Correct output: 23.0810823921  | Program output: 23.0810823921 
Correct output: -111.6774434108 | Program output: -111.6774434108
Correct output: -8.9375434343  | Program output: -8.9375434343 
Correct output: -58.3282773985 | Program output: -58.3282773985
Correct output: -11.0175155686 | Program output: -11.0175155686
Correct output: 34.8893323604  | Program output: 34.8893323604 
Correct output: 58.6746845405  | Program output: 58.6746845405 
Correct output: 53.0707001919  | Program output: 53.0707001919 
;;******************************
