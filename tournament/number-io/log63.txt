Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[68.06033715427162 99] 167.06033715427162]
Train Case:   1 | Input/Output: [[11.392539568999084 -36] -24.607460431000916]
Train Case:   2 | Input/Output: [[40.49674541024217 7] 47.49674541024217]
Train Case:   3 | Input/Output: [[52.54229709911462 -31] 21.54229709911462]
Train Case:   4 | Input/Output: [[39.06289434261154 100] 139.06289434261154]
Train Case:   5 | Input/Output: [[26.823561408872806 -8] 18.823561408872806]
Train Case:   6 | Input/Output: [[-40.73499095390358 81] 40.26500904609642]
Train Case:   7 | Input/Output: [[-29.852480804292398 -25] -54.8524808042924]
Train Case:   8 | Input/Output: [[-6.102206809922507 63] 56.89779319007749]
Train Case:   9 | Input/Output: [[-10.754208557528358 -71] -81.75420855752836]
Train Case:  10 | Input/Output: [[-61.57803289059303 -77] -138.57803289059302]
Train Case:  11 | Input/Output: [[71.1358678769667 91] 162.1358678769667]
Train Case:  12 | Input/Output: [[67.60235491302996 -61] 6.602354913029956]
Train Case:  13 | Input/Output: [[61.430227073563685 38] 99.43022707356369]
Train Case:  14 | Input/Output: [[-11.347145960226783 -87] -98.34714596022678]
Train Case:  15 | Input/Output: [[-34.69177504953413 -32] -66.69177504953413]
Train Case:  16 | Input/Output: [[-96.59087411485096 -8] -104.59087411485096]
Train Case:  17 | Input/Output: [[9.267308483377107 38] 47.26730848337711]
Train Case:  18 | Input/Output: [[58.35631769832301 56] 114.35631769832301]
Train Case:  19 | Input/Output: [[-74.18248805522576 75] 0.8175119447742389]
Train Case:  20 | Input/Output: [[78.5831091654729 -64] 14.583109165472905]
Train Case:  21 | Input/Output: [[44.85485230105121 -20] 24.85485230105121]
Train Case:  22 | Input/Output: [[-72.26946435083474 93] 20.73053564916526]
Train Case:  23 | Input/Output: [[-20.21694490763926 6] -14.21694490763926]
Train Case:  24 | Input/Output: [[-56.71658243027928 -9] -65.71658243027929]
Test Case:   0 | Input/Output: [[40.83136068572625 -77] -36.16863931427375]
Test Case:   1 | Input/Output: [[45.440313117093126 -45] 0.44031311709312604]
Test Case:   2 | Input/Output: [[-52.8362162865764 21] -31.836216286576402]
Test Case:   3 | Input/Output: [[-51.33666482873891 30] -21.33666482873891]
Test Case:   4 | Input/Output: [[75.0604959629338 59] 134.0604959629338]
Test Case:   5 | Input/Output: [[-47.40732400434098 -92] -139.40732400434098]
Test Case:   6 | Input/Output: [[69.01788911149373 -10] 59.01788911149373]
Test Case:   7 | Input/Output: [[-17.440485643002972 -71] -88.44048564300297]
Test Case:   8 | Input/Output: [[75.73967579077657 -80] -4.260324209223427]
Test Case:   9 | Input/Output: [[-35.63141589051311 -58] -93.63141589051311]
Test Case:  10 | Input/Output: [[-23.83068100734245 53] 29.16931899265755]
Test Case:  11 | Input/Output: [[-86.73011968913207 -44] -130.73011968913207]
Test Case:  12 | Input/Output: [[-30.95091914973449 56] 25.04908085026551]
Test Case:  13 | Input/Output: [[-76.18008390138525 93] 16.819916098614755]
Test Case:  14 | Input/Output: [[38.09642577377414 73] 111.09642577377414]
Test Case:  15 | Input/Output: [[51.60154554214955 -35] 16.60154554214955]
Test Case:  16 | Input/Output: [[49.03897780917234 24] 73.03897780917234]
Test Case:  17 | Input/Output: [[-36.852288494601424 86] 49.147711505398576]
Test Case:  18 | Input/Output: [[-39.358279105831095 -54] -93.35827910583109]
Test Case:  19 | Input/Output: [[-46.71327537298566 -7] -53.71327537298566]
Test Case:  20 | Input/Output: [[-31.880930245174227 -89] -120.88093024517423]
Test Case:  21 | Input/Output: [[-54.9432452530479 -88] -142.9432452530479]
Test Case:  22 | Input/Output: [[-37.715172130153476 6] -31.715172130153476]
Test Case:  23 | Input/Output: [[61.931570806699995 0] 61.931570806699995]
Test Case:  24 | Input/Output: [[47.74510439918848 -13] 34.74510439918848]
Test Case:  25 | Input/Output: [[93.47875741925426 -38] 55.478757419254265]
Test Case:  26 | Input/Output: [[-10.76738679086209 52] 41.23261320913791]
Test Case:  27 | Input/Output: [[-72.0051569241005 -41] -113.0051569241005]
Test Case:  28 | Input/Output: [[-18.372629547235036 -22] -40.372629547235036]
Test Case:  29 | Input/Output: [[-28.971830042893828 -70] -98.97183004289383]
Test Case:  30 | Input/Output: [[48.114323208366756 -44] 4.114323208366756]
Test Case:  31 | Input/Output: [[-65.76539825346804 -5] -70.76539825346804]
Test Case:  32 | Input/Output: [[83.2385794945456 77] 160.2385794945456]
Test Case:  33 | Input/Output: [[-90.94601776143503 73] -17.94601776143503]
Test Case:  34 | Input/Output: [[-81.32851464836143 -4] -85.32851464836143]
Test Case:  35 | Input/Output: [[-22.315914041771777 49] 26.684085958228223]
Test Case:  36 | Input/Output: [[25.920605739308726 -40] -14.079394260691274]
Test Case:  37 | Input/Output: [[-67.2924991484883 43] -24.292499148488304]
Test Case:  38 | Input/Output: [[-53.207373743641725 -50] -103.20737374364172]
Test Case:  39 | Input/Output: [[-24.943224131389258 5] -19.943224131389258]
Test Case:  40 | Input/Output: [[51.90711716341187 -24] 27.90711716341187]
Test Case:  41 | Input/Output: [[89.65418516935259 56] 145.6541851693526]
Test Case:  42 | Input/Output: [[-22.935668719094565 -91] -113.93566871909456]
Test Case:  43 | Input/Output: [[3.880458444240716 -51] -47.119541555759284]
Test Case:  44 | Input/Output: [[-23.669731410691313 11] -12.669731410691313]
Test Case:  45 | Input/Output: [[87.38736435900339 -90] -2.612635640996615]
Test Case:  46 | Input/Output: [[84.19190802070213 34] 118.19190802070213]
Test Case:  47 | Input/Output: [[-78.58539763634874 5] -73.58539763634874]
Test Case:  48 | Input/Output: [[-61.403602657521716 -26] -87.40360265752172]
Test Case:  49 | Input/Output: [[29.34227213107161 -40] -10.65772786892839]
Test Case:  50 | Input/Output: [[43.72471191101107 27] 70.72471191101107]
Test Case:  51 | Input/Output: [[31.366339352755205 38] 69.3663393527552]
Test Case:  52 | Input/Output: [[-0.8590901549324599 -9] -9.85909015493246]
Test Case:  53 | Input/Output: [[-2.2500453552635378 78] 75.74995464473646]
Test Case:  54 | Input/Output: [[76.28011173136068 -58] 18.280111731360677]
Test Case:  55 | Input/Output: [[-16.24138033217683 -12] -28.24138033217683]
Test Case:  56 | Input/Output: [[97.80203481415498 -67] 30.80203481415498]
Test Case:  57 | Input/Output: [[-36.81316294364372 74] 37.18683705635628]
Test Case:  58 | Input/Output: [[-6.948970471850188 -39] -45.94897047185019]
Test Case:  59 | Input/Output: [[-88.985510202513 94] 5.014489797487002]
Test Case:  60 | Input/Output: [[74.83187285196377 7] 81.83187285196377]
Test Case:  61 | Input/Output: [[-34.120724870182315 16] -18.120724870182315]
Test Case:  62 | Input/Output: [[37.560885442578524 20] 57.560885442578524]
Test Case:  63 | Input/Output: [[-21.225169133204645 63] 41.774830866795355]
Test Case:  64 | Input/Output: [[87.57450768977012 37] 124.57450768977012]
Test Case:  65 | Input/Output: [[9.344279888855397 58] 67.3442798888554]
Test Case:  66 | Input/Output: [[-87.24431624262363 75] -12.244316242623626]
Test Case:  67 | Input/Output: [[-83.66930153098019 71] -12.669301530980192]
Test Case:  68 | Input/Output: [[-22.201508884704097 93] 70.7984911152959]
Test Case:  69 | Input/Output: [[45.925565156772365 51] 96.92556515677236]
Test Case:  70 | Input/Output: [[73.4026847408295 -57] 16.4026847408295]
Test Case:  71 | Input/Output: [[-55.2609575955253 52] -3.260957595525298]
Test Case:  72 | Input/Output: [[78.15075108619459 45] 123.15075108619459]
Test Case:  73 | Input/Output: [[39.24602244235524 -3] 36.24602244235524]
Test Case:  74 | Input/Output: [[-43.153100117002 91] 47.846899882998]
Test Case:  75 | Input/Output: [[-71.3691447406568 -33] -104.3691447406568]
Test Case:  76 | Input/Output: [[-30.803565930919845 -72] -102.80356593091985]
Test Case:  77 | Input/Output: [[7.4181907752500535 -64] -56.58180922474995]
Test Case:  78 | Input/Output: [[22.259351221924547 5] 27.259351221924547]
Test Case:  79 | Input/Output: [[55.892810351646176 15] 70.89281035164618]
Test Case:  80 | Input/Output: [[17.377674108492187 -16] 1.3776741084921866]
Test Case:  81 | Input/Output: [[60.19468851053895 65] 125.19468851053895]
Test Case:  82 | Input/Output: [[26.857574297843485 -66] -39.142425702156515]
Test Case:  83 | Input/Output: [[-96.82914428878362 92] -4.829144288783624]
Test Case:  84 | Input/Output: [[92.06297361736625 -22] 70.06297361736625]
Test Case:  85 | Input/Output: [[77.85568293756654 4] 81.85568293756654]
Test Case:  86 | Input/Output: [[-4.014056317479259 -28] -32.01405631747926]
Test Case:  87 | Input/Output: [[-79.12061500308035 -95] -174.12061500308033]
Test Case:  88 | Input/Output: [[35.767479672533995 -85] -49.232520327466005]
Test Case:  89 | Input/Output: [[-45.136617816149126 -33] -78.13661781614913]
Test Case:  90 | Input/Output: [[58.01237834887152 51] 109.01237834887152]
Test Case:  91 | Input/Output: [[69.68183323571634 9] 78.68183323571634]
Test Case:  92 | Input/Output: [[7.138684313285125 -55] -47.861315686714875]
Test Case:  93 | Input/Output: [[-60.451628034182114 -72] -132.4516280341821]
Test Case:  94 | Input/Output: [[47.137231504394066 -84] -36.862768495605934]
Test Case:  95 | Input/Output: [[-36.36511335342316 -41] -77.36511335342317]
Test Case:  96 | Input/Output: [[11.454290530742313 65] 76.45429053074231]
Test Case:  97 | Input/Output: [[0.6834565485473405 17] 17.68345654854734]
Test Case:  98 | Input/Output: [[67.15503312719596 87] 154.15503312719596]
Test Case:  99 | Input/Output: [[15.844174729695453 -83] -67.15582527030455]
Test Case: 100 | Input/Output: [[-1.0660428188267588 -11] -12.066042818826759]
Test Case: 101 | Input/Output: [[1.5241507654353654 57] 58.524150765435365]
Test Case: 102 | Input/Output: [[58.738459774552354 -40] 18.738459774552354]
Test Case: 103 | Input/Output: [[-86.25089699704864 -96] -182.25089699704864]
Test Case: 104 | Input/Output: [[-48.26895579005024 41] -7.268955790050242]
Test Case: 105 | Input/Output: [[-83.70131108037722 13] -70.70131108037722]
Test Case: 106 | Input/Output: [[46.31822645348143 22] 68.31822645348143]
Test Case: 107 | Input/Output: [[41.48513150783825 64] 105.48513150783825]
Test Case: 108 | Input/Output: [[4.515899376097266 -22] -17.484100623902734]
Test Case: 109 | Input/Output: [[48.75921824388675 74] 122.75921824388675]
Test Case: 110 | Input/Output: [[-96.69004963215002 -8] -104.69004963215002]
Test Case: 111 | Input/Output: [[69.62776673954875 92] 161.62776673954875]
Test Case: 112 | Input/Output: [[-99.75263888856816 88] -11.752638888568157]
Test Case: 113 | Input/Output: [[14.103471301934107 85] 99.1034713019341]
Test Case: 114 | Input/Output: [[-84.51372724244067 33] -51.513727242440666]
Test Case: 115 | Input/Output: [[23.368877230679928 90] 113.36887723067993]
Test Case: 116 | Input/Output: [[-92.48035833661787 77] -15.480358336617869]
Test Case: 117 | Input/Output: [[-59.98718515249257 -46] -105.98718515249257]
Test Case: 118 | Input/Output: [[60.112067306017934 37] 97.11206730601793]
Test Case: 119 | Input/Output: [[-15.450934261435066 38] 22.549065738564934]
Test Case: 120 | Input/Output: [[40.243675772187856 -72] -31.756324227812144]
Test Case: 121 | Input/Output: [[91.85490462250544 -45] 46.854904622505444]
Test Case: 122 | Input/Output: [[-69.97175115047646 96] 26.028248849523536]
Test Case: 123 | Input/Output: [[99.22099269477539 -43] 56.22099269477539]
Test Case: 124 | Input/Output: [[99.52375059885284 -28] 71.52375059885284]
Test Case: 125 | Input/Output: [[-22.52701494494498 -77] -99.52701494494498]
Test Case: 126 | Input/Output: [[-94.81498258499298 51] -43.814982584992975]
Test Case: 127 | Input/Output: [[97.31591810797536 86] 183.31591810797536]
Test Case: 128 | Input/Output: [[75.29866956200362 54] 129.29866956200362]
Test Case: 129 | Input/Output: [[38.21297475306278 56] 94.21297475306278]
Test Case: 130 | Input/Output: [[-6.572847036906808 78] 71.42715296309319]
Test Case: 131 | Input/Output: [[-3.658559734129298 -44] -47.6585597341293]
Test Case: 132 | Input/Output: [[-15.42802728156714 -56] -71.42802728156714]
Test Case: 133 | Input/Output: [[-7.016647048753839 7] -0.016647048753839044]
Test Case: 134 | Input/Output: [[94.11698896483159 -79] 15.116988964831592]
Test Case: 135 | Input/Output: [[26.417441348474895 76] 102.4174413484749]
Test Case: 136 | Input/Output: [[-6.9138822183485615 86] 79.08611778165144]
Test Case: 137 | Input/Output: [[-55.32251520134861 -32] -87.32251520134861]
Test Case: 138 | Input/Output: [[-17.856839729663363 -39] -56.85683972966336]
Test Case: 139 | Input/Output: [[-44.55366434486252 81] 36.44633565513748]
Test Case: 140 | Input/Output: [[87.57844761262112 -16] 71.57844761262112]
Test Case: 141 | Input/Output: [[-31.105673540284286 -35] -66.10567354028429]
Test Case: 142 | Input/Output: [[-48.6219026463153 60] 11.378097353684701]
Test Case: 143 | Input/Output: [[-99.54421617810347 -1] -100.54421617810347]
Test Case: 144 | Input/Output: [[-39.516228234498875 -23] -62.516228234498875]
Test Case: 145 | Input/Output: [[88.93439235248908 -7] 81.93439235248908]
Test Case: 146 | Input/Output: [[-41.309443699673906 -10] -51.309443699673906]
Test Case: 147 | Input/Output: [[-40.50175912329435 95] 54.49824087670565]
Test Case: 148 | Input/Output: [[96.8569693184894 -52] 44.856969318489405]
Test Case: 149 | Input/Output: [[-32.73235483303067 -33] -65.73235483303067]
Test Case: 150 | Input/Output: [[54.0916099793196 -68] -13.9083900206804]
Test Case: 151 | Input/Output: [[-0.7873756589994514 -98] -98.78737565899945]
Test Case: 152 | Input/Output: [[-55.564119901877085 -2] -57.564119901877085]
Test Case: 153 | Input/Output: [[-99.01561144765387 -65] -164.01561144765387]
Test Case: 154 | Input/Output: [[-13.19722633679801 -84] -97.19722633679801]
Test Case: 155 | Input/Output: [[-50.30165315776438 -89] -139.30165315776438]
Test Case: 156 | Input/Output: [[46.037500875399644 26] 72.03750087539964]
Test Case: 157 | Input/Output: [[45.72283544910695 -19] 26.722835449106952]
Test Case: 158 | Input/Output: [[15.132645812382876 -4] 11.132645812382876]
Test Case: 159 | Input/Output: [[75.3470278560641 -68] 7.347027856064102]
Test Case: 160 | Input/Output: [[-98.03607067040436 86] -12.036070670404357]
Test Case: 161 | Input/Output: [[61.738897745224136 81] 142.73889774522414]
Test Case: 162 | Input/Output: [[-35.43401009026475 7] -28.43401009026475]
Test Case: 163 | Input/Output: [[-25.597497528239785 -63] -88.59749752823978]
Test Case: 164 | Input/Output: [[-52.83084682882973 41] -11.830846828829728]
Test Case: 165 | Input/Output: [[46.33779137322546 20] 66.33779137322546]
Test Case: 166 | Input/Output: [[65.12666192422878 55] 120.12666192422878]
Test Case: 167 | Input/Output: [[-86.6863823793887 -80] -166.6863823793887]
Test Case: 168 | Input/Output: [[34.01178024508326 67] 101.01178024508326]
Test Case: 169 | Input/Output: [[16.17711382085946 -25] -8.82288617914054]
Test Case: 170 | Input/Output: [[-53.28148733224247 -83] -136.28148733224248]
Test Case: 171 | Input/Output: [[54.793889937079456 -98] -43.206110062920544]
Test Case: 172 | Input/Output: [[-40.56658117863601 72] 31.433418821363993]
Test Case: 173 | Input/Output: [[-5.6110558010849445 88] 82.38894419891506]
Test Case: 174 | Input/Output: [[-74.93571227965901 60] -14.935712279659015]
Test Case: 175 | Input/Output: [[-48.990992158636274 -46] -94.99099215863627]
Test Case: 176 | Input/Output: [[-33.17252650355877 -18] -51.17252650355877]
Test Case: 177 | Input/Output: [[9.561907150916667 -87] -77.43809284908333]
Test Case: 178 | Input/Output: [[-54.80670314032261 70] 15.193296859677389]
Test Case: 179 | Input/Output: [[-34.56671317055631 89] 54.43328682944369]
Test Case: 180 | Input/Output: [[10.488120014170647 63] 73.48812001417065]
Test Case: 181 | Input/Output: [[-38.41834592342366 -11] -49.41834592342366]
Test Case: 182 | Input/Output: [[90.65254455943992 -72] 18.652544559439917]
Test Case: 183 | Input/Output: [[82.05195096945369 -42] 40.051950969453685]
Test Case: 184 | Input/Output: [[-49.040089542215725 71] 21.959910457784275]
Test Case: 185 | Input/Output: [[-20.230819330252928 69] 48.76918066974707]
Test Case: 186 | Input/Output: [[90.77937293767448 47] 137.77937293767448]
Test Case: 187 | Input/Output: [[27.77729653294199 -46] -18.22270346705801]
Test Case: 188 | Input/Output: [[1.132240433838433 -62] -60.86775956616157]
Test Case: 189 | Input/Output: [[78.65593439795106 82] 160.65593439795106]
Test Case: 190 | Input/Output: [[-87.61175008162019 12] -75.61175008162019]
Test Case: 191 | Input/Output: [[-35.636997546464826 -22] -57.636997546464826]
Test Case: 192 | Input/Output: [[-57.182579861348245 -65] -122.18257986134824]
Test Case: 193 | Input/Output: [[-33.442099218908396 35] 1.557900781091604]
Test Case: 194 | Input/Output: [[-66.53707508390995 6] -60.537075083909954]
Test Case: 195 | Input/Output: [[-77.69351114926741 62] -15.693511149267408]
Test Case: 196 | Input/Output: [[-77.68944965405571 30] -47.68944965405571]
Test Case: 197 | Input/Output: [[46.52522545941076 -40] 6.525225459410763]
Test Case: 198 | Input/Output: [[-98.69196016503297 -63] -161.69196016503298]
Test Case: 199 | Input/Output: [[82.58419708662157 2] 84.58419708662157]
Test Case: 200 | Input/Output: [[-52.2676034605895 71] 18.7323965394105]
Test Case: 201 | Input/Output: [[7.824277332787062 -80] -72.17572266721294]
Test Case: 202 | Input/Output: [[-18.159661035916713 -3] -21.159661035916713]
Test Case: 203 | Input/Output: [[16.273426005797916 52] 68.27342600579792]
Test Case: 204 | Input/Output: [[3.339485622602467 37] 40.33948562260247]
Test Case: 205 | Input/Output: [[-70.16245128086888 29] -41.16245128086888]
Test Case: 206 | Input/Output: [[-17.024383458114883 -43] -60.02438345811488]
Test Case: 207 | Input/Output: [[52.01756460584909 73] 125.01756460584909]
Test Case: 208 | Input/Output: [[-11.239410029416462 57] 45.76058997058354]
Test Case: 209 | Input/Output: [[-19.95885638657981 -56] -75.95885638657981]
Test Case: 210 | Input/Output: [[83.7667425986804 -64] 19.766742598680395]
Test Case: 211 | Input/Output: [[-85.66130750334816 -20] -105.66130750334816]
Test Case: 212 | Input/Output: [[90.72163792903206 4] 94.72163792903206]
Test Case: 213 | Input/Output: [[98.21973314912867 -90] 8.219733149128672]
Test Case: 214 | Input/Output: [[54.511891793955215 60] 114.51189179395521]
Test Case: 215 | Input/Output: [[86.1551643770488 62] 148.1551643770488]
Test Case: 216 | Input/Output: [[-92.10887378287094 36] -56.108873782870944]
Test Case: 217 | Input/Output: [[-58.037291387490164 65] 6.962708612509836]
Test Case: 218 | Input/Output: [[64.15006647636528 2] 66.15006647636528]
Test Case: 219 | Input/Output: [[-78.2506249292307 21] -57.250624929230696]
Test Case: 220 | Input/Output: [[54.79140084553339 34] 88.79140084553339]
Test Case: 221 | Input/Output: [[-38.1372123398833 -10] -48.1372123398833]
Test Case: 222 | Input/Output: [[-85.44651590032888 39] -46.446515900328876]
Test Case: 223 | Input/Output: [[-86.85566116720476 17] -69.85566116720476]
Test Case: 224 | Input/Output: [[-87.176061100234 -58] -145.176061100234]
Test Case: 225 | Input/Output: [[-31.75407901079319 44] 12.245920989206809]
Test Case: 226 | Input/Output: [[78.33191922060558 -41] 37.331919220605585]
Test Case: 227 | Input/Output: [[2.7993649691768923 24] 26.799364969176892]
Test Case: 228 | Input/Output: [[82.6020803864188 87] 169.6020803864188]
Test Case: 229 | Input/Output: [[-88.095083423721 -26] -114.095083423721]
Test Case: 230 | Input/Output: [[-76.04657646634635 -19] -95.04657646634635]
Test Case: 231 | Input/Output: [[16.801410748694096 -51] -34.198589251305904]
Test Case: 232 | Input/Output: [[-6.9742201433046915 20] 13.025779856695308]
Test Case: 233 | Input/Output: [[-90.59956232943505 46] -44.599562329435045]
Test Case: 234 | Input/Output: [[-60.682439514353945 48] -12.682439514353945]
Test Case: 235 | Input/Output: [[18.837884184479876 25] 43.837884184479876]
Test Case: 236 | Input/Output: [[76.75871472349215 -95] -18.241285276507853]
Test Case: 237 | Input/Output: [[-56.68376331054734 -69] -125.68376331054733]
Test Case: 238 | Input/Output: [[25.831775413010845 52] 77.83177541301085]
Test Case: 239 | Input/Output: [[-63.15258181103389 83] 19.84741818896611]
Test Case: 240 | Input/Output: [[71.81308434516302 9] 80.81308434516302]
Test Case: 241 | Input/Output: [[-22.22923488944859 -33] -55.22923488944859]
Test Case: 242 | Input/Output: [[10.316245520433469 -71] -60.68375447956653]
Test Case: 243 | Input/Output: [[-66.32220760939623 -76] -142.32220760939623]
Test Case: 244 | Input/Output: [[-34.79502857747525 93] 58.20497142252475]
Test Case: 245 | Input/Output: [[86.14705731713337 36] 122.14705731713337]
Test Case: 246 | Input/Output: [[47.76829275952858 -21] 26.768292759528578]
Test Case: 247 | Input/Output: [[-56.20141165978831 72] 15.798588340211687]
Test Case: 248 | Input/Output: [[70.88829755502587 34] 104.88829755502587]
Test Case: 249 | Input/Output: [[-9.824527370454334 68] 58.175472629545666]
Test Case: 250 | Input/Output: [[-12.729809133517577 51] 38.27019086648242]
Test Case: 251 | Input/Output: [[31.630258345093978 82] 113.63025834509398]
Test Case: 252 | Input/Output: [[-70.36388587272234 -41] -111.36388587272234]
Test Case: 253 | Input/Output: [[-35.195020617548536 -1] -36.195020617548536]
Test Case: 254 | Input/Output: [[91.52999294851975 6] 97.52999294851975]
Test Case: 255 | Input/Output: [[-82.54197353206563 20] -62.541973532065626]
Test Case: 256 | Input/Output: [[-46.21963559273923 14] -32.21963559273923]
Test Case: 257 | Input/Output: [[-58.87218111053656 2] -56.87218111053656]
Test Case: 258 | Input/Output: [[55.13556548620937 -49] 6.135565486209373]
Test Case: 259 | Input/Output: [[57.18477406272987 69] 126.18477406272987]
Test Case: 260 | Input/Output: [[-61.3523512502288 51] -10.3523512502288]
Test Case: 261 | Input/Output: [[-81.0472221973564 19] -62.047222197356405]
Test Case: 262 | Input/Output: [[-61.92667113484156 -65] -126.92667113484157]
Test Case: 263 | Input/Output: [[78.81207079912329 -97] -18.18792920087671]
Test Case: 264 | Input/Output: [[34.83049010191209 96] 130.8304901019121]
Test Case: 265 | Input/Output: [[77.083034932191 82] 159.083034932191]
Test Case: 266 | Input/Output: [[-32.35175285141203 58] 25.64824714858797]
Test Case: 267 | Input/Output: [[-9.187651590108544 -27] -36.187651590108544]
Test Case: 268 | Input/Output: [[-61.53825689264376 -91] -152.53825689264374]
Test Case: 269 | Input/Output: [[-49.88531885150853 -99] -148.88531885150854]
Test Case: 270 | Input/Output: [[14.146217896117406 20] 34.146217896117406]
Test Case: 271 | Input/Output: [[-99.96611279398839 24] -75.96611279398839]
Test Case: 272 | Input/Output: [[-46.35406972752227 -2] -48.35406972752227]
Test Case: 273 | Input/Output: [[93.02229419201328 -92] 1.0222941920132769]
Test Case: 274 | Input/Output: [[88.39593616230806 -79] 9.395936162308061]
Test Case: 275 | Input/Output: [[84.50228020514331 -9] 75.50228020514331]
Test Case: 276 | Input/Output: [[58.88670458971842 86] 144.88670458971842]
Test Case: 277 | Input/Output: [[48.401242830450286 79] 127.40124283045029]
Test Case: 278 | Input/Output: [[50.15554248272335 26] 76.15554248272335]
Test Case: 279 | Input/Output: [[50.40130619089325 -96] -45.59869380910675]
Test Case: 280 | Input/Output: [[-93.23452849143202 -47] -140.234528491432]
Test Case: 281 | Input/Output: [[-7.693748492795066 70] 62.306251507204934]
Test Case: 282 | Input/Output: [[66.25905065213254 -86] -19.740949347867456]
Test Case: 283 | Input/Output: [[-31.01151206250705 -27] -58.01151206250705]
Test Case: 284 | Input/Output: [[-11.825216545776684 41] 29.174783454223316]
Test Case: 285 | Input/Output: [[-71.64857247466598 -27] -98.64857247466598]
Test Case: 286 | Input/Output: [[-68.51343382715827 -81] -149.51343382715828]
Test Case: 287 | Input/Output: [[41.83206961947374 74] 115.83206961947374]
Test Case: 288 | Input/Output: [[97.17502066312704 -71] 26.175020663127043]
Test Case: 289 | Input/Output: [[47.56998224234181 94] 141.5699822423418]
Test Case: 290 | Input/Output: [[22.16155509088682 5] 27.16155509088682]
Test Case: 291 | Input/Output: [[90.38167807097204 -95] -4.618321929027957]
Test Case: 292 | Input/Output: [[-71.10629376397237 -4] -75.10629376397237]
Test Case: 293 | Input/Output: [[-2.691259768739272 -97] -99.69125976873927]
Test Case: 294 | Input/Output: [[30.270863208241053 -14] 16.270863208241053]
Test Case: 295 | Input/Output: [[-34.48499843056459 94] 59.51500156943541]
Test Case: 296 | Input/Output: [[-22.393901092530854 -51] -73.39390109253085]
Test Case: 297 | Input/Output: [[-62.32078470757012 -39] -101.32078470757011]
Test Case: 298 | Input/Output: [[-61.80574907312766 97] 35.19425092687234]
Test Case: 299 | Input/Output: [[91.12818733905729 78] 169.1281873390573]
Test Case: 300 | Input/Output: [[-94.1704627118001 74] -20.1704627118001]
Test Case: 301 | Input/Output: [[73.69061418164287 -65] 8.690614181642871]
Test Case: 302 | Input/Output: [[-18.347356949211502 -68] -86.3473569492115]
Test Case: 303 | Input/Output: [[40.695049526393916 37] 77.69504952639392]
Test Case: 304 | Input/Output: [[43.97994442514272 -6] 37.97994442514272]
Test Case: 305 | Input/Output: [[-2.163220492772396 -97] -99.1632204927724]
Test Case: 306 | Input/Output: [[-46.230770757940284 -64] -110.23077075794029]
Test Case: 307 | Input/Output: [[-5.583367196935399 -51] -56.5833671969354]
Test Case: 308 | Input/Output: [[-95.27925438626372 86] -9.279254386263716]
Test Case: 309 | Input/Output: [[-27.472372666921956 -66] -93.47237266692196]
Test Case: 310 | Input/Output: [[24.495646055683594 -18] 6.4956460556835935]
Test Case: 311 | Input/Output: [[15.143538750535086 73] 88.14353875053509]
Test Case: 312 | Input/Output: [[-76.67157505965976 -35] -111.67157505965976]
Test Case: 313 | Input/Output: [[-20.96675852585375 80] 59.03324147414625]
Test Case: 314 | Input/Output: [[12.928619967112098 -22] -9.071380032887902]
Test Case: 315 | Input/Output: [[-31.152799947672122 93] 61.84720005232788]
Test Case: 316 | Input/Output: [[-53.239438390974556 43] -10.239438390974556]
Test Case: 317 | Input/Output: [[12.766333746388938 69] 81.76633374638894]
Test Case: 318 | Input/Output: [[-76.4337092218796 -41] -117.4337092218796]
Test Case: 319 | Input/Output: [[-95.45558568093577 -29] -124.45558568093577]
Test Case: 320 | Input/Output: [[79.96769707202495 0] 79.96769707202495]
Test Case: 321 | Input/Output: [[19.77081843977639 71] 90.77081843977639]
Test Case: 322 | Input/Output: [[75.46537906941418 -53] 22.465379069414183]
Test Case: 323 | Input/Output: [[85.35084668130389 53] 138.3508466813039]
Test Case: 324 | Input/Output: [[25.01174017134585 -55] -29.98825982865415]
Test Case: 325 | Input/Output: [[93.69738969089838 -8] 85.69738969089838]
Test Case: 326 | Input/Output: [[52.44054185897147 42] 94.44054185897147]
Test Case: 327 | Input/Output: [[-26.668425404722186 -58] -84.66842540472219]
Test Case: 328 | Input/Output: [[-43.07502254897189 30] -13.075022548971887]
Test Case: 329 | Input/Output: [[47.78559051669501 -10] 37.78559051669501]
Test Case: 330 | Input/Output: [[-41.91695777757858 28] -13.916957777578581]
Test Case: 331 | Input/Output: [[22.136408895971016 90] 112.13640889597102]
Test Case: 332 | Input/Output: [[57.906965542691694 15] 72.9069655426917]
Test Case: 333 | Input/Output: [[86.2385158813604 35] 121.2385158813604]
Test Case: 334 | Input/Output: [[-29.352556907589175 79] 49.647443092410825]
Test Case: 335 | Input/Output: [[86.56914211677037 -22] 64.56914211677037]
Test Case: 336 | Input/Output: [[-16.97754768112489 48] 31.02245231887511]
Test Case: 337 | Input/Output: [[16.045503888098537 69] 85.04550388809854]
Test Case: 338 | Input/Output: [[-51.149247726381184 -41] -92.14924772638119]
Test Case: 339 | Input/Output: [[-27.552077744168486 -16] -43.552077744168486]
Test Case: 340 | Input/Output: [[55.67464397641558 44] 99.67464397641558]
Test Case: 341 | Input/Output: [[-57.5459661100165 55] -2.5459661100165007]
Test Case: 342 | Input/Output: [[20.030031180986114 7] 27.030031180986114]
Test Case: 343 | Input/Output: [[-56.44262064704873 45] -11.442620647048727]
Test Case: 344 | Input/Output: [[-86.3599496943663 64] -22.359949694366307]
Test Case: 345 | Input/Output: [[39.13144789603834 28] 67.13144789603834]
Test Case: 346 | Input/Output: [[35.40660597015622 -55] -19.59339402984378]
Test Case: 347 | Input/Output: [[-45.6095524390052 10] -35.6095524390052]
Test Case: 348 | Input/Output: [[-30.83205444559745 -75] -105.83205444559745]
Test Case: 349 | Input/Output: [[-41.490485923661915 73] 31.509514076338085]
Test Case: 350 | Input/Output: [[76.57941106696791 19] 95.57941106696791]
Test Case: 351 | Input/Output: [[31.353871022260705 73] 104.3538710222607]
Test Case: 352 | Input/Output: [[-31.639351458691408 58] 26.360648541308592]
Test Case: 353 | Input/Output: [[43.08792458722118 -35] 8.087924587221181]
Test Case: 354 | Input/Output: [[22.49906201455103 15] 37.49906201455103]
Test Case: 355 | Input/Output: [[92.21048067197484 -2] 90.21048067197484]
Test Case: 356 | Input/Output: [[-65.43527274952889 10] -55.43527274952889]
Test Case: 357 | Input/Output: [[-75.75822203975137 41] -34.758222039751374]
Test Case: 358 | Input/Output: [[-92.73900540078841 -48] -140.73900540078841]
Test Case: 359 | Input/Output: [[20.342222345032084 86] 106.34222234503208]
Test Case: 360 | Input/Output: [[-77.56595185394512 84] 6.434048146054877]
Test Case: 361 | Input/Output: [[81.39736524309106 -85] -3.602634756908941]
Test Case: 362 | Input/Output: [[-62.483448592943766 1] -61.483448592943766]
Test Case: 363 | Input/Output: [[-17.80053017108716 -45] -62.80053017108716]
Test Case: 364 | Input/Output: [[71.20812037036077 37] 108.20812037036077]
Test Case: 365 | Input/Output: [[37.61054593809342 45] 82.61054593809342]
Test Case: 366 | Input/Output: [[-67.33491997575693 -40] -107.33491997575693]
Test Case: 367 | Input/Output: [[38.05672607991997 -39] -0.9432739200800313]
Test Case: 368 | Input/Output: [[4.588302630223893 46] 50.58830263022389]
Test Case: 369 | Input/Output: [[28.185292351931224 -2] 26.185292351931224]
Test Case: 370 | Input/Output: [[-60.27054284754028 -65] -125.27054284754027]
Test Case: 371 | Input/Output: [[45.716193485114076 -39] 6.716193485114076]
Test Case: 372 | Input/Output: [[-25.20109069780345 86] 60.79890930219655]
Test Case: 373 | Input/Output: [[-33.69652708430695 -87] -120.69652708430695]
Test Case: 374 | Input/Output: [[-91.4776247362712 48] -43.477624736271196]
Test Case: 375 | Input/Output: [[82.75450996836017 -12] 70.75450996836017]
Test Case: 376 | Input/Output: [[46.21256783544064 65] 111.21256783544064]
Test Case: 377 | Input/Output: [[14.28871375459282 56] 70.28871375459282]
Test Case: 378 | Input/Output: [[-37.34030182505161 52] 14.659698174948389]
Test Case: 379 | Input/Output: [[0.007585923624105817 67] 67.0075859236241]
Test Case: 380 | Input/Output: [[-10.582658266576189 -26] -36.58265826657619]
Test Case: 381 | Input/Output: [[71.32496462819648 -97] -25.675035371803517]
Test Case: 382 | Input/Output: [[88.4547302901232 -65] 23.454730290123194]
Test Case: 383 | Input/Output: [[-47.05347721504347 24] -23.053477215043472]
Test Case: 384 | Input/Output: [[-24.811552593647818 -12] -36.81155259364782]
Test Case: 385 | Input/Output: [[-70.56540477918614 -58] -128.56540477918614]
Test Case: 386 | Input/Output: [[17.749378989108706 -14] 3.749378989108706]
Test Case: 387 | Input/Output: [[-44.29204093083254 73] 28.707959069167458]
Test Case: 388 | Input/Output: [[62.007153488389235 -81] -18.992846511610765]
Test Case: 389 | Input/Output: [[24.67444815424298 2] 26.67444815424298]
Test Case: 390 | Input/Output: [[3.3625563176438362 -96] -92.63744368235616]
Test Case: 391 | Input/Output: [[-63.79940327007496 -9] -72.79940327007496]
Test Case: 392 | Input/Output: [[17.08560440875648 -45] -27.91439559124352]
Test Case: 393 | Input/Output: [[59.180443245084774 90] 149.18044324508477]
Test Case: 394 | Input/Output: [[-31.41834585709553 77] 45.58165414290447]
Test Case: 395 | Input/Output: [[12.724777351882494 9] 21.724777351882494]
Test Case: 396 | Input/Output: [[75.29723993231866 -44] 31.29723993231866]
Test Case: 397 | Input/Output: [[35.11709827200801 56] 91.11709827200801]
Test Case: 398 | Input/Output: [[-52.65824579752978 -45] -97.65824579752979]
Test Case: 399 | Input/Output: [[21.58041429913095 -77] -55.41958570086905]
Test Case: 400 | Input/Output: [[25.896819322546733 -53] -27.103180677453267]
Test Case: 401 | Input/Output: [[37.18895706662417 44] 81.18895706662417]
Test Case: 402 | Input/Output: [[-97.87384820296823 74] -23.873848202968233]
Test Case: 403 | Input/Output: [[-94.88098127689861 -29] -123.88098127689861]
Test Case: 404 | Input/Output: [[-79.52317205995621 4] -75.52317205995621]
Test Case: 405 | Input/Output: [[50.73402316007761 -30] 20.734023160077612]
Test Case: 406 | Input/Output: [[-27.900973861971323 -30] -57.90097386197132]
Test Case: 407 | Input/Output: [[-11.975878843829719 -78] -89.97587884382972]
Test Case: 408 | Input/Output: [[96.34464780457853 71] 167.34464780457853]
Test Case: 409 | Input/Output: [[-90.71962949281235 25] -65.71962949281235]
Test Case: 410 | Input/Output: [[-87.85863145093616 22] -65.85863145093616]
Test Case: 411 | Input/Output: [[7.597543478137254 18] 25.597543478137254]
Test Case: 412 | Input/Output: [[24.87105174253064 -73] -48.12894825746936]
Test Case: 413 | Input/Output: [[-11.65752982588863 -69] -80.65752982588863]
Test Case: 414 | Input/Output: [[57.005548452610924 -4] 53.005548452610924]
Test Case: 415 | Input/Output: [[27.964490267163185 75] 102.96449026716319]
Test Case: 416 | Input/Output: [[40.56725450171689 7] 47.56725450171689]
Test Case: 417 | Input/Output: [[-67.13899931459775 -78] -145.13899931459775]
Test Case: 418 | Input/Output: [[-92.25336187981132 -56] -148.25336187981134]
Test Case: 419 | Input/Output: [[29.907764350586433 89] 118.90776435058643]
Test Case: 420 | Input/Output: [[-39.24423540240372 24] -15.244235402403717]
Test Case: 421 | Input/Output: [[43.7492557521484 32] 75.7492557521484]
Test Case: 422 | Input/Output: [[-96.67280706362469 4] -92.67280706362469]
Test Case: 423 | Input/Output: [[-84.62704289327183 22] -62.627042893271835]
Test Case: 424 | Input/Output: [[92.88575577947054 99] 191.88575577947054]
Test Case: 425 | Input/Output: [[-35.82948787196429 -13] -48.82948787196429]
Test Case: 426 | Input/Output: [[35.33389185598293 63] 98.33389185598293]
Test Case: 427 | Input/Output: [[4.738137471865073 66] 70.73813747186507]
Test Case: 428 | Input/Output: [[-49.49312885051622 48] -1.4931288505162215]
Test Case: 429 | Input/Output: [[-21.97985563696973 0] -21.97985563696973]
Test Case: 430 | Input/Output: [[30.728729534118372 -38] -7.271270465881628]
Test Case: 431 | Input/Output: [[22.178556008560975 87] 109.17855600856097]
Test Case: 432 | Input/Output: [[20.8713769990935 -81] -60.1286230009065]
Test Case: 433 | Input/Output: [[92.28213089502657 14] 106.28213089502657]
Test Case: 434 | Input/Output: [[-93.8465902425872 65] -28.846590242587197]
Test Case: 435 | Input/Output: [[50.52444937434035 13] 63.52444937434035]
Test Case: 436 | Input/Output: [[38.397558508191764 25] 63.397558508191764]
Test Case: 437 | Input/Output: [[72.39122113064988 46] 118.39122113064988]
Test Case: 438 | Input/Output: [[66.55560341527689 -65] 1.5556034152768916]
Test Case: 439 | Input/Output: [[-2.1922220419608323 0] -2.1922220419608323]
Test Case: 440 | Input/Output: [[-71.11890127684043 32] -39.11890127684043]
Test Case: 441 | Input/Output: [[-79.89101963643466 -2] -81.89101963643466]
Test Case: 442 | Input/Output: [[71.11928078722255 -53] 18.11928078722255]
Test Case: 443 | Input/Output: [[-86.48837586667926 -47] -133.48837586667926]
Test Case: 444 | Input/Output: [[-51.32085502371331 80] 28.679144976286693]
Test Case: 445 | Input/Output: [[-75.33898417168902 -66] -141.33898417168902]
Test Case: 446 | Input/Output: [[-50.76550346865469 4] -46.76550346865469]
Test Case: 447 | Input/Output: [[-72.11582535275878 97] 24.884174647241224]
Test Case: 448 | Input/Output: [[-1.459609439354523 9] 7.540390560645477]
Test Case: 449 | Input/Output: [[-77.34890379659569 14] -63.34890379659569]
Test Case: 450 | Input/Output: [[82.95788233753615 82] 164.95788233753615]
Test Case: 451 | Input/Output: [[-84.67265664465506 96] 11.327343355344937]
Test Case: 452 | Input/Output: [[11.501103574540508 46] 57.50110357454051]
Test Case: 453 | Input/Output: [[14.784187285585489 5] 19.78418728558549]
Test Case: 454 | Input/Output: [[66.28622986444694 62] 128.28622986444694]
Test Case: 455 | Input/Output: [[-46.27508419248176 -73] -119.27508419248176]
Test Case: 456 | Input/Output: [[-37.64083975614368 -19] -56.64083975614368]
Test Case: 457 | Input/Output: [[89.26509777227966 -26] 63.26509777227966]
Test Case: 458 | Input/Output: [[73.95971484182954 -41] 32.95971484182954]
Test Case: 459 | Input/Output: [[99.19010645957701 16] 115.19010645957701]
Test Case: 460 | Input/Output: [[51.04190396779043 -95] -43.95809603220957]
Test Case: 461 | Input/Output: [[15.732761118532835 -41] -25.267238881467165]
Test Case: 462 | Input/Output: [[-37.7332240205162 75] 37.2667759794838]
Test Case: 463 | Input/Output: [[47.50659134576745 11] 58.50659134576745]
Test Case: 464 | Input/Output: [[16.01265176466211 69] 85.01265176466211]
Test Case: 465 | Input/Output: [[99.25284239118542 -20] 79.25284239118542]
Test Case: 466 | Input/Output: [[-33.6964894532568 -24] -57.6964894532568]
Test Case: 467 | Input/Output: [[14.717339406816038 0] 14.717339406816038]
Test Case: 468 | Input/Output: [[72.51516885492236 -20] 52.515168854922365]
Test Case: 469 | Input/Output: [[38.39628225510526 -29] 9.396282255105262]
Test Case: 470 | Input/Output: [[32.159787649896344 22] 54.159787649896344]
Test Case: 471 | Input/Output: [[80.83815899789778 -84] -3.1618410021022214]
Test Case: 472 | Input/Output: [[67.74569128474678 66] 133.74569128474678]
Test Case: 473 | Input/Output: [[-34.0217949380488 -4] -38.0217949380488]
Test Case: 474 | Input/Output: [[-91.81959238071995 -23] -114.81959238071995]
Test Case: 475 | Input/Output: [[85.54333153352997 97] 182.54333153352997]
Test Case: 476 | Input/Output: [[-92.70625192509641 18] -74.70625192509641]
Test Case: 477 | Input/Output: [[16.7798320097494 -88] -71.2201679902506]
Test Case: 478 | Input/Output: [[-75.5752514296077 -59] -134.5752514296077]
Test Case: 479 | Input/Output: [[-59.306460848778485 -18] -77.30646084877849]
Test Case: 480 | Input/Output: [[22.935940535674277 83] 105.93594053567428]
Test Case: 481 | Input/Output: [[-66.36316010540328 10] -56.36316010540328]
Test Case: 482 | Input/Output: [[68.22350421049626 -39] 29.22350421049626]
Test Case: 483 | Input/Output: [[-69.97828658437157 27] -42.978286584371574]
Test Case: 484 | Input/Output: [[80.06144360120115 -49] 31.061443601201148]
Test Case: 485 | Input/Output: [[-12.189089541691715 -42] -54.189089541691715]
Test Case: 486 | Input/Output: [[5.704661064065149 -3] 2.7046610640651494]
Test Case: 487 | Input/Output: [[96.04171170472648 44] 140.04171170472648]
Test Case: 488 | Input/Output: [[-59.144381744064155 -74] -133.14438174406416]
Test Case: 489 | Input/Output: [[-66.03028596807053 13] -53.03028596807053]
Test Case: 490 | Input/Output: [[-12.12064699602817 77] 64.87935300397183]
Test Case: 491 | Input/Output: [[-9.141920122400364 5] -4.141920122400364]
Test Case: 492 | Input/Output: [[76.56510629830146 62] 138.56510629830146]
Test Case: 493 | Input/Output: [[-16.875023669771522 17] 0.12497633022847765]
Test Case: 494 | Input/Output: [[-54.61320754178296 24] -30.613207541782963]
Test Case: 495 | Input/Output: [[-11.277744255408663 87] 75.72225574459134]
Test Case: 496 | Input/Output: [[-9.758410591171682 -9] -18.758410591171682]
Test Case: 497 | Input/Output: [[76.29874799433344 42] 118.29874799433344]
Test Case: 498 | Input/Output: [[85.45629826447745 68] 153.45629826447745]
Test Case: 499 | Input/Output: [[21.576856187097377 -32] -10.423143812902623]
Test Case: 500 | Input/Output: [[50.77022046976208 90] 140.77022046976208]
Test Case: 501 | Input/Output: [[51.88858981973573 57] 108.88858981973573]
Test Case: 502 | Input/Output: [[20.70059767731702 -41] -20.29940232268298]
Test Case: 503 | Input/Output: [[99.29700621473762 65] 164.29700621473762]
Test Case: 504 | Input/Output: [[29.896607347229832 72] 101.89660734722983]
Test Case: 505 | Input/Output: [[77.62356505586979 -46] 31.62356505586979]
Test Case: 506 | Input/Output: [[-2.5835733205657334 -33] -35.58357332056573]
Test Case: 507 | Input/Output: [[48.82391077433334 43] 91.82391077433334]
Test Case: 508 | Input/Output: [[99.48104371390508 -72] 27.48104371390508]
Test Case: 509 | Input/Output: [[-28.47522360768164 -61] -89.47522360768164]
Test Case: 510 | Input/Output: [[56.846471860115884 84] 140.84647186011588]
Test Case: 511 | Input/Output: [[28.247865801521073 81] 109.24786580152107]
Test Case: 512 | Input/Output: [[43.27403340234022 24] 67.27403340234022]
Test Case: 513 | Input/Output: [[-40.91584103125232 -6] -46.91584103125232]
Test Case: 514 | Input/Output: [[-63.65084417311133 87] 23.34915582688867]
Test Case: 515 | Input/Output: [[10.079880069672527 22] 32.07988006967253]
Test Case: 516 | Input/Output: [[-29.429772514180158 64] 34.57022748581984]
Test Case: 517 | Input/Output: [[-35.043004439076725 -35] -70.04300443907673]
Test Case: 518 | Input/Output: [[95.60316212547727 -75] 20.60316212547727]
Test Case: 519 | Input/Output: [[-81.03296518225116 80] -1.0329651822511607]
Test Case: 520 | Input/Output: [[29.726837410705087 -34] -4.2731625892949126]
Test Case: 521 | Input/Output: [[79.14235358975685 -41] 38.14235358975685]
Test Case: 522 | Input/Output: [[-43.124854561517445 12] -31.124854561517445]
Test Case: 523 | Input/Output: [[-59.69892506887737 -73] -132.69892506887737]
Test Case: 524 | Input/Output: [[-77.34636723669573 -3] -80.34636723669573]
Test Case: 525 | Input/Output: [[-13.523706066149373 13] -0.5237060661493729]
Test Case: 526 | Input/Output: [[52.613416413243044 -49] 3.613416413243044]
Test Case: 527 | Input/Output: [[-30.888452179302178 -24] -54.88845217930218]
Test Case: 528 | Input/Output: [[-48.446317290854466 -94] -142.44631729085447]
Test Case: 529 | Input/Output: [[-77.66602374880057 -52] -129.66602374880057]
Test Case: 530 | Input/Output: [[-60.65529587368146 68] 7.34470412631854]
Test Case: 531 | Input/Output: [[19.119065013705466 94] 113.11906501370547]
Test Case: 532 | Input/Output: [[56.33905426531442 54] 110.33905426531442]
Test Case: 533 | Input/Output: [[-64.4469246079233 -32] -96.4469246079233]
Test Case: 534 | Input/Output: [[85.4466994354865 29] 114.4466994354865]
Test Case: 535 | Input/Output: [[-92.4458007029118 70] -22.445800702911797]
Test Case: 536 | Input/Output: [[13.600041009591337 18] 31.600041009591337]
Test Case: 537 | Input/Output: [[59.24991070780675 99] 158.24991070780675]
Test Case: 538 | Input/Output: [[-63.32279941599974 63] -0.3227994159997394]
Test Case: 539 | Input/Output: [[-40.881639032984026 -12] -52.881639032984026]
Test Case: 540 | Input/Output: [[-82.84683518636751 13] -69.84683518636751]
Test Case: 541 | Input/Output: [[5.145658191016864 -14] -8.854341808983136]
Test Case: 542 | Input/Output: [[58.70897254747834 -7] 51.70897254747834]
Test Case: 543 | Input/Output: [[9.049079747149975 -33] -23.950920252850025]
Test Case: 544 | Input/Output: [[-1.2701425336305618 35] 33.72985746636944]
Test Case: 545 | Input/Output: [[-58.781884578844036 33] -25.781884578844036]
Test Case: 546 | Input/Output: [[-23.96170404320874 100] 76.03829595679126]
Test Case: 547 | Input/Output: [[-26.41044777758863 31] 4.5895522224113705]
Test Case: 548 | Input/Output: [[39.51470044304148 -72] -32.48529955695852]
Test Case: 549 | Input/Output: [[70.67808202767876 37] 107.67808202767876]
Test Case: 550 | Input/Output: [[-30.50082081760395 8] -22.50082081760395]
Test Case: 551 | Input/Output: [[-26.628127393908343 -14] -40.62812739390834]
Test Case: 552 | Input/Output: [[-77.56112298788027 -26] -103.56112298788027]
Test Case: 553 | Input/Output: [[-24.79814985749833 57] 32.20185014250167]
Test Case: 554 | Input/Output: [[56.19309466404721 74] 130.1930946640472]
Test Case: 555 | Input/Output: [[83.3377040473768 34] 117.3377040473768]
Test Case: 556 | Input/Output: [[41.52763964243002 84] 125.52763964243002]
Test Case: 557 | Input/Output: [[-50.23933859441703 16] -34.23933859441703]
Test Case: 558 | Input/Output: [[67.12045216254029 -87] -19.87954783745971]
Test Case: 559 | Input/Output: [[50.485146020486866 -52] -1.5148539795131342]
Test Case: 560 | Input/Output: [[-92.46240054542116 -61] -153.46240054542116]
Test Case: 561 | Input/Output: [[-61.38714862204404 -92] -153.38714862204404]
Test Case: 562 | Input/Output: [[-25.95108946212929 25] -0.9510894621292891]
Test Case: 563 | Input/Output: [[31.785067567530234 -72] -40.214932432469766]
Test Case: 564 | Input/Output: [[71.28560493146742 -59] 12.285604931467418]
Test Case: 565 | Input/Output: [[86.82895166408491 15] 101.82895166408491]
Test Case: 566 | Input/Output: [[16.28218497120848 -18] -1.7178150287915201]
Test Case: 567 | Input/Output: [[99.87877596226895 12] 111.87877596226895]
Test Case: 568 | Input/Output: [[-43.50875071702416 -11] -54.50875071702416]
Test Case: 569 | Input/Output: [[-12.423992814287942 -53] -65.42399281428794]
Test Case: 570 | Input/Output: [[6.054744605140456 56] 62.054744605140456]
Test Case: 571 | Input/Output: [[71.28780060171249 31] 102.28780060171249]
Test Case: 572 | Input/Output: [[44.29391896373221 -20] 24.29391896373221]
Test Case: 573 | Input/Output: [[75.25166444849086 89] 164.25166444849086]
Test Case: 574 | Input/Output: [[58.0032851143406 1] 59.0032851143406]
Test Case: 575 | Input/Output: [[82.5530166983863 -29] 53.5530166983863]
Test Case: 576 | Input/Output: [[-21.164119837728904 84] 62.835880162271096]
Test Case: 577 | Input/Output: [[58.568403381556436 74] 132.56840338155644]
Test Case: 578 | Input/Output: [[63.725741379847676 -23] 40.725741379847676]
Test Case: 579 | Input/Output: [[-91.99585234939242 -65] -156.9958523493924]
Test Case: 580 | Input/Output: [[-96.2378568474503 33] -63.2378568474503]
Test Case: 581 | Input/Output: [[-65.2325962286748 -30] -95.2325962286748]
Test Case: 582 | Input/Output: [[-21.20541288944011 8] -13.205412889440112]
Test Case: 583 | Input/Output: [[66.21402526778547 58] 124.21402526778547]
Test Case: 584 | Input/Output: [[-44.55872826394285 87] 42.44127173605715]
Test Case: 585 | Input/Output: [[-95.7712408099882 -30] -125.7712408099882]
Test Case: 586 | Input/Output: [[12.378513562220732 -62] -49.62148643777927]
Test Case: 587 | Input/Output: [[-28.689646649188077 64] 35.31035335081192]
Test Case: 588 | Input/Output: [[-73.6233217745881 -2] -75.6233217745881]
Test Case: 589 | Input/Output: [[5.309017219951343 57] 62.30901721995134]
Test Case: 590 | Input/Output: [[76.44775557055769 -29] 47.44775557055769]
Test Case: 591 | Input/Output: [[-40.09077390866702 34] -6.090773908667018]
Test Case: 592 | Input/Output: [[-63.22094425626845 -12] -75.22094425626845]
Test Case: 593 | Input/Output: [[-91.69070810121553 28] -63.690708101215534]
Test Case: 594 | Input/Output: [[56.21619276316764 -6] 50.21619276316764]
Test Case: 595 | Input/Output: [[-51.229197553327666 40] -11.229197553327666]
Test Case: 596 | Input/Output: [[-91.68033871078838 -7] -98.68033871078838]
Test Case: 597 | Input/Output: [[3.1959161266636613 33] 36.19591612666366]
Test Case: 598 | Input/Output: [[-96.37361129813588 89] -7.373611298135884]
Test Case: 599 | Input/Output: [[-65.57159621359864 91] 25.42840378640136]
Test Case: 600 | Input/Output: [[61.40268270141448 -25] 36.40268270141448]
Test Case: 601 | Input/Output: [[28.788004598684154 17] 45.788004598684154]
Test Case: 602 | Input/Output: [[71.69789360655554 -64] 7.697893606555539]
Test Case: 603 | Input/Output: [[-25.643063576745575 -86] -111.64306357674558]
Test Case: 604 | Input/Output: [[-80.80819578077117 45] -35.80819578077117]
Test Case: 605 | Input/Output: [[88.83699306026159 29] 117.83699306026159]
Test Case: 606 | Input/Output: [[-18.37612665929956 44] 25.62387334070044]
Test Case: 607 | Input/Output: [[-31.744717497571685 56] 24.255282502428315]
Test Case: 608 | Input/Output: [[91.7294042826731 98] 189.7294042826731]
Test Case: 609 | Input/Output: [[-43.61628921559089 8] -35.61628921559089]
Test Case: 610 | Input/Output: [[72.99709096733562 -73] -0.0029090326643768094]
Test Case: 611 | Input/Output: [[-5.103614243813453 -43] -48.10361424381345]
Test Case: 612 | Input/Output: [[82.51162896988131 -10] 72.51162896988131]
Test Case: 613 | Input/Output: [[-45.25023792251277 -30] -75.25023792251277]
Test Case: 614 | Input/Output: [[0.9810354134597361 94] 94.98103541345974]
Test Case: 615 | Input/Output: [[-11.58083235370404 -76] -87.58083235370404]
Test Case: 616 | Input/Output: [[-49.09292898102977 -76] -125.09292898102977]
Test Case: 617 | Input/Output: [[43.6253947090722 -42] 1.6253947090721965]
Test Case: 618 | Input/Output: [[-79.90575439319912 7] -72.90575439319912]
Test Case: 619 | Input/Output: [[99.73109589639532 -12] 87.73109589639532]
Test Case: 620 | Input/Output: [[93.50333419128944 10] 103.50333419128944]
Test Case: 621 | Input/Output: [[-68.97925761172485 75] 6.020742388275153]
Test Case: 622 | Input/Output: [[-6.890739676629082 -16] -22.89073967662908]
Test Case: 623 | Input/Output: [[42.43560959781533 13] 55.43560959781533]
Test Case: 624 | Input/Output: [[23.9843669261779 -60] -36.0156330738221]
Test Case: 625 | Input/Output: [[47.54326625775565 -83] -35.45673374224435]
Test Case: 626 | Input/Output: [[20.303025206677376 -96] -75.69697479332262]
Test Case: 627 | Input/Output: [[-53.80776417667021 23] -30.80776417667021]
Test Case: 628 | Input/Output: [[89.58526335931882 -84] 5.585263359318816]
Test Case: 629 | Input/Output: [[85.76896767924461 18] 103.76896767924461]
Test Case: 630 | Input/Output: [[-74.98666221723 65] -9.986662217230005]
Test Case: 631 | Input/Output: [[30.5035605747062 86] 116.5035605747062]
Test Case: 632 | Input/Output: [[-36.137472258484806 -99] -135.13747225848482]
Test Case: 633 | Input/Output: [[63.21009365632551 -83] -19.789906343674488]
Test Case: 634 | Input/Output: [[-91.0647279971109 -67] -158.06472799711088]
Test Case: 635 | Input/Output: [[-6.9571239443868365 -42] -48.95712394438684]
Test Case: 636 | Input/Output: [[-32.79077697397325 2] -30.79077697397325]
Test Case: 637 | Input/Output: [[8.475811104409289 -7] 1.4758111044092885]
Test Case: 638 | Input/Output: [[-93.03775442280613 89] -4.037754422806131]
Test Case: 639 | Input/Output: [[52.71681814358388 -43] 9.716818143583879]
Test Case: 640 | Input/Output: [[77.83334901879707 62] 139.83334901879707]
Test Case: 641 | Input/Output: [[33.77468030584677 16] 49.77468030584677]
Test Case: 642 | Input/Output: [[-52.722153553268456 60] 7.2778464467315445]
Test Case: 643 | Input/Output: [[21.368664217825554 -56] -34.631335782174446]
Test Case: 644 | Input/Output: [[23.44006413703461 88] 111.44006413703461]
Test Case: 645 | Input/Output: [[54.69982408608641 14] 68.69982408608641]
Test Case: 646 | Input/Output: [[67.3730255882162 2] 69.3730255882162]
Test Case: 647 | Input/Output: [[92.94544340274354 -95] -2.0545565972564646]
Test Case: 648 | Input/Output: [[-72.28435824102128 32] -40.28435824102128]
Test Case: 649 | Input/Output: [[4.3515520918937085 -43] -38.64844790810629]
Test Case: 650 | Input/Output: [[35.61273676156878 -52] -16.387263238431217]
Test Case: 651 | Input/Output: [[24.769879572662788 -1] 23.769879572662788]
Test Case: 652 | Input/Output: [[-85.75001251281056 -31] -116.75001251281056]
Test Case: 653 | Input/Output: [[-71.41214392134464 -87] -158.41214392134464]
Test Case: 654 | Input/Output: [[23.399146728693637 -84] -60.60085327130636]
Test Case: 655 | Input/Output: [[13.833774083969203 -88] -74.1662259160308]
Test Case: 656 | Input/Output: [[54.45190550766685 -41] 13.45190550766685]
Test Case: 657 | Input/Output: [[-62.99816709387996 -45] -107.99816709387996]
Test Case: 658 | Input/Output: [[-8.456348467527562 -46] -54.45634846752756]
Test Case: 659 | Input/Output: [[87.63882600800378 -13] 74.63882600800378]
Test Case: 660 | Input/Output: [[23.403880487495428 -29] -5.596119512504572]
Test Case: 661 | Input/Output: [[-93.66179427314036 11] -82.66179427314036]
Test Case: 662 | Input/Output: [[62.11866317814278 59] 121.11866317814278]
Test Case: 663 | Input/Output: [[-19.76574803660796 -38] -57.76574803660796]
Test Case: 664 | Input/Output: [[-80.35650609424977 12] -68.35650609424977]
Test Case: 665 | Input/Output: [[-7.756358963390326 -59] -66.75635896339033]
Test Case: 666 | Input/Output: [[63.40078633007812 72] 135.40078633007812]
Test Case: 667 | Input/Output: [[-48.303117790101524 -100] -148.3031177901015]
Test Case: 668 | Input/Output: [[19.534414860352584 -50] -30.465585139647416]
Test Case: 669 | Input/Output: [[76.32295046139839 -74] 2.322950461398392]
Test Case: 670 | Input/Output: [[67.86686790148485 60] 127.86686790148485]
Test Case: 671 | Input/Output: [[43.03240830602789 -94] -50.96759169397211]
Test Case: 672 | Input/Output: [[-19.514826698244676 -16] -35.514826698244676]
Test Case: 673 | Input/Output: [[-41.11614343688599 48] 6.8838565631140085]
Test Case: 674 | Input/Output: [[-89.51540684431045 -60] -149.51540684431046]
Test Case: 675 | Input/Output: [[26.570425140477028 -64] -37.42957485952297]
Test Case: 676 | Input/Output: [[-9.684008721787805 34] 24.315991278212195]
Test Case: 677 | Input/Output: [[91.53795476417685 -15] 76.53795476417685]
Test Case: 678 | Input/Output: [[5.413373750208379 -14] -8.586626249791621]
Test Case: 679 | Input/Output: [[20.918131593491978 -56] -35.08186840650802]
Test Case: 680 | Input/Output: [[-70.66484372774846 36] -34.66484372774846]
Test Case: 681 | Input/Output: [[-83.62292836081886 36] -47.62292836081886]
Test Case: 682 | Input/Output: [[17.340982507908564 24] 41.34098250790856]
Test Case: 683 | Input/Output: [[-36.439499079456624 -75] -111.43949907945662]
Test Case: 684 | Input/Output: [[-6.055212488486077 -41] -47.05521248848608]
Test Case: 685 | Input/Output: [[3.0397520647961187 -17] -13.960247935203881]
Test Case: 686 | Input/Output: [[46.41998076107171 58] 104.41998076107171]
Test Case: 687 | Input/Output: [[-85.53131368234583 3] -82.53131368234583]
Test Case: 688 | Input/Output: [[-94.15535962232309 82] -12.15535962232309]
Test Case: 689 | Input/Output: [[25.215397900450668 79] 104.21539790045067]
Test Case: 690 | Input/Output: [[-6.877038985692678 -1] -7.877038985692678]
Test Case: 691 | Input/Output: [[-47.36984326012441 44] -3.369843260124412]
Test Case: 692 | Input/Output: [[44.92754174624537 89] 133.92754174624537]
Test Case: 693 | Input/Output: [[-43.381608840153184 64] 20.618391159846816]
Test Case: 694 | Input/Output: [[-12.782850554550748 -58] -70.78285055455075]
Test Case: 695 | Input/Output: [[17.10459043659796 -62] -44.89540956340204]
Test Case: 696 | Input/Output: [[31.59832586500613 83] 114.59832586500613]
Test Case: 697 | Input/Output: [[-39.87695963309537 29] -10.876959633095368]
Test Case: 698 | Input/Output: [[78.52353722757891 40] 118.52353722757891]
Test Case: 699 | Input/Output: [[-3.236692356500967 0] -3.236692356500967]
Test Case: 700 | Input/Output: [[74.32203760045073 -93] -18.677962399549273]
Test Case: 701 | Input/Output: [[-17.51562124574167 -92] -109.51562124574167]
Test Case: 702 | Input/Output: [[-62.50969392845971 20] -42.50969392845971]
Test Case: 703 | Input/Output: [[-93.01955665523201 49] -44.01955665523201]
Test Case: 704 | Input/Output: [[-6.94530597845619 41] 34.05469402154381]
Test Case: 705 | Input/Output: [[64.12511372459446 80] 144.12511372459446]
Test Case: 706 | Input/Output: [[76.29368087699348 -14] 62.29368087699348]
Test Case: 707 | Input/Output: [[5.811421195169714 46] 51.811421195169714]
Test Case: 708 | Input/Output: [[37.62593893030751 73] 110.62593893030751]
Test Case: 709 | Input/Output: [[-40.98690503029603 36] -4.986905030296029]
Test Case: 710 | Input/Output: [[-50.19602249119324 -61] -111.19602249119325]
Test Case: 711 | Input/Output: [[-41.81723939663462 -80] -121.81723939663462]
Test Case: 712 | Input/Output: [[75.00742024350288 17] 92.00742024350288]
Test Case: 713 | Input/Output: [[56.582231286098505 -28] 28.582231286098505]
Test Case: 714 | Input/Output: [[4.0975756354359305 43] 47.09757563543593]
Test Case: 715 | Input/Output: [[13.276986004447892 69] 82.27698600444789]
Test Case: 716 | Input/Output: [[53.66607733022184 46] 99.66607733022184]
Test Case: 717 | Input/Output: [[95.05102989273257 -77] 18.051029892732572]
Test Case: 718 | Input/Output: [[84.13206990583348 -37] 47.132069905833475]
Test Case: 719 | Input/Output: [[-30.175504823228366 -40] -70.17550482322837]
Test Case: 720 | Input/Output: [[-42.91050615090801 -19] -61.91050615090801]
Test Case: 721 | Input/Output: [[-77.39740797414221 -41] -118.39740797414221]
Test Case: 722 | Input/Output: [[-6.049230114786781 61] 54.95076988521322]
Test Case: 723 | Input/Output: [[75.30183336039784 -45] 30.301833360397836]
Test Case: 724 | Input/Output: [[62.81271512901151 91] 153.8127151290115]
Test Case: 725 | Input/Output: [[97.41925127833699 20] 117.41925127833699]
Test Case: 726 | Input/Output: [[-10.151244961433619 41] 30.84875503856638]
Test Case: 727 | Input/Output: [[2.436597117104043 33] 35.43659711710404]
Test Case: 728 | Input/Output: [[-64.39270005195323 -46] -110.39270005195323]
Test Case: 729 | Input/Output: [[-25.375916633811073 -29] -54.37591663381107]
Test Case: 730 | Input/Output: [[-25.788470834282194 -79] -104.7884708342822]
Test Case: 731 | Input/Output: [[77.61354361882096 89] 166.61354361882096]
Test Case: 732 | Input/Output: [[67.86047741845266 16] 83.86047741845266]
Test Case: 733 | Input/Output: [[10.499108165525243 -60] -49.50089183447476]
Test Case: 734 | Input/Output: [[16.618088124022876 75] 91.61808812402288]
Test Case: 735 | Input/Output: [[-56.45633029514112 90] 33.54366970485888]
Test Case: 736 | Input/Output: [[8.553959057374769 -44] -35.44604094262523]
Test Case: 737 | Input/Output: [[56.443494786437725 51] 107.44349478643772]
Test Case: 738 | Input/Output: [[-84.86199757791641 -63] -147.8619975779164]
Test Case: 739 | Input/Output: [[-28.319916754545417 87] 58.68008324545458]
Test Case: 740 | Input/Output: [[-35.234527959654 28] -7.234527959654002]
Test Case: 741 | Input/Output: [[98.48781643633666 87] 185.48781643633666]
Test Case: 742 | Input/Output: [[3.957658830015774 -63] -59.042341169984226]
Test Case: 743 | Input/Output: [[-7.657783338010944 84] 76.34221666198906]
Test Case: 744 | Input/Output: [[-23.967218656992756 84] 60.032781343007244]
Test Case: 745 | Input/Output: [[-59.785073796559885 29] -30.785073796559885]
Test Case: 746 | Input/Output: [[-97.26288318116521 58] -39.26288318116521]
Test Case: 747 | Input/Output: [[-81.41120930426588 96] 14.588790695734119]
Test Case: 748 | Input/Output: [[-54.926915590332825 -61] -115.92691559033283]
Test Case: 749 | Input/Output: [[-19.51709963572621 -38] -57.51709963572621]
Test Case: 750 | Input/Output: [[96.33060662136805 -43] 53.33060662136805]
Test Case: 751 | Input/Output: [[78.08156194573033 -49] 29.08156194573033]
Test Case: 752 | Input/Output: [[1.9600146906989266 -10] -8.039985309301073]
Test Case: 753 | Input/Output: [[-61.57937493350265 39] -22.57937493350265]
Test Case: 754 | Input/Output: [[76.05151126297685 -23] 53.051511262976845]
Test Case: 755 | Input/Output: [[-72.20901996101895 -96] -168.20901996101895]
Test Case: 756 | Input/Output: [[21.225049153899604 -9] 12.225049153899604]
Test Case: 757 | Input/Output: [[50.98736755365721 60] 110.98736755365721]
Test Case: 758 | Input/Output: [[-85.88762459859886 12] -73.88762459859886]
Test Case: 759 | Input/Output: [[62.83663759554048 2] 64.83663759554048]
Test Case: 760 | Input/Output: [[64.90832049369831 -20] 44.90832049369831]
Test Case: 761 | Input/Output: [[82.49032228323165 68] 150.49032228323165]
Test Case: 762 | Input/Output: [[-45.29104331613827 -97] -142.29104331613826]
Test Case: 763 | Input/Output: [[-62.463289427878735 -47] -109.46328942787873]
Test Case: 764 | Input/Output: [[90.21925662679956 74] 164.21925662679956]
Test Case: 765 | Input/Output: [[38.30412169602124 -78] -39.69587830397876]
Test Case: 766 | Input/Output: [[-45.16301994000433 5] -40.16301994000433]
Test Case: 767 | Input/Output: [[56.66550232327597 -79] -22.334497676724027]
Test Case: 768 | Input/Output: [[-70.10781408459441 57] -13.107814084594409]
Test Case: 769 | Input/Output: [[68.44436537777031 -26] 42.44436537777031]
Test Case: 770 | Input/Output: [[-4.81546208061512 -60] -64.81546208061512]
Test Case: 771 | Input/Output: [[69.83608088282264 -88] -18.163919117177358]
Test Case: 772 | Input/Output: [[-26.137957930010373 71] 44.86204206998963]
Test Case: 773 | Input/Output: [[94.4153006754479 -32] 62.415300675447895]
Test Case: 774 | Input/Output: [[-32.875135572545176 -88] -120.87513557254518]
Test Case: 775 | Input/Output: [[-45.338810234636725 46] 0.6611897653632752]
Test Case: 776 | Input/Output: [[-60.66718296349909 53] -7.667182963499087]
Test Case: 777 | Input/Output: [[-49.84398993952806 -64] -113.84398993952806]
Test Case: 778 | Input/Output: [[-31.86403713731245 -56] -87.86403713731245]
Test Case: 779 | Input/Output: [[14.531143644494875 -72] -57.468856355505125]
Test Case: 780 | Input/Output: [[-62.38933893003815 -67] -129.38933893003815]
Test Case: 781 | Input/Output: [[-10.509482827418125 -17] -27.509482827418125]
Test Case: 782 | Input/Output: [[-90.13577731396043 33] -57.13577731396043]
Test Case: 783 | Input/Output: [[-82.34211739230835 52] -30.342117392308353]
Test Case: 784 | Input/Output: [[50.325685459927314 2] 52.325685459927314]
Test Case: 785 | Input/Output: [[-62.047023315613735 17] -45.047023315613735]
Test Case: 786 | Input/Output: [[61.813233063952424 -77] -15.186766936047576]
Test Case: 787 | Input/Output: [[-63.41763394390962 -85] -148.4176339439096]
Test Case: 788 | Input/Output: [[-75.74744125532831 23] -52.74744125532831]
Test Case: 789 | Input/Output: [[72.31067427322932 -86] -13.689325726770676]
Test Case: 790 | Input/Output: [[-12.9545837112166 46] 33.0454162887834]
Test Case: 791 | Input/Output: [[82.96916076739501 59] 141.969160767395]
Test Case: 792 | Input/Output: [[1.90671408931604 -13] -11.09328591068396]
Test Case: 793 | Input/Output: [[-70.33362215301236 -23] -93.33362215301236]
Test Case: 794 | Input/Output: [[2.09911906994094 -87] -84.90088093005906]
Test Case: 795 | Input/Output: [[-80.26088959394859 -84] -164.2608895939486]
Test Case: 796 | Input/Output: [[45.24262588113291 99] 144.2426258811329]
Test Case: 797 | Input/Output: [[79.39620402269591 -81] -1.6037959773040882]
Test Case: 798 | Input/Output: [[6.120506269749029 -27] -20.87949373025097]
Test Case: 799 | Input/Output: [[30.959745007638418 66] 96.95974500763842]
Test Case: 800 | Input/Output: [[76.63560770293887 -69] 7.63560770293887]
Test Case: 801 | Input/Output: [[-96.39485336297346 42] -54.394853362973464]
Test Case: 802 | Input/Output: [[8.45371746294596 85] 93.45371746294596]
Test Case: 803 | Input/Output: [[-48.924447005962946 -32] -80.92444700596295]
Test Case: 804 | Input/Output: [[64.78325984851452 -73] -8.216740151485482]
Test Case: 805 | Input/Output: [[86.32782905973878 -49] 37.327829059738775]
Test Case: 806 | Input/Output: [[-2.07274528744594 52] 49.92725471255406]
Test Case: 807 | Input/Output: [[77.41120861670078 -36] 41.411208616700776]
Test Case: 808 | Input/Output: [[-65.0482074274095 51] -14.048207427409494]
Test Case: 809 | Input/Output: [[44.09319287319701 7] 51.09319287319701]
Test Case: 810 | Input/Output: [[-93.54389889097261 -67] -160.54389889097263]
Test Case: 811 | Input/Output: [[81.64760002033688 -17] 64.64760002033688]
Test Case: 812 | Input/Output: [[-11.071440000254952 -95] -106.07144000025495]
Test Case: 813 | Input/Output: [[-31.752145894557444 79] 47.247854105442556]
Test Case: 814 | Input/Output: [[65.79236419656732 78] 143.79236419656732]
Test Case: 815 | Input/Output: [[35.338121549445844 21] 56.338121549445844]
Test Case: 816 | Input/Output: [[70.65917794009457 33] 103.65917794009457]
Test Case: 817 | Input/Output: [[-91.15026865124834 5] -86.15026865124834]
Test Case: 818 | Input/Output: [[61.47860493365056 87] 148.47860493365056]
Test Case: 819 | Input/Output: [[54.816318947281985 -88] -33.183681052718015]
Test Case: 820 | Input/Output: [[98.2084640018488 -19] 79.2084640018488]
Test Case: 821 | Input/Output: [[-12.863679396505347 30] 17.136320603494653]
Test Case: 822 | Input/Output: [[-29.793995064684324 35] 5.206004935315676]
Test Case: 823 | Input/Output: [[-76.48673216773446 -27] -103.48673216773446]
Test Case: 824 | Input/Output: [[-20.71571139518582 65] 44.28428860481418]
Test Case: 825 | Input/Output: [[-22.606417178756004 100] 77.393582821244]
Test Case: 826 | Input/Output: [[38.802968057821346 -16] 22.802968057821346]
Test Case: 827 | Input/Output: [[-4.44019223512224 39] 34.55980776487776]
Test Case: 828 | Input/Output: [[-76.07629532062592 -74] -150.07629532062592]
Test Case: 829 | Input/Output: [[-12.280158614912224 85] 72.71984138508778]
Test Case: 830 | Input/Output: [[-61.9936494899524 -52] -113.9936494899524]
Test Case: 831 | Input/Output: [[-13.634035744590363 -71] -84.63403574459036]
Test Case: 832 | Input/Output: [[82.0692921743879 89] 171.0692921743879]
Test Case: 833 | Input/Output: [[-76.44503337690307 51] -25.44503337690307]
Test Case: 834 | Input/Output: [[40.68702766441055 22] 62.68702766441055]
Test Case: 835 | Input/Output: [[69.6734437783361 23] 92.6734437783361]
Test Case: 836 | Input/Output: [[-65.83576911610291 40] -25.83576911610291]
Test Case: 837 | Input/Output: [[-82.05461714362096 -92] -174.05461714362096]
Test Case: 838 | Input/Output: [[-78.3718903114925 94] 15.628109688507493]
Test Case: 839 | Input/Output: [[-16.100948089599456 75] 58.899051910400544]
Test Case: 840 | Input/Output: [[-78.62202277894625 -43] -121.62202277894625]
Test Case: 841 | Input/Output: [[96.09506475386738 -88] 8.095064753867376]
Test Case: 842 | Input/Output: [[9.83450735358862 -36] -26.16549264641138]
Test Case: 843 | Input/Output: [[-34.2197390605365 -70] -104.2197390605365]
Test Case: 844 | Input/Output: [[76.25431445023162 -95] -18.745685549768382]
Test Case: 845 | Input/Output: [[6.381674772750671 70] 76.38167477275067]
Test Case: 846 | Input/Output: [[-81.4786681955824 61] -20.4786681955824]
Test Case: 847 | Input/Output: [[26.3287750465105 38] 64.3287750465105]
Test Case: 848 | Input/Output: [[88.25084323346073 -35] 53.25084323346073]
Test Case: 849 | Input/Output: [[48.16870930896454 -13] 35.16870930896454]
Test Case: 850 | Input/Output: [[54.94141187031849 55] 109.94141187031849]
Test Case: 851 | Input/Output: [[-8.52398162760592 79] 70.47601837239408]
Test Case: 852 | Input/Output: [[15.238783546736315 50] 65.23878354673631]
Test Case: 853 | Input/Output: [[68.11138147548647 -47] 21.111381475486468]
Test Case: 854 | Input/Output: [[-60.574436180357736 54] -6.574436180357736]
Test Case: 855 | Input/Output: [[26.61180941621906 89] 115.61180941621906]
Test Case: 856 | Input/Output: [[-57.21761689392852 -38] -95.21761689392852]
Test Case: 857 | Input/Output: [[85.56207571552551 54] 139.5620757155255]
Test Case: 858 | Input/Output: [[78.25430254227982 18] 96.25430254227982]
Test Case: 859 | Input/Output: [[-59.994531757761926 3] -56.994531757761926]
Test Case: 860 | Input/Output: [[18.501848543580593 -22] -3.498151456419407]
Test Case: 861 | Input/Output: [[-52.155372436720704 -21] -73.15537243672071]
Test Case: 862 | Input/Output: [[-11.0028598212035 -2] -13.0028598212035]
Test Case: 863 | Input/Output: [[-68.14018603142394 20] -48.14018603142394]
Test Case: 864 | Input/Output: [[6.525821573616767 30] 36.52582157361677]
Test Case: 865 | Input/Output: [[-97.75478763603273 14] -83.75478763603273]
Test Case: 866 | Input/Output: [[19.27778717992132 -63] -43.72221282007868]
Test Case: 867 | Input/Output: [[-55.80009628044387 69] 13.199903719556133]
Test Case: 868 | Input/Output: [[-99.0427004783925 -40] -139.0427004783925]
Test Case: 869 | Input/Output: [[-75.19880425886798 52] -23.19880425886798]
Test Case: 870 | Input/Output: [[22.271549364031856 -1] 21.271549364031856]
Test Case: 871 | Input/Output: [[90.29137996275733 86] 176.29137996275733]
Test Case: 872 | Input/Output: [[-60.45745997535925 28] -32.45745997535925]
Test Case: 873 | Input/Output: [[68.5230745100082 -36] 32.5230745100082]
Test Case: 874 | Input/Output: [[7.43816238499204 99] 106.43816238499204]
Test Case: 875 | Input/Output: [[93.35796913233563 98] 191.35796913233563]
Test Case: 876 | Input/Output: [[-57.816539214454224 -53] -110.81653921445422]
Test Case: 877 | Input/Output: [[-15.519028621813575 -44] -59.519028621813575]
Test Case: 878 | Input/Output: [[-61.990992467119966 70] 8.009007532880034]
Test Case: 879 | Input/Output: [[14.64278878781515 46] 60.64278878781515]
Test Case: 880 | Input/Output: [[60.02446078223244 -17] 43.02446078223244]
Test Case: 881 | Input/Output: [[86.30683206323434 -88] -1.6931679367656614]
Test Case: 882 | Input/Output: [[15.573090986340304 -44] -28.426909013659696]
Test Case: 883 | Input/Output: [[-0.23721065459656643 -85] -85.23721065459657]
Test Case: 884 | Input/Output: [[-28.396043396719776 25] -3.396043396719776]
Test Case: 885 | Input/Output: [[1.7371277275782973 -21] -19.262872272421703]
Test Case: 886 | Input/Output: [[-9.431694003882555 80] 70.56830599611745]
Test Case: 887 | Input/Output: [[91.93572999807799 -79] 12.935729998077989]
Test Case: 888 | Input/Output: [[-7.171909445535405 80] 72.8280905544646]
Test Case: 889 | Input/Output: [[-50.02476680186223 21] -29.024766801862228]
Test Case: 890 | Input/Output: [[-62.777460396070836 -28] -90.77746039607084]
Test Case: 891 | Input/Output: [[-64.21964979631986 -2] -66.21964979631986]
Test Case: 892 | Input/Output: [[-73.41453471321222 35] -38.41453471321222]
Test Case: 893 | Input/Output: [[-10.411173028462656 -5] -15.411173028462656]
Test Case: 894 | Input/Output: [[-67.69739906431116 -22] -89.69739906431116]
Test Case: 895 | Input/Output: [[-21.194712969508387 85] 63.80528703049161]
Test Case: 896 | Input/Output: [[46.52625910067849 0] 46.52625910067849]
Test Case: 897 | Input/Output: [[33.392297481344144 -27] 6.392297481344144]
Test Case: 898 | Input/Output: [[-66.98436000266368 74] 7.015639997336322]
Test Case: 899 | Input/Output: [[-86.84756998928864 69] -17.847569989288644]
Test Case: 900 | Input/Output: [[22.534936767319095 -91] -68.4650632326809]
Test Case: 901 | Input/Output: [[-7.950156710665297 -83] -90.9501567106653]
Test Case: 902 | Input/Output: [[-96.48837802449552 79] -17.488378024495518]
Test Case: 903 | Input/Output: [[-56.2935248044709 -41] -97.2935248044709]
Test Case: 904 | Input/Output: [[68.83636783175677 83] 151.83636783175677]
Test Case: 905 | Input/Output: [[-54.086221285109644 -21] -75.08622128510964]
Test Case: 906 | Input/Output: [[85.12948635406877 20] 105.12948635406877]
Test Case: 907 | Input/Output: [[-3.5302114843421606 25] 21.46978851565784]
Test Case: 908 | Input/Output: [[-77.87159049706244 23] -54.87159049706244]
Test Case: 909 | Input/Output: [[-78.2152777844596 -60] -138.2152777844596]
Test Case: 910 | Input/Output: [[-2.1316400010009886 -73] -75.13164000100099]
Test Case: 911 | Input/Output: [[-25.83874419042928 31] 5.161255809570719]
Test Case: 912 | Input/Output: [[11.981646257102511 13] 24.98164625710251]
Test Case: 913 | Input/Output: [[-7.946231996040694 95] 87.0537680039593]
Test Case: 914 | Input/Output: [[-62.29439917032711 -88] -150.2943991703271]
Test Case: 915 | Input/Output: [[81.96736176666346 -72] 9.967361766663458]
Test Case: 916 | Input/Output: [[-23.984025241598943 -91] -114.98402524159894]
Test Case: 917 | Input/Output: [[84.67183193832682 -9] 75.67183193832682]
Test Case: 918 | Input/Output: [[84.94427296644395 -44] 40.94427296644395]
Test Case: 919 | Input/Output: [[80.81923125173708 -95] -14.18076874826292]
Test Case: 920 | Input/Output: [[-62.17113938376695 48] -14.171139383766949]
Test Case: 921 | Input/Output: [[-87.19914438899914 24] -63.199144388999144]
Test Case: 922 | Input/Output: [[53.07549443138345 -51] 2.075494431383447]
Test Case: 923 | Input/Output: [[-26.042891098468132 31] 4.957108901531868]
Test Case: 924 | Input/Output: [[59.660573972362414 -71] -11.339426027637586]
Test Case: 925 | Input/Output: [[-48.869109927032724 -99] -147.86910992703272]
Test Case: 926 | Input/Output: [[-92.06464602603586 -74] -166.06464602603586]
Test Case: 927 | Input/Output: [[51.415162593283185 -76] -24.584837406716815]
Test Case: 928 | Input/Output: [[62.30931019725742 62] 124.30931019725742]
Test Case: 929 | Input/Output: [[-54.130996005285766 -73] -127.13099600528577]
Test Case: 930 | Input/Output: [[-23.999268371691258 -25] -48.99926837169126]
Test Case: 931 | Input/Output: [[96.78845371597535 -73] 23.78845371597535]
Test Case: 932 | Input/Output: [[-55.47508011503053 -77] -132.47508011503052]
Test Case: 933 | Input/Output: [[91.7688385066289 -37] 54.768838506628896]
Test Case: 934 | Input/Output: [[4.583615096224108 30] 34.58361509622411]
Test Case: 935 | Input/Output: [[76.42525363877556 -57] 19.42525363877556]
Test Case: 936 | Input/Output: [[27.075629531737434 -6] 21.075629531737434]
Test Case: 937 | Input/Output: [[-37.30558415837131 89] 51.69441584162869]
Test Case: 938 | Input/Output: [[59.873952763034055 -89] -29.126047236965945]
Test Case: 939 | Input/Output: [[-56.07864754926823 -79] -135.07864754926823]
Test Case: 940 | Input/Output: [[62.37461390988153 -8] 54.37461390988153]
Test Case: 941 | Input/Output: [[95.44465196069899 -17] 78.44465196069899]
Test Case: 942 | Input/Output: [[-8.46282726266125 64] 55.53717273733875]
Test Case: 943 | Input/Output: [[-83.07290354030216 -57] -140.07290354030215]
Test Case: 944 | Input/Output: [[61.42209176432857 73] 134.42209176432857]
Test Case: 945 | Input/Output: [[88.18739502090153 25] 113.18739502090153]
Test Case: 946 | Input/Output: [[-96.26192314787274 1] -95.26192314787274]
Test Case: 947 | Input/Output: [[65.59338621031577 -10] 55.59338621031577]
Test Case: 948 | Input/Output: [[32.47401813124165 -14] 18.47401813124165]
Test Case: 949 | Input/Output: [[-49.21604823655108 72] 22.78395176344892]
Test Case: 950 | Input/Output: [[33.23016930372148 -62] -28.769830696278518]
Test Case: 951 | Input/Output: [[79.20565544074688 4] 83.20565544074688]
Test Case: 952 | Input/Output: [[-32.410667360128855 39] 6.589332639871145]
Test Case: 953 | Input/Output: [[-57.307050250344524 -71] -128.30705025034453]
Test Case: 954 | Input/Output: [[-53.58245041187155 54] 0.4175495881284519]
Test Case: 955 | Input/Output: [[-34.189097763537006 -88] -122.189097763537]
Test Case: 956 | Input/Output: [[86.72208283265132 83] 169.72208283265132]
Test Case: 957 | Input/Output: [[-12.857537511014556 -13] -25.857537511014556]
Test Case: 958 | Input/Output: [[26.11878958584508 -60] -33.88121041415492]
Test Case: 959 | Input/Output: [[97.85762644651336 52] 149.85762644651336]
Test Case: 960 | Input/Output: [[17.978285967837152 1] 18.978285967837152]
Test Case: 961 | Input/Output: [[-38.30285429885873 -9] -47.30285429885873]
Test Case: 962 | Input/Output: [[9.079449611055196 69] 78.0794496110552]
Test Case: 963 | Input/Output: [[-62.5557566940405 91] 28.444243305959503]
Test Case: 964 | Input/Output: [[-56.20859497708488 51] -5.2085949770848785]
Test Case: 965 | Input/Output: [[99.93655203256307 -42] 57.93655203256307]
Test Case: 966 | Input/Output: [[84.67535493617731 -44] 40.675354936177314]
Test Case: 967 | Input/Output: [[-60.166325851400316 10] -50.166325851400316]
Test Case: 968 | Input/Output: [[-47.519734450975946 -23] -70.51973445097595]
Test Case: 969 | Input/Output: [[95.57966557391799 -84] 11.579665573917993]
Test Case: 970 | Input/Output: [[61.89118048449998 -45] 16.891180484499984]
Test Case: 971 | Input/Output: [[-26.162763975028398 -99] -125.1627639750284]
Test Case: 972 | Input/Output: [[-95.99735204423803 -20] -115.99735204423803]
Test Case: 973 | Input/Output: [[-83.51227744125714 -97] -180.51227744125714]
Test Case: 974 | Input/Output: [[-93.16727525177598 -65] -158.16727525177598]
Test Case: 975 | Input/Output: [[85.48424243250085 9] 94.48424243250085]
Test Case: 976 | Input/Output: [[15.816127502561201 -79] -63.1838724974388]
Test Case: 977 | Input/Output: [[-67.57057401793192 -78] -145.5705740179319]
Test Case: 978 | Input/Output: [[-62.62678642786248 89] 26.373213572137523]
Test Case: 979 | Input/Output: [[-12.284557724208895 8] -4.284557724208895]
Test Case: 980 | Input/Output: [[12.086626745984802 21] 33.0866267459848]
Test Case: 981 | Input/Output: [[-37.240190286656194 -83] -120.2401902866562]
Test Case: 982 | Input/Output: [[-42.102966777639935 78] 35.897033222360065]
Test Case: 983 | Input/Output: [[-47.01633234296132 -67] -114.01633234296132]
Test Case: 984 | Input/Output: [[-73.06585558016847 -93] -166.0658555801685]
Test Case: 985 | Input/Output: [[46.942111509179085 24] 70.94211150917909]
Test Case: 986 | Input/Output: [[83.58472536461554 78] 161.58472536461554]
Test Case: 987 | Input/Output: [[3.228907569781896 10] 13.228907569781896]
Test Case: 988 | Input/Output: [[-37.31796641733087 61] 23.682033582669128]
Test Case: 989 | Input/Output: [[-50.401022771884094 36] -14.401022771884094]
Test Case: 990 | Input/Output: [[52.60331526126387 12] 64.60331526126387]
Test Case: 991 | Input/Output: [[25.221168898393557 -60] -34.77883110160644]
Test Case: 992 | Input/Output: [[-68.20178097111466 -98] -166.20178097111466]
Test Case: 993 | Input/Output: [[76.88283855954592 -23] 53.88283855954592]
Test Case: 994 | Input/Output: [[97.8189457289287 24] 121.8189457289287]
Test Case: 995 | Input/Output: [[92.77334715172333 -23] 69.77334715172333]
Test Case: 996 | Input/Output: [[-8.39324228327834 72] 63.60675771672166]
Test Case: 997 | Input/Output: [[66.33348818087606 91] 157.33348818087606]
Test Case: 998 | Input/Output: [[80.14043707760365 -7] 73.14043707760365]
Test Case: 999 | Input/Output: [[-57.225779051116696 31] -26.225779051116696]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = 101 96 -93 118 -44 -52 -26 -87 -31 39 36 55 58 85 22 -67
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 53382.0
Test mean error for best: 26.69100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 67.0603371543 
Correct output: -24.607460431  | Program output: 10.392539569  
Correct output: 47.4967454102  | Program output: 39.4967454102 
Correct output: 21.5422970991  | Program output: 51.5422970991 
Correct output: 139.0628943426 | Program output: 38.0628943426 
Correct output: 18.8235614089  | Program output: 25.8235614089 
Correct output: 40.2650090461  | Program output: -41.7349909539
Correct output: -54.8524808043 | Program output: -30.8524808043
Correct output: 56.8977931901  | Program output: -7.1022068099 
Correct output: -81.7542085575 | Program output: -11.7542085575
Correct output: -138.5780328906 | Program output: -62.5780328906
Correct output: 162.135867877  | Program output: 70.135867877  
Correct output: 6.602354913    | Program output: 66.602354913  
Correct output: 99.4302270736  | Program output: 60.4302270736 
Correct output: -98.3471459602 | Program output: -12.3471459602
Correct output: -66.6917750495 | Program output: -35.6917750495
Correct output: -104.5908741149 | Program output: -97.5908741149
Correct output: 47.2673084834  | Program output: 8.2673084834  
Correct output: 114.3563176983 | Program output: 57.3563176983 
Correct output: 0.8175119448   | Program output: -75.1824880552
Correct output: 14.5831091655  | Program output: 77.5831091655 
Correct output: 24.8548523011  | Program output: 43.8548523011 
Correct output: 20.7305356492  | Program output: -73.2694643508
Correct output: -14.2169449076 | Program output: -21.2169449076
Correct output: -65.7165824303 | Program output: -57.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_times} {:instruction integer_fromfloat} {:instruction float_rot} {:instruction float_dec} {:instruction float_dec} {:instruction float_mult} {:instruction integer_max} {:instruction float_add} {:instruction float_yank} {:instruction integer_div} {:instruction float_pop} {:instruction integer_yankdup} {:instruction integer_max} {:instruction float_div} {:instruction integer_min} {:instruction float_sub} {:instruction integer_rot} {:instruction in1} {:instruction integer_mod} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction float_swap} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (integer_dup_times integer_fromfloat float_rot float_dec float_dec float_mult integer_max float_add float_yank integer_div float_pop integer_yankdup integer_max float_div integer_min float_sub integer_rot in1 integer_mod integer_dup_times integer_shove float_swap float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [100.0 1 35.0 12 8.0 2 30.0 1 101.0 2 7.0 2 82.0 11 24.0 2 64.0 12 70.0 1 76.0 3 92.0 3 60.0 1 39.0 2 86.0 2 31.0 2 7.0 3 39.0 2 57.0 3 76.0 12 63.0 2 19.0 2 94.0 12 7.0 2 8.0 2]
Total: 1374.0
Mean: 27.48
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 18279.1806043
Median total errors in population: 25335.0
Error averages by case: (740.1375948000012 13.309 710.561679100001 13.082 698.690145600001 12.441 712.3374924999976 12.529 733.6948784000017 13.19 707.3894756000004 12.429 713.2818769000011 13.12 717.5854152000005 13.238 712.2938986 13.16 725.3934032999999 13.196 740.0594927999981 14.076 737.5603183999989 12.652 713.0460353999981 10.894 720.7041639999984 12.547 729.8178660000019 13.177 721.1120462999997 13.309 728.6697483999991 14.062 706.5317495999991 12.438 724.2714502999987 13.37 709.2335435 12.528 714.1150284000001 12.533 710.2040820000001 12.414 713.6620338999994 13.28 694.6790977999998 13.216 720.7270875000014 13.231)
Error minima by case: (30.9397 1 0.0804 9 1.2732 1 1.5423 1 38.0629 1 0.1784 2 1.265 6 0.8585 2 1.7614 5 0.2458 1 12.568 3 27.8641 2 1.6024 1 0.0717 2 0.3471 2 0.3082 2 5.2367 3 1.212 2 14.8544 3 0.0184 8 0.432 2 0.1451 1 0.2695 9 0.8095 1 0.2795 1)
Average genome size in population (length): 50.516
Average program size in population (points): 51.516
Average percent parens in population: 0.038
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.327
Error (vector) diversity:			 0.365
Behavioral diversity:				 0.38
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1267018
--- Timings ---
Current time: 1529615592235 milliseconds
Total Time:           3.6 seconds
Initialization:       0.1 seconds,  3.2%
Reproduction:         0.5 seconds, 15.3%
Fitness Testing:      2.9 seconds, 81.5%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 53402.0
Test mean error for best: 26.70100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 66.0603371543 
Correct output: -24.607460431  | Program output: 9.392539569   
Correct output: 47.4967454102  | Program output: 38.4967454102 
Correct output: 21.5422970991  | Program output: 50.5422970991 
Correct output: 139.0628943426 | Program output: 37.0628943426 
Correct output: 18.8235614089  | Program output: 24.8235614089 
Correct output: 40.2650090461  | Program output: -42.7349909539
Correct output: -54.8524808043 | Program output: -31.8524808043
Correct output: 56.8977931901  | Program output: -8.1022068099 
Correct output: -81.7542085575 | Program output: -12.7542085575
Correct output: -138.5780328906 | Program output: -63.5780328906
Correct output: 162.135867877  | Program output: 69.135867877  
Correct output: 6.602354913    | Program output: 65.602354913  
Correct output: 99.4302270736  | Program output: 59.4302270736 
Correct output: -98.3471459602 | Program output: -13.3471459602
Correct output: -66.6917750495 | Program output: -36.6917750495
Correct output: -104.5908741149 | Program output: -98.5908741149
Correct output: 47.2673084834  | Program output: 7.2673084834  
Correct output: 114.3563176983 | Program output: 56.3563176983 
Correct output: 0.8175119448   | Program output: -76.1824880552
Correct output: 14.5831091655  | Program output: 76.5831091655 
Correct output: 24.8548523011  | Program output: 42.8548523011 
Correct output: 20.7305356492  | Program output: -74.2694643508
Correct output: -14.2169449076 | Program output: -22.2169449076
Correct output: -65.7165824303 | Program output: -58.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dup} {:instruction float_dup} {:instruction print_float} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction float_mod} {:instruction tag_integer_839} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction integer_shove} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_cos} {:instruction float_swap} {:instruction in1} {:instruction integer_mod} {:instruction float_yank} {:instruction integer_rot})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_dup float_dup print_float integer_pop integer_dec float_flush integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dup_items integer_max integer_rot integer_dup_times float_mod tag_integer_839 integer_mod float_dup_times float_frominteger float_dup_items integer_shove float_frominteger integer_stackdepth integer_yank float_cos float_swap in1 integer_mod float_yank integer_rot)
Errors: [101.0 2 34.0 12 9.0 2 29.0 2 102.0 2 6.0 2 83.0 11 23.0 2 65.0 12 69.0 2 75.0 2 93.0 2 59.0 1 40.0 1 85.0 2 30.0 1 6.0 3 40.0 1 58.0 3 77.0 13 62.0 2 18.0 2 95.0 13 8.0 2 7.0 2]
Total: 1373.0
Mean: 27.46
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 6448.5690977
Median total errors in population: 1915.2821999999996
Error averages by case: (295.3345286000025 10.77 228.6067454000002 12.098 216.41125839999867 9.875 232.89098270000025 10.087 279.59455879999894 10.321 220.62068770000096 9.973 236.24070960000034 11.872 243.521755500001 10.571 230.7262197000003 12.014 260.46703709999855 10.452 293.1396004000001 11.386 292.63193209999804 10.355 238.81991130000097 8.533 250.95966440000097 10.041 269.65686690000297 10.423 248.88663100000022 10.724 270.0428205000019 11.399 218.5645122000019 9.899 261.8104142000029 10.865 228.73961559999972 11.687 242.49881079999867 10.108 226.77086270000146 9.725 238.80480240000028 12.374 206.35219739999977 10.62 249.65897230000303 10.645)
Error minima by case: (31.9397 1 0.6075 9 1.4414 1 1.5423 1 20.0629 1 0.1784 2 1.5377 8 0.8585 2 1.7614 8 0.2458 1 39.2239 2 28.8641 2 1.6024 1 2.4302 1 0.3471 2 0.3082 1 5.2367 3 1.212 1 4.6437 3 0.0184 8 0.9456 2 0.1451 1 0.2695 9 0.8095 1 0.2834 1)
Average genome size in population (length): 58.458
Average program size in population (points): 59.458
Average percent parens in population: 0.023
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.502
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.261
Error (vector) diversity:			 0.277
Behavioral diversity:				 0.297
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2732967
--- Timings ---
Current time: 1529615597813 milliseconds
Total Time:           9.4 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.0 seconds, 43.2%
Fitness Testing:      4.6 seconds, 49.0%
Report:               0.6 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 53402.0
Test mean error for best: 26.70100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 66.0603371543 
Correct output: -24.607460431  | Program output: 9.392539569   
Correct output: 47.4967454102  | Program output: 38.4967454102 
Correct output: 21.5422970991  | Program output: 50.5422970991 
Correct output: 139.0628943426 | Program output: 37.0628943426 
Correct output: 18.8235614089  | Program output: 24.8235614089 
Correct output: 40.2650090461  | Program output: -42.7349909539
Correct output: -54.8524808043 | Program output: -31.8524808043
Correct output: 56.8977931901  | Program output: -8.1022068099 
Correct output: -81.7542085575 | Program output: -12.7542085575
Correct output: -138.5780328906 | Program output: -63.5780328906
Correct output: 162.135867877  | Program output: 69.135867877  
Correct output: 6.602354913    | Program output: 65.602354913  
Correct output: 99.4302270736  | Program output: 59.4302270736 
Correct output: -98.3471459602 | Program output: -13.3471459602
Correct output: -66.6917750495 | Program output: -36.6917750495
Correct output: -104.5908741149 | Program output: -98.5908741149
Correct output: 47.2673084834  | Program output: 7.2673084834  
Correct output: 114.3563176983 | Program output: 56.3563176983 
Correct output: 0.8175119448   | Program output: -76.1824880552
Correct output: 14.5831091655  | Program output: 76.5831091655 
Correct output: 24.8548523011  | Program output: 42.8548523011 
Correct output: 20.7305356492  | Program output: -74.2694643508
Correct output: -14.2169449076 | Program output: -22.2169449076
Correct output: -65.7165824303 | Program output: -58.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dup} {:instruction float_dup} {:instruction print_float} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction in2} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction float_mod} {:instruction tag_integer_839} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction integer_shove} {:instruction float_frominteger} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_cos} {:instruction float_swap} {:instruction in1} {:instruction integer_mod} {:instruction float_yank} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_min} {:instruction float_sin} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction integer_add} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction integer_max} {:instruction float_min} {:instruction integer_add} {:instruction integer_min} {:instruction float_flush} {:instruction integer_div} {:instruction tagged_925} {:instruction 49} {:instruction integer_mult} {:instruction -27.17784882846064} {:instruction integer_pop} {:instruction integer_max} {:instruction float_rot} {:instruction float_frominteger} {:instruction float_inc} {:instruction float_div} {:instruction float_yank} {:instruction float_div} {:instruction float_swap} {:instruction float_dup} {:instruction integer_sub} {:instruction in2} {:instruction integer_pop} {:instruction float_inc} {:instruction float_mult})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_dup float_dup print_float integer_pop integer_dec float_flush integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod in2 integer_stackdepth integer_dup_items integer_max integer_rot integer_dup_times float_mod tag_integer_839 integer_mod float_dup_times float_frominteger float_dup_items integer_shove float_frominteger integer_stackdepth integer_yank float_cos float_swap in1 integer_mod float_yank integer_rot integer_inc float_dup_items float_dup_items float_min float_sin float_shove integer_dup_items integer_dup_times integer_add integer_dup_times float_stackdepth float_frominteger integer_max float_min integer_add integer_min float_flush integer_div tagged_925 49 integer_mult -27.17784882846064 integer_pop integer_max float_rot float_frominteger float_inc float_div float_yank float_div float_swap float_dup integer_sub in2 integer_pop float_inc float_mult)
Errors: [101.0 2 34.0 12 9.0 2 29.0 2 102.0 2 6.0 2 83.0 11 23.0 2 65.0 12 69.0 2 75.0 2 93.0 2 59.0 1 40.0 1 85.0 2 30.0 1 6.0 3 40.0 1 58.0 3 77.0 13 62.0 2 18.0 2 95.0 13 8.0 2 7.0 2]
Total: 1373.0
Mean: 27.46
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 4971.267671900004
Median total errors in population: 1396.0
Error averages by case: (227.89997110000098 6.184 174.57001109999953 12.41 156.0779461 5.503 178.58102350000016 6.005 222.43323279999922 5.546 158.61370260000047 6.029 209.3440390999991 11.575 174.65914370000016 6.21 192.66802769999939 11.988 202.6673270999995 6.09 217.5112233000006 7.145 223.35004729999926 6.456 199.29634730000055 4.683 184.05475950000042 6.075 213.65675510000113 6.12 180.4880162000001 6.406 178.1165444000005 7.169 170.09945890000074 5.712 195.89444570000109 6.7 209.82254729999954 12.584 202.83369669999942 6.091 169.45133910000067 5.356 220.54925239999943 12.993 155.6316878999999 6.307 169.3321260000007 6.328)
Error minima by case: (1.0 1 10.3925 9 3.4967 1 2.8971 1 0.0 1 0.1784 2 0.735 9 23.0 2 4.1022 9 8.7542 1 59.578 2 9.0 2 2.6024 1 24.4302 1 9.3471 2 30.0 1 6.0 3 6.2673 1 21.3563 3 0.1825 9 0.9456 2 1.1406 1 2.0854 9 5.0 1 7.0 1)
Average genome size in population (length): 55.606
Average program size in population (points): 56.606
Average percent parens in population: 0.022
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9795
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.118
Error (vector) diversity:			 0.126
Behavioral diversity:				 0.132
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4127917
--- Timings ---
Current time: 1529615601748 milliseconds
Total Time:          12.9 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.5 seconds, 42.7%
Fitness Testing:      6.2 seconds, 48.3%
Report:               1.0 seconds,  8.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 53402.0
Test mean error for best: 26.70100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 66.0603371543 
Correct output: -24.607460431  | Program output: 9.392539569   
Correct output: 47.4967454102  | Program output: 38.4967454102 
Correct output: 21.5422970991  | Program output: 50.5422970991 
Correct output: 139.0628943426 | Program output: 37.0628943426 
Correct output: 18.8235614089  | Program output: 24.8235614089 
Correct output: 40.2650090461  | Program output: -42.7349909539
Correct output: -54.8524808043 | Program output: -31.8524808043
Correct output: 56.8977931901  | Program output: -8.1022068099 
Correct output: -81.7542085575 | Program output: -12.7542085575
Correct output: -138.5780328906 | Program output: -63.5780328906
Correct output: 162.135867877  | Program output: 69.135867877  
Correct output: 6.602354913    | Program output: 65.602354913  
Correct output: 99.4302270736  | Program output: 59.4302270736 
Correct output: -98.3471459602 | Program output: -13.3471459602
Correct output: -66.6917750495 | Program output: -36.6917750495
Correct output: -104.5908741149 | Program output: -98.5908741149
Correct output: 47.2673084834  | Program output: 7.2673084834  
Correct output: 114.3563176983 | Program output: 56.3563176983 
Correct output: 0.8175119448   | Program output: -76.1824880552
Correct output: 14.5831091655  | Program output: 76.5831091655 
Correct output: 24.8548523011  | Program output: 42.8548523011 
Correct output: 20.7305356492  | Program output: -74.2694643508
Correct output: -14.2169449076 | Program output: -22.2169449076
Correct output: -65.7165824303 | Program output: -58.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_dup} {:instruction float_dup} {:instruction print_float} {:instruction integer_pop} {:instruction integer_dec} {:instruction float_flush} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dup_items} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction float_mod} {:instruction tag_integer_839} {:instruction integer_mod} {:instruction float_dup_times} {:instruction float_frominteger})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_dup float_dup print_float integer_pop integer_dec float_flush integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dup_items integer_max integer_rot integer_dup_times float_mod tag_integer_839 integer_mod float_dup_times float_frominteger)
Errors: [101.0 2 34.0 12 9.0 2 29.0 2 102.0 2 6.0 2 83.0 11 23.0 2 65.0 12 69.0 2 75.0 2 93.0 2 59.0 1 40.0 1 85.0 2 30.0 1 6.0 3 40.0 1 58.0 3 77.0 13 62.0 2 18.0 2 95.0 13 8.0 2 7.0 2]
Total: 1373.0
Mean: 27.46
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 5013.9275992
Median total errors in population: 1375.0
Error averages by case: (235.34921150000005 3.734 179.21403139999998 12.336 156.0667195 3.546 175.9915522 3.659 235.12592499999994 3.668 156.31907960000007 3.97 220.27077510000004 11.163 174.92461199999997 4.128 205.5666845 11.948 212.8051865999999 3.795 220.2434137 4.996 228.7101827999999 4.657 200.63049680000006 2.879 183.75253650000005 3.961 226.23705940000005 4.14 181.48987860000003 4.099 163.5317235 5.075 179.10382170000005 3.852 198.77720400000013 4.953 215.36504949999994 12.721 203.30298029999994 3.983 167.30711760000008 3.53 230.454092 12.871 158.39192250000002 4.12 163.09834290000003 4.114)
Error minima by case: (0.0 0 11.3925 9 3.4967 1 14.0898 1 1.0 1 5.0 2 1.5761 9 4.8525 2 5.1022 10 9.2314 1 15.422 2 8.0 2 5.6024 1 0.462 1 7.3616 2 2.6918 1 5.0 3 0.462 1 2.3563 2 0.1825 9 4.9918 2 7.8549 1 19.59 9 1.3066 1 6.0 1)
Average genome size in population (length): 52.738
Average program size in population (points): 53.738
Average percent parens in population: 0.022
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.47075
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.055
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5448492
--- Timings ---
Current time: 1529615605488 milliseconds
Total Time:          17.1 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.3 seconds, 42.9%
Fitness Testing:      7.8 seconds, 45.6%
Report:               1.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 53402.0
Test mean error for best: 26.70100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 66.0603371543 
Correct output: -24.607460431  | Program output: 9.392539569   
Correct output: 47.4967454102  | Program output: 38.4967454102 
Correct output: 21.5422970991  | Program output: 50.5422970991 
Correct output: 139.0628943426 | Program output: 37.0628943426 
Correct output: 18.8235614089  | Program output: 24.8235614089 
Correct output: 40.2650090461  | Program output: -42.7349909539
Correct output: -54.8524808043 | Program output: -31.8524808043
Correct output: 56.8977931901  | Program output: -8.1022068099 
Correct output: -81.7542085575 | Program output: -12.7542085575
Correct output: -138.5780328906 | Program output: -63.5780328906
Correct output: 162.135867877  | Program output: 69.135867877  
Correct output: 6.602354913    | Program output: 65.602354913  
Correct output: 99.4302270736  | Program output: 59.4302270736 
Correct output: -98.3471459602 | Program output: -13.3471459602
Correct output: -66.6917750495 | Program output: -36.6917750495
Correct output: -104.5908741149 | Program output: -98.5908741149
Correct output: 47.2673084834  | Program output: 7.2673084834  
Correct output: 114.3563176983 | Program output: 56.3563176983 
Correct output: 0.8175119448   | Program output: -76.1824880552
Correct output: 14.5831091655  | Program output: 76.5831091655 
Correct output: 24.8548523011  | Program output: 42.8548523011 
Correct output: 20.7305356492  | Program output: -74.2694643508
Correct output: -14.2169449076 | Program output: -22.2169449076
Correct output: -65.7165824303 | Program output: -58.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction print_integer} {:instruction integer_rot} {:instruction in1} {:instruction float_swap} {:instruction integer_stackdepth} {:instruction float_stackdepth} {:instruction float_dup} {:instruction float_min} {:instruction -1} {:instruction integer_pop} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction integer_dec} {:instruction print_float} {:instruction float_pop} {:instruction float_sin} {:instruction float_dup} {:instruction integer_add} {:instruction integer_shove} {:instruction integer_max} {:instruction 62} {:instruction tagged_488} {:instruction integer_dec} {:instruction float_cos} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_sin} {:instruction integer_swap} {:instruction float_swap} {:instruction -97} {:instruction integer_shove} {:instruction integer_min} {:instruction float_mult} {:instruction float_yank} {:instruction float_dup} {:instruction float_mod} {:instruction float_rot} {:instruction float_stackdepth} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_flush} {:instruction float_mod} {:instruction integer_mult} {:instruction integer_yankdup} {:instruction 63.82462575666358} {:instruction integer_fromfloat} {:instruction print_float} {:instruction integer_flush} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_div} {:instruction float_add} {:instruction print_float} {:instruction float_frominteger} {:instruction float_mod} {:instruction float_add} {:instruction float_yank} {:instruction float_div} {:instruction 56} {:instruction float_sin} {:instruction integer_rot})
Best program: (float_inc in1 float_max float_dec print_integer integer_rot in1 float_swap integer_stackdepth float_stackdepth float_dup float_min -1 integer_pop integer_mod in2 float_dec integer_dec print_float float_pop float_sin float_dup integer_add integer_shove integer_max 62 tagged_488 integer_dec float_cos float_flush float_stackdepth float_sin integer_swap float_swap -97 integer_shove integer_min float_mult float_yank float_dup float_mod float_rot float_stackdepth integer_dup_items integer_inc float_inc integer_flush float_mod integer_mult integer_yankdup 63.82462575666358 integer_fromfloat print_float integer_flush integer_mod float_dup_items integer_div float_add print_float float_frominteger float_mod float_add float_yank float_div 56 float_sin integer_rot)
Errors: [101.0 2 34.0 12 9.0 2 29.0 2 102.0 2 6.0 2 83.0 11 23.0 2 65.0 12 69.0 2 75.0 2 93.0 2 59.0 1 40.0 1 85.0 2 30.0 1 6.0 3 40.0 1 58.0 3 77.0 13 62.0 2 18.0 2 95.0 13 8.0 2 7.0 2]
Total: 1373.0
Mean: 27.46
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 5091.584728299999
Median total errors in population: 1374.0
Error averages by case: (241.85487710000004 3.592 181.4761273000001 12.226 162.47240880000004 3.847 178.93186000000003 3.464 241.6136168 3.992 159.5048133 3.907 224.19210730000006 11.406 176.27058069999998 4.073 208.0045651 12.198 212.91697539999996 3.614 221.0472137 4.697 234.9434382999999 4.393 203.45689799999997 2.79 189.76254790000002 3.594 226.644935 4.065 182.1703875 3.754 164.0465598 5.019 185.00911500000007 3.572 204.81612330000007 4.905 218.17103639999996 12.504 206.15596759999997 3.904 170.13933930000005 3.843 233.36204220000002 12.64 160.83878239999996 4.059 163.65041010000004 4.074)
Error minima by case: (72.698 1 22.2221 8 7.0 1 18.5423 1 51.186 1 5.0 2 37.265 8 22.0 2 13.5587 9 68.0 1 74.0 2 64.698 2 3.6024 1 11.5534 1 84.0 2 29.0 1 5.0 3 11.698 1 26.4794 3 0.1825 9 11.5831 2 17.0 1 3.0472 9 6.0 2 6.0 2)
Average genome size in population (length): 55.315
Average program size in population (points): 56.315
Average percent parens in population: 0.020
Minimum age in population: 4.0
Maximum age in population: 7.625
Average age in population: 6.007375
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 86
Genome diversity (% unique Plush genomes):	 0.674
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 86
Syntactic diversity (% unique Push programs):	 0.674
Total error diversity:				 0.054
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6833542
--- Timings ---
Current time: 1529615609452 milliseconds
Total Time:          20.9 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.9 seconds, 42.5%
Fitness Testing:      9.6 seconds, 46.2%
Report:               2.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 53544.0
Test mean error for best: 26.77200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 64.0603371543 
Correct output: -24.607460431  | Program output: 7.392539569   
Correct output: 47.4967454102  | Program output: 36.4967454102 
Correct output: 21.5422970991  | Program output: 48.5422970991 
Correct output: 139.0628943426 | Program output: 35.0628943426 
Correct output: 18.8235614089  | Program output: 22.8235614089 
Correct output: 40.2650090461  | Program output: -44.7349909539
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -10.1022068099
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 67.135867877  
Correct output: 6.602354913    | Program output: 63.602354913  
Correct output: 99.4302270736  | Program output: 57.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 5.2673084834  
Correct output: 114.3563176983 | Program output: 54.3563176983 
Correct output: 0.8175119448   | Program output: -78.1824880552
Correct output: 14.5831091655  | Program output: 74.5831091655 
Correct output: 24.8548523011  | Program output: 40.8548523011 
Correct output: 20.7305356492  | Program output: -76.2694643508
Correct output: -14.2169449076 | Program output: -24.2169449076
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_swap} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_swap float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [103.0 2 32.0 12 11.0 2 27.0 2 104.0 2 4.0 2 85.0 11 21.0 2 67.0 13 67.0 2 73.0 3 95.0 2 57.0 1 42.0 2 83.0 2 28.0 2 4.0 1 42.0 2 60.0 2 79.0 12 60.0 1 16.0 2 97.0 13 10.0 1 5.0 1]
Total: 1369.0
Mean: 27.38
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3284.7262518
Median total errors in population: 1373.0
Error averages by case: (172.4944719 2.913 110.4121754 12.163 87.62695760000003 2.923 105.8683893 2.859 173.19825809999998 3.018 84.85562030000001 2.946 155.9376111 11.295 101.71926919999999 3.038 139.67559910000003 12.18 143.66074289999997 2.951 149.62450520000002 3.206 165.14853860000002 3.016 133.1731309 1.895 116.3150294 2.139 158.3719526 3.047 108.0389677 2.238 86.63684199999999 4.011 115.8559134 2.123 132.8278904 3.932 150.22569549999997 12.959 135.96902830000002 2.952 95.85467030000001 2.94 166.73386830000004 13.04 87.48492040000001 3.032 87.1672039 3.033)
Error minima by case: (32.9397 1 21.2221 8 0.2336 1 19.2393 1 62.9371 1 4.0 2 7.4653 8 6.8525 2 9.1675 8 9.294 1 13.422 2 21.8641 2 5.6024 1 21.4302 1 7.2989 2 4.6918 1 4.0 1 0.463 1 0.3563 2 0.1825 9 12.8666 1 16.0 1 6.5096 9 6.0 1 5.0 1)
Average genome size in population (length): 50.929
Average program size in population (points): 51.929
Average percent parens in population: 0.020
Minimum age in population: 5.5
Maximum age in population: 9.25
Average age in population: 7.53075
Median age in population: 7.5625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 139
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 139
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.028
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8107342
--- Timings ---
Current time: 1529615612774 milliseconds
Total Time:          24.4 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.3 seconds, 42.1%
Fitness Testing:     11.2 seconds, 45.9%
Report:               2.8 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 53544.0
Test mean error for best: 26.77200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 64.0603371543 
Correct output: -24.607460431  | Program output: 7.392539569   
Correct output: 47.4967454102  | Program output: 36.4967454102 
Correct output: 21.5422970991  | Program output: 48.5422970991 
Correct output: 139.0628943426 | Program output: 35.0628943426 
Correct output: 18.8235614089  | Program output: 22.8235614089 
Correct output: 40.2650090461  | Program output: -44.7349909539
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -10.1022068099
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 67.135867877  
Correct output: 6.602354913    | Program output: 63.602354913  
Correct output: 99.4302270736  | Program output: 57.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 5.2673084834  
Correct output: 114.3563176983 | Program output: 54.3563176983 
Correct output: 0.8175119448   | Program output: -78.1824880552
Correct output: 14.5831091655  | Program output: 74.5831091655 
Correct output: 24.8548523011  | Program output: 40.8548523011 
Correct output: 20.7305356492  | Program output: -76.2694643508
Correct output: -14.2169449076 | Program output: -24.2169449076
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_swap} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_swap float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [103.0 2 32.0 12 11.0 2 27.0 2 104.0 2 4.0 2 85.0 11 21.0 2 67.0 13 67.0 2 73.0 3 95.0 2 57.0 1 42.0 2 83.0 2 28.0 2 4.0 1 42.0 2 60.0 2 79.0 12 60.0 1 16.0 2 97.0 13 10.0 1 5.0 1]
Total: 1369.0
Mean: 27.38
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2923.0650587000005
Median total errors in population: 1373.0
Error averages by case: (159.26273480000003 2.843 95.92175949999998 12.122 72.9247785 2.796 92.13135190000001 2.786 159.8161564 2.896 70.49709880000002 2.835 141.1481353 11.239 87.0378672 2.892 123.64969380000001 12.16 129.05056659999997 2.848 136.0263976 3.038 151.80869409999997 2.873 119.6626682 1.798 102.1254323 2.001 144.0490508 2.904 93.6351332 2.052 72.107019 3.837 100.47571690000002 1.973 118.8852535 3.808 135.36659069999996 12.953 122.4966174 2.829 82.02048669999999 2.828 152.11859780000003 13.045 71.27367220000001 2.866 72.4815855 2.87)
Error minima by case: (31.9397 1 5.019 8 2.9628 1 20.5423 1 61.9371 1 3.0 2 4.269 8 5.8525 1 7.748 8 52.1278 1 14.422 2 20.8641 2 5.6024 1 22.4302 1 68.7207 2 3.6918 1 3.0 1 2.7333 1 1.3563 2 0.1825 8 13.5831 1 15.0 1 19.7305 8 5.0 1 4.0 1)
Average genome size in population (length): 50.33
Average program size in population (points): 51.33
Average percent parens in population: 0.020
Minimum age in population: 6.75
Maximum age in population: 10.84375
Average age in population: 9.00590625
Median age in population: 9.03125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.743
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.743
Total error diversity:				 0.03
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9365942
--- Timings ---
Current time: 1529615616340 milliseconds
Total Time:          27.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.9 seconds, 42.8%
Fitness Testing:     12.7 seconds, 45.5%
Report:               3.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 53544.0
Test mean error for best: 26.77200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 64.0603371543 
Correct output: -24.607460431  | Program output: 7.392539569   
Correct output: 47.4967454102  | Program output: 36.4967454102 
Correct output: 21.5422970991  | Program output: 48.5422970991 
Correct output: 139.0628943426 | Program output: 35.0628943426 
Correct output: 18.8235614089  | Program output: 22.8235614089 
Correct output: 40.2650090461  | Program output: -44.7349909539
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -10.1022068099
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 67.135867877  
Correct output: 6.602354913    | Program output: 63.602354913  
Correct output: 99.4302270736  | Program output: 57.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 5.2673084834  
Correct output: 114.3563176983 | Program output: 54.3563176983 
Correct output: 0.8175119448   | Program output: -78.1824880552
Correct output: 14.5831091655  | Program output: 74.5831091655 
Correct output: 24.8548523011  | Program output: 40.8548523011 
Correct output: 20.7305356492  | Program output: -76.2694643508
Correct output: -14.2169449076 | Program output: -24.2169449076
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_swap} {:instruction float_sub} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_swap float_sub integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove float_yankdup float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [103.0 2 32.0 12 11.0 2 27.0 2 104.0 2 4.0 2 85.0 11 21.0 2 67.0 13 67.0 2 73.0 3 95.0 2 57.0 1 42.0 2 83.0 2 28.0 2 4.0 1 42.0 2 60.0 2 79.0 12 60.0 1 16.0 2 97.0 13 10.0 1 5.0 1]
Total: 1369.0
Mean: 27.38
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3120.9077589
Median total errors in population: 1373.0
Error averages by case: (166.85086900000005 3.0 103.3380198 12.091 81.3143452 2.938 98.84039050000003 2.926 167.2544525 3.036 77.83897860000002 2.967 149.16069220000003 11.202 94.89618679999998 3.049 133.08362340000005 12.178 137.105929 3.008 143.62318509999997 3.228 159.4842828 3.0 125.88327360000002 1.93 110.3225036 2.176 151.92852100000002 3.052 101.45523060000001 2.259 80.74975110000001 3.887 109.29499940000001 2.156 126.82796320000001 3.89 143.07763630000002 12.86 128.7725588 2.913 88.90437289999997 2.961 159.7396787 12.991 80.74838589999999 2.977 80.74992889999999 2.987)
Error minima by case: (30.9397 1 12.3925 9 7.0 1 0.0893 1 37.825 1 2.6294 2 18.812 8 4.8525 1 0.825 9 9.7542 1 12.422 2 19.8641 2 5.6024 1 20.4302 1 10.3471 2 2.6918 1 3.0 1 10.2673 1 0.6437 2 0.1096 8 6.8699 1 3.4019 1 0.7224 9 6.0 1 4.0 1)
Average genome size in population (length): 49.88
Average program size in population (points): 50.88
Average percent parens in population: 0.020
Minimum age in population: 7.75
Maximum age in population: 12.203125
Average age in population: 10.512546875
Median age in population: 10.546875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.786
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.786
Total error diversity:				 0.038
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 10613192
--- Timings ---
Current time: 1529615619827 milliseconds
Total Time:          31.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.4 seconds, 42.6%
Fitness Testing:     14.4 seconds, 45.7%
Report:               3.5 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 53544.0
Test mean error for best: 26.77200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 64.0603371543 
Correct output: -24.607460431  | Program output: 7.392539569   
Correct output: 47.4967454102  | Program output: 36.4967454102 
Correct output: 21.5422970991  | Program output: 48.5422970991 
Correct output: 139.0628943426 | Program output: 35.0628943426 
Correct output: 18.8235614089  | Program output: 22.8235614089 
Correct output: 40.2650090461  | Program output: -44.7349909539
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -10.1022068099
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 67.135867877  
Correct output: 6.602354913    | Program output: 63.602354913  
Correct output: 99.4302270736  | Program output: 57.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 5.2673084834  
Correct output: 114.3563176983 | Program output: 54.3563176983 
Correct output: 0.8175119448   | Program output: -78.1824880552
Correct output: 14.5831091655  | Program output: 74.5831091655 
Correct output: 24.8548523011  | Program output: 40.8548523011 
Correct output: 20.7305356492  | Program output: -76.2694643508
Correct output: -14.2169449076 | Program output: -24.2169449076
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_swap} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_swap float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [103.0 2 32.0 12 11.0 2 27.0 2 104.0 2 4.0 2 85.0 11 21.0 2 67.0 13 67.0 2 73.0 3 95.0 2 57.0 1 42.0 2 83.0 2 28.0 2 4.0 1 42.0 2 60.0 2 79.0 12 60.0 1 16.0 2 97.0 13 10.0 1 5.0 1]
Total: 1369.0
Mean: 27.38
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3480.4890671000003
Median total errors in population: 1373.0
Error averages by case: (182.29720310000002 3.092 114.01216949999998 12.13 98.38588390000001 3.015 114.90229670000002 3.01 182.87795370000003 3.129 91.8993561 3.049 164.79985460000006 11.292 109.65414039999996 3.126 142.80765810000005 12.452 146.73373809999998 3.101 157.3695595 3.571 175.02905379999999 3.081 141.77160690000005 2.011 126.7918595 2.505 161.51546820000004 3.14 116.1235205 2.598 95.39194089999997 3.531 120.2219437 2.465 143.00272870000003 3.766 159.00442529999998 12.701 144.5730179 2.793 105.03756770000003 3.049 175.41855720000004 13.036 93.86744579999997 2.863 95.6351173 2.859)
Error minima by case: (32.9397 1 3.4131 8 7.0 1 19.2393 1 62.9371 1 3.0 2 39.265 8 6.8525 1 7.748 8 55.2458 1 10.422 2 21.8641 2 5.6024 1 18.4302 1 70.6529 2 4.6918 1 3.0 1 4.5465 1 0.3563 2 0.1096 7 13.5831 1 15.0 1 19.7305 8 6.0 1 4.0 1)
Average genome size in population (length): 49.833
Average program size in population (points): 50.833
Average percent parens in population: 0.020
Minimum age in population: 8.75
Maximum age in population: 13.7265625
Average age in population: 12.006046875
Median age in population: 12.046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.742
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.742
Total error diversity:				 0.04
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 11859392
--- Timings ---
Current time: 1529615623263 milliseconds
Total Time:          34.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        15.0 seconds, 42.9%
Fitness Testing:     15.9 seconds, 45.5%
Report:               3.9 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 53544.0
Test mean error for best: 26.77200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 64.0603371543 
Correct output: -24.607460431  | Program output: 7.392539569   
Correct output: 47.4967454102  | Program output: 36.4967454102 
Correct output: 21.5422970991  | Program output: 48.5422970991 
Correct output: 139.0628943426 | Program output: 35.0628943426 
Correct output: 18.8235614089  | Program output: 22.8235614089 
Correct output: 40.2650090461  | Program output: -44.7349909539
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -10.1022068099
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 67.135867877  
Correct output: 6.602354913    | Program output: 63.602354913  
Correct output: 99.4302270736  | Program output: 57.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 5.2673084834  
Correct output: 114.3563176983 | Program output: 54.3563176983 
Correct output: 0.8175119448   | Program output: -78.1824880552
Correct output: 14.5831091655  | Program output: 74.5831091655 
Correct output: 24.8548523011  | Program output: 40.8548523011 
Correct output: 20.7305356492  | Program output: -76.2694643508
Correct output: -14.2169449076 | Program output: -24.2169449076
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_swap} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction integer_add} {:instruction integer_pop} {:instruction integer_dec} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_swap float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod integer_add integer_pop integer_dec integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [103.0 2 32.0 12 11.0 2 27.0 2 104.0 2 4.0 2 85.0 11 21.0 2 67.0 13 67.0 2 73.0 3 95.0 2 57.0 1 42.0 2 83.0 2 28.0 2 4.0 1 42.0 2 60.0 2 79.0 12 60.0 1 16.0 2 97.0 13 10.0 1 5.0 1]
Total: 1369.0
Mean: 27.38
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3563.8027492000006
Median total errors in population: 1369.0
Error averages by case: (184.96016900000004 3.349 120.43227469999998 12.092 100.85920020000002 3.188 116.73956000000003 3.252 185.06502360000002 3.34 96.06657460000002 3.249 166.04839430000004 11.232 112.41295340000005 3.26 149.44802669999999 12.857 152.8243356 3.334 160.2896814 4.23 177.75345800000008 3.264 142.9278047 2.197 129.3771861 3.15 167.416095 3.345 118.78376300000004 3.248 98.77891650000002 2.821 127.16609070000001 3.061 145.60219460000002 3.579 160.01615410000002 12.227 145.74365189999997 2.611 107.1235948 3.244 176.29762390000008 12.916 98.75773560000002 2.668 98.61128680000002 2.587)
Error minima by case: (32.9397 1 19.7562 8 2.0243 1 4.9149 1 42.1263 1 2.0 2 9.256 8 6.8525 1 7.3768 8 56.2458 1 11.422 2 21.8641 2 0.7634 1 2.4936 1 71.6529 2 4.6918 1 2.0 1 2.2537 1 0.3563 2 0.1825 8 2.0443 1 8.2275 1 8.485 8 5.985 1 3.0 1)
Average genome size in population (length): 50.385
Average program size in population (points): 51.385
Average percent parens in population: 0.020
Minimum age in population: 11.1328125
Maximum age in population: 15.17578125
Average age in population: 13.46333203125
Median age in population: 13.486328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 56
Genome diversity (% unique Plush genomes):	 0.664
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 56
Syntactic diversity (% unique Push programs):	 0.664
Total error diversity:				 0.053
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 13119217
--- Timings ---
Current time: 1529615626677 milliseconds
Total Time:          38.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.5 seconds, 43.1%
Fitness Testing:     17.3 seconds, 45.3%
Report:               4.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 53815.0
Test mean error for best: 26.90750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 61.0603371543 
Correct output: -24.607460431  | Program output: 4.392539569   
Correct output: 47.4967454102  | Program output: 33.4967454102 
Correct output: 21.5422970991  | Program output: 45.5422970991 
Correct output: 139.0628943426 | Program output: 32.0628943426 
Correct output: 18.8235614089  | Program output: 19.8235614089 
Correct output: 40.2650090461  | Program output: -47.7349909539
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -13.1022068099
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 64.135867877  
Correct output: 6.602354913    | Program output: 60.602354913  
Correct output: 99.4302270736  | Program output: 54.4302270736 
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 2.2673084834  
Correct output: 114.3563176983 | Program output: 51.3563176983 
Correct output: 0.8175119448   | Program output: -81.1824880552
Correct output: 14.5831091655  | Program output: 71.5831091655 
Correct output: 24.8548523011  | Program output: 37.8548523011 
Correct output: 20.7305356492  | Program output: -79.2694643508
Correct output: -14.2169449076 | Program output: -27.2169449076
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mult} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_mod} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction integer_add} {:instruction float_swap} {:instruction float_mult} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_swap} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mult integer_add float_swap float_mod integer_mult float_mult float_dec float_mod float_dec float_yankdup integer_pop integer_add float_swap float_mult integer_add float_swap float_mod integer_mult float_mult float_dec float_mod integer_mult float_mult float_dec float_yankdup integer_pop float_swap float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [106.0 2 29.0 11 14.0 2 24.0 2 107.0 2 1.0 1 88.0 11 18.0 2 70.0 13 64.0 2 70.0 2 98.0 2 54.0 1 45.0 2 80.0 1 25.0 2 1.0 1 45.0 2 63.0 2 82.0 11 57.0 2 13.0 2 100.0 13 13.0 2 2.0 1]
Total: 1363.0
Mean: 27.26
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3319.4965409000015
Median total errors in population: 1369.0
Error averages by case: (176.86972020000005 3.174 109.4185619 12.066 92.17716450000003 3.021 106.01860760000001 3.078 177.22874189999996 3.166 84.81959660000004 3.083 158.51310039999998 11.194 101.21246409999999 3.024 141.4983917 12.921 141.8806267 3.14 148.88225690000002 4.12 169.56048869999995 3.097 132.84508320000003 2.049 120.8721621 3.083 156.61471479999997 3.141 107.26102610000002 3.134 86.9819959 2.434 118.84828900000002 2.956 137.13720479999995 3.354 152.56416119999997 12.178 135.68996250000004 2.383 96.17400170000002 3.081 169.1201844 12.866 89.93749430000001 2.432 86.8955397 2.3)
Error minima by case: (34.9397 1 4.0 1 8.0 1 12.1617 1 64.9371 2 1.0 1 4.0 2 8.8525 1 4.0 1 17.2381 1 9.422 2 23.8641 2 4.6024 1 17.4302 1 0.6451 1 6.6918 1 1.0 1 19.8675 1 1.6437 2 0.1673 2 12.5831 1 13.0 2 4.0 2 6.3687 1 2.0 1)
Average genome size in population (length): 50.307
Average program size in population (points): 51.307
Average percent parens in population: 0.020
Minimum age in population: 12.15625
Maximum age in population: 16.720703125
Average age in population: 14.94707421875
Median age in population: 14.9970703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 43
Genome diversity (% unique Plush genomes):	 0.725
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 43
Syntactic diversity (% unique Push programs):	 0.725
Total error diversity:				 0.045
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 14377017
--- Timings ---
Current time: 1529615630025 milliseconds
Total Time:          41.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.9 seconds, 43.1%
Fitness Testing:     18.8 seconds, 45.3%
Report:               4.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 53815.0
Test mean error for best: 26.90750
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 61.0603371543 
Correct output: -24.607460431  | Program output: 4.392539569   
Correct output: 47.4967454102  | Program output: 33.4967454102 
Correct output: 21.5422970991  | Program output: 45.5422970991 
Correct output: 139.0628943426 | Program output: 32.0628943426 
Correct output: 18.8235614089  | Program output: 19.8235614089 
Correct output: 40.2650090461  | Program output: -47.7349909539
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -13.1022068099
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 64.135867877  
Correct output: 6.602354913    | Program output: 60.602354913  
Correct output: 99.4302270736  | Program output: 54.4302270736 
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 2.2673084834  
Correct output: 114.3563176983 | Program output: 51.3563176983 
Correct output: 0.8175119448   | Program output: -81.1824880552
Correct output: 14.5831091655  | Program output: 71.5831091655 
Correct output: 24.8548523011  | Program output: 37.8548523011 
Correct output: 20.7305356492  | Program output: -79.2694643508
Correct output: -14.2169449076 | Program output: -27.2169449076
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction float_mult} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_shove} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec float_yankdup float_mult float_dec integer_pop integer_shove float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_mult integer_max integer_inc float_dup_times float_dec float_yankdup integer_pop float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [106.0 2 29.0 11 14.0 2 24.0 2 107.0 2 1.0 1 88.0 11 18.0 2 70.0 13 64.0 2 70.0 2 98.0 2 54.0 1 45.0 2 80.0 1 25.0 2 1.0 1 45.0 2 63.0 2 82.0 11 57.0 2 13.0 2 100.0 13 13.0 2 2.0 1]
Total: 1363.0
Mean: 27.26
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3855.5115003000014
Median total errors in population: 1369.0
Error averages by case: (196.26615480000004 3.432 132.4773412 12.073 113.27882840000004 3.27 128.2070093 3.341 196.43478710000002 3.436 108.15826600000001 3.318 177.34860010000003 11.224 123.70577139999996 3.299 161.99041999999994 12.925 164.3133171 3.405 170.8492179 4.366 189.1573001 3.353 153.90290750000003 2.272 141.51498210000005 3.324 178.67061530000004 3.392 129.97157520000002 3.408 110.5207253 2.755 140.06233160000002 3.176 157.4522916 3.632 171.2703395 12.152 156.7183435 2.67 118.74674160000001 3.332 187.39996330000005 12.833 111.28397169999998 2.693 110.14269870000001 2.586)
Error minima by case: (28.7511 1 12.2343 8 8.0 1 7.2343 1 29.7511 2 0.0 0 10.7511 8 1.2343 1 7.2489 8 47.2343 1 10.422 2 20.7511 2 3.6024 1 18.4302 1 63.2343 1 5.6918 1 0.0 0 31.7327 1 0.6437 2 1.1205 9 9.4806 1 3.7657 2 2.0259 8 6.3687 1 1.0 1)
Average genome size in population (length): 49.958
Average program size in population (points): 50.958
Average percent parens in population: 0.020
Minimum age in population: 13.625
Maximum age in population: 18.2197265625
Average age in population: 16.370966796875
Median age in population: 16.44091796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 33
Genome diversity (% unique Plush genomes):	 0.78
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.78
Total error diversity:				 0.05
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 15626167
--- Timings ---
Current time: 1529615633485 milliseconds
Total Time:          45.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.5 seconds, 43.2%
Fitness Testing:     20.3 seconds, 45.1%
Report:               5.2 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 48667.8033
Test mean error for best: 24.33390
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 61.0603371543 
Correct output: -24.607460431  | Program output: 1.0           
Correct output: 47.4967454102  | Program output: 33.4967454102 
Correct output: 21.5422970991  | Program output: 1.0           
Correct output: 139.0628943426 | Program output: 32.0628943426 
Correct output: 18.8235614089  | Program output: 1.0           
Correct output: 40.2650090461  | Program output: -3.0          
Correct output: -54.8524808043 | Program output: -34.8524808043
Correct output: 56.8977931901  | Program output: -3.0          
Correct output: -81.7542085575 | Program output: -15.7542085575
Correct output: -138.5780328906 | Program output: -66.5780328906
Correct output: 162.135867877  | Program output: 64.135867877  
Correct output: 6.602354913    | Program output: 1.0           
Correct output: 99.4302270736  | Program output: 54.4302270736 
Correct output: -98.3471459602 | Program output: -16.3471459602
Correct output: -66.6917750495 | Program output: -39.6917750495
Correct output: -104.5908741149 | Program output: -101.5908741149
Correct output: 47.2673084834  | Program output: 2.2673084834  
Correct output: 114.3563176983 | Program output: 51.3563176983 
Correct output: 0.8175119448   | Program output: -3.0          
Correct output: 14.5831091655  | Program output: 1.0           
Correct output: 24.8548523011  | Program output: 1.0           
Correct output: 20.7305356492  | Program output: -3.0          
Correct output: -14.2169449076 | Program output: -3.0          
Correct output: -65.7165824303 | Program output: -61.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [106.0 2 25.6075 11 14.0 2 20.5423 10 107.0 2 17.8236 10 43.265 11 20.0 1 59.8978 11 66.0 2 72.0 3 98.0 2 5.6024 9 45.0 2 82.0 2 27.0 2 3.0 1 45.0 2 63.0 2 3.8175 12 13.5831 10 23.8549 11 23.7305 11 11.2169 11 4.0 1]
Total: 1143.9415
Mean: 22.87883
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 4029.316761600002
Median total errors in population: 1369.0
Error averages by case: (202.94980150000006 3.49 138.11801459999998 12.059 120.92446680000003 3.333 134.00472010000004 3.393 203.36402539999997 3.504 113.84482930000004 3.348 186.29948550000006 11.243 130.05241959999995 3.331 170.6638729 12.932 170.5148141 3.451 176.32108940000003 4.403 195.88285029999997 3.395 159.86129230000003 2.311 148.73923640000004 3.379 184.75752579999997 3.432 136.1561466 3.45 116.52411829999998 2.787 147.73098630000004 3.245 164.53055250000008 3.711 180.6223481 12.152 162.70395679999993 2.76 124.47612660000004 3.378 196.6534813 12.842 120.34001680000001 2.831 116.47858430000001 2.642)
Error minima by case: (33.9397 1 14.2186 8 7.0 1 9.2186 1 63.9371 1 0.0 0 5.2133 10 3.2186 1 12.7867 8 49.2186 1 5.1792 2 22.8641 1 4.6024 1 13.1875 1 65.2186 1 5.6918 1 0.0 0 31.7327 1 0.6437 2 0.1825 9 12.5831 1 1.7814 1 17.2133 9 5.8578 1 0.0 0)
Average genome size in population (length): 50.735
Average program size in population (points): 51.735
Average percent parens in population: 0.020
Minimum age in population: 14.625
Maximum age in population: 19.94482421875
Average age in population: 17.8330830078125
Median age in population: 17.873046875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.812
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.812
Total error diversity:				 0.051
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 16894667
--- Timings ---
Current time: 1529615636974 milliseconds
Total Time:          48.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        21.0 seconds, 43.3%
Fitness Testing:     21.8 seconds, 45.0%
Report:               5.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 48602.73329999999
Test mean error for best: 24.30137
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 62.0603371543 
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 34.4967454102 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 33.0628943426 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 65.135867877  
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 55.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 3.2673084834  
Correct output: 114.3563176983 | Program output: 52.3563176983 
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_max} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_shove} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_pop integer_max integer_inc float_dup_times float_shove integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [105.0 2 26.6075 10 13.0 2 19.5423 10 106.0 2 16.8236 11 42.265 11 21.0 2 58.8978 11 67.0 2 73.0 3 97.0 2 4.6024 9 44.0 2 83.0 2 28.0 2 4.0 1 44.0 2 62.0 3 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 5.0 1]
Total: 1138.9415
Mean: 22.77883
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3909.9547279000003
Median total errors in population: 1369.0
Error averages by case: (200.18399530000002 3.495 131.25758989999997 11.951 117.31101540000004 3.346 129.49037260000003 3.397 200.37729430000002 3.495 108.44323020000004 3.159 181.7574576 11.267 124.70432439999996 3.342 164.40686689999998 12.965 163.8988646 3.449 171.71702370000003 4.288 193.07958569999997 3.388 155.12794330000006 2.408 145.63941820000002 3.395 178.30534540000005 3.309 131.02882060000002 3.46 111.49285379999996 2.69 141.77767089999998 3.262 161.4773084 3.723 175.75974370000003 12.047 157.96388370000008 2.934 120.00758770000003 3.418 191.81011410000002 12.828 114.96881909999996 3.011 111.32359840000001 2.617)
Error minima by case: (34.9397 1 18.6075 8 8.0 1 19.5423 1 64.9371 2 0.0 0 22.735 9 8.8525 1 4.748 8 53.2458 1 8.422 2 23.8641 1 4.6024 1 16.4302 1 68.6529 1 6.6918 1 0.0 0 1.5465 1 1.6437 2 0.2043 8 2.6829 1 11.0 2 18.7305 9 7.0 1 0.0 0)
Average genome size in population (length): 52.134
Average program size in population (points): 53.134
Average percent parens in population: 0.019
Minimum age in population: 16.9921875
Maximum age in population: 21.272705078125
Average age in population: 19.32591918945312
Median age in population: 19.3984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.785
Total error diversity:				 0.054
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 18198242
--- Timings ---
Current time: 1529615640410 milliseconds
Total Time:          52.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.6 seconds, 43.4%
Fitness Testing:     23.3 seconds, 44.9%
Report:               6.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 48602.73329999999
Test mean error for best: 24.30137
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 62.0603371543 
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 34.4967454102 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 33.0628943426 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -33.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -14.7542085575
Correct output: -138.5780328906 | Program output: -65.5780328906
Correct output: 162.135867877  | Program output: 65.135867877  
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 55.4302270736 
Correct output: -98.3471459602 | Program output: -15.3471459602
Correct output: -66.6917750495 | Program output: -38.6917750495
Correct output: -104.5908741149 | Program output: -100.5908741149
Correct output: 47.2673084834  | Program output: 3.2673084834  
Correct output: 114.3563176983 | Program output: 52.3563176983 
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -60.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction -81} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction float_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec -81 float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult float_mult float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_stackdepth integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [105.0 2 26.6075 10 13.0 2 19.5423 10 106.0 2 16.8236 11 42.265 11 21.0 2 58.8978 11 67.0 2 73.0 3 97.0 2 4.6024 9 44.0 2 83.0 2 28.0 2 4.0 1 44.0 2 62.0 3 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 5.0 1]
Total: 1138.9415
Mean: 22.77883
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3791.2422057000017
Median total errors in population: 1365.0
Error averages by case: (198.31775120000003 3.732 123.03794639999994 11.535 114.88795990000006 3.564 124.39073660000005 3.738 198.06783369999997 3.705 102.3921301000001 3.093 177.35197930000012 11.203 119.77871729999998 3.462 158.1463564000001 12.857 155.96704779999996 3.522 166.94951390000006 4.053 191.23196919999995 3.586 148.4598837000002 2.787 143.39945510000004 3.586 170.48638449999999 3.068 126.1648435 3.539 106.97381769999997 2.72 136.33580740000005 3.544 159.28236780000003 3.969 170.21820230000012 11.603 151.47108710000006 3.638 115.48560490000003 3.768 186.44415480000018 12.726 110.10092269999998 3.664 106.5497324 2.688)
Error minima by case: (35.9397 1 13.4842 8 0.8296 1 0.3138 1 60.3988 1 0.0 0 37.5866 9 9.8525 1 13.4565 9 6.7542 1 8.422 2 24.8641 1 2.6024 1 16.4302 1 0.3974 1 7.6918 1 0.0 0 11.9882 1 2.6437 2 0.1825 8 10.5831 1 10.0 1 18.0521 9 1.8296 1 0.0 0)
Average genome size in population (length): 57.068
Average program size in population (points): 58.068
Average percent parens in population: 0.018
Minimum age in population: 18.8311767578125
Maximum age in population: 22.5836181640625
Average age in population: 20.76536791992188
Median age in population: 20.80108642578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.716
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.716
Total error diversity:				 0.071
Error (vector) diversity:			 0.077
Behavioral diversity:				 0.078
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 19625517
--- Timings ---
Current time: 1529615643913 milliseconds
Total Time:          55.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        24.1 seconds, 43.4%
Fitness Testing:     24.9 seconds, 44.9%
Report:               6.4 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 48535.98849999999
Test mean error for best: 24.26799
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 63.0603371543 
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 35.4967454102 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 34.0628943426 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -32.8524808043
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -13.7542085575
Correct output: -138.5780328906 | Program output: -64.5780328906
Correct output: 162.135867877  | Program output: 66.135867877  
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 56.4302270736 
Correct output: -98.3471459602 | Program output: -14.3471459602
Correct output: -66.6917750495 | Program output: -37.6917750495
Correct output: -104.5908741149 | Program output: -99.5908741149
Correct output: 47.2673084834  | Program output: 4.2673084834  
Correct output: 114.3563176983 | Program output: 53.3563176983 
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -59.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank integer_stackdepth integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [104.0 2 27.6075 11 12.0 2 18.5423 11 105.0 2 15.8236 11 41.265 11 22.0 2 57.8978 11 68.0 2 74.0 3 96.0 2 3.6024 9 43.0 2 84.0 2 29.0 2 5.0 3 43.0 1 61.0 3 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 6.0 2]
Total: 1134.9415
Mean: 22.69883
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3762.951431799999
Median total errors in population: 1363.0
Error averages by case: (202.27865390000008 3.699 111.82918069999982 11.263 119.01549300000005 3.568 125.43140940000013 4.546 201.7987257999999 3.647 99.68586790000028 3.947 176.26320010000032 11.238 121.96142209999995 3.444 145.86717000000033 12.644 149.1828772 3.519 169.60455919999993 3.919 195.20470849999995 3.577 144.48260240000036 3.534 147.49838530000008 3.567 164.17778099999995 2.966 128.37500770000003 3.555 109.26780580000002 2.775 123.87769880000009 3.485 163.38693610000004 3.921 165.64587690000027 11.541 148.02384870000014 4.592 117.96565340000026 4.652 182.01374370000025 12.61 107.82926689999991 4.664 108.71455729999997 2.696)
Error minima by case: (37.4873 1 16.3237 2 7.0 1 17.5423 1 38.4873 1 0.0 0 19.4873 9 15.0 1 1.4873 8 4.5117 1 4.422 2 29.4873 1 2.6024 1 10.1611 1 20.5117 1 13.6918 1 0.0 0 1.5465 1 5.5127 2 0.0606 8 10.5831 1 10.0 1 18.5455 8 4.9153 1 0.0 0)
Average genome size in population (length): 58.726
Average program size in population (points): 59.726
Average percent parens in population: 0.017
Minimum age in population: 19.8712158203125
Maximum age in population: 24.03289794921875
Average age in population: 22.18458520507812
Median age in population: 22.22604370117188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.711
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.711
Total error diversity:				 0.096
Error (vector) diversity:			 0.104
Behavioral diversity:				 0.105
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 21094267
--- Timings ---
Current time: 1529615647449 milliseconds
Total Time:          59.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.7 seconds, 43.5%
Fitness Testing:     26.5 seconds, 45.0%
Report:               6.7 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 44134.058999999994
Test mean error for best: 22.06703
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 131.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 75.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 73.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -62.7049616086
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -24.5084171151
Correct output: -138.5780328906 | Program output: -126.1560657812
Correct output: 162.135867877  | Program output: 137.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 117.8604541471
Correct output: -98.3471459602 | Program output: -25.6942919205
Correct output: -66.6917750495 | Program output: -72.3835500991
Correct output: -104.5908741149 | Program output: -196.1817482297
Correct output: 47.2673084834  | Program output: 13.5346169668 
Correct output: 114.3563176983 | Program output: 111.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -116.4331648606
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec float_inc in1 float_inc in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [35.9397 10 26.6075 10 28.4967 10 19.5423 10 65.9371 11 16.8236 11 42.265 11 7.8525 11 58.8978 11 57.2458 10 12.422 11 24.8641 10 4.6024 9 18.4302 12 72.6529 10 5.6918 10 91.5909 10 33.7327 12 2.6437 9 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 50.7166 11]
Total: 1014.1582000000001
Mean: 20.283163
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3198.0289315000036
Median total errors in population: 1340.0
Error averages by case: (183.22212030000003 3.673 96.0425281999993 11.06 97.71194790000008 3.523 101.55752130000036 7.256 182.46238699999998 3.627 85.87484070000086 7.149 141.8815701000004 11.209 100.4682317 3.144 128.13121130000113 11.972 133.82894779999995 3.375 149.040546 4.08 176.14588849999978 3.557 105.07984450000114 6.211 127.19432830000007 3.553 148.88418500000003 3.118 106.88669200000001 3.421 88.1939021 2.656 110.32649500000007 3.421 143.34330970000002 4.052 119.93116580000051 11.855 110.49463490000122 7.453 99.10641670000038 7.568 137.1991235000011 11.918 88.94655319999976 7.495 87.17353999999999 2.555)
Error minima by case: (35.9397 1 6.0 2 8.0 1 16.5423 1 39.0629 2 0.0 0 6.5776 9 7.8525 1 4.748 7 10.7542 1 4.422 2 24.8641 1 1.2088 1 10.4302 1 1.1823 1 5.6918 1 0.0 0 1.5465 1 2.6437 2 0.1825 8 7.5769 1 10.0 1 14.6868 7 1.5661 1 0.0 0)
Average genome size in population (length): 57.109
Average program size in population (points): 58.109
Average percent parens in population: 0.018
Minimum age in population: 21.0523681640625
Maximum age in population: 25.50689697265625
Average age in population: 23.57938403320312
Median age in population: 23.64932250976562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.126
Error (vector) diversity:			 0.138
Behavioral diversity:				 0.139
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 22522617
--- Timings ---
Current time: 1529615650978 milliseconds
Total Time:          62.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.2 seconds, 43.5%
Fitness Testing:     28.1 seconds, 44.9%
Report:               7.1 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 44139.174499999994
Test mean error for best: 22.06959
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 130.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 74.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 72.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -63.7049616086
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -25.5084171151
Correct output: -138.5780328906 | Program output: -127.1560657812
Correct output: 162.135867877  | Program output: 136.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 116.8604541471
Correct output: -98.3471459602 | Program output: -26.6942919205
Correct output: -66.6917750495 | Program output: -73.3835500991
Correct output: -104.5908741149 | Program output: -197.1817482297
Correct output: 47.2673084834  | Program output: 12.5346169668 
Correct output: 114.3563176983 | Program output: 110.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -117.4331648606
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_div} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec tag_integer_551 integer_mult integer_pop in1 integer_yank float_dec tag_integer_551 integer_mult integer_div integer_pop float_add integer_add float_swap integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [36.9397 10 27.6075 11 27.4967 10 18.5423 11 66.9371 12 15.8236 11 41.265 11 8.8525 11 57.8978 11 56.2458 10 11.422 11 25.8641 9 3.6024 9 17.4302 12 71.6529 10 6.6918 10 92.5909 10 34.7327 12 3.6437 9 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 51.7166 11]
Total: 1012.1582000000001
Mean: 20.243164
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3062.0209613999905
Median total errors in population: 1139.9415
Error averages by case: (180.9784283000002 4.127 95.0493561999989 10.609 95.10215780000023 3.949 94.03025740000055 9.702 179.47097249999982 4.121 88.0048603000015 10.175 125.20215749999957 11.141 95.9287875999999 3.391 126.50975570000176 11.354 134.0044502 3.596 144.89870679999996 4.522 173.86165059999973 4.013 83.97825660000134 8.602 124.91368340000017 3.994 149.0350311 3.579 102.48502190000004 3.609 86.28378199999997 3.001 110.54242260000021 3.874 140.64848560000001 4.724 92.97149620000059 11.874 90.95401510000157 10.205 95.89954760000084 9.938 111.01362420000137 11.351 87.87544339999957 10.11 83.9576108 2.86)
Error minima by case: (7.0 1 19.0403 2 7.0 1 13.4577 1 8.0 1 0.0 0 36.265 8 7.8525 1 12.4565 9 48.2458 1 3.422 2 1.0 1 1.6024 1 10.4302 1 63.6529 1 5.6918 1 0.0 0 11.9882 1 2.6437 2 0.1825 8 9.5831 1 0.8549 2 16.7305 8 6.0 1 0.0 0)
Average genome size in population (length): 52.22
Average program size in population (points): 53.22
Average percent parens in population: 0.019
Minimum age in population: 22.375
Maximum age in population: 27.18174743652344
Average age in population: 25.03591102600098
Median age in population: 25.09735107421875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 49
Genome diversity (% unique Plush genomes):	 0.662
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 49
Syntactic diversity (% unique Push programs):	 0.662
Total error diversity:				 0.14
Error (vector) diversity:			 0.153
Behavioral diversity:				 0.154
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 23828292
--- Timings ---
Current time: 1529615654411 milliseconds
Total Time:          65.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.8 seconds, 43.6%
Fitness Testing:     29.5 seconds, 44.7%
Report:               7.6 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 44094.25799999999
Test mean error for best: 22.04713
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 132.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 76.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 74.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -61.7049616086
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -23.5084171151
Correct output: -138.5780328906 | Program output: -125.1560657812
Correct output: 162.135867877  | Program output: 138.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 118.8604541471
Correct output: -98.3471459602 | Program output: -24.6942919205
Correct output: -66.6917750495 | Program output: -71.3835500991
Correct output: -104.5908741149 | Program output: -195.1817482297
Correct output: 47.2673084834  | Program output: 14.5346169668 
Correct output: 114.3563176983 | Program output: 112.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -115.4331648606
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction float_inc} {:instruction in1} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dec float_inc in1 float_inc in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [34.9397 10 27.6075 11 29.4967 10 18.5423 11 64.9371 12 15.8236 11 41.265 11 6.8525 11 57.8978 11 58.2458 10 13.422 11 23.8641 10 3.6024 9 19.4302 12 73.6529 10 4.6918 10 90.5909 10 32.7327 12 1.6437 9 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 49.7166 10]
Total: 1004.1582000000001
Mean: 20.083164
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3157.4083041999897
Median total errors in population: 1138.9415
Error averages by case: (181.25362350000012 4.588 96.56489029999884 10.586 102.96236300000032 4.415 98.40903280000063 10.041 182.47588000000002 4.693 90.66354140000158 10.592 130.01820929999957 11.143 99.48644579999991 4.214 125.95276270000193 11.263 134.79672200000002 4.259 144.22892110000004 5.161 173.94614010000006 4.487 88.15494350000147 8.815 128.86859690000023 4.608 149.83007550000008 4.256 105.32324540000008 4.256 97.73095839999998 4.045 110.85526030000005 4.4 142.28855580000004 5.13 98.20969160000038 11.755 95.36663470000178 10.574 100.28996720000056 10.072 115.90003930000142 11.315 92.81637579999959 10.408 92.11542779999998 3.824)
Error minima by case: (5.87 1 15.9602 3 6.3464 1 14.5423 1 6.1887 1 0.0 0 0.47 9 4.8525 1 3.748 8 27.7374 1 2.422 2 2.13 1 0.3976 1 8.4302 1 41.9586 1 2.6918 1 0.0 0 0.5465 1 0.6437 2 0.1825 8 7.5831 1 12.0 1 0.13 9 5.6618 1 1.0 1)
Average genome size in population (length): 50.617
Average program size in population (points): 51.617
Average percent parens in population: 0.020
Minimum age in population: 24.50112915039062
Maximum age in population: 28.47401428222656
Average age in population: 26.57532018280029
Median age in population: 26.56468200683594
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 47
Genome diversity (% unique Plush genomes):	 0.655
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.655
Total error diversity:				 0.15
Error (vector) diversity:			 0.161
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 25093942
--- Timings ---
Current time: 1529615657712 milliseconds
Total Time:          69.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.2 seconds, 43.7%
Fitness Testing:     30.8 seconds, 44.6%
Report:               8.0 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 44268.68339999998
Test mean error for best: 22.13434
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 133.1206743085
Correct output: -24.607460431  | Program output: 4.0           
Correct output: 47.4967454102  | Program output: 77.9934908205 
Correct output: 21.5422970991  | Program output: 4.0           
Correct output: 139.0628943426 | Program output: 75.1257886852 
Correct output: 18.8235614089  | Program output: 4.0           
Correct output: 40.2650090461  | Program output: 0.0           
Correct output: -54.8524808043 | Program output: -60.7049616086
Correct output: 56.8977931901  | Program output: 0.0           
Correct output: -81.7542085575 | Program output: -22.5084171151
Correct output: -138.5780328906 | Program output: -124.1560657812
Correct output: 162.135867877  | Program output: 139.2717357539
Correct output: 6.602354913    | Program output: 4.0           
Correct output: 99.4302270736  | Program output: 119.8604541471
Correct output: -98.3471459602 | Program output: -23.6942919205
Correct output: -66.6917750495 | Program output: -70.3835500991
Correct output: -104.5908741149 | Program output: -194.1817482297
Correct output: 47.2673084834  | Program output: 15.5346169668 
Correct output: 114.3563176983 | Program output: 113.7126353966
Correct output: 0.8175119448   | Program output: 0.0           
Correct output: 14.5831091655  | Program output: 4.0           
Correct output: 24.8548523011  | Program output: 4.0           
Correct output: 20.7305356492  | Program output: 0.0           
Correct output: -14.2169449076 | Program output: 0.0           
Correct output: -65.7165824303 | Program output: -114.4331648606
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items float_inc float_inc integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [33.9397 10 28.6075 10 30.4967 9 17.5423 11 63.9371 12 14.8236 11 40.265 10 5.8525 11 56.8978 11 59.2458 10 14.422 11 22.8641 10 2.6024 9 20.4302 11 74.6529 10 3.6918 10 89.5909 9 31.7327 12 0.6437 9 0.8175 10 10.5831 10 20.8549 10 20.7305 10 14.2169 12 48.7166 11]
Total: 987.1582000000001
Mean: 19.743164
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3555.8370253999947
Median total errors in population: 1134.9415
Error averages by case: (185.70073779999944 6.882 111.32853479999886 10.814 123.89488430000098 6.643 113.02346920000065 10.356 191.5488953000005 7.332 106.89809150000185 10.707 145.78057950000095 11.193 112.42530009999925 6.754 140.13571740000205 11.305 149.25829640000046 6.468 145.68768320000015 7.308 177.9908254000008 6.742 103.41937080000184 9.012 142.09944210000074 7.261 164.13116099999945 6.468 116.33693670000015 6.448 135.88892409999966 6.668 123.4543101999994 7.046 148.69907169999965 7.104 115.95021980000091 11.623 110.70287170000198 10.69 114.69623460000132 10.449 133.18834440000157 11.381 110.31478869999961 10.403 119.63233469999992 6.593)
Error minima by case: (33.7811 1 10.2149 3 4.0 1 4.461 2 6.1887 1 0.0 0 5.47 7 5.7018 1 4.3542 8 10.7542 1 1.422 2 22.7056 2 1.6024 1 7.4302 1 11.3471 1 1.7371 1 0.0 0 2.5465 1 0.4852 2 0.1825 6 9.5831 1 1.1484 2 5.2728 8 3.0 1 1.0 1)
Average genome size in population (length): 53.212
Average program size in population (points): 54.212
Average percent parens in population: 0.019
Minimum age in population: 25.6390380859375
Maximum age in population: 29.86553955078125
Average age in population: 28.09110506820679
Median age in population: 28.13202667236328
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.666
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.666
Total error diversity:				 0.207
Error (vector) diversity:			 0.226
Behavioral diversity:				 0.226
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 26424792
--- Timings ---
Current time: 1529615661016 milliseconds
Total Time:          72.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.8 seconds, 43.7%
Fitness Testing:     32.3 seconds, 44.4%
Report:               8.5 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 44964.55549999999
Test mean error for best: 22.48228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 129.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 73.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 71.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -34.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -15.7542085575
Correct output: -138.5780328906 | Program output: -66.5780328906
Correct output: 162.135867877  | Program output: 135.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 115.8604541471
Correct output: -98.3471459602 | Program output: -16.3471459602
Correct output: -66.6917750495 | Program output: -39.6917750495
Correct output: -104.5908741149 | Program output: -101.5908741149
Correct output: 47.2673084834  | Program output: 11.5346169668 
Correct output: 114.3563176983 | Program output: 109.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -61.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [37.9397 10 26.6075 10 26.4967 10 19.5423 10 67.9371 12 16.8236 11 42.265 11 20.0 1 58.8978 11 66.0 2 72.0 3 26.8641 10 4.6024 9 16.4302 12 82.0 2 27.0 2 3.0 1 35.7327 12 4.6437 10 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 4.0 1]
Total: 936.9857000000001
Mean: 18.739714
Genome size: 78
Size: 79
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3291.745600299991
Median total errors in population: 1014.1582000000001
Error averages by case: (148.69067049999978 9.628 105.73557629999881 10.675 120.42085590000183 9.408 104.3362809000007 10.436 165.22870870000082 10.615 98.806045900002 10.939 138.06782930000037 11.125 99.23330389999839 10.207 130.71020790000193 11.136 137.98167550000124 9.497 114.03164750000141 10.386 139.9491093000019 9.434 94.34943030000191 9.184 122.73654530000131 10.785 152.46418599999888 9.473 99.42383230000031 9.491 163.09361060000114 9.639 109.87654419999832 10.754 115.99825820000034 9.172 108.84937310000082 11.709 101.94319260000209 10.9 106.0549196000016 10.491 126.09612790000126 11.306 100.55958609999962 10.846 129.80208249999978 10.07)
Error minima by case: (30.9397 2 17.2149 3 5.109 1 13.4996 2 4.1887 1 1.0 1 0.47 6 3.8525 1 9.4565 2 27.7374 1 2.422 2 19.0689 1 0.6024 1 8.4302 1 41.9586 1 1.6918 1 0.0 0 3.4535 1 0.3563 2 0.1722 7 3.4857 1 11.0 1 9.8181 7 0.3971 1 0.0 0)
Average genome size in population (length): 56.122
Average program size in population (points): 57.122
Average percent parens in population: 0.018
Minimum age in population: 27.02024841308594
Maximum age in population: 31.45390129089355
Average age in population: 29.44262759780884
Median age in population: 29.48648262023926
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 86
Genome diversity (% unique Plush genomes):	 0.67
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 86
Syntactic diversity (% unique Push programs):	 0.67
Total error diversity:				 0.199
Error (vector) diversity:			 0.217
Behavioral diversity:				 0.217
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 27828367
--- Timings ---
Current time: 1529615664643 milliseconds
Total Time:          76.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        33.3 seconds, 43.8%
Fitness Testing:     33.8 seconds, 44.5%
Report:               8.8 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 44964.55549999999
Test mean error for best: 22.48228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 129.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 73.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 71.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -34.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -15.7542085575
Correct output: -138.5780328906 | Program output: -66.5780328906
Correct output: 162.135867877  | Program output: 135.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 115.8604541471
Correct output: -98.3471459602 | Program output: -16.3471459602
Correct output: -66.6917750495 | Program output: -39.6917750495
Correct output: -104.5908741149 | Program output: -101.5908741149
Correct output: 47.2673084834  | Program output: 11.5346169668 
Correct output: 114.3563176983 | Program output: 109.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -61.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [37.9397 10 26.6075 10 26.4967 10 19.5423 10 67.9371 12 16.8236 11 42.265 11 20.0 1 58.8978 11 66.0 2 72.0 3 26.8641 10 4.6024 9 16.4302 12 82.0 2 27.0 2 3.0 1 35.7327 12 4.6437 10 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 4.0 1]
Total: 936.9857000000001
Mean: 18.739714
Genome size: 78
Size: 79
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3051.8777990999897
Median total errors in population: 1012.1582000000001
Error averages by case: (138.63607840000103 10.289 93.20267799999883 10.839 117.41778810000203 10.034 90.90874200000066 10.799 158.09063769999972 11.604 85.38003610000193 11.067 134.66401050000005 11.147 83.03144739999978 10.921 123.31755210000183 11.147 125.80502530000096 10.124 96.7581970000008 11.077 129.39863610000188 10.091 80.91801310000194 9.301 116.61253060000149 11.61 140.43513970000012 10.144 82.58755790000038 10.124 154.81702969999955 10.225 101.1956523999986 11.636 105.95582470000032 9.595 105.4273523000008 11.473 88.69501840000216 11.041 92.54953570000067 10.758 122.47639250000141 11.299 97.79821629999955 10.692 118.1587070999998 10.603)
Error minima by case: (30.9397 1 8.9627 3 7.0 1 3.7376 1 4.1887 1 1.0189 2 0.47 9 1.8525 1 2.3542 8 16.3288 1 4.422 2 19.8641 2 0.3976 1 0.3499 2 9.8089 1 0.3082 1 1.0 1 9.1981 1 0.3563 2 0.1825 8 3.2216 2 7.0501 1 2.9258 5 6.0 1 0.2912 1)
Average genome size in population (length): 54.845
Average program size in population (points): 55.845
Average percent parens in population: 0.018
Minimum age in population: 28.56369781494141
Maximum age in population: 33.03321838378906
Average age in population: 30.98887889766693
Median age in population: 31.0431079864502
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.67
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.67
Total error diversity:				 0.178
Error (vector) diversity:			 0.19
Behavioral diversity:				 0.191
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 29200492
--- Timings ---
Current time: 1529615668175 milliseconds
Total Time:          79.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        34.8 seconds, 43.7%
Fitness Testing:     35.3 seconds, 44.3%
Report:               9.5 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 44964.55549999999
Test mean error for best: 22.48228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 129.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 73.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 71.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -34.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -15.7542085575
Correct output: -138.5780328906 | Program output: -66.5780328906
Correct output: 162.135867877  | Program output: 135.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 115.8604541471
Correct output: -98.3471459602 | Program output: -16.3471459602
Correct output: -66.6917750495 | Program output: -39.6917750495
Correct output: -104.5908741149 | Program output: -101.5908741149
Correct output: 47.2673084834  | Program output: 11.5346169668 
Correct output: 114.3563176983 | Program output: 109.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -61.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [37.9397 10 26.6075 10 26.4967 10 19.5423 10 67.9371 12 16.8236 11 42.265 11 20.0 1 58.8978 11 66.0 2 72.0 3 26.8641 10 4.6024 9 16.4302 12 82.0 2 27.0 2 3.0 1 35.7327 12 4.6437 10 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 4.0 1]
Total: 936.9857000000001
Mean: 18.739714
Genome size: 78
Size: 79
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2887.413798099988
Median total errors in population: 1004.1582000000001
Error averages by case: (127.5220372000013 10.287 90.94938739999897 10.915 111.19583840000185 9.939 87.76835350000059 10.96 148.42340519999976 11.843 82.40541480000162 11.099 126.55717339999963 11.083 76.21891479999952 10.804 118.0717816000017 11.164 120.868925800001 10.011 89.99836070000066 11.021 118.20330830000188 10.206 77.24616360000147 9.313 108.72555360000139 11.6 135.62901409999986 10.078 75.56123680000032 9.974 149.09604310000014 9.987 95.36415509999871 11.725 95.57169660000024 9.512 95.82054650000045 11.292 84.92344890000169 11.032 89.6434421000007 10.842 113.67603650000135 11.252 88.6624941999996 10.673 112.23306589999979 10.466)
Error minima by case: (27.4865 1 13.8945 7 7.0 1 6.6624 2 2.511 1 3.9437 2 21.1611 9 1.8525 1 3.748 8 28.7374 1 8.422 2 17.8641 2 0.3976 1 12.5698 1 42.9586 2 0.3082 1 2.0 1 14.1981 1 0.3563 2 0.0442 7 0.2968 1 9.975 1 5.8507 8 3.0068 1 3.0 1)
Average genome size in population (length): 52.874
Average program size in population (points): 53.874
Average percent parens in population: 0.019
Minimum age in population: 30.13177490234375
Maximum age in population: 34.26485252380371
Average age in population: 32.48179820346832
Median age in population: 32.52160477638245
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.175
Error (vector) diversity:			 0.185
Behavioral diversity:				 0.186
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 30523267
--- Timings ---
Current time: 1529615671549 milliseconds
Total Time:          83.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        36.2 seconds, 43.7%
Fitness Testing:     36.7 seconds, 44.2%
Report:               9.9 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 44964.55549999999
Test mean error for best: 22.48228
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 129.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 73.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 71.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -34.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -15.7542085575
Correct output: -138.5780328906 | Program output: -66.5780328906
Correct output: 162.135867877  | Program output: 135.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 115.8604541471
Correct output: -98.3471459602 | Program output: -16.3471459602
Correct output: -66.6917750495 | Program output: -39.6917750495
Correct output: -104.5908741149 | Program output: -101.5908741149
Correct output: 47.2673084834  | Program output: 11.5346169668 
Correct output: 114.3563176983 | Program output: 109.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -61.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [37.9397 10 26.6075 10 26.4967 10 19.5423 10 67.9371 12 16.8236 11 42.265 11 20.0 1 58.8978 11 66.0 2 72.0 3 26.8641 10 4.6024 9 16.4302 12 82.0 2 27.0 2 3.0 1 35.7327 12 4.6437 10 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 4.0 1]
Total: 936.9857000000001
Mean: 18.739714
Genome size: 78
Size: 79
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 2816.028162699987
Median total errors in population: 998.1582000000001
Error averages by case: (125.72943960000137 10.32 85.95644279999877 10.671 107.96018220000217 9.753 85.56390190000072 11.01 145.8559215999997 11.863 79.24398280000196 11.154 120.87513259999957 10.837 76.6493627999999 10.303 111.93227400000168 11.122 118.06338890000086 9.606 94.04226930000071 10.712 116.49960950000172 10.258 74.79707860000183 9.338 106.42264100000159 11.38 133.0775293000005 9.757 76.53711220000035 9.543 145.42961079999975 9.431 91.83915539999879 11.707 93.77683680000018 9.519 89.85555150000015 11.007 82.60580370000207 10.85 87.41394200000039 10.675 107.683991200001 10.966 84.72367049999954 11.128 110.1773316999998 10.406)
Error minima by case: (27.4884 1 21.8957 7 7.0 1 14.5423 9 2.509 1 11.8236 8 0.1024 8 0.8525 1 2.3716 9 27.7374 1 8.422 2 17.8641 2 0.3976 8 15.4302 1 41.9586 1 0.3082 1 0.0 1 6.8999 1 0.3563 2 0.1374 9 7.5831 9 15.5126 8 18.7305 9 4.2169 2 1.0 1)
Average genome size in population (length): 51.52
Average program size in population (points): 52.52
Average percent parens in population: 0.019
Minimum age in population: 31.60883140563965
Maximum age in population: 36.14220023155212
Average age in population: 33.93928804063797
Median age in population: 33.97226560115814
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 127
Genome diversity (% unique Plush genomes):	 0.598
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 127
Syntactic diversity (% unique Push programs):	 0.598
Total error diversity:				 0.171
Error (vector) diversity:			 0.181
Behavioral diversity:				 0.181
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 31811567
--- Timings ---
Current time: 1529615675254 milliseconds
Total Time:          86.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.9 seconds, 43.7%
Fitness Testing:     38.2 seconds, 44.1%
Report:              10.4 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 45702.884399999995
Test mean error for best: 22.85144
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 132.1206743085
Correct output: -24.607460431  | Program output: 4.0           
Correct output: 47.4967454102  | Program output: 76.9934908205 
Correct output: 21.5422970991  | Program output: 4.0           
Correct output: 139.0628943426 | Program output: 74.1257886852 
Correct output: 18.8235614089  | Program output: 4.0           
Correct output: 40.2650090461  | Program output: 0.0           
Correct output: -54.8524808043 | Program output: -31.8524808043
Correct output: 56.8977931901  | Program output: 0.0           
Correct output: -81.7542085575 | Program output: -12.7542085575
Correct output: -138.5780328906 | Program output: -63.5780328906
Correct output: 162.135867877  | Program output: 138.2717357539
Correct output: 6.602354913    | Program output: 4.0           
Correct output: 99.4302270736  | Program output: 118.8604541471
Correct output: -98.3471459602 | Program output: -13.3471459602
Correct output: -66.6917750495 | Program output: -36.6917750495
Correct output: -104.5908741149 | Program output: -98.5908741149
Correct output: 47.2673084834  | Program output: 14.5346169668 
Correct output: 114.3563176983 | Program output: 112.7126353966
Correct output: 0.8175119448   | Program output: 0.0           
Correct output: 14.5831091655  | Program output: 4.0           
Correct output: 24.8548523011  | Program output: 4.0           
Correct output: 20.7305356492  | Program output: 0.0           
Correct output: -14.2169449076 | Program output: 0.0           
Correct output: -65.7165824303 | Program output: -58.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_inc} {:instruction integer_yank} {:instruction float_dec} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items float_inc float_inc integer_yank float_dec float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [34.9397 10 28.6075 10 29.4967 10 17.5423 11 64.9371 12 14.8236 11 40.265 10 23.0 2 56.8978 11 69.0 2 75.0 2 23.8641 10 2.6024 9 19.4302 12 85.0 2 30.0 1 6.0 3 32.7327 12 1.6437 9 0.8175 10 10.5831 10 20.8549 10 20.7305 10 14.2169 12 7.0 2]
Total: 932.9857000000001
Mean: 18.659714
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3722.755752699991
Median total errors in population: 987.1582000000001
Error averages by case: (161.87605359999932 10.447 122.23089449999887 10.613 146.58022460000083 9.914 122.00029500000072 10.982 181.48785290000117 11.945 115.2063297000022 11.283 162.43950060000174 10.904 112.86154919999882 8.723 147.55426300000227 11.279 153.96789400000105 8.305 136.94494150000082 9.343 153.02634650000238 10.322 113.58885810000223 9.511 144.35138610000158 11.511 168.48657409999868 8.445 114.23632440000027 8.214 160.62891490000044 8.25 127.25335739999777 11.725 131.67407470000012 9.745 133.53713430000096 11.197 121.29774090000231 10.9 123.16151440000154 10.563 150.68704910000216 11.064 127.93208249999955 11.296 134.3925967000002 8.871)
Error minima by case: (27.9397 2 6.9426 3 7.0 1 3.9036 2 5.1887 1 1.1848 2 36.759 9 0.8525 1 12.5761 9 8.4175 1 3.422 2 16.8641 2 0.3976 1 14.4302 1 1.2334 1 0.3082 1 0.0 0 11.1981 1 0.3563 2 0.0161 6 3.0556 2 7.2161 2 18.2438 8 1.4218 1 1.0 1)
Average genome size in population (length): 55.567
Average program size in population (points): 56.567
Average percent parens in population: 0.018
Minimum age in population: 33.11272811889648
Maximum age in population: 37.28059124946594
Average age in population: 35.49270461285114
Median age in population: 35.54141449928284
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 95
Genome diversity (% unique Plush genomes):	 0.653
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 95
Syntactic diversity (% unique Push programs):	 0.653
Total error diversity:				 0.203
Error (vector) diversity:			 0.214
Behavioral diversity:				 0.214
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 33201142
--- Timings ---
Current time: 1529615678996 milliseconds
Total Time:          90.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        39.4 seconds, 43.5%
Fitness Testing:     39.9 seconds, 44.1%
Report:              11.1 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 44408.95719999999
Test mean error for best: 22.20448
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 126.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 70.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 68.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -37.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -18.7542085575
Correct output: -138.5780328906 | Program output: -69.5780328906
Correct output: 162.135867877  | Program output: 132.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 112.8604541471
Correct output: -98.3471459602 | Program output: -19.3471459602
Correct output: -66.6917750495 | Program output: -42.6917750495
Correct output: -104.5908741149 | Program output: -104.5908741149
Correct output: 47.2673084834  | Program output: 8.5346169668  
Correct output: 114.3563176983 | Program output: 106.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -64.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction integer_add} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec integer_add integer_mod in2 float_dec float_dec float_shove float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [40.9397 10 26.6075 10 23.4967 10 19.5423 10 70.9371 12 16.8236 11 42.265 11 17.0 2 58.8978 11 63.0 2 69.0 3 29.8641 9 4.6024 9 13.4302 12 79.0 2 24.0 2 0.0 0 38.7327 12 7.6437 10 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 1.0 1]
Total: 923.9857000000001
Mean: 18.479713
Genome size: 88
Size: 89
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3482.328384900001
Median total errors in population: 945.6983000000001
Error averages by case: (152.5363551999998 10.42 117.21692199999889 10.572 133.88893600000182 10.106 113.51354250000067 10.65 172.03790060000043 11.902 107.81798100000198 11.165 149.11525250000122 11.045 110.86661499999957 5.14 148.96140500000251 11.318 152.7053990000002 5.268 150.57248180000008 6.242 143.62695510000202 10.242 104.21392170000199 9.388 132.10135830000152 11.686 167.23328519999964 5.37 115.4318871000001 5.18 121.55865429999974 5.204 127.06191339999786 11.703 121.7100413000002 9.95 118.18944750000105 11.535 111.80521230000207 11.022 114.99484800000164 10.498 134.7688581000018 11.201 117.0428668999996 10.634 110.76234509999996 5.153)
Error minima by case: (28.9397 1 2.1497 9 8.0 1 4.7289 2 8.1887 2 1.0 1 0.7879 7 0.8525 1 18.1022 8 44.4916 1 4.422 2 17.8641 2 0.3976 1 12.4302 1 59.3057 1 0.3082 1 0.0 0 10.1981 1 0.3563 2 0.1575 7 3.5831 1 2.4274 2 5.5103 7 6.0 1 0.0891 1)
Average genome size in population (length): 66.348
Average program size in population (points): 67.348
Average percent parens in population: 0.016
Minimum age in population: 34.83673882484436
Maximum age in population: 38.71467453241348
Average age in population: 36.89637468290329
Median age in population: 36.95092937350273
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.212
Error (vector) diversity:			 0.225
Behavioral diversity:				 0.226
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 34860467
--- Timings ---
Current time: 1529615682744 milliseconds
Total Time:          94.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.9 seconds, 43.4%
Fitness Testing:     41.7 seconds, 44.2%
Report:              11.6 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 44567.78079999999
Test mean error for best: 22.28389
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 127.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 71.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 69.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 133.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 113.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 9.5346169668  
Correct output: 114.3563176983 | Program output: 107.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction integer_add} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec integer_add integer_mod in2 float_dec float_dec float_shove float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [39.9397 9 27.6075 11 24.4967 10 18.5423 11 69.9371 11 15.8236 11 41.265 11 18.0 2 57.8978 11 64.0 2 70.0 2 28.8641 10 3.6024 9 14.4302 12 80.0 1 25.0 2 1.0 1 37.7327 12 6.6437 10 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 2.0 1]
Total: 919.9857000000001
Mean: 18.399714
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2963.8487186999982
Median total errors in population: 936.9857000000001
Error averages by case: (136.16183890000096 10.11 96.59535079999888 10.556 110.46901070000166 9.895 92.78948200000062 10.537 152.7713280999999 11.479 87.42464630000127 11.082 126.14438339999954 11.02 95.69058899999987 3.629 126.53569300000166 11.274 135.6797374 3.93 143.86623810000003 4.785 127.42435340000131 9.894 82.69254670000126 9.3 111.4270147000012 11.396 150.54445560000005 3.94 102.1073009 3.895 90.46781239999999 3.599 104.87404059999862 11.359 103.91141910000032 9.839 93.48537220000075 11.517 90.44403260000144 10.982 94.5025991000007 10.464 111.34420130000117 11.196 91.12759759999959 10.379 85.92867479999998 3.382)
Error minima by case: (29.1207 2 3.3925 3 7.0 1 4.7289 2 3.1887 1 1.0 1 1.3213 8 4.8525 1 2.3542 8 7.9116 1 1.9116 2 19.8641 2 0.6024 1 12.4302 2 8.0884 1 2.6918 1 0.0 0 9.8138 1 0.3563 2 0.0921 6 4.5831 2 2.4274 1 10.6167 9 1.5661 1 1.0 1)
Average genome size in population (length): 72.794
Average program size in population (points): 73.794
Average percent parens in population: 0.014
Minimum age in population: 36.18981963396072
Maximum age in population: 40.26801836490631
Average age in population: 38.36997709229589
Median age in population: 38.40461072325706
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.225
Error (vector) diversity:			 0.253
Behavioral diversity:				 0.253
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 36680592
--- Timings ---
Current time: 1529615686621 milliseconds
Total Time:          98.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        42.4 seconds, 43.2%
Fitness Testing:     43.5 seconds, 44.3%
Report:              12.1 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 44567.78079999999
Test mean error for best: 22.28389
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 127.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 71.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 69.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 133.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 113.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 9.5346169668  
Correct output: 114.3563176983 | Program output: 107.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [39.9397 9 27.6075 11 24.4967 10 18.5423 11 69.9371 11 15.8236 11 41.265 11 18.0 2 57.8978 11 64.0 2 70.0 2 28.8641 10 3.6024 9 14.4302 12 80.0 1 25.0 2 1.0 1 37.7327 12 6.6437 10 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 2.0 1]
Total: 919.9857000000001
Mean: 18.399714
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3142.7275327999982
Median total errors in population: 933.9857000000001
Error averages by case: (142.38444130000045 10.196 102.51414099999894 10.681 121.78424650000197 10.014 100.54021020000064 10.75 161.04508270000053 11.583 94.85895450000174 11.077 135.54751469999997 10.965 101.44373599999984 3.944 131.18421690000216 11.273 139.30564239999993 3.992 149.453542 4.715 133.70823670000198 9.967 90.87909830000177 9.319 120.06509430000146 11.571 154.16592939999998 3.945 107.84837620000002 3.89 95.96483789999992 3.849 111.1132610999982 11.511 111.22758210000026 9.815 103.3177380000009 11.269 98.65273810000205 10.893 102.04173290000111 10.575 121.03638220000141 11.122 100.1718006999996 10.381 91.63299669999999 3.543)
Error minima by case: (28.1207 1 16.2149 2 7.0 1 4.7289 1 1.1887 1 0.0 1 0.53 7 3.8525 1 10.4565 9 9.6115 1 1.422 2 18.8641 1 0.6024 1 8.0645 2 6.9814 1 1.6918 1 0.0 0 4.322 1 0.3563 2 0.1455 7 1.738 1 2.4274 1 3.4094 7 6.0 1 0.0 0)
Average genome size in population (length): 71.086
Average program size in population (points): 72.086
Average percent parens in population: 0.014
Minimum age in population: 37.42298263311386
Maximum age in population: 41.73754996061325
Average age in population: 39.83850786037743
Median age in population: 39.84447556734085
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.223
Error (vector) diversity:			 0.254
Behavioral diversity:				 0.255
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 38458217
--- Timings ---
Current time: 1529615690612 milliseconds
Total Time:         102.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.9 seconds, 43.0%
Fitness Testing:     45.5 seconds, 44.6%
Report:              12.6 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 44623.94919999999
Test mean error for best: 22.31197
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 130.1206743085
Correct output: -24.607460431  | Program output: 2.0           
Correct output: 47.4967454102  | Program output: 74.9934908205 
Correct output: 21.5422970991  | Program output: 2.0           
Correct output: 139.0628943426 | Program output: 72.1257886852 
Correct output: 18.8235614089  | Program output: 2.0           
Correct output: 40.2650090461  | Program output: -2.0          
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -2.0          
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 136.2717357539
Correct output: 6.602354913    | Program output: 2.0           
Correct output: 99.4302270736  | Program output: 116.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 12.5346169668 
Correct output: 114.3563176983 | Program output: 110.7126353966
Correct output: 0.8175119448   | Program output: -2.0          
Correct output: 14.5831091655  | Program output: 2.0           
Correct output: 24.8548523011  | Program output: 2.0           
Correct output: 20.7305356492  | Program output: -2.0          
Correct output: -14.2169449076 | Program output: -2.0          
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_min} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_add} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_dup tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc in1 float_max float_dec tag_integer_578 integer_min integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_add integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_dec integer_pop float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_swap integer_swap float_div tagged_236 print_float)
Errors: [36.9397 10 26.6075 10 27.4967 10 19.5423 10 66.9371 12 16.8236 11 42.265 11 18.0 2 58.8978 11 64.0 2 70.0 2 25.8641 9 4.6024 9 17.4302 12 80.0 1 25.0 2 1.0 1 34.7327 12 3.6437 9 2.8175 12 12.5831 11 22.8549 10 22.7305 11 12.2169 11 2.0 1]
Total: 916.9857000000001
Mean: 18.339714
Genome size: 89
Size: 90
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3667.1850305000003
Median total errors in population: 932.9857000000001
Error averages by case: (164.1579763999988 10.258 122.50871299999892 10.729 138.974276600001 10.168 122.80568540000071 10.737 181.2322228000015 11.607 116.26423030000208 11.143 155.47278710000188 11.109 122.48350189999971 4.229 151.18139470000267 11.377 158.39369099999996 4.298 169.75542509999997 4.934 155.6447322000024 10.151 114.5141604000021 9.432 140.0033949000015 11.687 172.93290240000002 4.111 128.75947400000004 4.243 118.06772649999989 3.945 130.33777829999752 11.638 133.06457550000005 10.163 125.33883150000167 11.419 122.28345100000224 10.986 123.91322430000231 10.624 142.66306540000227 11.296 118.9238978999996 10.204 113.28191190000003 3.738)
Error minima by case: (18.341 1 10.6075 3 3.6674 1 0.5579 1 0.1887 2 1.0 1 0.53 8 2.8525 1 9.4565 8 11.6648 1 1.578 2 17.8641 1 0.3976 1 8.5698 2 28.2577 1 0.6918 1 0.0 0 4.1476 1 0.3563 2 0.1464 7 1.5831 2 10.0 1 18.5455 8 0.2169 1 0.0 0)
Average genome size in population (length): 75.849
Average program size in population (points): 76.849
Average percent parens in population: 0.013
Minimum age in population: 38.95696696639061
Maximum age in population: 43.46968681365252
Average age in population: 41.33459888903797
Median age in population: 41.37691712379456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.78
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.78
Total error diversity:				 0.249
Error (vector) diversity:			 0.294
Behavioral diversity:				 0.294
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 40355817
--- Timings ---
Current time: 1529615694466 milliseconds
Total Time:         105.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        45.3 seconds, 42.8%
Fitness Testing:     47.3 seconds, 44.7%
Report:              13.1 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 44611.07729999999
Test mean error for best: 22.30554
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 131.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 75.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 73.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 137.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 117.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 13.5346169668 
Correct output: 114.3563176983 | Program output: 111.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_mod} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_dup tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 float_max float_dec in2 float_dec float_dec float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank float_shove integer_inc float_dup_items integer_pop integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_mod integer_swap float_div tagged_236 print_float)
Errors: [35.9397 10 27.6075 11 28.4967 10 18.5423 11 65.9371 11 15.8236 11 41.265 11 18.0 2 57.8978 11 64.0 2 70.0 2 24.8641 10 3.6024 9 18.4302 12 80.0 1 25.0 2 1.0 1 33.7327 12 2.6437 9 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 2.0 1]
Total: 907.9857000000001
Mean: 18.159714
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 2961.845693599999
Median total errors in population: 925.9857000000001
Error averages by case: (137.8423815000006 10.078 95.56103379999895 10.678 109.82327740000177 10.072 95.85559070000068 10.648 155.41285369999986 11.429 89.25890890000186 11.12 127.23839909999954 11.058 92.96797299999994 3.953 121.42781870000167 11.315 130.7213095 3.985 141.58415399999996 4.663 129.12268530000176 10.027 86.98233310000185 9.408 110.71194940000142 11.587 145.69601339999997 3.72 99.55796810000002 4.031 88.30773450000002 3.248 101.46597409999886 11.561 105.8410606000003 10.212 95.50073670000036 11.459 94.89446660000202 11.046 97.25002130000061 10.641 113.38292130000123 11.256 91.51316429999963 10.051 83.42096459999998 3.258)
Error minima by case: (12.0531 1 11.3925 3 8.0 2 5.479 1 0.1887 2 2.0 1 5.9469 8 5.8525 1 6.1022 9 10.7542 1 1.578 2 4.0531 1 0.3976 1 3.4302 1 5.8237 1 3.6918 1 0.0 0 9.2673 1 0.3563 2 0.1464 7 2.2228 1 10.0 1 6.0531 8 0.5791 1 0.0 0)
Average genome size in population (length): 81.352
Average program size in population (points): 82.352
Average percent parens in population: 0.012
Minimum age in population: 40.46685841679573
Maximum age in population: 44.91556736826897
Average age in population: 42.85728107066825
Median age in population: 42.89956384897232
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.268
Error (vector) diversity:			 0.317
Behavioral diversity:				 0.317
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 42392292
--- Timings ---
Current time: 1529615698601 milliseconds
Total Time:         110.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.9 seconds, 42.7%
Fitness Testing:     49.3 seconds, 44.8%
Report:              13.7 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 44611.07729999999
Test mean error for best: 22.30554
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 131.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 75.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 73.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 137.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 117.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 13.5346169668 
Correct output: 114.3563176983 | Program output: 111.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_mod} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_dup tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 float_max float_dec in2 float_dec float_dec float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank integer_sub integer_inc float_dup_items integer_pop integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_mod integer_swap float_div tagged_236 print_float)
Errors: [35.9397 10 27.6075 11 28.4967 10 18.5423 11 65.9371 11 15.8236 11 41.265 11 18.0 2 57.8978 11 64.0 2 70.0 2 24.8641 10 3.6024 9 18.4302 12 80.0 1 25.0 2 1.0 1 33.7327 12 2.6437 9 1.8175 11 11.5831 11 21.8549 11 21.7305 11 13.2169 10 2.0 1]
Total: 907.9857000000001
Mean: 18.159714
Genome size: 92
Size: 93
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3553.130647999999
Median total errors in population: 922.9857000000001
Error averages by case: (160.01043029999948 10.09 121.69649749999904 10.832 132.67290550000197 10.097 119.2699356000007 10.857 177.24840600000084 11.423 112.81219680000204 11.177 150.70994060000095 11.102 116.12355969999984 4.1 148.81450210000233 11.353 154.09843139999992 4.13 163.24614350000004 4.751 151.35445950000226 10.071 110.94779810000202 9.41 133.2605253000015 11.597 168.6156797 3.814 122.20190150000005 4.143 110.83328429999992 3.428 130.15241779999775 11.569 128.9036695000003 10.24 119.2658107000012 11.268 118.67897220000216 11.083 120.29764900000177 10.822 136.7350522000019 11.299 117.18691879999962 9.854 106.15856039999998 3.325)
Error minima by case: (8.8396 2 1.3925 1 9.5 1 10.5423 2 1.1887 2 1.0 1 10.0 1 4.8525 1 1.6284 1 10.7542 1 1.422 2 2.2359 1 0.3976 1 7.4302 1 11.3471 1 1.6209 1 0.0 0 6.6326 2 0.3563 2 0.0746 2 3.5831 2 3.715 1 10.0 1 1.5204 1 0.0 0)
Average genome size in population (length): 82.228
Average program size in population (points): 83.228
Average percent parens in population: 0.012
Minimum age in population: 41.46685841679573
Maximum age in population: 46.35090223886073
Average age in population: 44.35513713485748
Median age in population: 44.39832458458841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.828
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.828
Total error diversity:				 0.231
Error (vector) diversity:			 0.285
Behavioral diversity:				 0.285
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 44452917
--- Timings ---
Current time: 1529615702667 milliseconds
Total Time:         114.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        48.4 seconds, 42.4%
Fitness Testing:     51.3 seconds, 45.0%
Report:              14.2 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 43993.72139999998
Test mean error for best: 21.99686
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 122.1206743085
Correct output: -24.607460431  | Program output: 1.214920862   
Correct output: 47.4967454102  | Program output: 66.9934908205 
Correct output: 21.5422970991  | Program output: 7.0           
Correct output: 139.0628943426 | Program output: 64.1257886852 
Correct output: 18.8235614089  | Program output: 7.0           
Correct output: 40.2650090461  | Program output: -1.0          
Correct output: -54.8524808043 | Program output: -39.8524808043
Correct output: 56.8977931901  | Program output: -1.0          
Correct output: -81.7542085575 | Program output: -20.7542085575
Correct output: -138.5780328906 | Program output: -71.5780328906
Correct output: 162.135867877  | Program output: 128.2717357539
Correct output: 6.602354913    | Program output: 7.0           
Correct output: 99.4302270736  | Program output: 108.8604541471
Correct output: -98.3471459602 | Program output: -21.3471459602
Correct output: -66.6917750495 | Program output: -44.6917750495
Correct output: -104.5908741149 | Program output: -106.5908741149
Correct output: 47.2673084834  | Program output: 4.5346169668  
Correct output: 114.3563176983 | Program output: 102.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 7.0           
Correct output: 24.8548523011  | Program output: 7.0           
Correct output: 20.7305356492  | Program output: -1.0          
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -66.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_dec} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction float_dec} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_dec} {:instruction float_mod} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction float_dup_times} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_frominteger} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction print_float})
Best program: (float_inc in1 float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 float_max float_dec tag_integer_578 float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_dec integer_mult integer_pop integer_sub float_dec float_add float_dup_times integer_mod float_dec float_mod float_max float_dec tag_integer_578 integer_pop float_add float_dup_times integer_mult float_mult float_dec float_dup_times float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dec float_shove float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove float_frominteger float_dup_items integer_rot integer_yank float_dec integer_pop integer_pop float_dup_items integer_rot integer_yank float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec print_float)
Errors: [44.9397 10 25.8224 11 19.4967 10 14.5423 11 74.9371 12 11.8236 11 41.265 11 15.0 2 57.8978 11 61.0 2 67.0 3 33.8641 10 0.3976 9 9.4302 12 77.0 2 22.0 2 2.0 1 42.7327 11 11.6437 10 1.8175 11 7.5831 11 17.8549 11 21.7305 11 13.2169 10 1.0 1]
Total: 901.9958
Mean: 18.039915
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3701.5359124999995
Median total errors in population: 919.9857000000001
Error averages by case: (168.0575179999989 10.21 124.81356989999895 10.992 141.42236230000094 10.142 123.13204850000074 10.984 185.58540490000152 11.585 116.83114700000208 11.171 156.34357690000166 11.129 123.4748174999998 4.159 150.91959040000225 11.337 160.98824539999995 4.144 171.73381639999997 4.844 158.60925680000213 10.067 115.61730570000203 9.417 140.11859280000152 11.664 175.3402264 3.887 129.88330530000005 4.163 116.93190189999991 3.396 134.03109719999776 11.569 136.24211429999957 10.241 124.43210380000103 11.193 123.26912860000219 11.128 124.34169490000177 10.935 141.8252968000017 11.303 121.56618729999961 9.828 113.24360349999998 3.294)
Error minima by case: (26.1207 1 4.7529 3 6.9614 1 5.6513 2 0.1887 1 0.0 0 0.53 8 2.3944 1 0.6458 2 10.7542 1 1.422 2 19.8641 1 0.3976 1 8.4302 1 11.3471 1 5.6918 1 0.0 0 9.2673 1 0.3563 2 0.1584 7 0.8573 2 12.0 1 10.026 7 5.2169 1 0.0 0)
Average genome size in population (length): 84.376
Average program size in population (points): 85.376
Average percent parens in population: 0.012
Minimum age in population: 43.3263474740088
Maximum age in population: 47.63953500986099
Average age in population: 45.86844876848813
Median age in population: 45.91843104502186
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.844
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.844
Total error diversity:				 0.236
Error (vector) diversity:			 0.289
Behavioral diversity:				 0.29
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 46569392
--- Timings ---
Current time: 1529615707146 milliseconds
Total Time:         118.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.0 seconds, 42.2%
Fitness Testing:     53.6 seconds, 45.2%
Report:              14.8 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 44480.00960000001
Test mean error for best: 22.24000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 134.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 78.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 76.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: 1.0418979864  
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: 1.1638751408  
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 140.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 120.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 16.5346169668 
Correct output: 114.3563176983 | Program output: 114.7126353966
Correct output: 0.8175119448   | Program output: 1.0246358549  
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: 1.0252303963  
Correct output: -14.2169449076 | Program output: 1.0734836333  
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_dup tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_dup_items integer_rot integer_yank float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_stackdepth integer_swap float_div tagged_236 print_float)
Errors: [32.9397 10 27.6075 11 31.4967 10 18.5423 11 62.9371 12 15.8236 11 39.2231 11 18.0 2 55.7339 10 64.0 2 70.0 2 21.8641 10 3.6024 9 21.4302 12 80.0 1 25.0 2 1.0 1 30.7327 12 0.3563 8 0.2071 10 11.5831 11 21.8549 11 19.7053 10 15.2904 12 2.0 1]
Total: 892.9304
Mean: 17.858608
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3280.8967745000004
Median total errors in population: 917.9857000000001
Error averages by case: (152.8098823999996 10.183 109.33243309999895 10.953 122.991979000002 10.033 106.72690200000075 10.954 169.30585280000085 11.563 100.51996110000206 11.162 140.31679530000048 11.141 104.00501589999983 3.811 138.1760715000024 11.354 143.02472749999993 3.774 152.16042359999986 4.556 144.1250461000023 9.963 98.08900180000201 9.39 124.25512300000138 11.541 157.6950053 3.63 110.50492100000005 3.793 97.67378129999996 2.992 119.57358359999779 11.49 120.79557560000033 10.13 108.6259123000013 11.194 105.84201640000218 11.071 107.94569850000184 10.905 126.24398530000197 11.301 107.1713457999996 9.659 93.61773429999998 2.825)
Error minima by case: (24.1207 1 11.1491 3 3.3723 1 3.2289 1 1.1887 2 1.0 1 1.0072 8 0.8525 1 0.252 6 1.6239 1 0.578 2 15.8641 1 0.3976 1 6.4302 1 10.2984 1 1.3082 1 0.0 0 6.0989 2 0.3563 2 0.1231 7 1.5831 1 3.9274 2 15.7305 8 7.0 1 0.0 0)
Average genome size in population (length): 87.019
Average program size in population (points): 88.019
Average percent parens in population: 0.012
Minimum age in population: 44.84099500440061
Maximum age in population: 49.15784082049504
Average age in population: 47.28163330909749
Median age in population: 47.32233952637762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.866
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.866
Total error diversity:				 0.248
Error (vector) diversity:			 0.32
Behavioral diversity:				 0.32
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 48752992
--- Timings ---
Current time: 1529615711259 milliseconds
Total Time:         122.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.4 seconds, 41.9%
Fitness Testing:     55.7 seconds, 45.4%
Report:              15.5 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 44480.00960000001
Test mean error for best: 22.24000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 134.1206743085
Correct output: -24.607460431  | Program output: 3.0           
Correct output: 47.4967454102  | Program output: 78.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 76.1257886852 
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: 1.0418979864  
Correct output: -54.8524808043 | Program output: -36.8524808043
Correct output: 56.8977931901  | Program output: 1.1638751408  
Correct output: -81.7542085575 | Program output: -17.7542085575
Correct output: -138.5780328906 | Program output: -68.5780328906
Correct output: 162.135867877  | Program output: 140.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 120.8604541471
Correct output: -98.3471459602 | Program output: -18.3471459602
Correct output: -66.6917750495 | Program output: -41.6917750495
Correct output: -104.5908741149 | Program output: -103.5908741149
Correct output: 47.2673084834  | Program output: 16.5346169668 
Correct output: 114.3563176983 | Program output: 114.7126353966
Correct output: 0.8175119448   | Program output: 1.0246358549  
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: 1.0252303963  
Correct output: -14.2169449076 | Program output: 1.0734836333  
Correct output: -65.7165824303 | Program output: -63.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_shove} {:instruction integer_div} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_div} {:instruction float_div} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_dup tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_dec tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_dup_times integer_mod float_swap float_mod integer_mult float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_dup_items integer_rot integer_yank float_shove integer_div float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_stackdepth integer_swap float_div float_div print_float)
Errors: [32.9397 10 27.6075 11 31.4967 10 18.5423 11 62.9371 12 15.8236 11 39.2231 11 18.0 2 55.7339 10 64.0 2 70.0 2 21.8641 10 3.6024 9 21.4302 12 80.0 1 25.0 2 1.0 1 30.7327 12 0.3563 8 0.2071 10 11.5831 11 21.8549 11 19.7053 10 15.2904 12 2.0 1]
Total: 892.9304
Mean: 17.858608
Genome size: 90
Size: 91
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3191.251364600002
Median total errors in population: 914.9857000000001
Error averages by case: (153.03367140000006 10.195 100.88520739999903 10.904 123.90008160000184 10.059 99.45662840000065 10.974 169.84106620000054 11.532 93.22862710000175 11.126 140.9909006000002 11.049 99.03916629999985 4.055 132.14828070000183 11.3 135.9720222999999 3.999 148.29327820000006 4.771 144.59118900000166 10.004 90.46204690000164 9.379 125.49102830000132 11.544 150.91028660000012 3.847 105.69945040000005 4.066 94.59409599999995 3.315 111.84088919999857 11.494 121.2699355000003 10.132 108.83148390000078 11.069 98.32004830000197 10.99 100.73842240000117 10.875 126.50503740000137 11.203 104.94783269999962 9.898 89.37068779999998 3.11)
Error minima by case: (21.1207 1 0.3925 2 8.0 2 12.4338 1 1.1887 2 1.0 1 7.8855 7 6.8525 1 3.6284 2 7.7146 1 0.422 2 17.8641 1 0.3976 1 5.4302 1 23.7146 1 4.6918 1 0.0 0 5.6635 1 0.3563 2 0.0722 7 0.2665 2 1.5695 2 4.1145 7 0.2169 1 0.0 0)
Average genome size in population (length): 86.418
Average program size in population (points): 87.418
Average percent parens in population: 0.012
Minimum age in population: 45.84099500440061
Maximum age in population: 50.6704117055051
Average age in population: 48.73344264637074
Median age in population: 48.75358693127055
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.83
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.83
Total error diversity:				 0.31
Error (vector) diversity:			 0.381
Behavioral diversity:				 0.382
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 50923129
--- Timings ---
Current time: 1529615715414 milliseconds
Total Time:         126.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.8 seconds, 41.6%
Fitness Testing:     57.9 seconds, 45.6%
Report:              16.0 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 44327.59339999998
Test mean error for best: 22.16380
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 127.1206743085
Correct output: -24.607460431  | Program output: 8.0           
Correct output: 47.4967454102  | Program output: 71.9934908205 
Correct output: 21.5422970991  | Program output: 8.0           
Correct output: 139.0628943426 | Program output: 69.1257886852 
Correct output: 18.8235614089  | Program output: 8.0           
Correct output: 40.2650090461  | Program output: 0.0           
Correct output: -54.8524808043 | Program output: -38.8524808043
Correct output: 56.8977931901  | Program output: 0.0           
Correct output: -81.7542085575 | Program output: -19.7542085575
Correct output: -138.5780328906 | Program output: -70.5780328906
Correct output: 162.135867877  | Program output: 133.2717357539
Correct output: 6.602354913    | Program output: 8.0           
Correct output: 99.4302270736  | Program output: 113.8604541471
Correct output: -98.3471459602 | Program output: -20.3471459602
Correct output: -66.6917750495 | Program output: -43.6917750495
Correct output: -104.5908741149 | Program output: -105.5908741149
Correct output: 47.2673084834  | Program output: 9.5346169668  
Correct output: 114.3563176983 | Program output: 107.7126353966
Correct output: 0.8175119448   | Program output: 0.0           
Correct output: 14.5831091655  | Program output: 8.0           
Correct output: 24.8548523011  | Program output: 8.0           
Correct output: 20.7305356492  | Program output: 0.0           
Correct output: -14.2169449076 | Program output: 0.0           
Correct output: -65.7165824303 | Program output: -65.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_dec} {:instruction float_dec} {:instruction integer_add} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction integer_add} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction float_inc} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_dup tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 float_max float_dec in2 float_dec float_mult float_dec integer_sub integer_pop float_add float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_dec float_dec integer_add -37 float_mult float_dec integer_add integer_mod in2 float_dec float_dec float_shove float_dec float_yankdup integer_mod in2 float_dec integer_dup_times float_shove integer_add float_dup_items integer_rot in2 float_dec float_dec float_shove float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_swap float_inc float_div tagged_236 print_float)
Errors: [39.9397 9 32.6075 11 24.4967 10 13.5423 11 69.9371 11 10.8236 10 40.265 10 16.0 2 56.8978 11 62.0 2 68.0 3 28.8641 10 1.3976 9 14.4302 12 78.0 2 23.0 2 1.0 1 37.7327 12 6.6437 10 0.8175 10 6.5831 11 16.8549 11 20.7305 10 14.2169 12 0.0 0]
Total: 886.7809000000001
Mean: 17.735619
Genome size: 102
Size: 103
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3501.555472100001
Median total errors in population: 910.9857000000001
Error averages by case: (160.56004529999944 10.21 118.34576789999906 10.861 135.36433060000138 10.043 116.50086150000071 11.015 177.37374190000128 11.545 110.76185540000202 11.159 147.13485260000132 11.006 114.66110079999987 4.207 141.68173170000233 11.301 150.6136469 4.157 163.054399 4.885 151.90701850000227 10.064 107.49733330000159 9.39 134.3729923000015 11.514 165.21678949999998 3.94 121.25555570000004 4.202 109.37716079999996 3.481 124.73424639999784 11.588 129.1243688000003 10.059 116.39338100000143 10.965 114.95649040000217 10.981 117.908439100002 10.874 133.4777815000021 11.133 112.47977349999961 10.146 104.79080769999997 3.285)
Error minima by case: (14.9536 1 5.9627 2 6.0 1 6.3615 2 3.1887 2 0.0 0 5.429 7 7.0 1 1.1022 8 9.7542 1 5.578 2 16.8641 1 0.3976 1 1.5698 1 10.3471 1 5.6918 1 0.0 0 10.2673 1 0.3563 2 0.02 7 4.5831 2 8.0 1 6.026 8 1.3687 1 0.0 0)
Average genome size in population (length): 87.705
Average program size in population (points): 88.705
Average percent parens in population: 0.011
Minimum age in population: 48.01283483207226
Maximum age in population: 52.45001151366159
Average age in population: 50.25506400418235
Median age in population: 50.30763113201829
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.324
Error (vector) diversity:			 0.396
Behavioral diversity:				 0.396
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 53126354
--- Timings ---
Current time: 1529615719884 milliseconds
Total Time:         131.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.3 seconds, 41.4%
Fitness Testing:     60.1 seconds, 45.8%
Report:              16.6 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 43870.29259999998
Test mean error for best: 21.93515
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 131.1206743085
Correct output: -24.607460431  | Program output: 4.0           
Correct output: 47.4967454102  | Program output: 75.9934908205 
Correct output: 21.5422970991  | Program output: 4.0           
Correct output: 139.0628943426 | Program output: 73.1257886852 
Correct output: 18.8235614089  | Program output: 4.0           
Correct output: 40.2650090461  | Program output: 0.2650090461  
Correct output: -54.8524808043 | Program output: -35.8524808043
Correct output: 56.8977931901  | Program output: 0.8977931901  
Correct output: -81.7542085575 | Program output: -16.7542085575
Correct output: -138.5780328906 | Program output: -67.5780328906
Correct output: 162.135867877  | Program output: 137.2717357539
Correct output: 6.602354913    | Program output: 4.0           
Correct output: 99.4302270736  | Program output: 117.8604541471
Correct output: -98.3471459602 | Program output: -17.3471459602
Correct output: -66.6917750495 | Program output: -40.6917750495
Correct output: -104.5908741149 | Program output: -102.5908741149
Correct output: 47.2673084834  | Program output: 13.5346169668 
Correct output: 114.3563176983 | Program output: 111.7126353966
Correct output: 0.8175119448   | Program output: 0.8175119448  
Correct output: 14.5831091655  | Program output: 4.0           
Correct output: 24.8548523011  | Program output: 4.0           
Correct output: 20.7305356492  | Program output: 0.7305356492  
Correct output: -14.2169449076 | Program output: 0.7830550924  
Correct output: -65.7165824303 | Program output: -62.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_551} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction in1} {:instruction integer_max} {:instruction float_dec} {:instruction float_max} {:instruction integer_mult} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_dec} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_mult} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_max} {:instruction print_integer} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_shove} {:instruction float_sub} {:instruction float_stackdepth} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc float_max float_dup tag_integer_551 integer_mult integer_pop float_add integer_add in1 integer_max float_dec float_max integer_mult float_inc in1 float_max float_dec in2 float_dec float_dec float_max float_dec integer_sub integer_pop float_mult float_dup_times float_swap float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 float_dup_items integer_rot integer_yank integer_div integer_pop float_shove integer_inc float_dup_items integer_rot integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max print_integer float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_dup_times integer_stackdepth integer_yank float_shove float_sub integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth float_inc float_shove float_sub float_stackdepth integer_swap float_div tagged_236 print_float)
Errors: [35.9397 10 28.6075 10 28.4967 10 17.5423 11 65.9371 11 14.8236 11 40.0 1 19.0 2 56.0 2 65.0 2 71.0 3 24.8641 10 2.6024 9 18.4302 12 81.0 2 26.0 2 2.0 1 33.7327 12 2.6437 9 0.0 0 10.5831 10 20.8549 10 20.0 1 15.0 13 3.0 1]
Total: 868.058
Mean: 17.36116
Genome size: 99
Size: 100
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3173.251959200003
Median total errors in population: 907.9857000000001
Error averages by case: (155.3254303000003 10.331 99.3979499999991 10.848 126.04124980000195 10.1 99.4412622000007 11.008 170.57767440000035 11.619 93.08494130000186 11.108 134.81868649999987 10.928 97.82833909999981 4.227 128.75795730000166 11.184 133.2295336999999 4.205 147.31279059999991 4.966 146.88103730000194 10.212 90.82894090000119 9.356 128.56105780000138 11.538 148.2198762 4.022 104.48859560000005 4.238 95.1398323 3.525 112.54307539999836 11.586 123.1759483000002 10.098 103.65610490000043 10.838 98.47382750000205 10.935 100.77059420000101 10.824 120.52666130000115 10.978 102.91930099999963 10.284 88.96929129999998 3.324)
Error minima by case: (14.9536 2 0.6075 3 7.0 1 11.4859 2 2.1887 1 2.0 1 5.3636 1 2.8525 1 0.748 2 9.7542 1 0.578 2 18.8641 1 0.3976 1 6.4302 1 2.2833 1 0.6918 1 0.0 0 2.0315 2 0.3563 2 0.0 0 5.5831 1 3.0484 1 5.6926 1 1.5661 1 0.0 0)
Average genome size in population (length): 88.63
Average program size in population (points): 89.63
Average percent parens in population: 0.011
Minimum age in population: 49.41034371498972
Maximum age in population: 53.51138596475357
Average age in population: 51.71383202280139
Median age in population: 51.77285959321307
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.863
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.863
Total error diversity:				 0.393
Error (vector) diversity:			 0.466
Behavioral diversity:				 0.467
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 55352504
--- Timings ---
Current time: 1529615724286 milliseconds
Total Time:         135.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.9 seconds, 41.2%
Fitness Testing:     62.3 seconds, 45.9%
Report:              17.4 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 34655.25669999999
Test mean error for best: 17.32763
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 232.1206743085
Correct output: -24.607460431  | Program output: -16.214920862 
Correct output: 47.4967454102  | Program output: 84.9934908205 
Correct output: 21.5422970991  | Program output: 71.0845941982 
Correct output: 139.0628943426 | Program output: 175.1257886852
Correct output: 18.8235614089  | Program output: 42.6471228177 
Correct output: 40.2650090461  | Program output: 32.2650090461 
Correct output: -54.8524808043 | Program output: -62.8524808043
Correct output: 56.8977931901  | Program output: 48.8977931901 
Correct output: -81.7542085575 | Program output: -89.7542085575
Correct output: -138.5780328906 | Program output: -146.5780328906
Correct output: 162.135867877  | Program output: 230.2717357539
Correct output: 6.602354913    | Program output: 71.2047098261 
Correct output: 99.4302270736  | Program output: 157.8604541471
Correct output: -98.3471459602 | Program output: -106.3471459602
Correct output: -66.6917750495 | Program output: -74.6917750495
Correct output: -104.5908741149 | Program output: -112.5908741149
Correct output: 47.2673084834  | Program output: 53.5346169668 
Correct output: 114.3563176983 | Program output: 169.7126353966
Correct output: 0.8175119448   | Program output: -7.1824880552 
Correct output: 14.5831091655  | Program output: 90.1662183309 
Correct output: 24.8548523011  | Program output: 66.7097046021 
Correct output: 20.7305356492  | Program output: 12.7305356492 
Correct output: -14.2169449076 | Program output: -22.2169449076
Correct output: -65.7165824303 | Program output: -73.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_frominteger} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_max} {:instruction print_integer} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc float_inc in1 float_max float_dup tag_integer_618 integer_mult tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_frominteger tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_mult float_dec float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 float_dup_items integer_rot integer_yank integer_div integer_pop float_shove integer_inc float_max integer_rot integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max print_integer float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [65.0603 11 8.3925 10 37.4967 10 49.5423 9 36.0629 11 23.8236 12 8.0 2 8.0 2 8.0 2 8.0 1 8.0 2 68.1359 11 64.6024 11 58.4302 12 8.0 3 8.0 2 8.0 2 6.2673 12 55.3563 10 8.0 12 75.5831 12 41.8549 10 8.0 2 8.0 2 8.0 2]
Total: 861.6084000000001
Mean: 17.232168
Genome size: 87
Size: 88
Percent parens: 0.011
--- Population Statistics ---
Average total errors in population: 3260.9507058000004
Median total errors in population: 904.9857000000001
Error averages by case: (160.10326159999983 10.175 103.09167609999923 10.927 127.0868914000018 9.913 102.60908640000068 11.028 173.83949580000015 11.375 95.21760830000173 11.122 138.30927390000062 10.918 102.26461609999986 4.259 132.14842130000176 11.118 137.36241239999993 4.217 149.5882413999999 4.904 151.77511800000187 10.063 94.76788640000093 9.418 131.3991105000014 11.272 150.44903820000005 3.973 108.94491560000007 4.252 99.5288451999999 3.576 114.86844489999868 11.374 127.35974360000007 9.854 108.69716260000044 10.843 102.31353740000189 11.0 104.59173250000097 10.895 125.34606100000131 10.933 104.70198199999965 10.079 93.69614319999998 3.402)
Error minima by case: (27.1207 1 1.8463 1 5.783 1 1.1996 1 0.8113 2 0.0588 1 2.47 1 2.8525 1 5.7306 2 6.0 1 1.578 2 7.8641 1 0.3976 1 2.867 1 6.0 1 0.6918 1 0.0 0 0.0315 1 0.3563 2 0.0 0 1.216 1 1.715 2 4.9315 1 1.0 1 0.0 0)
Average genome size in population (length): 91.409
Average program size in population (points): 92.409
Average percent parens in population: 0.011
Minimum age in population: 50.55477638565935
Maximum age in population: 54.92947798938258
Average age in population: 53.18491970561782
Median age in population: 53.18469013602589
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 34
Genome diversity (% unique Plush genomes):	 0.851
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 34
Syntactic diversity (% unique Push programs):	 0.851
Total error diversity:				 0.438
Error (vector) diversity:			 0.507
Behavioral diversity:				 0.508
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 57648904
--- Timings ---
Current time: 1529615728794 milliseconds
Total Time:         140.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.4 seconds, 41.0%
Fitness Testing:     64.6 seconds, 46.1%
Report:              18.0 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 33039.145299999975
Test mean error for best: 16.51957
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 229.1206743085
Correct output: -24.607460431  | Program output: -17.214920862 
Correct output: 47.4967454102  | Program output: 81.9934908205 
Correct output: 21.5422970991  | Program output: 3.0           
Correct output: 139.0628943426 | Program output: 172.1257886852
Correct output: 18.8235614089  | Program output: 3.0           
Correct output: 40.2650090461  | Program output: 29.2650090461 
Correct output: -54.8524808043 | Program output: -63.8524808043
Correct output: 56.8977931901  | Program output: 45.8977931901 
Correct output: -81.7542085575 | Program output: -90.7542085575
Correct output: -138.5780328906 | Program output: -147.5780328906
Correct output: 162.135867877  | Program output: 227.2717357539
Correct output: 6.602354913    | Program output: 3.0           
Correct output: 99.4302270736  | Program output: 154.8604541471
Correct output: -98.3471459602 | Program output: -107.3471459602
Correct output: -66.6917750495 | Program output: -75.6917750495
Correct output: -104.5908741149 | Program output: -113.5908741149
Correct output: 47.2673084834  | Program output: 50.5346169668 
Correct output: 114.3563176983 | Program output: 166.7126353966
Correct output: 0.8175119448   | Program output: -1.0          
Correct output: 14.5831091655  | Program output: 3.0           
Correct output: 24.8548523011  | Program output: 3.0           
Correct output: 20.7305356492  | Program output: 9.7305356492  
Correct output: -14.2169449076 | Program output: -1.0          
Correct output: -65.7165824303 | Program output: -74.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_dup} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction tag_integer_618} {:instruction integer_mult} {:instruction integer_pop} {:instruction float_add} {:instruction integer_add} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_frominteger} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_swap} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_dec} {:instruction integer_mult} {:instruction -37} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_sub} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_pop} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_shove} {:instruction float_sub} {:instruction float_mod} {:instruction integer_swap} {:instruction float_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc float_inc in1 float_max float_dup tag_integer_618 integer_mult tag_integer_618 integer_mult integer_pop float_add integer_add float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_frominteger tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_mult float_dec float_mult float_dec float_yankdup integer_mod in2 integer_pop float_add float_dup_times integer_mod float_swap float_dec integer_mult -37 float_mult float_dec float_mod integer_mult float_mult float_dec integer_mult -37 float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot integer_yank integer_sub integer_inc float_dup_items integer_pop integer_mod float_mod integer_pop integer_stackdepth integer_dec float_shove float_sub float_mod integer_swap float_div tagged_236 print_float)
Errors: [62.0603 11 7.3925 10 34.4967 10 18.5423 11 33.0629 11 15.8236 11 11.0 2 9.0 2 11.0 2 9.0 2 9.0 2 65.1359 11 3.6024 9 55.4302 12 9.0 3 9.0 2 9.0 2 3.2673 12 52.3563 10 1.8175 11 11.5831 11 21.8549 11 11.0 2 13.2169 10 9.0 2]
Total: 677.6428
Mean: 13.552856
Genome size: 97
Size: 98
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 3404.7705330000026
Median total errors in population: 899.9517000000001
Error averages by case: (169.51274019999897 10.178 105.58712079999916 10.856 136.15613020000148 9.917 105.7122764000007 10.95 181.25250500000115 11.356 97.11511890000193 11.039 147.916930800001 10.796 106.91501469999982 4.404 128.55355880000144 10.922 141.66265739999992 4.361 156.3587421999999 5.0 161.7917971000018 10.058 98.24775330000087 9.37 142.19922890000146 11.223 156.59096640000007 4.11 113.85757410000004 4.393 104.88235129999998 3.771 113.50069389999845 11.378 136.92667039999992 9.755 119.16711920000066 10.634 105.69887300000218 10.953 105.98301740000143 10.829 134.3698792000014 10.73 114.4802768999995 10.661 99.06153649999996 3.626)
Error minima by case: (7.2377 1 2.629 2 2.3256 1 4.8461 1 2.1887 1 0.0 0 6.47 1 2.8525 1 1.3716 2 8.0 1 1.578 2 3.8378 1 0.3976 1 6.4302 1 8.0 1 0.6918 1 0.0 0 3.2673 1 0.3563 2 0.0 0 0.3335 2 9.0 1 0.9641 1 0.1948 1 0.0 0)
Average genome size in population (length): 94.658
Average program size in population (points): 95.658
Average percent parens in population: 0.011
Minimum age in population: 52.48367889900692
Maximum age in population: 56.80831004797074
Average age in population: 54.68283957641848
Median age in population: 54.75492358745396
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.854
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.854
Total error diversity:				 0.445
Error (vector) diversity:			 0.503
Behavioral diversity:				 0.503
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 60028979
--- Timings ---
Current time: 1529615733337 milliseconds
Total Time:         144.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.0 seconds, 40.8%
Fitness Testing:     66.9 seconds, 46.2%
Report:              18.7 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 3303.0
Test mean error for best: 1.65150
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 165.0603371543
Correct output: -24.607460431  | Program output: -26.607460431 
Correct output: 47.4967454102  | Program output: 45.4967454102 
Correct output: 21.5422970991  | Program output: 19.5422970991 
Correct output: 139.0628943426 | Program output: 137.0628943426
Correct output: 18.8235614089  | Program output: 16.8235614089 
Correct output: 40.2650090461  | Program output: 38.2650090461 
Correct output: -54.8524808043 | Program output: -56.8524808043
Correct output: 56.8977931901  | Program output: 54.8977931901 
Correct output: -81.7542085575 | Program output: -83.7542085575
Correct output: -138.5780328906 | Program output: -140.5780328906
Correct output: 162.135867877  | Program output: 160.135867877 
Correct output: 6.602354913    | Program output: 4.602354913   
Correct output: 99.4302270736  | Program output: 97.4302270736 
Correct output: -98.3471459602 | Program output: -100.3471459602
Correct output: -66.6917750495 | Program output: -68.6917750495
Correct output: -104.5908741149 | Program output: -106.5908741149
Correct output: 47.2673084834  | Program output: 45.2673084834 
Correct output: 114.3563176983 | Program output: 112.3563176983
Correct output: 0.8175119448   | Program output: -1.1824880552 
Correct output: 14.5831091655  | Program output: 12.5831091655 
Correct output: 24.8548523011  | Program output: 22.8548523011 
Correct output: 20.7305356492  | Program output: 18.7305356492 
Correct output: -14.2169449076 | Program output: -16.2169449076
Correct output: -65.7165824303 | Program output: -67.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_frominteger} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_add} {:instruction float_mult} {:instruction float_dec} {:instruction float_mult} {:instruction float_dec} {:instruction float_yankdup} {:instruction integer_mod} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_shove} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction float_dec} {:instruction integer_pop} {:instruction integer_swap} {:instruction integer_inc} {:instruction in2} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_max} {:instruction float_min} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_frominteger tag_integer_578 integer_mult integer_pop integer_sub integer_pop float_add float_mult float_dec float_mult float_dec float_yankdup integer_mod in2 float_dec float_dec float_shove integer_add float_dup_items integer_rot integer_yank float_dec integer_pop integer_swap integer_inc in2 float_dup_items integer_rot integer_yank integer_div integer_pop float_shove integer_inc float_max integer_rot integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max float_min float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1 2.0 1 2.0 3 2.0 1 2.0 1 2.0 1 2.0 1 2.0 12 2.0 1 2.0 1 2.0 2 2.0 1 2.0 1]
Total: 92.0
Mean: 1.84
Genome size: 81
Size: 82
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 3476.885780200003
Median total errors in population: 894.9857000000001
Error averages by case: (164.54111019999948 10.195 116.61067399999943 10.755 133.90380470000156 9.9 116.33217600000059 10.949 174.99153650000048 11.315 107.28217840000181 11.08 140.8652209000004 10.399 114.96461239999972 4.577 129.68709680000114 10.647 148.40152879999985 4.522 162.04650139999998 5.25 156.91017380000153 10.014 110.80492420000056 9.578 138.0676804000013 11.239 162.2921907000002 4.451 121.54650280000003 4.564 114.80976659999988 3.997 113.66745579999875 11.413 132.49293889999998 9.829 113.54292280000051 10.648 118.2015201000019 10.987 116.67208060000168 10.804 129.45667880000127 10.456 109.30459989999969 10.143 107.92590469999998 3.852)
Error minima by case: (1.0 1 1.3925 1 2.0 1 2.0 1 0.0 0 0.0 0 2.0 1 1.8525 1 1.7745 1 2.0 1 0.0484 1 0.0533 1 0.3976 1 1.4352 1 0.2738 1 0.3082 1 0.0 0 2.0 1 0.3563 1 0.0 0 0.5831 1 1.8085 1 0.6911 1 1.8328 1 0.0 0)
Average genome size in population (length): 96.507
Average program size in population (points): 97.507
Average percent parens in population: 0.010
Minimum age in population: 53.72215389634948
Maximum age in population: 58.35594222216605
Average age in population: 56.17405670734295
Median age in population: 56.2259427169447
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.863
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.863
Total error diversity:				 0.484
Error (vector) diversity:			 0.533
Behavioral diversity:				 0.534
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 62454166
--- Timings ---
Current time: 1529615737657 milliseconds
Total Time:         149.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.5 seconds, 40.6%
Fitness Testing:     69.3 seconds, 46.5%
Report:              19.2 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 167.0603371543
Correct output: -24.607460431  | Program output: -24.607460431 
Correct output: 47.4967454102  | Program output: 47.4967454102 
Correct output: 21.5422970991  | Program output: 21.5422970991 
Correct output: 139.0628943426 | Program output: 139.0628943426
Correct output: 18.8235614089  | Program output: 18.8235614089 
Correct output: 40.2650090461  | Program output: 40.2650090461 
Correct output: -54.8524808043 | Program output: -54.8524808043
Correct output: 56.8977931901  | Program output: 56.8977931901 
Correct output: -81.7542085575 | Program output: -81.7542085575
Correct output: -138.5780328906 | Program output: -138.5780328906
Correct output: 162.135867877  | Program output: 162.135867877 
Correct output: 6.602354913    | Program output: 6.602354913   
Correct output: 99.4302270736  | Program output: 99.4302270736 
Correct output: -98.3471459602 | Program output: -98.3471459602
Correct output: -66.6917750495 | Program output: -66.6917750495
Correct output: -104.5908741149 | Program output: -104.5908741149
Correct output: 47.2673084834  | Program output: 47.2673084834 
Correct output: 114.3563176983 | Program output: 114.3563176983
Correct output: 0.8175119448   | Program output: 0.8175119448  
Correct output: 14.5831091655  | Program output: 14.5831091655 
Correct output: 24.8548523011  | Program output: 24.8548523011 
Correct output: 20.7305356492  | Program output: 20.7305356492 
Correct output: -14.2169449076 | Program output: -14.2169449076
Correct output: -65.7165824303 | Program output: -65.7165824303
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_inc} {:instruction in1} {:instruction float_max} {:instruction float_swap} {:instruction float_mod} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction integer_mult} {:instruction float_mult} {:instruction float_inc} {:instruction in1} {:instruction integer_yank} {:instruction float_dec} {:instruction in2} {:instruction float_dec} {:instruction float_dec} {:instruction float_max} {:instruction float_frominteger} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction tag_integer_578} {:instruction integer_mult} {:instruction integer_pop} {:instruction integer_sub} {:instruction float_dec} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mod} {:instruction float_dec} {:instruction float_mod} {:instruction float_max} {:instruction float_dec} {:instruction tag_integer_578} {:instruction integer_pop} {:instruction float_add} {:instruction float_dup_times} {:instruction integer_mult} {:instruction float_mult} {:instruction integer_yank} {:instruction integer_div} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_inc} {:instruction float_max} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_dup_times} {:instruction float_max} {:instruction float_min} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_items} {:instruction integer_rot} {:instruction integer_mod} {:instruction float_mod} {:instruction integer_pop} {:instruction integer_stackdepth} {:instruction integer_yank} {:instruction float_shove} {:instruction float_sub} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_div} {:instruction tagged_236} {:instruction print_float})
Best program: (float_inc in1 float_max float_inc in1 float_max float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_frominteger tag_integer_578 integer_mult tag_integer_578 integer_mult integer_pop integer_sub float_dec float_add float_dup_times integer_mod float_dec float_mod float_max float_dec tag_integer_578 integer_pop float_add float_dup_times integer_mult float_mult integer_yank integer_div integer_pop float_shove integer_inc float_max integer_rot integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max float_min float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total: 0.0
Mean: 0.0
Genome size: 74
Size: 75
Percent parens: 0.013
--- Population Statistics ---
Average total errors in population: 3421.3974341000026
Median total errors in population: 889.5708500000001
Error averages by case: (164.5624998999996 9.977 109.53368359999976 10.228 134.7591972000012 9.601 119.07686980000051 10.411 170.72554440000042 10.894 107.40106070000162 10.693 143.2544669000005 9.034 109.72101649999979 4.401 122.73518040000077 9.38 133.30289860000002 4.321 148.9680424999999 5.095 158.39367210000114 9.811 116.51829010000056 9.523 141.64372780000133 10.863 145.11634820000003 4.516 114.65789180000006 4.376 110.9273993999999 3.974 108.70454229999926 11.054 137.56313920000002 9.648 121.15004200000067 10.513 124.06023240000178 10.669 118.24823330000152 10.26 134.7931359000009 9.155 109.65719179999974 9.153 104.53712730000001 3.836)
Error minima by case: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
Average genome size in population (length): 96.075
Average program size in population (points): 97.075
Average percent parens in population: 0.010
Minimum age in population: 55.35223100373696
Maximum age in population: 59.56785255015711
Average age in population: 57.67346513668977
Median age in population: 57.70706686356607
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.877
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.877
Total error diversity:				 0.5
Error (vector) diversity:			 0.551
Behavioral diversity:				 0.551
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 64867066
--- Timings ---
Current time: 1529615742115 milliseconds
Total Time:         153.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.0 seconds, 40.4%
Fitness Testing:     71.6 seconds, 46.7%
Report:              19.8 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 39
Successful program: (float_inc in1 float_max float_inc in1 float_max float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_frominteger tag_integer_578 integer_mult tag_integer_578 integer_mult integer_pop integer_sub float_dec float_add float_dup_times integer_mod float_dec float_mod float_max float_dec tag_integer_578 integer_pop float_add float_dup_times integer_mult float_mult integer_yank integer_div integer_pop float_shove integer_inc float_max integer_rot integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max float_min float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
Errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
Total error: 0.0
History: null
Size: 75


Auto-simplifying with starting size: 75
step: 0
program: (float_inc in1 float_max float_inc in1 float_max float_swap float_mod integer_mult float_mult float_inc integer_mult float_mult float_inc in1 integer_yank float_dec in2 float_dec float_dec float_max float_frominteger tag_integer_578 integer_mult tag_integer_578 integer_mult integer_pop integer_sub float_dec float_add float_dup_times integer_mod float_dec float_mod float_max float_dec tag_integer_578 integer_pop float_add float_dup_times integer_mult float_mult integer_yank integer_div integer_pop float_shove integer_inc float_max integer_rot integer_rot integer_mod float_mod integer_pop float_dup_items integer_rot float_dup_times float_max float_min float_shove integer_inc float_dup_items integer_rot integer_mod float_mod integer_pop integer_stackdepth integer_yank float_shove float_sub float_swap integer_swap integer_div tagged_236 print_float)
errors: [0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0]
total: 0.0
size: 75

step: 500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 1500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 2500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 3500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 4500
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

step: 5000
program: (in1 in2 float_frominteger float_add print_float)
errors: (0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0)
total: 0.0
size: 6

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 0.0
Test mean error for best: 0.00000
Test Case    0 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    1 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    2 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    3 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    4 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    5 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    6 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    7 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    8 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case    9 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   10 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   11 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   12 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   13 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   14 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   15 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   16 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   17 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   18 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   19 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   20 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   21 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   22 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   23 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   24 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   25 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   26 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   27 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   28 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   29 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   30 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   31 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   32 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   33 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   34 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   35 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   36 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   37 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   38 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   39 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   40 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   41 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   42 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   43 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   44 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   45 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   46 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   47 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   48 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   49 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   50 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   51 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   52 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   53 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   54 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   55 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   56 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   57 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   58 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   59 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   60 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   61 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   62 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   63 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   64 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   65 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   66 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   67 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   68 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   69 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   70 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   71 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   72 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   73 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   74 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   75 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   76 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   77 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   78 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   79 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   80 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   81 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   82 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   83 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   84 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   85 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   86 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   87 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   88 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   89 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   90 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   91 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   92 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   93 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   94 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   95 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   96 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   97 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   98 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case   99 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  100 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  101 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  102 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  103 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  104 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  105 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  106 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  107 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  108 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  109 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  110 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  111 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  112 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  113 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  114 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  115 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  116 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  117 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  118 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  119 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  120 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  121 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  122 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  123 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  124 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  125 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  126 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  127 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  128 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  129 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  130 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  131 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  132 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  133 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  134 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  135 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  136 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  137 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  138 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  139 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  140 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  141 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  142 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  143 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  144 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  145 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  146 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  147 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  148 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  149 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  150 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  151 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  152 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  153 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  154 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  155 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  156 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  157 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  158 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  159 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  160 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  161 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  162 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  163 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  164 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  165 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  166 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  167 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  168 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  169 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  170 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  171 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  172 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  173 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  174 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  175 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  176 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  177 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  178 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  179 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  180 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  181 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  182 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  183 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  184 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  185 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  186 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  187 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  188 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  189 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  190 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  191 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  192 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  193 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  194 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  195 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  196 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  197 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  198 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  199 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  200 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  201 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  202 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  203 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  204 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  205 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  206 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  207 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  208 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  209 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  210 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  211 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  212 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  213 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  214 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  215 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  216 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  217 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  218 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  219 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  220 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  221 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  222 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  223 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  224 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  225 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  226 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  227 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  228 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  229 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  230 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  231 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  232 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  233 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  234 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  235 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  236 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  237 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  238 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  239 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  240 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  241 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  242 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  243 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  244 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  245 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  246 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  247 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  248 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  249 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  250 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  251 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  252 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  253 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  254 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  255 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  256 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  257 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  258 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  259 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  260 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  261 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  262 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  263 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  264 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  265 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  266 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  267 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  268 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  269 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  270 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  271 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  272 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  273 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  274 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  275 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  276 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  277 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  278 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  279 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  280 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  281 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  282 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  283 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  284 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  285 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  286 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  287 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  288 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  289 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  290 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  291 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  292 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  293 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  294 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  295 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  296 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  297 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  298 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  299 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  300 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  301 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  302 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  303 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  304 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  305 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  306 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  307 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  308 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  309 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  310 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  311 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  312 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  313 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  314 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  315 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  316 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  317 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  318 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  319 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  320 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  321 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  322 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  323 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  324 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  325 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  326 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  327 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  328 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  329 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  330 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  331 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  332 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  333 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  334 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  335 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  336 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  337 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  338 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  339 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  340 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  341 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  342 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  343 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  344 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  345 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  346 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  347 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  348 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  349 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  350 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  351 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  352 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  353 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  354 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  355 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  356 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  357 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  358 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  359 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  360 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  361 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  362 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  363 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  364 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  365 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  366 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  367 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  368 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  369 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  370 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  371 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  372 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  373 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  374 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  375 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  376 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  377 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  378 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  379 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  380 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  381 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  382 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  383 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  384 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  385 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  386 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  387 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  388 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  389 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  390 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  391 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  392 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  393 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  394 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  395 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  396 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  397 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  398 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  399 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  400 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  401 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  402 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  403 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  404 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  405 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  406 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  407 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  408 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  409 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  410 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  411 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  412 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  413 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  414 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  415 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  416 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  417 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  418 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  419 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  420 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  421 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  422 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  423 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  424 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  425 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  426 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  427 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  428 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  429 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  430 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  431 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  432 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  433 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  434 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  435 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  436 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  437 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  438 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  439 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  440 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  441 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  442 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  443 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  444 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  445 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  446 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  447 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  448 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  449 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  450 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  451 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  452 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  453 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  454 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  455 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  456 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  457 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  458 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  459 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  460 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  461 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  462 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  463 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  464 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  465 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  466 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  467 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  468 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  469 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  470 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  471 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  472 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  473 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  474 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  475 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  476 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  477 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  478 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  479 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  480 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  481 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  482 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  483 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  484 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  485 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  486 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  487 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  488 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  489 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  490 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  491 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  492 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  493 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  494 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  495 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  496 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  497 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  498 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  499 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  500 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  501 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  502 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  503 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  504 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  505 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  506 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  507 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  508 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  509 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  510 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  511 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  512 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  513 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  514 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  515 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  516 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  517 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  518 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  519 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  520 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  521 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  522 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  523 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  524 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  525 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  526 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  527 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  528 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  529 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  530 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  531 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  532 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  533 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  534 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  535 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  536 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  537 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  538 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  539 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  540 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  541 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  542 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  543 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  544 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  545 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  546 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  547 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  548 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  549 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  550 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  551 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  552 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  553 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  554 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  555 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  556 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  557 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  558 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  559 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  560 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  561 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  562 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  563 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  564 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  565 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  566 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  567 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  568 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  569 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  570 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  571 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  572 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  573 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  574 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  575 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  576 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  577 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  578 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  579 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  580 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  581 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  582 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  583 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  584 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  585 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  586 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  587 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  588 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  589 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  590 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  591 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  592 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  593 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  594 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  595 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  596 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  597 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  598 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  599 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  600 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  601 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  602 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  603 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  604 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  605 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  606 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  607 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  608 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  609 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  610 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  611 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  612 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  613 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  614 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  615 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  616 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  617 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  618 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  619 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  620 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  621 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  622 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  623 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  624 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  625 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  626 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  627 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  628 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  629 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  630 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  631 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  632 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  633 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  634 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  635 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  636 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  637 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  638 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  639 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  640 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  641 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  642 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  643 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  644 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  645 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  646 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  647 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  648 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  649 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  650 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  651 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  652 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  653 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  654 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  655 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  656 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  657 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  658 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  659 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  660 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  661 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  662 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  663 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  664 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  665 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  666 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  667 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  668 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  669 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  670 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  671 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  672 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  673 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  674 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  675 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  676 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  677 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  678 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  679 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  680 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  681 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  682 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  683 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  684 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  685 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  686 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  687 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  688 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  689 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  690 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  691 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  692 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  693 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  694 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  695 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  696 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  697 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  698 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  699 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  700 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  701 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  702 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  703 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  704 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  705 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  706 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  707 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  708 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  709 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  710 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  711 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  712 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  713 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  714 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  715 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  716 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  717 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  718 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  719 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  720 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  721 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  722 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  723 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  724 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  725 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  726 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  727 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  728 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  729 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  730 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  731 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  732 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  733 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  734 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  735 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  736 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  737 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  738 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  739 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  740 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  741 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  742 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  743 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  744 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  745 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  746 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  747 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  748 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  749 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  750 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  751 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  752 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  753 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  754 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  755 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  756 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  757 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  758 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  759 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  760 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  761 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  762 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  763 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  764 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  765 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  766 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  767 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  768 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  769 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  770 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  771 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  772 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  773 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  774 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  775 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  776 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  777 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  778 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  779 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  780 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  781 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  782 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  783 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  784 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  785 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  786 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  787 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  788 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  789 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  790 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  791 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  792 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  793 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  794 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  795 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  796 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  797 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  798 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  799 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  800 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  801 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  802 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  803 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  804 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  805 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  806 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  807 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  808 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  809 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  810 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  811 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  812 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  813 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  814 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  815 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  816 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  817 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  818 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  819 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  820 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  821 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  822 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  823 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  824 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  825 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  826 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  827 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  828 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  829 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  830 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  831 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  832 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  833 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  834 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  835 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  836 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  837 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  838 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  839 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  840 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  841 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  842 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  843 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  844 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  845 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  846 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  847 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  848 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  849 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  850 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  851 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  852 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  853 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  854 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  855 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  856 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  857 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  858 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  859 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  860 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  861 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  862 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  863 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  864 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  865 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  866 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  867 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  868 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  869 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  870 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  871 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  872 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  873 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  874 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  875 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  876 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  877 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  878 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  879 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  880 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  881 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  882 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  883 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  884 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  885 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  886 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  887 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  888 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  889 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  890 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  891 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  892 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  893 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  894 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  895 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  896 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  897 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  898 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  899 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  900 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  901 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  902 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  903 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  904 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  905 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  906 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  907 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  908 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  909 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  910 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  911 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  912 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  913 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  914 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  915 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  916 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  917 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  918 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  919 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  920 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  921 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  922 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  923 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  924 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  925 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  926 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  927 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  928 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  929 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  930 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  931 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  932 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  933 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  934 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  935 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  936 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  937 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  938 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  939 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  940 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  941 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  942 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  943 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  944 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  945 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  946 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  947 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  948 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  949 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  950 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  951 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  952 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  953 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  954 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  955 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  956 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  957 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  958 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  959 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  960 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  961 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  962 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  963 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  964 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  965 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  966 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  967 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  968 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  969 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  970 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  971 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  972 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  973 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  974 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  975 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  976 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  977 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  978 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  979 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  980 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  981 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  982 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  983 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  984 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  985 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  986 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  987 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  988 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  989 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  990 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  991 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  992 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  993 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  994 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  995 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  996 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  997 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  998 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
Test Case  999 | Numeric Error:    0.00000000000000 | Levenshtein Distance: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 167.0603371543 | Program output: 167.0603371543
Correct output: -24.607460431  | Program output: -24.607460431 
Correct output: 47.4967454102  | Program output: 47.4967454102 
Correct output: 21.5422970991  | Program output: 21.5422970991 
Correct output: 139.0628943426 | Program output: 139.0628943426
Correct output: 18.8235614089  | Program output: 18.8235614089 
Correct output: 40.2650090461  | Program output: 40.2650090461 
Correct output: -54.8524808043 | Program output: -54.8524808043
Correct output: 56.8977931901  | Program output: 56.8977931901 
Correct output: -81.7542085575 | Program output: -81.7542085575
Correct output: -138.5780328906 | Program output: -138.5780328906
Correct output: 162.135867877  | Program output: 162.135867877 
Correct output: 6.602354913    | Program output: 6.602354913   
Correct output: 99.4302270736  | Program output: 99.4302270736 
Correct output: -98.3471459602 | Program output: -98.3471459602
Correct output: -66.6917750495 | Program output: -66.6917750495
Correct output: -104.5908741149 | Program output: -104.5908741149
Correct output: 47.2673084834  | Program output: 47.2673084834 
Correct output: 114.3563176983 | Program output: 114.3563176983
Correct output: 0.8175119448   | Program output: 0.8175119448  
Correct output: 14.5831091655  | Program output: 14.5831091655 
Correct output: 24.8548523011  | Program output: 24.8548523011 
Correct output: 20.7305356492  | Program output: 20.7305356492 
Correct output: -14.2169449076 | Program output: -14.2169449076
Correct output: -65.7165824303 | Program output: -65.7165824303
;;******************************
