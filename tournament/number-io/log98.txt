Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[-22.023963116233716 18] -4.023963116233716]
Train Case:   1 | Input/Output: [[50.99660036870259 16] 66.99660036870259]
Train Case:   2 | Input/Output: [[67.54092829557416 -55] 12.540928295574162]
Train Case:   3 | Input/Output: [[-45.5632579725878 88] 42.4367420274122]
Train Case:   4 | Input/Output: [[32.267517791448995 48] 80.267517791449]
Train Case:   5 | Input/Output: [[-82.78274329136298 22] -60.782743291362976]
Train Case:   6 | Input/Output: [[-12.416288009402848 -75] -87.41628800940285]
Train Case:   7 | Input/Output: [[-8.83520358114373 23] 14.16479641885627]
Train Case:   8 | Input/Output: [[-49.46511088813321 -77] -126.46511088813321]
Train Case:   9 | Input/Output: [[-40.21872968395921 89] 48.78127031604079]
Train Case:  10 | Input/Output: [[-40.26341308616548 70] 29.736586913834522]
Train Case:  11 | Input/Output: [[-75.8107606538008 -88] -163.8107606538008]
Train Case:  12 | Input/Output: [[26.3753963176798 -41] -14.624603682320199]
Train Case:  13 | Input/Output: [[-83.12099900475187 11] -72.12099900475187]
Train Case:  14 | Input/Output: [[29.23051873101599 85] 114.23051873101599]
Train Case:  15 | Input/Output: [[65.84583301364756 -6] 59.845833013647564]
Train Case:  16 | Input/Output: [[82.16977888669035 -18] 64.16977888669035]
Train Case:  17 | Input/Output: [[11.23868557033451 1] 12.23868557033451]
Train Case:  18 | Input/Output: [[8.239722248408341 17] 25.23972224840834]
Train Case:  19 | Input/Output: [[79.45886938985976 -79] 0.4588693898597569]
Train Case:  20 | Input/Output: [[-98.80404880511509 -21] -119.80404880511509]
Train Case:  21 | Input/Output: [[16.74545856678253 77] 93.74545856678253]
Train Case:  22 | Input/Output: [[-84.13237115017138 -68] -152.13237115017137]
Train Case:  23 | Input/Output: [[87.97455150997627 -20] 67.97455150997627]
Train Case:  24 | Input/Output: [[-3.0499546477970227 -10] -13.049954647797023]
Test Case:   0 | Input/Output: [[-62.140614392646285 -51] -113.14061439264628]
Test Case:   1 | Input/Output: [[93.28056814834542 -52] 41.280568148345424]
Test Case:   2 | Input/Output: [[-88.66631529705278 -98] -186.6663152970528]
Test Case:   3 | Input/Output: [[-15.611697127294619 -1] -16.61169712729462]
Test Case:   4 | Input/Output: [[9.850446443960223 28] 37.85044644396022]
Test Case:   5 | Input/Output: [[-95.67730315232087 33] -62.677303152320874]
Test Case:   6 | Input/Output: [[-97.22513187037652 -36] -133.22513187037652]
Test Case:   7 | Input/Output: [[48.93551820880796 37] 85.93551820880796]
Test Case:   8 | Input/Output: [[-77.67611992223145 -1] -78.67611992223145]
Test Case:   9 | Input/Output: [[51.48976733034917 66] 117.48976733034917]
Test Case:  10 | Input/Output: [[25.832170965798767 17] 42.83217096579877]
Test Case:  11 | Input/Output: [[93.94693686843269 92] 185.9469368684327]
Test Case:  12 | Input/Output: [[-29.22127689552019 -31] -60.22127689552019]
Test Case:  13 | Input/Output: [[79.4726508206042 -36] 43.4726508206042]
Test Case:  14 | Input/Output: [[49.39565571000759 -5] 44.39565571000759]
Test Case:  15 | Input/Output: [[-22.759105993235565 5] -17.759105993235565]
Test Case:  16 | Input/Output: [[14.642081176089377 80] 94.64208117608938]
Test Case:  17 | Input/Output: [[-94.53125654161434 28] -66.53125654161434]
Test Case:  18 | Input/Output: [[85.25155074519643 -65] 20.251550745196425]
Test Case:  19 | Input/Output: [[51.559058846428286 84] 135.5590588464283]
Test Case:  20 | Input/Output: [[-45.72674408181459 -93] -138.7267440818146]
Test Case:  21 | Input/Output: [[44.45680066514842 53] 97.45680066514842]
Test Case:  22 | Input/Output: [[92.68422654442162 -71] 21.68422654442162]
Test Case:  23 | Input/Output: [[8.11698014937592 -77] -68.88301985062408]
Test Case:  24 | Input/Output: [[-2.7373257134115647 45] 42.262674286588435]
Test Case:  25 | Input/Output: [[44.14785880780593 -50] -5.852141192194068]
Test Case:  26 | Input/Output: [[81.2356446198965 39] 120.2356446198965]
Test Case:  27 | Input/Output: [[-11.243128174195746 -46] -57.243128174195746]
Test Case:  28 | Input/Output: [[37.49327220899818 -44] -6.506727791001822]
Test Case:  29 | Input/Output: [[-87.46409774600843 18] -69.46409774600843]
Test Case:  30 | Input/Output: [[-96.76227136785212 -87] -183.76227136785212]
Test Case:  31 | Input/Output: [[-14.333354642325617 32] 17.666645357674383]
Test Case:  32 | Input/Output: [[40.232998737868655 -61] -20.767001262131345]
Test Case:  33 | Input/Output: [[46.84795283643655 91] 137.84795283643655]
Test Case:  34 | Input/Output: [[5.731506725900104 65] 70.7315067259001]
Test Case:  35 | Input/Output: [[-61.94404086536587 -27] -88.94404086536588]
Test Case:  36 | Input/Output: [[20.58623756661102 21] 41.58623756661102]
Test Case:  37 | Input/Output: [[-18.478214832999825 -72] -90.47821483299983]
Test Case:  38 | Input/Output: [[16.736178794076167 -91] -74.26382120592383]
Test Case:  39 | Input/Output: [[42.792388793623786 -22] 20.792388793623786]
Test Case:  40 | Input/Output: [[-2.6157555002485253 34] 31.384244499751475]
Test Case:  41 | Input/Output: [[-79.29938932253398 21] -58.29938932253398]
Test Case:  42 | Input/Output: [[0.46379993470044667 -12] -11.536200065299553]
Test Case:  43 | Input/Output: [[68.83457865965897 44] 112.83457865965897]
Test Case:  44 | Input/Output: [[97.07537370440022 -11] 86.07537370440022]
Test Case:  45 | Input/Output: [[92.1725011497351 -48] 44.1725011497351]
Test Case:  46 | Input/Output: [[-17.479410191029658 11] -6.4794101910296575]
Test Case:  47 | Input/Output: [[-22.966692575761442 94] 71.03330742423856]
Test Case:  48 | Input/Output: [[-84.73748812172973 -63] -147.7374881217297]
Test Case:  49 | Input/Output: [[-51.781795450902294 66] 14.218204549097706]
Test Case:  50 | Input/Output: [[-96.49658686301221 -16] -112.49658686301221]
Test Case:  51 | Input/Output: [[-28.31121601534987 59] 30.68878398465013]
Test Case:  52 | Input/Output: [[-15.092312709908867 32] 16.907687290091133]
Test Case:  53 | Input/Output: [[-70.47422021250523 12] -58.47422021250523]
Test Case:  54 | Input/Output: [[89.39898511502898 -40] 49.39898511502898]
Test Case:  55 | Input/Output: [[-3.9613268941873514 -65] -68.96132689418735]
Test Case:  56 | Input/Output: [[-94.60509851432116 72] -22.605098514321156]
Test Case:  57 | Input/Output: [[79.61102173874616 -66] 13.61102173874616]
Test Case:  58 | Input/Output: [[20.692668243981217 43] 63.69266824398122]
Test Case:  59 | Input/Output: [[5.014556906478447 -33] -27.985443093521553]
Test Case:  60 | Input/Output: [[56.008403378269946 8] 64.00840337826995]
Test Case:  61 | Input/Output: [[-98.51752594004341 -59] -157.5175259400434]
Test Case:  62 | Input/Output: [[99.21155897296771 85] 184.2115589729677]
Test Case:  63 | Input/Output: [[-33.86619819635865 62] 28.133801803641347]
Test Case:  64 | Input/Output: [[71.42183314690845 -72] -0.5781668530915454]
Test Case:  65 | Input/Output: [[71.31271460130145 62] 133.31271460130145]
Test Case:  66 | Input/Output: [[27.748770227508942 -69] -41.25122977249106]
Test Case:  67 | Input/Output: [[3.0684062854835332 45] 48.06840628548353]
Test Case:  68 | Input/Output: [[-5.888630370344686 -53] -58.888630370344686]
Test Case:  69 | Input/Output: [[75.9683724695521 -39] 36.968372469552094]
Test Case:  70 | Input/Output: [[-47.66553570203942 15] -32.66553570203942]
Test Case:  71 | Input/Output: [[-80.3621205571755 -95] -175.3621205571755]
Test Case:  72 | Input/Output: [[-57.45504717833316 -68] -125.45504717833316]
Test Case:  73 | Input/Output: [[-87.38051453883182 83] -4.380514538831818]
Test Case:  74 | Input/Output: [[22.663447344990402 -86] -63.3365526550096]
Test Case:  75 | Input/Output: [[-39.11454521592246 69] 29.885454784077538]
Test Case:  76 | Input/Output: [[-60.94962699355213 -53] -113.94962699355213]
Test Case:  77 | Input/Output: [[24.572219645218453 53] 77.57221964521845]
Test Case:  78 | Input/Output: [[82.28723526215006 35] 117.28723526215006]
Test Case:  79 | Input/Output: [[89.34838196619975 -66] 23.348381966199753]
Test Case:  80 | Input/Output: [[55.597172704914755 -89] -33.402827295085245]
Test Case:  81 | Input/Output: [[-4.377883496496565 23] 18.622116503503435]
Test Case:  82 | Input/Output: [[52.75499114353926 24] 76.75499114353926]
Test Case:  83 | Input/Output: [[-7.520213076064493 -69] -76.5202130760645]
Test Case:  84 | Input/Output: [[-8.737074260882977 -72] -80.73707426088298]
Test Case:  85 | Input/Output: [[89.10603331149082 83] 172.10603331149082]
Test Case:  86 | Input/Output: [[59.11745258049032 -83] -23.882547419509677]
Test Case:  87 | Input/Output: [[45.65466814384203 5] 50.65466814384203]
Test Case:  88 | Input/Output: [[97.50932592468712 -50] 47.50932592468712]
Test Case:  89 | Input/Output: [[-60.40128691366222 -87] -147.4012869136622]
Test Case:  90 | Input/Output: [[-95.2494558591207 48] -47.2494558591207]
Test Case:  91 | Input/Output: [[6.372745662529837 31] 37.37274566252984]
Test Case:  92 | Input/Output: [[-53.70433900776401 -47] -100.70433900776402]
Test Case:  93 | Input/Output: [[74.19787419181182 -89] -14.80212580818818]
Test Case:  94 | Input/Output: [[-99.05863555946324 59] -40.05863555946324]
Test Case:  95 | Input/Output: [[-4.217294652445162 -62] -66.21729465244516]
Test Case:  96 | Input/Output: [[34.911186127350504 -93] -58.088813872649496]
Test Case:  97 | Input/Output: [[83.86789479770917 -61] 22.86789479770917]
Test Case:  98 | Input/Output: [[20.858286652605102 33] 53.8582866526051]
Test Case:  99 | Input/Output: [[-61.786199609529355 -85] -146.78619960952935]
Test Case: 100 | Input/Output: [[52.77575142387275 -69] -16.224248576127252]
Test Case: 101 | Input/Output: [[67.00997879462656 93] 160.00997879462656]
Test Case: 102 | Input/Output: [[-21.11850827338148 -81] -102.11850827338148]
Test Case: 103 | Input/Output: [[-14.919838695937912 -24] -38.91983869593791]
Test Case: 104 | Input/Output: [[-30.651232841361235 -52] -82.65123284136124]
Test Case: 105 | Input/Output: [[11.918552502874476 65] 76.91855250287448]
Test Case: 106 | Input/Output: [[9.335642809843335 67] 76.33564280984334]
Test Case: 107 | Input/Output: [[-10.623619615909135 -72] -82.62361961590913]
Test Case: 108 | Input/Output: [[30.547247895827866 94] 124.54724789582787]
Test Case: 109 | Input/Output: [[-7.0365294848740945 -36] -43.036529484874094]
Test Case: 110 | Input/Output: [[33.02916419896289 42] 75.02916419896289]
Test Case: 111 | Input/Output: [[-94.28670611980053 79] -15.286706119800527]
Test Case: 112 | Input/Output: [[72.4179461412993 13] 85.4179461412993]
Test Case: 113 | Input/Output: [[-72.80276211766457 2] -70.80276211766457]
Test Case: 114 | Input/Output: [[-44.595351571678044 -51] -95.59535157167804]
Test Case: 115 | Input/Output: [[29.329930131239564 4] 33.329930131239564]
Test Case: 116 | Input/Output: [[88.11063528332417 31] 119.11063528332417]
Test Case: 117 | Input/Output: [[98.91990554700334 48] 146.91990554700334]
Test Case: 118 | Input/Output: [[74.50130729452309 -22] 52.50130729452309]
Test Case: 119 | Input/Output: [[-50.13608478677038 97] 46.86391521322962]
Test Case: 120 | Input/Output: [[-89.01314153010433 90] 0.9868584698956653]
Test Case: 121 | Input/Output: [[32.00627778657855 6] 38.00627778657855]
Test Case: 122 | Input/Output: [[-3.249425874014605 92] 88.7505741259854]
Test Case: 123 | Input/Output: [[9.973154914359156 29] 38.97315491435916]
Test Case: 124 | Input/Output: [[56.84644508932885 47] 103.84644508932885]
Test Case: 125 | Input/Output: [[-70.48928064123079 34] -36.48928064123079]
Test Case: 126 | Input/Output: [[-77.36719791417099 -32] -109.36719791417099]
Test Case: 127 | Input/Output: [[97.17900297786932 25] 122.17900297786932]
Test Case: 128 | Input/Output: [[-52.86518967134206 73] 20.13481032865794]
Test Case: 129 | Input/Output: [[-99.52142424146034 17] -82.52142424146034]
Test Case: 130 | Input/Output: [[-96.30039475556494 20] -76.30039475556494]
Test Case: 131 | Input/Output: [[92.08680031556975 -54] 38.08680031556975]
Test Case: 132 | Input/Output: [[-28.880281900275648 -64] -92.88028190027565]
Test Case: 133 | Input/Output: [[26.19096140361033 70] 96.19096140361033]
Test Case: 134 | Input/Output: [[-87.97331491028314 80] -7.973314910283136]
Test Case: 135 | Input/Output: [[-86.69657459498974 -39] -125.69657459498974]
Test Case: 136 | Input/Output: [[99.8393128453298 -82] 17.8393128453298]
Test Case: 137 | Input/Output: [[-18.937546601011988 -99] -117.93754660101199]
Test Case: 138 | Input/Output: [[-54.569897006778476 15] -39.569897006778476]
Test Case: 139 | Input/Output: [[-80.8445309668215 -97] -177.84453096682148]
Test Case: 140 | Input/Output: [[-24.93978394671413 12] -12.93978394671413]
Test Case: 141 | Input/Output: [[-69.14854175438532 -60] -129.14854175438532]
Test Case: 142 | Input/Output: [[-25.65144282087168 -41] -66.65144282087168]
Test Case: 143 | Input/Output: [[27.784370249531307 -2] 25.784370249531307]
Test Case: 144 | Input/Output: [[31.17503843108622 -48] -16.82496156891378]
Test Case: 145 | Input/Output: [[43.52665199387906 -51] -7.473348006120943]
Test Case: 146 | Input/Output: [[-75.15817121020001 54] -21.15817121020001]
Test Case: 147 | Input/Output: [[95.59242954409518 79] 174.59242954409518]
Test Case: 148 | Input/Output: [[56.96313538064763 -37] 19.96313538064763]
Test Case: 149 | Input/Output: [[-46.10035294949986 29] -17.100352949499857]
Test Case: 150 | Input/Output: [[12.195982081933153 -94] -81.80401791806685]
Test Case: 151 | Input/Output: [[90.9758478679575 -57] 33.9758478679575]
Test Case: 152 | Input/Output: [[-95.1115231879423 84] -11.111523187942296]
Test Case: 153 | Input/Output: [[-0.47973889481478693 42] 41.52026110518521]
Test Case: 154 | Input/Output: [[-24.748614896442064 42] 17.251385103557936]
Test Case: 155 | Input/Output: [[-36.527511151780125 62] 25.472488848219875]
Test Case: 156 | Input/Output: [[-57.681247704072526 26] -31.681247704072526]
Test Case: 157 | Input/Output: [[-44.020114322981875 82] 37.979885677018125]
Test Case: 158 | Input/Output: [[28.573674851806345 35] 63.573674851806345]
Test Case: 159 | Input/Output: [[63.506553489130255 -54] 9.506553489130255]
Test Case: 160 | Input/Output: [[36.98117654491412 27] 63.98117654491412]
Test Case: 161 | Input/Output: [[65.4855092764409 18] 83.4855092764409]
Test Case: 162 | Input/Output: [[-72.99925231928626 -70] -142.99925231928626]
Test Case: 163 | Input/Output: [[-23.84550980821149 -29] -52.84550980821149]
Test Case: 164 | Input/Output: [[-89.15217372050321 78] -11.152173720503214]
Test Case: 165 | Input/Output: [[-18.782204997568968 -88] -106.78220499756897]
Test Case: 166 | Input/Output: [[-75.73771248191763 19] -56.737712481917626]
Test Case: 167 | Input/Output: [[96.48670090114263 0] 96.48670090114263]
Test Case: 168 | Input/Output: [[-0.41450213887874554 -65] -65.41450213887875]
Test Case: 169 | Input/Output: [[64.64930334271688 79] 143.64930334271688]
Test Case: 170 | Input/Output: [[53.21516772671296 -74] -20.784832273287037]
Test Case: 171 | Input/Output: [[-5.30395121602794 -71] -76.30395121602794]
Test Case: 172 | Input/Output: [[35.27237182653903 -95] -59.72762817346097]
Test Case: 173 | Input/Output: [[41.032302357878876 63] 104.03230235787888]
Test Case: 174 | Input/Output: [[92.33084256176383 -37] 55.33084256176383]
Test Case: 175 | Input/Output: [[44.03815878791016 84] 128.03815878791016]
Test Case: 176 | Input/Output: [[34.679559731891004 81] 115.679559731891]
Test Case: 177 | Input/Output: [[79.42173484202507 93] 172.42173484202507]
Test Case: 178 | Input/Output: [[30.17180698487155 -76] -45.82819301512845]
Test Case: 179 | Input/Output: [[-58.105405025508915 -73] -131.1054050255089]
Test Case: 180 | Input/Output: [[-10.76793249166954 34] 23.23206750833046]
Test Case: 181 | Input/Output: [[-60.65995187977595 -67] -127.65995187977595]
Test Case: 182 | Input/Output: [[98.4633537351661 -70] 28.463353735166095]
Test Case: 183 | Input/Output: [[56.521055539984246 -45] 11.521055539984246]
Test Case: 184 | Input/Output: [[70.44386976706798 -61] 9.44386976706798]
Test Case: 185 | Input/Output: [[-80.84907544319498 24] -56.84907544319498]
Test Case: 186 | Input/Output: [[-68.33858151473704 -29] -97.33858151473704]
Test Case: 187 | Input/Output: [[92.3545155746904 -43] 49.354515574690396]
Test Case: 188 | Input/Output: [[39.75327469670333 29] 68.75327469670333]
Test Case: 189 | Input/Output: [[62.67495847826757 -3] 59.67495847826757]
Test Case: 190 | Input/Output: [[55.255594186011365 -41] 14.255594186011365]
Test Case: 191 | Input/Output: [[-11.761155850819534 -95] -106.76115585081953]
Test Case: 192 | Input/Output: [[-76.17477256794045 57] -19.17477256794045]
Test Case: 193 | Input/Output: [[30.256095015292885 -21] 9.256095015292885]
Test Case: 194 | Input/Output: [[82.74082481988273 -21] 61.74082481988273]
Test Case: 195 | Input/Output: [[-74.76564234078104 -33] -107.76564234078104]
Test Case: 196 | Input/Output: [[2.6504717891060494 49] 51.65047178910605]
Test Case: 197 | Input/Output: [[-29.037830003641844 92] 62.962169996358156]
Test Case: 198 | Input/Output: [[-61.34986201838271 82] 20.65013798161729]
Test Case: 199 | Input/Output: [[26.155109592069607 -80] -53.84489040793039]
Test Case: 200 | Input/Output: [[43.87058650188038 84] 127.87058650188038]
Test Case: 201 | Input/Output: [[-72.48177221737053 -81] -153.48177221737052]
Test Case: 202 | Input/Output: [[-11.840894051068744 58] 46.159105948931256]
Test Case: 203 | Input/Output: [[42.302011878190115 -37] 5.302011878190115]
Test Case: 204 | Input/Output: [[-0.25608043959360316 10] 9.743919560406397]
Test Case: 205 | Input/Output: [[17.768334773766867 98] 115.76833477376687]
Test Case: 206 | Input/Output: [[60.57666168280599 78] 138.576661682806]
Test Case: 207 | Input/Output: [[76.87317900611643 57] 133.87317900611643]
Test Case: 208 | Input/Output: [[1.4284065085613094 -28] -26.57159349143869]
Test Case: 209 | Input/Output: [[-68.01559641848847 -54] -122.01559641848847]
Test Case: 210 | Input/Output: [[-45.673871726442485 -96] -141.67387172644248]
Test Case: 211 | Input/Output: [[-86.38397546878042 6] -80.38397546878042]
Test Case: 212 | Input/Output: [[-23.472436561393152 -5] -28.472436561393152]
Test Case: 213 | Input/Output: [[66.19370827529437 84] 150.19370827529437]
Test Case: 214 | Input/Output: [[94.16808065003502 24] 118.16808065003502]
Test Case: 215 | Input/Output: [[31.093426975085038 53] 84.09342697508504]
Test Case: 216 | Input/Output: [[-3.6583044628503103 -63] -66.65830446285031]
Test Case: 217 | Input/Output: [[-37.049871386683805 62] 24.950128613316195]
Test Case: 218 | Input/Output: [[-16.209675892687002 -25] -41.209675892687]
Test Case: 219 | Input/Output: [[85.97086938412878 -34] 51.970869384128775]
Test Case: 220 | Input/Output: [[54.90650761395119 40] 94.90650761395119]
Test Case: 221 | Input/Output: [[25.705047692430142 -59] -33.29495230756986]
Test Case: 222 | Input/Output: [[-24.25714486712603 6] -18.25714486712603]
Test Case: 223 | Input/Output: [[-16.717755307118637 68] 51.28224469288136]
Test Case: 224 | Input/Output: [[-75.62842174596113 -98] -173.62842174596113]
Test Case: 225 | Input/Output: [[11.33707175739147 -84] -72.66292824260853]
Test Case: 226 | Input/Output: [[-59.75122695111761 22] -37.75122695111761]
Test Case: 227 | Input/Output: [[93.84816819844102 89] 182.84816819844102]
Test Case: 228 | Input/Output: [[-27.125796806692264 -65] -92.12579680669226]
Test Case: 229 | Input/Output: [[39.72386565440388 75] 114.72386565440388]
Test Case: 230 | Input/Output: [[6.614536972831303 87] 93.6145369728313]
Test Case: 231 | Input/Output: [[-44.863586063609496 13] -31.863586063609496]
Test Case: 232 | Input/Output: [[-87.29026414130492 -90] -177.29026414130493]
Test Case: 233 | Input/Output: [[80.37122364306393 -77] 3.371223643063928]
Test Case: 234 | Input/Output: [[11.30281319215922 76] 87.30281319215922]
Test Case: 235 | Input/Output: [[52.106646835924465 -79] -26.893353164075535]
Test Case: 236 | Input/Output: [[45.895036056472236 -75] -29.104963943527764]
Test Case: 237 | Input/Output: [[-2.677853668532819 22] 19.32214633146718]
Test Case: 238 | Input/Output: [[18.475137893706076 25] 43.475137893706076]
Test Case: 239 | Input/Output: [[26.43718867678122 -45] -18.56281132321878]
Test Case: 240 | Input/Output: [[-8.526919340847328 10] 1.4730806591526715]
Test Case: 241 | Input/Output: [[-29.532262254216562 -62] -91.53226225421656]
Test Case: 242 | Input/Output: [[-33.88933775112464 75] 41.11066224887536]
Test Case: 243 | Input/Output: [[13.85333554525549 -70] -56.14666445474451]
Test Case: 244 | Input/Output: [[-64.88925990341556 48] -16.889259903415564]
Test Case: 245 | Input/Output: [[-78.97197562711452 -93] -171.97197562711452]
Test Case: 246 | Input/Output: [[97.671908319284 60] 157.671908319284]
Test Case: 247 | Input/Output: [[-49.00926466915057 91] 41.99073533084943]
Test Case: 248 | Input/Output: [[-31.480815492900632 -68] -99.48081549290063]
Test Case: 249 | Input/Output: [[96.97637883740776 52] 148.97637883740776]
Test Case: 250 | Input/Output: [[72.84742669227217 10] 82.84742669227217]
Test Case: 251 | Input/Output: [[-12.327143496196584 3] -9.327143496196584]
Test Case: 252 | Input/Output: [[79.2302623729004 -36] 43.2302623729004]
Test Case: 253 | Input/Output: [[-76.26116670901584 7] -69.26116670901584]
Test Case: 254 | Input/Output: [[34.28431818670671 100] 134.2843181867067]
Test Case: 255 | Input/Output: [[31.24689359818794 41] 72.24689359818794]
Test Case: 256 | Input/Output: [[35.557121078859524 -1] 34.557121078859524]
Test Case: 257 | Input/Output: [[-62.8112658329806 -55] -117.81126583298061]
Test Case: 258 | Input/Output: [[-57.27618470512248 74] 16.723815294877518]
Test Case: 259 | Input/Output: [[-89.7356531371819 -76] -165.73565313718188]
Test Case: 260 | Input/Output: [[-18.380123693706835 -53] -71.38012369370684]
Test Case: 261 | Input/Output: [[20.544905142052514 -29] -8.455094857947486]
Test Case: 262 | Input/Output: [[4.673967603805181 -60] -55.32603239619482]
Test Case: 263 | Input/Output: [[-84.47626506496735 -20] -104.47626506496735]
Test Case: 264 | Input/Output: [[64.92744113811014 25] 89.92744113811014]
Test Case: 265 | Input/Output: [[81.35701851608417 100] 181.35701851608417]
Test Case: 266 | Input/Output: [[-30.405695891970424 -26] -56.405695891970424]
Test Case: 267 | Input/Output: [[-48.769455175352405 -31] -79.7694551753524]
Test Case: 268 | Input/Output: [[-99.86665556731327 40] -59.86665556731327]
Test Case: 269 | Input/Output: [[-62.17718350594228 -20] -82.17718350594228]
Test Case: 270 | Input/Output: [[-48.442408239008 98] 49.557591760992]
Test Case: 271 | Input/Output: [[82.05634508068673 55] 137.05634508068673]
Test Case: 272 | Input/Output: [[-95.9409598789284 -83] -178.9409598789284]
Test Case: 273 | Input/Output: [[-20.314390011604317 44] 23.685609988395683]
Test Case: 274 | Input/Output: [[63.09016112546766 -95] -31.90983887453234]
Test Case: 275 | Input/Output: [[71.85482269175759 -91] -19.14517730824241]
Test Case: 276 | Input/Output: [[29.330368420588 -91] -61.669631579412]
Test Case: 277 | Input/Output: [[81.70826127157682 12] 93.70826127157682]
Test Case: 278 | Input/Output: [[65.73602864783169 -72] -6.263971352168312]
Test Case: 279 | Input/Output: [[-44.142540702560765 -88] -132.14254070256078]
Test Case: 280 | Input/Output: [[-4.120712290632284 29] 24.879287709367716]
Test Case: 281 | Input/Output: [[19.58544200243388 -64] -44.41455799756612]
Test Case: 282 | Input/Output: [[78.29958627774238 40] 118.29958627774238]
Test Case: 283 | Input/Output: [[34.52689954396192 11] 45.52689954396192]
Test Case: 284 | Input/Output: [[64.02841373058408 -12] 52.02841373058408]
Test Case: 285 | Input/Output: [[19.628029622091177 -36] -16.371970377908823]
Test Case: 286 | Input/Output: [[96.46018434495565 -16] 80.46018434495565]
Test Case: 287 | Input/Output: [[23.328912865693567 -25] -1.6710871343064326]
Test Case: 288 | Input/Output: [[35.660696140780544 54] 89.66069614078054]
Test Case: 289 | Input/Output: [[1.502663846146504 79] 80.5026638461465]
Test Case: 290 | Input/Output: [[-25.19849986052367 8] -17.19849986052367]
Test Case: 291 | Input/Output: [[-60.88598398489755 100] 39.11401601510245]
Test Case: 292 | Input/Output: [[15.010403621304434 30] 45.010403621304434]
Test Case: 293 | Input/Output: [[-5.0523572421004985 10] 4.9476427578995015]
Test Case: 294 | Input/Output: [[45.2509812071124 -38] 7.250981207112403]
Test Case: 295 | Input/Output: [[-51.325373151346085 -9] -60.325373151346085]
Test Case: 296 | Input/Output: [[-31.256017903876938 -28] -59.25601790387694]
Test Case: 297 | Input/Output: [[64.35894493796002 29] 93.35894493796002]
Test Case: 298 | Input/Output: [[57.7158565537741 37] 94.7158565537741]
Test Case: 299 | Input/Output: [[87.7006186922315 32] 119.7006186922315]
Test Case: 300 | Input/Output: [[37.185992703631996 -70] -32.814007296368004]
Test Case: 301 | Input/Output: [[94.16282323938682 -64] 30.162823239386825]
Test Case: 302 | Input/Output: [[6.373887008483493 -34] -27.626112991516507]
Test Case: 303 | Input/Output: [[5.311798236138699 -84] -78.6882017638613]
Test Case: 304 | Input/Output: [[57.78893600261975 -12] 45.78893600261975]
Test Case: 305 | Input/Output: [[93.48596401177784 51] 144.48596401177784]
Test Case: 306 | Input/Output: [[73.54151868735886 66] 139.54151868735886]
Test Case: 307 | Input/Output: [[38.048319161400684 63] 101.04831916140068]
Test Case: 308 | Input/Output: [[78.27245186822128 88] 166.27245186822128]
Test Case: 309 | Input/Output: [[-26.76259257956555 -65] -91.76259257956555]
Test Case: 310 | Input/Output: [[-21.10539613225697 84] 62.89460386774303]
Test Case: 311 | Input/Output: [[64.06077513308591 47] 111.06077513308591]
Test Case: 312 | Input/Output: [[-3.920830150784397 -63] -66.9208301507844]
Test Case: 313 | Input/Output: [[89.0073637079532 0] 89.0073637079532]
Test Case: 314 | Input/Output: [[25.84993728815661 -68] -42.15006271184339]
Test Case: 315 | Input/Output: [[-99.77316216710119 57] -42.77316216710119]
Test Case: 316 | Input/Output: [[99.35225967312246 51] 150.35225967312246]
Test Case: 317 | Input/Output: [[-2.467011530614755 -30] -32.467011530614755]
Test Case: 318 | Input/Output: [[-30.594080581411617 12] -18.594080581411617]
Test Case: 319 | Input/Output: [[-37.77490141383151 -47] -84.77490141383151]
Test Case: 320 | Input/Output: [[93.60232805041616 89] 182.60232805041616]
Test Case: 321 | Input/Output: [[-14.251842450193976 -4] -18.251842450193976]
Test Case: 322 | Input/Output: [[55.57873293645903 78] 133.57873293645903]
Test Case: 323 | Input/Output: [[49.02155333270471 26] 75.02155333270471]
Test Case: 324 | Input/Output: [[-15.678524656125845 79] 63.321475343874155]
Test Case: 325 | Input/Output: [[-13.970605309408683 70] 56.02939469059132]
Test Case: 326 | Input/Output: [[96.43444162643618 31] 127.43444162643618]
Test Case: 327 | Input/Output: [[-85.62591754604267 -20] -105.62591754604267]
Test Case: 328 | Input/Output: [[-77.43534300815121 -89] -166.43534300815122]
Test Case: 329 | Input/Output: [[72.16262532751068 -38] 34.16262532751068]
Test Case: 330 | Input/Output: [[55.468388754906016 55] 110.46838875490602]
Test Case: 331 | Input/Output: [[1.7058143062864275 -71] -69.29418569371357]
Test Case: 332 | Input/Output: [[99.03159425694335 -91] 8.03159425694335]
Test Case: 333 | Input/Output: [[-80.74541897919205 -35] -115.74541897919205]
Test Case: 334 | Input/Output: [[55.971857071876144 -63] -7.028142928123856]
Test Case: 335 | Input/Output: [[-21.323628646289222 -42] -63.32362864628922]
Test Case: 336 | Input/Output: [[38.97319122509245 64] 102.97319122509245]
Test Case: 337 | Input/Output: [[75.14608748055295 -37] 38.14608748055295]
Test Case: 338 | Input/Output: [[7.153297903052064 16] 23.153297903052064]
Test Case: 339 | Input/Output: [[-16.122115417752795 58] 41.877884582247205]
Test Case: 340 | Input/Output: [[23.705372688758786 15] 38.705372688758786]
Test Case: 341 | Input/Output: [[-56.57620848247269 -43] -99.57620848247268]
Test Case: 342 | Input/Output: [[-42.762965893327 69] 26.237034106673]
Test Case: 343 | Input/Output: [[-45.52611392034977 65] 19.473886079650228]
Test Case: 344 | Input/Output: [[-84.00150827570363 -77] -161.00150827570363]
Test Case: 345 | Input/Output: [[-93.57770952350026 -90] -183.57770952350026]
Test Case: 346 | Input/Output: [[-66.53842134292816 28] -38.53842134292816]
Test Case: 347 | Input/Output: [[50.89701181988963 -92] -41.10298818011037]
Test Case: 348 | Input/Output: [[98.11062630716768 39] 137.11062630716768]
Test Case: 349 | Input/Output: [[-84.87506085973943 -29] -113.87506085973943]
Test Case: 350 | Input/Output: [[-8.630908216072612 89] 80.36909178392739]
Test Case: 351 | Input/Output: [[-26.374777351699436 -44] -70.37477735169944]
Test Case: 352 | Input/Output: [[31.12295928023795 8] 39.12295928023795]
Test Case: 353 | Input/Output: [[-31.02298782547757 -87] -118.02298782547757]
Test Case: 354 | Input/Output: [[-50.24447513881858 -35] -85.24447513881859]
Test Case: 355 | Input/Output: [[-71.05236239576843 3] -68.05236239576843]
Test Case: 356 | Input/Output: [[-32.251025033829464 -53] -85.25102503382946]
Test Case: 357 | Input/Output: [[95.29214568907764 -78] 17.292145689077643]
Test Case: 358 | Input/Output: [[50.83075296807081 56] 106.83075296807081]
Test Case: 359 | Input/Output: [[83.60562906228662 -11] 72.60562906228662]
Test Case: 360 | Input/Output: [[81.17332068260245 23] 104.17332068260245]
Test Case: 361 | Input/Output: [[8.10095555342511 52] 60.10095555342511]
Test Case: 362 | Input/Output: [[0.15837679064090082 -19] -18.8416232093591]
Test Case: 363 | Input/Output: [[20.46304372009027 -43] -22.53695627990973]
Test Case: 364 | Input/Output: [[0.9749440241253211 -79] -78.02505597587468]
Test Case: 365 | Input/Output: [[36.32169368448271 67] 103.32169368448271]
Test Case: 366 | Input/Output: [[-57.46245467267463 -15] -72.46245467267462]
Test Case: 367 | Input/Output: [[-48.30754582955412 -95] -143.30754582955413]
Test Case: 368 | Input/Output: [[15.70687258136087 -38] -22.29312741863913]
Test Case: 369 | Input/Output: [[60.93966915140874 69] 129.93966915140874]
Test Case: 370 | Input/Output: [[46.37912926429772 79] 125.37912926429772]
Test Case: 371 | Input/Output: [[76.83825594850882 91] 167.83825594850882]
Test Case: 372 | Input/Output: [[90.45798293489088 98] 188.45798293489088]
Test Case: 373 | Input/Output: [[60.44814452534084 -68] -7.551855474659163]
Test Case: 374 | Input/Output: [[-98.94794297863653 -38] -136.94794297863655]
Test Case: 375 | Input/Output: [[42.98952434950104 -5] 37.98952434950104]
Test Case: 376 | Input/Output: [[-48.445887990942715 -36] -84.44588799094271]
Test Case: 377 | Input/Output: [[-46.4662633567074 53] 6.533736643292599]
Test Case: 378 | Input/Output: [[7.426022399563976 -40] -32.573977600436024]
Test Case: 379 | Input/Output: [[-3.2626020870480943 -38] -41.262602087048094]
Test Case: 380 | Input/Output: [[88.2191657079891 66] 154.2191657079891]
Test Case: 381 | Input/Output: [[63.05779448863248 26] 89.05779448863248]
Test Case: 382 | Input/Output: [[-48.21728029354959 36] -12.217280293549592]
Test Case: 383 | Input/Output: [[36.66639438028625 88] 124.66639438028625]
Test Case: 384 | Input/Output: [[23.45426367231731 -21] 2.4542636723173104]
Test Case: 385 | Input/Output: [[-59.21863362128739 -25] -84.21863362128738]
Test Case: 386 | Input/Output: [[37.783359149700715 55] 92.78335914970071]
Test Case: 387 | Input/Output: [[15.437289451098096 -58] -42.562710548901904]
Test Case: 388 | Input/Output: [[34.355012150016165 -75] -40.644987849983835]
Test Case: 389 | Input/Output: [[97.98371451360478 64] 161.98371451360478]
Test Case: 390 | Input/Output: [[98.30570976452765 23] 121.30570976452765]
Test Case: 391 | Input/Output: [[51.391389395699036 -11] 40.391389395699036]
Test Case: 392 | Input/Output: [[-60.34593599411784 -61] -121.34593599411784]
Test Case: 393 | Input/Output: [[-36.90100614011753 -13] -49.90100614011753]
Test Case: 394 | Input/Output: [[59.405523419932194 -86] -26.594476580067806]
Test Case: 395 | Input/Output: [[-73.1705326710346 -19] -92.1705326710346]
Test Case: 396 | Input/Output: [[86.89459928940258 -10] 76.89459928940258]
Test Case: 397 | Input/Output: [[16.27895376720747 16] 32.27895376720747]
Test Case: 398 | Input/Output: [[-0.7954261759441295 18] 17.20457382405587]
Test Case: 399 | Input/Output: [[-98.737958123822 61] -37.737958123822]
Test Case: 400 | Input/Output: [[64.09685517645494 -1] 63.09685517645494]
Test Case: 401 | Input/Output: [[43.23984940412848 78] 121.23984940412848]
Test Case: 402 | Input/Output: [[91.62770183359771 -4] 87.62770183359771]
Test Case: 403 | Input/Output: [[81.38355881157347 24] 105.38355881157347]
Test Case: 404 | Input/Output: [[-47.94014818431729 71] 23.059851815682713]
Test Case: 405 | Input/Output: [[-8.660436226682577 4] -4.660436226682577]
Test Case: 406 | Input/Output: [[-48.346319919472826 35] -13.346319919472826]
Test Case: 407 | Input/Output: [[-2.912198009538173 -36] -38.91219800953817]
Test Case: 408 | Input/Output: [[-10.320875720889859 64] 53.67912427911014]
Test Case: 409 | Input/Output: [[-14.618931310616688 -33] -47.61893131061669]
Test Case: 410 | Input/Output: [[93.84297860904468 -61] 32.84297860904468]
Test Case: 411 | Input/Output: [[-57.14298887849836 -14] -71.14298887849836]
Test Case: 412 | Input/Output: [[29.88497946374366 89] 118.88497946374366]
Test Case: 413 | Input/Output: [[42.51859077683724 35] 77.51859077683724]
Test Case: 414 | Input/Output: [[93.70488232104805 -47] 46.704882321048046]
Test Case: 415 | Input/Output: [[-0.015986105093787728 12] 11.984013894906212]
Test Case: 416 | Input/Output: [[9.803023013239695 21] 30.803023013239695]
Test Case: 417 | Input/Output: [[-13.818437950834067 59] 45.18156204916593]
Test Case: 418 | Input/Output: [[49.87719680708503 -99] -49.12280319291497]
Test Case: 419 | Input/Output: [[-13.456713408106609 -7] -20.45671340810661]
Test Case: 420 | Input/Output: [[-21.09184872904666 -19] -40.09184872904666]
Test Case: 421 | Input/Output: [[-96.86008144851561 52] -44.860081448515615]
Test Case: 422 | Input/Output: [[43.08268133519405 29] 72.08268133519405]
Test Case: 423 | Input/Output: [[-96.00878944620068 -30] -126.00878944620068]
Test Case: 424 | Input/Output: [[16.805087772537263 100] 116.80508777253726]
Test Case: 425 | Input/Output: [[-49.95029367097252 14] -35.95029367097252]
Test Case: 426 | Input/Output: [[31.104125162418597 0] 31.104125162418597]
Test Case: 427 | Input/Output: [[21.317904006961513 72] 93.31790400696151]
Test Case: 428 | Input/Output: [[50.268022454495565 -98] -47.731977545504435]
Test Case: 429 | Input/Output: [[35.97146581931722 58] 93.97146581931722]
Test Case: 430 | Input/Output: [[81.29444698365347 -97] -15.705553016346528]
Test Case: 431 | Input/Output: [[-52.73787188915784 70] 17.262128110842163]
Test Case: 432 | Input/Output: [[-51.07089499062503 49] -2.0708949906250282]
Test Case: 433 | Input/Output: [[-58.606856220792004 -89] -147.606856220792]
Test Case: 434 | Input/Output: [[88.37770413122831 84] 172.3777041312283]
Test Case: 435 | Input/Output: [[-48.441370678943386 -14] -62.441370678943386]
Test Case: 436 | Input/Output: [[23.12656663228725 35] 58.12656663228725]
Test Case: 437 | Input/Output: [[83.565877330116 7] 90.565877330116]
Test Case: 438 | Input/Output: [[-64.66782711991769 -15] -79.66782711991769]
Test Case: 439 | Input/Output: [[53.89511010160578 58] 111.89511010160578]
Test Case: 440 | Input/Output: [[-44.43025276221626 63] 18.569747237783737]
Test Case: 441 | Input/Output: [[-97.11619582464108 49] -48.11619582464108]
Test Case: 442 | Input/Output: [[73.2724902378614 73] 146.2724902378614]
Test Case: 443 | Input/Output: [[83.21946956424725 -90] -6.780530435752752]
Test Case: 444 | Input/Output: [[-80.80096791747556 -97] -177.80096791747556]
Test Case: 445 | Input/Output: [[-18.5794477317383 69] 50.4205522682617]
Test Case: 446 | Input/Output: [[55.11321290101054 -39] 16.11321290101054]
Test Case: 447 | Input/Output: [[40.38861392313356 -67] -26.611386076866438]
Test Case: 448 | Input/Output: [[-74.73444298423952 29] -45.73444298423952]
Test Case: 449 | Input/Output: [[-24.850067099283677 -71] -95.85006709928368]
Test Case: 450 | Input/Output: [[21.4840621336984 -26] -4.5159378663015985]
Test Case: 451 | Input/Output: [[34.702322152169984 -94] -59.297677847830016]
Test Case: 452 | Input/Output: [[76.62881309210343 -98] -21.371186907896572]
Test Case: 453 | Input/Output: [[-38.47336894550417 -99] -137.47336894550418]
Test Case: 454 | Input/Output: [[17.203188541815464 -69] -51.796811458184536]
Test Case: 455 | Input/Output: [[-67.13699456561575 -11] -78.13699456561575]
Test Case: 456 | Input/Output: [[-31.301414189123307 82] 50.69858581087669]
Test Case: 457 | Input/Output: [[90.45428492651013 27] 117.45428492651013]
Test Case: 458 | Input/Output: [[-43.56026658730925 56] 12.43973341269075]
Test Case: 459 | Input/Output: [[7.648832036774593 -66] -58.35116796322541]
Test Case: 460 | Input/Output: [[-73.62432788563247 24] -49.62432788563247]
Test Case: 461 | Input/Output: [[-90.29594800800302 -22] -112.29594800800302]
Test Case: 462 | Input/Output: [[-93.10685672059968 3] -90.10685672059968]
Test Case: 463 | Input/Output: [[43.36563506535967 83] 126.36563506535967]
Test Case: 464 | Input/Output: [[-92.6191855962976 2] -90.6191855962976]
Test Case: 465 | Input/Output: [[-66.53389287173172 26] -40.53389287173172]
Test Case: 466 | Input/Output: [[94.08444248289211 54] 148.08444248289211]
Test Case: 467 | Input/Output: [[-79.08120228202935 39] -40.08120228202935]
Test Case: 468 | Input/Output: [[-7.045811481400094 -76] -83.0458114814001]
Test Case: 469 | Input/Output: [[-86.54452189380368 44] -42.544521893803676]
Test Case: 470 | Input/Output: [[-10.112846792111043 27] 16.887153207888957]
Test Case: 471 | Input/Output: [[8.849385648651761 85] 93.84938564865176]
Test Case: 472 | Input/Output: [[1.1937889703895337 -13] -11.806211029610466]
Test Case: 473 | Input/Output: [[-97.60510436555283 -63] -160.60510436555285]
Test Case: 474 | Input/Output: [[0.4344594673399058 67] 67.4344594673399]
Test Case: 475 | Input/Output: [[65.55846649913542 -4] 61.55846649913542]
Test Case: 476 | Input/Output: [[-40.774992615590456 -43] -83.77499261559046]
Test Case: 477 | Input/Output: [[-75.39263931249714 54] -21.39263931249714]
Test Case: 478 | Input/Output: [[-41.115809899665564 21] -20.115809899665564]
Test Case: 479 | Input/Output: [[-49.6727452100634 -47] -96.6727452100634]
Test Case: 480 | Input/Output: [[69.97636300959175 -31] 38.97636300959175]
Test Case: 481 | Input/Output: [[-33.545068630574605 3] -30.545068630574605]
Test Case: 482 | Input/Output: [[33.07968084713161 -32] 1.0796808471316126]
Test Case: 483 | Input/Output: [[8.376408252484254 22] 30.376408252484254]
Test Case: 484 | Input/Output: [[-36.80795343305985 19] -17.80795343305985]
Test Case: 485 | Input/Output: [[4.653576739534614 -76] -71.34642326046539]
Test Case: 486 | Input/Output: [[74.06403688179307 -100] -25.935963118206928]
Test Case: 487 | Input/Output: [[-77.9045257730235 -71] -148.9045257730235]
Test Case: 488 | Input/Output: [[13.62060772036557 86] 99.62060772036557]
Test Case: 489 | Input/Output: [[-40.55457607416824 -99] -139.55457607416824]
Test Case: 490 | Input/Output: [[-35.69526528210898 89] 53.30473471789102]
Test Case: 491 | Input/Output: [[-14.799005489222793 -47] -61.79900548922279]
Test Case: 492 | Input/Output: [[-39.230969959861106 83] 43.769030040138894]
Test Case: 493 | Input/Output: [[-53.53308562518792 46] -7.533085625187923]
Test Case: 494 | Input/Output: [[46.22139871189722 -26] 20.221398711897223]
Test Case: 495 | Input/Output: [[92.40908088958034 -7] 85.40908088958034]
Test Case: 496 | Input/Output: [[-16.948044317162967 28] 11.051955682837033]
Test Case: 497 | Input/Output: [[-80.05769334915136 62] -18.057693349151364]
Test Case: 498 | Input/Output: [[-81.54195423958343 -73] -154.54195423958345]
Test Case: 499 | Input/Output: [[68.31162012011256 0] 68.31162012011256]
Test Case: 500 | Input/Output: [[42.93167223731277 -90] -47.06832776268723]
Test Case: 501 | Input/Output: [[-63.216552071507294 -15] -78.2165520715073]
Test Case: 502 | Input/Output: [[83.99849079731052 79] 162.99849079731052]
Test Case: 503 | Input/Output: [[-2.1600546105472205 72] 69.83994538945278]
Test Case: 504 | Input/Output: [[85.39367039505925 100] 185.39367039505925]
Test Case: 505 | Input/Output: [[-57.48355794101485 31] -26.48355794101485]
Test Case: 506 | Input/Output: [[-30.364325817019733 -2] -32.36432581701973]
Test Case: 507 | Input/Output: [[89.43894168878708 4] 93.43894168878708]
Test Case: 508 | Input/Output: [[73.97729051888382 86] 159.97729051888382]
Test Case: 509 | Input/Output: [[-62.19973168670079 -15] -77.19973168670079]
Test Case: 510 | Input/Output: [[54.77725730160935 30] 84.77725730160935]
Test Case: 511 | Input/Output: [[-71.6260415882749 -77] -148.62604158827492]
Test Case: 512 | Input/Output: [[79.55535368577227 -18] 61.555353685772275]
Test Case: 513 | Input/Output: [[-24.93575791915002 35] 10.06424208084998]
Test Case: 514 | Input/Output: [[-36.0465786454705 -34] -70.0465786454705]
Test Case: 515 | Input/Output: [[2.7650722584756267 -93] -90.23492774152437]
Test Case: 516 | Input/Output: [[4.782161790156962 36] 40.78216179015696]
Test Case: 517 | Input/Output: [[66.22243822115527 83] 149.22243822115527]
Test Case: 518 | Input/Output: [[67.72578024183466 48] 115.72578024183466]
Test Case: 519 | Input/Output: [[70.6614457198614 -76] -5.338554280138595]
Test Case: 520 | Input/Output: [[22.879533673263836 -70] -47.120466326736164]
Test Case: 521 | Input/Output: [[-33.690341769036024 2] -31.690341769036024]
Test Case: 522 | Input/Output: [[-62.55549216167859 10] -52.55549216167859]
Test Case: 523 | Input/Output: [[-46.11546815246401 -93] -139.11546815246402]
Test Case: 524 | Input/Output: [[-41.006914182447886 -20] -61.006914182447886]
Test Case: 525 | Input/Output: [[16.71964099838877 70] 86.71964099838877]
Test Case: 526 | Input/Output: [[95.71127626979703 -96] -0.2887237302029746]
Test Case: 527 | Input/Output: [[-58.65843006132481 55] -3.6584300613248075]
Test Case: 528 | Input/Output: [[-59.5411011396239 6] -53.5411011396239]
Test Case: 529 | Input/Output: [[-13.27629163777388 -86] -99.27629163777388]
Test Case: 530 | Input/Output: [[23.437253637225467 7] 30.437253637225467]
Test Case: 531 | Input/Output: [[-86.95173316008575 -9] -95.95173316008575]
Test Case: 532 | Input/Output: [[81.70295339822908 -30] 51.702953398229084]
Test Case: 533 | Input/Output: [[62.44790026666411 31] 93.4479002666641]
Test Case: 534 | Input/Output: [[-52.73733131867002 -72] -124.73733131867002]
Test Case: 535 | Input/Output: [[35.45893284683237 -82] -46.54106715316763]
Test Case: 536 | Input/Output: [[-89.70022461093001 -43] -132.70022461093]
Test Case: 537 | Input/Output: [[70.27927853168032 -30] 40.27927853168032]
Test Case: 538 | Input/Output: [[-0.5217020731496262 10] 9.478297926850374]
Test Case: 539 | Input/Output: [[-36.68463324750395 99] 62.31536675249605]
Test Case: 540 | Input/Output: [[76.91505009221126 -57] 19.91505009221126]
Test Case: 541 | Input/Output: [[45.74768432845835 -47] -1.252315671541652]
Test Case: 542 | Input/Output: [[79.33818828688118 -64] 15.338188286881177]
Test Case: 543 | Input/Output: [[-33.29691111679341 -12] -45.29691111679341]
Test Case: 544 | Input/Output: [[-0.41438179825841814 -97] -97.41438179825842]
Test Case: 545 | Input/Output: [[-39.77678834888323 -50] -89.77678834888323]
Test Case: 546 | Input/Output: [[2.240591415695306 -5] -2.759408584304694]
Test Case: 547 | Input/Output: [[4.3935482072271554 66] 70.39354820722716]
Test Case: 548 | Input/Output: [[-24.742216528078018 -69] -93.74221652807802]
Test Case: 549 | Input/Output: [[-96.43972680164887 58] -38.439726801648874]
Test Case: 550 | Input/Output: [[19.289906681124293 -39] -19.710093318875707]
Test Case: 551 | Input/Output: [[-10.618548909932343 9] -1.6185489099323433]
Test Case: 552 | Input/Output: [[47.57554923631329 40] 87.5755492363133]
Test Case: 553 | Input/Output: [[-18.663519891050555 -61] -79.66351989105056]
Test Case: 554 | Input/Output: [[-4.353655934377642 47] 42.64634406562236]
Test Case: 555 | Input/Output: [[-38.47870221512459 -65] -103.4787022151246]
Test Case: 556 | Input/Output: [[77.46308126253706 60] 137.46308126253706]
Test Case: 557 | Input/Output: [[-77.31881460927411 -66] -143.3188146092741]
Test Case: 558 | Input/Output: [[-36.29850163801785 -31] -67.29850163801785]
Test Case: 559 | Input/Output: [[-25.494082931455836 94] 68.50591706854416]
Test Case: 560 | Input/Output: [[22.547636537176288 76] 98.54763653717629]
Test Case: 561 | Input/Output: [[41.130535222534604 -33] 8.130535222534604]
Test Case: 562 | Input/Output: [[-50.08099118344369 20] -30.080991183443693]
Test Case: 563 | Input/Output: [[58.582232591365226 -50] 8.582232591365226]
Test Case: 564 | Input/Output: [[-88.98793940590237 11] -77.98793940590237]
Test Case: 565 | Input/Output: [[-34.71212064059431 -24] -58.71212064059431]
Test Case: 566 | Input/Output: [[74.75398410876167 75] 149.75398410876167]
Test Case: 567 | Input/Output: [[-61.12030561711599 39] -22.12030561711599]
Test Case: 568 | Input/Output: [[90.61205086020178 81] 171.61205086020178]
Test Case: 569 | Input/Output: [[7.02386929160086 -20] -12.97613070839914]
Test Case: 570 | Input/Output: [[83.2729784486468 -61] 22.272978448646796]
Test Case: 571 | Input/Output: [[-76.32264817338377 -1] -77.32264817338377]
Test Case: 572 | Input/Output: [[-74.03228856999493 94] 19.967711430005068]
Test Case: 573 | Input/Output: [[-95.86228088038634 89] -6.862280880386336]
Test Case: 574 | Input/Output: [[-79.87410141376728 50] -29.874101413767278]
Test Case: 575 | Input/Output: [[62.19954976814154 -1] 61.19954976814154]
Test Case: 576 | Input/Output: [[42.26502229006789 53] 95.26502229006789]
Test Case: 577 | Input/Output: [[-24.60003662537457 31] 6.399963374625429]
Test Case: 578 | Input/Output: [[7.266750697293148 20] 27.266750697293148]
Test Case: 579 | Input/Output: [[85.24811445840712 52] 137.24811445840712]
Test Case: 580 | Input/Output: [[48.229007588276716 -70] -21.770992411723284]
Test Case: 581 | Input/Output: [[39.68356225152928 68] 107.68356225152928]
Test Case: 582 | Input/Output: [[98.61411447217671 -84] 14.61411447217671]
Test Case: 583 | Input/Output: [[39.76318839135325 -9] 30.763188391353253]
Test Case: 584 | Input/Output: [[-93.66290536369746 -52] -145.66290536369746]
Test Case: 585 | Input/Output: [[28.100151516303725 58] 86.10015151630373]
Test Case: 586 | Input/Output: [[54.40699802632898 -61] -6.593001973671022]
Test Case: 587 | Input/Output: [[25.93756750232889 65] 90.93756750232889]
Test Case: 588 | Input/Output: [[95.57205079096812 30] 125.57205079096812]
Test Case: 589 | Input/Output: [[-38.91961579003143 90] 51.08038420996857]
Test Case: 590 | Input/Output: [[81.81420363557137 26] 107.81420363557137]
Test Case: 591 | Input/Output: [[-59.06892007636022 44] -15.068920076360222]
Test Case: 592 | Input/Output: [[59.442918193483195 -76] -16.557081806516805]
Test Case: 593 | Input/Output: [[62.519125673976134 14] 76.51912567397613]
Test Case: 594 | Input/Output: [[-36.62887056862889 65] 28.37112943137111]
Test Case: 595 | Input/Output: [[54.98366093002025 -38] 16.98366093002025]
Test Case: 596 | Input/Output: [[-77.38487809758941 59] -18.384878097589407]
Test Case: 597 | Input/Output: [[-9.279129436482108 78] 68.72087056351789]
Test Case: 598 | Input/Output: [[46.54871812260504 71] 117.54871812260504]
Test Case: 599 | Input/Output: [[19.154809727126093 96] 115.15480972712609]
Test Case: 600 | Input/Output: [[-81.55172406139009 37] -44.55172406139009]
Test Case: 601 | Input/Output: [[51.79191592271195 -20] 31.79191592271195]
Test Case: 602 | Input/Output: [[94.80202614094515 -64] 30.802026140945145]
Test Case: 603 | Input/Output: [[27.413532069248305 -37] -9.586467930751695]
Test Case: 604 | Input/Output: [[35.303165952096094 11] 46.303165952096094]
Test Case: 605 | Input/Output: [[-69.00523053253931 26] -43.005230532539315]
Test Case: 606 | Input/Output: [[-53.74179968050519 -83] -136.74179968050518]
Test Case: 607 | Input/Output: [[86.15517299315499 65] 151.155172993155]
Test Case: 608 | Input/Output: [[-47.01701397195039 -56] -103.01701397195039]
Test Case: 609 | Input/Output: [[-76.42089854380605 -98] -174.42089854380606]
Test Case: 610 | Input/Output: [[-62.72683229715614 -14] -76.72683229715614]
Test Case: 611 | Input/Output: [[49.89872713226427 -51] -1.1012728677357302]
Test Case: 612 | Input/Output: [[-36.80900927026238 23] -13.80900927026238]
Test Case: 613 | Input/Output: [[-24.580366275486213 49] 24.419633724513787]
Test Case: 614 | Input/Output: [[94.60777456488867 -23] 71.60777456488867]
Test Case: 615 | Input/Output: [[-36.5887908036961 72] 35.4112091963039]
Test Case: 616 | Input/Output: [[-5.040227835188318 43] 37.95977216481168]
Test Case: 617 | Input/Output: [[-17.94784078940974 -90] -107.94784078940974]
Test Case: 618 | Input/Output: [[21.929850139903564 -38] -16.070149860096436]
Test Case: 619 | Input/Output: [[45.62184324970468 44] 89.62184324970468]
Test Case: 620 | Input/Output: [[-59.02388758703425 -51] -110.02388758703425]
Test Case: 621 | Input/Output: [[-87.6671780265 -43] -130.66717802649998]
Test Case: 622 | Input/Output: [[-42.61327237426187 83] 40.38672762573813]
Test Case: 623 | Input/Output: [[92.87486313251912 55] 147.87486313251912]
Test Case: 624 | Input/Output: [[-46.666777855466044 -13] -59.666777855466044]
Test Case: 625 | Input/Output: [[-96.49179798865323 -87] -183.49179798865322]
Test Case: 626 | Input/Output: [[-96.11595787214478 89] -7.115957872144776]
Test Case: 627 | Input/Output: [[-1.1749731728089898 94] 92.82502682719101]
Test Case: 628 | Input/Output: [[11.22262584198424 51] 62.22262584198424]
Test Case: 629 | Input/Output: [[-29.931934570423294 -61] -90.9319345704233]
Test Case: 630 | Input/Output: [[-75.75017698918447 -66] -141.75017698918447]
Test Case: 631 | Input/Output: [[-3.33386821757189 -21] -24.33386821757189]
Test Case: 632 | Input/Output: [[-87.74837124174464 91] 3.2516287582553645]
Test Case: 633 | Input/Output: [[-5.0670472020355675 -6] -11.067047202035567]
Test Case: 634 | Input/Output: [[-77.07331637801252 -35] -112.07331637801252]
Test Case: 635 | Input/Output: [[2.172073635861807 -96] -93.8279263641382]
Test Case: 636 | Input/Output: [[61.90094374202769 -8] 53.90094374202769]
Test Case: 637 | Input/Output: [[-86.46795888536103 -36] -122.46795888536103]
Test Case: 638 | Input/Output: [[67.72834947614598 73] 140.72834947614598]
Test Case: 639 | Input/Output: [[-58.40270050810052 94] 35.59729949189948]
Test Case: 640 | Input/Output: [[74.22292388419564 -59] 15.222923884195637]
Test Case: 641 | Input/Output: [[-79.09644376094691 -33] -112.09644376094691]
Test Case: 642 | Input/Output: [[42.260392004308954 39] 81.26039200430895]
Test Case: 643 | Input/Output: [[46.96384914952475 15] 61.96384914952475]
Test Case: 644 | Input/Output: [[81.17285781001681 65] 146.1728578100168]
Test Case: 645 | Input/Output: [[90.06258869144298 49] 139.06258869144298]
Test Case: 646 | Input/Output: [[-15.125551283257565 38] 22.874448716742435]
Test Case: 647 | Input/Output: [[67.34062863327085 -57] 10.340628633270853]
Test Case: 648 | Input/Output: [[17.904251212623095 84] 101.9042512126231]
Test Case: 649 | Input/Output: [[-89.43874949768214 -100] -189.43874949768212]
Test Case: 650 | Input/Output: [[-76.31687417255083 -50] -126.31687417255083]
Test Case: 651 | Input/Output: [[-9.553315098818558 -13] -22.55331509881856]
Test Case: 652 | Input/Output: [[-62.8141281708281 40] -22.8141281708281]
Test Case: 653 | Input/Output: [[31.663951999973648 81] 112.66395199997365]
Test Case: 654 | Input/Output: [[-64.48270717744762 -7] -71.48270717744762]
Test Case: 655 | Input/Output: [[-92.27663858542353 -31] -123.27663858542353]
Test Case: 656 | Input/Output: [[28.884408612754527 34] 62.88440861275453]
Test Case: 657 | Input/Output: [[60.119495789294064 -23] 37.119495789294064]
Test Case: 658 | Input/Output: [[53.66228445118551 -60] -6.3377155488144865]
Test Case: 659 | Input/Output: [[87.01123490400079 87] 174.0112349040008]
Test Case: 660 | Input/Output: [[42.74538474946689 -1] 41.74538474946689]
Test Case: 661 | Input/Output: [[55.01867482824602 -38] 17.01867482824602]
Test Case: 662 | Input/Output: [[-55.48414440115834 -43] -98.48414440115835]
Test Case: 663 | Input/Output: [[-53.396684212874376 -72] -125.39668421287438]
Test Case: 664 | Input/Output: [[71.74020870235984 61] 132.74020870235984]
Test Case: 665 | Input/Output: [[65.43214669395451 -70] -4.5678533060454924]
Test Case: 666 | Input/Output: [[42.88080461024478 0] 42.88080461024478]
Test Case: 667 | Input/Output: [[13.094553394177282 84] 97.09455339417728]
Test Case: 668 | Input/Output: [[-49.4640948230574 -51] -100.4640948230574]
Test Case: 669 | Input/Output: [[-23.310616639278138 -62] -85.31061663927814]
Test Case: 670 | Input/Output: [[-13.853669290953661 -47] -60.85366929095366]
Test Case: 671 | Input/Output: [[-22.025216136095764 -40] -62.025216136095764]
Test Case: 672 | Input/Output: [[-33.24521665941546 54] 20.754783340584538]
Test Case: 673 | Input/Output: [[-98.34130679012164 7] -91.34130679012164]
Test Case: 674 | Input/Output: [[-35.07576751023973 64] 28.92423248976027]
Test Case: 675 | Input/Output: [[-26.803885522472527 -15] -41.80388552247253]
Test Case: 676 | Input/Output: [[15.740125862360514 -100] -84.25987413763949]
Test Case: 677 | Input/Output: [[50.94216901859235 -94] -43.05783098140765]
Test Case: 678 | Input/Output: [[-86.31113696201449 -87] -173.31113696201447]
Test Case: 679 | Input/Output: [[-91.66086914087961 -39] -130.6608691408796]
Test Case: 680 | Input/Output: [[-84.47236311961524 37] -47.47236311961524]
Test Case: 681 | Input/Output: [[22.67586019744003 -32] -9.32413980255997]
Test Case: 682 | Input/Output: [[-67.8349917159928 63] -4.8349917159928]
Test Case: 683 | Input/Output: [[47.43983597147013 88] 135.43983597147013]
Test Case: 684 | Input/Output: [[-86.77294693436176 -58] -144.77294693436176]
Test Case: 685 | Input/Output: [[-68.37381175828554 13] -55.37381175828554]
Test Case: 686 | Input/Output: [[-13.880839527039427 57] 43.11916047296057]
Test Case: 687 | Input/Output: [[30.22385411582013 -62] -31.77614588417987]
Test Case: 688 | Input/Output: [[69.73120944440763 -47] 22.731209444407625]
Test Case: 689 | Input/Output: [[9.31054258210824 -24] -14.68945741789176]
Test Case: 690 | Input/Output: [[84.76187370140408 18] 102.76187370140408]
Test Case: 691 | Input/Output: [[74.10366910196478 17] 91.10366910196478]
Test Case: 692 | Input/Output: [[-4.705213514845667 -100] -104.70521351484567]
Test Case: 693 | Input/Output: [[-15.701885188513614 41] 25.298114811486386]
Test Case: 694 | Input/Output: [[59.825255690713135 -38] 21.825255690713135]
Test Case: 695 | Input/Output: [[66.37253143029324 -36] 30.372531430293236]
Test Case: 696 | Input/Output: [[22.116808580088914 23] 45.116808580088914]
Test Case: 697 | Input/Output: [[16.159469189872453 -87] -70.84053081012755]
Test Case: 698 | Input/Output: [[-37.126905682356636 -15] -52.126905682356636]
Test Case: 699 | Input/Output: [[21.20574647723255 -44] -22.79425352276745]
Test Case: 700 | Input/Output: [[-25.94176997813193 58] 32.05823002186807]
Test Case: 701 | Input/Output: [[-73.56733222501408 -21] -94.56733222501408]
Test Case: 702 | Input/Output: [[16.5513677988328 -6] 10.5513677988328]
Test Case: 703 | Input/Output: [[81.05362420179415 66] 147.05362420179415]
Test Case: 704 | Input/Output: [[87.58535313867836 -86] 1.5853531386783573]
Test Case: 705 | Input/Output: [[-68.00144089244667 -56] -124.00144089244667]
Test Case: 706 | Input/Output: [[75.50770687690661 -71] 4.50770687690661]
Test Case: 707 | Input/Output: [[81.57632319665365 -2] 79.57632319665365]
Test Case: 708 | Input/Output: [[81.55973048558965 49] 130.55973048558965]
Test Case: 709 | Input/Output: [[-82.19192702793406 -2] -84.19192702793406]
Test Case: 710 | Input/Output: [[-46.430868009722715 77] 30.569131990277285]
Test Case: 711 | Input/Output: [[-1.3289018838125628 67] 65.67109811618744]
Test Case: 712 | Input/Output: [[33.20611967931069 0] 33.20611967931069]
Test Case: 713 | Input/Output: [[-83.75860860028929 85] 1.2413913997107073]
Test Case: 714 | Input/Output: [[41.77255040492531 -24] 17.772550404925312]
Test Case: 715 | Input/Output: [[93.91256750592967 -14] 79.91256750592967]
Test Case: 716 | Input/Output: [[79.97131351634417 35] 114.97131351634417]
Test Case: 717 | Input/Output: [[54.42659120037695 -61] -6.573408799623053]
Test Case: 718 | Input/Output: [[-33.28649664961658 74] 40.71350335038342]
Test Case: 719 | Input/Output: [[-91.6810224351332 -21] -112.6810224351332]
Test Case: 720 | Input/Output: [[74.45626716722074 100] 174.45626716722074]
Test Case: 721 | Input/Output: [[18.7424124062713 76] 94.7424124062713]
Test Case: 722 | Input/Output: [[-90.45694078084065 40] -50.456940780840654]
Test Case: 723 | Input/Output: [[24.47146059693857 -22] 2.47146059693857]
Test Case: 724 | Input/Output: [[11.935142435531418 95] 106.93514243553142]
Test Case: 725 | Input/Output: [[-2.7266223030385532 38] 35.27337769696145]
Test Case: 726 | Input/Output: [[-8.182384949225323 48] 39.81761505077468]
Test Case: 727 | Input/Output: [[11.352057117102248 -69] -57.64794288289775]
Test Case: 728 | Input/Output: [[13.34869348150957 -100] -86.65130651849043]
Test Case: 729 | Input/Output: [[-80.70159877433923 76] -4.701598774339232]
Test Case: 730 | Input/Output: [[60.49470215282605 -1] 59.49470215282605]
Test Case: 731 | Input/Output: [[15.228941874618855 -5] 10.228941874618855]
Test Case: 732 | Input/Output: [[-91.46593036281521 -56] -147.46593036281521]
Test Case: 733 | Input/Output: [[83.55530103534471 -3] 80.55530103534471]
Test Case: 734 | Input/Output: [[1.1804490669478582 -59] -57.81955093305214]
Test Case: 735 | Input/Output: [[86.22553268680159 34] 120.22553268680159]
Test Case: 736 | Input/Output: [[-99.42283653257631 57] -42.42283653257631]
Test Case: 737 | Input/Output: [[-83.40350193791433 54] -29.403501937914328]
Test Case: 738 | Input/Output: [[-69.1923861267157 -8] -77.1923861267157]
Test Case: 739 | Input/Output: [[39.83556690945983 1] 40.83556690945983]
Test Case: 740 | Input/Output: [[37.690789290539726 46] 83.69078929053973]
Test Case: 741 | Input/Output: [[98.52509967574892 70] 168.52509967574892]
Test Case: 742 | Input/Output: [[-3.879255045542564 81] 77.12074495445744]
Test Case: 743 | Input/Output: [[-73.02268964802863 -96] -169.02268964802863]
Test Case: 744 | Input/Output: [[-31.731386858261402 2] -29.731386858261402]
Test Case: 745 | Input/Output: [[26.75287736809861 91] 117.75287736809861]
Test Case: 746 | Input/Output: [[11.494437997135122 -87] -75.50556200286488]
Test Case: 747 | Input/Output: [[-9.537431004643508 52] 42.46256899535649]
Test Case: 748 | Input/Output: [[-70.52613146349111 -98] -168.5261314634911]
Test Case: 749 | Input/Output: [[88.73450296814886 65] 153.73450296814886]
Test Case: 750 | Input/Output: [[76.6591561157102 81] 157.6591561157102]
Test Case: 751 | Input/Output: [[-24.32725699993526 56] 31.67274300006474]
Test Case: 752 | Input/Output: [[-89.92554740832908 90] 0.07445259167091933]
Test Case: 753 | Input/Output: [[87.77860539156444 22] 109.77860539156444]
Test Case: 754 | Input/Output: [[-88.71916075181177 56] -32.71916075181177]
Test Case: 755 | Input/Output: [[53.75598222013852 88] 141.75598222013852]
Test Case: 756 | Input/Output: [[69.81006645186426 -78] -8.189933548135741]
Test Case: 757 | Input/Output: [[59.357377078676734 -21] 38.357377078676734]
Test Case: 758 | Input/Output: [[-51.83574574981205 31] -20.835745749812048]
Test Case: 759 | Input/Output: [[-55.21018778711184 -25] -80.21018778711183]
Test Case: 760 | Input/Output: [[97.67928555328953 -30] 67.67928555328953]
Test Case: 761 | Input/Output: [[0.961308671855889 -62] -61.03869132814411]
Test Case: 762 | Input/Output: [[32.163764263639905 -80] -47.836235736360095]
Test Case: 763 | Input/Output: [[88.03339110174008 -18] 70.03339110174008]
Test Case: 764 | Input/Output: [[74.21497888239892 -49] 25.214978882398924]
Test Case: 765 | Input/Output: [[68.44880148925805 -78] -9.551198510741955]
Test Case: 766 | Input/Output: [[93.71580180704089 -75] 18.71580180704089]
Test Case: 767 | Input/Output: [[-15.652909829604212 -5] -20.652909829604212]
Test Case: 768 | Input/Output: [[-91.79158443082424 -9] -100.79158443082424]
Test Case: 769 | Input/Output: [[84.33804863459 37] 121.33804863459]
Test Case: 770 | Input/Output: [[2.973056712101169 -86] -83.02694328789883]
Test Case: 771 | Input/Output: [[-59.19884212667898 -23] -82.19884212667898]
Test Case: 772 | Input/Output: [[86.04612421613555 14] 100.04612421613555]
Test Case: 773 | Input/Output: [[60.429817964527786 39] 99.42981796452779]
Test Case: 774 | Input/Output: [[-43.98583119708803 -50] -93.98583119708803]
Test Case: 775 | Input/Output: [[-68.5563826891431 74] 5.443617310856894]
Test Case: 776 | Input/Output: [[-61.87505976194334 -30] -91.87505976194333]
Test Case: 777 | Input/Output: [[32.169461865580104 83] 115.1694618655801]
Test Case: 778 | Input/Output: [[-65.71266389183563 -73] -138.71266389183563]
Test Case: 779 | Input/Output: [[33.44105467698171 1] 34.44105467698171]
Test Case: 780 | Input/Output: [[-79.21803899131876 -71] -150.21803899131876]
Test Case: 781 | Input/Output: [[-30.976894649169168 77] 46.02310535083083]
Test Case: 782 | Input/Output: [[10.818978315855105 63] 73.8189783158551]
Test Case: 783 | Input/Output: [[23.115187688646827 77] 100.11518768864683]
Test Case: 784 | Input/Output: [[65.31022334400438 6] 71.31022334400438]
Test Case: 785 | Input/Output: [[21.428530498092925 19] 40.428530498092925]
Test Case: 786 | Input/Output: [[12.32804685751077 -52] -39.67195314248923]
Test Case: 787 | Input/Output: [[45.95940045493924 92] 137.95940045493924]
Test Case: 788 | Input/Output: [[7.3693203448633255 -17] -9.630679655136674]
Test Case: 789 | Input/Output: [[74.86286715619613 -41] 33.86286715619613]
Test Case: 790 | Input/Output: [[99.53463975165141 16] 115.53463975165141]
Test Case: 791 | Input/Output: [[-37.30282167306429 79] 41.69717832693571]
Test Case: 792 | Input/Output: [[3.608963394543636 -73] -69.39103660545636]
Test Case: 793 | Input/Output: [[-24.82731755406104 -34] -58.82731755406104]
Test Case: 794 | Input/Output: [[-8.27705401277936 -45] -53.27705401277936]
Test Case: 795 | Input/Output: [[-56.14153052495177 39] -17.14153052495177]
Test Case: 796 | Input/Output: [[22.542814041793406 -66] -43.457185958206594]
Test Case: 797 | Input/Output: [[42.37366928914085 19] 61.37366928914085]
Test Case: 798 | Input/Output: [[-29.752240915375822 9] -20.752240915375822]
Test Case: 799 | Input/Output: [[47.06197205956286 -46] 1.0619720595628621]
Test Case: 800 | Input/Output: [[-3.8392548077427193 -57] -60.83925480774272]
Test Case: 801 | Input/Output: [[82.78415968088555 -36] 46.78415968088555]
Test Case: 802 | Input/Output: [[25.054463349303347 57] 82.05446334930335]
Test Case: 803 | Input/Output: [[-62.69228684496693 -8] -70.69228684496693]
Test Case: 804 | Input/Output: [[18.49246817806396 89] 107.49246817806396]
Test Case: 805 | Input/Output: [[-71.94032079398538 87] 15.059679206014621]
Test Case: 806 | Input/Output: [[-44.80586448720474 -46] -90.80586448720473]
Test Case: 807 | Input/Output: [[-67.30405112211193 59] -8.304051122111929]
Test Case: 808 | Input/Output: [[-64.42426053027677 99] 34.57573946972323]
Test Case: 809 | Input/Output: [[-99.57935106488469 -97] -196.5793510648847]
Test Case: 810 | Input/Output: [[98.44253674095441 -61] 37.44253674095441]
Test Case: 811 | Input/Output: [[-47.370499583785566 68] 20.629500416214434]
Test Case: 812 | Input/Output: [[-84.45772144210875 13] -71.45772144210875]
Test Case: 813 | Input/Output: [[21.909319453052973 33] 54.90931945305297]
Test Case: 814 | Input/Output: [[54.45914714806685 -80] -25.540852851933153]
Test Case: 815 | Input/Output: [[-36.21203636970263 40] 3.7879636302973694]
Test Case: 816 | Input/Output: [[-19.489799711913065 86] 66.51020028808693]
Test Case: 817 | Input/Output: [[78.26852891675654 76] 154.26852891675654]
Test Case: 818 | Input/Output: [[75.63686788330716 92] 167.63686788330716]
Test Case: 819 | Input/Output: [[63.74159958416021 -67] -3.2584004158397875]
Test Case: 820 | Input/Output: [[95.34160357753294 -12] 83.34160357753294]
Test Case: 821 | Input/Output: [[-71.98010289017498 -50] -121.98010289017498]
Test Case: 822 | Input/Output: [[65.17686664235148 -65] 0.17686664235148442]
Test Case: 823 | Input/Output: [[-39.531133733089206 -56] -95.5311337330892]
Test Case: 824 | Input/Output: [[19.192280265467573 1] 20.192280265467573]
Test Case: 825 | Input/Output: [[-87.99130975277656 -93] -180.99130975277654]
Test Case: 826 | Input/Output: [[13.882512580459732 54] 67.88251258045973]
Test Case: 827 | Input/Output: [[34.427289656646565 -21] 13.427289656646565]
Test Case: 828 | Input/Output: [[-18.07768598767619 -13] -31.07768598767619]
Test Case: 829 | Input/Output: [[30.465235170091177 80] 110.46523517009118]
Test Case: 830 | Input/Output: [[24.76287832519968 -59] -34.23712167480032]
Test Case: 831 | Input/Output: [[-64.21087155450957 -26] -90.21087155450957]
Test Case: 832 | Input/Output: [[-79.32768028629349 -72] -151.32768028629349]
Test Case: 833 | Input/Output: [[-26.802541283219924 -95] -121.80254128321992]
Test Case: 834 | Input/Output: [[-91.09935082552458 -56] -147.0993508255246]
Test Case: 835 | Input/Output: [[12.81611220308119 50] 62.81611220308119]
Test Case: 836 | Input/Output: [[56.343133084029176 10] 66.34313308402918]
Test Case: 837 | Input/Output: [[-23.44314846767614 68] 44.55685153232386]
Test Case: 838 | Input/Output: [[51.934300225462124 -99] -47.065699774537876]
Test Case: 839 | Input/Output: [[-84.73026337365775 11] -73.73026337365775]
Test Case: 840 | Input/Output: [[-44.867188179129116 -48] -92.86718817912912]
Test Case: 841 | Input/Output: [[-44.774418165564 50] 5.225581834435999]
Test Case: 842 | Input/Output: [[-18.213983042966177 -73] -91.21398304296618]
Test Case: 843 | Input/Output: [[-61.29930310214211 -81] -142.29930310214212]
Test Case: 844 | Input/Output: [[45.68392797954971 32] 77.68392797954971]
Test Case: 845 | Input/Output: [[64.20072436413074 52] 116.20072436413074]
Test Case: 846 | Input/Output: [[92.2476277104818 -35] 57.247627710481794]
Test Case: 847 | Input/Output: [[80.65380401694446 -36] 44.65380401694446]
Test Case: 848 | Input/Output: [[16.745499270278955 -90] -73.25450072972104]
Test Case: 849 | Input/Output: [[36.02650782279224 -98] -61.97349217720776]
Test Case: 850 | Input/Output: [[-82.62876662670209 70] -12.628766626702088]
Test Case: 851 | Input/Output: [[20.060848575750896 -60] -39.939151424249104]
Test Case: 852 | Input/Output: [[-66.22483208473267 -75] -141.22483208473267]
Test Case: 853 | Input/Output: [[-86.23291562015788 84] -2.2329156201578826]
Test Case: 854 | Input/Output: [[-64.54135025574088 74] 9.45864974425912]
Test Case: 855 | Input/Output: [[62.44945940543914 -37] 25.449459405439143]
Test Case: 856 | Input/Output: [[36.32492475084632 21] 57.32492475084632]
Test Case: 857 | Input/Output: [[-64.55706570748916 72] 7.4429342925108415]
Test Case: 858 | Input/Output: [[50.79030879785262 -82] -31.209691202147383]
Test Case: 859 | Input/Output: [[51.84065325027919 -92] -40.15934674972081]
Test Case: 860 | Input/Output: [[-53.048111223603776 -62] -115.04811122360377]
Test Case: 861 | Input/Output: [[19.095934787201415 80] 99.09593478720141]
Test Case: 862 | Input/Output: [[11.508077731854044 -83] -71.49192226814596]
Test Case: 863 | Input/Output: [[-82.80566669702938 -22] -104.80566669702938]
Test Case: 864 | Input/Output: [[24.43555039452248 60] 84.43555039452248]
Test Case: 865 | Input/Output: [[66.5314559138487 88] 154.5314559138487]
Test Case: 866 | Input/Output: [[15.762458526384563 -90] -74.23754147361544]
Test Case: 867 | Input/Output: [[-56.275616110978376 -97] -153.27561611097838]
Test Case: 868 | Input/Output: [[19.11578568678604 -28] -8.88421431321396]
Test Case: 869 | Input/Output: [[-74.98749989883262 -76] -150.98749989883262]
Test Case: 870 | Input/Output: [[23.409206562215346 -52] -28.590793437784654]
Test Case: 871 | Input/Output: [[77.17077390880155 -39] 38.17077390880155]
Test Case: 872 | Input/Output: [[-22.311455884151172 -5] -27.311455884151172]
Test Case: 873 | Input/Output: [[10.916522505799193 41] 51.91652250579919]
Test Case: 874 | Input/Output: [[44.99867458001131 -43] 1.9986745800113113]
Test Case: 875 | Input/Output: [[48.93791473645871 -1] 47.93791473645871]
Test Case: 876 | Input/Output: [[46.40987403591325 -60] -13.590125964086752]
Test Case: 877 | Input/Output: [[69.68660517449456 -76] -6.313394825505441]
Test Case: 878 | Input/Output: [[78.04425062508656 32] 110.04425062508656]
Test Case: 879 | Input/Output: [[-97.0393711753742 -11] -108.0393711753742]
Test Case: 880 | Input/Output: [[-71.14955358105146 81] 9.850446418948536]
Test Case: 881 | Input/Output: [[-10.074871416776361 -75] -85.07487141677636]
Test Case: 882 | Input/Output: [[45.53893224251286 51] 96.53893224251286]
Test Case: 883 | Input/Output: [[91.23362029254162 -59] 32.233620292541616]
Test Case: 884 | Input/Output: [[7.588602632220514 89] 96.58860263222051]
Test Case: 885 | Input/Output: [[-70.3069216765809 -41] -111.3069216765809]
Test Case: 886 | Input/Output: [[-29.722104913682415 4] -25.722104913682415]
Test Case: 887 | Input/Output: [[-43.27170387979735 -87] -130.27170387979734]
Test Case: 888 | Input/Output: [[-95.74002606330036 -22] -117.74002606330036]
Test Case: 889 | Input/Output: [[-72.39867403378366 -61] -133.39867403378366]
Test Case: 890 | Input/Output: [[2.7088102150987936 43] 45.708810215098794]
Test Case: 891 | Input/Output: [[53.04455684052934 -30] 23.04455684052934]
Test Case: 892 | Input/Output: [[78.28968875437732 63] 141.28968875437732]
Test Case: 893 | Input/Output: [[79.9900052331736 -86] -6.009994766826395]
Test Case: 894 | Input/Output: [[37.1165473047561 4] 41.1165473047561]
Test Case: 895 | Input/Output: [[66.88592036057418 -38] 28.885920360574175]
Test Case: 896 | Input/Output: [[-56.30723705088849 -33] -89.30723705088849]
Test Case: 897 | Input/Output: [[-98.2343315892247 -11] -109.2343315892247]
Test Case: 898 | Input/Output: [[-18.364750592097607 -7] -25.364750592097607]
Test Case: 899 | Input/Output: [[-32.108595495636735 -98] -130.10859549563673]
Test Case: 900 | Input/Output: [[-4.455032436210615 -40] -44.455032436210615]
Test Case: 901 | Input/Output: [[9.46132303013529 62] 71.46132303013529]
Test Case: 902 | Input/Output: [[-84.50830825273066 92] 7.491691747269343]
Test Case: 903 | Input/Output: [[61.5220816934727 -17] 44.5220816934727]
Test Case: 904 | Input/Output: [[-12.745185715051917 -27] -39.74518571505192]
Test Case: 905 | Input/Output: [[1.80176639100182 6] 7.80176639100182]
Test Case: 906 | Input/Output: [[-16.672684380612154 -24] -40.672684380612154]
Test Case: 907 | Input/Output: [[-25.062407003567472 12] -13.062407003567472]
Test Case: 908 | Input/Output: [[68.16552142284641 -1] 67.16552142284641]
Test Case: 909 | Input/Output: [[-4.659448297201024 -10] -14.659448297201024]
Test Case: 910 | Input/Output: [[80.55109378682266 -49] 31.551093786822662]
Test Case: 911 | Input/Output: [[36.592908080216404 60] 96.5929080802164]
Test Case: 912 | Input/Output: [[-70.56999472056127 23] -47.56999472056127]
Test Case: 913 | Input/Output: [[-59.17741638923595 -86] -145.17741638923596]
Test Case: 914 | Input/Output: [[99.4218329860876 -51] 48.421832986087594]
Test Case: 915 | Input/Output: [[66.61994044135011 -50] 16.61994044135011]
Test Case: 916 | Input/Output: [[-82.20518520022435 -65] -147.20518520022435]
Test Case: 917 | Input/Output: [[20.440751267046053 -38] -17.559248732953947]
Test Case: 918 | Input/Output: [[7.9505088573043 90] 97.9505088573043]
Test Case: 919 | Input/Output: [[69.1672691031954 0] 69.1672691031954]
Test Case: 920 | Input/Output: [[-90.46288835157488 -81] -171.46288835157486]
Test Case: 921 | Input/Output: [[-6.736891070485939 -50] -56.73689107048594]
Test Case: 922 | Input/Output: [[33.66088768213422 93] 126.66088768213422]
Test Case: 923 | Input/Output: [[66.2137148887804 -14] 52.2137148887804]
Test Case: 924 | Input/Output: [[-86.78230025879559 -50] -136.7823002587956]
Test Case: 925 | Input/Output: [[6.924984513109877 -28] -21.075015486890123]
Test Case: 926 | Input/Output: [[-4.032583349635672 96] 91.96741665036433]
Test Case: 927 | Input/Output: [[33.67440069509314 -24] 9.67440069509314]
Test Case: 928 | Input/Output: [[11.157082800302234 -96] -84.84291719969777]
Test Case: 929 | Input/Output: [[54.244971620226806 -67] -12.755028379773194]
Test Case: 930 | Input/Output: [[97.92873676132353 96] 193.92873676132353]
Test Case: 931 | Input/Output: [[-90.95144469299596 -14] -104.95144469299596]
Test Case: 932 | Input/Output: [[26.204923983232533 -91] -64.79507601676747]
Test Case: 933 | Input/Output: [[-9.552063275451133 -7] -16.552063275451133]
Test Case: 934 | Input/Output: [[-42.98014591493733 -91] -133.98014591493734]
Test Case: 935 | Input/Output: [[-14.222185407504767 43] 28.777814592495233]
Test Case: 936 | Input/Output: [[-71.64698774041341 67] -4.646987740413408]
Test Case: 937 | Input/Output: [[39.85537858392368 -98] -58.14462141607632]
Test Case: 938 | Input/Output: [[67.43825953125753 41] 108.43825953125753]
Test Case: 939 | Input/Output: [[20.9851428765802 -72] -51.0148571234198]
Test Case: 940 | Input/Output: [[51.09456780978044 26] 77.09456780978044]
Test Case: 941 | Input/Output: [[83.21258215565302 89] 172.21258215565302]
Test Case: 942 | Input/Output: [[34.69443469512791 56] 90.69443469512791]
Test Case: 943 | Input/Output: [[80.77033672793488 94] 174.77033672793488]
Test Case: 944 | Input/Output: [[-22.473557039751753 -61] -83.47355703975175]
Test Case: 945 | Input/Output: [[-49.445300593474585 29] -20.445300593474585]
Test Case: 946 | Input/Output: [[26.9986313228044 -48] -21.0013686771956]
Test Case: 947 | Input/Output: [[63.131072177294016 25] 88.13107217729402]
Test Case: 948 | Input/Output: [[82.29538994113096 -67] 15.295389941130964]
Test Case: 949 | Input/Output: [[27.87345823215604 -83] -55.12654176784396]
Test Case: 950 | Input/Output: [[-74.1407397411618 -44] -118.1407397411618]
Test Case: 951 | Input/Output: [[-37.8827368299838 -26] -63.8827368299838]
Test Case: 952 | Input/Output: [[-69.42182201829735 35] -34.42182201829735]
Test Case: 953 | Input/Output: [[63.93010346130197 -28] 35.93010346130197]
Test Case: 954 | Input/Output: [[-4.97895822022187 -78] -82.97895822022187]
Test Case: 955 | Input/Output: [[42.40566972204823 69] 111.40566972204823]
Test Case: 956 | Input/Output: [[86.09458215205223 -97] -10.905417847947774]
Test Case: 957 | Input/Output: [[-82.86962232655085 -43] -125.86962232655085]
Test Case: 958 | Input/Output: [[-70.20150289170687 69] -1.2015028917068662]
Test Case: 959 | Input/Output: [[34.54267358541054 -56] -21.45732641458946]
Test Case: 960 | Input/Output: [[94.85911323930029 -81] 13.859113239300285]
Test Case: 961 | Input/Output: [[-34.29724807079427 -13] -47.29724807079427]
Test Case: 962 | Input/Output: [[-52.32599126353763 43] -9.325991263537631]
Test Case: 963 | Input/Output: [[51.996926235593094 22] 73.9969262355931]
Test Case: 964 | Input/Output: [[47.734378575526534 -53] -5.265621424473466]
Test Case: 965 | Input/Output: [[-65.73010746304719 87] 21.26989253695281]
Test Case: 966 | Input/Output: [[51.70612968583788 7] 58.70612968583788]
Test Case: 967 | Input/Output: [[-0.4949001078725246 1] 0.5050998921274754]
Test Case: 968 | Input/Output: [[48.67436857561182 -8] 40.67436857561182]
Test Case: 969 | Input/Output: [[63.348941407515724 89] 152.34894140751572]
Test Case: 970 | Input/Output: [[-81.74095006062572 11] -70.74095006062572]
Test Case: 971 | Input/Output: [[96.607640998759 -23] 73.607640998759]
Test Case: 972 | Input/Output: [[-11.928155002665662 -88] -99.92815500266566]
Test Case: 973 | Input/Output: [[-9.325895649725169 99] 89.67410435027483]
Test Case: 974 | Input/Output: [[-37.73601046165296 22] -15.73601046165296]
Test Case: 975 | Input/Output: [[20.555481034303938 12] 32.55548103430394]
Test Case: 976 | Input/Output: [[-8.334277980298538 -66] -74.33427798029854]
Test Case: 977 | Input/Output: [[55.929358383167425 -52] 3.9293583831674255]
Test Case: 978 | Input/Output: [[51.214986117140825 87] 138.21498611714082]
Test Case: 979 | Input/Output: [[41.90005912317815 92] 133.90005912317815]
Test Case: 980 | Input/Output: [[-68.71434527246797 -63] -131.71434527246797]
Test Case: 981 | Input/Output: [[68.34807444793947 59] 127.34807444793947]
Test Case: 982 | Input/Output: [[43.283283229304004 45] 88.283283229304]
Test Case: 983 | Input/Output: [[-8.315964709879253 -25] -33.31596470987925]
Test Case: 984 | Input/Output: [[68.8375693722366 39] 107.8375693722366]
Test Case: 985 | Input/Output: [[95.28806164883571 -10] 85.28806164883571]
Test Case: 986 | Input/Output: [[-76.56169449536141 89] 12.438305504638592]
Test Case: 987 | Input/Output: [[66.14354581689477 49] 115.14354581689477]
Test Case: 988 | Input/Output: [[21.773527646867137 -33] -11.226472353132863]
Test Case: 989 | Input/Output: [[-17.193267562370735 60] 42.806732437629265]
Test Case: 990 | Input/Output: [[97.59114384196869 -60] 37.59114384196869]
Test Case: 991 | Input/Output: [[-27.448451087606273 94] 66.55154891239373]
Test Case: 992 | Input/Output: [[-71.15762240291687 9] -62.15762240291687]
Test Case: 993 | Input/Output: [[-61.02192615056865 -69] -130.02192615056865]
Test Case: 994 | Input/Output: [[-26.477785865223396 -89] -115.4777858652234]
Test Case: 995 | Input/Output: [[-87.04885620204095 78] -9.048856202040952]
Test Case: 996 | Input/Output: [[-99.21034916130877 2] -97.21034916130877]
Test Case: 997 | Input/Output: [[77.60564137393692 62] 139.60564137393692]
Test Case: 998 | Input/Output: [[-58.462503366070415 -36] -94.46250336607042]
Test Case: 999 | Input/Output: [[49.74520920130445 -39] 10.745209201304448]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -49 -50 -58 31 -4 -14 117 62 56 0 23 74 -83 -38 101 117
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yank} {:instruction integer_shove} {:instruction tagged_922} {:instruction float_dup} {:instruction float_cos} {:instruction print_integer} {:instruction integer_yankdup} {:instruction integer_div} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction float_yankdup} {:instruction float_max} {:instruction print_float})
Best program: (float_sin integer_yank integer_shove tagged_922 float_dup float_cos print_integer integer_yankdup integer_div integer_swap integer_dup_items float_sin in1 float_yankdup float_max print_float)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 18244.6949192
Median total errors in population: 25334.0
Error averages by case: (704.9946306999984 12.368 710.2266525999992 12.482 713.6124748000013 12.418 719.3431479999991 13.131 714.7392757999988 12.478 716.3983359999985 13.136 727.449394500001 13.178 703.8794541000012 13.263 737.2680136000004 14.135 717.5640308000003 12.122 712.9438360999986 13.151 748.855265299998 13.983 709.1290284999989 13.79 716.835654500001 13.225 725.1081817999982 12.441 713.4416465000014 12.467 716.1371526000001 12.553 684.2857665999985 12.356 698.3319405000007 12.543 712.1335656000008 11.717 732.1976559000004 14.055 719.2210422999991 12.612 743.1717265000002 14.117 718.3139437999987 11.0 707.3571018000011 13.035)
Error minima by case: (1.024 2 1.1319 2 0.4591 2 1.3865 8 0.7325 2 1.2173 2 0.5837 2 0.1648 9 26.4651 3 0.098 6 0.2769 9 12.1892 3 2.6246 9 0.121 2 3.7695 3 2.1542 2 1.2934 2 0.0 1 0.1089 2 0.0475 2 16.196 3 1.0361 2 16.1324 3 0.154 1 2.05 1)
Average genome size in population (length): 51.186
Average program size in population (points): 52.186
Average percent parens in population: 0.044
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.322
Error (vector) diversity:			 0.358
Behavioral diversity:				 0.375
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1283839
--- Timings ---
Current time: 1529616056371 milliseconds
Total Time:           3.6 seconds
Initialization:       0.1 seconds,  3.0%
Reproduction:         0.6 seconds, 15.8%
Fitness Testing:      2.9 seconds, 81.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction float_min} {:instruction integer_add} {:instruction in1} {:instruction print_float})
Best program: (75 float_inc float_pop integer_stackdepth integer_sub float_inc float_swap integer_dup float_sub float_min integer_add in1 print_float)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 6191.532651699994
Median total errors in population: 1849.8846999999998
Error averages by case: (200.18759400000113 10.199 223.52342600000213 10.399 226.84741889999972 10.208 236.4576814999995 12.215 235.3728374999977 10.361 230.75113840000176 10.7 260.1972518000023 10.814 199.93197819999983 12.509 282.9337004999999 11.831 237.3035968000001 11.108 224.52052790000045 12.319 308.37261199999995 11.526 218.38066350000085 12.717 232.61079110000216 10.907 261.9079903000014 10.443 230.3366271000013 10.421 238.2574947000013 10.448 179.04541899999893 10.242 193.4766930000014 10.537 228.66039419999967 9.838 270.0278898000008 11.689 248.07894729999813 10.589 296.569855000001 11.771 244.12204869999778 9.288 210.10607449999875 10.473)
Error minima by case: (1.024 2 1.1319 2 0.4591 2 2.4367 8 3.7325 2 1.9037 2 1.4163 2 0.1648 9 3.5349 3 0.098 6 0.2769 9 12.1892 2 2.6246 9 0.121 2 6.7695 3 2.1542 2 2.1698 2 0.0 1 0.1089 2 4.0E-4 2 10.196 2 0.1527 2 16.1324 2 0.154 1 2.05 1)
Average genome size in population (length): 60.123
Average program size in population (points): 61.123
Average percent parens in population: 0.022
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.516
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.308
Error (vector) diversity:			 0.331
Behavioral diversity:				 0.354
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2792089
--- Timings ---
Current time: 1529616061523 milliseconds
Total Time:           9.0 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.7 seconds, 41.5%
Fitness Testing:      4.6 seconds, 51.5%
Report:               0.5 seconds,  5.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_add} {:instruction float_min} {:instruction integer_div} {:instruction float_min} {:instruction float_sub} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_dup} {:instruction in1} {:instruction float_rot} {:instruction print_float} {:instruction integer_div} {:instruction integer_swap} {:instruction float_dec} {:instruction float_dup_items})
Best program: (float_inc integer_stackdepth float_add float_min integer_div float_min float_sub integer_rot float_mod float_dup_times float_flush float_yankdup integer_dup in1 float_rot print_float integer_div integer_swap float_dec float_dup_items)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 4399.9817615
Median total errors in population: 1245.0
Error averages by case: (144.33321030000025 6.014 147.8522477000002 6.046 174.0714108 5.955 196.97192590000014 11.868 168.0745524999996 6.128 158.6714856000002 6.166 188.4473839000005 6.202 146.13446480000007 12.588 197.07383950000033 7.252 197.33597879999976 10.8 183.36352279999977 12.501 210.45550340000074 7.039 159.8179894999998 13.089 151.92805670000018 6.287 195.24463150000054 6.552 143.38844370000004 6.104 154.03820000000036 5.937 125.38300870000029 5.377 138.74903970000037 5.934 191.62251579999992 5.749 164.55104970000033 7.11 186.87917589999964 6.073 196.93797100000043 7.247 156.36935219999978 4.975 137.80480110000008 5.489)
Error minima by case: (3.024 1 7.4415 2 0.5409 2 6.788 9 3.7325 1 20.2173 2 11.4163 2 0.1648 8 25.5349 3 0.4435 8 4.4381 9 10.1892 2 2.6246 9 9.879 2 6.7695 3 4.0 2 10.2684 2 0.0 1 0.1089 2 0.0026 2 16.196 2 2.5619 2 18.1324 2 6.4636 1 2.05 1)
Average genome size in population (length): 49.776
Average program size in population (points): 50.776
Average percent parens in population: 0.027
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.005
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.648
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.648
Total error diversity:				 0.128
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 4038739
--- Timings ---
Current time: 1529616064960 milliseconds
Total Time:          12.3 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.2 seconds, 42.4%
Fitness Testing:      6.2 seconds, 50.3%
Report:               0.8 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_mult} {:instruction integer_mult} {:instruction float_dup_items} {:instruction in1} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_dup} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction 92} {:instruction integer_rot} {:instruction integer_shove} {:instruction print_float} {:instruction float_shove} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_stackdepth} {:instruction float_flush} {:instruction float_dup_items} {:instruction float_shove} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction float_dec} {:instruction float_max} {:instruction float_div} {:instruction integer_sub} {:instruction integer_fromfloat} {:instruction tag_float_345} {:instruction integer_swap} {:instruction float_min} {:instruction tag_float_755})
Best program: (float_shove float_mult integer_mult float_dup_items in1 integer_dup_items in1 integer_dup integer_sub integer_stackdepth 92 integer_rot integer_shove print_float float_shove integer_pop integer_yankdup float_mod float_stackdepth float_flush float_dup_items float_shove float_dup_items integer_dup_times float_dec float_max float_div integer_sub integer_fromfloat tag_float_345 integer_swap float_min tag_float_755)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3014.9574512000004
Median total errors in population: 1223.0
Error averages by case: (92.70393380000002 2.903 88.116324 2.866 124.09141950000001 2.877 156.1254805 11.284 117.53140760000001 2.885 96.6578229 2.96 145.28682329999998 2.953 96.3020381 12.234 146.48036260000003 3.943 157.0572315 10.281 139.55819630000002 12.216 157.65358460000004 3.91 111.10368100000001 13.175 85.705725 2.946 151.63865470000002 3.763 78.68272100000002 2.877 90.0586772 2.876 73.2802924 1.93 86.50777590000001 2.834 146.23125539999998 2.823 95.22078169999999 3.916 144.19431950000003 2.886 138.4155441 3.916 91.91728680000001 1.827 85.3481118 2.007)
Error minima by case: (3.2047 1 15.0 2 12.3692 2 36.8868 8 14.2655 1 21.0 2 12.4163 2 8.8352 8 49.4651 3 40.2187 9 29.3029 9 75.8108 2 14.7963 10 10.0 2 15.0 2 4.0 2 16.0 2 0.0 1 7.0 2 0.2872 2 19.0 2 0.7875 2 66.0 2 18.0 1 3.05 1)
Average genome size in population (length): 32.232
Average program size in population (points): 33.232
Average percent parens in population: 0.041
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.481
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 82
Genome diversity (% unique Plush genomes):	 0.442
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 82
Syntactic diversity (% unique Push programs):	 0.442
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 4844739
--- Timings ---
Current time: 1529616068463 milliseconds
Total Time:          15.8 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.9 seconds, 43.6%
Fitness Testing:      7.7 seconds, 48.4%
Report:               1.2 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction float_pop} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction float_min} {:instruction integer_add} {:instruction in1} {:instruction print_float})
Best program: (75 float_inc float_pop integer_stackdepth integer_sub float_inc float_swap integer_dup float_sub float_min integer_add in1 print_float)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 3163.749629000001
Median total errors in population: 1223.0
Error averages by case: (98.9842473 2.902 93.78891519999999 2.841 129.1549031 2.858 163.5451465 11.272 123.04782030000003 2.867 103.2955063 2.961 151.00369419999998 2.954 103.18796729999998 12.215 153.781732 3.923 164.4891678 10.264 147.0659246 12.177 163.9994934 3.904 115.7296173 13.154 93.3197915 2.946 156.90768100000005 3.739 84.09564040000001 2.859 95.7198204 2.86 76.8336477 1.917 89.98172219999998 2.819 151.0780001 2.812 102.67590049999998 3.904 148.8408176 2.865 145.6993753 3.898 97.5996728 1.791 91.2264242 1.995)
Error minima by case: (3.1828 2 16.0 2 12.5409 2 42.4367 11 48.0 2 22.0 2 50.44 2 14.1648 10 76.0 3 48.7813 10 29.7366 9 87.0 2 14.6246 10 11.0 2 85.0 3 5.0 2 17.0 2 1.0 1 17.0 2 0.4589 2 20.0 2 77.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 29.869
Average program size in population (points): 30.869
Average percent parens in population: 0.043
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.964375
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 84
Genome diversity (% unique Plush genomes):	 0.521
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.521
Total error diversity:				 0.017
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 5591489
--- Timings ---
Current time: 1529616072019 milliseconds
Total Time:          19.4 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.7 seconds, 45.0%
Fitness Testing:      9.1 seconds, 46.7%
Report:               1.5 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction float_dup} {:instruction float_sin} {:instruction float_cos} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction integer_swap} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_flush} {:instruction float_yankdup} {:instruction integer_dup} {:instruction in1} {:instruction float_rot} {:instruction float_flush} {:instruction in1} {:instruction integer_shove} {:instruction print_float} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_div} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction tag_integer_431} {:instruction integer_add} {:instruction in1} {:instruction integer_dup} {:instruction integer_rot} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_min} {:instruction float_inc} {:instruction integer_max} {:instruction tag_integer_433} {:instruction integer_dup_times} {:instruction float_shove} {:instruction integer_dup_items} {:instruction integer_dup_times} {:instruction 94.06969410942531} {:instruction float_tan} {:instruction float_div} {:instruction integer_flush} {:instruction float_mult} {:instruction integer_dup_times} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_div} {:instruction integer_dup_items} {:instruction integer_stackdepth} {:instruction integer_mod} {:instruction float_max} {:instruction float_rot} {:instruction integer_mod} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_pop} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction float_stackdepth} {:instruction integer_mod} {:instruction integer_inc})
Best program: (float_min float_dup float_sin float_cos integer_dup_times integer_flush integer_swap integer_dup_times integer_mult float_yankdup float_dup_times float_dup_items integer_rot float_mod float_dup_times float_flush float_yankdup integer_dup in1 float_rot float_flush in1 integer_shove print_float integer_swap float_dup_times integer_dec integer_yankdup float_add float_div integer_fromfloat integer_sub tag_integer_431 integer_add in1 integer_dup integer_rot float_dup_times integer_shove integer_yankdup float_rot float_min float_inc integer_max tag_integer_433 integer_dup_times float_shove integer_dup_items integer_dup_times 94.06969410942531 float_tan float_div integer_flush float_mult integer_dup_times integer_min integer_mod integer_div integer_dup_items integer_stackdepth integer_mod float_max float_rot integer_mod integer_fromfloat integer_shove float_pop float_inc integer_stackdepth float_dup float_stackdepth integer_mod integer_inc)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2486.204150300001
Median total errors in population: 1223.0
Error averages by case: (70.0430638 2.653 67.08405339999999 2.62 103.28317370000002 2.626 136.06716740000005 11.177 97.24519850000001 2.631 74.0585801 2.694 123.9978551 2.684 74.8432832 12.138 126.2261335 3.679 137.06237099999998 10.181 119.0690732 12.117 136.8780999 3.665 89.9209057 13.099 63.8289181 2.694 132.325739 3.557 57.6463705 2.634 68.99577180000001 2.63 52.41242200000001 1.678 66.06985180000001 2.613 125.76573750000001 2.592 73.64073939999999 3.672 124.5963321 2.634 118.01269740000002 3.665 70.9219492 1.585 62.560662999999984 1.73)
Error minima by case: (4.0568 2 16.0 2 9.7786 2 39.6744 9 48.0 2 6.2347 2 20.3988 2 11.4025 9 59.4476 3 46.019 10 26.9743 10 87.0 2 13.7251 10 5.1035 2 85.0 3 5.0 2 17.0 2 1.0 1 17.0 2 0.5411 2 20.0 2 77.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 28.921
Average program size in population (points): 29.921
Average percent parens in population: 0.044
Minimum age in population: 5.0
Maximum age in population: 9.625
Average age in population: 7.4138125
Median age in population: 7.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 89
Genome diversity (% unique Plush genomes):	 0.552
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.552
Total error diversity:				 0.019
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 6314564
--- Timings ---
Current time: 1529616075811 milliseconds
Total Time:          22.9 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.2 seconds, 44.6%
Fitness Testing:     10.8 seconds, 47.1%
Report:               1.8 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction integer_dup_items} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dec} {:instruction integer_dup} {:instruction float_sub} {:instruction float_min} {:instruction integer_add} {:instruction in1} {:instruction print_float})
Best program: (75 float_inc integer_dup_items integer_stackdepth integer_sub float_inc integer_dec integer_dup float_sub float_min integer_add in1 print_float)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 2610.1502009
Median total errors in population: 1223.0
Error averages by case: (74.5409313 2.683 72.54562729999999 2.639 108.9781401 2.651 140.7270416 11.211 102.54346690000001 2.658 79.0697262 2.729 128.07623209999997 2.717 78.8365179 12.17 130.94264869999998 3.709 141.6871677 10.202 123.82687819999998 12.143 141.45936700000001 3.684 95.49215559999999 13.132 68.8414571 2.719 137.13072509999998 3.575 63.1541053 2.658 74.43871709999999 2.649 57.3889417 1.702 71.6167355 2.627 131.4654018 2.624 78.4874931 3.694 128.9993453 2.657 122.6685883 3.684 76.33285459999999 1.609 66.6159354 1.758)
Error minima by case: (4.0568 2 16.0 2 13.5409 2 41.7551 11 48.0 2 22.0 2 51.44 2 13.4832 10 76.0 3 48.0997 10 29.055 10 87.0 2 15.5712 10 11.0 2 33.7695 3 5.0 2 17.0 2 1.0 1 17.0 2 1.2539 2 20.0 2 54.2545 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 27.856
Average program size in population (points): 28.856
Average percent parens in population: 0.045
Minimum age in population: 6.375
Maximum age in population: 10.96875
Average age in population: 8.926
Median age in population: 8.96875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 83
Genome diversity (% unique Plush genomes):	 0.567
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.567
Total error diversity:				 0.018
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 7011039
--- Timings ---
Current time: 1529616079243 milliseconds
Total Time:          26.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        11.9 seconds, 44.5%
Fitness Testing:     12.3 seconds, 46.1%
Report:               2.4 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction float_rot} {:instruction print_integer} {:instruction -31} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction in1} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction float_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult float_rot print_integer -31 integer_sub integer_rot float_inc integer_dup_times integer_mult in1 print_float integer_flush integer_min integer_dup_times float_yankdup float_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank float_dup_items float_flush float_inc float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2682.0298002000004
Median total errors in population: 1223.0
Error averages by case: (77.8919911 2.681 74.11009969999999 2.64 111.93023029999999 2.657 143.60394150000002 11.244 104.2031255 2.671 81.6988115 2.724 132.3585675 2.712 82.59149590000001 12.214 134.27249550000002 3.696 144.5340644 10.23 126.6930853 12.184 144.6153731 3.662 98.5125619 13.176 71.3865432 2.71 139.0168137 3.565 65.68997409999999 2.655 76.9616385 2.656 59.9602707 1.696 74.07818169999999 2.624 134.1778518 2.626 81.79556640000001 3.678 131.4760516 2.67 125.8649588 3.664 78.8439646 1.606 71.37914190000001 1.742)
Error minima by case: (3.9911 2 16.0 2 54.0 2 55.9415 11 48.0 2 22.0 2 74.0 2 13.4959 11 76.0 3 48.0644 10 29.0853 12 87.0 2 17.5619 12 11.0 2 85.0 3 5.0 2 17.0 2 1.0 1 17.0 2 0.8518 2 20.0 2 77.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 27.062
Average program size in population (points): 28.062
Average percent parens in population: 0.047
Minimum age in population: 7.375
Maximum age in population: 12.21875
Average age in population: 10.4004375
Median age in population: 10.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.606
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.606
Total error diversity:				 0.012
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 7687664
--- Timings ---
Current time: 1529616082333 milliseconds
Total Time:          29.7 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.3 seconds, 44.7%
Fitness Testing:     13.7 seconds, 46.0%
Report:               2.6 seconds,  8.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 55485.0
Test mean error for best: 27.74250
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -22.0239631162
Correct output: 66.9966003687  | Program output: 50.9966003687 
Correct output: 12.5409282956  | Program output: 67.5409282956 
Correct output: 42.4367420274  | Program output: -45.5632579726
Correct output: 80.2675177914  | Program output: 32.2675177914 
Correct output: -60.7827432914 | Program output: -82.7827432914
Correct output: -87.4162880094 | Program output: -12.4162880094
Correct output: 14.1647964189  | Program output: -8.8352035811 
Correct output: -126.4651108881 | Program output: -49.4651108881
Correct output: 48.781270316   | Program output: -40.218729684 
Correct output: 29.7365869138  | Program output: -40.2634130862
Correct output: -163.8107606538 | Program output: -75.8107606538
Correct output: -14.6246036823 | Program output: 26.3753963177 
Correct output: -72.1209990048 | Program output: -83.1209990048
Correct output: 114.230518731  | Program output: 29.230518731  
Correct output: 59.8458330136  | Program output: 65.8458330136 
Correct output: 64.1697788867  | Program output: 82.1697788867 
Correct output: 12.2386855703  | Program output: 11.2386855703 
Correct output: 25.2397222484  | Program output: 8.2397222484  
Correct output: 0.4588693899   | Program output: 79.4588693899 
Correct output: -119.8040488051 | Program output: -98.8040488051
Correct output: 93.7454585668  | Program output: 16.7454585668 
Correct output: -152.1323711502 | Program output: -84.1323711502
Correct output: 67.97455151    | Program output: 87.97455151   
Correct output: -13.0499546478 | Program output: -3.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sin} {:instruction integer_yank} {:instruction integer_shove} {:instruction tagged_922} {:instruction float_dup} {:instruction float_cos} {:instruction print_integer} {:instruction integer_yankdup} {:instruction integer_div} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_sin} {:instruction in1} {:instruction float_yankdup} {:instruction float_max} {:instruction print_float})
Best program: (float_sin integer_yank integer_shove tagged_922 float_dup float_cos print_integer integer_yankdup integer_div integer_swap integer_dup_items float_sin in1 float_yankdup float_max print_float)
Errors: [18.0 2 16.0 2 55.0 2 88.0 11 48.0 2 22.0 2 75.0 2 23.0 12 77.0 3 89.0 10 70.0 12 88.0 3 41.0 13 11.0 2 85.0 3 6.0 2 18.0 2 1.0 1 17.0 2 79.0 2 21.0 3 77.0 2 68.0 3 20.0 1 10.0 1]
Total: 1223.0
Mean: 24.46
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2653.0474585000006
Median total errors in population: 1223.0
Error averages by case: (77.88079149999999 2.671 72.7872059 2.633 109.26147209999998 2.636 143.49198330000002 11.203 102.7548313 2.647 81.7817374 2.714 131.43518229999998 2.709 82.60338490000001 12.164 133.46127289999998 3.698 144.451888 10.2 126.6106583 12.14 143.89529240000002 3.682 95.9552279 13.135 71.54142230000001 2.708 137.5166094 3.567 63.4363015 2.641 74.7542451 2.638 58.44865850000001 1.687 71.94766469999999 2.619 131.77356170000002 2.599 81.07383489999998 3.685 129.9216991 2.646 125.1466864 3.68 76.65907370000001 1.596 70.408773 1.75)
Error minima by case: (3.1828 2 16.0 2 11.791 2 41.6868 11 48.0 2 22.0 2 50.44 2 13.4148 9 76.0 3 48.0313 10 28.9866 9 87.0 2 15.3746 10 11.0 2 15.0 2 5.0 2 17.0 2 1.0 1 7.0 2 0.2911 2 20.0 2 23.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 26.523
Average program size in population (points): 27.523
Average percent parens in population: 0.048
Minimum age in population: 8.375
Maximum age in population: 13.75
Average age in population: 11.8987109375
Median age in population: 11.953125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 57
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.02
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 8350814
--- Timings ---
Current time: 1529616085533 milliseconds
Total Time:          32.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        14.8 seconds, 45.1%
Fitness Testing:     15.0 seconds, 45.5%
Report:               3.0 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 55484.0
Test mean error for best: 27.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -21.0239631162
Correct output: 66.9966003687  | Program output: 51.9966003687 
Correct output: 12.5409282956  | Program output: 68.5409282956 
Correct output: 42.4367420274  | Program output: -44.5632579726
Correct output: 80.2675177914  | Program output: 33.2675177914 
Correct output: -60.7827432914 | Program output: -81.7827432914
Correct output: -87.4162880094 | Program output: -11.4162880094
Correct output: 14.1647964189  | Program output: -7.8352035811 
Correct output: -126.4651108881 | Program output: -48.4651108881
Correct output: 48.781270316   | Program output: -39.218729684 
Correct output: 29.7365869138  | Program output: -39.2634130862
Correct output: -163.8107606538 | Program output: -74.8107606538
Correct output: -14.6246036823 | Program output: 27.3753963177 
Correct output: -72.1209990048 | Program output: -82.1209990048
Correct output: 114.230518731  | Program output: 30.230518731  
Correct output: 59.8458330136  | Program output: 66.8458330136 
Correct output: 64.1697788867  | Program output: 83.1697788867 
Correct output: 12.2386855703  | Program output: 12.2386855703 
Correct output: 25.2397222484  | Program output: 9.2397222484  
Correct output: 0.4588693899   | Program output: 80.4588693899 
Correct output: -119.8040488051 | Program output: -97.8040488051
Correct output: 93.7454585668  | Program output: 17.7454585668 
Correct output: -152.1323711502 | Program output: -83.1323711502
Correct output: 67.97455151    | Program output: 88.97455151   
Correct output: -13.0499546478 | Program output: -2.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush float_inc float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [17.0 2 15.0 2 56.0 2 87.0 11 47.0 2 21.0 2 76.0 2 22.0 12 78.0 3 88.0 11 69.0 11 89.0 3 42.0 13 10.0 1 84.0 3 7.0 2 19.0 2 0.0 0 16.0 2 80.0 1 22.0 3 76.0 2 69.0 3 21.0 2 11.0 2]
Total: 1221.0
Mean: 24.42
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2453.8321572000004
Median total errors in population: 1223.0
Error averages by case: (69.1115041 2.581 65.4232217 2.557 102.1876024 2.569 135.2773872 11.155 95.7498603 2.577 72.9961342 2.622 123.1292048 2.621 73.8616643 12.12 125.1731078 3.61 136.2348789 10.15 118.2608146 12.1 135.70671010000004 3.594 88.90082579999999 13.094 62.6571657 2.617 130.8889479 3.508 55.7531974 2.564 67.30260260000001 2.565 50.091740300000005 1.615 64.9293593 2.552 124.8799595 2.525 72.2816116 3.603 123.23893930000001 2.578 116.7783095 3.595 69.2079001 1.523 61.55350779999999 1.661)
Error minima by case: (3.0245 2 15.0 2 12.5442 2 7.0905 9 30.7403 2 21.0 2 50.44 2 14.996 10 76.0 3 0.746 8 19.7906 10 87.0 2 14.9469 9 10.0 1 64.7033 3 5.0 2 17.0 2 0.0 0 16.0 2 1.0654 1 20.0 2 44.2182 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 25.909
Average program size in population (points): 26.909
Average percent parens in population: 0.049
Minimum age in population: 9.375
Maximum age in population: 15.3125
Average age in population: 13.41798046875
Median age in population: 13.484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.629
Total error diversity:				 0.015
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 8998714
--- Timings ---
Current time: 1529616088863 milliseconds
Total Time:          36.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.4 seconds, 45.3%
Fitness Testing:     16.4 seconds, 45.1%
Report:               3.3 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 55484.0
Test mean error for best: 27.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -21.0239631162
Correct output: 66.9966003687  | Program output: 51.9966003687 
Correct output: 12.5409282956  | Program output: 68.5409282956 
Correct output: 42.4367420274  | Program output: -44.5632579726
Correct output: 80.2675177914  | Program output: 33.2675177914 
Correct output: -60.7827432914 | Program output: -81.7827432914
Correct output: -87.4162880094 | Program output: -11.4162880094
Correct output: 14.1647964189  | Program output: -7.8352035811 
Correct output: -126.4651108881 | Program output: -48.4651108881
Correct output: 48.781270316   | Program output: -39.218729684 
Correct output: 29.7365869138  | Program output: -39.2634130862
Correct output: -163.8107606538 | Program output: -74.8107606538
Correct output: -14.6246036823 | Program output: 27.3753963177 
Correct output: -72.1209990048 | Program output: -82.1209990048
Correct output: 114.230518731  | Program output: 30.230518731  
Correct output: 59.8458330136  | Program output: 66.8458330136 
Correct output: 64.1697788867  | Program output: 83.1697788867 
Correct output: 12.2386855703  | Program output: 12.2386855703 
Correct output: 25.2397222484  | Program output: 9.2397222484  
Correct output: 0.4588693899   | Program output: 80.4588693899 
Correct output: -119.8040488051 | Program output: -97.8040488051
Correct output: 93.7454585668  | Program output: 17.7454585668 
Correct output: -152.1323711502 | Program output: -83.1323711502
Correct output: 67.97455151    | Program output: 88.97455151   
Correct output: -13.0499546478 | Program output: -2.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank float_tan integer_mult float_inc integer_yank integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [17.0 2 15.0 2 56.0 2 87.0 11 47.0 2 21.0 2 76.0 2 22.0 12 78.0 3 88.0 11 69.0 11 89.0 3 42.0 13 10.0 1 84.0 3 7.0 2 19.0 2 0.0 0 16.0 2 80.0 1 22.0 3 76.0 2 69.0 3 21.0 2 11.0 2]
Total: 1221.0
Mean: 24.42
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 3007.7599304
Median total errors in population: 1223.0
Error averages by case: (90.6654913 2.813 89.03860209999999 2.78 125.15382149999999 2.793 155.3907462 11.228 118.6141698 2.804 94.4496653 2.872 143.4283219 2.867 95.3334846 12.179 145.42939649999997 3.856 156.3239026 10.23 138.72978940000002 12.146 155.71931089999998 3.833 111.90582189999999 13.137 84.34741190000001 2.86 152.8667841 3.696 79.7921751 2.789 90.88048730000001 2.792 75.0342573 1.846 88.0576911 2.764 146.9932788 2.734 93.7633685 3.838 145.4210518 2.801 137.2338614 3.831 92.73842300000001 1.738 83.2936161 1.928)
Error minima by case: (3.0388 2 15.0 2 48.0739 2 43.4219 11 47.0 2 21.0 2 50.44 2 13.4959 11 76.0 3 48.0644 10 29.0853 10 87.0 2 17.5619 10 10.0 1 84.0 3 5.0 2 17.0 2 0.0 0 16.0 2 0.8518 1 20.0 2 76.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 25.751
Average program size in population (points): 26.751
Average percent parens in population: 0.051
Minimum age in population: 11.9375
Maximum age in population: 16.689453125
Average age in population: 14.920837890625
Median age in population: 14.9287109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 49
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 49
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.016
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 9643064
--- Timings ---
Current time: 1529616091848 milliseconds
Total Time:          39.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.8 seconds, 45.3%
Fitness Testing:     17.6 seconds, 45.0%
Report:               3.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 55484.0
Test mean error for best: 27.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -21.0239631162
Correct output: 66.9966003687  | Program output: 51.9966003687 
Correct output: 12.5409282956  | Program output: 68.5409282956 
Correct output: 42.4367420274  | Program output: -44.5632579726
Correct output: 80.2675177914  | Program output: 33.2675177914 
Correct output: -60.7827432914 | Program output: -81.7827432914
Correct output: -87.4162880094 | Program output: -11.4162880094
Correct output: 14.1647964189  | Program output: -7.8352035811 
Correct output: -126.4651108881 | Program output: -48.4651108881
Correct output: 48.781270316   | Program output: -39.218729684 
Correct output: 29.7365869138  | Program output: -39.2634130862
Correct output: -163.8107606538 | Program output: -74.8107606538
Correct output: -14.6246036823 | Program output: 27.3753963177 
Correct output: -72.1209990048 | Program output: -82.1209990048
Correct output: 114.230518731  | Program output: 30.230518731  
Correct output: 59.8458330136  | Program output: 66.8458330136 
Correct output: 64.1697788867  | Program output: 83.1697788867 
Correct output: 12.2386855703  | Program output: 12.2386855703 
Correct output: 25.2397222484  | Program output: 9.2397222484  
Correct output: 0.4588693899   | Program output: 80.4588693899 
Correct output: -119.8040488051 | Program output: -97.8040488051
Correct output: 93.7454585668  | Program output: 17.7454585668 
Correct output: -152.1323711502 | Program output: -83.1323711502
Correct output: 67.97455151    | Program output: 88.97455151   
Correct output: -13.0499546478 | Program output: -2.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank float_tan integer_mult float_inc integer_yank integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [17.0 2 15.0 2 56.0 2 87.0 11 47.0 2 21.0 2 76.0 2 22.0 12 78.0 3 88.0 11 69.0 11 89.0 3 42.0 13 10.0 1 84.0 3 7.0 2 19.0 2 0.0 0 16.0 2 80.0 1 22.0 3 76.0 2 69.0 3 21.0 2 11.0 2]
Total: 1221.0
Mean: 24.42
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2770.0785069000003
Median total errors in population: 1223.0
Error averages by case: (82.79333859999998 2.714 77.26664579999999 2.695 113.6682789 2.702 148.0929663 11.183 107.1624586 2.713 86.55869220000001 2.77 136.0495928 2.763 87.4931504 12.136 138.02873929999998 3.755 149.04299989999998 10.218 131.2968658 12.081 148.3817762 3.739 100.5277378 13.108 76.351707 2.725 141.7853477 3.62 67.9951936 2.702 79.2281654 2.704 63.10737209999999 1.722 77.7213753 2.685 136.0728214 2.614 85.8727561 3.744 134.2598924 2.711 129.726741 3.734 81.1095797 1.688 75.40431260000001 1.854)
Error minima by case: (4.8772 2 15.0 2 11.6877 2 41.5835 10 47.0 2 21.0 2 50.44 2 13.3116 12 76.0 3 47.9281 10 28.8834 10 87.0 2 15.4778 10 10.0 1 15.0 2 5.0 2 17.0 2 0.0 0 7.0 2 0.3944 1 20.0 2 23.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 25.635
Average program size in population (points): 26.635
Average percent parens in population: 0.052
Minimum age in population: 13.71875
Maximum age in population: 18.2919921875
Average age in population: 16.4608447265625
Median age in population: 16.484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.011
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 10284289
--- Timings ---
Current time: 1529616094995 milliseconds
Total Time:          42.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.3 seconds, 45.5%
Fitness Testing:     18.9 seconds, 44.7%
Report:               4.1 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 55484.0
Test mean error for best: 27.74200
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -21.0239631162
Correct output: 66.9966003687  | Program output: 51.9966003687 
Correct output: 12.5409282956  | Program output: 68.5409282956 
Correct output: 42.4367420274  | Program output: -44.5632579726
Correct output: 80.2675177914  | Program output: 33.2675177914 
Correct output: -60.7827432914 | Program output: -81.7827432914
Correct output: -87.4162880094 | Program output: -11.4162880094
Correct output: 14.1647964189  | Program output: -7.8352035811 
Correct output: -126.4651108881 | Program output: -48.4651108881
Correct output: 48.781270316   | Program output: -39.218729684 
Correct output: 29.7365869138  | Program output: -39.2634130862
Correct output: -163.8107606538 | Program output: -74.8107606538
Correct output: -14.6246036823 | Program output: 27.3753963177 
Correct output: -72.1209990048 | Program output: -82.1209990048
Correct output: 114.230518731  | Program output: 30.230518731  
Correct output: 59.8458330136  | Program output: 66.8458330136 
Correct output: 64.1697788867  | Program output: 83.1697788867 
Correct output: 12.2386855703  | Program output: 12.2386855703 
Correct output: 25.2397222484  | Program output: 9.2397222484  
Correct output: 0.4588693899   | Program output: 80.4588693899 
Correct output: -119.8040488051 | Program output: -97.8040488051
Correct output: 93.7454585668  | Program output: 17.7454585668 
Correct output: -152.1323711502 | Program output: -83.1323711502
Correct output: 67.97455151    | Program output: 88.97455151   
Correct output: -13.0499546478 | Program output: -2.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction integer_max} {:instruction -36.976331920785086} {:instruction integer_mult} {:instruction in1} {:instruction float_yankdup} {:instruction print_float} {:instruction integer_dup} {:instruction float_inc})
Best program: (75 float_inc float_pop in1 integer_sub float_inc float_swap integer_dup float_sub integer_dup_items integer_max -36.976331920785086 integer_mult in1 float_yankdup print_float integer_dup float_inc)
Errors: [17.0 2 15.0 2 56.0 2 87.0 11 47.0 2 21.0 2 76.0 2 22.0 12 78.0 3 88.0 11 69.0 11 89.0 3 42.0 13 10.0 1 84.0 3 7.0 2 19.0 2 0.0 0 16.0 2 80.0 1 22.0 3 76.0 2 69.0 3 21.0 2 11.0 2]
Total: 1221.0
Mean: 24.42
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2998.2749819
Median total errors in population: 1223.0
Error averages by case: (90.5689855 2.857 88.14207520000001 2.817 124.43245799999998 2.832 155.07679839999997 11.271 117.62716329999999 2.844 94.4627344 2.913 143.79850390000001 2.905 95.20488420000001 12.226 145.8484759 3.881 156.0293818 10.466 138.60798259999999 12.001 156.1987795 3.849 111.22146799999999 13.179 84.4040713 2.7 151.8800994 3.724 79.0600047 2.833 90.3716592 2.833 73.12818250000001 1.69 85.9977098 2.802 146.1912086 2.587 94.2828475 3.865 144.36325589999998 2.84 137.714212 3.858 92.18991639999999 1.972 83.59012390000001 2.137)
Error minima by case: (3.9911 2 15.0 2 11.5442 2 41.4469 8 11.7325 2 21.0 2 48.5466 2 13.4959 10 77.0 3 43.2187 8 29.0853 11 88.0 3 13.3672 10 10.0 1 22.2305 3 6.0 2 18.0 2 0.0 0 16.0 2 0.0654 1 21.0 2 1.7455 2 68.0 3 6.7759 1 10.0 1)
Average genome size in population (length): 27.561
Average program size in population (points): 28.561
Average percent parens in population: 0.049
Minimum age in population: 15.6640625
Maximum age in population: 19.8798828125
Average age in population: 18.04319775390625
Median age in population: 18.098388671875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.026
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 10973489
--- Timings ---
Current time: 1529616098250 milliseconds
Total Time:          45.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        20.8 seconds, 45.6%
Fitness Testing:     20.3 seconds, 44.5%
Report:               4.4 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush print_float float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2688.9820381000004
Median total errors in population: 1221.0
Error averages by case: (77.15925089999999 2.741 75.00259919999998 2.735 112.8921368 2.753 142.70902230000002 11.178 104.9135925 2.75 81.18112610000001 2.801 132.14287530000001 2.799 81.90430559999999 12.134 134.28184570000002 3.792 143.6585192 10.889 125.81734540000002 11.431 144.79340440000004 3.78 99.1602527 13.104 70.9680054 2.103 139.6665706 3.666 67.0496011 2.743 78.2818426 2.746 60.558673799999994 1.111 75.48827310000001 2.75 134.6260928 1.993 82.02534929999999 3.795 132.0335872 2.755 126.07211039999999 3.776 80.1830028 2.396 71.1366529 2.555)
Error minima by case: (3.024 2 14.0 2 9.5015 2 39.4397 9 46.0 2 20.0 1 50.44 2 13.146 10 76.0 3 47.73 9 28.7301 10 87.0 2 14.7518 10 9.0 1 83.0 2 5.0 2 17.0 1 0.0 0 15.0 2 0.2539 1 20.0 2 75.0 2 67.0 2 19.0 1 9.0 1)
Average genome size in population (length): 35.693
Average program size in population (points): 36.693
Average percent parens in population: 0.033
Minimum age in population: 17.2783203125
Maximum age in population: 21.500732421875
Average age in population: 19.67525
Median age in population: 19.6954345703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 120
Genome diversity (% unique Plush genomes):	 0.599
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 120
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.02
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 11865864
--- Timings ---
Current time: 1529616101444 milliseconds
Total Time:          48.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        22.3 seconds, 45.6%
Fitness Testing:     21.7 seconds, 44.4%
Report:               4.8 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction print_float} {:instruction in1} {:instruction float_dup_times} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_add} {:instruction float_div} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc float_inc integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 print_float in1 float_dup_times integer_dec integer_yankdup float_add float_div integer_fromfloat integer_sub float_inc float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2630.2247558000004
Median total errors in population: 1221.0
Error averages by case: (73.97102209999998 2.753 73.02239189999999 2.756 111.22486090000001 2.766 139.5280594 11.178 102.90141219999997 2.758 78.40770760000001 2.785 129.60163360000004 2.805 78.82648279999997 12.15 131.99198670000004 3.804 140.52501690000003 11.065 122.7613365 11.28 142.72834139999998 3.763 97.3071255 13.111 68.1792795 1.931 137.7050511 3.643 65.49445069999999 2.765 76.6960739 2.731 58.38601069999999 0.945 72.09533959999999 2.774 132.56469040000002 1.836 79.8979263 3.806 129.9868229 2.763 123.9958621 3.763 78.6780021 2.616 68.462869 2.738)
Error minima by case: (3.9911 2 14.0 2 9.5015 2 33.8498 8 46.0 2 20.0 1 2.2911 2 12.5411 9 41.3399 3 45.5389 8 26.4495 10 78.6855 2 13.3672 10 9.0 1 83.0 2 6.0 2 18.0 1 0.0 0 15.0 2 0.2539 1 21.0 3 75.0 2 67.0071 2 20.0 1 10.0 1)
Average genome size in population (length): 39.061
Average program size in population (points): 40.061
Average percent parens in population: 0.027
Minimum age in population: 18.73046875
Maximum age in population: 23.223876953125
Average age in population: 21.15046984863281
Median age in population: 21.187255859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.647
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.647
Total error diversity:				 0.025
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 12842464
--- Timings ---
Current time: 1529616104672 milliseconds
Total Time:          52.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.6 seconds, 45.4%
Fitness Testing:     23.1 seconds, 44.5%
Report:               5.1 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_925} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_sub integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc integer_dup_times integer_dec float_swap print_float integer_flush integer_min integer_dup_times integer_rot integer_yankdup integer_sub integer_swap tagged_925 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush float_inc float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2760.8398239999997
Median total errors in population: 1221.0
Error averages by case: (79.21019939999998 2.768 78.2132338 2.754 116.30920370000001 2.755 145.01057779999996 11.175 108.0392516 2.76 83.74293200000001 2.656 134.6169555 2.822 83.41449530000001 12.139 137.4430811 3.814 146.0369982 10.945 128.6562948 11.391 147.9145158 3.626 103.0379473 13.114 73.5794596 2.074 142.4279951 3.514 71.0419559 2.764 82.16800669999999 2.59 63.39459110000001 1.077 77.454303 2.753 138.56491820000002 1.959 85.33335569999998 3.809 134.29751720000002 2.76 129.2124284 3.637 84.0248838 2.621 72.795723 2.622)
Error minima by case: (4.024 2 13.0 2 11.5442 2 41.4143 8 45.0 2 19.0 1 75.0 2 13.0372 9 77.0 2 47.7558 10 28.7111 9 88.0 2 13.3672 10 8.0 1 82.0 2 6.0 2 18.0 1 0.0 0 14.0 2 0.2907 1 21.0 3 74.0 2 68.0 2 6.7759 1 10.0 1)
Average genome size in population (length): 40.252
Average program size in population (points): 41.252
Average percent parens in population: 0.026
Minimum age in population: 20.06201171875
Maximum age in population: 24.70867919921875
Average age in population: 22.60661883544922
Median age in population: 22.64364624023438
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.019
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 13848864
--- Timings ---
Current time: 1529616108051 milliseconds
Total Time:          55.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.0 seconds, 45.2%
Fitness Testing:     24.7 seconds, 44.5%
Report:               5.6 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -31} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction integer_mult} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -31 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan integer_mult float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2212.0453208999998
Median total errors in population: 1219.0
Error averages by case: (56.0800595 2.561 55.403768899999996 2.571 95.7394661 2.576 123.2646283 11.084 85.8042279 2.575 61.02393220000001 1.954 113.95511739999999 2.614 60.5449942 12.048 117.09753369999999 3.6 124.26242010000001 10.389 106.21435810000001 11.788 128.00407069999997 2.94 81.3983332 13.041 50.721288 2.34 120.98139339999999 2.853 49.086607900000004 2.57 60.474628100000004 1.921 41.0811232 1.348 54.9487091 2.58 117.517309 2.259 64.0180206 3.607 112.5573597 2.573 108.9300175 2.951 62.416771399999995 2.474 51.360182699999996 1.942)
Error minima by case: (3.4563 2 4.5011 2 9.0976 2 29.061 8 8.7698 2 19.0 1 50.44 2 11.9791 9 77.0 2 22.7165 8 27.6341 9 88.0 2 13.3672 10 8.0 1 42.7328 2 6.0 2 7.328 1 0.0 0 14.0 2 0.1176 1 21.0 3 22.2477 2 68.0 2 3.5232 1 10.0 1)
Average genome size in population (length): 41.09
Average program size in population (points): 42.09
Average percent parens in population: 0.025
Minimum age in population: 21.6572265625
Maximum age in population: 26.18911743164062
Average age in population: 24.11981610107422
Median age in population: 24.17059326171875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.643
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.643
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 14876114
--- Timings ---
Current time: 1529616111349 milliseconds
Total Time:          58.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.5 seconds, 45.2%
Fitness Testing:     26.1 seconds, 44.5%
Report:               6.0 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush print_float float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2568.7378290999995
Median total errors in population: 1219.0
Error averages by case: (70.9864202 2.722 69.0935716 2.733 109.5948102 2.738 136.65989720000002 11.135 99.05371439999998 2.744 75.4691036 1.912 128.77422740000003 2.786 75.7849552 12.083 131.2189276 3.77 137.61749989999996 10.21 119.68178340000001 12.049 141.93677439999996 2.892 95.19636219999998 13.072 65.38687479999999 2.746 133.94416199999998 2.781 63.36225579999999 2.726 74.5812518 1.867 56.1679041 1.753 69.4118849 2.746 130.37981750000003 2.641 79.0591518 3.781 126.1924436 2.74 123.25093440000002 2.907 76.5005709 2.62 67.3215302 1.957)
Error minima by case: (1.6347 2 12.0 2 8.0976 2 37.8945 9 44.0 2 18.0 1 56.4163 1 10.9791 8 76.0 2 45.3502 8 26.6341 9 87.0 2 4.8942 8 7.0 1 81.0 2 5.0 1 17.0 1 0.0 0 13.0 2 0.0654 1 20.0 2 61.2867 2 67.0 2 19.0 1 6.4689 1)
Average genome size in population (length): 41.169
Average program size in population (points): 42.169
Average percent parens in population: 0.025
Minimum age in population: 23.1038818359375
Maximum age in population: 27.53236389160156
Average age in population: 25.65463946533203
Median age in population: 25.7071533203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.657
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.657
Total error diversity:				 0.024
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 15905364
--- Timings ---
Current time: 1529616114717 milliseconds
Total Time:          62.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.0 seconds, 45.1%
Fitness Testing:     27.6 seconds, 44.5%
Report:               6.3 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan} {:instruction integer_mult} {:instruction float_tan} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_687} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush print_float float_tan integer_mult float_tan float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_687 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2514.7872729
Median total errors in population: 1219.0
Error averages by case: (67.9982713 2.702 67.1058446 2.709 110.14609879999999 2.731 135.7812846 11.127 97.1186697 2.726 72.80827200000002 1.875 126.0645265 2.773 72.91696300000001 12.077 128.4771531 3.759 134.8722677 10.208 117.1448563 12.058 139.42731729999997 2.875 93.35493740000001 13.066 63.2521114 2.748 132.08291610000003 2.774 61.37701009999999 2.707 72.54692380000002 1.829 54.2250893 1.753 67.1565012 2.726 128.5345411 2.632 76.9698905 3.773 124.3034941 2.729 120.4912729 2.881 74.52779430000001 2.603 64.3582658 1.904)
Error minima by case: (3.1015 2 12.0 2 8.0976 2 37.8945 8 41.2763 2 18.0 1 75.0 1 10.9791 9 77.0 2 45.3502 9 26.6341 10 88.0 2 13.3672 10 7.0 1 70.3993 2 6.0 1 18.0 1 0.0 0 10.6024 2 0.5165 1 21.0 3 61.2867 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 41.485
Average program size in population (points): 42.485
Average percent parens in population: 0.025
Minimum age in population: 24.1705322265625
Maximum age in population: 28.96039581298828
Average age in population: 27.16903327178955
Median age in population: 27.20221328735352
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.73
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.73
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 16942514
--- Timings ---
Current time: 1529616118038 milliseconds
Total Time:          65.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.4 seconds, 45.0%
Fitness Testing:     29.1 seconds, 44.5%
Report:               6.7 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_mod} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_dec})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc integer_mod integer_dec float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush print_float float_dec)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2532.3658694
Median total errors in population: 1219.0
Error averages by case: (69.00822230000001 2.72 68.2073508 2.728 108.30129339999999 2.726 134.7607172 11.12 98.16062980000001 2.742 73.5812112 1.896 126.96399389999999 2.777 73.90717139999998 12.078 129.4295495 3.765 135.7728437 10.209 118.0680049 12.056 140.27219399999998 2.891 94.19098180000002 13.066 63.51160829999999 2.747 133.06684570000002 2.793 62.43276249999999 2.729 73.6300012 1.861 55.1620387 1.757 67.76231629999998 2.746 129.2855692 2.642 77.22593599999999 3.774 125.2494733 2.743 121.476147 2.898 75.5735759 2.623 65.35243140000003 1.926)
Error minima by case: (3.1015 2 12.0 2 8.0976 2 37.8945 8 44.0 2 18.0 1 59.4163 1 10.9791 8 77.0 2 45.3502 9 26.6341 10 88.0 2 13.0845 8 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.3988 1 21.0 3 61.2867 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 41.209
Average program size in population (points): 42.209
Average percent parens in population: 0.025
Minimum age in population: 25.1705322265625
Maximum age in population: 30.4587516784668
Average age in population: 28.64223390197754
Median age in population: 28.7079963684082
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.772
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.772
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 17972739
--- Timings ---
Current time: 1529616121287 milliseconds
Total Time:          68.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.9 seconds, 45.0%
Fitness Testing:     30.5 seconds, 44.4%
Report:               7.1 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_yank} {:instruction in1} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc integer_dup_times integer_dec float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_yank in1 float_tan float_yank integer_dup_items float_flush float_inc float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2470.1160474
Median total errors in population: 1219.0
Error averages by case: (66.0809539 2.678 65.8124307 2.683 106.83840530000002 2.693 133.2175905 11.145 95.84030209999997 2.703 71.63323719999998 1.857 123.56473150000001 2.739 70.0508492 12.11 127.3060292 3.722 134.1602313 10.225 116.32081750000002 12.084 137.9439263 2.835 92.08214189999998 13.088 61.3714351 2.701 130.46182420000002 2.737 60.1614962 2.688 71.4781025 1.816 51.38131880000002 1.712 64.4596938 2.696 128.1841016 2.613 74.8851523 3.736 121.6462633 2.704 119.1028306 2.838 73.4163507 2.587 61.45783169999999 1.868)
Error minima by case: (3.6357 2 11.0 2 9.5015 1 9.9865 8 13.7325 2 17.0 1 64.5837 1 12.3743 10 29.5349 2 3.642 9 22.6866 9 14.1892 2 13.3672 9 6.0 1 53.7695 2 6.0 1 11.7466 1 0.0 0 6.7603 2 0.5411 1 21.0 3 41.3222 2 14.1324 2 15.5513 1 8.95 1)
Average genome size in population (length): 41.669
Average program size in population (points): 42.669
Average percent parens in population: 0.025
Minimum age in population: 26.1705322265625
Maximum age in population: 31.94407844543457
Average age in population: 30.09729704284668
Median age in population: 30.17322444915771
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.027
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 19014539
--- Timings ---
Current time: 1529616124692 milliseconds
Total Time:          72.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        32.5 seconds, 45.1%
Fitness Testing:     32.0 seconds, 44.4%
Report:               7.5 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_fromfloat integer_dup_times float_yankdup integer_yankdup integer_sub)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2633.1614475999995
Median total errors in population: 1219.0
Error averages by case: (73.1028132 2.743 72.2100978 2.751 112.48036769999999 2.751 138.632691 11.158 101.8156362 2.774 77.44423010000001 1.922 130.6641289 2.797 78.30309270000002 12.12 133.1425368 3.786 140.3034116 10.238 123.01362410000002 12.092 143.51678929999997 2.902 98.24782779999998 13.099 67.3241966 2.771 136.58082639999998 2.807 66.1953707 2.76 78.3047393 1.887 59.214408999999996 1.797 72.3388952 2.771 133.65576140000002 2.681 80.8380481 3.793 128.85283399999997 2.778 125.51262189999997 2.908 79.3635854 2.645 69.4119124 1.96)
Error minima by case: (1.4233 2 11.0 2 4.0433 1 12.1791 8 3.9859 2 17.0 1 62.901 1 13.4959 8 29.5349 2 35.4721 9 29.0853 10 14.1892 2 6.0497 8 6.0 1 29.9771 2 6.0 1 18.0 1 0.0 0 6.7603 2 0.518 1 21.0 3 9.4921 2 14.1324 2 16.2788 1 7.6243 1)
Average genome size in population (length): 41.301
Average program size in population (points): 42.301
Average percent parens in population: 0.025
Minimum age in population: 29.03139686584473
Maximum age in population: 33.70543003082275
Average age in population: 31.60277535438538
Median age in population: 31.62675952911377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 20047114
--- Timings ---
Current time: 1529616127793 milliseconds
Total Time:          75.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        33.8 seconds, 45.0%
Fitness Testing:     33.4 seconds, 44.5%
Report:               7.8 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction -31} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction integer_dup_times} {:instruction float_dup_items})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot -31 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times float_swap print_float integer_flush integer_min integer_dup_times integer_stackdepth integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush float_inc float_tan integer_mult print_float integer_dup_times float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2570.0816317
Median total errors in population: 1219.0
Error averages by case: (70.5862304 2.666 69.7702064 2.67 109.77597489999998 2.678 136.87509619999997 11.131 99.80643119999999 2.661 75.2857575 1.847 127.94228660000002 2.714 74.9928985 12.111 130.92813420000002 3.688 137.8732018 10.227 120.09947590000002 12.066 141.37578999999997 2.827 96.1917393 13.096 65.0723968 2.693 134.50354840000003 2.73 64.0591073 2.66 75.29946770000001 1.797 56.3024357 1.699 69.42091 2.67 131.8607182 2.6 78.50711480000001 3.717 126.2595926 2.674 122.7417117 2.84 77.21801640000002 2.557 66.44538920000001 1.869)
Error minima by case: (1.6347 2 12.0 2 11.6303 2 1.261 8 36.5697 2 18.0 1 6.8494 1 13.3133 10 32.1995 2 5.0835 9 13.9612 9 69.5451 2 13.3672 9 7.0 1 70.5327 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1176 1 21.0 3 50.0477 2 57.8667 2 20.0 1 10.0 1)
Average genome size in population (length): 41.121
Average program size in population (points): 42.121
Average percent parens in population: 0.025
Minimum age in population: 30.70854949951172
Maximum age in population: 35.28060150146484
Average age in population: 33.1200515422821
Median age in population: 33.14624714851379
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 21075139
--- Timings ---
Current time: 1529616131213 milliseconds
Total Time:          78.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        35.3 seconds, 45.0%
Fitness Testing:     34.9 seconds, 44.5%
Report:               8.1 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction integer_pop} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_min} {:instruction float_mod} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod integer_pop integer_sub integer_rot float_inc integer_min float_mod integer_dup_times -30 integer_sub integer_rot float_inc integer_dup_times integer_dec float_swap print_float integer_flush integer_min)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2769.5097490999997
Median total errors in population: 1219.0
Error averages by case: (78.91148999999999 2.783 77.62933790000001 2.791 117.53876430000001 2.798 144.19283370000002 11.153 107.35364580000001 2.788 83.1936206 1.974 136.1303525 2.849 83.68015089999999 12.109 138.29890279999998 3.836 145.1711152 10.222 127.52152949999999 12.078 148.6258283 2.962 104.0056174 13.095 73.1843265 2.822 141.9627218 2.845 72.002082 2.79 83.15899950000001 1.915 65.0555118 1.835 78.15075099999999 2.799 139.1501017 2.705 86.3514411 3.852 134.3733786 2.8 130.17220079999998 2.971 85.0697955 2.668 75.21224989999999 1.973)
Error minima by case: (1.6347 2 12.0 2 5.6883 2 35.8979 8 13.7325 2 18.0 1 64.5837 1 12.7208 9 29.5349 2 47.3639 9 28.2823 10 14.1892 2 13.3672 10 7.0 1 53.7695 2 6.0 1 18.0 1 0.0 0 6.7603 2 0.3988 1 21.0 3 58.2545 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 41.135
Average program size in population (points): 42.135
Average percent parens in population: 0.025
Minimum age in population: 31.90454864501953
Maximum age in population: 36.54980540275574
Average age in population: 34.60505362176895
Median age in population: 34.62199485301971
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 22103589
--- Timings ---
Current time: 1529616134695 milliseconds
Total Time:          82.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        37.0 seconds, 45.1%
Fitness Testing:     36.4 seconds, 44.3%
Report:               8.6 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction float_dup} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_max} {:instruction print_float} {:instruction integer_div} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup_items})
Best program: (integer_pop float_dup float_tan integer_shove integer_dec float_pop in1 integer_sub float_inc float_swap integer_dup float_sub integer_dup_items -30 integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_max print_float integer_div integer_dec float_dec float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2636.4255433
Median total errors in population: 1219.0
Error averages by case: (73.01506239999999 2.775 72.1041952 2.769 112.90780719999998 2.784 138.52563539999997 11.155 101.9089926 2.782 77.5078704 1.962 131.4981534 2.841 77.87604989999998 12.107 133.9060072 3.825 139.5405269 10.24 121.91174320000002 12.074 144.64090539999995 2.954 99.10020549999999 13.1 67.4470919 2.797 136.693609 2.827 66.41609 2.773 77.60335350000001 1.914 59.18962100000001 1.798 72.3668881 2.778 134.1656977 2.701 81.06389270000001 3.822 128.9633342 2.787 125.95157009999998 2.963 79.53803510000002 2.655 69.39420529999998 2.006)
Error minima by case: (3.1368 2 11.0 2 8.0976 1 37.8945 8 13.7325 2 10.3498 1 16.2838 1 10.9791 9 29.5349 2 45.3502 9 26.6341 9 14.1892 2 13.3672 10 0.9885 1 53.7695 2 6.0 1 18.0 1 0.0 0 6.7603 2 0.3109 1 21.0 3 58.2545 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 40.933
Average program size in population (points): 41.933
Average percent parens in population: 0.025
Minimum age in population: 32.90454864501953
Maximum age in population: 38.00025939941406
Average age in population: 36.12382144606113
Median age in population: 36.15584963560104
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.782
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.782
Total error diversity:				 0.032
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 23126914
--- Timings ---
Current time: 1529616138254 milliseconds
Total Time:          85.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.5 seconds, 45.0%
Fitness Testing:     38.0 seconds, 44.4%
Report:               8.9 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction print_float} {:instruction integer_div} {:instruction integer_dec} {:instruction integer_max} {:instruction float_dup_items})
Best program: (75 float_inc float_pop in1 integer_sub float_inc float_swap integer_dup float_sub integer_dup_items -30 integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_flush print_float integer_div integer_dec integer_max float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2823.7063301999997
Median total errors in population: 1219.0
Error averages by case: (80.87007809999999 2.853 79.80377119999999 2.866 120.4123259 2.872 146.7829564 11.211 109.4385081 2.888 85.4540482 2.045 138.0233287 2.921 85.63883969999999 12.167 140.31814250000002 3.911 146.84002170000002 10.266 129.22510830000002 12.135 150.8440276 3.03 105.83862679999999 13.131 76.0038253 2.909 143.95717759999997 2.92 74.1698414 2.867 85.19369630000001 2.0 67.1925958 1.929 79.5505573 2.886 140.61821239999998 2.798 89.2549118 3.923 136.32863450000002 2.898 132.3388433 3.026 87.12126230000001 2.749 77.225989 2.06)
Error minima by case: (1.6347 2 12.0 2 4.6883 2 16.1925 9 41.1343 2 18.0 1 47.0 1 12.0794 9 49.0 2 22.5371 6 3.4924 10 60.0 1 13.0 1 7.0 1 69.9824 2 6.0 1 10.0 1 0.0 0 1.0045 2 0.3148 1 7.0 2 61.9929 2 40.0 1 8.0 1 10.0 1)
Average genome size in population (length): 40.555
Average program size in population (points): 41.555
Average percent parens in population: 0.025
Minimum age in population: 34.17945861816406
Maximum age in population: 39.68772047758102
Average age in population: 37.56101291775703
Median age in population: 37.58244746923447
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 24140789
--- Timings ---
Current time: 1529616141543 milliseconds
Total Time:          88.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.1 seconds, 45.1%
Fitness Testing:     39.4 seconds, 44.3%
Report:               9.3 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush print_float float_tan integer_mult integer_inc float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2345.9903306
Median total errors in population: 1219.0
Error averages by case: (62.2483001 2.554 59.730511199999995 2.576 100.67863849999999 2.569 128.7138758 11.127 90.10750999999999 2.58 66.38171980000001 1.708 120.4837315 2.599 67.02038440000001 12.104 122.6158377 3.579 129.6606481 10.193 111.5917475 12.06 133.1349169 2.693 86.8532711 13.086 56.0199562 2.569 125.3811287 2.633 53.972700700000004 2.572 65.34988070000001 1.686 47.0837275 1.594 60.4215431 2.587 122.6753841 2.505 69.530288 3.6 117.64790550000001 2.583 114.24470769999999 2.704 67.27701420000001 2.492 58.4800016 1.732)
Error minima by case: (1.6347 2 7.9966 2 11.5442 2 16.5633 9 21.2675 2 18.0 1 75.0 1 13.4959 10 77.0 2 10.2187 8 29.0853 10 88.0 2 14.726 11 7.0 1 55.2305 2 0.8458 1 5.1698 1 0.0 0 13.0 2 0.0654 1 21.0 3 34.7455 2 68.0 2 8.9746 1 10.0 1)
Average genome size in population (length): 40.064
Average program size in population (points): 41.064
Average percent parens in population: 0.026
Minimum age in population: 36.43125861883163
Maximum age in population: 41.15911096334457
Average age in population: 39.06327433037758
Median age in population: 39.12527585029602
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.021
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 25142389
--- Timings ---
Current time: 1529616144828 milliseconds
Total Time:          92.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.6 seconds, 45.1%
Fitness Testing:     40.9 seconds, 44.3%
Report:               9.7 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction float_yankdup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction float_rot} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction float_rot} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub float_yankdup float_inc integer_dup_times float_inc integer_dup_times integer_stackdepth float_dup_items print_float integer_flush integer_min float_rot float_yankdup integer_yankdup integer_flush integer_fromfloat integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank float_rot float_flush float_inc float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2565.7676371
Median total errors in population: 1219.0
Error averages by case: (71.01882269999999 2.69 68.9000139 2.68 108.91764749999999 2.681 136.8285933 11.168 98.904736 2.678 75.27163760000002 1.84 128.77246159999999 2.732 75.83703919999999 12.141 130.9830383 3.712 137.8246256 10.235 120.0229839 12.1 141.5446856 2.823 95.56242610000001 13.122 65.08061149999999 2.705 133.76727540000002 2.719 63.20418619999999 2.678 74.45405319999999 1.789 56.2422182 1.707 69.2784559 2.683 131.0035652 2.607 78.5572918 3.722 126.1041951 2.687 122.7903842 2.831 76.4313403 2.575 67.31534880000001 1.845)
Error minima by case: (1.6347 2 12.0 2 11.5442 2 41.4469 8 44.0 2 18.0 1 75.0 1 12.5411 9 77.0 2 47.0331 8 28.1567 10 88.0 2 13.3672 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 4.0 1 0.0654 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 39.538
Average program size in population (points): 40.538
Average percent parens in population: 0.026
Minimum age in population: 37.43125861883163
Maximum age in population: 42.41087137162685
Average age in population: 40.51585369291902
Median age in population: 40.58656691759825
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.781
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.781
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 26130864
--- Timings ---
Current time: 1529616148246 milliseconds
Total Time:          95.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.0 seconds, 45.1%
Fitness Testing:     42.3 seconds, 44.3%
Report:              10.0 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction in2} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction integer_dup} {:instruction integer_dup_items} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction float_tan} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction float_tan} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_yank} {:instruction integer_mult} {:instruction print_float} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan})
Best program: (75 float_inc in2 in1 integer_sub float_inc float_swap integer_dup integer_dup integer_dup_items -30 integer_rot float_inc integer_dup_times integer_mult float_swap print_float float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub float_tan tagged_917 float_dup_items float_yank float_cos float_tan float_yank float_tan integer_mult float_inc integer_yank integer_mult print_float float_yank float_cos float_tan)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2530.0166271000003
Median total errors in population: 1219.0
Error averages by case: (69.05681589999999 2.684 68.0866717 2.695 108.5134519 2.696 134.96818639999998 11.173 97.99687869999998 2.712 73.5382965 1.863 126.91891800000003 2.734 73.82187090000001 12.131 129.2094087 3.721 135.90928350000002 10.255 117.93906700000001 12.073 139.85291489999997 2.842 94.2864353 13.113 63.370649799999995 2.694 132.9498472 2.763 62.319151899999994 2.697 73.5647608 1.831 55.111503600000006 1.714 67.4333424 2.708 129.55171 2.619 76.90900140000001 3.723 125.23095400000001 2.722 121.16395659999998 2.847 75.4945791 2.598 65.3199709 1.891)
Error minima by case: (1.6347 2 12.0 2 9.6303 2 39.5233 9 15.7325 2 18.0 1 62.5837 1 6.0634 9 27.5349 2 37.7512 8 22.3796 9 12.1892 2 12.9189 10 7.0 1 55.7695 2 6.0 1 18.0 1 0.0 0 8.7603 2 0.1176 1 21.0 3 60.2545 2 16.1324 2 20.0 1 6.95 1)
Average genome size in population (length): 39.578
Average program size in population (points): 40.578
Average percent parens in population: 0.026
Minimum age in population: 39.27329757809639
Maximum age in population: 44.19578348845243
Average age in population: 41.97903256802261
Median age in population: 42.02250985428691
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.784
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.784
Total error diversity:				 0.029
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 27120389
--- Timings ---
Current time: 1529616151732 milliseconds
Total Time:          98.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.5 seconds, 45.0%
Fitness Testing:     43.8 seconds, 44.3%
Report:              10.5 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction integer_rot} {:instruction float_inc} {:instruction -30} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_min} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_855} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mod} {:instruction print_float} {:instruction integer_min} {:instruction float_dup_items})
Best program: (integer_dup_items float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod integer_rot float_inc -30 integer_sub integer_dup_times float_inc integer_dup_times integer_mult float_swap print_float integer_flush float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_min integer_yankdup integer_sub integer_swap tagged_855 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items float_flush float_inc float_tan integer_mod print_float integer_min float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2276.9334390999998
Median total errors in population: 1219.0
Error averages by case: (59.27768119999999 2.61 58.46739519999999 2.617 98.552808 2.603 124.8652171 11.132 88.7285152 2.629 63.67522350000001 1.754 116.6901995 2.637 64.19387750000001 12.096 119.1384883 3.619 125.85977880000002 10.19 107.82707090000002 12.056 129.9488781 2.716 83.7315097 13.062 53.4515472 2.622 123.1284892 2.654 51.6584291 2.608 62.96457940000002 1.72 45.29933410000001 1.649 58.70007829999998 2.629 119.28746170000005 2.547 66.28211059999998 3.633 115.25720540000002 2.639 111.0180813 2.728 64.9527366 2.52 54.5577432 1.749)
Error minima by case: (1.6347 2 12.0 2 10.1252 2 39.3696 8 44.0 2 18.0 1 4.8502 1 3.1119 6 34.1986 2 28.677 8 20.2714 8 71.5442 2 13.3672 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.0654 1 21.0 3 73.0 2 59.8659 2 20.0 1 10.0 1)
Average genome size in population (length): 38.616
Average program size in population (points): 39.616
Average percent parens in population: 0.027
Minimum age in population: 40.69251119345427
Maximum age in population: 45.43623063713312
Average age in population: 43.46108035200462
Median age in population: 43.488525101915
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 28085889
--- Timings ---
Current time: 1529616155013 milliseconds
Total Time:         102.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.0 seconds, 45.0%
Fitness Testing:     45.2 seconds, 44.2%
Report:              11.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction float_yank} {:instruction float_dec} {:instruction float_dup_items})
Best program: (float_swap float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc integer_dup_times integer_dec float_swap print_float integer_flush integer_min integer_dup_times float_yankdup float_inc float_tan integer_mult print_float integer_min integer_dup_times float_yankdup float_tan float_yank integer_dup_items integer_inc float_inc float_tan integer_mult float_yank float_dec float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2572.7895744
Median total errors in population: 1219.0
Error averages by case: (70.65764619999999 2.718 70.04950649999999 2.701 109.4452864 2.721 136.5783823 11.182 99.89940109999999 2.713 75.59953630000001 1.881 127.98349689999999 2.757 74.98116660000001 12.136 131.2035782 3.732 137.60228099999998 10.253 119.83850140000001 12.08 141.9909694 2.841 95.9439061 13.11 65.62360750000002 2.728 134.55510690000003 2.757 64.4002581 2.708 75.6014696 1.837 56.396159499999996 1.736 68.78091939999999 2.709 131.329721 2.64 79.0112649 3.732 126.24681180000002 2.717 123.22800749999999 2.855 77.5732905 2.618 66.49729929999998 1.91)
Error minima by case: (3.8478 2 8.0034 2 1.3502 2 12.3299 8 5.2675 2 18.0 1 6.1428 1 6.4927 7 45.1916 2 18.6745 9 0.3702 8 82.5373 2 11.5388 9 7.0 1 39.2305 2 6.0 1 18.0 1 0.0 0 4.5822 2 0.0511 1 21.0 3 18.7455 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 38.652
Average program size in population (points): 39.652
Average percent parens in population: 0.027
Minimum age in population: 41.69251119345427
Maximum age in population: 47.00166117027402
Average age in population: 44.93218975137174
Median age in population: 44.99439167976379
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.771
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.771
Total error diversity:				 0.036
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 29052314
--- Timings ---
Current time: 1529616158317 milliseconds
Total Time:         105.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.6 seconds, 45.0%
Fitness Testing:     46.6 seconds, 44.1%
Report:              11.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_mult} {:instruction float_sub} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction -30} {:instruction integer_sub} {:instruction tagged_337} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction float_yank})
Best program: (float_rot float_tan integer_shove float_mult float_sub in1 integer_mod -30 float_stackdepth integer_rot float_inc integer_dup_times integer_mult -30 integer_sub tagged_337 float_inc integer_dup_times integer_mult float_swap integer_dup_times integer_mult float_swap print_float integer_flush integer_min float_yankdup integer_yankdup integer_sub float_yank)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2596.7699852
Median total errors in population: 1219.0
Error averages by case: (72.01589010000001 2.776 70.07869290000001 2.756 110.84938310000001 2.778 138.4921419 11.207 99.9652102 2.768 76.69818090000003 1.948 129.6713207 2.834 76.85777610000001 12.174 132.0588912 3.809 138.6136649 10.263 120.828583 12.126 142.84241500000005 2.896 96.22344910000002 13.144 67.323652 2.811 134.83516949999998 2.792 64.27407860000001 2.765 75.49887240000002 1.88 57.2190888 1.799 70.4425776 2.776 131.3507562 2.696 80.591471 3.808 127.1283221 2.791 124.06785920000002 2.913 77.4399953 2.65 68.33254339999999 1.91)
Error minima by case: (1.6347 2 12.0 2 5.6883 2 35.8979 8 9.1507 2 18.0 1 12.7167 1 9.3336 9 14.7167 2 43.9501 8 24.9054 9 25.7167 2 13.3672 10 7.0 1 41.5856 2 0.4487 1 18.0 1 0.0 0 13.0 2 0.5254 1 21.0 3 46.6352 2 0.4733 2 20.0 1 10.0 1)
Average genome size in population (length): 38.377
Average program size in population (points): 39.377
Average percent parens in population: 0.027
Minimum age in population: 42.69251119345427
Maximum age in population: 48.21502789761871
Average age in population: 46.41043383918144
Median age in population: 46.47903181845322
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.032
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 30012064
--- Timings ---
Current time: 1529616161525 milliseconds
Total Time:         108.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.0 seconds, 45.0%
Fitness Testing:     48.1 seconds, 44.1%
Report:              11.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction print_integer} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_swap} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_pop} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_shove} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (float_rot float_tan integer_shove integer_dec print_integer in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc float_div integer_inc float_swap print_float integer_yankdup integer_sub integer_swap tagged_917 float_pop float_dec float_dup_items float_shove integer_flush integer_stackdepth integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2750.8411998000006
Median total errors in population: 1219.0
Error averages by case: (77.87538550000001 2.871 77.00570920000001 2.849 115.92119409999998 2.854 142.83487799999997 11.22 106.65987620000001 2.857 82.5170895 2.049 135.3728127 2.908 82.81941040000001 12.199 137.8474011 3.887 143.9352334 10.305 126.72734759999999 12.157 148.50584109999997 3.015 102.84539029999998 13.156 72.6801222 2.889 141.2725863 2.903 71.2953946 2.85 82.35756749999999 1.986 64.15655640000001 1.902 77.2509433 2.864 137.57130330000004 2.778 86.15743330000001 3.902 133.5616935 2.859 129.98258400000003 3.029 84.30761450000001 2.736 74.30483180000002 2.05)
Error minima by case: (1.6347 2 12.0 2 5.6883 2 9.2173 8 28.6135 2 18.0 1 75.0 1 11.1648 10 77.0 2 2.8728 9 21.9175 10 88.0 2 13.3672 10 7.0 1 62.5765 2 6.0 1 12.5157 1 0.0 0 13.0 2 0.0598 1 21.0 3 42.0914 2 68.0 2 16.3205 1 10.0 1)
Average genome size in population (length): 38.062
Average program size in population (points): 39.062
Average percent parens in population: 0.027
Minimum age in population: 44.86946818232536
Maximum age in population: 50.02690673060715
Average age in population: 47.89287782386038
Median age in population: 47.91818348574452
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.775
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.775
Total error diversity:				 0.034
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 30963939
--- Timings ---
Current time: 1529616164770 milliseconds
Total Time:         112.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.5 seconds, 45.1%
Fitness Testing:     49.5 seconds, 44.1%
Report:              12.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_mult} {:instruction float_yank} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove integer_dec float_mult float_rot float_tan integer_shove integer_dec float_mult in1 float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_mult float_yank float_dec float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2507.3905428
Median total errors in population: 1219.0
Error averages by case: (68.0965502 2.74 66.9917133 2.743 107.11678679999999 2.742 134.0842131 11.197 97.0677444 2.753 72.31766140000002 1.899 125.9408057 2.784 72.9569738 12.155 128.236502 3.777 135.0797823 10.263 117.2210701 12.116 138.8900746 2.884 93.38118499999999 13.143 62.133463400000004 2.759 132.06367250000005 2.795 61.273374200000006 2.741 72.5261292 1.866 54.16808520000001 1.77 67.43047149999998 2.75 128.82674540000002 2.669 75.73535599999998 3.787 124.33623670000001 2.761 120.09401650000001 2.889 74.4537545 2.642 64.37917499999999 1.964)
Error minima by case: (1.6347 2 12.0 2 10.426 2 40.3302 9 44.0 2 18.0 1 57.4163 1 11.4959 9 77.0 2 46.0644 7 27.0853 9 88.0 2 13.6297 11 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.5165 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 37.262
Average program size in population (points): 38.262
Average percent parens in population: 0.028
Minimum age in population: 46.28315138770267
Maximum age in population: 51.49158890126273
Average age in population: 49.36159376747883
Median age in population: 49.40036178519949
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.028
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 31895739
--- Timings ---
Current time: 1529616168035 milliseconds
Total Time:         115.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.1 seconds, 45.1%
Fitness Testing:     50.9 seconds, 44.1%
Report:              12.4 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_inc} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_inc} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction in2} {:instruction float_tan} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush} {:instruction tag_integer_653} {:instruction float_mult})
Best program: (float_rot float_inc integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_inc integer_dup_times float_yankdup integer_yankdup integer_dec integer_swap tagged_917 float_dup_items in2 float_tan float_tan float_yank integer_dup_items float_flush float_inc float_dup_items float_tan float_yankdup integer_flush float_flush tag_integer_653 float_mult)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2747.8615920999996
Median total errors in population: 1219.0
Error averages by case: (78.0183404 2.827 76.8206599 2.804 116.2545112 2.804 143.26905020000004 11.208 106.61767490000001 2.8 82.2332723 1.982 135.10931319999997 2.865 82.8740466 12.167 137.37182080000005 3.845 144.31395809999998 10.264 126.80045020000001 12.129 147.92549710000003 2.958 103.0339908 13.141 72.12653909999999 2.851 141.2460191 2.834 71.1345331 2.803 82.25152469999999 1.92 64.1984511 1.845 77.32229910000001 2.8 138.101369 2.732 85.5115658 3.849 133.62147950000002 2.813 129.30673679999998 2.969 84.16468830000001 2.68 74.3498008 1.994)
Error minima by case: (1.4233 2 12.0 2 4.0433 2 34.5026 9 44.0 2 18.0 1 3.7481 1 11.5715 8 11.6762 2 45.2895 9 27.324 9 22.6762 2 13.6246 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1111 1 21.0 3 73.0 2 2.6762 2 20.0 1 10.0 1)
Average genome size in population (length): 37.007
Average program size in population (points): 38.007
Average percent parens in population: 0.028
Minimum age in population: 47.28315138770267
Maximum age in population: 52.62816566682886
Average age in population: 50.86339799625275
Median age in population: 50.88051866699243
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.772
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.772
Total error diversity:				 0.028
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 32821189
--- Timings ---
Current time: 1529616171574 milliseconds
Total Time:         118.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.5 seconds, 45.1%
Fitness Testing:     52.5 seconds, 44.1%
Report:              12.7 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 75} {:instruction float_inc} {:instruction float_pop} {:instruction float_tan} {:instruction float_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_pop} {:instruction -30} {:instruction 75} {:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction integer_flush} {:instruction integer_dup_items} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_dup_items} {:instruction float_swap} {:instruction print_float} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction float_pop} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_min} {:instruction integer_sub} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup} {:instruction integer_flush} {:instruction float_flush})
Best program: (75 float_inc float_pop float_tan float_dec float_mult in1 integer_pop -30 75 float_inc float_pop in1 integer_sub float_inc float_swap integer_dup integer_flush integer_dup_items -30 integer_rot float_inc integer_dup_times float_dup_items float_swap print_float float_inc integer_dup_times integer_mult float_swap float_pop integer_flush integer_min integer_dup_times float_yankdup float_min integer_sub float_tan float_yank integer_dup_items float_flush print_float float_tan integer_mult print_float float_dec float_dup_items float_tan float_yankdup integer_flush float_flush)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2802.1150340000004
Median total errors in population: 1219.0
Error averages by case: (81.01396879999999 2.823 79.69060850000001 2.82 118.13417560000003 2.807 146.05487150000002 11.208 109.28529359999999 2.839 85.28892300000003 1.983 136.24771399999997 2.872 84.6499732 12.15 139.22847720000001 3.854 146.98756620000003 10.246 129.269167 12.122 149.96588119999998 2.961 104.6260423 13.134 75.1799574 2.844 143.5981995 2.862 73.67454400000001 2.826 84.3363444 1.935 65.19377550000002 1.854 79.19695080000001 2.831 140.0484253 2.752 87.50916649999999 3.852 135.4451914 2.837 131.0911861 2.957 87.14036580000001 2.696 75.22026520000001 1.973)
Error minima by case: (3.1015 2 7.9101 2 9.5409 2 39.4367 9 10.7325 2 18.0 1 18.5345 1 4.6607 8 32.5349 2 7.8456 8 11.1781 10 17.1892 2 8.8135 8 7.0 1 50.7695 2 5.0 1 17.0 1 0.0 0 3.7603 2 0.3988 1 20.0 2 55.2545 2 11.1324 2 19.0 1 1.6244 1)
Average genome size in population (length): 37.005
Average program size in population (points): 38.005
Average percent parens in population: 0.028
Minimum age in population: 49.46304462477565
Maximum age in population: 54.20416922552977
Average age in population: 52.33093069860531
Median age in population: 52.36232951068087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.029
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 33746564
--- Timings ---
Current time: 1529616174958 milliseconds
Total Time:         122.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.0 seconds, 45.0%
Fitness Testing:     54.0 seconds, 44.2%
Report:              13.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_344} {:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction tag_integer_187} {:instruction float_pop} {:instruction integer_swap} {:instruction tagged_917} {:instruction tagged_925} {:instruction float_dup_items} {:instruction float_yankdup} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_flush} {:instruction integer_dup} {:instruction integer_min} {:instruction tag_integer_653} {:instruction float_sin})
Best program: (tag_float_344 float_inc float_pop in1 integer_sub float_inc float_swap integer_dup float_sub integer_dup_items -30 integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_flush tag_integer_187 float_pop integer_swap tagged_917 tagged_925 float_dup_items float_yankdup float_inc float_tan integer_mult print_float integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank float_cos float_tan integer_mult print_float float_dec float_dup_items float_tan integer_rot integer_flush float_flush integer_dup integer_min tag_integer_653 float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2722.9400415000005
Median total errors in population: 1219.0
Error averages by case: (76.8803033 2.784 75.83469509999999 2.782 115.7323311 2.793 142.1918087 11.192 105.6063166 2.804 81.26414330000001 1.962 134.33269579999998 2.833 81.6289291 12.148 136.65533720000002 3.825 143.16009860000003 10.265 125.33804180000003 12.102 147.2285063 2.928 101.9600901 13.133 71.2964748 2.807 140.2652454 2.833 70.1617349 2.781 81.31314490000001 1.932 63.09862040000001 1.819 76.23450229999999 2.807 136.91859169999998 2.704 84.6276164 3.826 132.59737570000001 2.808 128.63360709999998 2.944 83.21469290000002 2.68 73.25113800000001 2.022)
Error minima by case: (1.6347 2 12.0 2 5.6883 2 35.8979 9 44.0 2 18.0 1 75.0 1 13.0185 8 77.0 2 47.6007 9 28.6098 9 88.0 2 13.0845 8 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1111 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 37.055
Average program size in population (points): 38.055
Average percent parens in population: 0.028
Minimum age in population: 51.48047329767724
Maximum age in population: 55.60254592870479
Average age in population: 53.81171693715794
Median age in population: 53.86230958937085
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.031
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 34673264
--- Timings ---
Current time: 1529616178175 milliseconds
Total Time:         125.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.4 seconds, 45.0%
Fitness Testing:     55.4 seconds, 44.2%
Report:              13.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_div} {:instruction in1} {:instruction -31} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_swap} {:instruction integer_sub} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_rot} {:instruction integer_swap} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove integer_dec float_div in1 -31 integer_yankdup integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times float_swap integer_sub integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup float_rot integer_swap integer_flush)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2767.5569359
Median total errors in population: 1219.0
Error averages by case: (78.91732050000002 2.785 77.501419 2.769 117.2858492 2.779 144.2275794 11.198 107.32473549999999 2.78 83.04078219999998 1.958 136.1183278 2.828 83.63105639999999 12.158 138.2487644 3.808 145.1869428 10.258 127.40321080000001 12.112 148.73218269999998 2.938 104.02835169999999 13.146 72.89545990000002 2.801 141.9151009 2.815 71.8287737 2.769 82.99869 1.897 65.0043605 1.802 78.1367445 2.771 139.2366785 2.698 86.1726622 3.819 134.32156050000003 2.777 130.0735374 2.94 84.8865159 2.646 75.2113295 1.977)
Error minima by case: (1.6346 2 12.0 2 9.0976 2 38.8945 9 44.0 2 18.0 1 75.0 1 11.4959 9 77.0 2 46.0644 8 27.0853 9 88.0 2 10.2535 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1703 1 21.0 3 62.2867 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 36.252
Average program size in population (points): 37.252
Average percent parens in population: 0.029
Minimum age in population: 52.99708864837885
Maximum age in population: 57.16607927394216
Average age in population: 55.2702909240954
Median age in population: 55.30143635774584
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.757
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.757
Total error diversity:				 0.025
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 35579989
--- Timings ---
Current time: 1529616181256 milliseconds
Total Time:         128.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.8 seconds, 44.9%
Fitness Testing:     56.8 seconds, 44.2%
Report:              14.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction float_min} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction integer_yankdup} {:instruction integer_dup} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float})
Best program: (float_rot float_tan float_yank integer_dec float_mult in1 integer_mod -30 float_min integer_rot float_inc integer_dup_times -30 integer_sub integer_rot float_inc integer_dup_times integer_dec float_swap print_float integer_flush integer_min integer_dup_times integer_shove integer_yankdup integer_dup float_tan float_yank integer_dup_items float_flush float_inc float_tan integer_mult print_float)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 3033.3679452
Median total errors in population: 1219.0
Error averages by case: (89.72127130000001 2.921 88.38664189999999 2.893 127.35379200000001 2.901 154.1941086 11.222 117.8386046 2.909 93.84423029999999 2.11 146.30122260000002 2.968 94.43509099999999 12.167 148.43049990000003 3.952 155.2001096 10.269 137.75943700000005 12.137 158.8306995 3.075 114.5365859 13.153 83.8464657 2.954 152.03948519999997 2.936 82.79777929999997 2.898 93.8233652 2.028 76.02338940000001 1.954 88.96701209999999 2.9 149.27102449999998 2.827 97.0383234 3.959 144.5349335 2.912 140.3881499 3.079 95.6977829 2.747 86.09793990000001 2.139)
Error minima by case: (3.024 2 10.9676 2 11.5409 2 41.4367 8 44.0 2 18.0 1 75.0 1 12.7208 9 68.6126 2 47.3639 8 28.2823 11 88.0 2 13.3672 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.0654 1 21.0 3 70.7169 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 35.923
Average program size in population (points): 36.923
Average percent parens in population: 0.029
Minimum age in population: 54.01382880177698
Maximum age in population: 58.86258229132363
Average age in population: 56.80493835002662
Median age in population: 56.84012508687738
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.026
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 36478264
--- Timings ---
Current time: 1529616184480 milliseconds
Total Time:         131.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.3 seconds, 45.0%
Fitness Testing:     58.2 seconds, 44.1%
Report:              14.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction float_add} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction float_div} {:instruction integer_mult} {:instruction -30} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_855} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction integer_mod} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mod} {:instruction print_float} {:instruction integer_min} {:instruction float_dup_items})
Best program: (float_rot float_tan float_add integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc float_div integer_mult -30 float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_855 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items integer_mod float_inc float_tan integer_mod print_float integer_min float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2698.3625278
Median total errors in population: 1219.0
Error averages by case: (75.9890258 2.754 74.7714297 2.734 114.8435386 2.736 141.4442716 11.203 104.59545649999998 2.751 80.14805690000001 1.905 133.35096360000003 2.802 80.88488749999999 12.149 135.5436908 3.778 142.4611141 10.254 125.02322689999998 12.117 146.12297999999998 2.869 101.1876747 13.132 70.0073707 2.76 139.304838 2.773 69.0950924 2.74 80.27301230000002 1.86 62.12750270000001 1.772 75.2748932 2.744 136.4813528 2.667 83.398951 3.778 131.6655735 2.752 127.3910907 2.886 82.20559519999999 2.628 72.3139386 1.913)
Error minima by case: (3.4563 2 12.0 2 10.5442 2 40.4469 8 18.0 2 8.0 1 40.645 1 7.0 2 77.0 2 47.594 8 28.5745 9 88.0 2 13.3672 8 7.0 1 55.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1176 1 21.0 3 47.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 35.714
Average program size in population (points): 36.714
Average percent parens in population: 0.029
Minimum age in population: 55.77533108543139
Maximum age in population: 60.13963919328671
Average age in population: 58.27499802070654
Median age in population: 58.32491031017526
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.739
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.739
Total error diversity:				 0.026
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 37371364
--- Timings ---
Current time: 1529616187750 milliseconds
Total Time:         135.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.8 seconds, 45.0%
Fitness Testing:     59.5 seconds, 44.1%
Report:              14.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction -30} {:instruction integer_sub} {:instruction tagged_337} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_min} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction integer_mult} {:instruction print_float} {:instruction integer_sub} {:instruction integer_swap} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction -63.450831306228395} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan})
Best program: (float_pop in1 integer_sub float_inc float_swap integer_dup float_sub integer_dup_items -30 integer_sub tagged_337 float_inc integer_dup_times integer_mult float_swap integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_min float_tan float_yank integer_dup_items float_flush print_float integer_mult print_float integer_sub integer_swap integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_yank -63.450831306228395 float_tan float_yank integer_dup_items float_flush print_float float_tan)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2836.0279726999997
Median total errors in population: 1219.0
Error averages by case: (81.3092604 2.832 80.62449510000002 2.822 120.2585056 2.83 146.85474969999999 11.186 110.27966219999998 2.838 86.0993993 2.024 138.1563332 2.896 85.71081550000001 12.138 141.15359060000003 3.88 147.8524173 10.25 130.39411350000003 12.108 151.6846248 2.999 106.55119409999999 13.121 76.04126889999999 2.869 144.5429906 2.875 74.94929590000001 2.835 86.0408901 1.955 67.16785180000001 1.874 80.17804899999999 2.838 141.74749780000002 2.746 89.3886737 3.889 136.40105440000002 2.839 133.09062089999998 3.006 87.9476275 2.699 77.22299080000002 2.031)
Error minima by case: (3.1015 2 12.0 2 11.5409 2 40.9167 8 44.0 2 18.0 1 75.0 1 12.9934 9 77.0 2 47.7544 8 28.7098 9 88.0 2 13.3672 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.0654 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 35.36
Average program size in population (points): 36.36
Average percent parens in population: 0.029
Minimum age in population: 56.77533108543139
Maximum age in population: 61.56829094585373
Average age in population: 59.72064341388298
Median age in population: 59.76833685757811
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.737
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.737
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 38255614
--- Timings ---
Current time: 1529616191119 milliseconds
Total Time:         138.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.3 seconds, 45.0%
Fitness Testing:     61.1 seconds, 44.1%
Report:              15.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction float_min} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_sub} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction float_sin} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction integer_min})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 float_min integer_rot float_inc integer_dup_times -30 integer_sub integer_mod float_inc integer_dup_times integer_dec float_swap print_float integer_flush float_sin integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items integer_min)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2733.7423671999995
Median total errors in population: 1219.0
Error averages by case: (77.4381474 2.854 75.92725850000001 2.827 116.01919529999999 2.843 143.0179566 11.242 105.63059179999999 2.871 82.44374529999999 2.016 134.5813847 2.894 81.8709932 12.197 137.7954577 3.889 143.9966616 10.302 126.538419 12.153 148.5004295 2.978 101.8102497 13.173 72.54768130000001 2.878 140.1183434 2.874 70.2596911 2.845 81.366326 1.968 62.4242805 1.88 75.4255552 2.854 136.86699320000002 2.775 85.96983190000002 3.879 131.82089320000003 2.866 129.8688431 2.991 83.26537380000002 2.729 73.40406420000001 2.056)
Error minima by case: (3.8478 2 2.2372 2 5.6883 2 22.3227 8 10.0935 2 18.0 1 57.4163 1 12.4959 9 74.7209 2 15.9782 7 28.0853 9 88.0 2 13.3672 10 7.0 1 44.0565 2 4.9136 1 0.5897 1 0.0 0 13.0 2 0.2539 1 21.0 3 23.5714 2 61.6951 2 2.1995 1 10.0 1)
Average genome size in population (length): 35.352
Average program size in population (points): 36.352
Average percent parens in population: 0.029
Minimum age in population: 58.73678756267327
Maximum age in population: 63.31500371771472
Average age in population: 61.21835034924688
Median age in population: 61.29126449195701
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.742
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.742
Total error diversity:				 0.033
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 39139714
--- Timings ---
Current time: 1529616194559 milliseconds
Total Time:         141.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.7 seconds, 44.9%
Fitness Testing:     62.7 seconds, 44.2%
Report:              15.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction float_div} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_yank} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_sub} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_mult} {:instruction float_dup_items} {:instruction print_float} {:instruction integer_flush} {:instruction integer_dup} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_dup} {:instruction integer_sub} {:instruction 92.46242162775141} {:instruction float_sin} {:instruction float_dup_items} {:instruction tagged_917} {:instruction float_dup} {:instruction float_mod} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_pop} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction -72})
Best program: (in1 integer_mod -30 integer_sub float_div float_inc integer_sub integer_yank -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_sub integer_stackdepth float_inc integer_mult float_dup_items print_float integer_flush integer_dup integer_dup_times float_yankdup integer_dup integer_sub 92.46242162775141 float_sin float_dup_items tagged_917 float_dup float_mod integer_dup_times float_yankdup integer_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_pop float_yank float_cos float_tan float_yank integer_dup_items float_flush -72)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2797.9535965
Median total errors in population: 1219.0
Error averages by case: (79.84206270000001 2.887 78.99433659999998 2.865 117.99668670000001 2.866 144.75319030000003 11.249 108.5491549 2.891 84.32219280000001 2.059 137.1612819 2.936 84.57531769999999 12.203 139.5880798 3.905 145.75798340000003 10.312 127.99270719999998 12.144 150.20949709999996 3.02 104.80013849999999 13.17 74.3823059 2.916 143.07630890000002 2.92 73.3617035 2.88 84.4564334 2.014 66.17972169999999 1.908 79.25277349999999 2.882 139.5194696 2.795 87.95836460000001 3.913 135.41004709999999 2.89 131.6963521 3.028 86.35680970000001 2.767 76.2776769 2.063)
Error minima by case: (1.6347 2 12.0 2 8.7697 2 36.7633 9 3.2367 2 18.0 1 57.4163 1 10.3936 9 77.0 2 37.7633 8 18.7633 9 88.0 2 13.6251 10 7.0 1 33.7633 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1176 1 21.0 3 25.7633 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 34.903
Average program size in population (points): 35.903
Average percent parens in population: 0.030
Minimum age in population: 59.82695302389038
Maximum age in population: 64.6853264127185
Average age in population: 62.70318160452986
Median age in population: 62.75540453110307
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.737
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.737
Total error diversity:				 0.04
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 40012464
--- Timings ---
Current time: 1529616197821 milliseconds
Total Time:         145.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.2 seconds, 44.9%
Fitness Testing:     64.0 seconds, 44.1%
Report:              15.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_shove} {:instruction in1} {:instruction integer_mod} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction float_rot} {:instruction integer_min} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction float_stackdepth} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction -31} {:instruction float_tan} {:instruction tagged_337} {:instruction float_inc} {:instruction integer_dup_times})
Best program: (integer_shove float_tan integer_shove integer_dec float_shove in1 integer_mod integer_sub integer_rot float_inc integer_inc integer_rot float_inc integer_dup_times integer_mult float_swap print_float float_rot integer_min integer_min integer_dup_times float_yankdup integer_yankdup integer_sub float_stackdepth integer_mult float_inc integer_dup_times integer_mult -31 float_tan tagged_337 float_inc integer_dup_times)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2189.1167933000006
Median total errors in population: 1219.0
Error averages by case: (55.1940375 2.539 54.0265631 2.522 94.53758799999999 2.524 123.19863869999999 11.109 84.5562021 2.522 60.624778799999994 1.679 113.3205103 2.576 58.9630919 12.067 117.18138890000002 3.55 124.1225068 10.172 106.06205140000002 12.043 127.93708350000001 2.654 80.5661439 13.052 50.270543399999994 2.549 119.67415790000003 2.564 48.220628699999985 2.527 59.671534599999994 1.63 39.392224799999994 1.537 52.01976210000001 2.511 117.1308445 2.462 63.967105299999986 3.57 110.698988 2.526 108.89108600000002 2.671 61.6262224 2.44 49.569110699999996 1.698)
Error minima by case: (3.6347 2 11.0 2 10.0873 1 39.9913 8 43.0 2 17.0 1 47.193 1 2.6607 8 77.0 2 5.8456 8 13.1781 8 88.0 2 6.8135 9 6.0 1 80.0 2 6.0 1 18.0 1 0.0 0 12.0 2 0.0654 1 21.0 3 72.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 34.807
Average program size in population (points): 35.807
Average percent parens in population: 0.030
Minimum age in population: 61.71976339433968
Maximum age in population: 66.06664711518806
Average age in population: 64.1859086150227
Median age in population: 64.18876838173321
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 40882839
--- Timings ---
Current time: 1529616201128 milliseconds
Total Time:         148.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.8 seconds, 45.0%
Fitness Testing:     65.4 seconds, 44.0%
Report:              16.2 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_dup} {:instruction print_float} {:instruction float_cos} {:instruction integer_min})
Best program: (float_div in1 integer_mod float_inc integer_sub float_inc integer_dup_times integer_mult float_dup print_float float_cos integer_min)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 2979.9547242
Median total errors in population: 1219.0
Error averages by case: (87.19011860000002 2.881 85.6466442 2.878 126.08843879999999 2.886 152.34181249999997 11.217 115.11116739999999 2.884 92.0942872 2.065 144.636572 2.941 91.09508480000002 12.165 147.71052620000003 3.927 153.23909840000002 10.281 135.9171001 12.131 158.03699029999999 3.044 112.30158309999999 13.137 82.1237024 2.917 149.20936019999996 2.92 81.03357150000001 2.888 92.05761569999999 2.002 72.1948912 1.931 84.7838969 2.881 147.26906089999997 2.801 96.4356933 3.948 141.0551317 2.892 139.7807553 3.057 93.96486920000002 2.76 83.13675230000001 2.066)
Error minima by case: (1.6347 2 12.0 2 10.0873 2 39.9913 8 44.0 2 18.0 1 75.0 1 4.6607 9 77.0 2 7.8456 9 11.1781 10 88.0 2 8.8135 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.3148 1 21.0 3 73.0 2 68.0 2 20.0 1 3.283 1)
Average genome size in population (length): 34.147
Average program size in population (points): 35.147
Average percent parens in population: 0.030
Minimum age in population: 62.71976339433968
Maximum age in population: 67.60147792520763
Average age in population: 65.6632102541706
Median age in population: 65.73701829682244
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.739
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.739
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 41736739
--- Timings ---
Current time: 1529616204301 milliseconds
Total Time:         151.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.4 seconds, 45.1%
Fitness Testing:     66.8 seconds, 44.0%
Report:              16.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_inc} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_inc} {:instruction integer_dup_times} {:instruction float_yankdup})
Best program: (float_rot float_inc integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times float_mult float_swap print_float integer_flush integer_inc integer_dup_times float_yankdup)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2698.0339146999995
Median total errors in population: 1219.0
Error averages by case: (75.76996040000002 2.841 74.86748150000001 2.823 114.91061169999999 2.82 141.11578269999998 11.227 104.55425220000001 2.85 80.5666593 1.993 133.06146539999997 2.877 80.04795209999999 12.166 136.0234891 3.855 142.1395014 10.262 124.4127818 12.125 146.7173893 2.949 100.88849600000002 13.147 70.64443740000002 2.873 139.1792996 2.847 69.2152088 2.835 80.33188270000001 1.939 61.64466970000001 1.872 74.64675530000002 2.838 136.02294 2.77 84.0377851 3.863 131.09640710000002 2.84 128.058845 2.954 82.22211010000002 2.712 71.611751 1.968)
Error minima by case: (3.8478 2 1.4826 2 5.6883 2 12.3783 10 5.2675 2 18.0 1 47.6508 1 11.4959 7 77.0 2 16.7327 8 27.0853 9 88.0 2 13.6251 10 7.0 1 27.9051 2 5.6682 1 1.3442 1 0.0 0 13.0 2 0.0654 1 16.6468 3 7.4201 2 68.0 2 2.4606 1 10.0 1)
Average genome size in population (length): 34.234
Average program size in population (points): 35.234
Average percent parens in population: 0.030
Minimum age in population: 63.93496302322092
Maximum age in population: 69.1625482676427
Average age in population: 67.15172065757017
Median age in population: 67.21108066464174
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.035
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 42592789
--- Timings ---
Current time: 1529616207665 milliseconds
Total Time:         155.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.8 seconds, 45.0%
Fitness Testing:     68.3 seconds, 44.1%
Report:              16.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction print_float} {:instruction float_max} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_pop} {:instruction float_shove} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_min} {:instruction float_flush} {:instruction float_inc} {:instruction integer_mult} {:instruction print_float} {:instruction integer_sub} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap})
Best program: (float_rot float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub float_inc float_inc integer_mult print_float float_max print_float integer_yankdup integer_sub integer_swap tagged_917 integer_dup_items float_dec integer_pop float_shove integer_mult integer_stackdepth integer_dup integer_min float_flush float_inc integer_mult print_float integer_sub integer_mod integer_yankdup integer_sub integer_swap)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2529.153296
Median total errors in population: 1219.0
Error averages by case: (69.0646508 2.712 67.8130487 2.701 107.82491800000001 2.7 135.04796290000002 11.189 97.81171259999999 2.707 73.44566220000002 1.88 126.890166 2.761 73.9306996 12.157 129.06300990000003 3.737 136.0120171 10.263 118.2849266 12.109 139.7509888 2.853 94.4327251 13.135 63.2076826 2.714 132.8159194 2.754 61.9949853 2.703 73.40452710000001 1.829 55.034859600000004 1.712 68.3071363 2.706 129.9061337 2.622 76.63616919999998 3.747 125.1382129 2.713 120.9049706 2.865 75.35458049999998 2.604 65.3346305 1.868)
Error minima by case: (3.2007 2 12.0 2 9.5409 2 39.4367 8 5.5249 2 18.0 1 50.307 1 11.1648 9 6.9146 2 45.7813 8 26.7366 9 57.2615 2 13.3672 10 7.0 1 72.625 2 6.0 1 18.0 1 0.0 0 11.8604 2 0.0654 1 21.0 3 68.7676 2 48.7206 2 20.0 1 9.9872 1)
Average genome size in population (length): 33.973
Average program size in population (points): 34.973
Average percent parens in population: 0.030
Minimum age in population: 65.39558282062808
Maximum age in population: 70.67618635672667
Average age in population: 68.67178961238768
Median age in population: 68.71152449806526
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.729
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.729
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 43442339
--- Timings ---
Current time: 1529616210998 milliseconds
Total Time:         158.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.3 seconds, 45.0%
Fitness Testing:     69.9 seconds, 44.1%
Report:              17.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -31} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_yank} {:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -31} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_yank} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction float_pop} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_sin} {:instruction float_cos} {:instruction tagged_921})
Best program: (float_rot float_mult in1 integer_mod -31 integer_yankdup integer_rot float_inc integer_sub integer_rot float_inc integer_dup_times float_yank float_rot float_mult in1 integer_mod -31 integer_yankdup integer_rot float_inc integer_sub integer_rot float_inc integer_dup_times integer_mult float_swap float_swap print_float integer_flush integer_fromfloat integer_dup_times float_yank float_swap print_float integer_flush float_pop integer_dup_times float_yankdup integer_yankdup float_sin float_cos tagged_921)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2674.8640268999998
Median total errors in population: 1219.0
Error averages by case: (74.71708570000001 2.752 74.15936159999998 2.737 114.14752890000001 2.752 140.6501445 11.184 103.97604129999999 2.752 79.65562539999999 1.912 131.9278245 2.798 79.05499029999999 12.158 135.03678430000002 3.778 141.6024852 10.261 123.78031730000001 12.101 145.6034895 2.882 100.1288269 13.117 69.6646778 2.781 138.51653189999996 2.785 68.51424659999999 2.751 79.70171350000001 1.863 60.5715986 1.779 72.9529048 2.75 135.43079720000003 2.675 83.00917360000003 3.783 130.24207100000004 2.764 127.00442389999998 2.895 81.6151739 2.647 70.6422087 1.901)
Error minima by case: (1.6347 2 12.0 2 5.6883 2 35.8979 9 44.0 2 18.0 1 75.0 1 11.4959 10 77.0 2 46.0644 9 27.0853 8 88.0 2 8.0485 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.2539 1 21.0 3 55.0078 2 68.0 2 20.0 1 6.4739 1)
Average genome size in population (length): 33.986
Average program size in population (points): 34.986
Average percent parens in population: 0.030
Minimum age in population: 67.35758148604361
Maximum age in population: 72.05927549270679
Average age in population: 70.15258791116305
Median age in population: 70.2069635425273
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 44292264
--- Timings ---
Current time: 1529616214088 milliseconds
Total Time:         161.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.7 seconds, 45.0%
Fitness Testing:     71.2 seconds, 44.1%
Report:              17.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction tag_float_999} {:instruction integer_dec} {:instruction float_swap} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_mult} {:instruction in1} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction float_dec} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_tan} {:instruction integer_mult})
Best program: (float_rot float_tan tag_float_999 integer_dec float_swap in1 integer_mod -30 integer_rot float_inc integer_inc integer_sub float_inc integer_dup_times integer_dup_times float_mult in1 integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush float_dec integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 integer_yankdup integer_sub float_tan float_yank integer_dup_items float_flush print_float float_tan integer_mult)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2647.2544337
Median total errors in population: 1219.0
Error averages by case: (74.0516142 2.733 72.5576447 2.706 112.48063370000001 2.718 139.7730072 11.221 102.4039252 2.726 78.2560531 1.886 131.4766971 2.77 78.8007532 12.174 133.5013947 3.753 140.75481530000002 10.266 123.00664550000002 12.114 143.9039022 2.847 99.32526669999999 13.144 68.0389902 2.735 137.16870380000003 2.75 66.94849050000002 2.72 78.2146814 1.825 60.01377850000001 1.745 73.1628976 2.719 134.8778953 2.644 81.30283609999998 3.744 129.5982387 2.721 125.21728310000002 2.851 80.130752 2.609 70.2735337 1.893)
Error minima by case: (1.6347 2 12.0 2 11.5409 2 41.4143 9 11.7325 2 18.0 1 66.5837 1 6.3746 9 31.5349 2 47.7558 9 25.7129 9 16.1892 2 13.6297 9 7.0 1 51.7695 2 6.0 1 18.0 1 0.0 0 4.7603 2 0.4927 1 21.0 3 56.2545 2 12.1324 2 20.0 1 10.0 1)
Average genome size in population (length): 33.325
Average program size in population (points): 34.325
Average percent parens in population: 0.031
Minimum age in population: 68.35758148604361
Maximum age in population: 73.60215138982853
Average age in population: 71.63398718202657
Median age in population: 71.6976285914682
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.028
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 45125639
--- Timings ---
Current time: 1529616217413 milliseconds
Total Time:         164.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.1 seconds, 45.0%
Fitness Testing:     72.6 seconds, 44.1%
Report:              17.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction float_swap} {:instruction float_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_swap} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_pop} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_shove} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items})
Best program: (float_rot float_tan integer_shove float_rot integer_add in1 integer_mod float_inc float_swap float_inc float_div integer_inc float_swap print_float integer_yankdup integer_sub integer_swap tagged_917 float_pop float_dec float_dup_items float_shove tagged_917 float_dup_items float_yank float_cos float_tan float_yank integer_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2700.2387121
Median total errors in population: 1219.0
Error averages by case: (75.3902521 2.76 74.7181631 2.743 115.61247320000001 2.762 141.40778219999999 11.216 104.5193687 2.765 80.29653319999998 1.94 132.7533003 2.815 79.7688348 12.184 136.5125819 3.787 142.38685960000004 10.291 124.6803374 12.122 147.00871279999998 2.903 101.56921619999999 13.145 70.1782086 2.779 139.0608642 2.79 70.05488150000001 2.766 81.23841440000001 1.888 60.3204258 1.782 74.2665429 2.755 137.23749330000004 2.694 84.56916650000001 3.79 130.8588847 2.768 128.40354340000002 2.906 83.15159650000003 2.653 71.3232748 1.947)
Error minima by case: (1.6347 2 12.0 2 9.5261 2 39.4587 9 13.7325 2 18.0 1 64.5837 1 11.278 9 29.5349 2 45.8061 9 26.7614 9 14.1892 2 14.0251 10 7.0 1 53.7695 2 6.0 1 18.0 1 0.0 0 6.7603 2 0.2539 1 21.0 3 58.2545 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 32.877
Average program size in population (points): 33.877
Average percent parens in population: 0.031
Minimum age in population: 70.25274315588712
Maximum age in population: 74.93453890443004
Average age in population: 73.10785887349155
Median age in population: 73.15131887268473
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.032
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 45947889
--- Timings ---
Current time: 1529616220841 milliseconds
Total Time:         168.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.7 seconds, 45.0%
Fitness Testing:     74.1 seconds, 44.1%
Report:              18.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction print_float} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction float_sin})
Best program: (float_mult in1 integer_mod -30 integer_sub integer_rot float_inc integer_inc integer_rot float_inc print_float integer_mult float_swap print_float integer_flush integer_fromfloat float_flush float_inc float_tan float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2794.3450551
Median total errors in population: 1219.0
Error averages by case: (79.6164284 2.813 78.99630219999999 2.786 119.19682309999999 2.813 145.36655130000003 11.248 108.70934629999999 2.825 84.31917870000001 1.981 136.43467820000004 2.858 83.94342449999999 12.214 139.3838895 3.83 146.2930493 10.307 128.52786740000002 12.154 149.8509022 2.945 104.93300070000001 13.176 74.21178359999999 2.839 143.07241810000002 2.839 73.3293959 2.808 84.45865710000001 1.929 65.51889440000001 1.846 78.53513939999999 2.805 140.14372720000003 2.737 87.49986790000001 3.833 134.87538530000003 2.825 131.2593111 2.944 86.35090730000002 2.675 75.51112600000002 1.977)
Error minima by case: (3.1015 2 12.0 2 9.5409 2 40.4367 9 44.0 2 18.0 1 75.0 1 11.4959 10 77.0 2 46.0644 10 27.0853 10 88.0 2 14.5237 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.4589 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 32.585
Average program size in population (points): 33.585
Average percent parens in population: 0.032
Minimum age in population: 71.65181950183043
Maximum age in population: 76.59434037306266
Average age in population: 74.61212244556204
Median age in population: 74.63216907388254
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.754
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.754
Total error diversity:				 0.028
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 46762789
--- Timings ---
Current time: 1529616223852 milliseconds
Total Time:         171.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.1 seconds, 45.0%
Fitness Testing:     75.5 seconds, 44.1%
Report:              18.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction float_shove} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction print_integer} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_sub} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_pop} {:instruction integer_mult} {:instruction float_mult} {:instruction print_float} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction float_yankdup} {:instruction float_cos} {:instruction float_sin} {:instruction float_cos} {:instruction tagged_921} {:instruction float_dup_items} {:instruction float_yank} {:instruction integer_inc} {:instruction float_yank} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_inc float_pop in1 float_shove float_inc float_swap integer_dup print_integer integer_rot float_inc integer_dup_times integer_mult integer_sub integer_mult float_swap print_float integer_pop integer_mult float_mult print_float integer_rot float_inc integer_dup_times print_float float_swap print_float integer_flush float_yankdup float_cos float_sin float_cos tagged_921 float_dup_items float_yank integer_inc float_yank float_yankdup float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2436.5887309
Median total errors in population: 1219.0
Error averages by case: (65.0377483 2.722 64.21174740000001 2.715 104.1865036 2.715 131.0662275 11.177 94.2905161 2.726 69.68071370000001 1.879 123.30306589999999 2.76 69.91162630000001 12.136 125.79089240000003 3.745 132.07774460000002 10.231 114.1619237 12.111 136.6002217 2.846 90.3635721 13.12 59.563453 2.737 129.3880862 2.757 58.44577959999999 2.714 69.69071699999999 1.835 51.1413594 1.746 64.44530769999999 2.729 125.5693584 2.652 73.35501169999999 3.75 121.5896402 2.727 117.78362879999999 2.859 71.6346585 2.616 61.397227099999995 1.897)
Error minima by case: (1.6347 2 11.0 2 7.4931 1 40.4469 8 43.0 2 17.0 1 75.0 1 11.4959 9 77.0 2 46.0644 8 27.0853 9 88.0 2 13.3672 10 6.0 1 80.0 2 6.0 1 18.0 1 0.0 0 12.0 2 0.0654 1 21.0 3 72.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 32.545
Average program size in population (points): 33.545
Average percent parens in population: 0.032
Minimum age in population: 73.15073166849434
Maximum age in population: 78.291618247352
Average age in population: 76.10282878707542
Median age in population: 76.16672217479469
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.728
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.728
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 47576889
--- Timings ---
Current time: 1529616227052 milliseconds
Total Time:         174.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        78.6 seconds, 45.0%
Fitness Testing:     76.8 seconds, 44.0%
Report:              18.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_mod} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction float_frominteger} {:instruction in2} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_dec} {:instruction integer_dup_items} {:instruction print_float} {:instruction integer_div} {:instruction integer_dec} {:instruction float_dec} {:instruction float_dup_items})
Best program: (float_rot float_dup_items integer_shove integer_dec float_mult in1 integer_yankdup float_dup_times float_inc float_inc integer_mult integer_mod print_float integer_flush integer_min float_frominteger in2 integer_yankdup float_yank float_cos float_tan float_dec integer_dup_items print_float integer_div integer_dec float_dec float_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2645.8635191000003
Median total errors in population: 1219.0
Error averages by case: (73.43494739999998 2.778 73.09039979999999 2.778 112.75903600000001 2.782 139.4273015 11.139 102.8161231 2.796 78.62906969999999 1.988 130.8395052 2.844 77.73622990000001 12.069 133.99631980000004 3.824 140.3818679 10.205 122.5454165 12.031 144.65782259999995 2.961 98.8185057 13.055 68.6606868 2.8 137.3992512 2.844 67.20265359999999 2.793 78.8471416 1.934 58.407028100000005 1.816 71.69317819999998 2.791 134.10344290000003 2.693 82.14851239999997 3.842 129.1032868 2.807 126.01604910000002 2.973 80.6325589 2.667 69.31218439999999 1.995)
Error minima by case: (1.6347 2 12.0 2 8.0397 2 37.9356 9 13.7325 2 18.0 1 64.5837 1 2.6607 9 29.5349 2 5.8456 8 13.1781 9 14.1892 2 6.8135 10 7.0 1 53.7695 2 6.0 1 11.7846 1 0.0 0 6.7603 2 0.0654 1 14.6222 3 58.2545 2 9.0526 2 20.0 1 8.95 1)
Average genome size in population (length): 31.537
Average program size in population (points): 32.537
Average percent parens in population: 0.033
Minimum age in population: 75.00213910161028
Maximum age in population: 79.2753024764617
Average age in population: 77.57201566401166
Median age in population: 77.6013997844265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 48365739
--- Timings ---
Current time: 1529616230342 milliseconds
Total Time:         177.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.1 seconds, 45.1%
Fitness Testing:     78.2 seconds, 44.0%
Report:              19.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction in1} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction float_rot} {:instruction float_tan} {:instruction float_rot} {:instruction integer_mult} {:instruction integer_shove} {:instruction float_tan} {:instruction float_pop} {:instruction in1} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_shove} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_swap} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_swap} {:instruction tagged_925} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items})
Best program: (float_shove in1 integer_stackdepth integer_sub float_rot float_tan float_rot integer_mult integer_shove float_tan float_pop in1 integer_sub float_inc integer_shove integer_dup float_sub integer_dup_items float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_swap float_yankdup integer_yankdup float_dup_items integer_swap tagged_925 float_tan float_yank integer_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2804.0965272000003
Median total errors in population: 1219.0
Error averages by case: (79.49156179999999 2.873 79.55603669999999 2.865 118.93338300000002 2.869 145.31290049999998 11.183 108.89427629999999 2.869 85.2353592 2.07 136.29154349999996 2.93 83.87881349999999 12.132 139.94993240000005 3.91 146.3040124 10.27 128.94244510000001 12.102 150.9421697 3.039 104.89059719999999 13.113 75.2965655 2.907 143.18877 2.916 74.0870453 2.861 85.32899330000001 2.005 65.4643944 1.909 78.40004090000001 2.872 140.3940821 2.782 88.95287210000002 3.925 134.77849960000003 2.879 132.4824902 3.048 87.32076060000001 2.744 74.6079819 2.098)
Error minima by case: (2.024 2 12.0 2 10.5409 2 40.4367 9 44.0 2 0.9622 1 27.5957 1 12.1648 9 66.6445 2 46.7813 8 27.7366 9 88.0 2 12.2537 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.1176 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 31.4
Average program size in population (points): 32.4
Average percent parens in population: 0.033
Minimum age in population: 76.23840340965295
Maximum age in population: 81.00885515855111
Average age in population: 79.05520905474745
Median age in population: 79.08759090223646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.031
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 49151339
--- Timings ---
Current time: 1529616233469 milliseconds
Total Time:         180.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.6 seconds, 45.1%
Fitness Testing:     79.5 seconds, 44.0%
Report:              19.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction tagged_600} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_yankdup} {:instruction float_shove} {:instruction float_tan} {:instruction integer_mult} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_min} {:instruction float_flush} {:instruction float_stackdepth} {:instruction float_sub} {:instruction print_float} {:instruction integer_sub} {:instruction integer_mod} {:instruction integer_yankdup} {:instruction float_max} {:instruction integer_swap})
Best program: (integer_shove integer_shove integer_dec float_mult float_rot float_tan integer_shove integer_dec float_mult in1 float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_mult float_swap print_float integer_flush tagged_600 integer_dup_times float_yankdup integer_yankdup integer_sub integer_swap tagged_917 float_dup_items float_inc float_yankdup float_shove float_tan integer_mult integer_stackdepth integer_dup integer_min float_flush float_stackdepth float_sub print_float integer_sub integer_mod integer_yankdup float_max integer_swap)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2644.1754716000005
Median total errors in population: 1219.0
Error averages by case: (73.3871011 2.79 72.9052313 2.787 112.29177960000003 2.797 139.5548112 11.192 102.7148275 2.789 78.41462200000001 1.956 130.7721145 2.839 77.80094330000001 12.15 133.8405533 3.813 140.4816693 10.241 122.7369031 12.105 144.25194089999997 2.915 98.86673089999998 13.12 68.3234034 2.815 137.2864374 2.823 67.26413380000001 2.789 78.44932410000003 1.903 59.233965399999995 1.831 71.6197466 2.796 134.24857680000002 2.726 81.85265209999999 3.826 129.04396069999999 2.798 125.77825790000003 2.937 80.37650330000001 2.667 69.30128210000001 1.973)
Error minima by case: (1.024 2 12.0 2 10.5442 2 40.4143 9 13.7325 2 17.0287 1 64.5837 1 12.0372 9 29.5349 2 46.7558 8 27.7111 8 14.1892 2 11.6246 9 0.4222 1 53.7695 2 6.0 1 18.0 1 0.0 0 6.7603 2 0.5165 1 21.0 3 58.2545 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 31.464
Average program size in population (points): 32.464
Average percent parens in population: 0.033
Minimum age in population: 78.03843536175545
Maximum age in population: 82.70376753004129
Average age in population: 80.52516381794975
Median age in population: 80.57750362016357
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.709
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.709
Total error diversity:				 0.029
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 49938414
--- Timings ---
Current time: 1529616236635 milliseconds
Total Time:         184.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.1 seconds, 45.1%
Fitness Testing:     80.9 seconds, 43.9%
Report:              20.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction float_yankdup} {:instruction integer_stackdepth} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_div} {:instruction in1} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_swap} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction float_rot} {:instruction float_swap} {:instruction integer_shove} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_div} {:instruction integer_swap} {:instruction tagged_976} {:instruction float_max} {:instruction integer_inc} {:instruction float_dup_items} {:instruction tag_integer_653} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times})
Best program: (integer_shove float_yankdup integer_stackdepth integer_shove integer_dec float_mult float_rot float_tan integer_shove integer_dec float_div in1 integer_mod integer_sub float_swap float_inc integer_inc integer_rot float_inc integer_dup_times integer_mult float_swap print_float float_rot float_swap integer_shove integer_flush integer_dup_times float_yankdup integer_yankdup integer_div integer_swap tagged_976 float_max integer_inc float_dup_items tag_integer_653 float_yank integer_dup_items float_flush integer_dup_times integer_dec float_swap print_float integer_flush integer_min integer_dup_times)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2697.9005905999998
Median total errors in population: 1219.0
Error averages by case: (76.0061409 2.779 74.6412754 2.742 114.33844210000001 2.76 141.2413814 11.232 104.48008090000002 2.773 80.3416745 1.93 133.51146409999998 2.821 80.73946959999999 12.19 135.7930117 3.797 142.23172300000002 10.279 124.5653752 12.135 146.35452499999997 2.884 101.1603267 13.161 70.25169129999999 2.793 139.1898577 2.775 68.9794104 2.762 80.13995919999999 1.866 62.099031700000005 1.789 75.1961607 2.756 136.2610319 2.695 83.7494717 3.793 131.5397408 2.773 127.7176284 2.894 82.04948830000001 2.647 72.374228 1.922)
Error minima by case: (1.6347 2 2.2372 2 10.5261 2 11.4367 8 15.5081 2 18.0 1 75.0 1 12.278 8 77.0 2 15.9782 9 1.2634 9 88.0 2 13.3672 10 7.0 1 49.4711 2 4.9136 1 0.5897 1 0.0 0 5.7603 2 0.5166 1 21.0 3 28.986 2 68.0 2 3.2151 1 10.0 1)
Average genome size in population (length): 31.276
Average program size in population (points): 32.276
Average percent parens in population: 0.033
Minimum age in population: 79.33292161689286
Maximum age in population: 84.01023969228164
Average age in population: 81.99989269224193
Median age in population: 82.01840919576648
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.722
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.722
Total error diversity:				 0.028
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 50720664
--- Timings ---
Current time: 1529616239983 milliseconds
Total Time:         187.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.7 seconds, 45.2%
Fitness Testing:     82.2 seconds, 43.9%
Report:              20.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_mult} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction float_rot} {:instruction tag_float_940} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction print_float} {:instruction tagged_917} {:instruction float_dup_items} {:instruction integer_sub} {:instruction float_swap} {:instruction float_swap} {:instruction print_float} {:instruction integer_sub} {:instruction integer_flush} {:instruction print_float} {:instruction integer_flush} {:instruction float_sin})
Best program: (float_rot integer_mult integer_shove integer_dec float_mult float_rot tag_float_940 in1 integer_mod -30 integer_sub integer_rot float_inc integer_stackdepth integer_rot float_inc integer_dup_times integer_mult integer_dup_times print_float tagged_917 float_dup_items integer_sub float_swap float_swap print_float integer_sub integer_flush print_float integer_flush float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2906.0953280000003
Median total errors in population: 1219.0
Error averages by case: (84.2729785 2.923 83.1623447 2.903 122.6151966 2.924 149.4918272 11.241 112.47936 2.937 89.53201390000001 2.119 141.0223009 2.983 88.72555800000002 12.176 144.148871 3.96 150.4441978 10.314 133.1893589 12.148 154.96408030000003 3.083 108.4981835 13.164 79.86995 2.945 146.72053499999998 2.962 77.5892929 2.919 88.59562439999999 2.069 69.5156494 1.955 82.40447560000001 2.928 143.55723809999998 2.835 93.1152031 3.968 138.6198329 2.942 136.3063856 3.089 90.57917300000001 2.796 80.2766967 2.116)
Error minima by case: (3.9911 2 0.6316 2 0.0076 2 40.4469 8 5.3124 2 18.0 1 56.4163 1 12.2405 6 29.5349 2 42.5055 8 27.7528 9 14.1892 2 8.7455 10 7.0 1 22.9437 2 6.0 1 14.7066 1 0.0 0 6.7603 2 0.2133 1 21.0 2 2.4587 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 31.086
Average program size in population (points): 32.086
Average percent parens in population: 0.034
Minimum age in population: 80.80552937377284
Maximum age in population: 85.28930926586918
Average age in population: 83.52887885311495
Median age in population: 83.5581858640182
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.706
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.706
Total error diversity:				 0.036
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 51498264
--- Timings ---
Current time: 1529616243074 milliseconds
Total Time:         190.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        86.1 seconds, 45.2%
Fitness Testing:     83.5 seconds, 43.9%
Report:              20.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction float_tan} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction float_min} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times})
Best program: (in2 float_tan integer_dec float_mult in1 integer_mod -30 float_min integer_rot float_inc integer_inc float_inc integer_dup_times integer_mult float_swap print_float integer_sub integer_rot float_inc integer_dup_times)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2819.4793114
Median total errors in population: 1219.0
Error averages by case: (81.84197910000002 2.849 78.7450483 2.826 118.34009230000002 2.829 146.72836239999998 11.213 108.43884739999999 2.85 86.1549082 2.019 138.9349374 2.893 86.54281169999999 12.145 141.2108574 3.882 147.7761295 10.251 130.04870140000003 12.119 151.75910460000003 2.989 104.85178070000002 13.128 76.13731949999999 2.88 143.0029021 2.872 73.0514662 2.843 84.1742355 1.955 66.0573094 1.877 79.17833019999999 2.84 139.7380773 2.76 89.48976689999999 3.881 135.3727037 2.858 133.1880306 2.991 86.06635360000001 2.704 78.181256 2.014)
Error minima by case: (3.0245 2 12.0 2 11.5409 2 12.3783 9 44.0 2 18.0 1 75.0 1 11.4959 6 77.0 2 46.0644 8 27.0853 10 88.0 2 13.6297 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.3988 1 16.6468 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 30.825
Average program size in population (points): 31.825
Average percent parens in population: 0.033
Minimum age in population: 82.1390001584256
Maximum age in population: 86.91125135997876
Average age in population: 85.02705572164582
Median age in population: 85.03323508916002
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.028
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 52269139
--- Timings ---
Current time: 1529616246091 milliseconds
Total Time:         193.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.5 seconds, 45.2%
Fitness Testing:     84.9 seconds, 43.9%
Report:              21.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_stackdepth} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction print_float} {:instruction float_swap} {:instruction print_float} {:instruction integer_mult} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc})
Best program: (float_rot float_tan integer_stackdepth integer_dec float_mult in1 integer_mod -30 integer_stackdepth float_inc float_inc integer_mult print_float float_swap print_float integer_mult -30 integer_sub integer_rot float_inc)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2766.8135268
Median total errors in population: 1219.0
Error averages by case: (78.97801510000001 2.759 77.48393420000001 2.745 117.36624200000003 2.757 144.3487809 11.222 107.30757279999999 2.768 82.9041011 1.917 136.06581640000002 2.795 83.67599030000001 12.188 138.1213615 3.789 145.2919376 10.264 127.50782440000002 12.14 148.555747 2.881 104.0584338 13.168 72.7138477 2.786 141.924113 2.78 71.80520539999999 2.756 83.00863650000001 1.866 65.05360280000001 1.792 78.1750384 2.753 139.36943960000002 2.696 85.9298043 3.79 134.37341089999998 2.769 129.87029750000002 2.881 84.8861817 2.63 75.2221919 1.924)
Error minima by case: (3.9911 2 12.0 2 9.5409 2 39.4367 10 44.0 2 18.0 1 57.4163 1 11.1648 11 77.0 2 45.7813 9 26.7366 10 88.0 2 6.5293 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.6345 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 30.769
Average program size in population (points): 31.769
Average percent parens in population: 0.034
Minimum age in population: 83.35282319866106
Maximum age in population: 88.46669295025751
Average age in population: 86.5489847618549
Median age in population: 86.58914723601663
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.695
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.695
Total error diversity:				 0.022
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 53038614
--- Timings ---
Current time: 1529616249253 milliseconds
Total Time:         196.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.1 seconds, 45.3%
Fitness Testing:     86.2 seconds, 43.8%
Report:              21.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mod} {:instruction in1} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction integer_dup_times} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction print_float} {:instruction float_pop} {:instruction float_dup} {:instruction print_float} {:instruction integer_flush} {:instruction float_yank} {:instruction float_cos} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction float_sin})
Best program: (integer_sub float_tan integer_shove integer_dec float_mod in1 integer_sub integer_rot float_inc integer_dup_times integer_mod float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_fromfloat integer_dup_times float_yank integer_dup_items float_flush print_float float_pop float_dup print_float integer_flush float_yank float_cos float_tan float_yank integer_dup_items float_flush float_sin)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 2151.3912342
Median total errors in population: 1219.0
Error averages by case: (53.8318314 2.541 52.1168659 2.524 92.26723580000004 2.535 121.0202171 11.146 82.60895010000002 2.538 58.96753620000001 1.674 112.49389949999997 2.569 58.282018499999985 12.121 115.71381319999999 3.555 122.04932599999998 10.188 104.00023170000001 12.092 126.59406410000001 2.646 78.867288 13.095 48.7075512 2.563 117.9586349 2.564 46.294376200000016 2.542 57.705770900000005 1.63 38.3387592 1.561 51.676833299999984 2.534 114.91768410000002 2.491 62.59392459999999 3.565 109.50892180000001 2.553 107.53861420000003 2.642 59.66129089999999 2.459 49.694595400000004 1.653)
Error minima by case: (1.6347 2 11.4243 2 9.5409 2 13.1356 8 4.2511 2 18.0 1 74.0 1 11.1648 9 76.0 2 6.791 9 25.8357 10 87.0 2 13.3672 10 7.0 1 29.7119 2 4.2735 1 8.5975 1 0.0 0 13.0 2 0.2539 1 20.0 2 9.2268 2 67.0 2 12.4022 1 9.0 1)
Average genome size in population (length): 30.364
Average program size in population (points): 31.364
Average percent parens in population: 0.034
Minimum age in population: 85.60591051165979
Maximum age in population: 89.8599123137694
Average age in population: 88.01043998830446
Median age in population: 88.06516651118741
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.666
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.666
Total error diversity:				 0.028
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 53797789
--- Timings ---
Current time: 1529616252491 milliseconds
Total Time:         199.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.6 seconds, 45.3%
Fitness Testing:     87.6 seconds, 43.8%
Report:              21.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_div} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_mult} {:instruction print_float} {:instruction in2} {:instruction float_stackdepth} {:instruction float_inc} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_rot} {:instruction float_sin} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction 9} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank})
Best program: (integer_shove float_tan integer_shove integer_dec float_mult in1 integer_mod -30 integer_sub integer_rot float_inc float_inc integer_dup_times integer_dec float_swap print_float integer_flush integer_div float_flush float_inc float_tan integer_mult print_float in2 float_stackdepth float_inc integer_mult float_swap print_float integer_flush integer_rot float_sin integer_yankdup integer_flush integer_min integer_dup_times 9 integer_yankdup integer_add integer_swap tagged_917 float_dup_items float_yank)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2499.6968034000006
Median total errors in population: 1219.0
Error averages by case: (67.5305846 2.683 66.9147254 2.666 107.0161107 2.678 134.1030487 11.146 96.94660830000001 2.677 72.6701559 1.831 125.1886918 2.729 71.9267959 12.107 128.28982390000002 3.704 135.0274361 10.201 117.19201960000001 12.064 138.83279670000002 2.807 93.2081548 13.087 62.413486299999995 2.711 131.7806228 2.709 61.213025099999996 2.672 72.5010498 1.786 53.2356598 1.702 66.41701330000001 2.678 128.9966937 2.608 75.9867296 3.717 123.48050410000002 2.682 120.1534418 2.816 74.4427154 2.565 63.3779093 1.825)
Error minima by case: (1.6347 2 12.0 2 8.2015 2 40.9001 9 13.7325 2 18.0 1 63.673 1 4.6607 9 29.5349 2 7.8456 9 11.1781 9 14.1892 2 8.8135 10 7.0 1 53.7695 2 6.0 1 9.8565 1 0.0 0 6.7603 2 0.1176 1 21.0 3 58.2545 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 29.887
Average program size in population (points): 30.887
Average percent parens in population: 0.034
Minimum age in population: 87.05630471762076
Maximum age in population: 91.57293827334723
Average age in population: 89.51365414423563
Median age in population: 89.5619270663963
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.693
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.693
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 54545114
--- Timings ---
Current time: 1529616255617 milliseconds
Total Time:         203.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        92.1 seconds, 45.4%
Fitness Testing:     88.9 seconds, 43.8%
Report:              21.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_yankdup} {:instruction float_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mult} {:instruction integer_mod} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction float_frominteger} {:instruction in2} {:instruction integer_yankdup} {:instruction float_yank} {:instruction float_cos} {:instruction integer_flush} {:instruction integer_min})
Best program: (float_rot float_dup_items integer_shove integer_dec float_mult in1 integer_yankdup float_dup_times float_inc float_inc integer_mult integer_mod print_float integer_flush integer_min float_frominteger in2 integer_yankdup float_yank float_cos integer_flush integer_min)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2813.9569833000005
Median total errors in population: 1219.0
Error averages by case: (80.34961240000001 2.839 79.91296519999997 2.826 119.08603870000003 2.828 145.96310280000003 11.212 109.51451960000001 2.833 85.3231997 2.004 137.2509314 2.882 84.6189523 12.163 140.4228829 3.854 146.7674067 10.266 129.0600918 12.116 150.99329200000003 2.962 105.5059856 13.128 75.30526309999999 2.852 143.80161850000005 2.858 74.2937889 2.833 85.42926460000002 1.956 66.2683003 1.869 78.5983656 2.827 140.78401079999995 2.766 88.78363379999999 3.864 135.57933670000003 2.838 132.49230920000002 2.973 87.3341318 2.692 76.2319789 2.045)
Error minima by case: (1.6347 2 12.0 2 9.5409 2 40.4143 9 44.0 2 18.0 1 58.4163 1 4.6607 9 77.0 2 7.8456 8 9.1781 8 88.0 2 8.8135 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.0021 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 29.546
Average program size in population (points): 30.546
Average percent parens in population: 0.035
Minimum age in population: 88.51299954143904
Maximum age in population: 93.04215716316783
Average age in population: 91.01953843432796
Median age in population: 91.08110868066242
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.03
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 55283814
--- Timings ---
Current time: 1529616258692 milliseconds
Total Time:         206.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.5 seconds, 45.4%
Fitness Testing:     90.2 seconds, 43.8%
Report:              22.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction float_shove} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction print_integer} {:instruction -13} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_shove} {:instruction print_float} {:instruction integer_sub} {:instruction integer_mult} {:instruction print_float} {:instruction integer_flush})
Best program: (float_inc float_pop in1 float_shove float_inc float_swap integer_dup print_integer -13 float_inc integer_dup_times integer_mult float_swap print_float integer_rot float_inc integer_dup_times integer_mult float_inc integer_dup_times integer_dup_times integer_mult float_shove print_float integer_sub integer_mult print_float integer_flush)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 2457.7414567
Median total errors in population: 1219.0
Error averages by case: (66.15316130000001 2.658 65.075375 2.67 105.2331996 2.668 132.30742479999998 11.146 95.19486450000002 2.683 70.31875100000002 1.812 124.07645959999999 2.702 71.0130097 12.113 126.34363780000001 3.684 133.299342 10.198 115.40264709999998 12.074 136.8691783 2.79 91.47592569999999 13.094 60.085728200000005 2.677 130.2616967 2.713 59.344856 2.677 70.61144830000002 1.795 52.19424480000001 1.717 65.47201229999999 2.69 126.91371310000001 2.61 73.68514189999999 3.698 122.5201011 2.691 118.1444804 2.8 72.55017550000001 2.573 62.428881999999994 1.833)
Error minima by case: (1.6347 2 12.0 2 9.5409 2 39.4367 8 44.0 2 1.9679 1 24.6656 1 11.1648 9 63.7144 2 45.7813 9 26.7366 10 88.0 2 13.3672 10 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.5289 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 29.296
Average program size in population (points): 30.296
Average percent parens in population: 0.035
Minimum age in population: 89.51299954143904
Maximum age in population: 94.4962509756088
Average age in population: 92.51060701232768
Median age in population: 92.56429896660826
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.685
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.685
Total error diversity:				 0.023
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 56016239
--- Timings ---
Current time: 1529616261818 milliseconds
Total Time:         209.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.0 seconds, 45.4%
Fitness Testing:     91.5 seconds, 43.8%
Report:              22.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -28} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_swap} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction integer_sub})
Best program: (float_rot float_mult in1 integer_mod -28 integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_swap print_float integer_yankdup integer_flush integer_min integer_dup_times integer_rot integer_yankdup integer_sub)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2574.0684794
Median total errors in population: 1219.0
Error averages by case: (70.48837589999998 2.749 70.0212587 2.749 110.01045399999998 2.768 136.67024609999999 11.16 99.86064819999999 2.771 75.6386423 1.921 128.05840070000002 2.806 74.9143791 12.097 131.15710240000004 3.796 137.70363 10.209 120.03712430000002 12.083 141.7794603 2.899 95.9087676 13.086 65.47719049999999 2.792 134.5314197 2.79 64.3240378 2.754 75.51081380000002 1.869 56.2547883 1.807 69.37680329999999 2.765 131.3592337 2.692 79.1101827 3.809 126.25651620000002 2.776 123.10284399999998 2.905 77.46058740000001 2.637 66.3835724 1.982)
Error minima by case: (3.1015 2 12.0 2 8.5409 2 41.007 9 13.7325 2 18.0 1 64.5837 1 6.0332 9 29.5349 2 47.1567 8 28.1139 9 14.1892 2 12.2972 10 7.0 1 53.7695 2 6.0 1 9.8565 1 0.0 0 6.7603 2 0.0654 1 21.0 3 58.2545 2 14.1324 2 20.0 1 8.95 1)
Average genome size in population (length): 29.06
Average program size in population (points): 30.06
Average percent parens in population: 0.036
Minimum age in population: 91.3824329536313
Maximum age in population: 95.98748583607795
Average age in population: 94.01481761693809
Median age in population: 94.08253396630933
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.027
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 56742814
--- Timings ---
Current time: 1529616264977 milliseconds
Total Time:         212.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        96.6 seconds, 45.5%
Fitness Testing:     92.8 seconds, 43.7%
Report:              22.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction float_tan} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction integer_mod} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_shove} {:instruction integer_dup} {:instruction float_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_swap} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_dup_items} {:instruction integer_swap} {:instruction tagged_925} {:instruction float_tan} {:instruction float_yank} {:instruction integer_dup_items})
Best program: (integer_sub float_tan integer_shove float_rot integer_add in1 integer_mod integer_sub float_inc integer_shove integer_dup float_sub integer_dup_items float_inc integer_dup_times integer_mult float_swap print_float integer_flush integer_min integer_dup_times float_yankdup integer_swap float_yankdup integer_yankdup float_dup_items integer_swap tagged_925 float_tan float_yank integer_dup_items)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2889.2256680000005
Median total errors in population: 1219.0
Error averages by case: (83.4636394 2.925 82.85494680000001 2.92 121.84444730000001 2.91 148.74129810000002 11.263 112.3138211 2.936 88.20172210000001 2.109 139.9658111 2.971 87.78640009999998 12.212 143.01784320000002 3.954 149.75726950000004 10.312 132.25397279999999 12.167 153.4822881 3.069 108.64103870000002 13.169 78.1866838 2.95 146.4957392 2.955 77.33691700000001 2.918 88.38124059999998 2.054 69.43984450000002 1.968 82.33644739999998 2.92 143.67753760000002 2.848 91.5803904 3.965 138.32008199999999 2.941 135.0336968 3.079 90.2888507 2.787 79.38273969999999 2.139)
Error minima by case: (3.2007 2 12.0 2 10.5409 2 40.4367 10 12.7325 2 9.6683 1 15.9652 1 12.1648 10 30.5349 2 46.0906 8 27.7366 9 15.1892 2 14.0022 10 0.6699 1 19.3586 2 6.0 1 18.0 1 0.0 0 5.7603 2 0.0654 1 21.0 3 1.1264 2 13.1324 2 20.0 1 9.95 1)
Average genome size in population (length): 29.277
Average program size in population (points): 30.277
Average percent parens in population: 0.035
Minimum age in population: 92.87447992458694
Maximum age in population: 97.51492554892116
Average age in population: 95.47101565992531
Median age in population: 95.5180202153289
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.699
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.699
Total error diversity:				 0.034
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 57474889
--- Timings ---
Current time: 1529616268074 milliseconds
Total Time:         215.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        98.0 seconds, 45.5%
Fitness Testing:     94.2 seconds, 43.7%
Report:              23.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction float_shove} {:instruction float_inc} {:instruction float_swap} {:instruction float_inc} {:instruction print_float} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction integer_rot} {:instruction float_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_swap} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction float_cos})
Best program: (float_inc float_pop in1 float_shove float_inc float_swap float_inc print_float integer_mult float_swap print_float integer_rot integer_dup_times integer_dup_times float_inc integer_dup_times integer_mult float_swap integer_rot float_inc float_div integer_inc float_swap print_float integer_yankdup integer_sub integer_swap tagged_917 float_cos)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 2624.5751379000003
Median total errors in population: 1219.0
Error averages by case: (73.01564479999999 2.741 71.733969 2.721 111.5254177 2.727 138.63847209999997 11.185 101.7001482 2.742 77.3307319 1.887 130.58452939999998 2.79 77.7602378 12.137 132.8260392 3.767 139.63643140000002 10.223 121.73897119999998 12.098 143.3435554 2.86 98.2179679 13.117 67.11449180000001 2.771 136.5267526 2.749 66.0150223 2.732 77.2273618 1.834 59.068341600000004 1.762 72.28543520000001 2.735 133.5423414 2.666 80.602943 3.772 128.8714596 2.743 124.67414240000001 2.864 79.18332980000001 2.621 69.30440039999999 1.863)
Error minima by case: (4.024 2 13.0 2 8.2015 2 39.3302 9 45.0 2 19.0 1 58.4163 2 11.4959 9 77.0 2 46.0644 7 27.0853 10 30.7782 2 14.3754 10 8.0 1 82.0 2 6.0 2 9.8565 1 0.0 0 14.0 2 0.2479 1 21.0 3 74.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 28.876
Average program size in population (points): 29.876
Average percent parens in population: 0.036
Minimum age in population: 93.87447992458694
Maximum age in population: 98.58458201733777
Average age in population: 96.94315119131741
Median age in population: 97.01683746215306
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.024
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 58196864
--- Timings ---
Current time: 1529616271394 milliseconds
Total Time:         218.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:        99.6 seconds, 45.5%
Fitness Testing:     95.6 seconds, 43.7%
Report:              23.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_swap} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction -30} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_mod} {:instruction -31} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction float_div} {:instruction integer_inc} {:instruction integer_rot} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_tan} {:instruction float_swap} {:instruction integer_swap} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction integer_sub})
Best program: (in2 integer_swap integer_dec float_mult in1 integer_mod -30 integer_rot float_inc integer_sub integer_mod -31 integer_stackdepth integer_rot float_inc integer_dup_times integer_mult float_swap float_div integer_inc integer_rot print_float integer_yankdup float_tan float_swap integer_swap integer_flush integer_min integer_dup_times float_yankdup integer_yankdup integer_sub)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2372.8124454000003
Median total errors in population: 1219.0
Error averages by case: (63.2069658 2.633 61.0099548 2.608 101.67982640000001 2.605 129.63299650000002 11.154 91.26434549999999 2.625 67.52732320000001 1.763 121.34129689999999 2.652 67.9671666 12.109 123.48415510000001 3.632 130.6152023 10.21 112.5286535 12.089 133.98332380000002 2.737 87.8790155 13.083 57.2715399 2.649 126.4989039 2.656 55.21296 2.616 66.6336024 1.717 48.237793100000005 1.647 60.8523115 2.621 123.6879821 2.541 70.70334919999999 3.653 118.7582577 2.637 115.1422055 2.736 68.6281114 2.514 59.4102028 1.768)
Error minima by case: (3.1015 2 12.0 2 10.3607 2 41.3908 8 11.7325 2 17.6378 1 66.5837 1 11.4959 8 31.5349 2 46.0644 9 27.0853 10 16.1892 2 11.5388 10 7.0 1 51.7695 2 6.0 1 9.8565 1 0.0 0 4.7603 2 0.0511 1 14.6222 2 56.2545 2 12.1324 2 20.0 1 10.0 1)
Average genome size in population (length): 28.871
Average program size in population (points): 29.871
Average percent parens in population: 0.036
Minimum age in population: 94.87447992458694
Maximum age in population: 100.34534156467
Average age in population: 98.42658220003203
Median age in population: 98.46765171942496
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.674
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.674
Total error diversity:				 0.024
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 58918714
--- Timings ---
Current time: 1529616274543 milliseconds
Total Time:         221.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       101.0 seconds, 45.5%
Fitness Testing:     96.9 seconds, 43.7%
Report:              23.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_inc} {:instruction float_pop} {:instruction in1} {:instruction float_shove} {:instruction float_inc} {:instruction float_swap} {:instruction integer_dup} {:instruction print_integer} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_swap} {:instruction print_float} {:instruction integer_swap} {:instruction float_cos} {:instruction float_sub} {:instruction float_yankdup} {:instruction float_flush} {:instruction float_max} {:instruction integer_sub} {:instruction integer_swap} {:instruction tagged_917} {:instruction integer_mult} {:instruction print_float} {:instruction integer_flush} {:instruction print_float})
Best program: (float_inc float_pop in1 float_shove float_inc float_swap integer_dup print_integer integer_rot float_inc integer_dup_times integer_mult float_swap print_float integer_swap float_cos float_sub float_yankdup float_flush float_max integer_sub integer_swap tagged_917 integer_mult print_float integer_flush print_float)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2397.7929135
Median total errors in population: 1219.0
Error averages by case: (64.1755061 2.636 62.048392099999994 2.634 102.633981 2.641 130.4766587 11.176 92.28323799999997 2.655 68.3948408 1.785 122.2392213 2.67 69.0415047 12.134 124.51925800000001 3.656 131.4402605 10.234 113.48682150000002 12.095 135.18105889999998 2.754 88.6210036 13.116 58.1365309 2.646 127.467498 2.681 56.270654300000004 2.643 67.58615460000001 1.75 49.144912500000004 1.665 62.48773759999999 2.654 124.19055130000004 2.579 71.73586230000001 3.669 119.6983883 2.663 116.307271 2.755 69.52542220000001 2.551 60.43818530000001 1.82)
Error minima by case: (1.6347 2 12.0 2 10.574 2 41.1411 9 44.0 2 1.655 1 24.9785 1 12.7208 8 64.0273 2 47.3639 9 28.2823 10 88.0 2 13.0845 8 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.5411 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 28.696
Average program size in population (points): 29.696
Average percent parens in population: 0.036
Minimum age in population: 96.57167419658226
Maximum age in population: 101.9021237433536
Average age in population: 99.93818000100657
Median age in population: 99.96216954689476
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.685
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.685
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 59636164
--- Timings ---
Current time: 1529616277574 milliseconds
Total Time:         225.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       102.5 seconds, 45.5%
Fitness Testing:     98.2 seconds, 43.6%
Report:              24.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_shove} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_mult} {:instruction in1} {:instruction float_stackdepth} {:instruction -30} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mult} {:instruction float_div} {:instruction print_float} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction float_flush} {:instruction float_inc} {:instruction float_tan} {:instruction integer_dup})
Best program: (integer_shove float_tan integer_shove integer_dec float_mult in1 float_stackdepth -30 integer_sub integer_rot float_inc float_inc integer_dup_times integer_mult float_div print_float integer_flush integer_fromfloat float_flush float_inc float_tan integer_dup)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2555.0905052000003
Median total errors in population: 1219.0
Error averages by case: (69.9912853 2.725 69.0186761 2.715 108.8487653 2.726 135.6370892 11.174 98.9816356 2.733 74.57103339999999 1.894 127.9240646 2.777 74.7490151 12.132 130.3602498 3.757 136.6429675 10.252 118.70618110000001 12.092 141.15483609999998 2.873 95.24011670000002 13.108 64.474083 2.75 133.9056045 2.769 63.335616099999996 2.721 74.5763274 1.84 56.122194900000004 1.746 68.67794429999998 2.722 130.4898878 2.64 78.17443250000001 3.763 126.16204390000001 2.742 122.38432030000001 2.874 76.5297236 2.618 66.3554111 1.934)
Error minima by case: (3.1015 2 11.0 2 11.5409 1 3.423 8 43.0 2 17.0 1 75.0 1 10.5865 9 77.0 2 8.3754 9 7.8009 9 88.0 2 11.9536 9 6.0 1 80.0 2 6.0 1 18.0 1 0.0 0 12.0 2 0.2488 1 21.0 3 72.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 28.55
Average program size in population (points): 29.55
Average percent parens in population: 0.036
Minimum age in population: 97.57167419658226
Maximum age in population: 103.2635420723024
Average age in population: 101.4299097545241
Median age in population: 101.4781589676432
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.71
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.71
Total error diversity:				 0.031
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 60349939
--- Timings ---
Current time: 1529616280866 milliseconds
Total Time:         228.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       104.0 seconds, 45.6%
Fitness Testing:     99.6 seconds, 43.7%
Report:              24.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 55514.0
Test mean error for best: 27.75700
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 69.5409282956 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 67.8458330136 
Correct output: 64.1697788867  | Program output: 84.1697788867 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 81.4588693899 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 89.97455151   
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_dup_items} {:instruction integer_shove} {:instruction integer_dec} {:instruction integer_dup_items} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_add} {:instruction in1} {:instruction integer_mod} {:instruction float_inc} {:instruction float_swap} {:instruction float_inc} {:instruction float_div} {:instruction integer_inc} {:instruction float_swap} {:instruction print_float} {:instruction integer_yankdup} {:instruction -6} {:instruction integer_swap} {:instruction tagged_997} {:instruction float_pop} {:instruction float_dec} {:instruction float_dup_items} {:instruction float_shove} {:instruction tagged_917} {:instruction float_dup_items} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_dec} {:instruction integer_max} {:instruction float_dup_items} {:instruction tag_integer_653} {:instruction float_yank} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_mult} {:instruction integer_dup_times} {:instruction float_dec} {:instruction integer_yankdup} {:instruction float_flush} {:instruction float_inc} {:instruction float_sub} {:instruction integer_mult} {:instruction print_float} {:instruction 61.67283966441582} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_dup_items integer_shove integer_dec integer_dup_items integer_shove float_rot integer_add in1 integer_mod float_inc float_swap float_inc float_div integer_inc float_swap print_float integer_yankdup -6 integer_swap tagged_997 float_pop float_dec float_dup_items float_shove tagged_917 float_dup_items float_yank integer_dup_items float_flush integer_dec integer_max float_dup_items tag_integer_653 float_yank integer_dup_items float_flush integer_mult integer_dup_times float_dec integer_yankdup float_flush float_inc float_sub integer_mult print_float 61.67283966441582 float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 57.0 2 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 8.0 2 20.0 1 1.0 1 15.0 2 81.0 2 23.0 3 75.0 2 70.0 2 22.0 2 12.0 1]
Total: 1219.0
Mean: 24.38
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2867.9524493000004
Median total errors in population: 1219.0
Error averages by case: (82.8699582 2.871 81.84737019999999 2.85 121.44021000000001 2.86 147.74188479999998 11.246 111.42533 2.879 87.09910180000001 2.03 139.7956485 2.921 87.6431486 12.194 142.1364364 3.904 148.71318530000005 10.293 131.13915889999998 12.161 152.7320743 2.993 107.74233669999998 13.171 77.11984079999999 2.903 145.86832929999997 2.874 76.19320839999999 2.855 87.2629196 1.97 69.1690054 1.896 81.02595319999999 2.867 142.52723840000002 2.796 90.56815029999999 3.901 138.2498228 2.872 134.19308880000003 2.99 89.1624472 2.738 79.2316014 2.02)
Error minima by case: (3.9911 2 12.0 2 8.2015 2 39.4587 8 44.0 2 3.1388 1 29.7724 1 11.278 9 68.8212 2 45.8061 9 26.7614 9 88.0 2 13.3672 9 7.0 1 81.0 2 6.0 1 18.0 1 0.0 0 13.0 2 0.2752 1 21.0 3 73.0 2 68.0 2 20.0 1 10.0 1)
Average genome size in population (length): 28.44
Average program size in population (points): 29.44
Average percent parens in population: 0.036
Minimum age in population: 98.57167419658226
Maximum age in population: 104.8760382772943
Average age in population: 102.9136228485614
Median age in population: 102.9751816614992
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.028
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 61060964
--- Timings ---
Current time: 1529616284073 milliseconds
Total Time:         231.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       105.5 seconds, 45.6%
Fitness Testing:    100.9 seconds, 43.6%
Report:              24.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 57712.99289999998
Test mean error for best: 28.85650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 61.7341975449 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 61.7341975449 
Correct output: 64.1697788867  | Program output: 61.7341975449 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 61.7341975449 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 61.7341975449 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 59.73419754485073} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 59.73419754485073 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_div print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 49.1933 11 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 1.8884 12 2.4356 11 1.0 1 15.0 2 61.2753 11 23.0 3 75.0 2 70.0 2 6.2404 9 12.0 1]
Total: 1197.0330000000001
Mean: 23.94066
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2267.1145467000006
Median total errors in population: 1219.0
Error averages by case: (58.2525183 2.608 57.30025480000001 2.603 97.5337602 2.618 124.78586229999998 11.121 87.6407069 2.615 62.719061900000014 1.748 116.7568187 2.659 63.1594237 12.076 119.15999260000004 3.645 125.81665009999999 10.174 107.7677417 12.057 130.05971069999998 2.732 83.7923055 13.07 52.469294799999986 2.628 122.98094379999999 2.643 51.44411819999999 2.611 62.829678699999995 1.714 44.2122636 1.628 57.6159456 2.62 119.4532142 2.553 66.3411837 3.649 115.14860580000001 2.616 111.1028145 2.738 64.78307120000001 2.532 54.558605199999995 1.772)
Error minima by case: (3.1015 2 12.0 2 6.073 2 40.4469 8 44.0 2 18.0 1 11.2074 1 12.2405 9 27.8414 2 46.7991 8 27.7528 10 65.1871 2 13.3672 7 7.0 1 81.0 2 1.8884 1 2.4356 1 0.0 0 13.0 2 0.5165 1 21.0 3 73.0 2 53.5087 2 6.2404 1 10.0 1)
Average genome size in population (length): 28.158
Average program size in population (points): 29.158
Average percent parens in population: 0.036
Minimum age in population: 99.57167419658226
Maximum age in population: 106.3335413002111
Average age in population: 104.3876498626631
Median age in population: 104.4597524615845
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.672
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.672
Total error diversity:				 0.027
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 61764964
--- Timings ---
Current time: 1529616287024 milliseconds
Total Time:         234.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       106.8 seconds, 45.6%
Fitness Testing:    102.3 seconds, 43.6%
Report:              25.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 57712.99289999998
Test mean error for best: 28.85650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 61.7341975449 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 61.7341975449 
Correct output: 64.1697788867  | Program output: 61.7341975449 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 61.7341975449 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 61.7341975449 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 59.73419754485073} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 59.73419754485073 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_div print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 49.1933 11 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 1.8884 12 2.4356 11 1.0 1 15.0 2 61.2753 11 23.0 3 75.0 2 70.0 2 6.2404 9 12.0 1]
Total: 1197.0330000000001
Mean: 23.94066
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2846.3058746000006
Median total errors in population: 1219.0
Error averages by case: (81.75997810000001 2.919 80.99476379999997 2.887 119.65495360000004 2.959 146.5460262 11.254 110.5329283 2.915 86.34844299999999 2.092 138.98599850000005 2.972 86.51407509999999 12.188 141.48028290000002 3.95 147.55916460000006 10.285 129.83173620000002 12.146 152.133292 3.046 106.63310930000003 13.165 76.45776189999998 2.969 145.00395450000002 2.911 75.3227247 2.956 86.30892850000001 2.078 68.14924269999999 1.955 81.20988949999999 2.906 141.10562020000003 2.889 90.05926280000003 3.945 137.32715500000003 2.932 133.66808840000004 3.043 88.2170342 2.8 78.2074606 2.132)
Error minima by case: (1.6347 2 12.0 2 6.073 2 40.6008 9 44.0 2 18.0 1 58.4163 1 12.2405 9 77.0 2 46.7991 9 27.7528 9 88.0 2 12.6246 9 7.0 1 81.0 2 1.8884 1 2.4356 1 0.0 0 13.0 2 0.0383 1 21.0 3 73.0 2 68.0 2 6.2404 1 10.0 1)
Average genome size in population (length): 28.231
Average program size in population (points): 29.231
Average percent parens in population: 0.036
Minimum age in population: 101.9160865758492
Maximum age in population: 107.7172291490256
Average age in population: 105.8508386517887
Median age in population: 105.91092860463
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.678
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.678
Total error diversity:				 0.029
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 62470789
--- Timings ---
Current time: 1529616290321 milliseconds
Total Time:         237.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       108.4 seconds, 45.6%
Fitness Testing:    103.6 seconds, 43.6%
Report:              25.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 57712.99289999998
Test mean error for best: 28.85650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 61.7341975449 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 61.7341975449 
Correct output: 64.1697788867  | Program output: 61.7341975449 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 61.7341975449 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 61.7341975449 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 59.73419754485073} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_yank} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 59.73419754485073 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_yank float_inc integer_dup_times integer_dec float_div print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 49.1933 11 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 1.8884 12 2.4356 11 1.0 1 15.0 2 61.2753 11 23.0 3 75.0 2 70.0 2 6.2404 9 12.0 1]
Total: 1197.0330000000001
Mean: 23.94066
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2592.3822491000005
Median total errors in population: 1219.0
Error averages by case: (72.09387330000001 2.733 70.06156429999999 2.71 109.49701619999998 2.946 137.7189136 11.18 99.98913950000001 2.724 76.4079937 1.895 129.73036380000002 2.765 76.86665880000001 12.13 131.9411288 3.753 138.7184638 10.226 120.97484370000002 12.085 142.5000237 2.857 96.5593996 13.114 66.25812450000001 2.738 134.87616139999997 2.749 64.25146810000005 2.976 75.20687959999997 2.097 57.348200600000006 1.747 70.52435209999999 2.712 131.5088021999999 2.883 79.72838039999999 3.756 127.1840531 2.728 123.7839332 2.863 77.1852017 2.778 68.3823094 1.94)
Error minima by case: (1.6347 2 5.2624 2 9.5409 1 19.2975 8 11.7325 2 17.0 1 57.4163 1 11.1648 9 31.5349 2 12.9529 7 26.7366 9 16.1892 2 13.3672 10 6.0 1 51.7695 2 1.8884 1 1.4356 1 0.0 0 4.7603 2 0.0383 1 21.0 3 32.0113 2 12.1324 2 5.2404 1 10.0 1)
Average genome size in population (length): 28.105
Average program size in population (points): 29.105
Average percent parens in population: 0.037
Minimum age in population: 104.7979536134886
Maximum age in population: 109.1231904919328
Average age in population: 107.3346521137667
Median age in population: 107.3404105938853
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.028
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 63173439
--- Timings ---
Current time: 1529616293488 milliseconds
Total Time:         240.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       109.8 seconds, 45.6%
Fitness Testing:    105.1 seconds, 43.6%
Report:              25.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 57712.99289999998
Test mean error for best: 28.85650
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 61.7341975449 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 61.7341975449 
Correct output: 64.1697788867  | Program output: 61.7341975449 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 61.7341975449 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 61.7341975449 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 59.73419754485073} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 59.73419754485073 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_div print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 49.1933 11 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 1.8884 12 2.4356 11 1.0 1 15.0 2 61.2753 11 23.0 3 75.0 2 70.0 2 6.2404 9 12.0 1]
Total: 1197.0330000000001
Mean: 23.94066
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2510.4990493
Median total errors in population: 1219.0
Error averages by case: (68.02570969999998 2.814 67.45918599999999 2.806 105.31462259999988 4.191 133.40165999999996 11.177 97.2389389 2.82 73.15067060000001 1.972 126.29172660000002 2.872 72.7770689 12.139 129.04379029999998 3.836 134.42015630000003 10.241 116.4991841 12.091 139.9473615 2.945 93.18902129999998 13.113 63.257129199999994 2.846 132.2035921 2.847 60.84818100000025 4.342 70.23205769999979 3.445 54.286212199999994 1.859 67.4500093 2.808 124.8877929999996 4.123 77.28265569999999 3.841 124.32578240000001 2.828 121.34523750000002 2.941 72.4441437000001 3.773 64.5241587 1.983)
Error minima by case: (1.1827 2 5.2624 2 2.7342 2 17.2975 9 13.7325 2 18.0 1 64.5837 1 5.9904 9 29.5349 2 10.9529 8 21.5621 9 14.1892 2 13.6297 9 7.0 1 52.4963 2 0.1116 1 1.4356 1 0.0 0 6.7603 2 0.2835 1 21.0 3 32.0113 2 14.1324 2 5.2404 1 8.95 1)
Average genome size in population (length): 27.681
Average program size in population (points): 28.681
Average percent parens in population: 0.037
Minimum age in population: 106.4977811186899
Maximum age in population: 110.7349433387523
Average age in population: 108.816957731444
Median age in population: 108.8735936930416
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 50
Genome diversity (% unique Plush genomes):	 0.641
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 50
Syntactic diversity (% unique Push programs):	 0.641
Total error diversity:				 0.038
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 63865564
--- Timings ---
Current time: 1529616296483 milliseconds
Total Time:         243.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       111.2 seconds, 45.6%
Fitness Testing:    106.4 seconds, 43.6%
Report:              26.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 57757.6041
Test mean error for best: 28.87880
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 60.7943097961 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 60.7943097961 
Correct output: 64.1697788867  | Program output: 60.7943097961 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 60.7943097961 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 60.7943097961 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_yank} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_min} {:instruction in1} {:instruction 58.79430979613765} {:instruction float_min} {:instruction integer_sub} {:instruction 8} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_stackdepth} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot integer_yank integer_shove tag_integer_469 float_min in1 58.79430979613765 float_min integer_sub 8 float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_stackdepth print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 48.2534 10 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.9485 11 3.3755 10 1.0 1 15.0 2 60.3354 10 23.0 3 75.0 2 70.0 2 7.1802 9 12.0 1]
Total: 1192.093
Mean: 23.84186
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2285.86251470001
Median total errors in population: 1197.0330000000001
Error averages by case: (59.39764929999998 2.763 58.599236700000006 2.762 92.26174889999949 8.548 124.58504960000003 11.057 88.581 2.76 65.03687500000002 1.972 118.09039920000001 2.814 63.751838999999975 12.003 121.56270489999997 3.764 125.65619280000003 10.2 107.93086690000001 11.997 132.845617 2.96 84.69200880000001 13.012 55.1864359 2.795 123.851335 2.842 48.8843844000007 9.231 52.68314379999941 8.336 45.26258799999999 1.798 58.17658269999998 2.771 106.57340319999875 8.5 69.70129930000002 3.805 115.7008482 2.767 114.07995820000001 2.95 55.79799670000048 7.187 55.40335120000002 1.976)
Error minima by case: (0.0207 2 5.2624 2 9.8218 2 17.2975 8 18.5333 2 18.0 1 75.0 1 12.822 8 77.0 2 10.9529 9 28.6098 9 30.7782 2 13.0845 8 7.0 1 52.4963 2 0.1116 1 1.4356 1 0.0 0 13.0 2 0.2867 1 21.0 3 32.0113 2 68.0 2 5.2404 1 10.0 1)
Average genome size in population (length): 25.503
Average program size in population (points): 26.503
Average percent parens in population: 0.039
Minimum age in population: 107.9911251539672
Maximum age in population: 112.0579513711035
Average age in population: 110.2993090844483
Median age in population: 110.343849562012
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 193
Genome diversity (% unique Plush genomes):	 0.476
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 193
Syntactic diversity (% unique Push programs):	 0.476
Total error diversity:				 0.046
Error (vector) diversity:			 0.047
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 64503189
--- Timings ---
Current time: 1529616299505 milliseconds
Total Time:         246.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       112.5 seconds, 45.6%
Fitness Testing:    107.8 seconds, 43.6%
Report:              26.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 57763.69569999999
Test mean error for best: 28.88185
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 60.2143183926 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 60.2143183926 
Correct output: 64.1697788867  | Program output: 60.2143183926 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 60.2143183926 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 60.2143183926 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 58.21431839258374} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 58.21431839258374 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush integer_min integer_dup_times integer_rot integer_min integer_dup_times integer_dec integer_yankdup float_cos float_stackdepth float_frominteger float_inc integer_dup_times float_yankdup float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.6734 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.3685 10 3.9555 10 1.0 1 15.0 2 59.7554 10 23.0 3 75.0 2 70.0 2 7.7602 10 12.0 1]
Total: 1190.5130000000001
Mean: 23.81026
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2073.9748200000245
Median total errors in population: 1197.0330000000001
Error averages by case: (50.46092410000001 2.784 50.2763836 2.783 81.16032159999928 10.891 115.7718938 10.974 80.29021740000002 2.77 56.83249160000001 2.01 110.46701610000004 2.83 55.265471599999984 11.933 114.14102329999999 3.753 116.7670577 10.177 98.94453650000003 11.951 125.82561409999997 3.011 75.95612670000003 12.945 47.23656120000002 2.834 115.86328689999995 2.894 38.93268570000026 11.861 39.59281920000007 10.972 36.884626400000016 1.838 49.95838139999999 2.788 92.10297969999903 10.9 62.37914419999999 3.831 107.55838559999998 2.796 107.04986009999999 3.006 43.23209060000024 9.074 47.4099209 2.009)
Error minima by case: (1.1352 2 4.2624 2 7.5715 2 17.2975 9 17.5333 2 18.0 1 76.0 1 6.3746 8 78.0 2 10.9529 9 25.7129 9 30.7782 2 14.2286 9 7.0 1 51.4963 2 0.0515 2 0.4356 1 0.0 0 13.0 2 0.2835 1 22.0 3 31.0113 2 69.0 2 4.2404 2 11.0 1)
Average genome size in population (length): 24.962
Average program size in population (points): 25.962
Average percent parens in population: 0.040
Minimum age in population: 109.4788571416966
Maximum age in population: 113.845898268446
Average age in population: 111.7900395122987
Median age in population: 111.8244962461893
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 223
Genome diversity (% unique Plush genomes):	 0.375
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 223
Syntactic diversity (% unique Push programs):	 0.375
Total error diversity:				 0.046
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 65127239
--- Timings ---
Current time: 1529616302670 milliseconds
Total Time:         250.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       114.0 seconds, 45.6%
Fitness Testing:    109.1 seconds, 43.6%
Report:              26.8 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 57616.332300000024
Test mean error for best: 28.80817
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 62.5370489567 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 62.5370489567 
Correct output: 64.1697788867  | Program output: 62.5370489567 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 62.5370489567 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 62.5370489567 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_div print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 49.9961 7 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 2.6912 11 1.6327 8 1.0 1 15.0 2 62.0782 11 23.0 3 75.0 2 70.0 2 5.4375 9 12.0 1]
Total: 1189.8357
Mean: 23.796715
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2306.398961700023
Median total errors in population: 1197.0330000000001
Error averages by case: (60.56708809999999 2.796 59.19122599999999 2.803 91.58119879999933 10.789 125.23692459999997 10.972 89.0287783 2.794 66.22495500000004 2.057 119.80927640000007 2.835 65.17645399999999 11.986 123.01560029999997 3.705 126.1789797 10.252 108.52773290000002 11.983 134.43608779999997 3.066 85.78159260000002 12.991 56.489888399999984 2.815 124.21737099999997 2.947 48.05455260000101 11.591 48.6930399999993 10.85 46.73528 1.836 58.77471569999998 2.8 102.13635239999836 10.892 71.23957960000001 3.821 116.12363209999995 2.795 115.62548550000001 3.056 52.30686180000059 9.165 57.56730810000002 2.082)
Error minima by case: (0.9341 2 3.2624 2 9.5715 2 17.2975 7 16.5333 2 18.0 1 75.0 1 11.4959 8 77.0 2 10.9529 8 27.0853 9 88.0 2 12.6246 9 7.0 1 50.4963 2 0.0515 2 0.4356 1 0.0 0 13.0 2 0.292 1 21.0 3 30.0113 2 68.0 2 4.2404 1 10.0 1)
Average genome size in population (length): 25.408
Average program size in population (points): 26.408
Average percent parens in population: 0.040
Minimum age in population: 110.8677163252359
Maximum age in population: 115.2391661592496
Average age in population: 113.2856858229626
Median age in population: 113.3075838253942
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 159
Genome diversity (% unique Plush genomes):	 0.438
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 159
Syntactic diversity (% unique Push programs):	 0.438
Total error diversity:				 0.054
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 65762439
--- Timings ---
Current time: 1529616305787 milliseconds
Total Time:         253.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       115.5 seconds, 45.6%
Fitness Testing:    110.4 seconds, 43.6%
Report:              27.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 57616.332300000024
Test mean error for best: 28.80817
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 62.5370489567 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 62.5370489567 
Correct output: 64.1697788867  | Program output: 62.5370489567 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 62.5370489567 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 62.5370489567 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction float_div} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times integer_dec float_div print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 49.9961 7 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 2.6912 11 1.6327 8 1.0 1 15.0 2 62.0782 11 23.0 3 75.0 2 70.0 2 5.4375 9 12.0 1]
Total: 1189.8357
Mean: 23.796715
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2230.97032080001
Median total errors in population: 1193.7163
Error averages by case: (57.53789259999999 2.73 55.9056856 2.722 88.5188073999998 10.313 122.5714909 10.812 86.010435 2.727 62.9756089 2.147 117.12165060000001 2.772 62.084955799999996 12.003 120.09607520000002 3.488 123.52320749999997 10.421 105.81616310000003 11.998 131.2255753 3.158 83.4223307 13.0 53.008534 2.762 121.3614192 3.055 44.80133420000017 10.545 45.597943000000065 10.303 44.0512363 1.776 56.5566753 2.736 99.80644429999921 10.722 67.90652819999998 3.776 113.3289463 2.735 112.45777830000002 3.166 49.22431470000019 9.382 54.5932884 2.217)
Error minima by case: (1.6347 2 3.5934 2 10.3853 2 17.2975 9 16.8643 2 18.0 1 75.0 1 11.4959 9 76.5704 2 10.9529 9 27.0853 8 30.7782 2 13.6297 10 7.0 1 50.8273 2 0.0515 2 0.4201 1 0.0 0 13.0 2 0.0495 1 12.691 3 30.3423 2 62.6536 2 2.5714 2 10.0 1)
Average genome size in population (length): 26.713
Average program size in population (points): 27.713
Average percent parens in population: 0.038
Minimum age in population: 112.4338882980875
Maximum age in population: 117.1026042107185
Average age in population: 114.9687405231553
Median age in population: 114.9894651460757
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 127
Genome diversity (% unique Plush genomes):	 0.438
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 127
Syntactic diversity (% unique Push programs):	 0.438
Total error diversity:				 0.067
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 66430264
--- Timings ---
Current time: 1529616308887 milliseconds
Total Time:         256.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       117.0 seconds, 45.7%
Fitness Testing:    111.7 seconds, 43.6%
Report:              27.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 57778.506800000025
Test mean error for best: 28.88925
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 60.4695690693 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 60.4695690693 
Correct output: 64.1697788867  | Program output: 60.4695690693 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 60.4695690693 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 60.4695690693 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 58.46956906934303} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 58.46956906934303 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush integer_min integer_dup_times integer_rot integer_min integer_dup_times integer_dec integer_yankdup float_cos float_stackdepth float_frominteger float_inc integer_dup_times float_yankdup float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.9286 10 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.6237 11 3.7002 9 1.0 1 15.0 2 60.0107 7 23.0 3 75.0 2 70.0 2 7.505 10 12.0 1]
Total: 1188.7682
Mean: 23.775364
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2232.8608096000075
Median total errors in population: 1192.093
Error averages by case: (58.527986199999994 2.642 55.74837879999999 2.625 88.1549090000004 10.003 124.08567290000002 10.931 86.01009819999999 2.641 63.35400370000001 1.953 117.29974300000002 2.687 62.65236370000001 12.049 120.27576230000001 3.5 124.9918117 10.349 107.18915370000002 12.036 131.3028795 2.957 83.38340130000002 13.04 53.3400897 2.671 121.38440259999999 2.866 43.84850469999955 10.295 45.727565800000185 10.083 43.74716250000001 1.678 56.53224610000001 2.658 99.4786831999992 10.328 67.53650380000002 3.678 113.45744670000002 2.647 112.32676649999998 2.962 49.36579630000022 9.436 54.44247769999999 1.982)
Error minima by case: (3.024 2 4.8718 2 11.6767 2 16.3576 9 18.1427 2 18.0 1 75.0 1 11.4959 7 77.0 2 10.013 9 27.0853 9 88.0 2 13.6246 10 7.0 1 52.1057 2 0.0515 2 0.7666 1 0.0 0 13.0 2 0.0744 1 21.0 3 31.6206 2 68.0 2 4.5714 2 10.0 1)
Average genome size in population (length): 26.023
Average program size in population (points): 27.023
Average percent parens in population: 0.039
Minimum age in population: 113.7191107147393
Maximum age in population: 118.6680980112093
Average age in population: 116.5386274025958
Median age in population: 116.5677876689464
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 360
Genome diversity (% unique Plush genomes):	 0.361
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 360
Syntactic diversity (% unique Push programs):	 0.361
Total error diversity:				 0.052
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 67080839
--- Timings ---
Current time: 1529616311921 milliseconds
Total Time:         259.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.4 seconds, 45.7%
Fitness Testing:    113.0 seconds, 43.6%
Report:              27.8 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 57778.506800000025
Test mean error for best: 28.88925
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 60.4695690693 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 60.4695690693 
Correct output: 64.1697788867  | Program output: 60.4695690693 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 60.4695690693 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 60.4695690693 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 58.46956906934303} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_yankdup})
Best program: (float_rot float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 58.46956906934303 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush integer_min integer_dup_times integer_rot integer_min integer_dup_times integer_dec integer_yankdup float_cos float_stackdepth float_frominteger float_inc integer_dup_times float_yankdup float_dup_items integer_swap float_yankdup)
Errors: [16.0 2 14.0 2 47.9286 10 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.6237 11 3.7002 9 1.0 1 15.0 2 60.0107 7 23.0 3 75.0 2 70.0 2 7.505 10 12.0 1]
Total: 1188.7682
Mean: 23.775364
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2226.6720710999984
Median total errors in population: 1191.4974999999997
Error averages by case: (58.0831458 2.672 55.7099875 2.652 88.08513640000034 9.356 122.94132840000002 11.069 85.898307 2.652 63.13887980000001 1.836 117.0550303 2.731 62.5252611 12.051 119.85085129999999 3.674 123.80955410000001 10.2 106.25398290000003 12.023 131.0196423 2.865 83.52313289999998 13.035 53.13717890000001 2.711 121.26413059999997 2.753 43.53390329999972 10.588 45.84080949999959 9.789 43.894481400000004 1.719 56.79240870000001 2.693 99.59440099999982 10.144 67.38534040000002 3.705 113.3052586 2.678 112.059721 2.849 49.46723539999992 9.474 54.68096249999999 1.903)
Error minima by case: (3.6494 2 4.4596 2 9.5454 2 17.7776 9 17.7305 2 17.0 1 65.2304 1 12.7208 9 77.0 2 11.433 9 28.2823 10 88.0 2 7.5612 10 6.0 1 51.6935 2 0.0515 2 0.6327 1 0.0 0 12.0 2 0.4789 1 21.0 3 31.2084 2 68.0 2 4.4375 1 9.1359 1)
Average genome size in population (length): 27.848
Average program size in population (points): 28.848
Average percent parens in population: 0.037
Minimum age in population: 115.7568849636154
Maximum age in population: 120.090594391516
Average age in population: 118.0987163604565
Median age in population: 118.119534367393
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 204
Genome diversity (% unique Plush genomes):	 0.412
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 204
Syntactic diversity (% unique Push programs):	 0.412
Total error diversity:				 0.048
Error (vector) diversity:			 0.052
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 67777039
--- Timings ---
Current time: 1529616315256 milliseconds
Total Time:         262.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.8 seconds, 45.6%
Fitness Testing:    114.5 seconds, 43.6%
Report:              28.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2308.9119532000154
Median total errors in population: 1190.1553000000001
Error averages by case: (61.0200846 2.831 59.38447260000001 2.849 91.09923539999963 8.256 125.00675060000003 11.066 89.19352699999999 2.828 66.85870369999999 2.017 120.06199719999996 2.908 65.54806450000002 12.026 123.44616280000001 3.874 125.95481750000002 10.208 108.66274969999999 11.992 134.92624079999996 3.013 86.11218520000003 13.021 57.22393749999999 2.878 124.40469769999994 2.904 47.91784090000007 10.626 48.98922269999964 9.062 47.141258400000005 1.894 59.977885699999995 2.845 102.23057940000064 10.541 71.89483580000001 3.867 116.26541940000001 2.843 116.20100009999997 2.998 52.60650679999983 9.516 57.86777719999999 2.053)
Error minima by case: (1.0007 2 4.4596 2 11.3194 2 16.7776 9 17.7305 2 18.0 1 36.3305 1 6.3746 8 75.3794 2 10.433 9 25.7129 8 88.0 2 6.1138 9 7.0 1 51.6935 2 0.0107 2 0.0291 1 0.0 0 13.0 2 0.0257 1 21.0 3 31.2084 2 68.0 2 3.3563 2 4.5391 1)
Average genome size in population (length): 27.291
Average program size in population (points): 28.291
Average percent parens in population: 0.038
Minimum age in population: 117.44089301985
Maximum age in population: 121.5191827655601
Average age in population: 119.5901724828695
Median age in population: 119.6252849065307
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 329
Genome diversity (% unique Plush genomes):	 0.434
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 329
Syntactic diversity (% unique Push programs):	 0.434
Total error diversity:				 0.054
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 68459314
--- Timings ---
Current time: 1529616318389 milliseconds
Total Time:         265.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.3 seconds, 45.6%
Fitness Testing:    115.8 seconds, 43.6%
Report:              28.6 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2454.8891295000226
Median total errors in population: 1189.8357
Error averages by case: (66.7930248 2.921 65.45641300000003 2.902 97.72309609999989 7.879 130.3777272 11.045 95.0340748 2.915 72.84446510000001 2.12 125.64550419999998 3.003 71.3576594 11.998 129.0790433 3.971 131.33329619999998 10.18 114.21696679999997 11.979 140.6895245 3.121 91.68131779999996 13.009 63.353404399999995 2.976 130.01919109999992 2.974 54.73452390000036 10.875 54.58684870000013 8.436 53.0412405 1.963 65.84188019999996 2.93 108.1578254000018 10.549 78.05511359999998 3.97 121.90333080000003 2.907 122.04063929999998 3.107 58.186758699999906 9.214 63.67225969999999 2.12)
Error minima by case: (1.2299 2 4.4596 2 3.537 2 17.3409 9 17.7305 2 18.0 1 75.0 1 11.4959 9 77.0 2 10.9964 9 7.463 8 88.0 2 13.6297 10 7.0 1 51.6935 2 0.0311 2 0.3673 1 0.0 0 13.0 2 0.3156 1 21.0 3 31.2084 2 68.0 2 3.4375 1 7.1264 1)
Average genome size in population (length): 24.767
Average program size in population (points): 25.767
Average percent parens in population: 0.041
Minimum age in population: 118.9032593673712
Maximum age in population: 122.7948173608504
Average age in population: 121.0300065606376
Median age in population: 121.0594453069219
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 421
Genome diversity (% unique Plush genomes):	 0.378
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 421
Syntactic diversity (% unique Push programs):	 0.378
Total error diversity:				 0.048
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 69078489
--- Timings ---
Current time: 1529616321476 milliseconds
Total Time:         268.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.7 seconds, 45.6%
Fitness Testing:    117.1 seconds, 43.6%
Report:              28.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2212.0617449000206
Median total errors in population: 1189.33035
Error averages by case: (56.82775079999999 2.683 55.28256069999999 2.659 88.3503500999995 9.078 122.36854180000002 11.064 85.51703540000001 2.671 61.66276210000001 1.861 116.45378689999997 2.737 61.48616880000001 12.035 119.30490089999999 3.699 123.29690029999998 10.186 105.45579789999996 11.993 130.5031908 2.848 83.20211900000001 13.015 51.65799260000001 2.7 120.92788589999995 2.753 44.489107499999875 10.434 46.115244499999626 8.721 42.7768281 1.702 55.9364548 2.671 99.7577429000003 9.16 66.884472 3.733 112.95317839999998 2.679 111.55374199999997 2.86 49.72353439999976 9.55 54.2176963 1.864)
Error minima by case: (3.024 2 4.4596 2 8.7816 2 18.0328 9 17.7305 2 1.1059 1 11.4641 1 11.4959 10 50.5129 2 11.6883 8 27.0853 9 85.9458 2 14.7319 9 3.8312 1 51.6935 2 0.0311 2 0.3673 1 0.0 0 13.0 2 0.4448 1 18.9587 3 31.2084 2 65.9513 2 2.2045 1 4.1903 1)
Average genome size in population (length): 30.296
Average program size in population (points): 31.296
Average percent parens in population: 0.034
Minimum age in population: 120.4524334212498
Maximum age in population: 124.3204815569622
Average age in population: 122.5758265774739
Median age in population: 122.6109308461697
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 151
Genome diversity (% unique Plush genomes):	 0.465
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 151
Syntactic diversity (% unique Push programs):	 0.465
Total error diversity:				 0.049
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 69835914
--- Timings ---
Current time: 1529616324667 milliseconds
Total Time:         272.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       124.2 seconds, 45.6%
Fitness Testing:    118.5 seconds, 43.6%
Report:              29.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2205.9147520000206
Median total errors in population: 1188.7682
Error averages by case: (57.179698799999976 2.757 55.0613007 2.708 86.4677670999994 9.974 121.4778167 11.086 85.0980922 2.735 62.74764880000001 1.907 116.3459448 2.794 61.551104 12.021 119.4851659 3.787 122.445057 10.169 104.94674409999998 11.987 130.9764874 2.885 82.48853680000002 13.0 52.92437980000001 2.792 120.47743419999996 2.803 42.44293789999937 10.19 45.658149399999616 9.259 43.029131500000005 1.771 55.9293148 2.761 97.86307999999919 7.608 67.47745800000001 3.837 112.39237989999997 2.742 111.99504919999997 2.931 49.289180499999546 10.006 53.746892500000016 1.908)
Error minima by case: (3.6536 2 4.4596 2 9.3858 2 15.4367 9 17.7305 2 19.0 1 57.4163 2 11.4959 6 77.0 2 9.6883 9 2.6743 8 88.0 2 13.6297 9 8.0 1 51.6935 2 0.0311 2 1.6327 1 0.0 0 1.7603 2 0.2896 1 21.0 3 31.2084 2 68.0 2 5.4375 1 10.0 1)
Average genome size in population (length): 34.165
Average program size in population (points): 35.165
Average percent parens in population: 0.029
Minimum age in population: 122.1626548774605
Maximum age in population: 125.8328224668755
Average age in population: 124.2146815220061
Median age in population: 124.2740893890263
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.042
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 70690139
--- Timings ---
Current time: 1529616327986 milliseconds
Total Time:         275.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.7 seconds, 45.6%
Fitness Testing:    120.0 seconds, 43.6%
Report:              29.6 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_490} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_490 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2443.851426200023
Median total errors in population: 1188.7682
Error averages by case: (66.42987029999998 2.869 65.41606869999998 2.828 96.13190239999919 9.611 131.8259451 11.152 95.15900509999997 2.881 72.15332769999998 2.028 124.6731873 2.916 70.58200959999999 12.067 128.1649669 3.921 131.8889362 10.235 114.39846529999998 12.034 139.561211 3.037 91.58351670000003 13.042 62.859167500000005 2.913 130.15130429999996 2.922 52.9565726999995 8.254 56.56525630000028 9.668 52.404347400000006 1.904 64.44270269999998 2.893 106.69016879999899 8.261 77.2589628 3.934 122.02193700000001 2.883 120.77220529999995 3.045 60.15312209999969 10.043 62.210267000000016 2.056)
Error minima by case: (3.6561 2 6.527 2 8.4099 2 12.3783 10 19.7979 2 18.0 1 75.0 1 10.4959 6 77.0 2 10.0957 9 26.0853 8 88.0 2 14.3672 9 7.0 1 53.7609 2 0.0311 2 1.6327 1 0.0 0 13.0 2 0.3168 1 16.6468 3 33.2759 2 68.0 2 5.4375 1 10.0 1)
Average genome size in population (length): 33.057
Average program size in population (points): 34.057
Average percent parens in population: 0.030
Minimum age in population: 123.1626548774605
Maximum age in population: 127.4001390561804
Average age in population: 125.6842841247018
Median age in population: 125.7387100619406
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 134
Genome diversity (% unique Plush genomes):	 0.513
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 134
Syntactic diversity (% unique Push programs):	 0.513
Total error diversity:				 0.051
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 71516614
--- Timings ---
Current time: 1529616331216 milliseconds
Total Time:         278.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       127.2 seconds, 45.7%
Fitness Testing:    121.4 seconds, 43.6%
Report:              29.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_rot} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_rot integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2542.751959499985
Median total errors in population: 1184.1756
Error averages by case: (70.07451479999999 3.005 69.52750390000001 3.042 98.10606389999941 9.337 135.98177339999998 11.248 98.68741449999997 3.107 76.90156689999996 2.178 128.3596314 3.075 74.28786319999998 12.182 132.37575300000003 4.074 135.16432350000002 10.333 118.07116560000004 12.129 144.05261579999996 3.194 94.25533319999998 13.153 67.8473438 3.078 133.3925764 3.117 56.90762770000012 5.902 60.89305050000107 10.23 56.4865998 2.127 69.15302340000001 3.129 108.95589899999882 9.299 82.55968669999997 4.089 124.8354092 3.091 125.3986515 3.178 64.49376040000055 10.227 66.26380799999998 2.195)
Error minima by case: (0.8682 2 4.4596 2 0.1231 2 12.3783 9 11.7325 2 18.0 1 20.1231 1 2.6607 6 22.1231 2 5.8456 9 2.4707 8 16.1892 2 6.8135 10 7.0 1 51.6935 2 0.0035 2 1.6327 1 0.0 0 2.0262 2 0.27 1 16.6468 3 31.2084 2 12.1324 2 1.5165 1 8.1578 1)
Average genome size in population (length): 32.52
Average program size in population (points): 33.52
Average percent parens in population: 0.030
Minimum age in population: 124.6369544379519
Maximum age in population: 128.9784016364363
Average age in population: 127.0863671856633
Median age in population: 127.0968306053473
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 173
Genome diversity (% unique Plush genomes):	 0.496
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 173
Syntactic diversity (% unique Push programs):	 0.496
Total error diversity:				 0.055
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 72329664
--- Timings ---
Current time: 1529616334327 milliseconds
Total Time:         281.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.5 seconds, 45.6%
Fitness Testing:    122.8 seconds, 43.6%
Report:              30.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1968.171086999983
Median total errors in population: 1184.1756
Error averages by case: (46.74347469999999 2.776 46.52900389999999 2.862 75.77319950000067 9.146 112.61754159999994 11.098 76.36667059999998 2.928 53.840517100000035 1.971 106.15288770000002 2.844 50.33633030000001 12.029 111.02760290000002 3.868 112.73360480000007 10.217 95.23652569999999 11.97 123.15286979999996 2.995 72.06238749999999 13.012 44.22197339999999 2.843 111.8330212 2.957 33.54419840000014 5.632 37.63765699999967 10.074 32.285932100000004 1.914 44.95402979999999 2.944 86.50352940000008 9.143 59.46751319999997 3.844 102.64633390000002 2.897 104.00899769999997 2.949 41.29696670000044 10.054 42.19331809999998 2.038)
Error minima by case: (2.2001 2 4.4596 2 0.8769 2 15.4402 9 17.7305 2 18.0 1 19.1231 1 10.4959 6 21.1231 2 9.0957 9 26.0853 8 32.1231 2 14.3672 10 7.0 1 51.6935 2 0.0311 2 1.6327 1 0.0 0 13.0 2 0.5163 1 21.0 3 31.2084 2 12.1231 2 5.4375 1 10.0 1)
Average genome size in population (length): 32.591
Average program size in population (points): 33.591
Average percent parens in population: 0.030
Minimum age in population: 126.1723725276587
Maximum age in population: 130.6186056200196
Average age in population: 128.5198122225379
Median age in population: 128.5289697322129
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 134
Genome diversity (% unique Plush genomes):	 0.561
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 134
Syntactic diversity (% unique Push programs):	 0.561
Total error diversity:				 0.055
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 73144489
--- Timings ---
Current time: 1529616337533 milliseconds
Total Time:         284.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       130.0 seconds, 45.6%
Fitness Testing:    124.2 seconds, 43.6%
Report:              30.6 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot tag_integer_469 float_mult in1 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_items -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2403.2313025999824
Median total errors in population: 1184.1756
Error averages by case: (64.36789659999998 2.939 64.03737859999998 2.928 92.86940039999932 9.321 129.8609177 11.209 93.62722309999994 3.012 70.5064162 2.102 123.2603371 2.995 68.9869106 12.135 126.68593170000003 4.002 129.70590840000003 10.304 112.29958020000001 12.098 138.28042459999998 3.11 89.36410870000002 13.119 61.36707729999999 2.991 128.71167429999997 3.012 51.245925400000154 5.803 55.28480010000071 10.245 50.8659019 2.008 63.837803499999964 3.012 103.72813029999898 9.293 76.12221470000001 4.005 120.52448160000003 2.992 119.70311839999997 3.089 58.8868255000004 10.207 61.0639157 2.106)
Error minima by case: (3.9911 2 6.1197 2 6.4988 2 12.3783 10 19.3906 2 19.0 1 71.0685 2 2.6607 6 72.5207 2 5.8456 9 13.1781 8 67.3541 2 6.8135 9 8.0 1 53.3536 2 0.0045 2 1.6327 1 0.0 0 13.9207 2 0.146 2 10.058 3 32.8685 2 58.9798 2 0.6145 2 10.0 1)
Average genome size in population (length): 32.577
Average program size in population (points): 33.577
Average percent parens in population: 0.030
Minimum age in population: 127.1723725276587
Maximum age in population: 131.7260596252228
Average age in population: 130.0124129525493
Median age in population: 130.053530832125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 105
Genome diversity (% unique Plush genomes):	 0.605
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 105
Syntactic diversity (% unique Push programs):	 0.605
Total error diversity:				 0.049
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 73958989
--- Timings ---
Current time: 1529616340746 milliseconds
Total Time:         288.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.4 seconds, 45.6%
Fitness Testing:    125.6 seconds, 43.6%
Report:              31.0 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove float_mult float_rot float_tan integer_shove float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1988.6004314999816
Median total errors in population: 1184.1756
Error averages by case: (47.8431039 2.72 47.229615700000004 2.742 76.64007130000029 9.163 113.25559149999998 11.076 77.34321639999997 2.815 53.69190370000001 1.873 107.6312635 2.778 52.43311260000002 12.031 111.02265470000003 3.764 114.28008570000006 10.192 96.30759270000003 12.003 122.67241399999995 2.905 73.1730515 13.025 43.89533360000001 2.763 113.01876159999998 2.835 34.14434810000014 5.647 38.18862829999999 10.081 34.01770889999999 1.801 47.1369783 2.816 87.75758549999959 9.144 58.67536519999998 3.763 104.71907150000001 2.795 103.6580976 2.872 41.8585974000003 10.045 44.4612783 1.896)
Error minima by case: (3.1015 2 4.4596 2 0.8769 2 11.3783 8 17.7305 2 17.6378 1 19.1231 1 10.4959 6 21.1231 2 6.2092 8 1.7366 8 32.1231 2 14.0022 10 7.0 1 51.6935 2 0.0028 2 1.6327 1 0.0 0 2.7603 2 0.146 1 15.6468 3 31.2084 2 12.1231 2 5.4375 1 10.0 1)
Average genome size in population (length): 32.398
Average program size in population (points): 33.398
Average percent parens in population: 0.031
Minimum age in population: 128.9481100553329
Maximum age in population: 133.357552228467
Average age in population: 131.5329109730239
Median age in population: 131.6227093222351
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 67
Genome diversity (% unique Plush genomes):	 0.655
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 67
Syntactic diversity (% unique Push programs):	 0.655
Total error diversity:				 0.055
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 74769014
--- Timings ---
Current time: 1529616344004 milliseconds
Total Time:         291.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.8 seconds, 45.6%
Fitness Testing:    127.1 seconds, 43.6%
Report:              31.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction -70} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_dup_times} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction float_cos} {:instruction float_stackdepth} {:instruction float_frominteger} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan -70 tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items integer_dup_times integer_rot integer_min integer_dup_times integer_dec integer_yankdup float_cos float_stackdepth float_frominteger float_inc integer_dup_times float_yankdup float_dup_items integer_swap float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2566.9420827999843
Median total errors in population: 1184.1756
Error averages by case: (70.92757309999999 2.954 70.78729630000001 2.986 100.73323979999942 9.284 138.01357669999996 11.167 99.99420669999995 3.02 77.37138969999998 2.16 129.0456716 3.026 74.9872626 12.115 133.27718420000005 4.02 136.24941760000004 10.309 118.72017160000004 12.055 144.59649939999997 3.174 96.1286249 13.092 68.4085962 3.017 134.88069760000002 3.066 57.91022470000013 5.816 61.72898510000101 10.162 57.1271323 2.045 69.76130699999997 3.041 110.79047319999884 9.226 82.91707760000003 4.023 125.97037820000004 3.008 125.77929959999997 3.155 65.35504350000055 10.121 67.23475360000002 2.204)
Error minima by case: (3.2001 2 4.4596 2 0.8769 2 3.0122 9 17.7305 2 17.0 1 19.1231 1 9.6756 6 21.1231 2 3.3323 8 3.7366 8 32.1231 2 14.8769 9 6.0 1 51.6935 2 0.0311 2 1.2928 1 0.0 0 0.7603 2 0.0455 1 16.6468 3 31.2084 2 12.1231 2 5.0976 1 10.0 1)
Average genome size in population (length): 32.817
Average program size in population (points): 33.817
Average percent parens in population: 0.030
Minimum age in population: 130.2011002600705
Maximum age in population: 134.7407335073237
Average age in population: 133.0618625265884
Median age in population: 133.1209389126048
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 46
Genome diversity (% unique Plush genomes):	 0.701
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.701
Total error diversity:				 0.064
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 75589539
--- Timings ---
Current time: 1529616347361 milliseconds
Total Time:         294.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.2 seconds, 45.6%
Fitness Testing:    128.6 seconds, 43.6%
Report:              31.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction tag_integer_409} {:instruction float_mult} {:instruction integer_dec} {:instruction 60.537048956669786} {:instruction integer_dup_times} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min tag_integer_409 float_mult integer_dec 60.537048956669786 integer_dup_times float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 float_dup_items integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2492.5866339999848
Median total errors in population: 1184.1756
Error averages by case: (67.5586668 2.957 67.90296660000001 2.981 97.93370989999931 9.25 133.05740299999994 11.145 97.24338759999995 3.016 74.61789429999999 2.185 126.04753670000001 3.036 71.54050919999999 12.105 130.8470980000001 4.014 133.12056780000006 10.298 115.79589490000002 12.059 142.30631099999997 3.178 93.46796349999998 13.088 65.11348430000001 3.036 132.05321279999998 3.064 55.14439280000015 5.819 59.11497580000124 10.134 54.26222209999998 2.058 66.44462899999995 3.038 107.87843449999879 9.207 79.81982319999997 4.028 123.2179522 3.014 123.80671900000003 3.161 62.63475020000061 10.075 63.4991288 2.211)
Error minima by case: (1.2001 2 7.1197 2 5.8382 2 12.3783 9 11.8769 2 18.0 1 75.0 1 3.6607 6 77.0 2 6.8456 9 10.1231 8 88.0 2 7.8135 9 7.0 1 25.1231 2 0.0311 2 0.6327 1 0.0 0 13.0 2 0.0037 1 16.6468 3 17.1231 2 68.0 2 4.4375 1 10.0 1)
Average genome size in population (length): 32.949
Average program size in population (points): 33.949
Average percent parens in population: 0.030
Minimum age in population: 131.5173916022858
Maximum age in population: 136.332391478595
Average age in population: 134.4697863551442
Median age in population: 134.5152046359858
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.063
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 76413414
--- Timings ---
Current time: 1529616350729 milliseconds
Total Time:         298.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.8 seconds, 45.6%
Fitness Testing:    130.0 seconds, 43.6%
Report:              32.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction float_rot} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction in2} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_min float_rot integer_sub integer_shove tag_integer_469 in2 in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2219.6809282999816
Median total errors in population: 1184.1756
Error averages by case: (56.6821234 2.858 56.00267299999999 2.871 85.6955776000003 9.294 125.11430879999999 11.18 85.64080119999994 2.914 63.445549000000014 2.042 116.16243940000001 2.914 61.13459990000002 12.147 119.52033070000003 3.881 122.25417740000005 10.31 104.52839360000002 12.077 131.5093766999999 3.059 82.18137979999996 13.12 55.868155999999985 2.925 120.93952390000004 2.973 43.105224900000145 5.726 47.04177050000009 10.183 43.163586899999984 1.939 55.95081289999999 2.951 96.79663499999958 9.231 70.81220859999995 3.928 112.75066760000001 2.92 112.3423559 3.038 50.70913860000063 10.153 53.61211699999997 2.083)
Error minima by case: (3.9911 2 7.1197 2 6.4988 2 1.383 7 9.1507 2 18.0 1 75.0 1 4.2691 9 28.0309 2 6.4059 8 0.7366 8 80.0698 2 8.8135 10 7.0 1 41.5856 2 0.0311 2 0.3673 1 0.0 0 0.8 2 0.2453 2 10.058 3 33.8685 2 0.4733 2 0.5165 1 10.0 1)
Average genome size in population (length): 33.39
Average program size in population (points): 34.39
Average percent parens in population: 0.030
Minimum age in population: 133.6109177597814
Maximum age in population: 137.8197550389425
Average age in population: 135.9903914777585
Median age in population: 136.0227914649836
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 31
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 31
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.053
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 77248314
--- Timings ---
Current time: 1529616354099 milliseconds
Total Time:         301.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       137.2 seconds, 45.5%
Fitness Testing:    131.5 seconds, 43.6%
Report:              32.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction print_integer} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 print_integer float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_stackdepth float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2302.2592405999826
Median total errors in population: 1184.1756
Error averages by case: (60.602058400000004 2.729 59.158055499999996 2.745 90.03402280000003 9.214 129.339543 11.11 89.15183229999998 2.768 67.19129229999999 1.925 118.91393820000002 2.792 64.30031819999999 12.095 123.31921100000001 3.76 127.52242420000002 10.237 109.8573089 12.037 134.7162835 2.927 86.1250682 13.054 58.20152000000001 2.777 124.38695340000001 2.822 46.241564700000126 5.648 50.20512310000035 10.109 46.131680899999985 1.804 58.45448039999999 2.79 100.97843839999935 9.125 72.58508549999999 3.784 115.76078969999999 2.763 115.6620195 2.91 53.848180800000485 10.044 55.667047700000005 1.936)
Error minima by case: (3.2007 2 4.3581 2 3.8853 2 0.6832 9 8.9128 2 18.0 1 75.0 1 5.5092 9 77.0 2 5.6613 7 13.3834 8 88.0 2 12.9312 9 7.0 1 42.8758 2 0.0311 2 1.6327 1 0.0 0 13.0 2 0.2677 1 21.0 3 22.3908 2 68.0 2 0.3855 2 10.0 1)
Average genome size in population (length): 33.032
Average program size in population (points): 34.032
Average percent parens in population: 0.030
Minimum age in population: 134.8315381982764
Maximum age in population: 139.4330682750861
Average age in population: 137.4712210482488
Median age in population: 137.5131904628319
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.054
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 78074139
--- Timings ---
Current time: 1529616357651 milliseconds
Total Time:         304.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.7 seconds, 45.5%
Fitness Testing:    133.2 seconds, 43.7%
Report:              32.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_dup_items} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan integer_dup_times -30 28 float_dup_items float_inc integer_dup_times print_float integer_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2612.345342699983
Median total errors in population: 1184.1756
Error averages by case: (73.2285155 2.929 72.40052889999998 2.933 101.93267809999902 9.29 139.2778439 11.129 101.86856839999999 2.963 79.13978120000002 2.155 130.9616257 2.998 76.96432330000002 12.109 134.5847869 3.929 138.24954140000006 10.289 120.70066780000003 12.064 146.00847579999999 3.164 98.3299845 13.078 70.4117572 2.995 136.60126859999997 3.027 60.22957470000016 5.846 63.569274600001435 10.146 59.05344680000002 1.997 71.39402959999998 2.971 112.90199239999849 9.194 84.77566490000001 3.989 128.39808810000005 2.948 127.27912469999998 3.144 67.9586056000002 10.059 68.6221941 2.157)
Error minima by case: (3.9911 2 7.1197 2 4.1009 2 4.1265 9 20.3906 2 19.0 1 74.8578 2 2.6607 6 76.496 2 5.8456 8 1.7366 8 88.0 2 2.0661 10 8.0 1 54.3536 2 0.0311 2 1.6327 1 0.0 0 2.7603 2 0.6721 2 16.6468 3 33.8685 2 68.0 2 1.5165 1 0.4914 1)
Average genome size in population (length): 32.883
Average program size in population (points): 33.883
Average percent parens in population: 0.030
Minimum age in population: 136.2278394150723
Maximum age in population: 141.112281285787
Average age in population: 138.9264368938451
Median age in population: 138.9313030186027
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.728
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.728
Total error diversity:				 0.05
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 78896239
--- Timings ---
Current time: 1529616360864 milliseconds
Total Time:         308.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.2 seconds, 45.5%
Fitness Testing:    134.6 seconds, 43.7%
Report:              33.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 float_min float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2532.884446899985
Median total errors in population: 1184.1756
Error averages by case: (69.50834519999998 2.942 68.8374883 2.962 99.68072269999983 9.298 135.44989739999997 11.116 98.20216269999997 3.012 75.87785060000004 2.185 127.95204280000004 3.011 73.92063520000002 12.112 131.44464230000003 3.954 134.30726190000004 10.321 116.97480470000006 12.064 143.17973609999993 3.202 94.53169450000001 13.078 66.99443339999999 3.004 133.0875726 3.089 57.60220910000013 5.932 60.835899600000936 10.126 56.03246770000001 2.047 68.7561277 3.027 109.58160009999926 9.201 82.02285099999999 4.018 124.96707960000006 3.009 124.29312269999998 3.192 64.44053710000057 10.051 66.2262619 2.224)
Error minima by case: (3.2928 2 4.4596 2 0.8769 2 11.4373 8 17.7305 2 18.0 1 7.3087 1 3.6607 10 77.0 2 6.8456 8 10.1231 8 88.0 2 7.8135 9 2.5066 1 51.6935 2 0.0311 2 1.6327 1 0.0 0 13.0 2 0.085 1 21.0 3 31.2084 2 52.3261 2 2.492 2 10.0 1)
Average genome size in population (length): 32.935
Average program size in population (points): 33.935
Average percent parens in population: 0.030
Minimum age in population: 138.3099010626459
Maximum age in population: 142.4300222356937
Average age in population: 140.4220787064291
Median age in population: 140.5018895232947
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.064
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 79719714
--- Timings ---
Current time: 1529616364101 milliseconds
Total Time:         311.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.7 seconds, 45.5%
Fitness Testing:    136.0 seconds, 43.7%
Report:              33.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 57791.841099999976
Test mean error for best: 28.89592
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -19.0239631162
Correct output: 66.9966003687  | Program output: 53.9966003687 
Correct output: 12.5409282956  | Program output: 60.8769381136 
Correct output: 42.4367420274  | Program output: -42.5632579726
Correct output: 80.2675177914  | Program output: 35.2675177914 
Correct output: -60.7827432914 | Program output: -79.7827432914
Correct output: -87.4162880094 | Program output: -9.4162880094 
Correct output: 14.1647964189  | Program output: -5.8352035811 
Correct output: -126.4651108881 | Program output: -46.4651108881
Correct output: 48.781270316   | Program output: -37.218729684 
Correct output: 29.7365869138  | Program output: -37.2634130862
Correct output: -163.8107606538 | Program output: -72.8107606538
Correct output: -14.6246036823 | Program output: 29.3753963177 
Correct output: -72.1209990048 | Program output: -80.1209990048
Correct output: 114.230518731  | Program output: 32.230518731  
Correct output: 59.8458330136  | Program output: 60.8769381136 
Correct output: 64.1697788867  | Program output: 60.8769381136 
Correct output: 12.2386855703  | Program output: 14.2386855703 
Correct output: 25.2397222484  | Program output: 11.2397222484 
Correct output: 0.4588693899   | Program output: 60.8769381136 
Correct output: -119.8040488051 | Program output: -95.8040488051
Correct output: 93.7454585668  | Program output: 19.7454585668 
Correct output: -152.1323711502 | Program output: -81.1323711502
Correct output: 67.97455151    | Program output: 60.8769381136 
Correct output: -13.0499546478 | Program output: -0.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction 20.584127096043517} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -84} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_div} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan 20.584127096043517 tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -84 integer_rot float_inc integer_dup_times -30 integer_div integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [15.0 2 13.0 2 48.336 9 85.0 10 45.0 2 19.0 2 78.0 2 20.0 12 80.0 2 86.0 11 67.0 12 91.0 3 44.0 13 8.0 2 82.0 3 1.0311 7 3.2928 9 2.0 1 14.0 2 60.4181 8 24.0 3 74.0 2 71.0 3 7.0976 9 13.0 2]
Total: 1184.1756
Mean: 23.683512
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2424.578748999982
Median total errors in population: 1184.1756
Error averages by case: (64.4570579 2.771 66.20832349999999 2.828 95.76204599999994 9.224 133.92275179999996 11.069 94.8316239 2.832 71.7093424 2.0 122.71513730000001 2.83 68.1629776 12.102 127.88941810000003 3.756 132.05068160000002 10.306 114.4358859 12.061 139.01341849999997 3.016 91.34842689999999 13.085 61.83054220000001 2.852 130.25327570000002 2.931 52.314918600000134 5.771 56.1430301000006 10.051 50.81955139999999 1.889 62.96648899999998 2.865 106.6905621999991 9.098 76.0356465 3.815 119.71690939999999 2.822 120.22246679999999 2.99 59.797066000000406 10.003 60.30019969999999 2.014)
Error minima by case: (3.2001 2 4.4596 2 0.8769 2 16.4402 9 17.7305 2 18.0 1 74.7245 1 11.4959 10 76.496 2 10.0957 9 10.1231 8 7.0022 2 7.8251 11 7.0 1 51.6935 2 0.0311 2 0.6327 1 0.0 0 13.0 2 0.4553 1 21.0 3 31.2084 2 68.0 2 4.4375 1 10.0 1)
Average genome size in population (length): 32.919
Average program size in population (points): 33.919
Average percent parens in population: 0.030
Minimum age in population: 139.3639480244402
Maximum age in population: 143.6957721313129
Average age in population: 141.8978686884997
Median age in population: 141.9575089470817
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.692
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.692
Total error diversity:				 0.047
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 80542789
--- Timings ---
Current time: 1529616367503 milliseconds
Total Time:         314.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.3 seconds, 45.5%
Fitness Testing:    137.4 seconds, 43.6%
Report:              34.1 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_dec} {:instruction float_mult} {:instruction float_tan} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction float_shove} {:instruction print_float} {:instruction -30} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction -30} {:instruction 28} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items})
Best program: (float_rot float_tan integer_shove float_dec float_mult float_tan float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc float_shove print_float -30 integer_dup_items integer_rot float_inc integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush -30 28 integer_dup_times print_float integer_yankdup integer_dup_times print_float integer_yankdup integer_flush float_dup_items)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2455.289162199982
Median total errors in population: 1184.1756
Error averages by case: (67.08782749999999 2.868 65.79477609999999 2.878 95.58723509999943 9.296 134.06185920000001 11.099 95.33604969999996 2.923 73.01476100000001 2.115 125.35410850000002 2.911 70.86720060000003 12.119 128.61268920000003 3.817 133.09794920000004 10.349 115.36616580000003 12.09 139.95209559999998 3.13 91.45477029999999 13.096 64.01792470000001 2.895 130.3648476 3.031 53.078526300000135 5.908 56.83733050000094 10.123 52.75270130000001 1.945 65.26606409999997 2.926 105.95537839999875 9.154 78.7468791 3.93 122.30866840000004 2.928 121.1034222 3.098 60.437942200000506 10.071 61.97198960000001 2.16)
Error minima by case: (1.6347 2 7.1197 2 4.8288 2 13.4367 9 13.7325 2 18.0 1 64.5837 1 11.0396 6 29.5349 2 9.0957 9 0.7366 8 14.1892 2 14.3672 10 7.0 1 53.7695 2 0.0311 2 0.159 1 0.0 0 3.7603 2 0.1837 2 21.0 3 33.8685 2 14.1324 2 0.5165 1 3.283 1)
Average genome size in population (length): 33.115
Average program size in population (points): 34.115
Average percent parens in population: 0.030
Minimum age in population: 141.2609813723226
Maximum age in population: 145.3099995201716
Average age in population: 143.4080413575638
Median age in population: 143.4505360740991
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.704
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.704
Total error diversity:				 0.059
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 81370739
--- Timings ---
Current time: 1529616370905 milliseconds
Total Time:         318.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.7 seconds, 45.5%
Fitness Testing:    139.0 seconds, 43.7%
Report:              34.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_rot} {:instruction float_tan} {:instruction integer_dup_times} {:instruction tag_integer_469} {:instruction float_min} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_pop} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 in1 57.87693811356892 float_rot float_tan integer_dup_times tag_integer_469 float_min float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_pop integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2421.2318468999847
Median total errors in population: 1184.1756
Error averages by case: (64.8347862 2.967 64.70510220000001 2.993 94.44372149999978 9.261 132.96038629999998 11.071 94.09337679999997 3.017 72.26121039999997 2.259 122.95429450000003 3.036 67.9037539 12.089 128.74682130000008 3.961 130.28324860000004 10.344 112.99972170000002 12.024 140.16473469999994 3.258 90.49589959999997 13.057 63.250403800000015 3.044 128.6882446 3.127 52.05221490000013 5.865 55.927950000000365 10.089 50.401034499999994 2.055 62.49691379999996 3.049 105.21065279999951 9.141 78.22285129999995 4.036 119.16561480000003 3.001 121.09356189999998 3.231 59.558332300000444 10.044 60.01401449999998 2.284)
Error minima by case: (3.1015 2 4.4596 2 0.4893 2 15.4402 6 13.7325 2 17.6378 1 10.3022 1 9.1227 9 28.7466 2 9.0957 8 7.463 8 14.1892 2 11.0804 9 7.0 1 51.6935 2 0.0311 2 1.6327 1 0.0 0 6.7603 2 0.0933 1 10.058 3 20.0238 2 5.4225 2 1.3855 1 8.95 1)
Average genome size in population (length): 32.889
Average program size in population (points): 33.889
Average percent parens in population: 0.030
Minimum age in population: 142.2609813723226
Maximum age in population: 146.9231434304836
Average age in population: 144.8666614707787
Median age in population: 144.9007540690111
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.064
Error (vector) diversity:			 0.069
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 82193014
--- Timings ---
Current time: 1529616374316 milliseconds
Total Time:         321.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.2 seconds, 45.5%
Fitness Testing:    140.5 seconds, 43.7%
Report:              34.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 57848.68179999998
Test mean error for best: 28.92434
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -19.0239631162
Correct output: 66.9966003687  | Program output: 53.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -42.5632579726
Correct output: 80.2675177914  | Program output: 35.2675177914 
Correct output: -60.7827432914 | Program output: -79.7827432914
Correct output: -87.4162880094 | Program output: -9.4162880094 
Correct output: 14.1647964189  | Program output: -5.8352035811 
Correct output: -126.4651108881 | Program output: -46.4651108881
Correct output: 48.781270316   | Program output: -37.218729684 
Correct output: 29.7365869138  | Program output: -37.2634130862
Correct output: -163.8107606538 | Program output: -72.8107606538
Correct output: -14.6246036823 | Program output: 29.3753963177 
Correct output: -72.1209990048 | Program output: -80.1209990048
Correct output: 114.230518731  | Program output: 32.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 14.2386855703 
Correct output: 25.2397222484  | Program output: 11.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -95.8040488051
Correct output: 93.7454585668  | Program output: 19.7454585668 
Correct output: -152.1323711502 | Program output: -81.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -0.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction float_dup_times} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_swap} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_dup_times} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 float_dup_times float_min float_mult float_rot float_tan integer_swap float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 integer_dup_times 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [15.0 2 13.0 2 47.336 9 85.0 10 45.0 2 19.0 2 78.0 2 20.0 12 80.0 2 86.0 11 67.0 12 91.0 3 44.0 13 8.0 2 82.0 3 0.0311 5 4.2928 10 2.0 1 14.0 2 59.4181 9 24.0 3 74.0 2 71.0 3 8.0976 10 13.0 2]
Total: 1184.1756
Mean: 23.683512
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2274.307584399983
Median total errors in population: 1184.1756
Error averages by case: (59.5723402 2.809 57.3522301 2.813 89.87579689999983 9.252 127.28016599999998 11.049 87.28359499999996 2.809 65.5985063 2.096 118.28852800000007 2.869 63.643974400000005 12.115 121.61966480000002 3.735 125.46133710000004 10.387 107.63493160000003 12.043 133.2907131 3.112 84.25504219999999 13.08 57.28357570000001 2.853 122.5697279 2.987 45.74164780000014 5.835 49.58080780000056 10.053 45.02873129999999 1.846 57.73691399999999 2.83 99.98554889999924 9.089 71.92303699999998 3.863 114.6345853 2.824 114.23619669999998 3.092 53.24803550000057 10.0 55.582950799999985 2.158)
Error minima by case: (1.2208 2 6.1197 2 0.8769 2 7.6239 9 12.7325 2 7.2182 1 12.463 1 8.3743 6 14.463 2 10.0957 9 1.7366 8 15.1892 2 14.5237 10 7.0 1 52.7695 2 0.0067 2 0.6327 1 0.0 0 2.7603 2 0.6445 1 17.6468 3 32.8685 2 5.463 2 4.4375 2 5.05 1)
Average genome size in population (length): 33.068
Average program size in population (points): 34.068
Average percent parens in population: 0.030
Minimum age in population: 143.2609813723226
Maximum age in population: 148.5467370527961
Average age in population: 146.3368003275264
Median age in population: 146.358673680351
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.696
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.696
Total error diversity:				 0.066
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 83019764
--- Timings ---
Current time: 1529616377537 milliseconds
Total Time:         324.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.6 seconds, 45.4%
Fitness Testing:    141.9 seconds, 43.7%
Report:              35.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_cos} {:instruction tag_integer_469} {:instruction float_mult} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_shove} {:instruction in1})
Best program: (float_cos tag_integer_469 float_mult tag_integer_469 float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup float_shove in1)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2529.069497199984
Median total errors in population: 1184.1756
Error averages by case: (68.89141559999999 3.015 69.01805569999999 2.996 99.85205919999936 9.269 135.3541534 11.024 98.03200479999998 3.047 75.81027200000001 2.332 127.6998448 3.082 72.92023929999999 12.059 131.9767819 3.961 134.56149340000005 10.358 116.37369540000002 12.01 144.11703719999997 3.345 94.44150499999999 13.041 67.18219770000002 3.08 133.14647259999998 3.19 56.863718600000134 5.99 60.576994200000804 10.062 55.5525881 2.07 67.89095909999998 3.054 109.2416344999989 9.109 81.88353599999999 4.07 124.02356750000001 3.032 125.09264679999998 3.327 64.22748380000046 9.985 65.39214059999999 2.439)
Error minima by case: (3.5402 2 4.4596 2 0.1231 2 0.2911 7 10.4937 2 17.0 1 59.4163 1 6.6607 7 73.5207 2 4.2357 8 8.463 8 75.3617 2 0.6942 9 6.0 1 23.463 2 0.0143 2 1.2928 1 0.0 0 4.6265 2 0.1121 1 2.6732 3 8.7813 2 59.9798 2 0.3855 1 4.3973 1)
Average genome size in population (length): 33.032
Average program size in population (points): 34.032
Average percent parens in population: 0.030
Minimum age in population: 145.3929589089455
Maximum age in population: 150.0182733673418
Average age in population: 147.8825096028925
Median age in population: 147.9319489965468
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.065
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 83845614
--- Timings ---
Current time: 1529616380919 milliseconds
Total Time:         328.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       149.1 seconds, 45.4%
Fitness Testing:    143.5 seconds, 43.7%
Report:              35.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction integer_shove} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction float_div} {:instruction float_tan} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_shove} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 integer_shove in1 57.87693811356892 float_min integer_sub float_div float_tan float_dup tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush integer_shove float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2693.4905348999832
Median total errors in population: 1184.1756
Error averages by case: (76.8493253 2.934 75.5909867 2.962 106.26056889999882 9.31 141.86562959999998 11.073 105.37110869999998 2.987 82.7292667 2.24 133.96159920000002 2.991 79.5368224 12.129 138.28334540000006 3.859 141.91633760000002 10.401 124.7418133 12.072 149.46915289999995 3.227 102.0745745 13.097 73.5075865 2.991 139.8062559 3.13 62.836430100000136 5.985 67.27475910000108 10.105 61.9049713 2.024 73.80326839999996 2.992 116.89091779999863 9.148 87.85514509999996 3.98 130.8879869 2.99 130.8403794 3.214 70.86711050000042 10.008 70.2691927 2.247)
Error minima by case: (3.1015 2 4.4596 2 5.8475 2 12.3783 9 11.8769 2 18.0 1 75.0 1 8.1227 6 77.0 2 10.0957 9 0.7366 8 88.0 2 14.3672 10 7.0 1 25.1231 2 0.0311 2 1.6327 1 0.0 0 2.7603 2 0.3168 1 16.6468 3 17.1231 2 68.0 2 5.4375 2 10.0 1)
Average genome size in population (length): 33.034
Average program size in population (points): 34.034
Average percent parens in population: 0.030
Minimum age in population: 146.3929589089455
Maximum age in population: 151.1614639290768
Average age in population: 149.33911376881
Median age in population: 149.3921681649002
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.064
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 84671539
--- Timings ---
Current time: 1529616384036 milliseconds
Total Time:         331.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.4 seconds, 45.4%
Fitness Testing:    144.9 seconds, 43.7%
Report:              36.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min float_inc float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2761.042707899984
Median total errors in population: 1184.1756
Error averages by case: (79.07280509999997 2.982 79.48769920000002 2.999 108.0513830999994 9.34 142.9339185 11.076 107.65673619999994 3.02 84.44827420000001 2.317 137.17088240000007 3.043 84.5389648 12.152 140.06005760000002 3.899 144.69349270000004 10.439 127.37100410000002 12.092 151.30482130000001 3.318 104.04582919999999 13.101 75.0384188 3.038 142.19399160000003 3.194 65.8413618000001 6.011 69.58028830000103 10.121 65.80786479999999 2.063 78.29277219999997 3.034 118.6610776999987 9.161 89.1637233 4.051 134.3990674 3.023 132.8831481 3.297 73.14004790000014 10.035 76.03107760000002 2.368)
Error minima by case: (3.1015 2 1.1361 2 7.8382 2 1.3411 9 7.6871 2 17.0 1 75.0 1 3.6607 9 46.0181 2 6.8456 9 9.1231 8 88.0 2 7.8135 8 6.0 1 54.3536 2 0.0311 2 0.9976 1 0.0 0 12.0 2 0.2197 1 21.0 3 33.8685 2 62.8023 2 2.8072 2 10.0 1)
Average genome size in population (length): 33.229
Average program size in population (points): 34.229
Average percent parens in population: 0.030
Minimum age in population: 148.1469452578643
Maximum age in population: 152.8831136393306
Average age in population: 150.7559173699248
Median age in population: 150.7796237738415
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.7
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.7
Total error diversity:				 0.056
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 85502339
--- Timings ---
Current time: 1529616387300 milliseconds
Total Time:         334.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       152.0 seconds, 45.4%
Fitness Testing:    146.3 seconds, 43.7%
Report:              36.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_yankdup} {:instruction tagged_94} {:instruction tag_integer_718} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_sin} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_mult} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot integer_yankdup tagged_94 tag_integer_718 float_mult in1 60.537048956669786 float_sin float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_mult integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2494.0966325999825
Median total errors in population: 1184.1756
Error averages by case: (69.46093900000001 2.888 67.5812277 2.906 97.39023059999941 9.253 135.14434239999997 11.001 96.6204562 2.918 73.9856491 2.225 127.17768820000002 2.946 72.7354908 12.072 131.1698356 3.822 133.7440352 10.376 116.20844520000003 12.02 141.52560519999997 3.219 93.89783589999999 13.05 64.37703139999999 2.946 131.55988890000003 3.097 54.29591580000014 5.902 58.486495000001135 10.037 53.90642819999999 1.966 67.09371749999997 2.948 108.55682249999869 9.088 79.05480389999997 3.953 123.52783310000001 2.907 122.99970660000001 3.215 61.98513370000067 9.971 64.58207489999998 2.303)
Error minima by case: (4.2007 2 2.4968 2 4.4357 2 2.3291 9 13.7325 2 17.0 1 34.7894 1 9.0396 6 29.5349 2 4.0154 9 0.2634 7 14.1892 2 0.2083 8 6.0 1 50.6935 2 0.0311 2 0.6327 1 0.0 0 2.7603 2 1.2677 1 16.6468 3 30.2084 2 14.1324 2 4.4375 1 1.7829 1)
Average genome size in population (length): 33.104
Average program size in population (points): 34.104
Average percent parens in population: 0.030
Minimum age in population: 149.1469452578643
Maximum age in population: 154.4510637700314
Average age in population: 152.2608976996842
Median age in population: 152.3400817969139
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.702
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.702
Total error diversity:				 0.053
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 86330014
--- Timings ---
Current time: 1529616390717 milliseconds
Total Time:         338.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.4 seconds, 45.4%
Fitness Testing:    147.9 seconds, 43.8%
Report:              36.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_dup_items} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction in2} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_swap} {:instruction float_yankdup})
Best program: (float_rot integer_shove tag_integer_469 integer_dup_items in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc in2 print_float integer_yankdup integer_flush float_dup_items integer_swap float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 2852.135166499986
Median total errors in population: 1184.1756
Error averages by case: (82.41501159999997 3.089 82.6981334 3.105 111.3136743999993 9.344 146.00876589999996 11.083 111.52626299999993 3.145 88.85126930000003 2.443 140.12179360000002 3.156 86.50760059999999 12.132 144.23332870000004 4.023 147.0924181 10.449 130.41057920000003 12.088 155.5872358 3.448 107.39578470000004 13.111 79.26965550000001 3.15 145.67710730000005 3.3 70.1517269 6.093 73.90952890000038 10.145 68.9312001 2.168 81.3116816 3.147 121.90271789999879 9.203 93.84956369999996 4.171 137.41569500000003 3.142 138.01186000000004 3.418 77.45946369999959 10.055 78.97010760000002 2.505)
Error minima by case: (2.1445 2 6.1197 2 6.4988 2 6.3027 9 19.3906 2 18.0 1 75.0 1 3.1515 7 77.0 2 9.0957 9 1.7366 7 88.0 2 3.1347 10 7.0 1 53.3536 2 0.0311 2 1.6327 1 0.0 0 0.1661 2 0.146 2 21.0 3 32.8685 2 68.0 2 5.4375 1 10.0 1)
Average genome size in population (length): 33.156
Average program size in population (points): 34.156
Average percent parens in population: 0.030
Minimum age in population: 150.1469452578643
Maximum age in population: 155.730932310162
Average age in population: 153.7380761605218
Median age in population: 153.7457503674291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.065
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 87158989
--- Timings ---
Current time: 1529616394094 milliseconds
Total Time:         341.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.9 seconds, 45.3%
Fitness Testing:    149.5 seconds, 43.8%
Report:              37.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction tag_integer_795} {:instruction float_dup_items} {:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction integer_rot} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction -53} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 tag_integer_795 float_dup_items float_rot float_mult in1 60.537048956669786 float_min integer_rot float_rot float_tan integer_shove tag_integer_469 float_mult in1 tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 -53 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2697.4398674999848
Median total errors in population: 1184.1756
Error averages by case: (76.3177582 3.008 75.72204380000002 3.02 105.45841059999904 9.268 141.72047539999997 11.02 104.91028959999997 3.042 82.91941909999998 2.368 134.4004763 3.093 80.11697619999998 12.101 138.43265660000006 3.963 140.55290880000004 10.395 124.46991440000002 12.033 150.7138138 3.378 101.79810649999999 13.066 74.2422847 3.1 138.45131480000003 3.223 63.223092200000146 5.967 66.34178780000109 10.054 62.6311136 2.092 75.16714229999998 3.061 116.65537619999854 9.128 88.99531129999998 4.077 130.9112848 3.039 131.22317580000004 3.353 69.92467340000023 9.983 72.9010613 2.407)
Error minima by case: (3.2001 2 3.4596 2 8.4157 2 2.2575 6 16.7305 2 17.0 1 37.2283 1 6.1986 6 72.5207 2 0.6501 8 9.6578 8 80.0698 2 12.6198 8 6.0 1 3.9224 2 0.0311 2 0.6327 1 0.0 0 8.0661 2 0.5411 1 10.058 3 26.0585 2 58.9798 2 4.4375 1 0.7217 1)
Average genome size in population (length): 33.113
Average program size in population (points): 34.113
Average percent parens in population: 0.030
Minimum age in population: 152.4787810979112
Maximum age in population: 157.3256999073902
Average age in population: 155.2156756951269
Median age in population: 155.2657831829598
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.75
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.75
Total error diversity:				 0.055
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 87986964
--- Timings ---
Current time: 1529616397192 milliseconds
Total Time:         344.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.2 seconds, 45.3%
Fitness Testing:    150.9 seconds, 43.8%
Report:              37.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_dup_times} {:instruction float_rot} {:instruction float_tan} {:instruction float_pop} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove float_dup_times float_rot float_tan float_pop tag_integer_469 float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2721.428696799984
Median total errors in population: 1184.1756
Error averages by case: (77.32011429999997 3.029 76.63494720000003 3.073 106.55208979999952 9.304 143.4641337 11.084 105.81794839999995 3.111 83.59854980000003 2.393 135.02875560000004 3.105 81.4737955 12.155 138.64548950000002 3.966 141.68837700000003 10.469 124.71633880000003 12.08 150.2844535 3.38 102.2217222 13.109 75.49221029999998 3.1 140.35885240000005 3.288 64.24597840000013 6.02 67.97152310000078 10.075 63.99794020000001 2.146 76.17777999999998 3.122 116.51778009999893 9.133 90.23081429999999 4.108 132.23464979999997 3.101 131.55533829999996 3.376 71.53742050000024 10.02 73.4656941 2.449)
Error minima by case: (3.9911 2 6.1197 2 0.8769 2 1.1476 8 19.3906 2 18.0 1 17.1231 1 10.3743 9 19.1231 2 10.0957 9 16.5999 8 30.1231 2 10.9374 9 7.0 1 53.3536 2 0.0311 2 2.2928 1 0.0 0 13.0 2 0.146 1 21.0 3 32.8685 2 10.1231 2 0.3855 1 10.0 1)
Average genome size in population (length): 33.445
Average program size in population (points): 34.445
Average percent parens in population: 0.030
Minimum age in population: 153.5938744521401
Maximum age in population: 158.5538153215871
Average age in population: 156.6859526057222
Median age in population: 156.7080629391218
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.752
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.752
Total error diversity:				 0.066
Error (vector) diversity:			 0.07
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 88823289
--- Timings ---
Current time: 1529616400297 milliseconds
Total Time:         347.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.6 seconds, 45.3%
Fitness Testing:    152.3 seconds, 43.8%
Report:              37.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 57848.68179999998
Test mean error for best: 28.92434
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -19.0239631162
Correct output: 66.9966003687  | Program output: 53.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -42.5632579726
Correct output: 80.2675177914  | Program output: 35.2675177914 
Correct output: -60.7827432914 | Program output: -79.7827432914
Correct output: -87.4162880094 | Program output: -9.4162880094 
Correct output: 14.1647964189  | Program output: -5.8352035811 
Correct output: -126.4651108881 | Program output: -46.4651108881
Correct output: 48.781270316   | Program output: -37.218729684 
Correct output: 29.7365869138  | Program output: -37.2634130862
Correct output: -163.8107606538 | Program output: -72.8107606538
Correct output: -14.6246036823 | Program output: 29.3753963177 
Correct output: -72.1209990048 | Program output: -80.1209990048
Correct output: 114.230518731  | Program output: 32.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 14.2386855703 
Correct output: 25.2397222484  | Program output: 11.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -95.8040488051
Correct output: 93.7454585668  | Program output: 19.7454585668 
Correct output: -152.1323711502 | Program output: -81.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -0.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_integer_469} {:instruction float_yank} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction integer_rot} {:instruction float_tan} {:instruction in2} {:instruction tag_integer_469} {:instruction integer_div} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (tag_integer_469 float_yank in1 60.537048956669786 float_min float_mult integer_rot float_tan in2 tag_integer_469 integer_div in1 57.87693811356892 float_min integer_sub integer_rot float_inc -30 28 integer_stackdepth 57.87693811356892 float_min float_inc float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [15.0 2 13.0 2 47.336 9 85.0 10 45.0 2 19.0 2 78.0 2 20.0 12 80.0 2 86.0 11 67.0 12 91.0 3 44.0 13 8.0 2 82.0 3 0.0311 5 4.2928 10 2.0 1 14.0 2 59.4181 9 24.0 3 74.0 2 71.0 3 8.0976 10 13.0 2]
Total: 1184.1756
Mean: 23.683512
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 2439.078454999985
Median total errors in population: 1184.1756
Error averages by case: (65.8124565 2.93 65.4417459 2.956 95.67874979999964 9.223 131.14747889999998 10.999 94.8312266 2.998 73.12051489999999 2.293 124.25062750000001 3.005 69.26921190000002 12.07 129.27957960000003 3.857 131.06734820000003 10.381 113.79601110000002 11.99 139.9628349 3.285 91.12202419999996 13.039 63.59294630000001 2.997 129.78520880000002 3.174 52.745104400000145 5.884 56.50340980000088 10.015 51.7801885 2.003 63.80200289999997 2.994 106.40688889999899 9.06 77.90245849999997 3.986 120.52708980000003 2.976 122.24992669999997 3.264 60.096202100000546 9.945 61.228218299999995 2.355)
Error minima by case: (2.024 2 4.4596 2 4.8769 2 16.4402 9 17.7305 2 16.1429 1 10.4907 1 6.771 8 49.5395 2 10.0957 7 22.9697 8 86.8851 2 12.6246 9 4.8046 1 51.6935 2 0.0311 2 1.2928 1 0.0 0 12.0 2 0.563 1 21.0 3 31.2084 2 68.0 2 1.5165 1 10.0 1)
Average genome size in population (length): 33.827
Average program size in population (points): 34.827
Average percent parens in population: 0.030
Minimum age in population: 154.5938744521401
Maximum age in population: 160.1300452656717
Average age in population: 158.1571732262276
Median age in population: 158.1873702683352
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.736
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.736
Total error diversity:				 0.054
Error (vector) diversity:			 0.057
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 89669139
--- Timings ---
Current time: 1529616403476 milliseconds
Total Time:         350.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.0 seconds, 45.3%
Fitness Testing:    153.7 seconds, 43.8%
Report:              38.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_dup} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction float_mult} {:instruction in1} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction 28} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_shove float_mult float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_dup float_mult in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove integer_dup_times float_mult in1 float_mult in1 57.87693811356892 float_min 28 integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2875.1744807999853
Median total errors in population: 1184.1756
Error averages by case: (85.2612019 3.022 82.36702469999999 3.049 111.66613809999917 9.355 148.11262919999993 11.053 110.81803049999996 3.063 91.14685619999999 2.389 142.6261169 3.102 89.09297910000001 12.128 146.2933272 3.949 148.90021140000002 10.423 131.8385162 12.043 157.60590589999998 3.375 108.2145724 13.076 81.8620721 3.104 145.0457504 3.235 69.67706489999993 5.996 73.2852081000006 10.126 68.7571677 2.118 80.64749069999999 3.074 121.96647059999884 9.154 96.25974809999997 4.092 136.71114839999998 3.062 139.37684890000008 3.356 76.52627749999999 10.041 81.3147237 2.416)
Error minima by case: (0.171 2 7.1197 2 6.4988 2 11.5386 9 14.7325 2 17.0 1 59.4163 1 2.6607 9 28.5349 2 5.1941 9 0.2634 8 13.1892 2 6.4947 10 6.0 1 54.3536 2 0.0311 2 1.6327 1 0.0 0 4.7603 2 0.146 2 21.0 3 33.8685 2 15.1324 2 5.4375 2 7.95 1)
Average genome size in population (length): 33.689
Average program size in population (points): 34.689
Average percent parens in population: 0.030
Minimum age in population: 156.97187276968
Maximum age in population: 161.7720847251928
Average age in population: 159.6194809362362
Median age in population: 159.644206187489
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.725
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.725
Total error diversity:				 0.058
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 90511514
--- Timings ---
Current time: 1529616406955 milliseconds
Total Time:         354.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.5 seconds, 45.3%
Fitness Testing:    155.2 seconds, 43.8%
Report:              38.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 57848.68179999998
Test mean error for best: 28.92434
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -19.0239631162
Correct output: 66.9966003687  | Program output: 53.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -42.5632579726
Correct output: 80.2675177914  | Program output: 35.2675177914 
Correct output: -60.7827432914 | Program output: -79.7827432914
Correct output: -87.4162880094 | Program output: -9.4162880094 
Correct output: 14.1647964189  | Program output: -5.8352035811 
Correct output: -126.4651108881 | Program output: -46.4651108881
Correct output: 48.781270316   | Program output: -37.218729684 
Correct output: 29.7365869138  | Program output: -37.2634130862
Correct output: -163.8107606538 | Program output: -72.8107606538
Correct output: -14.6246036823 | Program output: 29.3753963177 
Correct output: -72.1209990048 | Program output: -80.1209990048
Correct output: 114.230518731  | Program output: 32.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 14.2386855703 
Correct output: 25.2397222484  | Program output: 11.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -95.8040488051
Correct output: 93.7454585668  | Program output: 19.7454585668 
Correct output: -152.1323711502 | Program output: -81.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -0.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_dup_times} {:instruction float_rot} {:instruction float_frominteger} {:instruction integer_shove} {:instruction tag_integer_311} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_dup_times} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction integer_rot})
Best program: (float_rot integer_dup_times float_rot float_frominteger integer_shove tag_integer_311 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 integer_dup_times 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush integer_rot)
Errors: [15.0 2 13.0 2 47.336 9 85.0 10 45.0 2 19.0 2 78.0 2 20.0 12 80.0 2 86.0 11 67.0 12 91.0 3 44.0 13 8.0 2 82.0 3 0.0311 5 4.2928 10 2.0 1 14.0 2 59.4181 9 24.0 3 74.0 2 71.0 3 8.0976 10 13.0 2]
Total: 1184.1756
Mean: 23.683512
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2617.7380312999835
Median total errors in population: 1184.1756
Error averages by case: (72.3442604 2.94 72.08165350000003 2.956 105.43462889999937 9.28 138.7896066 11.025 101.51465599999995 2.977 79.21767529999998 2.286 131.24854109999998 3.014 76.07325879999998 12.089 135.86447240000004 3.875 137.99872130000003 10.392 120.98467120000002 12.027 147.20680620000002 3.277 99.40780339999999 13.063 69.64308930000001 3.009 135.9188956 3.138 60.526005300000136 5.903 64.39692960000083 10.076 58.357476999999996 2.023 70.56368479999999 2.983 114.34126459999896 9.101 85.1051679 3.997 126.79462130000002 2.97 128.57091780000002 3.264 67.9254227000004 9.992 69.3898003 2.381)
Error minima by case: (1.2753 2 5.4596 2 5.0682 2 0.0516 8 14.7325 2 17.0 1 63.5837 1 5.9673 6 28.5349 2 10.0957 8 22.2639 8 13.1892 2 14.6246 7 6.0 1 52.6935 2 0.0311 1 1.2928 1 0.0 0 7.7603 2 0.303 1 16.6468 3 32.2084 2 15.1324 2 5.0976 2 6.7986 1)
Average genome size in population (length): 33.699
Average program size in population (points): 34.699
Average percent parens in population: 0.030
Minimum age in population: 158.8841482142746
Maximum age in population: 163.4417031073908
Average age in population: 161.1281628365263
Median age in population: 161.1624175900352
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.053
Error (vector) diversity:			 0.056
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 91354214
--- Timings ---
Current time: 1529616410344 milliseconds
Total Time:         357.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       162.0 seconds, 45.3%
Fitness Testing:    156.8 seconds, 43.8%
Report:              38.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup float_mod float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 27
Size: 28
Percent parens: 0.036
--- Population Statistics ---
Average total errors in population: 2746.840280799985
Median total errors in population: 1184.1756
Error averages by case: (80.52053219999999 3.075 76.3244418 3.089 105.92918429999924 9.317 143.0122377 11.056 105.47152099999997 3.117 86.4019613 2.438 137.2411676 3.155 83.04837040000001 12.102 142.09744790000002 4.041 144.02533480000008 10.41 127.26298340000004 12.043 153.48253269999998 3.427 102.38817749999995 13.068 76.99500600000002 3.169 140.02860960000004 3.267 63.892369200000125 6.0 67.69638770000091 10.093 63.89398439999999 2.176 75.99485569999996 3.138 116.49460649999872 9.129 91.75994519999999 4.152 131.85376689999998 3.124 135.12636809999998 3.409 71.25706749999988 9.992 74.18442139999998 2.47)
Error minima by case: (3.3961 2 6.1197 2 6.4988 2 12.3783 9 19.3906 2 18.0 1 58.4163 1 8.1227 6 77.0 2 10.0957 7 0.2634 8 88.0 2 5.7919 9 7.0 1 53.3536 2 0.0311 2 1.6327 1 0.0 0 4.7603 2 0.146 1 16.6468 3 32.8685 2 68.0 2 5.4375 1 3.9264 1)
Average genome size in population (length): 33.745
Average program size in population (points): 34.745
Average percent parens in population: 0.030
Minimum age in population: 159.8852159667193
Maximum age in population: 164.8327131306571
Average age in population: 162.5818415649379
Median age in population: 162.656524583657
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.059
Error (vector) diversity:			 0.062
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 92198014
--- Timings ---
Current time: 1529616413426 milliseconds
Total Time:         360.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.3 seconds, 45.3%
Fitness Testing:    158.2 seconds, 43.8%
Report:              39.2 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_max} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction tagged_821} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction float_mult} {:instruction integer_flush} {:instruction float_dup_items} {:instruction 4} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult in1 integer_shove tag_integer_469 float_mult integer_shove tag_integer_469 float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_max integer_rot float_inc integer_dup_times tagged_821 float_inc integer_dup_times print_float float_mult integer_flush float_dup_items 4 float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2694.753009799985
Median total errors in population: 1184.1756
Error averages by case: (77.19045499999997 3.035 75.7441865 3.049 104.93888619999917 9.3 140.617699 11.006 104.88467709999999 3.082 82.79290079999998 2.413 134.19816500000002 3.112 80.3801996 12.073 138.6063655 3.958 141.6173994 10.399 124.64554960000001 12.043 149.89712169999999 3.398 101.17908420000002 13.043 73.27321130000001 3.109 139.45863939999998 3.259 63.34319410000015 6.078 67.0452088000008 10.054 62.3848413 2.131 74.47056049999999 3.099 115.39555379999882 9.121 88.02619109999998 4.097 131.1454767 3.08 131.54457920000002 3.376 70.57433040000001 9.966 71.70253360000002 2.415)
Error minima by case: (2.4294 2 4.4596 2 3.8769 2 11.8925 8 12.8769 2 2.7827 1 14.4163 1 10.0338 8 46.247 2 5.548 8 9.1231 8 22.4654 2 8.6602 9 7.0 1 24.1231 2 0.0311 2 0.6327 1 0.0 0 6.2397 2 0.3451 2 21.0 3 14.7455 2 68.0 2 4.4375 2 5.05 1)
Average genome size in population (length): 33.69
Average program size in population (points): 34.69
Average percent parens in population: 0.030
Minimum age in population: 161.4172356758461
Maximum age in population: 166.1491134794817
Average age in population: 164.011570649597
Median age in population: 164.0683617702364
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.701
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.701
Total error diversity:				 0.062
Error (vector) diversity:			 0.067
Behavioral diversity:				 0.067
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 93040464
--- Timings ---
Current time: 1529616416719 milliseconds
Total Time:         364.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.8 seconds, 45.3%
Fitness Testing:    159.6 seconds, 43.8%
Report:              39.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction integer_inc} {:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction integer_rot} {:instruction integer_shove} {:instruction tag_integer_374} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult integer_inc float_rot float_mult in1 60.537048956669786 float_min integer_rot integer_shove tag_integer_374 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times integer_pop 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2941.2150277999863
Median total errors in population: 1184.1756
Error averages by case: (86.36452249999998 3.205 85.40848110000002 3.235 114.53864149999917 9.38 150.40455479999997 11.106 114.05699629999992 3.258 93.75108179999997 2.622 143.58691889999997 3.285 89.67990119999999 12.167 148.7083196 4.129 150.1693501 10.509 133.29112020000002 12.092 160.07618220000003 3.598 110.44937409999999 13.128 84.83284619999999 3.276 147.9064083 3.439 73.58445509999947 6.18 76.79909440000014 10.12 71.5490084 2.296 83.58999429999997 3.265 124.98605029999862 9.191 99.86979359999997 4.277 138.74506380000003 3.255 141.9116653 3.568 81.25687839999935 10.046 82.45132540000003 2.62)
Error minima by case: (1.6347 2 4.4596 2 1.9994 2 10.4373 8 17.7305 2 11.5282 1 13.463 1 0.3755 9 15.463 2 6.8456 8 9.1781 8 26.463 2 7.8135 9 0.4891 1 51.6935 2 0.0311 2 1.6327 1 0.0 0 10.6994 2 0.146 1 21.0 3 31.2084 2 6.463 2 1.3855 1 10.0 1)
Average genome size in population (length): 33.585
Average program size in population (points): 34.585
Average percent parens in population: 0.030
Minimum age in population: 162.9136642510744
Maximum age in population: 167.5923214463235
Average age in population: 165.5674931107377
Median age in population: 165.6020623691247
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.075
Error (vector) diversity:			 0.08
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 93880389
--- Timings ---
Current time: 1529616419884 milliseconds
Total Time:         367.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.3 seconds, 45.3%
Fitness Testing:    161.0 seconds, 43.8%
Report:              39.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 57791.841099999976
Test mean error for best: 28.89592
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -19.0239631162
Correct output: 66.9966003687  | Program output: 53.9966003687 
Correct output: 12.5409282956  | Program output: 60.8769381136 
Correct output: 42.4367420274  | Program output: -42.5632579726
Correct output: 80.2675177914  | Program output: 35.2675177914 
Correct output: -60.7827432914 | Program output: -79.7827432914
Correct output: -87.4162880094 | Program output: -9.4162880094 
Correct output: 14.1647964189  | Program output: -5.8352035811 
Correct output: -126.4651108881 | Program output: -46.4651108881
Correct output: 48.781270316   | Program output: -37.218729684 
Correct output: 29.7365869138  | Program output: -37.2634130862
Correct output: -163.8107606538 | Program output: -72.8107606538
Correct output: -14.6246036823 | Program output: 29.3753963177 
Correct output: -72.1209990048 | Program output: -80.1209990048
Correct output: 114.230518731  | Program output: 32.230518731  
Correct output: 59.8458330136  | Program output: 60.8769381136 
Correct output: 64.1697788867  | Program output: 60.8769381136 
Correct output: 12.2386855703  | Program output: 14.2386855703 
Correct output: 25.2397222484  | Program output: 11.2397222484 
Correct output: 0.4588693899   | Program output: 60.8769381136 
Correct output: -119.8040488051 | Program output: -95.8040488051
Correct output: 93.7454585668  | Program output: 19.7454585668 
Correct output: -152.1323711502 | Program output: -81.1323711502
Correct output: 67.97455151    | Program output: 60.8769381136 
Correct output: -13.0499546478 | Program output: -0.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_add} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction integer_dup} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot float_tan integer_shove tag_integer_469 integer_add in1 60.537048956669786 float_min float_mult float_rot integer_dup integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot integer_rot integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush)
Errors: [15.0 2 13.0 2 48.336 9 85.0 10 45.0 2 19.0 2 78.0 2 20.0 12 80.0 2 86.0 11 67.0 12 91.0 3 44.0 13 8.0 2 82.0 3 1.0311 7 3.2928 9 2.0 1 14.0 2 60.4181 8 24.0 3 74.0 2 71.0 3 7.0976 9 13.0 2]
Total: 1184.1756
Mean: 23.683512
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2387.7634251999825
Median total errors in population: 1184.1756
Error averages by case: (64.77398740000001 2.885 62.5030633 2.893 92.54453359999958 9.225 128.70182179999998 10.996 92.18224899999998 2.932 70.44354709999999 2.244 123.28041489999998 2.952 68.75993109999999 12.09 126.99235850000004 3.783 129.64669290000003 10.407 112.32147569999998 12.026 138.58122699999993 3.22 89.09820389999999 13.071 60.89830300000001 2.938 127.35616209999999 3.098 49.90411830000015 5.953 53.64481220000082 9.989 50.336715899999994 1.936 62.82406109999995 2.927 103.63686529999909 9.061 75.61935289999998 3.927 119.18546189999998 2.912 119.91700620000003 3.2 57.255861700000615 9.945 60.486198399999985 2.259)
Error minima by case: (4.0245 2 3.4596 2 6.4988 2 15.4402 9 16.7305 2 3.7827 1 4.9044 1 6.6746 7 43.9532 2 9.0957 8 3.2854 8 81.2988 2 14.3672 10 7.0 1 50.6935 2 0.0311 2 0.6327 1 0.0 0 12.2712 2 0.2012 1 21.0 3 30.2084 2 68.0 2 4.4375 1 10.0 1)
Average genome size in population (length): 33.431
Average program size in population (points): 34.431
Average percent parens in population: 0.030
Minimum age in population: 163.9136642510744
Maximum age in population: 168.9148484824594
Average age in population: 167.0102203302662
Median age in population: 167.0182668518275
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.053
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 94716539
--- Timings ---
Current time: 1529616423257 milliseconds
Total Time:         370.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.7 seconds, 45.2%
Fitness Testing:    162.6 seconds, 43.9%
Report:              40.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction integer_rot} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction 57.20511833929077} {:instruction float_min} {:instruction integer_sub} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush})
Best program: (float_rot integer_rot integer_shove tag_integer_469 float_mult tag_integer_469 float_mult in1 60.537048956669786 float_min float_mult float_rot float_mult in1 57.20511833929077 float_min integer_sub in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2443.140565799983
Median total errors in population: 1184.1756
Error averages by case: (65.81575799999999 2.842 65.31822609999999 2.851 96.1216118999999 9.217 132.77419159999997 10.977 94.89686179999998 2.879 72.09764990000002 2.201 124.5588619 2.908 69.9869015 12.109 128.46510530000003 3.729 131.73406970000002 10.416 114.25627420000004 12.053 139.69671789999998 3.194 91.78111590000002 13.079 63.358801799999995 2.897 129.4913778 3.085 52.85977500000015 5.975 57.109054900000665 9.942 52.450173600000014 1.909 64.11835319999997 2.903 107.86228829999918 8.997 77.5300073 3.898 121.06809560000002 2.897 121.00489449999999 3.183 60.166893300000524 9.861 62.361504800000006 2.254)
Error minima by case: (3.1225 2 6.1197 2 2.9162 2 16.4402 8 9.1347 2 18.0 1 75.0 1 5.9584 10 77.0 2 3.3826 9 10.1231 8 88.0 2 11.2382 10 7.0 1 11.867 2 0.0311 2 0.6327 1 0.0 0 13.0 2 0.3883 1 21.0 3 8.6181 2 68.0 2 4.4375 1 10.0 1)
Average genome size in population (length): 33.72
Average program size in population (points): 34.72
Average percent parens in population: 0.030
Minimum age in population: 165.5351590194567
Maximum age in population: 170.2979824168034
Average age in population: 168.5048751268806
Median age in population: 168.5605197913126
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.735
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.735
Total error diversity:				 0.058
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 95559739
--- Timings ---
Current time: 1529616426445 milliseconds
Total Time:         373.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.1 seconds, 45.2%
Fitness Testing:    164.0 seconds, 43.9%
Report:              40.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction float_rot} {:instruction float_tan} {:instruction integer_sub} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_dec} {:instruction integer_rot} {:instruction float_inc} {:instruction print_integer} {:instruction integer_pop} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_dup_items} {:instruction float_yankdup})
Best program: (float_frominteger float_rot float_tan integer_sub tag_integer_469 float_mult in1 57.87693811356892 float_min integer_dec integer_rot float_inc print_integer integer_pop 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_dup_items float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2716.640019999984
Median total errors in population: 1184.1756
Error averages by case: (76.31299460000001 2.983 76.87908840000003 3.009 108.03891189999908 9.314 141.9686262 11.035 105.75200299999996 3.031 84.83645859999999 2.365 134.00461570000002 3.066 79.87613960000002 12.102 139.7837076 3.928 142.8031971 10.41 125.55666640000003 12.058 151.50166959999996 3.359 101.9039479 13.088 75.26613759999998 3.051 139.79340459999997 3.221 64.25866000000012 6.042 68.67294200000103 10.062 61.937329 2.069 73.90439279999998 3.033 117.79555019999867 9.105 89.8613617 4.059 130.06787070000001 3.019 133.28755689999997 3.334 71.28544820000008 9.96 72.23133969999999 2.357)
Error minima by case: (2.2711 2 3.4596 2 5.4988 2 4.8379 8 6.7325 2 18.0 1 65.61 1 10.4959 9 77.0 2 9.0957 9 2.5624 8 88.0 2 11.4107 9 7.0 1 27.2305 2 0.0311 2 0.6327 1 0.0 0 1.7603 2 0.3465 1 21.0 3 6.7455 2 68.0 2 4.4375 1 8.1355 1)
Average genome size in population (length): 33.694
Average program size in population (points): 34.694
Average percent parens in population: 0.030
Minimum age in population: 166.5351590194567
Maximum age in population: 172.2181056147149
Average age in population: 170.0190328225021
Median age in population: 170.039404892825
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.736
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.736
Total error diversity:				 0.061
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.065
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 96402189
--- Timings ---
Current time: 1529616429711 milliseconds
Total Time:         377.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.6 seconds, 45.2%
Fitness Testing:    165.4 seconds, 43.9%
Report:              40.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction float_rot} {:instruction float_mult} {:instruction in1} {:instruction 56.45431171665421} {:instruction float_min} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_rot} {:instruction integer_dup_times} {:instruction -30} {:instruction 27} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_max} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (integer_min float_dup_times integer_fromfloat integer_shove float_rot float_mult in1 float_rot float_mult in1 56.45431171665421 float_min float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup float_rot integer_dup_times -30 27 integer_rot float_inc integer_dup_times print_float integer_yankdup float_max float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 37
Size: 38
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2937.269957299984
Median total errors in population: 1184.1756
Error averages by case: (86.52050149999998 3.153 85.43071979999998 3.241 114.48832709999924 9.402 149.38798369999995 11.155 114.03227530000001 3.256 92.4451387 2.533 144.2920907 3.255 90.73226050000001 12.214 147.66357660000006 4.136 149.36242500000003 10.49 132.5283822 12.106 158.96716610000004 3.506 110.97277079999996 13.154 83.15349239999999 3.246 148.26241730000007 3.411 73.05114799999963 6.123 76.76824210000048 10.148 73.35011970000001 2.318 85.42346199999996 3.291 124.94287799999881 9.191 97.79700509999999 4.225 140.21099049999998 3.252 140.74620970000004 3.495 80.27737969999974 10.056 83.55299480000004 2.553)
Error minima by case: (3.2007 2 5.1197 2 6.7274 2 13.4367 9 12.7325 2 17.0 1 58.4163 1 9.0355 8 30.5349 2 11.0957 8 0.7366 8 15.1892 2 4.898 8 6.0 1 52.3536 2 0.0311 2 0.6327 1 0.0 0 2.7603 2 0.2677 1 21.0 3 31.8685 2 13.1324 2 4.4375 1 3.3233 1)
Average genome size in population (length): 33.98
Average program size in population (points): 34.98
Average percent parens in population: 0.030
Minimum age in population: 168.5265438518091
Maximum age in population: 173.3891750164722
Average age in population: 171.4947217369244
Median age in population: 171.536844024286
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.066
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 97251764
--- Timings ---
Current time: 1529616433147 milliseconds
Total Time:         380.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.2 seconds, 45.2%
Fitness Testing:    166.9 seconds, 43.9%
Report:              41.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_flush} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot integer_flush integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_dec float_dup_items float_tan float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2985.1721084999863
Median total errors in population: 1184.1756
Error averages by case: (88.18692009999994 3.16 87.1914038 3.217 118.29280409999912 9.302 153.18304230000004 11.079 115.92671569999996 3.22 94.96109800000002 2.547 145.00765059999995 3.259 91.41148170000002 12.106 149.58305750000002 4.153 151.14110130000003 10.382 134.34603370000002 12.003 161.08524750000007 3.517 112.8533657 13.053 86.66866400000002 3.257 149.88356770000004 3.35 75.15397669999923 6.056 78.75815769999988 10.05 74.39448200000004 2.294 86.1423569 3.233 127.29373769999872 9.125 101.42035129999995 4.238 141.25563929999996 3.211 142.91625510000003 3.492 82.33219199999915 9.935 83.94180610000004 2.602)
Error minima by case: (1.6347 2 4.4596 2 0.8769 2 4.2575 9 17.7305 2 0.7827 1 19.1231 1 4.1986 9 21.1231 2 7.4316 7 0.7366 8 32.1231 2 8.8135 8 6.0 1 51.6935 2 0.0311 2 1.6327 1 0.0 0 2.4513 2 0.146 1 22.0 3 31.2084 2 12.1231 2 0.1733 2 11.0 1)
Average genome size in population (length): 33.535
Average program size in population (points): 34.535
Average percent parens in population: 0.030
Minimum age in population: 170.7487053395235
Maximum age in population: 175.2239123146178
Average age in population: 172.9769716460275
Median age in population: 173.0268343655779
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.75
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.75
Total error diversity:				 0.067
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 98090339
--- Timings ---
Current time: 1529616436340 milliseconds
Total Time:         383.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.6 seconds, 45.3%
Fitness Testing:    168.3 seconds, 43.9%
Report:              41.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction integer_shove} {:instruction integer_mod} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_dec} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_mult})
Best program: (float_rot float_tan integer_shove tag_integer_469 float_mult integer_shove integer_mod in1 60.537048956669786 float_min float_mult float_rot float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_dec integer_rot integer_rot float_inc integer_dup_times -30 28 integer_dup_times print_float integer_mult)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 2802.7316089999854
Median total errors in population: 1184.1756
Error averages by case: (80.49481699999997 3.011 79.67011469999998 3.046 109.51598339999916 9.305 148.0807432 11.092 108.57120769999997 3.056 88.4610923 2.357 137.8009546 3.099 83.63631590000003 12.125 143.4176171 4.002 146.24453510000006 10.382 129.19315440000003 12.05 154.85939020000004 3.338 105.39921599999998 13.08 79.63283170000001 3.115 142.67684260000004 3.206 67.30341139999986 5.946 71.0104221000004 10.112 65.8927639 2.129 77.03652399999999 3.08 121.09341759999847 9.158 93.89372789999997 4.083 133.1198101 3.062 136.13031850000004 3.332 74.5695653999994 10.009 75.43083220000003 2.421)
Error minima by case: (1.4931 2 1.1901 2 0.6509 2 12.4367 8 4.3161 2 17.0 1 58.4163 1 11.3743 9 17.9202 2 9.3061 8 0.2634 8 78.0698 2 12.0938 8 6.0 1 12.3279 2 0.0311 2 0.6327 1 0.0 0 2.7603 2 0.6098 1 8.058 3 8.1572 2 36.4291 2 2.1681 1 7.6348 1)
Average genome size in population (length): 33.62
Average program size in population (points): 34.62
Average percent parens in population: 0.030
Minimum age in population: 171.7487053395235
Maximum age in population: 176.2255879614659
Average age in population: 174.4431099043402
Median age in population: 174.4672796711465
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.068
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 98931064
--- Timings ---
Current time: 1529616439484 milliseconds
Total Time:         386.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       175.0 seconds, 45.2%
Fitness Testing:    169.7 seconds, 43.9%
Report:              42.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_540} {:instruction float_mult} {:instruction float_add} {:instruction -17} {:instruction float_min} {:instruction integer_mod} {:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_mod} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction integer_flush} {:instruction float_dup_items} {:instruction integer_mult} {:instruction float_yankdup})
Best program: (float_rot float_tan integer_shove tag_integer_540 float_mult float_add -17 float_min integer_mod 60.537048956669786 float_min float_mult float_mod float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_dec integer_flush float_dup_items integer_mult float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2868.7196225999865
Median total errors in population: 1184.1756
Error averages by case: (83.2510746 3.158 82.76734030000003 3.164 112.97003789999893 9.387 147.6225528 11.14 111.51470159999992 3.196 89.46793699999999 2.503 141.20253360000004 3.221 87.68079799999997 12.184 144.6045664 4.122 146.78481740000004 10.453 129.70843 12.089 156.1380973 3.457 107.88646340000001 13.13 80.66801920000002 3.213 145.8443819 3.304 70.51928739999981 6.092 74.21743330000079 10.155 70.20343129999999 2.226 82.52525219999995 3.202 121.9212967999986 9.183 95.44928139999999 4.202 137.84081060000003 3.193 137.867263 3.456 77.73846019999992 10.066 80.31135500000002 2.518)
Error minima by case: (1.6347 2 2.0638 2 0.1231 2 3.6988 8 11.2071 2 17.0 1 59.4163 1 0.3755 9 29.5349 2 9.0957 8 0.2634 7 14.1892 2 13.3672 10 6.0 1 45.1701 2 0.0178 2 1.2928 1 0.0 0 4.7603 2 0.0654 1 21.0 3 24.6851 2 14.1324 2 1.0858 2 8.95 1)
Average genome size in population (length): 34.249
Average program size in population (points): 35.249
Average percent parens in population: 0.030
Minimum age in population: 173.3312580351627
Maximum age in population: 178.0582757058064
Average age in population: 175.8643930571582
Median age in population: 175.8716210014316
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.748
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.748
Total error diversity:				 0.076
Error (vector) diversity:			 0.082
Behavioral diversity:				 0.083
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 99787514
--- Timings ---
Current time: 1529616442627 milliseconds
Total Time:         390.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.4 seconds, 45.2%
Fitness Testing:    171.1 seconds, 43.9%
Report:              42.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 57791.841099999976
Test mean error for best: 28.89592
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -19.0239631162
Correct output: 66.9966003687  | Program output: 53.9966003687 
Correct output: 12.5409282956  | Program output: 60.8769381136 
Correct output: 42.4367420274  | Program output: -42.5632579726
Correct output: 80.2675177914  | Program output: 35.2675177914 
Correct output: -60.7827432914 | Program output: -79.7827432914
Correct output: -87.4162880094 | Program output: -9.4162880094 
Correct output: 14.1647964189  | Program output: -5.8352035811 
Correct output: -126.4651108881 | Program output: -46.4651108881
Correct output: 48.781270316   | Program output: -37.218729684 
Correct output: 29.7365869138  | Program output: -37.2634130862
Correct output: -163.8107606538 | Program output: -72.8107606538
Correct output: -14.6246036823 | Program output: 29.3753963177 
Correct output: -72.1209990048 | Program output: -80.1209990048
Correct output: 114.230518731  | Program output: 32.230518731  
Correct output: 59.8458330136  | Program output: 60.8769381136 
Correct output: 64.1697788867  | Program output: 60.8769381136 
Correct output: 12.2386855703  | Program output: 14.2386855703 
Correct output: 25.2397222484  | Program output: 11.2397222484 
Correct output: 0.4588693899   | Program output: 60.8769381136 
Correct output: -119.8040488051 | Program output: -95.8040488051
Correct output: 93.7454585668  | Program output: 19.7454585668 
Correct output: -152.1323711502 | Program output: -81.1323711502
Correct output: 67.97455151    | Program output: 60.8769381136 
Correct output: -13.0499546478 | Program output: -0.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction in1} {:instruction tag_integer_469} {:instruction tag_float_479} {:instruction integer_yankdup} {:instruction float_rot} {:instruction float_tan} {:instruction float_div} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_pop} {:instruction float_rot} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan in1 tag_integer_469 tag_float_479 integer_yankdup float_rot float_tan float_div tag_integer_469 float_mult in1 57.87693811356892 float_min integer_dup_times integer_rot float_inc float_inc integer_pop float_rot 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_flush float_dup_items float_tan float_yankdup)
Errors: [15.0 2 13.0 2 48.336 9 85.0 10 45.0 2 19.0 2 78.0 2 20.0 12 80.0 2 86.0 11 67.0 12 91.0 3 44.0 13 8.0 2 82.0 3 1.0311 7 3.2928 9 2.0 1 14.0 2 60.4181 8 24.0 3 74.0 2 71.0 3 7.0976 9 13.0 2]
Total: 1184.1756
Mean: 23.683512
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2648.011319799985
Median total errors in population: 1184.1756
Error averages by case: (74.29659029999998 2.981 74.5991055 3.035 104.28668179999907 9.3 140.87937099999996 11.069 102.68547869999996 3.045 81.6164945 2.318 131.26814640000006 3.055 76.7908428 12.105 137.29170879999998 3.945 139.63325850000007 10.375 122.47292370000004 12.023 148.7553547 3.286 100.21296400000001 13.049 72.54868030000002 3.066 137.3007239 3.18 61.23587760000013 5.962 65.03380400000107 10.102 60.01517319999999 2.094 71.35043559999998 3.062 115.15528739999874 9.133 87.22000159999997 4.042 128.3625313 3.047 130.0619623 3.273 68.58171140000024 10.004 67.48321049999998 2.322)
Error minima by case: (0.7348 2 4.4596 2 6.0E-4 2 3.2575 8 2.1246 2 18.0 1 48.1965 1 0.6245 9 72.5207 2 8.4316 9 0.7366 8 80.0698 2 1.3754 8 7.0 1 11.867 2 0.0311 2 0.6327 1 0.0 0 3.7603 2 0.5411 1 10.058 3 8.6181 2 58.9798 2 4.4375 1 0.6978 1)
Average genome size in population (length): 33.584
Average program size in population (points): 34.584
Average percent parens in population: 0.030
Minimum age in population: 174.9658388573506
Maximum age in population: 179.5509880299128
Average age in population: 177.379684682067
Median age in population: 177.4514230864401
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.736
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.736
Total error diversity:				 0.068
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 100627489
--- Timings ---
Current time: 1529616446032 milliseconds
Total Time:         393.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.0 seconds, 45.2%
Fitness Testing:    172.5 seconds, 43.9%
Report:              42.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 57800.841099999976
Test mean error for best: 28.90042
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -20.0239631162
Correct output: 66.9966003687  | Program output: 52.9966003687 
Correct output: 12.5409282956  | Program output: 59.8769381136 
Correct output: 42.4367420274  | Program output: -43.5632579726
Correct output: 80.2675177914  | Program output: 34.2675177914 
Correct output: -60.7827432914 | Program output: -80.7827432914
Correct output: -87.4162880094 | Program output: -10.4162880094
Correct output: 14.1647964189  | Program output: -6.8352035811 
Correct output: -126.4651108881 | Program output: -47.4651108881
Correct output: 48.781270316   | Program output: -38.218729684 
Correct output: 29.7365869138  | Program output: -38.2634130862
Correct output: -163.8107606538 | Program output: -73.8107606538
Correct output: -14.6246036823 | Program output: 28.3753963177 
Correct output: -72.1209990048 | Program output: -81.1209990048
Correct output: 114.230518731  | Program output: 31.230518731  
Correct output: 59.8458330136  | Program output: 59.8769381136 
Correct output: 64.1697788867  | Program output: 59.8769381136 
Correct output: 12.2386855703  | Program output: 13.2386855703 
Correct output: 25.2397222484  | Program output: 10.2397222484 
Correct output: 0.4588693899   | Program output: 59.8769381136 
Correct output: -119.8040488051 | Program output: -96.8040488051
Correct output: 93.7454585668  | Program output: 18.7454585668 
Correct output: -152.1323711502 | Program output: -82.1323711502
Correct output: 67.97455151    | Program output: 59.8769381136 
Correct output: -13.0499546478 | Program output: -1.0499546478 
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction 60.537048956669786} {:instruction float_min} {:instruction float_mult} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_dup} {:instruction float_mult} {:instruction in1} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_dup_times} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_dec} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction float_yankdup})
Best program: (60.537048956669786 float_min float_mult float_rot float_tan integer_shove integer_dup float_mult in1 float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_dup_times tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_rot float_inc integer_dup_times print_float integer_yankdup integer_dec float_dup_items integer_stackdepth float_yankdup)
Errors: [16.0 2 14.0 2 47.336 9 86.0 11 46.0 2 20.0 1 77.0 2 21.0 12 79.0 3 87.0 10 68.0 12 90.0 2 43.0 13 9.0 2 83.0 2 0.0311 5 4.2928 10 1.0 1 15.0 2 59.4181 9 23.0 3 75.0 2 70.0 2 8.0976 10 12.0 1]
Total: 1184.1756
Mean: 23.683512
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2609.1423660999862
Median total errors in population: 1184.1756
Error averages by case: (72.3217405 3.01 72.35316450000002 3.064 102.34789359999911 9.261 137.65926069999995 11.05 101.34435539999998 3.069 79.9049209 2.369 130.58751599999997 3.082 76.1655844 12.087 134.86903190000007 3.989 136.53036450000008 10.355 119.45995070000005 12.01 147.12648279999996 3.339 98.5422135 13.038 70.86147530000004 3.11 135.79123780000003 3.213 59.83967100000013 5.987 63.65479620000119 10.035 59.86399069999999 2.144 71.48633889999998 3.101 113.11508519999862 9.111 85.51375999999996 4.072 127.04688369999997 3.073 127.95231510000008 3.324 67.21440270000022 9.942 68.38193009999999 2.373)
Error minima by case: (1.171 2 1.2685 2 2.9994 2 15.4402 9 10.1347 2 17.0 1 14.4163 1 1.3755 8 29.5349 2 4.3826 9 10.6914 8 14.1892 2 13.3754 9 6.0 1 27.2305 2 0.0311 2 1.2928 1 0.0 0 6.2397 2 0.27 1 21.0 3 9.7972 2 14.1324 2 1.492 1 5.05 1)
Average genome size in population (length): 33.562
Average program size in population (points): 34.562
Average percent parens in population: 0.031
Minimum age in population: 176.3764669214354
Maximum age in population: 180.9795350044893
Average age in population: 178.8572591892678
Median age in population: 178.8712694593175
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.741
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.741
Total error diversity:				 0.068
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 101466939
--- Timings ---
Current time: 1529616449406 milliseconds
Total Time:         396.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.4 seconds, 45.2%
Fitness Testing:    174.1 seconds, 43.9%
Report:              43.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 58290.10409999998
Test mean error for best: 29.14505
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -14.0239631162
Correct output: 66.9966003687  | Program output: 58.9966003687 
Correct output: 12.5409282956  | Program output: 62.8769381136 
Correct output: 42.4367420274  | Program output: -37.5632579726
Correct output: 80.2675177914  | Program output: 40.2675177914 
Correct output: -60.7827432914 | Program output: -74.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: -0.8352035811 
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -32.218729684 
Correct output: 29.7365869138  | Program output: -32.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -75.1209990048
Correct output: 114.230518731  | Program output: 37.230518731  
Correct output: 59.8458330136  | Program output: 62.8769381136 
Correct output: 64.1697788867  | Program output: 62.8769381136 
Correct output: 12.2386855703  | Program output: 19.2386855703 
Correct output: 25.2397222484  | Program output: 16.2397222484 
Correct output: 0.4588693899   | Program output: 62.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 24.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 62.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [10.0 1 8.0 2 50.336 8 80.0 12 40.0 1 14.0 2 83.0 2 15.0 12 85.0 3 81.0 11 62.0 12 96.0 2 49.0 12 3.0 1 77.0 3 3.0311 7 1.2928 9 7.0 1 9.0 2 62.4181 9 29.0 3 69.0 2 76.0 3 5.0976 9 18.0 12]
Total: 1174.1756
Mean: 23.483513
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2714.3654957999847
Median total errors in population: 1184.1756
Error averages by case: (77.46207009999999 2.983 76.00387690000001 2.971 107.17699469999928 9.317 141.57200030000004 11.067 105.32280309999999 3.006 83.16817539999998 2.311 135.6230665 3.061 81.87409880000001 12.124 138.7927428 3.942 141.63425180000002 10.371 124.37903720000003 12.036 150.1324543 3.288 102.53421659999997 13.084 74.06967720000002 3.061 139.88947840000006 3.138 63.564010400000136 5.963 67.27024240000121 10.087 64.15271919999999 2.052 76.55225319999997 3.024 116.98029999999869 9.116 88.68510529999998 4.04 131.9967633 3.009 131.57250980000006 3.281 70.85157200000035 9.999 74.4260761 2.348)
Error minima by case: (1.2001 1 1.0797 2 5.8382 2 16.4402 9 6.2441 1 7.2173 1 19.4163 1 11.1648 9 58.4651 2 10.0957 9 26.7366 7 88.0 2 13.6246 10 3.0 1 27.7189 2 0.0311 2 1.2928 1 0.0 0 9.0 2 0.0037 1 21.0 3 7.2338 2 68.0 2 2.0577 2 10.0 1)
Average genome size in population (length): 33.71
Average program size in population (points): 34.71
Average percent parens in population: 0.030
Minimum age in population: 177.3764669214354
Maximum age in population: 182.2066304770334
Average age in population: 180.2802512696963
Median age in population: 180.3221590194471
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.722
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.722
Total error diversity:				 0.05
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 102310139
--- Timings ---
Current time: 1529616452538 milliseconds
Total Time:         399.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.8 seconds, 45.2%
Fitness Testing:    175.5 seconds, 43.9%
Report:              43.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 58290.10409999998
Test mean error for best: 29.14505
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -14.0239631162
Correct output: 66.9966003687  | Program output: 58.9966003687 
Correct output: 12.5409282956  | Program output: 62.8769381136 
Correct output: 42.4367420274  | Program output: -37.5632579726
Correct output: 80.2675177914  | Program output: 40.2675177914 
Correct output: -60.7827432914 | Program output: -74.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: -0.8352035811 
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -32.218729684 
Correct output: 29.7365869138  | Program output: -32.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -75.1209990048
Correct output: 114.230518731  | Program output: 37.230518731  
Correct output: 59.8458330136  | Program output: 62.8769381136 
Correct output: 64.1697788867  | Program output: 62.8769381136 
Correct output: 12.2386855703  | Program output: 19.2386855703 
Correct output: 25.2397222484  | Program output: 16.2397222484 
Correct output: 0.4588693899   | Program output: 62.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 24.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 62.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_shove} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_shove -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [10.0 1 8.0 2 50.336 8 80.0 12 40.0 1 14.0 2 83.0 2 15.0 12 85.0 3 81.0 11 62.0 12 96.0 2 49.0 12 3.0 1 77.0 3 3.0311 7 1.2928 9 7.0 1 9.0 2 62.4181 9 29.0 3 69.0 2 76.0 3 5.0976 9 18.0 12]
Total: 1174.1756
Mean: 23.483513
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2720.5463017999846
Median total errors in population: 1184.1756
Error averages by case: (77.812944 2.976 76.98647989999999 3.019 107.48251169999915 9.29 141.6433367 11.123 106.16662990000002 3.03 83.68895819999997 2.319 135.074301 3.067 80.8396605 12.141 139.5412941 3.956 142.58018650000002 10.403 125.27011600000002 12.057 150.67160039999996 3.281 103.10635409999998 13.089 74.0872997 3.041 140.50261579999997 3.158 64.34452100000014 5.97 68.12850830000049 10.082 63.3792927 2.058 75.2812221 3.034 118.00481909999876 9.145 88.59574279999998 4.038 131.8699093 3.027 132.19002079999999 3.265 71.6807166999996 9.994 72.63826049999999 2.416)
Error minima by case: (2.2001 1 5.4596 2 5.2847 2 14.4367 10 18.7305 1 2.635 1 74.3849 1 6.5422 9 76.3849 2 10.0957 9 1.7366 8 87.3849 2 14.6246 9 3.0 1 52.6935 2 0.0311 2 1.2928 1 0.0 0 2.7603 2 0.0305 1 20.3849 3 32.2084 2 67.3849 2 2.0545 1 9.3849 1)
Average genome size in population (length): 33.506
Average program size in population (points): 34.506
Average percent parens in population: 0.031
Minimum age in population: 178.9437401326423
Maximum age in population: 183.8732150515075
Average age in population: 181.7738996903763
Median age in population: 181.8186274296659
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.062
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 103148589
--- Timings ---
Current time: 1529616456022 milliseconds
Total Time:         403.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.2 seconds, 45.2%
Fitness Testing:    177.1 seconds, 43.9%
Report:              43.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 58200.14919999998
Test mean error for best: 29.10007
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -13.0239631162
Correct output: 66.9966003687  | Program output: 59.9966003687 
Correct output: 12.5409282956  | Program output: 65.8769381136 
Correct output: 42.4367420274  | Program output: -36.5632579726
Correct output: 80.2675177914  | Program output: 41.2675177914 
Correct output: -60.7827432914 | Program output: -73.7827432914
Correct output: -87.4162880094 | Program output: -3.4162880094 
Correct output: 14.1647964189  | Program output: 0.1647964189  
Correct output: -126.4651108881 | Program output: -40.4651108881
Correct output: 48.781270316   | Program output: -31.218729684 
Correct output: 29.7365869138  | Program output: -31.2634130862
Correct output: -163.8107606538 | Program output: -66.8107606538
Correct output: -14.6246036823 | Program output: 35.3753963177 
Correct output: -72.1209990048 | Program output: -74.1209990048
Correct output: 114.230518731  | Program output: 38.230518731  
Correct output: 59.8458330136  | Program output: 65.8769381136 
Correct output: 64.1697788867  | Program output: 65.8769381136 
Correct output: 12.2386855703  | Program output: 20.2386855703 
Correct output: 25.2397222484  | Program output: 17.2397222484 
Correct output: 0.4588693899   | Program output: 65.8769381136 
Correct output: -119.8040488051 | Program output: -89.8040488051
Correct output: 93.7454585668  | Program output: 25.7454585668 
Correct output: -152.1323711502 | Program output: -75.1323711502
Correct output: 67.97455151    | Program output: 65.8769381136 
Correct output: -13.0499546478 | Program output: 5.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_tan} {:instruction float_min} {:instruction float_rot} {:instruction float_mod} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction integer_dup_times} {:instruction -30} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_rot float_tan float_min float_rot float_mod in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 integer_dup_times -30 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [9.0 2 7.0 2 53.336 9 79.0 12 39.0 2 13.0 2 84.0 2 14.0 2 86.0 3 80.0 11 61.0 12 97.0 2 50.0 13 2.0 1 76.0 3 6.0311 7 1.7072 9 8.0 2 8.0 2 65.4181 9 30.0 2 68.0 2 77.0 2 2.0976 9 19.0 12]
Total: 1169.5900000000001
Mean: 23.3918
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2707.723225799986
Median total errors in population: 1184.1756
Error averages by case: (77.27805449999998 2.919 75.55312930000001 2.997 106.23700429999901 9.179 141.5447402 11.09 104.6725452 2.965 83.84535479999998 2.364 134.53251339999997 3.037 80.08344319999999 12.059 139.97949190000003 3.96 142.39817320000003 10.37 126.13448190000001 12.003 151.13752100000008 3.285 101.97489230000001 12.976 74.16004820000003 3.006 139.5949356 3.167 63.760877900000146 5.991 67.23676880000113 9.98 62.12096880000001 2.061 73.35449129999998 3.01 117.67795989999833 9.077 89.18941679999999 4.029 130.2628333 3.009 132.70248220000005 3.323 70.87502219999998 9.892 72.8060756 2.861)
Error minima by case: (2.1445 1 4.4596 1 0.0704 1 16.4402 6 6.2675 1 4.7827 1 13.7009 1 1.3032 2 46.0181 2 10.0957 9 6.0019 8 82.3318 2 0.0015 7 2.0 1 40.2305 2 0.0311 2 0.2928 1 0.0 0 3.6093 1 0.146 1 12.32 2 19.7455 1 61.2418 2 2.0976 1 7.8882 1)
Average genome size in population (length): 34.203
Average program size in population (points): 35.203
Average percent parens in population: 0.030
Minimum age in population: 180.5076055932399
Maximum age in population: 185.0152312955144
Average age in population: 183.235905554855
Median age in population: 183.2549860878276
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.067
Error (vector) diversity:			 0.071
Behavioral diversity:				 0.071
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 104004139
--- Timings ---
Current time: 1529616459415 milliseconds
Total Time:         406.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.6 seconds, 45.1%
Fitness Testing:    178.7 seconds, 43.9%
Report:              44.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 58509.58049999997
Test mean error for best: 29.25479
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -12.0239631162
Correct output: 66.9966003687  | Program output: 60.9966003687 
Correct output: 12.5409282956  | Program output: 62.8769381136 
Correct output: 42.4367420274  | Program output: -35.5632579726
Correct output: 80.2675177914  | Program output: 42.2675177914 
Correct output: -60.7827432914 | Program output: -72.7827432914
Correct output: -87.4162880094 | Program output: -2.4162880094 
Correct output: 14.1647964189  | Program output: 1.1647964189  
Correct output: -126.4651108881 | Program output: -39.4651108881
Correct output: 48.781270316   | Program output: -30.218729684 
Correct output: 29.7365869138  | Program output: -30.2634130862
Correct output: -163.8107606538 | Program output: -65.8107606538
Correct output: -14.6246036823 | Program output: 36.3753963177 
Correct output: -72.1209990048 | Program output: -73.1209990048
Correct output: 114.230518731  | Program output: 39.230518731  
Correct output: 59.8458330136  | Program output: 62.8769381136 
Correct output: 64.1697788867  | Program output: 62.8769381136 
Correct output: 12.2386855703  | Program output: 21.2386855703 
Correct output: 25.2397222484  | Program output: 18.2397222484 
Correct output: 0.4588693899   | Program output: 62.8769381136 
Correct output: -119.8040488051 | Program output: -88.8040488051
Correct output: 93.7454585668  | Program output: 26.7454585668 
Correct output: -152.1323711502 | Program output: -74.1323711502
Correct output: 67.97455151    | Program output: 62.8769381136 
Correct output: -13.0499546478 | Program output: 6.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [8.0 2 6.0 1 50.336 8 78.0 12 38.0 2 12.0 2 85.0 2 13.0 1 87.0 3 79.0 11 60.0 12 98.0 2 51.0 13 1.0 1 75.0 3 3.0311 7 1.2928 9 9.0 2 7.0 2 62.4181 9 31.0 3 67.0 2 78.0 3 5.0976 9 20.0 12]
Total: 1158.1756
Mean: 23.163511
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2436.0080657999847
Median total errors in population: 1184.1756
Error averages by case: (65.52454739999999 2.757 63.944336099999994 2.968 95.7189569999994 9.078 129.43417110000001 11.283 93.25017729999996 2.854 71.10637260000001 2.417 125.59971540000002 2.959 68.68333800000002 11.97 129.82973690000003 3.853 130.39690000000004 10.571 113.86927500000003 12.039 141.2400348 3.184 93.01658869999996 12.873 61.4788817 2.726 128.0407609 3.303 53.42819740000012 6.297 55.44800860000088 9.837 54.2145701 2.035 64.08552269999998 2.99 106.0205665999989 9.112 78.71881689999998 3.919 119.87947699999998 2.977 122.58997519999997 3.366 58.97410250000048 9.764 61.6390359 4.744)
Error minima by case: (1.024 1 1.4597 1 0.1231 2 9.4367 9 11.7305 1 4.7827 1 20.1231 1 9.4959 1 22.1231 2 4.7296 9 0.2634 8 14.1892 2 0.0303 7 1.0 1 28.0484 2 0.0311 1 0.2928 1 0.0 0 4.7603 1 0.614 1 10.058 2 25.2084 1 13.1231 2 0.5625 1 1.6049 1)
Average genome size in population (length): 36.048
Average program size in population (points): 37.048
Average percent parens in population: 0.029
Minimum age in population: 182.0356006126628
Maximum age in population: 186.5861962030058
Average age in population: 184.6826801739647
Median age in population: 184.74014922874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.691
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.691
Total error diversity:				 0.086
Error (vector) diversity:			 0.095
Behavioral diversity:				 0.095
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 104905764
--- Timings ---
Current time: 1529616462628 milliseconds
Total Time:         409.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.0 seconds, 45.1%
Fitness Testing:    180.1 seconds, 43.9%
Report:              44.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 58606.392699999975
Test mean error for best: 29.30320
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -11.0239631162
Correct output: 66.9966003687  | Program output: 61.9966003687 
Correct output: 12.5409282956  | Program output: 62.8769381136 
Correct output: 42.4367420274  | Program output: -34.5632579726
Correct output: 80.2675177914  | Program output: 43.2675177914 
Correct output: -60.7827432914 | Program output: -71.7827432914
Correct output: -87.4162880094 | Program output: -1.4162880094 
Correct output: 14.1647964189  | Program output: 2.1647964189  
Correct output: -126.4651108881 | Program output: -38.4651108881
Correct output: 48.781270316   | Program output: -29.218729684 
Correct output: 29.7365869138  | Program output: -29.2634130862
Correct output: -163.8107606538 | Program output: -64.8107606538
Correct output: -14.6246036823 | Program output: 37.3753963177 
Correct output: -72.1209990048 | Program output: -72.1209990048
Correct output: 114.230518731  | Program output: 40.230518731  
Correct output: 59.8458330136  | Program output: 62.8769381136 
Correct output: 64.1697788867  | Program output: 62.8769381136 
Correct output: 12.2386855703  | Program output: 22.2386855703 
Correct output: 25.2397222484  | Program output: 19.2397222484 
Correct output: 0.4588693899   | Program output: 62.8769381136 
Correct output: -119.8040488051 | Program output: -87.8040488051
Correct output: 93.7454585668  | Program output: 27.7454585668 
Correct output: -152.1323711502 | Program output: -73.1323711502
Correct output: 67.97455151    | Program output: 62.8769381136 
Correct output: -13.0499546478 | Program output: 7.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [7.0 2 5.0 1 50.336 8 77.0 12 37.0 2 11.0 2 86.0 2 12.0 2 88.0 3 78.0 11 59.0 10 99.0 2 52.0 13 0.0 0 74.0 3 3.0311 7 1.2928 9 10.0 1 6.0 2 62.4181 9 32.0 3 66.0 2 79.0 3 5.0976 9 21.0 12]
Total: 1151.1756
Mean: 23.023512
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2517.6678314999845
Median total errors in population: 1174.1756
Error averages by case: (68.86230170000002 2.364 61.99823129999999 2.873 100.77564679999935 8.641 133.28039150000004 11.878 91.48280910000001 2.461 74.16790669999997 2.787 133.55653519999998 2.858 70.42763839999999 11.092 138.89168680000003 3.838 134.1696591 11.02 116.77443509999999 12.076 149.8825487 3.046 96.94502839999997 12.549 64.78748159999999 2.164 126.23543139999997 3.669 56.11360860000014 7.102 55.63752460000088 9.318 56.5695163 2.095 60.52339539999999 2.874 109.9481714999987 9.073 87.4495282 3.747 117.60533570000001 2.876 131.25581910000002 3.659 58.95476250000058 9.248 67.8224378 10.242)
Error minima by case: (3.0304 1 0.5404 1 3.2794 1 8.4367 9 7.7325 1 10.0 1 70.5837 1 4.0396 1 35.5349 2 10.0957 9 0.2634 8 20.1892 1 14.8057 9 0.0 0 19.0687 2 0.0311 1 0.2928 1 0.0 0 0.7603 1 0.4138 1 11.32 2 1.4163 1 8.1324 2 0.4375 1 1.0736 1)
Average genome size in population (length): 41.741
Average program size in population (points): 42.741
Average percent parens in population: 0.024
Minimum age in population: 183.3640154980265
Maximum age in population: 188.0574038245123
Average age in population: 186.0799721108449
Median age in population: 186.1297058088263
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 173
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 173
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.094
Error (vector) diversity:			 0.107
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 105949714
--- Timings ---
Current time: 1529616466002 milliseconds
Total Time:         413.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.3 seconds, 45.1%
Fitness Testing:    181.7 seconds, 44.0%
Report:              45.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 58606.392699999975
Test mean error for best: 29.30320
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -11.0239631162
Correct output: 66.9966003687  | Program output: 61.9966003687 
Correct output: 12.5409282956  | Program output: 62.8769381136 
Correct output: 42.4367420274  | Program output: -34.5632579726
Correct output: 80.2675177914  | Program output: 43.2675177914 
Correct output: -60.7827432914 | Program output: -71.7827432914
Correct output: -87.4162880094 | Program output: -1.4162880094 
Correct output: 14.1647964189  | Program output: 2.1647964189  
Correct output: -126.4651108881 | Program output: -38.4651108881
Correct output: 48.781270316   | Program output: -29.218729684 
Correct output: 29.7365869138  | Program output: -29.2634130862
Correct output: -163.8107606538 | Program output: -64.8107606538
Correct output: -14.6246036823 | Program output: 37.3753963177 
Correct output: -72.1209990048 | Program output: -72.1209990048
Correct output: 114.230518731  | Program output: 40.230518731  
Correct output: 59.8458330136  | Program output: 62.8769381136 
Correct output: 64.1697788867  | Program output: 62.8769381136 
Correct output: 12.2386855703  | Program output: 22.2386855703 
Correct output: 25.2397222484  | Program output: 19.2397222484 
Correct output: 0.4588693899   | Program output: 62.8769381136 
Correct output: -119.8040488051 | Program output: -87.8040488051
Correct output: 93.7454585668  | Program output: 27.7454585668 
Correct output: -152.1323711502 | Program output: -73.1323711502
Correct output: 67.97455151    | Program output: 62.8769381136 
Correct output: -13.0499546478 | Program output: 7.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [7.0 2 5.0 1 50.336 8 77.0 12 37.0 2 11.0 2 86.0 2 12.0 2 88.0 3 78.0 11 59.0 10 99.0 2 52.0 13 0.0 0 74.0 3 3.0311 7 1.2928 9 10.0 1 6.0 2 62.4181 9 32.0 3 66.0 2 79.0 3 5.0976 9 21.0 12]
Total: 1151.1756
Mean: 23.023512
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2457.1435500999855
Median total errors in population: 1174.1756
Error averages by case: (65.5102813 2.534 58.392378399999984 2.827 97.45993379999969 8.716 128.8979438 12.073 87.81811009999998 2.607 70.8972275 2.967 132.02939990000002 2.903 66.0278303 7.734 137.40113260000004 3.912 129.95846169999996 11.143 112.36544799999997 12.013 149.59372059999998 3.038 95.23839730000002 12.676 60.3351841 2.007 122.79386569999997 3.766 56.11126200000013 7.429 53.058241500000314 9.211 57.47483110000001 2.395 58.93003619999998 2.894 107.51095399999905 9.121 87.1437009 3.605 114.69559069999998 2.906 130.0312422 3.578 56.7276143000005 9.145 67.5297621 12.011)
Error minima by case: (0.024 1 1.1197 1 0.5012 1 19.972 8 7.7325 1 8.0 1 57.4163 1 3.566 1 35.5349 2 13.6274 9 3.1231 8 20.1892 1 10.6246 10 0.0 0 19.4228 2 0.0311 2 0.2928 1 0.5097 1 0.7603 1 0.4138 2 21.0 2 25.2084 1 8.1324 2 0.0976 1 8.1833 1)
Average genome size in population (length): 45.663
Average program size in population (points): 46.663
Average percent parens in population: 0.022
Minimum age in population: 185.0843951289764
Maximum age in population: 189.4686025885863
Average age in population: 187.5734692253891
Median age in population: 187.6360409313559
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.593
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.127
Error (vector) diversity:			 0.138
Behavioral diversity:				 0.138
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 107091614
--- Timings ---
Current time: 1529616469480 milliseconds
Total Time:         416.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       187.8 seconds, 45.1%
Fitness Testing:    183.3 seconds, 44.0%
Report:              45.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2802.8060439999867
Median total errors in population: 1162.1756
Error averages by case: (81.64220410000001 3.119 71.3304105 2.932 111.15141889999929 8.813 143.60119670000003 12.085 100.0107677 3.121 85.3849969 3.123 147.95773519999997 3.216 78.031743 4.016 154.25147899999996 4.145 144.6250141 11.122 127.89050170000002 11.859 167.0910197 3.238 109.93545069999998 13.005 77.45732890000001 2.183 134.3916933 3.907 69.2854466999998 7.483 67.18088360000033 9.176 66.5366035 2.879 65.0558734 3.027 121.69085799999856 9.113 104.3442938 3.821 125.12257069999998 3.122 147.01074670000003 3.736 69.73267270000022 9.137 78.72213449999998 11.993)
Error minima by case: (1.976 1 0.8803 1 0.1231 1 17.5724 6 5.7325 1 7.0 1 28.1231 1 4.0338 1 30.1231 2 11.7558 8 4.8722 7 20.1892 1 5.8769 8 0.0 0 42.6935 2 0.0311 1 0.2928 1 1.0 1 0.2397 1 0.1281 1 14.058 2 22.2084 1 6.1324 2 0.0976 1 5.2504 1)
Average genome size in population (length): 50.263
Average program size in population (points): 51.263
Average percent parens in population: 0.020
Minimum age in population: 186.574150982471
Maximum age in population: 190.92679938342
Average age in population: 189.1633819539121
Median age in population: 189.2110287551209
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.636
Total error diversity:				 0.148
Error (vector) diversity:			 0.159
Behavioral diversity:				 0.161
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 108348664
--- Timings ---
Current time: 1529616473339 milliseconds
Total Time:         420.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.3 seconds, 45.0%
Fitness Testing:    185.3 seconds, 44.0%
Report:              45.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2948.7012982999877
Median total errors in population: 1158.1756
Error averages by case: (85.2631282 3.072 77.37125270000008 3.437 119.3086090999988 8.697 146.92486759999997 12.11 106.05907359999999 3.144 89.03545290000001 2.955 153.18597310000004 3.324 81.26167569999998 3.843 158.9834081 4.112 147.9040392 11.022 130.89669429999998 11.542 171.63109970000002 3.069 117.87702489999998 13.045 79.9877097 2.044 140.2195067 3.74 78.17807329999941 7.528 74.85238050000049 9.272 75.85971370000003 2.75 73.30295879999998 2.871 128.5887178999984 9.201 108.85444179999999 4.059 131.66388049999998 3.104 151.6004924 3.849 77.44797389999988 9.168 89.42314999999999 12.062)
Error minima by case: (1.0 1 1.0 1 0.5702 1 19.1003 8 5.7325 1 3.0 1 32.4163 1 1.0338 1 37.5349 2 12.7558 9 16.6056 8 22.1892 1 5.6246 10 0.0 0 18.8856 2 0.0311 1 0.2928 1 0.1077 1 1.2397 1 0.2398 1 21.0 2 1.5995 1 6.1324 2 0.0976 1 4.05 1)
Average genome size in population (length): 53.82
Average program size in population (points): 54.82
Average percent parens in population: 0.019
Minimum age in population: 188.2519526528472
Maximum age in population: 192.6423104201523
Average age in population: 190.7036585667509
Median age in population: 190.7707278200851
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 39
Genome diversity (% unique Plush genomes):	 0.673
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 39
Syntactic diversity (% unique Push programs):	 0.673
Total error diversity:				 0.147
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.16
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 109694639
--- Timings ---
Current time: 1529616476910 milliseconds
Total Time:         424.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.7 seconds, 45.0%
Fitness Testing:    187.0 seconds, 44.1%
Report:              46.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2679.0752013999913
Median total errors in population: 1153.1756
Error averages by case: (72.2337366 2.869 67.55896740000004 3.129 108.64186049999913 8.592 137.58331310000003 12.092 96.67089959999997 2.956 78.34531190000001 2.721 141.25898639999997 3.228 68.9712512 3.771 149.06379700000005 3.901 138.4955502 10.988 121.1298988 10.907 159.83175830000002 2.827 109.10954809999998 13.046 69.14382219999999 1.54 131.160135 3.559 64.90836740000016 7.381 64.37315070000045 9.177 68.3783499 2.308 64.59961709999999 2.668 119.83386209999883 9.123 97.95799449999997 3.863 122.09994859999998 2.903 141.32956450000003 3.65 64.12152440000042 9.115 73.88498590000002 12.075)
Error minima by case: (1.0 1 0.0 0 0.4099 1 16.5633 9 0.2675 1 4.7827 1 1.5236 1 2.7856 1 38.5349 2 10.2187 10 19.83 9 23.1892 1 3.6246 9 0.0 0 36.6935 2 0.0311 1 0.2928 2 0.0 0 0.0 0 0.1281 1 21.0 2 16.2084 1 0.1324 2 0.0976 1 1.9525 1)
Average genome size in population (length): 52.406
Average program size in population (points): 53.406
Average percent parens in population: 0.019
Minimum age in population: 189.6956075120863
Maximum age in population: 193.9784619290768
Average age in population: 192.1336085400003
Median age in population: 192.1803531351752
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 73
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 73
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.133
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 111005464
--- Timings ---
Current time: 1529616480895 milliseconds
Total Time:         428.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.3 seconds, 44.9%
Fitness Testing:    188.8 seconds, 44.1%
Report:              46.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 65.91543778980733 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2700.8578756999896
Median total errors in population: 1151.1756
Error averages by case: (72.09474850000001 3.029 68.63551280000006 2.592 109.28786179999884 8.667 136.31291540000007 12.041 97.2344984 3.176 79.77476199999992 2.899 142.9470257 3.525 69.5785448 3.979 150.53781039999996 4.073 137.31809719999995 10.954 120.20010909999996 10.827 162.0002208 3.017 108.4087366 12.975 71.12527779999999 1.743 131.43295859999995 3.731 67.18023449999997 7.417 65.45898540000081 9.126 68.2557382 2.474 65.25250849999996 2.82 118.3730983999985 9.041 100.38534309999999 4.057 121.351061 3.115 143.65873219999997 3.808 68.44991950000033 9.097 75.493175 11.927)
Error minima by case: (0.0 0 1.8803 1 0.3636 1 13.4073 8 8.7305 1 4.0 1 0.9093 1 0.0338 1 38.1395 2 8.9056 8 1.7366 6 75.4852 1 5.6198 8 0.0 0 17.1231 2 0.0311 1 0.075 1 0.0 0 1.0 1 0.614 1 21.0 2 9.1231 1 63.8068 2 0.0976 1 1.9525 1)
Average genome size in population (length): 51.062
Average program size in population (points): 52.062
Average percent parens in population: 0.019
Minimum age in population: 191.3484759329928
Maximum age in population: 195.5860944866003
Average age in population: 193.6497688015598
Median age in population: 193.6812999736274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 71
Genome diversity (% unique Plush genomes):	 0.666
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 71
Syntactic diversity (% unique Push programs):	 0.666
Total error diversity:				 0.144
Error (vector) diversity:			 0.156
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 112282489
--- Timings ---
Current time: 1529616484625 milliseconds
Total Time:         431.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.8 seconds, 44.9%
Fitness Testing:    190.6 seconds, 44.1%
Report:              47.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_dup} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_dup integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2431.1609216999896
Median total errors in population: 1148.5900000000001
Error averages by case: (62.340859399999985 2.794 54.89165490000001 2.116 98.0990205999992 8.95 128.5590456 12.146 84.18327009999997 2.855 68.75225080000001 2.275 133.4036729 3.264 62.17159759999998 3.701 141.4686864 3.824 129.41720420000001 10.636 111.77167030000003 11.149 152.42041800000004 2.364 97.96895539999996 13.103 60.253812399999994 1.771 119.10905950000003 3.105 54.57884140000014 7.277 51.67360540000036 8.984 57.62403319999999 2.474 53.50533669999998 2.182 109.24448299999878 8.958 89.72227119999998 3.8 110.29960939999997 2.789 133.78268800000006 3.227 53.339606600000565 9.057 67.75926869999998 12.019)
Error minima by case: (1.0 1 0.0 0 0.4298 1 20.1003 6 7.7305 1 5.0 1 49.1186 1 0.7856 1 77.0 2 13.7558 8 3.463 8 88.0 1 15.3754 9 0.0 0 18.463 2 0.0311 1 0.2419 1 0.0 0 0.0 0 2.1664 1 21.0 2 10.463 1 68.0 2 0.0976 1 3.9525 1)
Average genome size in population (length): 52.893
Average program size in population (points): 53.893
Average percent parens in population: 0.019
Minimum age in population: 192.6874917792503
Maximum age in population: 197.0462481292137
Average age in population: 195.3110604868857
Median age in population: 195.3521868105314
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.633
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.131
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 113604914
--- Timings ---
Current time: 1529616488259 milliseconds
Total Time:         435.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.2 seconds, 44.8%
Fitness Testing:    192.5 seconds, 44.2%
Report:              47.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_pop} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add integer_pop float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2620.0053400999877
Median total errors in population: 1148.1756
Error averages by case: (68.8589207 2.885 63.83157770000001 2.227 106.43931459999905 9.115 132.9464249 12.135 93.4254187 2.937 73.9446884 2.223 141.36593949999997 3.332 69.4324262 3.645 146.39346070000002 3.928 133.90649230000002 10.468 116.52697639999998 11.26 157.36878769999998 2.298 107.02636519999997 13.096 65.7943618 2.002 127.91856369999998 3.085 63.54369320000015 7.347 60.63854200000108 9.117 68.25586279999999 2.774 63.831224699999986 2.188 117.2964140999986 9.101 95.2177702 3.903 120.01347419999999 2.922 138.86978410000003 3.173 63.68286540000057 9.072 77.22999089999998 12.013)
Error minima by case: (0.0 0 0.0 0 1.5409 1 13.4367 9 3.7325 1 4.0 1 6.9158 1 0.0338 1 39.5349 2 13.7558 9 0.7366 8 24.1892 1 12.3754 9 0.0 0 43.7695 2 0.0311 1 0.0459 1 0.2919 1 1.0 1 0.8276 2 21.0 2 23.8685 1 4.1324 2 0.0976 1 10.0 1)
Average genome size in population (length): 52.65
Average program size in population (points): 53.65
Average percent parens in population: 0.019
Minimum age in population: 193.8360668501563
Maximum age in population: 198.7187630854677
Average age in population: 196.823231286772
Median age in population: 196.877460982884
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 102
Genome diversity (% unique Plush genomes):	 0.618
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 102
Syntactic diversity (% unique Push programs):	 0.618
Total error diversity:				 0.105
Error (vector) diversity:			 0.113
Behavioral diversity:				 0.115
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 114921414
--- Timings ---
Current time: 1529616491931 milliseconds
Total Time:         439.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.7 seconds, 44.8%
Fitness Testing:    194.3 seconds, 44.2%
Report:              48.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_dup} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_mod} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_dup integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_mod -30 28 float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2864.5767423999887
Median total errors in population: 1148.1756
Error averages by case: (79.09675220000003 3.09 74.0006861 2.48 115.968113699999 9.233 142.06506370000005 12.145 102.94832570000001 3.172 85.21288319999998 2.441 150.53312009999996 3.625 76.436169 3.9 156.85423440000005 4.125 143.0247899 10.497 125.9333604 11.277 167.9986326 2.526 116.05714549999999 13.109 77.96626690000001 2.223 136.96164240000002 3.274 73.71977279999966 7.44 70.94215950000057 9.263 76.83702070000001 2.952 73.38962849999997 2.359 125.70567499999865 9.187 107.34219030000001 4.091 128.31425560000002 3.107 149.7933597 3.384 73.98785050000008 9.155 83.38764399999995 12.045)
Error minima by case: (0.0 0 0.4596 1 0.4298 1 8.4367 8 7.7305 1 4.0 1 35.4163 1 2.7208 1 74.4651 2 11.0957 8 1.7366 8 88.0 1 4.3754 9 0.0 0 24.0 2 0.0311 2 0.2928 1 0.0 0 1.0 1 0.5401 1 21.0 2 21.2084 1 68.0 2 0.0976 1 0.9525 1)
Average genome size in population (length): 52.692
Average program size in population (points): 53.692
Average percent parens in population: 0.019
Minimum age in population: 194.8360668501563
Maximum age in population: 200.4222141235705
Average age in population: 198.2904546838037
Median age in population: 198.3378217466457
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.675
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.675
Total error diversity:				 0.12
Error (vector) diversity:			 0.127
Behavioral diversity:				 0.128
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 116239014
--- Timings ---
Current time: 1529616495663 milliseconds
Total Time:         442.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       198.2 seconds, 44.7%
Fitness Testing:    196.0 seconds, 44.3%
Report:              48.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction integer_pop} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction tagged_753} {:instruction float_yankdup})
Best program: (float_mult in1 integer_pop float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items tagged_753 float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2865.2681019999886
Median total errors in population: 1148.1756
Error averages by case: (77.14212789999999 3.049 75.58162789999996 2.528 116.38215579999908 9.251 140.0803683 12.206 104.21616310000002 3.204 82.2206843 2.421 150.59115849999995 3.698 79.94015259999998 3.971 153.96964120000004 4.096 141.0803824 10.553 124.03103460000001 11.393 165.13846720000004 2.528 117.2722566 13.168 74.34854269999998 2.25 138.45130449999996 3.314 75.16083649999905 7.524 72.26525560000022 9.275 79.346149 2.984 75.34180449999998 2.409 127.28373969999868 9.241 103.51918010000001 4.092 130.52809580000002 3.164 146.8091911 3.396 75.12614839999951 9.165 88.5136337 12.048)
Error minima by case: (0.1846 1 0.0 0 0.1231 1 8.6646 10 8.7305 1 6.0 1 8.0875 1 2.4959 1 30.9613 2 2.3201 8 0.1231 9 68.307 1 2.6246 8 0.0 0 15.1231 2 0.0311 1 0.12 1 0.0778 1 1.0 1 0.84 1 21.0 2 2.7827 1 56.6286 2 0.0976 1 1.05 1)
Average genome size in population (length): 52.73
Average program size in population (points): 53.73
Average percent parens in population: 0.019
Minimum age in population: 196.0783016462551
Maximum age in population: 201.6971337102499
Average age in population: 199.6897023956193
Median age in population: 199.7387154378024
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 64
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 64
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.126
Error (vector) diversity:			 0.134
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 117557589
--- Timings ---
Current time: 1529616499364 milliseconds
Total Time:         446.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.6 seconds, 44.7%
Fitness Testing:    197.8 seconds, 44.3%
Report:              49.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction integer_div} {:instruction in1} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -29} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_dup integer_div in1 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 integer_dup_times float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times float_inc integer_dup_times -29 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3003.737279099988
Median total errors in population: 1148.1756
Error averages by case: (82.54526670000001 3.088 80.5749773 2.478 122.65394899999886 9.268 147.6965736 12.256 109.37465599999999 3.139 90.185572 2.493 153.0232396 3.704 81.8603091 3.939 161.23050089999995 4.148 148.53148530000004 10.637 131.46985690000002 11.394 172.12372959999996 2.582 123.1147405 13.213 82.2907309 2.237 143.48574889999998 3.309 79.9015041999993 7.489 77.49499570000036 9.288 83.59573209999999 2.921 79.14864520000002 2.39 133.68370499999872 9.249 111.15497080000004 4.12 134.5088904 3.128 153.9211222 3.427 79.43499949999973 9.188 89.5773777 12.069)
Error minima by case: (0.0 0 0.0 0 0.4298 1 18.2004 8 3.7325 1 3.0 1 15.2473 1 0.4137 1 31.1231 2 11.8559 9 18.0853 9 24.1892 1 4.8769 8 0.0 0 41.6935 2 0.0311 1 0.2591 1 0.0 0 1.0 1 0.1281 1 21.0 2 21.2084 1 4.1324 2 0.0976 1 7.0828 1)
Average genome size in population (length): 52.786
Average program size in population (points): 53.786
Average percent parens in population: 0.019
Minimum age in population: 198.0089982940929
Maximum age in population: 203.2233555294759
Average age in population: 201.1543106070378
Median age in population: 201.2026021530716
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 38
Genome diversity (% unique Plush genomes):	 0.76
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.76
Total error diversity:				 0.126
Error (vector) diversity:			 0.136
Behavioral diversity:				 0.136
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 118877664
--- Timings ---
Current time: 1529616503006 milliseconds
Total Time:         450.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       201.1 seconds, 44.7%
Fitness Testing:    199.6 seconds, 44.3%
Report:              49.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2628.2209615999886
Median total errors in population: 1148.1756
Error averages by case: (68.6709979 3.012 64.8764275 2.419 106.79729989999913 9.131 132.49906130000002 12.135 94.02502940000004 3.102 74.88068109999998 2.366 141.0281035 3.499 68.25640809999999 3.899 147.0878496 4.052 133.50438680000002 10.48 116.1540562 11.282 158.402352 2.436 106.5618176 13.07 67.06305250000003 2.146 128.45147509999995 3.207 64.41936040000016 7.384 61.60311890000092 9.17 67.74438029999999 2.888 63.59702429999996 2.34 116.9510941999987 9.126 96.63475570000001 4.037 119.72627620000006 3.093 139.97500530000002 3.319 64.5906768000005 9.059 76.04627099999999 12.022)
Error minima by case: (0.0 0 0.0 0 0.4298 1 0.0476 8 1.7325 1 3.0 1 20.463 1 1.0338 1 22.463 2 6.2969 9 4.2634 7 26.1892 1 3.6246 7 0.0 0 30.6551 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.4138 1 21.0 2 10.17 1 2.1324 2 0.0976 1 2.05 1)
Average genome size in population (length): 52.828
Average program size in population (points): 53.828
Average percent parens in population: 0.019
Minimum age in population: 199.8397029588345
Maximum age in population: 204.9585603536176
Average age in population: 202.5448128326963
Median age in population: 202.5864201312416
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 40
Genome diversity (% unique Plush genomes):	 0.747
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.747
Total error diversity:				 0.13
Error (vector) diversity:			 0.139
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 120198964
--- Timings ---
Current time: 1529616506728 milliseconds
Total Time:         454.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.6 seconds, 44.6%
Fitness Testing:    201.4 seconds, 44.4%
Report:              50.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction float_mult} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_frominteger} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult float_mult float_mult in1 60.537048956669786 float_max integer_stackdepth float_max integer_stackdepth 65.91543778980733 integer_sub integer_shove tag_integer_469 float_mult float_frominteger 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2551.0059383999883
Median total errors in population: 1148.1756
Error averages by case: (65.08608030000002 2.991 61.148042200000035 2.422 104.4176888999994 9.07 130.73731320000002 12.136 90.3567555 3.107 72.0966695 2.367 137.69792029999996 3.59 65.62894400000002 3.916 144.481095 4.053 130.62708499999997 10.512 113.3915698 11.287 155.65623499999998 2.46 104.3654861 13.107 64.56115220000002 2.153 124.82409309999994 3.25 61.08127140000014 7.335 58.33228280000062 9.106 63.6579912 2.853 58.762169999999976 2.311 114.60472529999889 9.083 93.94086180000001 4.03 115.4224262 3.034 137.2145154 3.314 61.38257770000049 9.039 73.05598649999999 11.949)
Error minima by case: (0.0 0 0.0 0 0.4591 1 8.109 9 3.1347 1 4.0 1 20.61 1 0.5863 1 33.1231 2 1.7645 9 16.2823 8 23.1892 1 2.8769 8 0.0 0 20.4603 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.1281 1 21.0 2 9.1086 1 5.1324 2 0.0976 1 6.0025 1)
Average genome size in population (length): 52.839
Average program size in population (points): 53.839
Average percent parens in population: 0.019
Minimum age in population: 201.5363286285182
Maximum age in population: 205.9506577587212
Average age in population: 204.0251453953659
Median age in population: 204.0562132440776
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.751
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.751
Total error diversity:				 0.13
Error (vector) diversity:			 0.135
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 121520664
--- Timings ---
Current time: 1529616510620 milliseconds
Total Time:         457.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       204.2 seconds, 44.6%
Fitness Testing:    203.3 seconds, 44.4%
Report:              50.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_mult} {:instruction in1} {:instruction 61.035096537991876} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_mult} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_dup} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_dup})
Best program: (float_dup float_mult in1 61.035096537991876 float_max integer_stackdepth 51 float_mult in1 60.537048956669786 float_max integer_mult 51 integer_sub integer_shove tag_integer_469 integer_dup in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan integer_dup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2500.769101399988
Median total errors in population: 1148.1756
Error averages by case: (63.60977890000001 2.936 59.27562870000002 2.265 101.72552779999955 9.147 129.00018700000004 12.13 88.4294133 2.996 70.7854146 2.267 134.85176909999998 3.416 62.76470400000001 3.811 143.40202690000004 3.938 129.9434697 10.505 112.6192258 11.276 154.59425119999997 2.344 102.36432479999998 13.091 62.81538580000002 2.053 123.1616948 3.134 59.07497840000015 7.314 56.19042910000051 9.144 60.93284999999999 2.778 55.98668829999998 2.208 112.85928359999905 9.105 92.40670909999999 3.91 112.96826710000002 2.941 136.14362130000004 3.201 59.201944700000475 9.104 68.70252740000001 11.945)
Error minima by case: (1.0 1 0.0 0 0.1231 1 18.1231 9 3.7325 1 5.0 1 10.2426 1 1.9366 1 39.5349 2 14.2187 8 0.1231 7 24.1892 1 7.9884 7 0.0 0 17.1231 2 0.0311 1 0.1054 1 0.0 0 0.0 0 0.4061 1 21.0 2 9.1231 1 4.1324 2 0.0976 1 2.6722 1)
Average genome size in population (length): 52.974
Average program size in population (points): 53.974
Average percent parens in population: 0.019
Minimum age in population: 202.81725920289
Maximum age in population: 207.5815103988747
Average age in population: 205.433883498418
Median age in population: 205.4760563724207
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.761
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.761
Total error diversity:				 0.13
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 122845689
--- Timings ---
Current time: 1529616514222 milliseconds
Total Time:         461.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.5 seconds, 44.5%
Fitness Testing:    205.1 seconds, 44.4%
Report:              50.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_mod} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 integer_mod in1 57.87693811356892 in1 57.87693811356892 float_min integer_dup_times integer_rot float_inc integer_dup_times -30 28 float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_yankdup float_inc integer_dup_times float_inc integer_yankdup -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2767.5246941999885
Median total errors in population: 1148.1756
Error averages by case: (73.918182 3.022 69.85673560000004 2.37 112.07991509999898 9.164 138.9636798 12.119 98.98125559999997 3.051 81.46507959999997 2.39 146.2954969 3.616 74.15093350000001 3.863 153.3320263 4.081 139.92646630000002 10.499 122.69697839999995 11.272 164.46595289999996 2.481 112.55754429999999 13.109 73.6035066 2.181 133.50115559999998 3.197 69.57703169999995 7.382 66.6134672000008 9.177 71.95324199999999 2.842 67.52992129999996 2.276 122.80488269999854 9.136 102.88942559999997 4.061 123.67452039999999 3.009 146.1523635 3.355 69.54123570000033 9.075 82.27169559999999 11.994)
Error minima by case: (1.0 1 0.0 0 1.8144 1 15.4402 9 7.7305 1 5.0 1 28.463 1 1.0338 1 30.463 2 9.0957 9 14.3796 8 41.463 1 5.537 8 0.0 0 41.6935 2 1.0311 2 0.2928 1 0.0 0 0.0 0 0.5401 1 21.0 2 21.2084 1 21.463 2 0.0976 1 2.0974 1)
Average genome size in population (length): 53.05
Average program size in population (points): 54.05
Average percent parens in population: 0.019
Minimum age in population: 204.0403554072165
Maximum age in population: 208.6437732701204
Average age in population: 206.8487937937834
Median age in population: 206.9016461683691
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.107
Error (vector) diversity:			 0.113
Behavioral diversity:				 0.113
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 124172539
--- Timings ---
Current time: 1529616518361 milliseconds
Total Time:         465.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       207.0 seconds, 44.5%
Fitness Testing:    207.1 seconds, 44.5%
Report:              51.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2690.9579204999886
Median total errors in population: 1148.1756
Error averages by case: (71.06466970000001 3.031 66.90105430000004 2.429 109.24360089999922 9.173 135.43131499999998 12.15 96.42856840000002 3.144 77.8523507 2.421 142.6966512 3.634 72.10862549999999 3.924 149.7354328 4.101 136.28660140000002 10.545 119.3409078 11.306 161.27796640000003 2.487 109.60930849999998 13.092 70.10621209999998 2.198 130.9218152 3.24 66.61983040000005 7.405 63.86534630000072 9.176 69.3259017 2.889 64.70951509999999 2.337 119.3269632999988 9.126 99.58460070000001 4.049 121.49407230000006 3.083 142.81397390000004 3.353 66.87049150000037 9.093 77.9471454 12.009)
Error minima by case: (0.0 0 0.0 0 0.5409 1 0.9502 8 3.7325 1 0.0509 1 20.2153 1 2.0338 1 31.1231 2 5.3944 8 4.2634 8 24.1892 1 2.6246 9 0.0 0 40.6935 2 0.0311 1 0.2894 1 0.0 0 1.0 1 0.3973 1 20.5858 2 20.2084 1 4.1324 2 0.0976 1 1.05 1)
Average genome size in population (length): 52.908
Average program size in population (points): 53.908
Average percent parens in population: 0.019
Minimum age in population: 205.3560229964175
Maximum age in population: 210.274428128777
Average age in population: 208.2641728405572
Median age in population: 208.2740301529873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.769
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.769
Total error diversity:				 0.132
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 125495639
--- Timings ---
Current time: 1529616522030 milliseconds
Total Time:         469.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       208.4 seconds, 44.4%
Fitness Testing:    208.9 seconds, 44.5%
Report:              51.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -31} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 65.91543778980733 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 in1 57.87693811356892 in1 integer_rot float_inc integer_dup_times -31 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2821.9551986999895
Median total errors in population: 1148.1756
Error averages by case: (74.6833275 3.131 73.50038389999997 2.57 115.572872599999 9.186 140.42618359999997 12.182 102.37489770000002 3.223 83.84853870000002 2.512 145.82578410000002 3.726 73.59187250000001 3.984 155.61129170000004 4.162 141.39422259999998 10.568 124.21079490000001 11.319 166.79324929999996 2.596 115.1509729 13.136 76.29156029999999 2.284 136.34668380000002 3.321 73.3214933999993 7.468 70.47234820000057 9.239 73.5196497 3.001 68.71857399999996 2.441 125.06736529999876 9.197 105.58313110000003 4.132 125.09147830000002 3.176 148.62217180000002 3.449 73.46973019999969 9.157 81.2886206 12.018)
Error minima by case: (0.0 0 0.0 0 0.1231 1 8.4367 7 3.7325 1 3.0 1 19.3768 1 1.0338 1 39.5349 2 8.2766 8 0.1231 7 24.1892 1 8.6246 9 0.0 0 13.463 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.4138 1 21.0 2 5.463 1 4.1324 2 0.0976 1 1.9525 1)
Average genome size in population (length): 52.853
Average program size in population (points): 53.853
Average percent parens in population: 0.019
Minimum age in population: 206.3560229964175
Maximum age in population: 211.9318938827946
Average age in population: 209.6580422407886
Median age in population: 209.6938867633137
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.137
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 126817539
--- Timings ---
Current time: 1529616525928 milliseconds
Total Time:         473.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.0 seconds, 44.4%
Fitness Testing:    210.8 seconds, 44.6%
Report:              52.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 65.91543778980733 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2797.4998774999895
Median total errors in population: 1148.1756
Error averages by case: (75.4757568 3.142 71.50217220000006 2.663 112.8435490999993 9.203 138.22207180000007 12.117 100.11032839999999 3.232 82.63047590000002 2.56 146.97534529999996 3.907 74.17417210000002 3.934 154.31653439999997 4.236 139.20342880000004 10.513 122.12216449999997 11.278 165.79494790000004 2.659 113.4416967 13.071 75.3874289 2.386 134.54323710000003 3.352 71.28849629999948 7.458 68.41589500000079 9.229 74.46373090000002 3.033 69.94254229999999 2.428 122.97044249999884 9.166 104.7661032 4.203 125.72221509999999 3.181 147.61823900000007 3.497 71.38469149999995 9.144 82.60821179999998 11.984)
Error minima by case: (0.0 0 0.0 0 0.4099 1 16.4402 8 3.7325 1 2.0 1 25.1231 1 0.4137 1 27.1231 2 10.0957 9 0.1231 6 23.1892 1 2.6246 8 0.0 0 42.6935 2 0.0311 1 0.2928 1 0.0778 1 0.0 0 0.043 1 21.0 2 22.2084 1 4.1324 2 0.0976 2 1.05 1)
Average genome size in population (length): 52.948
Average program size in population (points): 53.948
Average percent parens in population: 0.019
Minimum age in population: 207.3560229964175
Maximum age in population: 213.1903983157737
Average age in population: 211.1049727681935
Median age in population: 211.1563477214728
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.774
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.774
Total error diversity:				 0.131
Error (vector) diversity:			 0.139
Behavioral diversity:				 0.139
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 128141739
--- Timings ---
Current time: 1529616529794 milliseconds
Total Time:         477.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       211.4 seconds, 44.3%
Fitness Testing:    212.8 seconds, 44.6%
Report:              52.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_yankdup} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_yankdup float_inc integer_dup_times float_inc integer_yankdup -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2907.1761859999897
Median total errors in population: 1148.1756
Error averages by case: (82.37809790000003 3.084 74.4704225 2.445 117.09659989999916 9.172 145.3821582 12.146 103.3056941 3.108 88.6670465 2.462 152.334169 3.701 78.09807849999999 3.998 159.8435114 4.142 146.3138683 10.54 129.21780029999996 11.304 170.9175837 2.57 116.57136919999996 13.106 80.90896600000005 2.253 137.67422129999997 3.297 74.20445419999966 7.399 71.43273600000063 9.189 77.56601999999997 2.923 73.18384359999995 2.373 126.82657579999875 9.106 109.96565700000002 4.111 128.97798219999999 3.098 152.76287650000003 3.408 74.38091030000018 9.096 84.65854359999997 12.006)
Error minima by case: (0.0 0 0.0 0 1.8144 1 12.4367 9 4.7325 1 4.0 1 28.1231 1 0.4137 1 30.1231 2 13.0957 9 0.2634 8 23.1892 1 3.6246 9 0.0 0 41.6935 2 0.0311 1 0.0116 1 0.0 0 1.0 1 0.043 1 21.0 2 21.2084 1 5.1324 2 0.0976 1 2.05 1)
Average genome size in population (length): 52.796
Average program size in population (points): 53.796
Average percent parens in population: 0.019
Minimum age in population: 208.3560229964175
Maximum age in population: 214.460769004005
Average age in population: 212.5877584849947
Median age in population: 212.6072889889837
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.786
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.786
Total error diversity:				 0.125
Error (vector) diversity:			 0.134
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 129462139
--- Timings ---
Current time: 1529616533418 milliseconds
Total Time:         480.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.8 seconds, 44.3%
Fitness Testing:    214.5 seconds, 44.6%
Report:              53.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction float_yankdup} {:instruction integer_add} {:instruction integer_dup_times} {:instruction integer_div} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 65.91543778980733 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float float_yankdup integer_add integer_dup_times integer_div float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2777.3600506999883
Median total errors in population: 1148.1756
Error averages by case: (73.28788440000001 2.963 71.5101204 2.266 114.638554999999 9.205 138.1979488 12.198 100.70890829999998 2.995 79.75492539999999 2.327 146.46354859999997 3.49 73.66582069999998 3.723 151.93872300000004 4.006 139.183391 10.54 121.70311140000001 11.31 162.9020298 2.391 114.3602687 13.145 71.7893946 2.089 134.97380660000002 3.129 71.48489889999969 7.414 68.54658050000059 9.234 74.12867400000002 2.811 69.42385319999998 2.226 124.80727629999866 9.178 101.16287750000001 3.987 125.91086119999997 2.98 144.48092210000002 3.261 71.50467600000006 9.151 82.71399429999997 12.098)
Error minima by case: (1.0 1 1.0 1 0.1231 1 17.5633 8 3.7325 1 5.0 1 72.6743 1 1.0338 1 39.5349 2 11.2187 8 0.1231 8 24.1892 1 0.1174 8 0.0 0 22.1231 2 0.0311 1 0.2928 1 0.002 1 0.0 0 0.1281 1 21.0 2 14.1231 1 4.1324 2 0.0976 1 1.6921 1)
Average genome size in population (length): 52.755
Average program size in population (points): 53.755
Average percent parens in population: 0.019
Minimum age in population: 209.3560229964175
Maximum age in population: 216.1486963483761
Average age in population: 214.0030976479063
Median age in population: 214.0346109988407
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.787
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.787
Total error diversity:				 0.118
Error (vector) diversity:			 0.126
Behavioral diversity:				 0.127
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 130781514
--- Timings ---
Current time: 1529616537302 milliseconds
Total Time:         484.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       214.4 seconds, 44.2%
Fitness Testing:    216.4 seconds, 44.7%
Report:              53.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction -92.45905431943933} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_dup} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 -92.45905431943933 float_max integer_stackdepth 51 integer_sub integer_dup in1 57.87693811356892 in1 integer_sub integer_rot float_inc -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3015.60991049999
Median total errors in population: 1148.1756
Error averages by case: (82.03614769999999 3.12 82.28086350000001 2.589 123.41936369999894 9.252 146.36922370000005 12.253 110.98060960000001 3.22 89.332228 2.507 154.21869629999995 3.808 83.14789520000001 3.971 160.67785420000004 4.167 147.34799730000003 10.623 130.26864780000002 11.409 171.7079435 2.603 123.87209959999998 13.207 81.6442366 2.304 144.58257959999997 3.374 82.11149349999873 7.482 79.35142159999991 9.257 84.09532150000001 3.016 79.44766729999998 2.452 134.14827479999892 9.209 110.76050110000003 4.148 134.84934990000002 3.203 153.54439370000003 3.449 82.22480649999916 9.18 91.32429430000002 12.063)
Error minima by case: (0.0 0 0.0 0 0.1231 1 12.4367 9 3.7305 1 0.15 1 26.4836 1 0.5041 1 39.5349 2 10.0957 8 0.2634 7 24.1892 1 10.3754 7 0.0 0 21.0 2 0.0311 2 0.0935 1 0.0 0 0.0 0 0.1281 1 22.0 2 17.2084 1 4.1324 2 0.0976 1 2.6722 1)
Average genome size in population (length): 52.926
Average program size in population (points): 53.926
Average percent parens in population: 0.019
Minimum age in population: 212.5270079710268
Maximum age in population: 217.6302620337759
Average age in population: 215.4076521392071
Median age in population: 215.4687716271034
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.814
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.814
Total error diversity:				 0.127
Error (vector) diversity:			 0.136
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 132105139
--- Timings ---
Current time: 1529616540994 milliseconds
Total Time:         488.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.9 seconds, 44.2%
Fitness Testing:    218.2 seconds, 44.7%
Report:              54.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_494} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items})
Best program: (integer_min in1 60.537048956669786 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_494 integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_dup_times float_inc float_shove float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2530.3986086999876
Median total errors in population: 1148.1756
Error averages by case: (64.78756920000002 2.89 60.35080970000004 2.32 102.31502529999926 9.103 130.9327815 12.102 89.56786830000001 2.932 72.14610449999999 2.259 135.69733389999993 3.575 62.88319280000001 3.741 144.70676010000003 3.95 131.91690169999998 10.476 114.36774359999998 11.27 155.7675246 2.395 103.09483839999997 13.079 64.25294120000002 2.059 124.34323779999997 3.117 60.22313130000015 7.329 57.46019130000067 9.116 61.91380559999998 2.731 57.1833063 2.154 113.62513359999852 9.066 93.79876180000001 3.949 114.3796414 2.9 137.43917040000002 3.228 60.44388390000035 9.038 70.0099505 12.012)
Error minima by case: (0.0 0 0.0 0 2.8769 1 14.4367 9 1.7305 1 0.0 0 2.9316 1 0.5863 1 31.1231 2 14.7558 8 1.1231 9 24.1892 1 4.8769 8 0.0 0 16.1231 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.043 2 23.0 2 8.1231 1 4.1324 2 0.0976 2 6.1474 1)
Average genome size in population (length): 52.943
Average program size in population (points): 53.943
Average percent parens in population: 0.019
Minimum age in population: 214.1137894654127
Maximum age in population: 219.0829715376623
Average age in population: 216.8640370957162
Median age in population: 216.9136256214797
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.811
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.811
Total error diversity:				 0.121
Error (vector) diversity:			 0.133
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 133429239
--- Timings ---
Current time: 1529616544634 milliseconds
Total Time:         491.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.3 seconds, 44.2%
Fitness Testing:    220.0 seconds, 44.7%
Report:              54.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction integer_max} {:instruction 60.537048956669786} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_min} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction tag_integer_223} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult integer_max 60.537048956669786 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_min float_inc integer_sub integer_rot float_inc tag_integer_223 float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2674.4589789999886
Median total errors in population: 1148.1756
Error averages by case: (69.91843750000001 2.916 66.94358820000002 2.409 109.83178989999902 9.136 133.6624083 12.166 95.99619750000002 3.054 74.9230092 2.305 143.2678329 3.647 71.93053120000002 3.797 147.32566749999998 3.962 134.66873940000002 10.558 117.13147699999999 11.302 158.28668549999995 2.402 109.95251259999999 13.134 66.93873380000002 2.069 130.58471099999997 3.199 66.77460309999998 7.38 63.987350100000896 9.17 71.3080261 2.801 66.82847899999999 2.235 120.27555429999852 9.131 96.27249680000001 3.95 122.69508719999999 2.968 139.76357340000004 3.257 66.91935010000037 9.083 80.19113739999999 12.05)
Error minima by case: (0.0 0 0.0 0 0.4298 1 10.2472 9 4.7325 1 4.0 1 23.1231 1 1.0338 1 25.1231 2 3.9027 9 1.1231 8 23.1892 1 10.3754 8 0.0 0 16.1231 2 0.0311 1 0.2399 1 0.732 1 0.0 0 0.5411 1 21.0 2 8.1231 1 5.1324 2 0.0976 1 6.0736 1)
Average genome size in population (length): 52.765
Average program size in population (points): 53.765
Average percent parens in population: 0.019
Minimum age in population: 215.3273168478816
Maximum age in population: 220.5205534508245
Average age in population: 218.2972150333955
Median age in population: 218.3358731592041
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.133
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 134748739
--- Timings ---
Current time: 1529616548334 milliseconds
Total Time:         495.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       218.7 seconds, 44.1%
Fitness Testing:    221.9 seconds, 44.8%
Report:              55.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 integer_yankdup integer_stackdepth 65.91543778980733 integer_sub tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_dup float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3084.059717999988
Median total errors in population: 1148.1756
Error averages by case: (88.00929950000001 3.126 82.2707384 2.564 124.17367529999872 9.217 149.91664360000001 12.213 110.97478619999998 3.155 93.29822449999998 2.49 160.0437761 3.759 88.64353130000002 3.904 164.62532280000002 4.194 150.76946650000002 10.583 133.88288089999998 11.375 175.57024299999998 2.61 125.37301910000001 13.201 85.609787 2.334 144.97817260000002 3.324 82.15711589999873 7.45 79.29432100000025 9.225 87.26791229999998 2.996 82.80415929999998 2.38 135.34884529999886 9.174 114.6831998 4.171 137.2899437 3.12 157.49138650000003 3.467 82.26770049999924 9.124 96.03356690000003 12.126)
Error minima by case: (0.0 0 0.0 0 0.4298 1 10.7095 8 2.3521 1 1.0 1 75.0 1 0.9366 1 77.0 2 4.365 9 1.7366 8 88.0 1 11.66 9 0.0 0 36.3151 2 1.0311 1 0.2928 1 0.0778 1 0.0 0 0.8719 1 21.0 2 15.83 1 68.0 2 0.0976 1 10.0 1)
Average genome size in population (length): 52.778
Average program size in population (points): 53.778
Average percent parens in population: 0.019
Minimum age in population: 216.3273168478816
Maximum age in population: 221.7417511604021
Average age in population: 219.7207563344011
Median age in population: 219.7671171518295
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.785
Total error diversity:				 0.117
Error (vector) diversity:			 0.128
Behavioral diversity:				 0.129
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 136068739
--- Timings ---
Current time: 1529616551886 milliseconds
Total Time:         499.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.1 seconds, 44.1%
Fitness Testing:    223.6 seconds, 44.8%
Report:              55.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_min} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 float_min integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup_items float_inc integer_dup_times float_inc float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2666.984606399988
Median total errors in population: 1148.1756
Error averages by case: (69.714116 2.965 66.64967660000002 2.325 109.08586549999912 9.146 134.16409449999998 12.146 95.8465808 3.03 76.41867719999999 2.313 142.10017399999998 3.528 68.9507365 3.817 148.9749878 4.02 135.1664345 10.47 118.10724219999997 11.282 160.12909159999998 2.4 109.76004589999995 13.087 68.59882579999999 2.126 130.3487182 3.149 66.48315500000007 7.371 63.534532300000855 9.171 68.47869349999999 2.849 63.203761099999994 2.239 120.11881159999855 9.134 98.15735550000001 3.992 120.74246810000001 2.991 141.64879609999997 3.268 66.49480520000046 9.083 76.1539609 12.051)
Error minima by case: (1.0 1 0.0 0 0.5409 2 18.1231 9 5.7305 1 5.0 1 75.0 1 3.7856 1 77.0 2 12.7558 8 0.1231 7 88.0 1 4.8769 7 0.0 0 20.1231 2 0.0311 1 0.1374 1 0.998 1 0.0 0 1.2648 1 21.0 2 12.1231 1 68.0 2 0.0976 1 0.9525 1)
Average genome size in population (length): 52.795
Average program size in population (points): 53.795
Average percent parens in population: 0.019
Minimum age in population: 218.6753002880105
Maximum age in population: 223.2821295813526
Average age in population: 221.1664371285486
Median age in population: 221.1773893876782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.777
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.777
Total error diversity:				 0.124
Error (vector) diversity:			 0.131
Behavioral diversity:				 0.131
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 137389264
--- Timings ---
Current time: 1529616555890 milliseconds
Total Time:         503.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       221.6 seconds, 44.1%
Fitness Testing:    225.5 seconds, 44.8%
Report:              55.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction float_swap} {:instruction integer_shove} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_inc} {:instruction integer_max} {:instruction -30} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_mod} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_frominteger} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_sub} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 in1 60.537048956669786 float_max integer_stackdepth 65.91543778980733 float_swap integer_shove integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min float_inc integer_max -30 integer_dup_times float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_mod print_float integer_yankdup float_frominteger integer_yankdup integer_add float_dup_items integer_sub float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2779.9048253999895
Median total errors in population: 1148.1756
Error averages by case: (75.7674825 2.98 70.86084130000005 2.329 111.63042869999921 9.093 140.1089938 12.117 99.2284997 3.011 82.23331060000004 2.342 147.13935269999996 3.511 74.3987341 3.791 153.94251390000005 4.023 141.06367660000004 10.482 123.90767480000001 11.288 164.97200160000003 2.466 112.54132899999999 13.097 74.36038540000001 2.146 133.44164580000003 3.188 69.71479959999981 7.339 67.01448730000077 9.11 72.73809730000002 2.833 68.35325379999998 2.237 123.0258821999988 9.077 103.4551564 4.02 124.23749299999999 2.978 146.59981440000004 3.303 70.04051810000014 9.04 81.34745280000001 11.98)
Error minima by case: (0.0 0 0.0 0 0.4298 1 5.6714 8 2.7305 1 4.0 1 0.4725 1 2.7208 1 32.1231 2 0.6731 7 0.1231 7 24.1892 1 3.8769 9 0.0 0 36.6935 2 0.0311 1 0.1711 1 0.0 0 0.0 0 0.043 1 21.0 2 16.2084 1 4.1324 2 0.0976 1 2.6722 1)
Average genome size in population (length): 52.78
Average program size in population (points): 53.78
Average percent parens in population: 0.019
Minimum age in population: 220.1134083433256
Maximum age in population: 224.7162724315862
Average age in population: 222.5991923069538
Median age in population: 222.6754145725914
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.772
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.772
Total error diversity:				 0.138
Error (vector) diversity:			 0.144
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 138709614
--- Timings ---
Current time: 1529616559508 milliseconds
Total Time:         506.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.1 seconds, 44.0%
Fitness Testing:    227.3 seconds, 44.8%
Report:              56.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_swap} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth integer_swap integer_sub integer_shove float_mult in1 60.537048956669786 float_max integer_stackdepth 65.91543778980733 integer_sub integer_shove float_mult in1 57.87693811356892 in1 57.87693811356892 float_min 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 29 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2709.278136399988
Median total errors in population: 1148.1756
Error averages by case: (70.64389499999997 3.009 68.22795400000001 2.404 110.16498349999927 9.1 134.8476261 12.098 97.10114579999998 3.114 76.98612039999999 2.418 144.20367789999997 3.592 71.6820526 3.857 150.1564912 4.114 135.805028 10.491 118.6680543 11.262 160.68482559999995 2.52 110.68862859999999 13.067 69.27282639999999 2.201 131.53465389999997 3.273 68.54133370000001 7.393 65.2330186000006 9.142 72.59900160000001 2.906 68.31413779999998 2.348 120.9410817999988 9.094 98.90312639999998 4.083 122.8512452 3.075 143.11230449999996 3.374 68.16210880000027 9.051 80.93281470000004 12.034)
Error minima by case: (0.0 0 0.0 0 0.4591 1 13.4975 7 2.3521 1 4.0 1 30.3457 1 1.0338 1 79.0 2 7.153 8 1.1231 8 90.0 1 12.3754 8 0.0 0 16.1231 2 0.0311 1 0.0536 1 0.1739 1 0.0 0 0.5401 1 23.0 2 8.1231 1 70.0 2 0.0976 2 0.5754 1)
Average genome size in population (length): 52.886
Average program size in population (points): 53.886
Average percent parens in population: 0.019
Minimum age in population: 221.1134083433256
Maximum age in population: 226.327088012667
Average age in population: 224.0221741460781
Median age in population: 224.0595487672536
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.131
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 140032664
--- Timings ---
Current time: 1529616563293 milliseconds
Total Time:         510.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       224.4 seconds, 44.0%
Fitness Testing:    229.3 seconds, 44.9%
Report:              56.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction in1} {:instruction 60.537048956669786} {:instruction integer_sub} {:instruction float_yankdup} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -28} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction tag_integer_674} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 in1 60.537048956669786 integer_sub float_yankdup float_max integer_stackdepth 51 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_rot float_inc integer_dup_times -28 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc tag_integer_674 print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2949.322719799987
Median total errors in population: 1148.1756
Error averages by case: (81.2429682 3.057 78.94583480000003 2.456 121.633930599999 9.188 144.91562160000004 12.119 107.48031449999998 3.145 87.37123640000002 2.47 152.03566720000003 3.602 80.1060849 3.919 158.23854699999998 4.146 145.83659560000004 10.496 128.5739163 11.293 169.0438204 2.575 121.12074629999998 13.071 79.46196699999999 2.235 141.66790430000003 3.278 78.48751729999938 7.478 76.04722550000032 9.207 80.37769320000001 2.936 76.43929419999996 2.381 131.50512379999878 9.169 108.28603079999999 4.109 133.0760285 3.128 150.7931547 3.399 79.12473849999985 9.093 87.5367582 12.024)
Error minima by case: (0.0 0 0.0 0 0.5409 1 8.4367 9 3.7325 1 4.0 1 60.4163 1 0.9662 1 37.5349 2 11.7558 9 1.7366 8 22.1892 1 0.6246 8 0.0 0 41.6935 2 0.0311 1 0.0485 1 0.0 0 0.0 0 0.614 1 21.0 2 21.2084 1 4.1324 2 0.0976 1 0.95 1)
Average genome size in population (length): 52.828
Average program size in population (points): 53.828
Average percent parens in population: 0.019
Minimum age in population: 222.9282756788274
Maximum age in population: 227.2257641958997
Average age in population: 225.4830676808681
Median age in population: 225.5113900649742
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.12
Error (vector) diversity:			 0.132
Behavioral diversity:				 0.132
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 141354439
--- Timings ---
Current time: 1529616566874 milliseconds
Total Time:         514.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.8 seconds, 43.9%
Fitness Testing:    231.0 seconds, 44.9%
Report:              57.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_add} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -32} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min integer_sub tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 integer_add float_inc float_inc float_inc integer_dup_times -32 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2924.1540203999893
Median total errors in population: 1148.1756
Error averages by case: (80.32877910000003 3.078 77.55233569999999 2.419 118.38414409999892 9.125 143.82867940000006 12.137 106.31832760000002 3.143 87.20736350000001 2.442 150.5306861 3.502 79.15429930000002 4.004 157.68017619999998 4.108 144.8363307 10.513 127.6846476 11.306 169.73267190000004 2.539 119.0104477 13.077 79.35508079999997 2.234 140.48783690000002 3.293 77.26229089999832 7.395 74.61573579999958 9.199 80.22442530000004 2.938 75.9508112 2.386 129.4741877999987 9.126 108.44409840000003 4.109 132.01719900000003 3.127 150.55154770000004 3.389 77.51197079999886 9.078 86.2579469 12.085)
Error minima by case: (0.0 0 0.0 0 0.4016 1 11.4367 9 2.3521 1 2.7827 1 29.4163 1 0.5863 1 68.4651 2 16.7558 9 0.1231 7 89.0 1 4.3754 8 0.0 0 13.8436 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.5411 1 22.0 2 15.83 1 69.0 2 0.0976 1 4.1833 1)
Average genome size in population (length): 53.152
Average program size in population (points): 54.152
Average percent parens in population: 0.019
Minimum age in population: 223.9914919698354
Maximum age in population: 228.8289552074013
Average age in population: 226.9352340477137
Median age in population: 227.0001198043838
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.787
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.787
Total error diversity:				 0.139
Error (vector) diversity:			 0.149
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 142684289
--- Timings ---
Current time: 1529616570801 milliseconds
Total Time:         518.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       227.4 seconds, 43.9%
Fitness Testing:    233.0 seconds, 45.0%
Report:              57.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction float_flush} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction float_mult} {:instruction in1} {:instruction 84.43024694558338} {:instruction integer_sub} {:instruction integer_shove} {:instruction integer_max} {:instruction tagged_75} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_dec} {:instruction float_yankdup})
Best program: (float_mult in1 float_flush 60.537048956669786 float_max integer_stackdepth 65.91543778980733 integer_sub float_mult in1 84.43024694558338 integer_sub integer_shove integer_max tagged_75 in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_sub integer_rot float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_dup_times print_float integer_yankdup integer_add float_dup_items integer_dec float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2713.3457289999888
Median total errors in population: 1148.1756
Error averages by case: (70.3492315 3.11 69.08255220000002 2.501 111.56356339999907 9.231 133.58655599999997 12.163 97.7856381 3.244 76.91986920000002 2.496 144.50325789999997 3.695 71.189068 3.855 149.25936370000005 4.201 133.5021671 10.531 116.50320509999997 11.285 160.6432068 2.587 112.30554739999995 13.127 69.36692200000003 2.304 131.8002866 3.393 69.19943369999969 7.481 66.28263430000081 9.243 73.37602170000002 3.042 68.73805289999997 2.455 121.92850759999851 9.207 99.03857089999997 4.139 123.07000169999996 3.169 142.25510570000003 3.44 69.277727 9.18 80.69723850000003 12.043)
Error minima by case: (0.0 0 0.0 0 0.1231 1 10.9956 9 3.7325 1 4.0 1 55.0 1 1.0338 1 39.5349 2 4.651 8 0.1231 8 24.1892 1 6.5598 8 0.0 0 12.463 2 0.9689 1 0.1952 1 0.0 0 0.0 0 1.5585 1 1.0 1 1.0734 1 4.1324 2 0.0976 1 6.0736 1)
Average genome size in population (length): 53.252
Average program size in population (points): 54.252
Average percent parens in population: 0.019
Minimum age in population: 225.8694507768636
Maximum age in population: 230.3859786613256
Average age in population: 228.4041092905797
Median age in population: 228.43678240817
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.795
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.795
Total error diversity:				 0.138
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 144016739
--- Timings ---
Current time: 1529616574474 milliseconds
Total Time:         521.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.7 seconds, 43.8%
Fitness Testing:    234.8 seconds, 45.0%
Report:              58.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_tan} {:instruction float_min} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_pop} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction float_shove} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -31} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_inc} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth float_rot float_tan float_min tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_pop integer_sub integer_rot integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub float_shove float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_min float_inc integer_dup_times -31 28 float_inc float_inc integer_dup_times print_float integer_yankdup float_inc integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3458.36085049999
Median total errors in population: 1148.1756
Error averages by case: (104.45675679999995 3.295 98.83918349999993 2.786 138.95011249999922 9.355 165.93608280000004 12.221 126.79794680000002 3.412 109.9511889 2.697 171.2105908 3.958 97.34465440000001 4.207 179.4452737 4.346 166.9064128 10.615 150.11238610000007 11.389 190.22129410000002 2.798 139.55298320000006 13.136 102.43908369999998 2.501 160.17406929999999 3.516 98.6709445999977 7.617 95.89945019999966 9.369 101.98872430000003 3.217 97.3726882 2.623 149.15779979999934 9.296 130.582989 4.317 152.27424750000006 3.38 172.4280285 3.621 98.73244669999842 9.269 103.8325123 12.142)
Error minima by case: (0.7719 1 0.0 0 0.4099 1 17.4402 7 4.7325 1 1.0 1 24.1231 1 1.0338 1 26.1231 2 11.0957 9 7.1231 7 23.1892 1 9.8769 8 0.0 0 42.9055 2 0.0311 1 0.2928 1 0.1077 1 0.0 0 0.1281 2 15.058 2 22.4205 1 5.1324 2 0.0976 2 5.1833 1)
Average genome size in population (length): 53.628
Average program size in population (points): 54.628
Average percent parens in population: 0.019
Minimum age in population: 227.4292930962295
Maximum age in population: 232.0243513476592
Average age in population: 229.8116676523277
Median age in population: 229.8110465526706
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.141
Error (vector) diversity:			 0.154
Behavioral diversity:				 0.154
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 145358614
--- Timings ---
Current time: 1529616578148 milliseconds
Total Time:         525.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       230.2 seconds, 43.8%
Fitness Testing:    236.6 seconds, 45.0%
Report:              58.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_mult} {:instruction integer_max} {:instruction tag_integer_469} {:instruction integer_dup} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction -72} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_mult integer_max tag_integer_469 integer_dup in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float -72 integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 49
Size: 50
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2896.5210931999886
Median total errors in population: 1148.1756
Error averages by case: (81.3072945 3.063 75.25616290000004 2.48 116.35003789999871 9.171 143.58449980000003 12.117 104.17312220000001 3.136 86.89236129999998 2.436 151.87390869999996 3.745 77.15498610000004 4.016 158.11856439999997 4.098 144.52913550000002 10.525 127.46824829999997 11.287 169.2506486 2.557 117.4533542 13.073 79.23212040000003 2.244 138.1588333999999 3.31 75.00450699999894 7.417 72.28295070000053 9.212 78.38926560000002 2.916 73.7920992 2.37 127.49117859999836 9.159 108.20449420000004 4.078 130.05026 3.097 151.01284140000004 3.402 75.19637329999942 9.151 84.277845 11.956)
Error minima by case: (0.0 0 0.0 0 0.4988 2 15.4402 9 3.7325 1 2.0 1 24.7814 1 2.3175 1 38.5349 2 9.0957 7 9.1506 8 23.1892 1 6.3754 8 0.0 0 39.3151 2 0.0311 1 0.2928 1 0.0 0 0.0 0 1.8719 1 14.058 2 18.83 1 4.1324 2 0.0976 1 7.95 1)
Average genome size in population (length): 54.11
Average program size in population (points): 55.11
Average percent parens in population: 0.018
Minimum age in population: 228.5783811011846
Maximum age in population: 233.5671644799477
Average age in population: 231.273413715735
Median age in population: 231.3219777376387
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.149
Error (vector) diversity:			 0.157
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 146712339
--- Timings ---
Current time: 1529616582102 milliseconds
Total Time:         529.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.7 seconds, 43.8%
Fitness Testing:    238.5 seconds, 45.1%
Report:              59.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction float_mult} {:instruction in1} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_flush} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.99810992237813} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction -30} {:instruction integer_yank} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_yank} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_stackdepth float_mult in1 integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 float_max integer_stackdepth 51 integer_sub integer_flush tag_integer_469 float_mult in1 57.87693811356892 in1 57.99810992237813 float_min integer_sub integer_rot float_inc -30 integer_yank float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_yank -30 29 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2891.4864655999886
Median total errors in population: 1148.1756
Error averages by case: (80.431826 3.105 74.92482440000002 2.452 116.90821309999892 9.157 144.41890899999999 12.193 102.79692999999997 3.184 86.39685230000005 2.474 151.76144 3.736 80.00652640000001 3.736 157.8988152 4.181 144.42340719999999 10.536 127.56296380000002 11.327 168.9638373 2.562 116.56887129999997 13.129 78.74575370000001 2.311 137.17772699999998 3.3 73.95790619999886 7.405 71.19028679999985 9.192 77.7644874 2.996 73.29772589999997 2.407 126.68935729999836 9.142 107.85363060000003 4.146 128.60189089999997 3.148 150.69708799999998 3.429 74.16665459999932 9.099 87.84454120000002 12.089)
Error minima by case: (0.0 0 0.0 0 0.5409 1 8.4367 10 3.7325 1 2.0 1 10.0139 1 2.4959 1 21.1231 2 11.0957 8 0.1231 8 24.1892 1 6.6246 9 0.0 0 41.3536 2 0.0214 1 0.2928 1 0.002 1 0.0 0 0.8518 1 23.0 2 23.8685 1 4.1324 2 0.0976 1 2.0974 1)
Average genome size in population (length): 53.972
Average program size in population (points): 54.972
Average percent parens in population: 0.018
Minimum age in population: 229.941880773323
Maximum age in population: 234.9690892011852
Average age in population: 232.6671301732758
Median age in population: 232.7205754043484
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.129
Error (vector) diversity:			 0.138
Behavioral diversity:				 0.139
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 148062689
--- Timings ---
Current time: 1529616585896 milliseconds
Total Time:         533.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       233.2 seconds, 43.7%
Fitness Testing:    240.3 seconds, 45.1%
Report:              59.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction 65.91543778980733} {:instruction integer_yankdup} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction tagged_323} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_yank} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_inc} {:instruction float_dup_items} {:instruction float_cos} {:instruction float_yankdup})
Best program: (float_mult in1 float_max integer_stackdepth 51 float_tan integer_shove tag_integer_469 65.91543778980733 integer_yankdup integer_shove tag_integer_469 float_mult integer_stackdepth 57.87693811356892 in1 57.87693811356892 in1 57.87693811356892 in1 integer_rot float_inc integer_dup_times tagged_323 28 float_inc float_inc float_inc integer_rot -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times integer_yank 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_inc float_dup_items float_cos float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2832.663556799989
Median total errors in population: 1148.1756
Error averages by case: (77.20736939999999 3.012 73.5637483 2.553 114.3919882999991 9.239 140.7534436 12.17 102.47179699999998 3.187 83.0274194 2.378 148.9494604 3.729 74.9449493 3.831 154.9998023 4.07 141.7950183 10.528 124.69062489999999 11.324 166.15845899999997 2.492 115.1688809 13.068 75.44948450000001 2.196 136.4105159 3.325 73.22507389999959 7.513 70.55399620000038 9.284 75.99294109999997 3.004 71.19576649999996 2.405 124.91753639999877 9.235 104.72232599999998 4.08 127.65337289999998 3.159 147.82925560000004 3.371 73.62561189999994 9.21 82.5217148 12.08)
Error minima by case: (0.0 0 0.0 0 0.1231 1 2.0261 8 3.7325 1 1.0 1 63.1924 1 0.4959 1 39.5349 2 12.0333 7 1.537 8 24.1892 1 2.3976 8 0.0 0 4.0328 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.8518 1 21.0 2 5.463 1 4.1324 2 0.0976 1 0.8229 1)
Average genome size in population (length): 54.064
Average program size in population (points): 55.064
Average percent parens in population: 0.018
Minimum age in population: 231.2450725084926
Maximum age in population: 236.1585631050844
Average age in population: 234.0549506346506
Median age in population: 234.0934564993626
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.148
Error (vector) diversity:			 0.158
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 149415389
--- Timings ---
Current time: 1529616589488 milliseconds
Total Time:         536.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.6 seconds, 43.7%
Fitness Testing:    242.1 seconds, 45.1%
Report:              60.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_dup_items} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -31} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_sub integer_shove tag_integer_469 float_dup_items in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -31 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2719.402202399988
Median total errors in population: 1148.1756
Error averages by case: (72.98624120000001 2.891 67.91796470000001 2.322 110.12966629999887 9.173 138.37940999999998 12.096 97.04999079999999 3.001 79.74016600000002 2.25 144.4075176 3.647 70.84756399999996 3.704 151.93677110000002 3.974 139.31514700000002 10.456 121.9526479 11.23 162.87350090000004 2.387 110.4380694 13.034 71.86533549999999 2.083 131.40731419999997 3.129 67.73522459999991 7.398 64.74973890000103 9.207 69.59740609999999 2.815 64.65158179999999 2.162 120.9355925999985 9.159 101.16800239999999 3.961 121.59668619999998 2.963 144.46345880000004 3.245 67.82336040000037 9.118 78.02284399999999 12.006)
Error minima by case: (0.0 0 0.0 0 0.4591 1 6.7976 10 3.7325 1 0.0 0 14.6189 1 1.0 1 39.5349 2 13.0957 9 0.1231 7 24.1892 1 3.6297 7 0.0 0 43.7695 2 0.0311 2 0.087 1 0.1077 1 0.0 0 2.0152 1 21.0 2 23.8685 1 4.1324 2 0.0976 1 0.9525 1)
Average genome size in population (length): 54.075
Average program size in population (points): 55.075
Average percent parens in population: 0.018
Minimum age in population: 232.6693208723371
Maximum age in population: 237.5221589053544
Average age in population: 235.4766766764142
Median age in population: 235.5155495569068
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.122
Error (vector) diversity:			 0.132
Behavioral diversity:				 0.132
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 150768464
--- Timings ---
Current time: 1529616593227 milliseconds
Total Time:         540.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.2 seconds, 43.7%
Fitness Testing:    243.9 seconds, 45.1%
Report:              60.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction float_min} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction integer_dup} {:instruction in1} {:instruction 51} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_pop} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_pop} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 float_min float_max integer_stackdepth 51 integer_sub integer_dup in1 51 float_tan integer_shove tag_integer_469 integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times integer_pop 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times integer_rot float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_pop float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3075.832714899988
Median total errors in population: 1148.1756
Error averages by case: (87.10492190000002 3.187 83.51786219999998 2.532 124.36314999999864 9.2 149.78089289999997 12.175 112.01076959999999 3.225 93.67996369999999 2.545 157.99320699999996 3.637 87.18396110000002 3.831 163.80164849999997 4.261 150.69763890000002 10.509 133.9497658 11.327 174.81997890000002 2.657 124.98293009999996 13.163 86.13093379999998 2.38 145.56530339999998 3.336 82.4353820999991 7.484 79.74644610000038 9.2 85.87844930000001 3.04 80.93512029999998 2.431 135.28513369999854 9.172 114.03140229999997 4.234 136.5163571 3.202 156.70099830000004 3.496 82.8052455999996 9.114 94.53025229999999 12.047)
Error minima by case: (0.0 0 0.0 0 0.5409 2 8.4367 9 3.7325 1 3.0 1 63.4163 1 0.7316 1 37.5349 2 2.308 9 0.1231 9 22.1892 1 6.6246 9 0.0 0 27.2305 2 0.0311 1 0.0163 1 0.0 0 0.0 0 0.4061 1 21.0 2 6.7455 1 4.1324 2 0.0976 1 5.05 1)
Average genome size in population (length): 54.379
Average program size in population (points): 55.379
Average percent parens in population: 0.018
Minimum age in population: 234.1465683256178
Maximum age in population: 238.8915245030122
Average age in population: 236.9092036830646
Median age in population: 236.9704017305274
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.789
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.789
Total error diversity:				 0.128
Error (vector) diversity:			 0.141
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 152128764
--- Timings ---
Current time: 1529616597226 milliseconds
Total Time:         544.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       237.8 seconds, 43.7%
Fitness Testing:    245.6 seconds, 45.1%
Report:              60.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_flush} {:instruction float_add} {:instruction float_rot} {:instruction integer_dup} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add})
Best program: (float_dup in1 60.537048956669786 float_flush float_add float_rot integer_dup in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3025.5823741999893
Median total errors in population: 1148.1756
Error averages by case: (87.1731952 3.175 79.30034950000004 2.519 120.7330588999989 9.24 150.266555 12.157 108.04025360000003 3.204 93.16411679999999 2.497 156.55524889999995 3.692 85.18261220000002 4.02 164.11010890000003 4.212 151.20829830000002 10.544 134.16508500000003 11.342 175.04379429999994 2.64 120.7577699 13.128 85.3733741 2.344 142.1183044 3.36 79.05720119999896 7.501 76.38713460000007 9.238 81.5326193 3.037 77.224104 2.449 131.21963589999854 9.19 114.27665970000002 4.18 133.15485020000003 3.186 157.00723059999999 3.47 79.3895542999995 9.167 91.5612594 12.088)
Error minima by case: (0.0 0 0.3908 1 0.5409 1 17.4402 9 3.3521 1 0.3808 1 27.0143 1 2.4959 1 66.0632 2 11.0957 9 6.9743 8 88.0 1 6.5598 9 0.0 0 30.3536 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.2751 1 21.0 2 9.8685 1 68.0 2 0.0976 1 8.1344 1)
Average genome size in population (length): 54.474
Average program size in population (points): 55.474
Average percent parens in population: 0.018
Minimum age in population: 235.1465683256178
Maximum age in population: 240.2623665864187
Average age in population: 238.3790331184448
Median age in population: 238.4334955216048
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.14
Error (vector) diversity:			 0.151
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 153491389
--- Timings ---
Current time: 1529616600963 milliseconds
Total Time:         548.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.2 seconds, 43.6%
Fitness Testing:    247.5 seconds, 45.1%
Report:              61.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 55.109982561581795} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_mult} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 in1 57.87693811356892 in1 55.109982561581795 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_div float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup float_mult float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 2746.182816299989
Median total errors in population: 1148.1756
Error averages by case: (74.02304059999999 3.118 68.97685350000005 2.506 111.76307009999927 9.172 139.11330729999997 12.138 97.87851540000001 3.199 80.3372041 2.503 144.8646023 3.669 72.37316259999997 3.977 152.0826116 4.187 138.08263410000004 10.538 121.08074529999998 11.288 163.19822259999998 2.596 111.2239323 13.079 73.2681917 2.282 131.93437100000006 3.348 68.92629999999984 7.439 66.32781440000088 9.177 72.18324409999997 3.005 67.51909959999999 2.463 121.1868142999986 9.149 102.26451489999998 4.142 123.21152790000001 3.159 145.1059327 3.453 69.33593970000032 9.109 79.19116420000002 12.034)
Error minima by case: (1.0 1 0.0 0 0.0289 1 18.1231 8 2.1725 1 1.4582 1 15.9687 1 0.0905 1 37.5349 2 4.7104 8 0.1231 7 22.1892 1 5.6246 8 0.0 0 15.1231 2 0.0311 1 0.0485 1 0.0 0 0.0 0 0.1281 1 21.0 2 6.2912 1 1.8676 2 0.0976 1 4.05 1)
Average genome size in population (length): 54.096
Average program size in population (points): 55.096
Average percent parens in population: 0.019
Minimum age in population: 236.1465683256178
Maximum age in population: 241.8315501126041
Average age in population: 239.8375040272959
Median age in population: 239.8913070977748
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.151
Error (vector) diversity:			 0.162
Behavioral diversity:				 0.163
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 154844489
--- Timings ---
Current time: 1529616604756 milliseconds
Total Time:         552.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       240.7 seconds, 43.6%
Fitness Testing:    249.4 seconds, 45.2%
Report:              61.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_dup} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan})
Best program: (float_mult in1 60.537048956669786 float_dup integer_sub integer_shove tag_integer_469 float_mult 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_inc float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 29 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3185.289446099989
Median total errors in population: 1148.1756
Error averages by case: (93.20143099999996 3.373 86.7302573 2.747 126.55845829999839 9.327 154.03011610000001 12.208 114.83729179999997 3.461 99.18347299999998 2.748 162.7466311 3.915 91.62292430000002 4.211 169.6694421 4.442 155.02523250000004 10.595 138.24268600000005 11.382 180.95399819999997 2.872 127.60360689999999 13.137 91.89639610000002 2.586 148.65180980000005 3.573 86.54717979999843 7.63 83.89371749999991 9.364 89.21896860000004 3.261 83.8465334 2.668 136.97703819999865 9.297 120.8870227 4.422 140.35891350000003 3.411 163.17328640000002 3.688 86.75575399999906 9.218 97.03427750000003 12.107)
Error minima by case: (0.0 0 0.0 0 0.1231 1 3.1684 7 2.3521 1 2.0 1 29.4163 1 0.6842 1 39.5349 2 2.1585 8 1.7366 8 24.1892 1 3.6246 8 0.0 0 36.3151 2 0.0311 1 0.2116 1 0.0 0 1.0 1 0.043 1 21.0 2 15.83 1 4.1324 2 0.0976 1 2.05 1)
Average genome size in population (length): 54.356
Average program size in population (points): 55.356
Average percent parens in population: 0.018
Minimum age in population: 237.1465683256178
Maximum age in population: 243.3036599324549
Average age in population: 241.2631980535704
Median age in population: 241.3192966377777
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.153
Error (vector) diversity:			 0.164
Behavioral diversity:				 0.165
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 156204139
--- Timings ---
Current time: 1529616608575 milliseconds
Total Time:         555.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.2 seconds, 43.6%
Fitness Testing:    251.3 seconds, 45.2%
Report:              62.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_dup} {:instruction integer_shove} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_dup_times} {:instruction float_yankdup} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_mult in1 60.537048956669786 float_dup integer_shove integer_shove tag_integer_469 float_mult 57.87693811356892 in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_stackdepth -30 29 float_inc float_inc float_inc integer_inc -30 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add integer_dup_times float_yankdup float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2836.4469127999896
Median total errors in population: 1148.1756
Error averages by case: (77.96264570000002 3.049 73.15227700000001 2.528 117.47798149999893 9.195 141.9276638 12.144 102.04204349999999 3.134 84.18315679999998 2.412 147.7050901 3.731 74.9396234 3.942 155.92850920000004 4.119 142.86084550000004 10.522 125.72286460000004 11.29 166.97908350000003 2.535 115.35295859999998 13.068 76.4373865 2.234 136.27357039999998 3.319 72.99515509999972 7.451 70.19453840000077 9.219 74.62549 2.939 69.47555069999997 2.374 125.9375116999985 9.165 105.5176571 4.096 126.69488510000001 3.119 148.6731307 3.402 73.18132100000011 9.105 80.06497290000001 12.049)
Error minima by case: (0.0 0 0.0 0 0.1231 1 6.364 10 10.3906 1 3.0 1 18.4135 1 2.996 1 57.4624 2 0.0194 8 4.1231 8 88.0 1 6.6246 8 0.0 0 44.3536 2 0.0311 1 0.0745 1 0.0 0 0.0 0 0.4138 1 21.0 2 23.8685 1 68.0 2 0.0976 1 2.6722 1)
Average genome size in population (length): 54.76
Average program size in population (points): 55.76
Average percent parens in population: 0.018
Minimum age in population: 239.7894432892068
Maximum age in population: 244.6723964925535
Average age in population: 242.7385908712091
Median age in population: 242.7935422666947
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.835
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.835
Total error diversity:				 0.141
Error (vector) diversity:			 0.148
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 157573864
--- Timings ---
Current time: 1529616612413 milliseconds
Total Time:         559.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.6 seconds, 43.5%
Fitness Testing:    253.1 seconds, 45.2%
Report:              62.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_float} {:instruction in1} {:instruction 60.537048956669786} {:instruction in1} {:instruction 59.04495601942771} {:instruction float_max} {:instruction in1} {:instruction 57.87693811356892} {:instruction integer_stackdepth} {:instruction tag_integer_340} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_div} {:instruction integer_add} {:instruction float_dec} {:instruction float_tan})
Best program: (print_float in1 60.537048956669786 in1 59.04495601942771 float_max in1 57.87693811356892 integer_stackdepth tag_integer_340 integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 in1 57.87693811356892 float_min integer_inc integer_rot float_inc integer_dup_times -30 28 float_inc integer_dup float_inc integer_dup_times float_inc float_inc float_inc float_min integer_sub integer_rot float_inc float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times float_inc float_inc integer_dup_times print_float integer_div integer_add float_dec float_tan)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 51
Size: 52
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3006.7960323999887
Median total errors in population: 1148.1756
Error averages by case: (84.94588830000001 3.098 79.36562459999996 2.498 121.34245509999906 9.13 148.2563908 12.167 107.98575179999999 3.161 91.55601409999997 2.477 156.54483769999996 3.638 83.6004043 4.041 162.57487380000003 4.163 149.10919810000001 10.559 132.1934935 11.343 173.65880380000002 2.599 121.48613889999997 13.149 83.82381130000002 2.276 141.8508307 3.315 79.07366189999885 7.416 76.4896079 9.186 81.98516189999998 2.955 77.51404019999998 2.4 132.14414679999868 9.133 112.61116649999998 4.139 132.93509330000003 3.119 155.54861440000002 3.447 79.46334669999932 9.11 90.15867599999999 12.059)
Error minima by case: (0.0 0 0.0 0 0.7319 1 2.7425 9 7.7305 1 4.0 1 34.4163 1 1.0 1 73.4651 2 13.0957 9 1.7366 7 88.0 1 6.5598 7 0.0 0 27.0 2 0.0311 1 0.0491 1 0.0 0 0.0 0 0.5411 1 21.0 2 21.2084 1 68.0 2 0.0976 1 0.0999 1)
Average genome size in population (length): 54.281
Average program size in population (points): 55.281
Average percent parens in population: 0.018
Minimum age in population: 241.6477399658934
Maximum age in population: 246.2283929376629
Average age in population: 244.1904264680364
Median age in population: 244.2057173588732
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.132
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 158931689
--- Timings ---
Current time: 1529616616410 milliseconds
Total Time:         563.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.4 seconds, 43.5%
Fitness Testing:    255.0 seconds, 45.2%
Report:              63.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction tag_integer_419} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_swap} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_add} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub tag_integer_419 51 integer_sub integer_shove tag_integer_469 float_mult in1 integer_swap 57.87693811356892 in1 57.87693811356892 float_min integer_add integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times float_inc float_inc float_min integer_sub integer_sub integer_rot float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2806.1555740999897
Median total errors in population: 1148.1756
Error averages by case: (77.0038115 3.049 71.65838470000003 2.606 112.7918780999991 9.1 140.77582059999997 12.104 100.17048659999998 3.157 83.7038837 2.45 146.96963650000004 3.846 74.08191339999999 4.012 155.2212767 4.141 141.74905429999998 10.524 124.77250819999995 11.314 166.40258359999996 2.582 113.00684409999998 13.078 76.06975639999999 2.274 134.04040289999995 3.312 71.52143949999981 7.398 68.97089040000057 9.117 73.2985124 2.944 68.67827699999997 2.371 124.05227279999859 9.088 105.0893397 4.127 124.88869890000001 3.102 148.07336390000003 3.433 71.99229110000013 9.025 80.9472471 12.071)
Error minima by case: (0.0 0 0.0 0 0.5409 1 0.1753 8 4.7325 1 1.0 1 5.4163 1 2.0 1 27.463 2 6.1692 8 0.1231 8 23.1892 1 8.537 8 0.0 0 14.1075 2 0.0311 2 0.1625 1 0.0 0 0.0 0 0.4589 1 6.0492 2 7.1231 1 5.1324 2 0.0976 1 5.0736 1)
Average genome size in population (length): 54.521
Average program size in population (points): 55.521
Average percent parens in population: 0.018
Minimum age in population: 243.1187218996194
Maximum age in population: 247.5814235889192
Average age in population: 245.6007280220562
Median age in population: 245.6136540109005
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.149
Error (vector) diversity:			 0.158
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 160295714
--- Timings ---
Current time: 1529616620065 milliseconds
Total Time:         567.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.8 seconds, 43.5%
Fitness Testing:    256.8 seconds, 45.3%
Report:              63.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction tag_integer_419} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_swap} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_add} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_dup_times} {:instruction float_flush} {:instruction integer_dup_times} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_max integer_stackdepth 51 integer_sub tag_integer_419 51 integer_sub integer_shove tag_integer_469 float_mult in1 integer_swap 57.87693811356892 in1 57.87693811356892 float_min integer_add integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_dup_times float_flush integer_dup_times float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3498.4425252999895
Median total errors in population: 1148.1756
Error averages by case: (104.16294650000002 3.464 100.50935319999998 2.771 140.1863275999994 9.264 166.73758480000004 12.194 128.29189740000004 3.492 111.66786870000001 2.859 172.37824499999994 3.87 103.80978400000001 4.275 180.81889450000003 4.522 167.66629690000002 10.589 151.2517894000001 11.367 191.69940930000004 2.977 140.89911329999998 13.138 104.1376593 2.638 161.53863850000005 3.618 100.39278489999823 7.611 97.86249819999968 9.31 101.68773449999999 3.301 97.0832106 2.748 151.0749082999996 9.233 132.4775226 4.48 151.8430108000001 3.467 173.98919320000005 3.808 100.7400043999989 9.15 109.23084940000001 12.159)
Error minima by case: (1.0 1 0.0 0 0.4591 1 15.4402 8 0.2675 1 1.0 1 1.3711 1 0.4137 1 28.6263 2 9.0957 9 9.1231 8 24.1892 1 3.5598 8 0.0 0 24.0208 2 0.0311 2 0.0403 1 0.0 0 0.0 0 0.1281 1 22.0 2 3.5357 1 0.1324 2 0.0976 1 5.1344 2)
Average genome size in population (length): 54.46
Average program size in population (points): 55.46
Average percent parens in population: 0.018
Minimum age in population: 244.3833881179934
Maximum age in population: 249.0801993791128
Average age in population: 247.0269728593928
Median age in population: 247.0522311991035
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.144
Error (vector) diversity:			 0.157
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 161657814
--- Timings ---
Current time: 1529616624088 milliseconds
Total Time:         571.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.3 seconds, 43.5%
Fitness Testing:    258.6 seconds, 45.3%
Report:              64.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction -31} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_pop} {:instruction float_inc} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 -31 integer_stackdepth 51 integer_rot integer_dup_times tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub 57.87693811356892 in1 57.87693811356892 float_min 57.87693811356892 in1 integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_pop float_inc float_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2762.3508460999888
Median total errors in population: 1148.1756
Error averages by case: (75.01675010000002 3.032 69.01874740000002 2.446 110.81760239999936 9.164 138.97624319999997 12.09 97.87451299999998 3.101 81.41021769999998 2.408 145.99700199999998 3.722 74.2488084 3.797 153.42979530000002 4.117 139.93002290000004 10.462 122.73411789999997 11.24 164.4579427 2.551 111.81889619999997 13.051 74.14082140000001 2.244 132.0932198 3.279 69.76170309999982 7.429 66.36395020000074 9.182 72.29097099999998 2.951 67.27309269999999 2.345 122.12053199999865 9.147 103.37196239999997 4.127 122.8966623 3.1 146.20524310000002 3.388 69.44513450000024 9.083 81.15389439999998 12.047)
Error minima by case: (0.0 0 0.0 0 0.3752 1 16.4402 8 1.7305 1 1.0 1 30.8849 1 1.4959 1 39.5349 2 10.0957 8 2.4892 8 24.1892 1 3.7288 8 0.0 0 4.8401 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.4138 1 21.0 2 15.2084 1 4.1324 2 0.0976 1 2.1542 1)
Average genome size in population (length): 53.969
Average program size in population (points): 54.969
Average percent parens in population: 0.019
Minimum age in population: 245.3833881179934
Maximum age in population: 250.6926049479493
Average age in population: 248.413799445744
Median age in population: 248.4875917602172
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.134
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 163007764
--- Timings ---
Current time: 1529616627790 milliseconds
Total Time:         575.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.8 seconds, 43.4%
Fitness Testing:    260.4 seconds, 45.3%
Report:              64.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_inc} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_dup} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction integer_dup_times} {:instruction float_div} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_stackdepth} {:instruction float_inc} {:instruction integer_div} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float})
Best program: (integer_pop integer_shove tag_integer_469 float_inc tag_integer_469 float_mult float_dup 57.87693811356892 in1 integer_stackdepth float_rot float_tan integer_shove tag_integer_469 integer_dup_times float_div integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_stackdepth float_inc integer_div float_inc float_inc integer_dup_times print_float)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2948.6330444999894
Median total errors in population: 1148.1756
Error averages by case: (85.35342370000001 3.171 75.132144 2.547 117.15374379999875 9.122 147.2381535 12.14 103.69741510000001 3.225 90.72029839999999 2.538 154.75112339999995 3.743 83.21161140000004 4.015 161.73720169999999 4.211 148.14434180000003 10.506 131.2348725 11.297 172.73294899999996 2.655 117.55683219999996 13.101 83.06590139999997 2.35 137.9755596 3.351 74.84521019999893 7.417 72.27223210000055 9.14 79.0615862 3.013 74.3925321 2.445 127.86195949999819 9.094 111.98549300000003 4.183 129.92915390000002 3.172 154.57741760000002 3.475 75.29278259999941 9.043 87.7181058 12.037)
Error minima by case: (0.0 0 0.0 0 0.626 1 9.4287 8 4.7325 1 1.0 1 28.5301 1 2.0 1 31.1231 1 3.0842 9 0.1231 8 22.1892 1 4.8769 8 0.0 0 41.6935 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.1281 1 21.0 2 21.2084 1 5.1324 2 0.0976 1 5.05 1)
Average genome size in population (length): 53.656
Average program size in population (points): 54.656
Average percent parens in population: 0.019
Minimum age in population: 247.1656136343964
Maximum age in population: 251.8808076981247
Average age in population: 249.8573683078441
Median age in population: 249.8683779822349
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.144
Error (vector) diversity:			 0.154
Behavioral diversity:				 0.154
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 164349739
--- Timings ---
Current time: 1529616631506 milliseconds
Total Time:         578.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.2 seconds, 43.4%
Fitness Testing:    262.3 seconds, 45.3%
Report:              65.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_flush} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction integer_dup} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_add} {:instruction integer_dup_times} {:instruction -30} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction 63} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_rot} {:instruction print_float} {:instruction in2} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_inc} {:instruction float_yankdup})
Best program: (float_dup in1 60.537048956669786 float_flush integer_stackdepth float_rot integer_dup in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_add integer_dup_times -30 57.87693811356892 in1 57.87693811356892 float_min 63 integer_rot float_inc integer_dup_times -30 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_rot print_float in2 integer_add float_dup_items float_inc float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2861.972696199989
Median total errors in population: 1148.1756
Error averages by case: (78.10203539999998 3.182 73.45944100000004 2.544 114.2447810999991 9.187 140.43606089999997 12.108 102.0504336 3.227 84.89990309999997 2.574 150.9640217 3.718 78.77809529999999 3.996 157.12830140000003 4.269 141.3290776 10.481 124.5141 11.262 168.59843089999998 2.682 115.71197859999992 13.063 77.31137030000001 2.386 136.41993839999998 3.395 73.59335219999988 7.512 70.98418360000062 9.189 77.0847407 3.046 72.80859669999998 2.481 126.41971799999878 9.171 106.79700670000003 4.234 127.71539039999999 3.199 150.45721570000006 3.566 74.00364710000025 9.11 86.50687579999996 12.072)
Error minima by case: (1.0 1 0.0 0 0.1273 1 18.1003 7 1.7016 1 1.0 1 5.3561 1 1.4959 1 38.5349 2 11.7558 8 12.8655 7 23.1892 1 5.5932 7 0.0 0 35.6646 2 0.0311 1 0.1478 1 0.0 0 0.0 0 0.5411 1 21.0 2 15.1796 1 4.1324 2 0.0976 1 1.9264 1)
Average genome size in population (length): 54.127
Average program size in population (points): 55.127
Average percent parens in population: 0.019
Minimum age in population: 248.6795971773609
Maximum age in population: 253.121385109724
Average age in population: 251.2543637295979
Median age in population: 251.2943300559323
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.808
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.808
Total error diversity:				 0.142
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.151
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 165703489
--- Timings ---
Current time: 1529616635265 milliseconds
Total Time:         582.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.8 seconds, 43.4%
Fitness Testing:    264.1 seconds, 45.3%
Report:              65.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tag_float_379} {:instruction in1} {:instruction 60.537048956669786} {:instruction in1} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_mult} {:instruction in1} {:instruction integer_swap} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction float_dup} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_div} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction float_rot} {:instruction integer_min} {:instruction integer_dup_times})
Best program: (tag_float_379 in1 60.537048956669786 in1 float_mult in1 60.537048956669786 float_mult in1 integer_swap integer_stackdepth 65.91543778980733 integer_sub integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_dup_items integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_dup_items integer_rot float_inc integer_sub float_dup float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times integer_div 28 float_inc float_inc integer_dup_times print_float float_rot integer_min integer_dup_times)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3151.652222399989
Median total errors in population: 1148.1756
Error averages by case: (91.99152430000001 3.246 87.43103299999997 2.616 125.97919999999854 9.176 154.6290844 12.135 113.75858289999998 3.31 99.15924910000001 2.635 159.63387749999995 3.802 86.47912620000001 4.243 169.31161110000002 4.326 155.54039930000005 10.537 138.92521690000004 11.322 180.54218719999997 2.764 126.91314089999996 13.079 91.6568275 2.471 147.65647199999998 3.47 84.82040259999874 7.507 82.91143300000002 9.198 86.94137659999997 3.091 81.78092260000003 2.513 137.136267199999 9.151 120.51722419999999 4.301 138.44774399999997 3.235 162.62308060000007 3.596 84.89459219999924 9.083 89.14364710000004 12.021)
Error minima by case: (0.0 0 0.0 0 0.0964 1 18.4402 7 3.7325 1 4.0 1 19.3417 1 0.0634 1 38.5349 2 12.0957 9 16.3796 7 23.1892 1 7.3754 8 0.0 0 17.2756 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.2574 2 21.0 2 3.2095 1 4.1324 2 0.0976 1 6.1474 1)
Average genome size in population (length): 54.712
Average program size in population (points): 55.712
Average percent parens in population: 0.018
Minimum age in population: 250.3111254306421
Maximum age in population: 254.7309688116167
Average age in population: 252.7213692785933
Median age in population: 252.7717724884658
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.794
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.794
Total error diversity:				 0.161
Error (vector) diversity:			 0.169
Behavioral diversity:				 0.17
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 167071839
--- Timings ---
Current time: 1529616639205 milliseconds
Total Time:         586.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       254.3 seconds, 43.4%
Fitness Testing:    265.9 seconds, 45.3%
Report:              66.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction float_div} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_mult} {:instruction integer_add} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 58.68684012172393} {:instruction float_dup} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_rot} {:instruction integer_add} {:instruction integer_stackdepth} {:instruction 66.49758398113475} {:instruction integer_sub} {:instruction integer_shove} {:instruction float_dup} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mod float_div integer_sub integer_shove float_mult integer_add in1 57.87693811356892 in1 58.68684012172393 float_dup 57.87693811356892 in1 integer_rot integer_add integer_stackdepth 66.49758398113475 integer_sub integer_shove float_dup float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3080.0068554999893
Median total errors in population: 1148.1756
Error averages by case: (86.4298506 3.237 83.0682687 2.631 124.6748137999986 9.196 149.38669239999996 12.105 111.38372520000001 3.324 94.33648149999999 2.64 157.23035859999996 3.843 86.48171510000002 4.025 165.2997052 4.336 150.34968720000006 10.497 133.8788382 11.283 176.56061700000004 2.777 125.02320589999994 13.062 87.0162053 2.496 145.21827950000008 3.465 82.90418849999837 7.528 80.26477990000012 9.202 84.91799290000002 3.148 80.17455239999997 2.568 135.77025219999857 9.176 116.09595879999998 4.307 135.2402525 3.285 158.54239030000005 3.62 83.22400979999894 9.117 93.63903400000004 12.027)
Error minima by case: (0.0 0 0.4596 1 0.1231 1 14.4367 8 2.3521 1 2.369 1 30.7183 1 1.4959 1 38.5349 2 11.0957 9 0.1231 8 23.1892 1 3.6246 8 0.0 0 15.1231 2 0.0311 2 0.0598 1 0.0 0 0.0 0 0.4138 1 22.0 2 7.1231 1 5.1324 2 0.0976 1 2.05 1)
Average genome size in population (length): 54.415
Average program size in population (points): 55.415
Average percent parens in population: 0.019
Minimum age in population: 251.4636931880454
Maximum age in population: 256.2058726752855
Average age in population: 254.1703036542662
Median age in population: 254.2310102860994
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.152
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.161
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 168432664
--- Timings ---
Current time: 1529616643057 milliseconds
Total Time:         590.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.8 seconds, 43.3%
Fitness Testing:    267.8 seconds, 45.4%
Report:              66.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_inc} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_stackdepth} {:instruction float_rot} {:instruction float_tan} {:instruction integer_shove} {:instruction float_rot} {:instruction integer_dup_items} {:instruction in1} {:instruction integer_stackdepth} {:instruction float_max} {:instruction integer_stackdepth} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_shove} {:instruction float_dup_times} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_add} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup})
Best program: (integer_pop integer_shove tag_integer_469 float_inc tag_integer_469 float_mult in1 integer_stackdepth float_rot float_tan integer_shove float_rot integer_dup_items in1 integer_stackdepth float_max integer_stackdepth integer_sub integer_shove tag_integer_469 float_shove float_dup_times 57.87693811356892 in1 57.87693811356892 float_add 57.87693811356892 in1 integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3308.0766446999887
Median total errors in population: 1148.1756
Error averages by case: (101.58647080000001 3.326 89.8661108 2.549 131.541457099999 9.178 161.62998910000002 12.204 117.7856993 3.274 106.70065660000002 2.683 167.96913369999996 3.769 94.4716593 4.082 176.83914320000002 4.368 162.56102130000005 10.566 146.015005 11.35 187.66953999999998 2.8 131.19796979999995 13.14 99.22228290000002 2.503 151.35366689999998 3.454 89.38069089999856 7.476 86.40558989999988 9.189 92.57799569999999 3.118 88.05937010000001 2.556 142.09910019999924 9.158 127.98789439999999 4.35 142.57490939999997 3.276 170.07013200000003 3.641 90.38874229999898 9.081 98.97441399999998 12.057)
Error minima by case: (0.0 0 0.0 0 0.3008 1 2.3202 7 1.6479 1 1.9629 1 28.5965 1 1.4959 1 67.6453 2 2.0243 8 0.7366 7 36.5662 1 3.3754 7 0.0 0 10.1231 2 0.0311 2 0.188 1 0.0 0 0.0 0 1.1188 1 21.0 2 2.1231 1 68.0 2 0.0976 1 4.95 1)
Average genome size in population (length): 54.36
Average program size in population (points): 55.36
Average percent parens in population: 0.019
Minimum age in population: 252.4636931880454
Maximum age in population: 257.4887486630713
Average age in population: 255.592933747336
Median age in population: 255.6515030497261
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.144
Error (vector) diversity:			 0.158
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 169792314
--- Timings ---
Current time: 1529616646925 milliseconds
Total Time:         594.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       257.4 seconds, 43.3%
Fitness Testing:    269.5 seconds, 45.4%
Report:              67.1 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_shove} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction integer_dec} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_yank})
Best program: (float_mult in1 float_mult integer_stackdepth 65.91543778980733 integer_stackdepth 51 integer_sub 60.537048956669786 float_max integer_sub integer_shove tag_integer_469 float_shove in1 57.87693811356892 in1 57.87693811356892 integer_dec 57.87693811356892 in1 integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_rot float_inc integer_shove float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 29 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items integer_yank)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2875.632222399989
Median total errors in population: 1148.1756
Error averages by case: (79.82495380000002 3.11 74.57200569999998 2.59 115.28704979999942 9.102 142.54286409999997 12.087 103.16268020000001 3.223 85.81421260000003 2.485 150.46848569999997 3.75 77.7046247 4.037 157.35027610000003 4.191 143.4525659 10.461 126.37149699999998 11.274 168.58410730000008 2.617 116.02615639999999 13.046 78.2301943 2.321 137.21319820000005 3.381 74.20703339999939 7.394 71.6015429000004 9.115 77.38688040000004 3.008 72.87377639999998 2.423 126.57182379999865 9.067 107.41046470000002 4.173 128.580317 3.162 150.4025874 3.476 74.64888839999976 8.999 84.82303619999999 12.029)
Error minima by case: (0.0 0 0.0 0 0.5579 1 14.0908 9 7.3005 1 2.0 1 29.1231 1 1.0 1 31.1231 2 11.0957 8 1.3907 8 42.1231 1 4.615 9 0.0 0 16.3237 2 0.0311 1 0.0485 1 0.0445 1 0.0 0 1.1664 2 21.0 2 4.1614 1 22.1231 2 0.0976 1 3.0404 1)
Average genome size in population (length): 54.258
Average program size in population (points): 55.258
Average percent parens in population: 0.019
Minimum age in population: 253.4636931880454
Maximum age in population: 259.1067165889281
Average age in population: 256.9989138410254
Median age in population: 257.0175453049647
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.142
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 171149414
--- Timings ---
Current time: 1529616650636 milliseconds
Total Time:         597.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.8 seconds, 43.3%
Fitness Testing:    271.4 seconds, 45.4%
Report:              67.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_stackdepth} {:instruction 60.537048956669786} {:instruction float_max} {:instruction float_shove} {:instruction 51} {:instruction float_dup_times} {:instruction tag_integer_419} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_swap} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_add} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_add})
Best program: (float_dup_items float_stackdepth 60.537048956669786 float_max float_shove 51 float_dup_times tag_integer_419 51 integer_sub integer_shove tag_integer_469 float_mult in1 integer_swap 57.87693811356892 in1 57.87693811356892 float_min integer_add integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times float_inc float_inc float_min integer_sub float_dup integer_rot float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3223.6004257999894
Median total errors in population: 1148.1756
Error averages by case: (92.4192849 3.225 89.9188578 2.703 130.5346256999987 9.264 155.52422639999998 12.151 118.23192780000004 3.28 99.1885895 2.603 162.23289579999997 3.92 92.01337800000005 4.037 169.74047350000004 4.266 156.5070552 10.534 139.68372340000002 11.324 180.6087696 2.768 131.5120243 13.102 91.64139249999998 2.408 152.0087886 3.466 89.76264089999859 7.566 87.20229460000013 9.283 90.94508640000002 3.094 85.5009897 2.507 141.59815279999916 9.221 120.41786790000006 4.267 142.50806129999998 3.24 162.60718680000002 3.57 90.19581749999905 9.166 98.00931490000004 12.122)
Error minima by case: (0.0 0 0.0 0 0.1231 1 8.5633 9 3.7325 1 2.0 1 61.4163 1 1.8857 1 38.5349 2 2.2187 8 0.1231 9 23.1892 1 1.0335 8 0.0 0 42.3151 2 0.0311 1 0.2928 2 0.0 0 0.0 0 0.4138 1 20.0 2 21.83 1 4.1324 2 0.0976 1 0.5412 1)
Average genome size in population (length): 54.627
Average program size in population (points): 55.627
Average percent parens in population: 0.018
Minimum age in population: 255.6409847416118
Maximum age in population: 260.3991288634517
Average age in population: 258.4366163499086
Median age in population: 258.5014767377038
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.136
Error (vector) diversity:			 0.146
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 172515814
--- Timings ---
Current time: 1529616654363 milliseconds
Total Time:         601.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       260.4 seconds, 43.3%
Fitness Testing:    273.2 seconds, 45.4%
Report:              68.0 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_dec} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_yank} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction float_mult} {:instruction float_shove} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction tag_integer_774} {:instruction float_tan} {:instruction integer_add} {:instruction float_yankdup})
Best program: (float_mult print_float 60.537048956669786 float_max integer_dec float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_yank tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove float_mult float_shove in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot integer_rot float_inc integer_dup_times -30 29 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_dup_items integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times float_inc float_inc integer_dup_times print_float integer_yankdup integer_add tag_integer_774 float_tan integer_add float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3301.6679513999893
Median total errors in population: 1148.1756
Error averages by case: (96.49978049999993 3.262 91.60563979999996 2.616 133.8398989999986 9.193 158.48384400000006 12.206 119.95278320000001 3.298 102.38932050000003 2.65 167.44753359999999 3.796 96.70644860000003 4.166 172.4884691 4.326 159.38290870000003 10.595 142.62505810000002 11.37 183.36798640000006 2.77 133.67702750000004 13.173 94.7478771 2.46 153.58024540000002 3.442 91.54661949999792 7.507 88.98731209999949 9.2 95.44518430000004 3.102 91.1789569 2.552 144.1135747999995 9.133 123.16740409999996 4.283 145.2355436 3.269 165.42894210000009 3.62 91.99675339999847 9.079 104.53283910000002 12.172)
Error minima by case: (0.0 0 0.0 0 0.316 1 13.4367 9 4.7325 1 2.0 1 2.629 1 3.0 1 36.4198 2 10.3537 8 0.7366 8 23.1892 1 15.3754 8 0.0 0 39.7725 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.4589 1 22.0 2 19.2874 1 5.1324 2 0.0976 1 1.9264 1)
Average genome size in population (length): 54.473
Average program size in population (points): 55.473
Average percent parens in population: 0.018
Minimum age in population: 256.6409847416118
Maximum age in population: 261.8663861015117
Average age in population: 259.8535183014354
Median age in population: 259.9300922441918
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.839
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.839
Total error diversity:				 0.123
Error (vector) diversity:			 0.133
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 173878089
--- Timings ---
Current time: 1529616658303 milliseconds
Total Time:         605.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       261.9 seconds, 43.3%
Fitness Testing:    275.1 seconds, 45.4%
Report:              68.4 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction float_mult} {:instruction integer_stackdepth} {:instruction 65.91543778980733} {:instruction integer_stackdepth} {:instruction 51} {:instruction integer_sub} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_dup} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_fromfloat} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction float_tan})
Best program: (float_mult in1 float_mult integer_stackdepth 65.91543778980733 integer_stackdepth 51 integer_sub 60.537048956669786 float_max integer_sub integer_shove tag_integer_469 in1 57.87693811356892 in1 float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_inc float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times float_dup 28 float_inc float_inc integer_dup_times print_float integer_fromfloat integer_stackdepth float_dup_items float_tan)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2756.0167187999887
Median total errors in population: 1148.1756
Error averages by case: (76.72162570000003 3.116 67.84388190000003 2.443 108.92489149999903 9.101 139.37394609999998 12.065 96.75654770000004 3.145 83.04726019999997 2.429 146.6055254 3.661 73.71463990000001 3.991 155.02580490000003 4.149 140.3318551 10.433 123.45112190000002 11.235 166.31001700000002 2.566 109.83654859999999 13.018 75.5299285 2.295 130.8744407 3.298 67.71549099999964 7.386 65.11249560000081 9.126 70.34793769999999 2.981 65.6670226 2.362 120.2123065999986 9.05 105.03568330000002 4.137 121.5708362 3.123 148.04420960000007 3.425 68.16486359999993 9.037 80.20083750000002 12.025)
Error minima by case: (0.0 0 0.0 0 0.2422 1 8.4367 9 2.2675 1 2.0 1 17.8212 1 2.3175 1 45.5349 2 8.2187 9 0.1231 8 30.1892 1 7.3754 8 0.0 0 15.1231 2 0.0311 1 0.2928 1 0.0445 1 0.0 0 0.1188 1 23.0 2 7.1231 1 1.8676 2 0.0879 1 8.95 1)
Average genome size in population (length): 54.759
Average program size in population (points): 55.759
Average percent parens in population: 0.018
Minimum age in population: 257.6409847416118
Maximum age in population: 263.7988895369671
Average age in population: 261.2926576509928
Median age in population: 261.3334202060333
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.815
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.815
Total error diversity:				 0.151
Error (vector) diversity:			 0.162
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 175247539
--- Timings ---
Current time: 1529616661872 milliseconds
Total Time:         609.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       263.3 seconds, 43.2%
Fitness Testing:    276.8 seconds, 45.4%
Report:              68.9 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction float_swap} {:instruction float_min} {:instruction float_yankdup} {:instruction float_dup} {:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction in1} {:instruction 57.87693811356892} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_dup} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_items} {:instruction float_tan})
Best program: (integer_add float_swap float_min float_yankdup float_dup float_mult in1 60.537048956669786 in1 57.87693811356892 integer_sub integer_shove tag_integer_469 in1 57.87693811356892 in1 float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times float_dup 28 float_inc float_inc integer_dup_times print_float integer_fromfloat in2 float_dup_items float_tan)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3299.1165706999886
Median total errors in population: 1148.1756
Error averages by case: (97.95339560000001 3.363 90.58332759999999 2.762 130.69145509999876 9.315 159.3566003 12.159 118.3926203 3.401 105.22699440000001 2.746 168.4114237 3.929 94.1288701 4.054 175.49219950000008 4.444 160.27401160000002 10.502 143.7614436 11.329 186.6895611000001 2.889 132.212935 13.092 98.0040781 2.603 151.84219800000002 3.524 90.29463989999861 7.601 87.65035989999994 9.325 93.23333079999999 3.239 88.5712605 2.636 141.6599132999993 9.241 126.9208762 4.426 142.67393909999998 3.365 168.91522770000006 3.711 90.68147889999906 9.191 100.60243039999999 12.045)
Error minima by case: (0.0 0 0.0 0 0.774 1 5.3751 9 5.9127 1 0.0 0 8.6389 1 0.2283 1 47.6878 2 0.9694 8 1.1231 8 85.0334 1 10.3754 8 0.0 0 12.463 2 0.0311 1 0.188 1 0.0 0 0.0 0 0.043 1 21.0 2 4.463 1 68.0 2 0.0976 1 10.0 1)
Average genome size in population (length): 54.734
Average program size in population (points): 55.734
Average percent parens in population: 0.018
Minimum age in population: 260.0408008527254
Maximum age in population: 264.6499051495254
Average age in population: 262.7776885822616
Median age in population: 262.8205119993005
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.148
Error (vector) diversity:			 0.157
Behavioral diversity:				 0.158
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 176616364
--- Timings ---
Current time: 1529616665673 milliseconds
Total Time:         612.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       264.7 seconds, 43.2%
Fitness Testing:    278.7 seconds, 45.5%
Report:              69.4 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_shove} {:instruction integer_yank} {:instruction 51} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_inc} {:instruction integer_pop} {:instruction tag_integer_544} {:instruction float_flush} {:instruction integer_add} {:instruction 57.50446115114394} {:instruction in1} {:instruction float_dup_items} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction 57.87693811356892} {:instruction in1} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction 79} {:instruction integer_rot} {:instruction float_inc} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction integer_swap} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction float_yankdup} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_shove integer_yank 51 integer_stackdepth 51 float_inc integer_pop tag_integer_544 float_flush integer_add 57.50446115114394 in1 float_dup_items float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times -30 28 float_inc 57.87693811356892 in1 float_inc integer_dup_times -30 29 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min 79 integer_rot float_inc float_stackdepth integer_rot float_inc integer_inc float_inc integer_dup_times float_inc integer_dup_times -30 integer_swap float_inc float_inc integer_dup_times print_float integer_yankdup float_yankdup integer_yankdup float_sub float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3179.8855249999892
Median total errors in population: 1148.1756
Error averages by case: (90.44706579999999 3.189 87.8201115 2.605 129.00752049999883 9.253 154.7193057 12.148 116.19809620000002 3.266 96.5440768 2.583 162.03671079999992 3.87 90.01792380000002 4.063 167.06380260000006 4.29 153.78330019999999 10.567 136.8725626 11.379 178.0830815 2.732 130.02197640000003 13.129 89.02947560000001 2.418 149.92971029999998 3.428 87.50540989999884 7.566 85.05777840000012 9.263 90.64043090000001 3.105 87.00449910000002 2.529 140.19783479999916 9.208 117.48942560000002 4.252 141.59654270000004 3.251 159.92241780000003 3.578 88.02431199999918 9.149 97.94615350000002 12.105)
Error minima by case: (0.0 0 0.0 0 0.5409 1 8.9159 8 0.8253 1 3.0 1 23.1231 1 3.1648 1 25.1231 2 7.9159 9 0.7366 8 24.1892 1 7.5598 8 0.0 0 11.9159 2 0.0311 2 0.2166 1 0.0 0 0.0 0 0.4589 1 21.0 2 10.1231 1 4.1324 2 0.0976 1 0.0736 1)
Average genome size in population (length): 54.562
Average program size in population (points): 55.562
Average percent parens in population: 0.019
Minimum age in population: 261.2330309950798
Maximum age in population: 266.1522274632972
Average age in population: 264.1670095879296
Median age in population: 264.2032988939627
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.795
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.795
Total error diversity:				 0.136
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 177980839
--- Timings ---
Current time: 1529616669597 milliseconds
Total Time:         616.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       266.3 seconds, 43.2%
Fitness Testing:    280.5 seconds, 45.5%
Report:              69.8 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction 60.537048956669786} {:instruction integer_flush} {:instruction in1} {:instruction integer_div} {:instruction float_max} {:instruction integer_add} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction tagged_255} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_mod} {:instruction float_inc} {:instruction integer_mod} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_inc})
Best program: (float_rot 60.537048956669786 integer_flush in1 integer_div float_max integer_add 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_inc integer_dup_times integer_mod 28 28 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub tagged_255 float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_mod float_inc integer_mod -30 28 float_inc float_inc integer_dup_times print_float in2 integer_inc)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3266.407520799989
Median total errors in population: 1148.1756
Error averages by case: (95.97964959999995 3.381 89.3806449 2.754 129.64811919999846 9.315 157.53137190000007 12.156 117.24957440000001 3.472 102.68484579999999 2.799 164.7601668999999 3.933 94.32772160000002 4.099 172.98614180000007 4.517 157.43833190000004 10.529 141.0458487 11.302 184.3722626 2.934 131.1398418 13.097 95.4403602 2.65 150.90961510000002 3.604 89.25369329999847 7.592 86.64934330000006 9.307 94.01234520000003 3.308 89.27186799999997 2.761 140.6422221999987 9.234 124.50388639999998 4.457 142.87204779999996 3.452 166.57626830000007 3.764 89.62348919999904 9.171 102.38886070000001 12.131)
Error minima by case: (0.0 0 0.0 0 0.4591 1 12.5262 9 3.7325 1 1.0 1 16.58 1 1.8773 1 39.5349 2 9.0957 9 0.1231 8 24.1892 1 4.6246 8 0.0 0 15.1231 2 0.0311 1 0.1835 1 0.0373 1 1.0 1 0.4061 1 21.0 2 0.9494 1 4.1324 2 0.0976 1 2.6722 1)
Average genome size in population (length): 55.068
Average program size in population (points): 56.068
Average percent parens in population: 0.018
Minimum age in population: 262.2330309950798
Maximum age in population: 267.479816391834
Average age in population: 265.5902620078764
Median age in population: 265.6199948333575
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.149
Error (vector) diversity:			 0.163
Behavioral diversity:				 0.164
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 179357989
--- Timings ---
Current time: 1529616673677 milliseconds
Total Time:         620.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.8 seconds, 43.1%
Fitness Testing:    282.6 seconds, 45.5%
Report:              70.4 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_shove} {:instruction integer_yank} {:instruction 51} {:instruction integer_stackdepth} {:instruction 51} {:instruction float_inc} {:instruction integer_pop} {:instruction tag_integer_544} {:instruction float_flush} {:instruction integer_add} {:instruction 57.50446115114394} {:instruction in1} {:instruction float_dup_items} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 29} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction float_dup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_min} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction tagged_361} {:instruction print_float})
Best program: (float_mult in1 60.537048956669786 float_shove integer_yank 51 integer_stackdepth 51 float_inc integer_pop tag_integer_544 float_flush integer_add 57.50446115114394 in1 float_dup_items float_mult in1 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot integer_sub integer_rot float_inc integer_dup_times -30 29 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min float_dup integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times integer_min 28 float_inc float_inc tagged_361 print_float)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3176.4079606999885
Median total errors in population: 1148.1756
Error averages by case: (93.22982989999997 3.205 85.9076411 2.645 126.91657959999878 9.207 154.3824413 12.204 114.32466519999998 3.269 98.40953060000001 2.586 162.9926012 3.797 90.99301320000001 4.068 169.2202063 4.316 155.27797360000005 10.577 138.52624380000006 11.344 180.15198529999998 2.701 128.05894389999995 13.146 90.83377140000002 2.44 148.1397688 3.44 85.84881929999861 7.516 83.29239399999999 9.236 89.4766198 3.12 84.6546323 2.533 138.03564989999924 9.188 119.6685217 4.264 139.89112949999998 3.275 162.14018240000007 3.555 86.29647109999915 9.15 96.8663455 12.09)
Error minima by case: (0.0 0 0.0 0 0.599 1 9.6148 10 10.3906 1 0.0 0 40.4163 1 1.0 1 78.0 2 6.0842 9 0.1231 8 89.0 1 7.2512 9 0.0 0 12.463 2 0.0311 1 0.0666 1 0.0 0 0.0 0 0.2751 1 22.0 2 4.463 1 69.0 2 0.0976 1 2.6722 1)
Average genome size in population (length): 55.02
Average program size in population (points): 56.02
Average percent parens in population: 0.018
Minimum age in population: 264.66282603851
Maximum age in population: 269.0013802592163
Average age in population: 267.0310710263441
Median age in population: 267.0565174550127
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.146
Error (vector) diversity:			 0.16
Behavioral diversity:				 0.16
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 180733989
--- Timings ---
Current time: 1529616677301 milliseconds
Total Time:         624.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       269.2 seconds, 43.1%
Fitness Testing:    284.4 seconds, 45.5%
Report:              70.9 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_items} {:instruction float_stackdepth} {:instruction 60.537048956669786} {:instruction float_pop} {:instruction float_shove} {:instruction 51} {:instruction float_dup_times} {:instruction tag_integer_419} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_swap} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_add} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction float_dup} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan} {:instruction integer_add})
Best program: (float_dup_items float_stackdepth 60.537048956669786 float_pop float_shove 51 float_dup_times tag_integer_419 51 integer_sub integer_shove tag_integer_469 float_mult in1 integer_swap 57.87693811356892 in1 57.87693811356892 float_min integer_add integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times float_inc float_inc float_min integer_sub float_dup integer_rot float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items float_tan integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3255.8308394999895
Median total errors in population: 1148.1756
Error averages by case: (95.06819610000001 3.37 89.32054659999997 2.755 129.50566109999897 9.23 155.461612 12.091 117.8663261 3.436 101.69329079999999 2.734 165.52605629999996 3.964 93.62650810000002 3.935 172.3022069 4.479 156.29018400000004 10.456 139.90357429999995 11.243 183.45755019999996 2.897 132.20213879999994 13.065 94.49694989999998 2.629 151.5207914 3.556 89.7167115999984 7.549 86.17431939999962 9.262 93.9011831 3.29 88.9660657 2.704 140.57402079999935 9.208 123.5804672 4.443 142.73580459999997 3.421 165.75794760000005 3.741 89.51773859999896 9.154 102.01298830000002 12.04)
Error minima by case: (1.0 1 0.0 0 0.316 1 3.8699 9 0.7305 1 1.0 1 4.1979 1 1.4959 1 39.5349 2 6.4342 8 0.1231 8 24.1892 1 9.9256 8 0.0 0 14.3132 2 0.0311 1 0.2928 1 0.2387 1 0.0 0 0.2677 2 8.2717 2 6.3132 1 4.1324 2 0.0976 1 0.0475 1)
Average genome size in population (length): 54.547
Average program size in population (points): 55.547
Average percent parens in population: 0.019
Minimum age in population: 265.8261406593858
Maximum age in population: 270.3654567291458
Average age in population: 268.4695745460782
Median age in population: 268.4988878578653
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.801
Total error diversity:				 0.137
Error (vector) diversity:			 0.145
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 182098189
--- Timings ---
Current time: 1529616681097 milliseconds
Total Time:         628.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.7 seconds, 43.1%
Fitness Testing:    286.3 seconds, 45.6%
Report:              71.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction integer_stackdepth} {:instruction in1} {:instruction integer_pop} {:instruction integer_swap} {:instruction 60.537048956669786} {:instruction float_max} {:instruction float_shove} {:instruction 51} {:instruction float_dup_times} {:instruction tag_integer_419} {:instruction 51} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction integer_swap} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -28} {:instruction 30} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 27} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_add} {:instruction float_dup_items} {:instruction integer_sub} {:instruction float_yankdup})
Best program: (float_mult in1 integer_stackdepth in1 integer_pop integer_swap 60.537048956669786 float_max float_shove 51 float_dup_times tag_integer_419 51 integer_sub integer_shove tag_integer_469 float_mult in1 integer_swap 57.87693811356892 in1 57.87693811356892 float_min integer_rot float_inc integer_dup_times -30 28 float_inc float_inc float_inc integer_dup_times -28 30 float_inc float_inc float_min float_dup_items integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 27 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add float_dup_items integer_add float_dup_items integer_sub float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3145.77066469999
Median total errors in population: 1148.1756
Error averages by case: (89.46161610000001 3.187 85.60773039999998 2.571 126.8988536999993 9.191 151.7964057 12.185 114.15182740000002 3.273 95.26293519999999 2.556 161.46330189999998 3.847 91.23546379999996 4.005 166.2895081 4.275 152.68180889999996 10.543 135.8274307 11.351 177.17593559999992 2.694 128.04091900000003 13.147 87.68436480000001 2.414 148.01058210000002 3.374 85.48984149999893 7.49 82.80802199999988 9.219 89.6924834 3.099 85.1660156 2.496 138.20114619999927 9.161 116.51113920000002 4.269 139.5664877 3.253 159.15176660000003 3.538 85.7788690999994 9.103 99.45221 12.123)
Error minima by case: (0.0 0 0.0 0 0.4099 1 17.4402 8 8.7305 1 1.0 1 18.1231 1 2.0 1 20.1231 2 11.0957 8 0.1231 8 31.1231 1 9.3754 9 0.0 0 16.1231 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.4206 1 22.0 2 8.1231 1 11.1231 2 0.0976 1 2.0475 1)
Average genome size in population (length): 54.578
Average program size in population (points): 55.578
Average percent parens in population: 0.019
Minimum age in population: 267.5138175559557
Maximum age in population: 271.8706480160903
Average age in population: 269.9127246807492
Median age in population: 269.9328505917074
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.137
Error (vector) diversity:			 0.148
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 183463064
--- Timings ---
Current time: 1529616684822 milliseconds
Total Time:         632.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       272.2 seconds, 43.1%
Fitness Testing:    288.0 seconds, 45.6%
Report:              71.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_stackdepth} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_yank} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 27} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_yankdup} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_tan})
Best program: (integer_rot 57.87693811356892 in1 57.87693811356892 float_min float_inc integer_dup_times float_stackdepth integer_dup_times float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc float_min integer_sub integer_yank float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times -30 27 float_inc float_inc integer_dup_times print_float integer_yankdup integer_add integer_yankdup integer_add float_dup_items float_tan)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 3309.30027079999
Median total errors in population: 1148.1756
Error averages by case: (96.10308650000002 3.362 93.35524179999999 2.801 133.4986781999991 9.117 157.6535155 12.053 121.6604335 3.44 103.6376517 2.798 166.30027719999998 4.03 92.9345195 4.095 173.4072961 4.462 158.5467957 10.501 142.00634689999998 11.264 184.62995949999996 2.975 134.52833470000002 13.025 96.52912250000001 2.656 154.5395289 3.593 93.0907930999987 7.491 90.89219559999985 9.153 94.9539511 3.259 90.0184004 2.674 144.69362269999922 9.086 125.1811243 4.441 145.04679220000003 3.398 167.14974380000004 3.784 93.9220425999991 9.057 100.4458168 12.06)
Error minima by case: (0.0 0 0.0 0 0.5409 1 1.8374 8 3.7305 1 0.0 0 28.1231 1 1.0 1 30.1231 2 11.0957 8 0.1231 8 22.1892 1 5.8769 8 0.0 0 15.1231 2 0.0311 1 0.2928 1 0.0778 1 0.0 0 1.3741 1 14.058 2 7.1231 1 4.1324 2 0.0976 1 2.0974 1)
Average genome size in population (length): 54.39
Average program size in population (points): 55.39
Average percent parens in population: 0.019
Minimum age in population: 269.2018622107098
Maximum age in population: 273.2727601485106
Average age in population: 271.3713725917598
Median age in population: 271.3980318632337
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.152
Error (vector) diversity:			 0.162
Behavioral diversity:				 0.163
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 184823314
--- Timings ---
Current time: 1529616688630 milliseconds
Total Time:         636.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.8 seconds, 43.1%
Fitness Testing:    289.9 seconds, 45.6%
Report:              72.2 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction tag_integer_302} {:instruction float_inc} {:instruction in1} {:instruction 57.87693811356892} {:instruction tag_integer_518} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction integer_sub} {:instruction 60.537048956669786} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 27} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction float_dup_items} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_rot} {:instruction integer_add} {:instruction float_dup_items} {:instruction float_div} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 tag_integer_469 float_mult in1 tag_integer_302 float_inc in1 57.87693811356892 tag_integer_518 float_mult in1 57.87693811356892 integer_sub 60.537048956669786 float_mult in1 57.87693811356892 in1 integer_sub integer_rot float_inc integer_dup_times -30 27 float_inc float_inc float_inc integer_dup_times -30 28 float_inc float_inc float_min float_dup_items integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times -30 28 float_inc float_inc integer_dup_times print_float integer_rot integer_add float_dup_items float_div float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3060.8162047999895
Median total errors in population: 1148.1756
Error averages by case: (88.55792049999997 3.299 80.18923240000004 2.674 121.7920210999991 9.096 150.56238909999996 12.089 108.28115240000001 3.326 96.33791279999997 2.685 156.5622765 3.868 84.47437240000001 4.11 167.3173131 4.365 151.19846040000007 10.492 134.78300659999996 11.247 178.5721841 2.831 122.62604229999995 13.038 88.9715818 2.551 142.28765429999999 3.487 80.05694929999926 7.421 77.61417080000025 9.125 83.1584858 3.142 77.9121094 2.571 132.9081961999991 9.065 118.68432789999999 4.357 133.10770939999995 3.285 160.70620790000004 3.65 80.64103259999966 9.016 90.68549569999998 12.038)
Error minima by case: (0.0 0 0.0 0 0.4988 1 8.4367 7 2.2675 1 1.0 1 1.6112 1 0.0 0 22.1231 1 11.9056 9 1.4336 8 19.1892 1 4.3754 8 0.0 0 19.1231 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.5411 1 13.058 2 11.1231 1 1.8676 2 0.0976 1 5.0025 1)
Average genome size in population (length): 54.805
Average program size in population (points): 55.805
Average percent parens in population: 0.019
Minimum age in population: 270.7791299410889
Maximum age in population: 275.0343726008094
Average age in population: 272.8669501641399
Median age in population: 272.9152931916175
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.15
Error (vector) diversity:			 0.159
Behavioral diversity:				 0.16
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 186194064
--- Timings ---
Current time: 1529616692325 milliseconds
Total Time:         639.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       275.2 seconds, 43.0%
Fitness Testing:    291.6 seconds, 45.6%
Report:              72.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 58726.952899999975
Test mean error for best: 29.36348
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction in1} {:instruction 60.537048956669786} {:instruction float_tan} {:instruction integer_shove} {:instruction tag_integer_523} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction float_mult} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction integer_sub} {:instruction integer_shove} {:instruction tag_integer_469} {:instruction in1} {:instruction 57.87693811356892} {:instruction in1} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_dup} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_pop} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_sub} {:instruction float_dup_items} {:instruction float_tan} {:instruction float_yankdup})
Best program: (float_mult in1 60.537048956669786 float_tan integer_shove tag_integer_523 integer_shove tag_integer_469 float_mult in1 57.87693811356892 in1 integer_sub integer_shove tag_integer_469 in1 57.87693811356892 in1 float_inc integer_swap -30 integer_dup float_inc float_inc float_inc integer_dup_times float_inc float_inc float_min integer_sub integer_rot float_inc integer_sub integer_rot float_inc integer_dup float_inc integer_dup_times float_inc integer_dup_times float_dup 28 float_inc float_inc integer_dup_times print_float integer_fromfloat float_inc float_pop integer_yankdup integer_rot integer_yankdup float_sub float_dup_items float_tan float_yankdup)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 22.0 12]
Total: 1148.1756
Mean: 22.963512
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3337.0750333999904
Median total errors in population: 1148.1756
Error averages by case: (97.82636419999997 3.367 94.35594779999998 2.843 133.67733069999898 9.184 160.54273419999998 12.098 122.27341579999997 3.505 106.43696240000003 2.788 165.7025974 4.016 96.30997980000004 4.282 175.30676130000003 4.496 161.36135570000005 10.492 145.07937059999998 11.287 186.4005437000001 2.952 134.6568026 13.03 99.17094130000001 2.681 155.32021680000003 3.658 93.27687599999842 7.552 90.82095429999983 9.206 93.588983 3.322 88.46289669999999 2.753 144.68468009999944 9.14 126.7364938 4.452 144.42776199999992 3.457 168.64597950000007 3.783 93.78143829999898 9.086 102.80064540000004 11.997)
Error minima by case: (0.0 0 0.0 0 0.9888 2 16.4402 8 2.7305 1 3.0 1 4.7473 1 1.4959 1 38.5349 2 10.0957 8 0.1231 7 23.1892 1 9.6246 8 0.0 0 15.1231 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.614 1 21.0 2 7.1231 1 4.8676 2 0.0976 1 6.0025 1)
Average genome size in population (length): 54.781
Average program size in population (points): 55.781
Average percent parens in population: 0.019
Minimum age in population: 271.929861374464
Maximum age in population: 276.4484244820452
Average age in population: 274.3314243725962
Median age in population: 274.3904978003153
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.817
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.817
Total error diversity:				 0.146
Error (vector) diversity:			 0.152
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 187564214
--- Timings ---
Current time: 1529616695914 milliseconds
Total Time:         643.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.6 seconds, 43.0%
Fitness Testing:    293.4 seconds, 45.6%
Report:              73.0 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 58853.03279999998
Test mean error for best: 29.42652
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.0635979919  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_dec} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_dec float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove integer_rot float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 21.1136 12]
Total: 1147.2892
Mean: 22.945784
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3320.4622330999905
Median total errors in population: 1148.1756
Error averages by case: (100.78807279999997 3.379 89.98532739999996 2.718 130.1257128999989 9.104 161.30435329999997 12.137 118.2603297 3.384 107.23751330000002 2.768 168.94073920000005 3.958 94.86447170000001 4.201 178.08564860000004 4.464 162.22422840000002 10.553 145.8790194 11.318 189.30487920000002 2.925 132.1957801 13.12 99.9953647 2.626 151.6821593 3.517 89.14997319999851 7.47 86.80335619999977 9.141 93.76288890000002 3.191 89.07709639999997 2.63 141.40766589999936 9.095 129.62424380000002 4.425 143.05821369999998 3.343 171.59023060000004 3.756 89.84059919999896 9.014 100.91936520000004 12.118)
Error minima by case: (0.0 0 0.0 0 0.316 1 8.4367 9 0.3458 1 2.0 1 29.6476 1 0.9366 1 68.6964 2 10.2187 9 0.1231 8 89.0 1 7.2849 8 0.0 0 15.1231 2 0.0311 1 0.1288 1 0.0 0 0.0 0 1.7714 1 22.0 2 7.1231 1 69.0 2 0.0976 1 5.1833 1)
Average genome size in population (length): 54.889
Average program size in population (points): 55.889
Average percent parens in population: 0.018
Minimum age in population: 273.2806758321904
Maximum age in population: 277.6466676440278
Average age in population: 275.7320594491797
Median age in population: 275.7904977735863
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.153
Error (vector) diversity:			 0.163
Behavioral diversity:				 0.164
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 188937189
--- Timings ---
Current time: 1529616699620 milliseconds
Total Time:         646.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       278.0 seconds, 43.0%
Fitness Testing:    295.3 seconds, 45.6%
Report:              73.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 58853.03279999998
Test mean error for best: 29.42652
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.0635979919  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 21.1136 12]
Total: 1147.2892
Mean: 22.945784
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3572.2484241999905
Median total errors in population: 1148.1756
Error averages by case: (109.11771669999997 3.409 103.00712279999998 2.745 143.1962703 9.245 169.51836640000002 12.236 130.7644593 3.447 114.47329800000003 2.839 176.87701439999995 3.98 105.61785010000003 4.362 183.39668129999995 4.498 170.40400020000004 10.628 153.91209760000004 11.419 194.11732940000005 2.956 143.9944508 13.179 106.99492410000002 2.645 164.04397410000004 3.597 102.821753299998 7.557 100.44018339999938 9.277 105.88663350000003 3.274 101.18604369999997 2.72 154.1967667000004 9.21 135.05370509999995 4.461 156.0515625 3.423 176.42901369999998 3.795 103.3305870999985 9.146 111.3136197 12.055)
Error minima by case: (0.0 0 0.0 0 1.2618 1 15.4402 2 1.7325 1 2.0 1 8.5383 1 0.5863 1 39.5349 2 9.0957 3 4.0 2 24.1892 1 7.1052 9 0.0 0 35.7695 2 0.0311 1 0.2928 1 0.0 0 0.0 0 0.614 1 21.0 2 22.924 1 2.1324 2 0.0976 1 1.1264 1)
Average genome size in population (length): 55.732
Average program size in population (points): 56.732
Average percent parens in population: 0.018
Minimum age in population: 274.4379331469839
Maximum age in population: 279.2255044227499
Average age in population: 277.1821569309857
Median age in population: 277.260534260928
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.146
Error (vector) diversity:			 0.161
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 190331064
--- Timings ---
Current time: 1529616703274 milliseconds
Total Time:         650.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       279.5 seconds, 43.0%
Fitness Testing:    297.1 seconds, 45.7%
Report:              73.9 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 58853.03279999998
Test mean error for best: 29.42652
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.0635979919  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_dec} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_dec float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove integer_rot float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 21.1136 12]
Total: 1147.2892
Mean: 22.945784
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3546.220183499989
Median total errors in population: 1148.1756
Error averages by case: (106.8820011 3.369 102.00239859999996 2.697 142.3523326999993 9.25 169.3187588 12.186 129.9550454 3.433 113.69052620000002 2.725 173.37456979999993 3.806 103.35465369999999 3.992 183.50813980000004 4.424 170.26370049999997 10.537 153.7353098 11.353 194.25583369999998 2.846 142.84457329999998 13.12 106.15822639999999 2.571 163.15288860000007 3.525 102.22664379999799 7.579 100.2116272999994 9.266 103.27834750000002 3.264 99.09129179999998 2.654 153.67738859999977 9.208 134.8024168 4.408 154.0997372 3.421 176.54462730000003 3.685 103.19857699999854 9.117 109.69756779999997 12.107)
Error minima by case: (0.0 0 0.0 0 0.4298 1 4.4367 9 7.3906 1 4.0 1 31.4163 1 2.7208 1 70.4651 2 2.2187 7 1.537 8 89.0 1 7.1669 9 0.0 0 13.463 2 0.0311 1 0.0426 1 0.0 0 0.0 0 0.3694 1 22.0 2 5.463 1 69.0 2 0.0976 1 1.9525 1)
Average genome size in population (length): 55.598
Average program size in population (points): 56.598
Average percent parens in population: 0.018
Minimum age in population: 275.6719484601518
Maximum age in population: 280.68158531616
Average age in population: 278.646179196141
Median age in population: 278.6670374099627
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.786
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.786
Total error diversity:				 0.141
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 191721689
--- Timings ---
Current time: 1529616706900 milliseconds
Total Time:         654.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.9 seconds, 42.9%
Fitness Testing:    299.0 seconds, 45.7%
Report:              74.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 58853.03279999998
Test mean error for best: 29.42652
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.0635979919  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 21.1136 12]
Total: 1147.2892
Mean: 22.945784
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3092.8623844999893
Median total errors in population: 1148.1756
Error averages by case: (89.83170259999999 3.241 82.19116309999995 2.648 123.2374596999987 9.164 151.65682279999996 12.157 110.4948176 3.286 95.85916540000002 2.631 158.6808606 3.799 87.78483140000002 4.132 166.69733030000003 4.322 152.5550684 10.543 135.95582620000002 11.334 177.77570050000006 2.742 124.39375810000003 13.116 88.34113170000003 2.457 144.43411090000004 3.424 82.01403899999822 7.514 79.47718779999958 9.196 85.54500360000004 3.076 80.85244790000002 2.525 134.4693983999988 9.144 117.26353099999997 4.305 135.7256827 3.266 159.71661330000006 3.601 82.48588939999878 9.105 92.63084209999985 12.064)
Error minima by case: (0.0 0 0.0 0 0.626 1 15.4402 9 4.5907 1 2.0 1 3.7945 1 2.3175 1 35.2543 2 9.0957 8 1.1231 8 29.1892 1 10.6246 9 0.0 0 12.463 2 0.0311 2 0.1807 1 0.0445 1 0.0 0 0.4138 1 23.0 2 4.463 1 0.8676 2 0.0976 1 6.1474 1)
Average genome size in population (length): 55.123
Average program size in population (points): 56.123
Average percent parens in population: 0.018
Minimum age in population: 277.0993301891445
Maximum age in population: 282.174572270145
Average age in population: 280.1506184510582
Median age in population: 280.2023660164097
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.804
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.804
Total error diversity:				 0.156
Error (vector) diversity:			 0.167
Behavioral diversity:				 0.167
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 193100339
--- Timings ---
Current time: 1529616710582 milliseconds
Total Time:         657.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       282.4 seconds, 42.9%
Fitness Testing:    300.7 seconds, 45.7%
Report:              74.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 58853.03279999998
Test mean error for best: 29.42652
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 8.0635979919  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_div} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (integer_div print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 21.1136 12]
Total: 1147.2892
Mean: 22.945784
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3197.3424666999904
Median total errors in population: 1148.1756
Error averages by case: (97.85706769999999 3.339 84.31001839999999 2.7 124.67450929999897 9.291 157.34941050000003 12.121 112.30619810000003 3.351 102.8676929 2.701 164.80222629999992 3.845 91.00951490000003 4.009 173.6493448 4.408 158.2842487000001 10.503 141.9670783 11.271 184.7446638 2.825 126.46314079999998 13.059 95.642852 2.572 146.1332789 3.522 84.16239449999887 7.605 81.47546579999998 9.31 88.43534700000002 3.196 83.5089559 2.62 135.61067519999904 9.255 124.82730039999997 4.358 137.71662780000003 3.333 167.00644240000005 3.656 84.41539169999932 9.229 93.95062059999951 12.093)
Error minima by case: (0.0 0 0.0 0 0.5702 1 11.1595 7 0.6094 1 1.0 1 7.4274 1 0.9366 1 46.4762 2 2.4363 8 1.1231 7 83.8219 1 1.0929 7 0.0 0 13.463 2 0.0311 1 0.0598 1 0.2679 1 0.0 0 0.043 1 24.0 2 5.463 1 71.0 2 0.0976 1 1.1264 2)
Average genome size in population (length): 54.312
Average program size in population (points): 55.312
Average percent parens in population: 0.018
Minimum age in population: 279.1430344789604
Maximum age in population: 283.8624350978841
Average age in population: 281.559023816026
Median age in population: 281.5966674728291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 77
Genome diversity (% unique Plush genomes):	 0.736
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 77
Syntactic diversity (% unique Push programs):	 0.736
Total error diversity:				 0.168
Error (vector) diversity:			 0.182
Behavioral diversity:				 0.183
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 194458489
--- Timings ---
Current time: 1529616714121 milliseconds
Total Time:         661.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       283.8 seconds, 42.9%
Fitness Testing:    302.5 seconds, 45.7%
Report:              75.1 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 58824.42309999999
Test mean error for best: 29.41221
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -0.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -37.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -63.8107606538
Correct output: -14.6246036823 | Program output: 38.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -86.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -72.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 7.6065197612  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_dec} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction float_inc} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_dec float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup float_inc float_mult float_mod 57.87693811356892 in1 57.87693811356892 float_min integer_sub integer_rot float_shove integer_rot float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 51.336 9 76.0 12 36.0 2 10.0 1 87.0 2 11.0 2 89.0 3 77.0 10 58.0 11 100.0 1 53.0 13 1.0 1 73.0 2 4.0311 7 0.2928 9 11.0 2 5.0 1 63.4181 9 33.0 3 65.0 2 80.0 2 4.0976 9 20.6565 12]
Total: 1146.8321
Mean: 22.936642
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2720.9317754999915
Median total errors in population: 1147.2892
Error averages by case: (78.85953929999997 3.294 62.43400130000003 2.593 101.98841859999952 9.307 140.06239959999996 12.117 91.30245960000002 3.357 87.4742023 2.667 144.78020519999998 3.85 72.74238269999995 3.924 159.07359830000007 4.405 140.86082780000004 10.514 124.6440393 11.24 170.87151880000005 2.775 105.02171469999996 13.054 80.31960790000001 2.549 125.86896550000003 3.531 61.47922720000016 7.633 58.58598460000064 9.312 66.68530259999999 3.189 62.26537569999994 2.662 113.12470579999902 9.316 110.34797569999995 4.345 116.75591069999997 3.332 153.00291770000004 3.64 61.598349400000636 9.263 76.86514519999896 12.048)
Error minima by case: (0.0 0 0.0 0 0.1856 2 8.6394 9 10.3906 1 4.0 1 2.871 1 0.8059 1 30.1231 2 9.0957 8 0.7366 8 41.1231 1 5.8769 9 0.0 0 44.3536 2 0.0311 1 0.0503 1 0.0015 1 0.0 0 0.7249 1 23.0 2 23.8685 1 21.1231 2 0.0976 1 8.95 1)
Average genome size in population (length): 53.204
Average program size in population (points): 54.204
Average percent parens in population: 0.019
Minimum age in population: 280.7560423323414
Maximum age in population: 284.9197092312928
Average age in population: 283.1121913483979
Median age in population: 283.1639461158507
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 131
Genome diversity (% unique Plush genomes):	 0.635
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 131
Syntactic diversity (% unique Push programs):	 0.635
Total error diversity:				 0.173
Error (vector) diversity:			 0.183
Behavioral diversity:				 0.183
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 195788739
--- Timings ---
Current time: 1529616717767 milliseconds
Total Time:         665.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       285.2 seconds, 42.9%
Fitness Testing:    304.3 seconds, 45.8%
Report:              75.5 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 57155.60699999997
Test mean error for best: 28.57780
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 69.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 69.8769381136 
Correct output: 64.1697788867  | Program output: 69.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 69.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 69.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc integer_dup_times integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 57.336 9 76.0 12 36.0 2 10.0 1 83.0 2 11.0 2 85.0 3 77.0 10 58.0 11 96.0 2 49.0 12 1.0 1 73.0 2 10.0311 6 5.7072 9 11.0 2 5.0 1 69.4181 9 29.0 3 65.0 2 76.0 3 1.9024 9 18.0 12]
Total: 1141.3948
Mean: 22.827896
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2326.697683699996
Median total errors in population: 1147.2892
Error averages by case: (57.709167 2.941 50.924629800000055 2.493 91.79544889999964 9.28 120.70067779999997 12.06 79.92600370000001 3.116 65.23700739999998 2.267 128.3816415 3.784 54.899866399999965 3.54 137.96586100000005 4.04 121.53646130000006 10.456 104.5928783 11.185 150.62519010000008 2.397 93.87233979999999 12.996 58.01588620000001 2.186 115.06549849999999 3.327 50.50485130000015 7.581 47.405674700000475 9.299 55.49171749999999 3.001 50.21535979999996 2.403 102.78990559999907 9.298 88.29722219999998 4.024 106.63814379999998 3.115 132.08141420000004 3.3 50.58054460000048 9.277 62.08329229999899 11.995)
Error minima by case: (0.0 0 0.1197 1 0.3008 2 14.4367 8 10.3906 1 0.8141 1 25.8195 1 0.9366 1 64.8683 2 11.7558 9 1.7366 8 76.0662 1 3.3754 8 0.0 0 44.3536 2 0.6912 2 0.285 1 0.0 0 0.0 0 0.1281 1 13.9271 2 23.8685 1 47.7446 2 0.5625 1 4.95 1)
Average genome size in population (length): 53.071
Average program size in population (points): 54.071
Average percent parens in population: 0.019
Minimum age in population: 282.0760484751055
Maximum age in population: 286.6409238283219
Average age in population: 284.5759899648276
Median age in population: 284.6092412555751
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 128
Genome diversity (% unique Plush genomes):	 0.613
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 128
Syntactic diversity (% unique Push programs):	 0.613
Total error diversity:				 0.143
Error (vector) diversity:			 0.15
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 197115739
--- Timings ---
Current time: 1529616721263 milliseconds
Total Time:         668.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       286.6 seconds, 42.9%
Fitness Testing:    306.0 seconds, 45.8%
Report:              75.9 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 57155.60699999997
Test mean error for best: 28.57780
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -10.0239631162
Correct output: 66.9966003687  | Program output: 62.9966003687 
Correct output: 12.5409282956  | Program output: 69.8769381136 
Correct output: 42.4367420274  | Program output: -33.5632579726
Correct output: 80.2675177914  | Program output: 44.2675177914 
Correct output: -60.7827432914 | Program output: -70.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: 3.1647964189  
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -28.218729684 
Correct output: 29.7365869138  | Program output: -28.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -71.1209990048
Correct output: 114.230518731  | Program output: 41.230518731  
Correct output: 59.8458330136  | Program output: 69.8769381136 
Correct output: 64.1697788867  | Program output: 69.8769381136 
Correct output: 12.2386855703  | Program output: 23.2386855703 
Correct output: 25.2397222484  | Program output: 20.2397222484 
Correct output: 0.4588693899   | Program output: 69.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 28.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 69.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc integer_dup_times integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [6.0 2 4.0 1 57.336 9 76.0 12 36.0 2 10.0 1 83.0 2 11.0 2 85.0 3 77.0 10 58.0 11 96.0 2 49.0 12 1.0 1 73.0 2 10.0311 6 5.7072 9 11.0 2 5.0 1 69.4181 9 29.0 3 65.0 2 76.0 3 1.9024 9 18.0 12]
Total: 1141.3948
Mean: 22.827896
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2378.0908546999954
Median total errors in population: 1147.2892
Error averages by case: (62.54094290000002 3.065 50.81697790000003 2.521 92.1774105999998 9.264 123.4656039 12.032 79.55704409999998 3.17 69.05614209999995 2.417 133.84844069999994 3.967 58.4482456 3.617 142.49678330000006 4.188 124.25175290000003 10.47 107.5917342 11.134 154.5617813000001 2.574 94.39438029999994 12.97 61.78834640000005 2.289 114.49943389999997 3.408 50.45101070000016 7.55 47.33875690000039 9.282 56.024097999999974 3.048 51.236092599999935 2.476 103.2548778999992 9.263 92.4411814 4.133 106.05212520000002 3.174 136.23412700000006 3.457 50.29718560000053 9.254 64.54937929999898 11.994)
Error minima by case: (0.0 0 0.0 0 0.4591 2 15.463 9 10.3906 1 3.0 1 1.7953 1 0.0634 1 37.2535 2 11.7558 8 0.1231 8 74.5991 1 7.3754 8 0.0 0 12.463 2 0.0311 1 0.2928 2 0.0 0 0.0 0 0.0468 1 22.0 2 4.463 1 62.9208 2 0.0976 2 6.0736 2)
Average genome size in population (length): 52.891
Average program size in population (points): 53.891
Average percent parens in population: 0.019
Minimum age in population: 283.0760484751055
Maximum age in population: 288.0405207406748
Average age in population: 285.9991632052826
Median age in population: 286.0023439107761
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 83
Genome diversity (% unique Plush genomes):	 0.672
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.672
Total error diversity:				 0.145
Error (vector) diversity:			 0.152
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 198438164
--- Timings ---
Current time: 1529616724838 milliseconds
Total Time:         672.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       288.1 seconds, 42.9%
Fitness Testing:    307.7 seconds, 45.8%
Report:              76.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 57553.5999
Test mean error for best: 28.77680
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -9.0239631162 
Correct output: 66.9966003687  | Program output: 63.8769381136 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -32.5632579726
Correct output: 80.2675177914  | Program output: 45.2675177914 
Correct output: -60.7827432914 | Program output: -69.7827432914
Correct output: -87.4162880094 | Program output: -3.4162880094 
Correct output: 14.1647964189  | Program output: 4.1647964189  
Correct output: -126.4651108881 | Program output: -40.4651108881
Correct output: 48.781270316   | Program output: -27.218729684 
Correct output: 29.7365869138  | Program output: -27.2634130862
Correct output: -163.8107606538 | Program output: -66.8107606538
Correct output: -14.6246036823 | Program output: 35.3753963177 
Correct output: -72.1209990048 | Program output: -70.1209990048
Correct output: 114.230518731  | Program output: 42.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 24.2386855703 
Correct output: 25.2397222484  | Program output: 21.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -89.8040488051
Correct output: 93.7454585668  | Program output: 29.7454585668 
Correct output: -152.1323711502 | Program output: -75.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 5.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [5.0 1 3.1197 10 51.336 9 75.0 11 35.0 2 9.0 1 84.0 2 10.0 1 86.0 3 76.0 11 57.0 11 97.0 2 50.0 13 2.0 1 72.0 3 4.0311 7 0.2928 9 12.0 2 4.0 1 63.4181 9 30.0 2 64.0 2 77.0 2 4.0976 9 19.0 12]
Total: 1126.2953000000002
Mean: 22.525906
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2486.400582099994
Median total errors in population: 1147.2892
Error averages by case: (68.8395466 3.164 53.901161200000026 2.576 95.06842569999964 9.314 129.02907710000005 12.093 82.6342114 3.247 75.42508139999998 2.534 138.4426316999999 3.748 63.722910100000014 3.74 148.09122550000004 4.283 129.8143157 10.51 113.401093 11.194 160.09154539999997 2.668 97.10235899999994 13.001 68.14259960000003 2.368 117.58127509999997 3.453 53.577366600000126 7.581 50.51513070000032 9.342 59.116418499999995 3.084 54.40206569999992 2.552 106.0755454999992 9.308 98.563064 4.227 109.03806859999999 3.24 141.8523124000001 3.543 53.40980240000031 9.289 66.44234919999921 12.062)
Error minima by case: (1.0 1 0.0 0 0.5702 1 15.1868 7 4.8543 1 3.0 1 2.9297 1 3.7208 1 41.9785 2 8.8878 8 0.1231 8 79.3242 1 6.3799 8 0.0 0 15.1231 2 0.0311 2 0.292 2 0.0 0 0.0 0 0.1281 1 21.0 2 7.1231 1 67.6458 2 0.0976 1 4.8052 1)
Average genome size in population (length): 52.496
Average program size in population (points): 53.496
Average percent parens in population: 0.019
Minimum age in population: 284.0760484751055
Maximum age in population: 289.5941143861295
Average age in population: 287.446746186329
Median age in population: 287.5110727060299
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 77
Genome diversity (% unique Plush genomes):	 0.681
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 77
Syntactic diversity (% unique Push programs):	 0.681
Total error diversity:				 0.169
Error (vector) diversity:			 0.178
Behavioral diversity:				 0.178
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 199750839
--- Timings ---
Current time: 1529616728372 milliseconds
Total Time:         675.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       289.5 seconds, 42.9%
Fitness Testing:    309.4 seconds, 45.8%
Report:              76.7 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 56390.415199999996
Test mean error for best: 28.19521
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -6.0239631162 
Correct output: 66.9966003687  | Program output: 63.8769381136 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -29.5632579726
Correct output: 80.2675177914  | Program output: 48.2675177914 
Correct output: -60.7827432914 | Program output: -66.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: 7.1647964189  
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -24.218729684 
Correct output: 29.7365869138  | Program output: -24.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -67.1209990048
Correct output: 114.230518731  | Program output: 45.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 27.2386855703 
Correct output: 25.2397222484  | Program output: 24.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 32.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [2.0 1 3.1197 10 51.336 9 72.0 11 32.0 2 6.0 1 83.0 2 7.0 2 85.0 3 73.0 11 54.0 11 96.0 2 49.0 12 5.0 2 69.0 3 4.0311 7 0.2928 9 15.0 2 1.0 1 63.4181 9 29.0 3 61.0 2 76.0 3 4.0976 9 18.0 12]
Total: 1098.2953000000002
Mean: 21.965906
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2826.3386913999943
Median total errors in population: 1147.2892
Error averages by case: (81.34032570000004 3.287 69.13269130000003 2.843 109.62892359999907 9.419 142.00371660000002 12.111 97.17652179999997 3.442 89.04530989999996 2.765 149.2925836999999 3.93 76.76237059999998 4.031 159.50448540000005 4.508 142.82684450000005 10.61 126.45476899999998 11.321 171.58833720000004 3.046 110.45516219999996 12.905 82.08265900000002 2.601 131.22931819999997 3.667 69.20201769999967 7.655 66.05217610000054 9.481 72.5427311 3.273 68.27148589999993 2.769 120.53599819999852 9.41 110.89210939999997 4.428 122.30951580000001 3.425 153.62269550000008 3.891 68.03739990000017 9.393 80.03854309999896 12.099)
Error minima by case: (0.0 0 0.0 0 0.4298 2 15.4402 9 10.3906 1 0.0 0 20.6949 1 1.0 1 59.7437 2 9.0957 8 0.1231 9 89.0 1 9.1781 8 0.0 0 12.463 2 0.0311 2 0.2928 2 0.0 0 0.0 0 0.1664 1 22.0 2 4.463 1 69.0 2 0.0976 2 6.0736 2)
Average genome size in population (length): 52.164
Average program size in population (points): 53.164
Average percent parens in population: 0.019
Minimum age in population: 285.0760484751055
Maximum age in population: 290.9672140742368
Average age in population: 288.8968061097117
Median age in population: 288.9509524259905
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.681
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.681
Total error diversity:				 0.2
Error (vector) diversity:			 0.212
Behavioral diversity:				 0.212
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 201055039
--- Timings ---
Current time: 1529616732010 milliseconds
Total Time:         679.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       291.1 seconds, 42.8%
Fitness Testing:    311.0 seconds, 45.8%
Report:              77.1 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 56179.697499999995
Test mean error for best: 28.08985
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -5.0239631162 
Correct output: 66.9966003687  | Program output: 63.8769381136 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -28.5632579726
Correct output: 80.2675177914  | Program output: 49.2675177914 
Correct output: -60.7827432914 | Program output: -65.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: 8.1647964189  
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -23.218729684 
Correct output: 29.7365869138  | Program output: -23.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -66.1209990048
Correct output: 114.230518731  | Program output: 46.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 28.2386855703 
Correct output: 25.2397222484  | Program output: 25.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 33.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 26} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc float_inc -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 26 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [1.0 1 3.1197 10 51.336 9 71.0 11 31.0 2 5.0 1 83.0 2 6.0 2 85.0 3 72.0 11 53.0 11 96.0 2 49.0 12 6.0 2 68.0 3 4.0311 7 0.2928 9 16.0 2 0.0 0 63.4181 9 29.0 3 60.0 1 76.0 3 4.0976 9 18.0 12]
Total: 1088.2953000000002
Mean: 21.765905
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2273.6021098000006
Median total errors in population: 1146.8321
Error averages by case: (55.2475104 2.792 48.87886150000007 2.716 93.72478849999979 9.309 117.55805359999994 12.065 78.25405829999995 2.969 61.58445259999998 2.35 127.28841209999999 3.237 55.45820539999996 3.641 133.06171740000005 4.072 118.40236860000006 10.611 101.7463239 11.276 145.0866839 2.872 91.70783609999997 12.654 54.06829979999999 2.158 113.42805870000005 3.335 50.662684200000136 7.175 47.46564149999996 9.357 53.484387299999966 2.855 49.618609099999986 2.345 105.10341459999918 9.244 82.45452019999996 3.951 105.07824149999995 2.971 126.45444430000005 3.68 47.52669110000012 9.282 61.254845199999664 12.086)
Error minima by case: (1.0 1 0.0 0 0.1231 2 14.4367 9 10.3906 1 5.0 1 15.375 1 0.8663 1 54.4238 2 9.0957 8 1.537 8 87.8108 1 7.3754 9 0.0 0 13.463 2 0.0311 1 0.2928 1 0.002 1 0.0 0 0.4589 2 21.0 2 5.463 1 68.0 2 0.0976 1 8.95 1)
Average genome size in population (length): 52.107
Average program size in population (points): 53.107
Average percent parens in population: 0.019
Minimum age in population: 287.1695770472082
Maximum age in population: 292.3724509524267
Average age in population: 290.1852601712253
Median age in population: 290.247461490467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 97
Genome diversity (% unique Plush genomes):	 0.614
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.614
Total error diversity:				 0.21
Error (vector) diversity:			 0.228
Behavioral diversity:				 0.229
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 202358014
--- Timings ---
Current time: 1529616735485 milliseconds
Total Time:         682.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       292.4 seconds, 42.8%
Fitness Testing:    312.7 seconds, 45.8%
Report:              77.5 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 56179.697499999995
Test mean error for best: 28.08985
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -5.0239631162 
Correct output: 66.9966003687  | Program output: 63.8769381136 
Correct output: 12.5409282956  | Program output: 63.8769381136 
Correct output: 42.4367420274  | Program output: -28.5632579726
Correct output: 80.2675177914  | Program output: 49.2675177914 
Correct output: -60.7827432914 | Program output: -65.7827432914
Correct output: -87.4162880094 | Program output: -4.4162880094 
Correct output: 14.1647964189  | Program output: 8.1647964189  
Correct output: -126.4651108881 | Program output: -41.4651108881
Correct output: 48.781270316   | Program output: -23.218729684 
Correct output: 29.7365869138  | Program output: -23.2634130862
Correct output: -163.8107606538 | Program output: -67.8107606538
Correct output: -14.6246036823 | Program output: 34.3753963177 
Correct output: -72.1209990048 | Program output: -66.1209990048
Correct output: 114.230518731  | Program output: 46.230518731  
Correct output: 59.8458330136  | Program output: 63.8769381136 
Correct output: 64.1697788867  | Program output: 63.8769381136 
Correct output: 12.2386855703  | Program output: 28.2386855703 
Correct output: 25.2397222484  | Program output: 25.2397222484 
Correct output: 0.4588693899   | Program output: 63.8769381136 
Correct output: -119.8040488051 | Program output: -90.8040488051
Correct output: 93.7454585668  | Program output: 33.7454585668 
Correct output: -152.1323711502 | Program output: -76.1323711502
Correct output: 67.97455151    | Program output: 63.8769381136 
Correct output: -13.0499546478 | Program output: 4.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mult} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_div} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction -30} {:instruction float_min} {:instruction float_inc} {:instruction float_inc} {:instruction float_min} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_inc} {:instruction integer_dup} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 26} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_mult print_float 60.537048956669786 float_max integer_div float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap integer_rot float_shove integer_shove float_inc integer_dup_times -30 float_inc float_inc float_inc float_inc -30 float_min float_inc float_inc float_min integer_sub integer_dup_items float_inc integer_dup float_inc float_inc integer_dup_times float_inc integer_dup_times integer_mod 26 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [1.0 1 3.1197 10 51.336 9 71.0 11 31.0 2 5.0 1 83.0 2 6.0 2 85.0 3 72.0 11 53.0 11 96.0 2 49.0 12 6.0 2 68.0 3 4.0311 7 0.2928 9 16.0 2 0.0 0 63.4181 9 29.0 3 60.0 1 76.0 3 4.0976 9 18.0 12]
Total: 1088.2953000000002
Mean: 21.765905
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2735.2238874000004
Median total errors in population: 1141.3948
Error averages by case: (78.39611000000004 2.995 64.36697740000018 4.267 109.1407499999993 9.389 140.36176199999997 11.952 92.52165360000001 3.3 88.70294429999996 2.77 142.44190549999996 3.805 73.14190199999999 3.879 152.0232350000001 4.372 140.97331220000004 10.828 125.135656 11.177 164.05521390000004 3.479 106.53887929999995 12.55 82.53391920000004 2.62 127.06114349999999 3.795 66.3865995 7.248 63.41417559999987 9.454 69.7184233 3.054 65.762614 2.714 120.37588539999891 9.318 103.40850359999996 4.214 118.63858199999996 3.262 146.0841420000001 4.247 63.05784280000002 9.365 74.81075529999993 12.117)
Error minima by case: (0.0 0 0.0 0 0.3008 1 5.8554 8 5.3906 1 1.0 1 21.1231 1 0.2879 1 23.1231 2 9.0957 8 0.1231 8 34.1231 1 1.5826 10 0.0 0 23.7316 2 0.0311 1 0.2928 2 0.0 0 0.0 0 0.4589 1 22.0 2 3.2465 1 14.1231 2 0.0976 2 3.1573 2)
Average genome size in population (length): 53.716
Average program size in population (points): 54.716
Average percent parens in population: 0.018
Minimum age in population: 289.240574024663
Maximum age in population: 293.6995475062024
Average age in population: 291.6777369268265
Median age in population: 291.7518534810956
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 75
Genome diversity (% unique Plush genomes):	 0.662
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.662
Total error diversity:				 0.247
Error (vector) diversity:			 0.272
Behavioral diversity:				 0.273
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 203701539
--- Timings ---
Current time: 1529616739082 milliseconds
Total Time:         686.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       293.9 seconds, 42.8%
Fitness Testing:    314.4 seconds, 45.8%
Report:              78.0 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 54284.82939999999
Test mean error for best: 27.14241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -13.0239631162
Correct output: 66.9966003687  | Program output: 59.9966003687 
Correct output: 12.5409282956  | Program output: 65.8769381136 
Correct output: 42.4367420274  | Program output: 65.8769381136 
Correct output: 80.2675177914  | Program output: 41.2675177914 
Correct output: -60.7827432914 | Program output: -73.7827432914
Correct output: -87.4162880094 | Program output: -3.4162880094 
Correct output: 14.1647964189  | Program output: 0.1647964189  
Correct output: -126.4651108881 | Program output: -40.4651108881
Correct output: 48.781270316   | Program output: 65.8769381136 
Correct output: 29.7365869138  | Program output: 65.8769381136 
Correct output: -163.8107606538 | Program output: -66.8107606538
Correct output: -14.6246036823 | Program output: 35.3753963177 
Correct output: -72.1209990048 | Program output: -74.1209990048
Correct output: 114.230518731  | Program output: 65.8769381136 
Correct output: 59.8458330136  | Program output: 65.8769381136 
Correct output: 64.1697788867  | Program output: 65.8769381136 
Correct output: 12.2386855703  | Program output: 20.2386855703 
Correct output: 25.2397222484  | Program output: 17.2397222484 
Correct output: 0.4588693899   | Program output: 65.8769381136 
Correct output: -119.8040488051 | Program output: -89.8040488051
Correct output: 93.7454585668  | Program output: 65.8769381136 
Correct output: -152.1323711502 | Program output: -75.1323711502
Correct output: 67.97455151    | Program output: 65.8769381136 
Correct output: -13.0499546478 | Program output: 5.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_pop print_float 60.537048956669786 float_max integer_fromfloat float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove integer_shove integer_dup_times integer_shove float_inc integer_dup_times -30 57.87693811356892 float_min integer_sub integer_rot float_shove integer_rot float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [9.0 2 7.0 2 53.336 9 23.4402 11 39.0 2 13.0 2 84.0 2 14.0 2 86.0 3 17.0957 10 36.1404 9 97.0 2 50.0 13 2.0 1 48.3536 11 6.0311 7 1.7072 9 8.0 2 8.0 2 65.4181 9 30.0 2 27.8685 11 77.0 2 2.0976 9 19.0 12]
Total: 970.4884000000002
Mean: 19.409767
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2864.4868959999967
Median total errors in population: 1122.5900000000001
Error averages by case: (80.93366769999997 2.855 72.83816490000014 5.72 113.61040659999885 9.362 142.00470720000004 11.795 100.5025739 3.343 89.00403560000002 2.714 148.3281301999999 3.874 80.89801390000004 3.725 155.83783250000005 4.388 142.72134870000008 10.921 126.52245210000002 11.228 167.77106710000004 3.545 112.71244969999995 12.625 83.85935220000003 2.782 134.70589709999993 3.938 72.08058759999903 7.465 69.38635130000016 9.398 78.583332 3.158 72.90625889999995 2.65 124.57662629999825 9.32 105.9257904 4.202 126.36318180000002 3.318 149.69167590000006 4.247 71.58102579999961 9.299 83.1899665999999 12.08)
Error minima by case: (0.0 0 0.0 0 0.4764 2 14.4367 7 0.7305 1 1.0 1 24.1231 1 0.1941 1 26.1231 2 9.0957 8 0.8769 9 37.1231 1 9.8769 9 0.0 0 12.463 2 0.0311 1 0.2928 1 0.9222 1 0.0 0 0.2751 2 23.0 2 4.463 1 17.1231 2 0.0976 1 12.0 1)
Average genome size in population (length): 56.015
Average program size in population (points): 57.015
Average percent parens in population: 0.018
Minimum age in population: 290.7586589458185
Maximum age in population: 295.0937720295284
Average age in population: 293.2287944177848
Median age in population: 293.3058648632835
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.681
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.681
Total error diversity:				 0.277
Error (vector) diversity:			 0.313
Behavioral diversity:				 0.314
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 205102689
--- Timings ---
Current time: 1529616742734 milliseconds
Total Time:         690.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       295.3 seconds, 42.8%
Fitness Testing:    316.2 seconds, 45.8%
Report:              78.4 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 54284.82939999999
Test mean error for best: 27.14241
;;------------------------------
Outputs of best individual on training cases:
Correct output: -4.0239631162  | Program output: -13.0239631162
Correct output: 66.9966003687  | Program output: 59.9966003687 
Correct output: 12.5409282956  | Program output: 65.8769381136 
Correct output: 42.4367420274  | Program output: 65.8769381136 
Correct output: 80.2675177914  | Program output: 41.2675177914 
Correct output: -60.7827432914 | Program output: -73.7827432914
Correct output: -87.4162880094 | Program output: -3.4162880094 
Correct output: 14.1647964189  | Program output: 0.1647964189  
Correct output: -126.4651108881 | Program output: -40.4651108881
Correct output: 48.781270316   | Program output: 65.8769381136 
Correct output: 29.7365869138  | Program output: 65.8769381136 
Correct output: -163.8107606538 | Program output: -66.8107606538
Correct output: -14.6246036823 | Program output: 35.3753963177 
Correct output: -72.1209990048 | Program output: -74.1209990048
Correct output: 114.230518731  | Program output: 65.8769381136 
Correct output: 59.8458330136  | Program output: 65.8769381136 
Correct output: 64.1697788867  | Program output: 65.8769381136 
Correct output: 12.2386855703  | Program output: 20.2386855703 
Correct output: 25.2397222484  | Program output: 17.2397222484 
Correct output: 0.4588693899   | Program output: 65.8769381136 
Correct output: -119.8040488051 | Program output: -89.8040488051
Correct output: 93.7454585668  | Program output: 65.8769381136 
Correct output: -152.1323711502 | Program output: -75.1323711502
Correct output: 67.97455151    | Program output: 65.8769381136 
Correct output: -13.0499546478 | Program output: 5.9500453522  
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_pop} {:instruction print_float} {:instruction 60.537048956669786} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_max} {:instruction integer_stackdepth} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction float_min} {:instruction float_dup} {:instruction tag_integer_469} {:instruction float_mult} {:instruction float_mod} {:instruction 57.87693811356892} {:instruction in1} {:instruction 57.87693811356892} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_shove} {:instruction integer_shove} {:instruction integer_shove} {:instruction integer_dup_times} {:instruction integer_shove} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction 57.87693811356892} {:instruction float_min} {:instruction integer_sub} {:instruction integer_sub} {:instruction float_inc} {:instruction integer_dup_times} {:instruction -30} {:instruction float_inc} {:instruction float_inc} {:instruction float_inc} {:instruction integer_swap} {:instruction float_inc} {:instruction integer_dup_times} {:instruction float_inc} {:instruction integer_dup_times} {:instruction integer_mod} {:instruction 28} {:instruction float_inc} {:instruction float_inc} {:instruction integer_dup_times} {:instruction print_float} {:instruction in2} {:instruction integer_add})
Best program: (float_pop print_float 60.537048956669786 float_max integer_fromfloat float_max integer_stackdepth 57.87693811356892 in1 57.87693811356892 float_min float_dup tag_integer_469 float_mult float_mod 57.87693811356892 in1 57.87693811356892 in2 integer_sub integer_rot float_shove integer_shove integer_shove integer_dup_times integer_shove float_inc integer_dup_times -30 57.87693811356892 float_min integer_sub integer_sub float_inc integer_dup_times -30 float_inc float_inc float_inc integer_swap float_inc integer_dup_times float_inc integer_dup_times integer_mod 28 float_inc float_inc integer_dup_times print_float in2 integer_add)
Errors: [9.0 2 7.0 2 53.336 9 23.4402 11 39.0 2 13.0 2 84.0 2 14.0 2 86.0 3 17.0957 10 36.1404 9 97.0 2 50.0 13 2.0 1 48.3536 11 6.0311 7 1.7072 9 8.0 2 8.0 2 65.4181 9 30.0 2 27.8685 11 77.0 2 2.0976 9 19.0 12]
Total: 970.4884000000002
Mean: 19.409767
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2721.087355499994
Median total errors in population: 1111.1756
Error averages by case: (75.17772139999997 2.7 67.64669120000065 7.966 108.69445869999873 9.354 134.3609213 11.688 94.5050856 3.422 83.72318839999998 2.663 143.72578269999983 3.951 71.69149089999999 3.79 149.27665300000012 4.474 135.00214520000011 11.115 119.17982570000001 11.239 161.63900690000008 3.604 108.10018719999995 12.56 81.08633720000002 3.159 128.58875479999998 4.132 66.80243109999995 7.407 63.80267240000071 9.414 74.4470312 3.249 65.1344066999999 2.634 119.80394639999845 9.338 100.58973379999993 4.31 119.34582929999995 3.4 143.4759622000001 4.359 66.38245530000036 9.386 77.46063689999993 12.13)
Error minima by case: (0.0 0 0.0 0 0.0367 2 8.981 7 4.7305 1 0.0 0 15.1231 1 0.0 0 17.1231 2 2.892 9 2.9488 8 28.1231 1 2.3754 8 0.0 0 38.6935 2 0.0311 1 0.0587 1 1.0 1 0.0 0 0.3625 2 23.0 2 18.2084 1 8.1231 2 0.0976 2 0.0736 1)
Average genome size in population (length): 59.175
Average program size in population (points): 60.175
Average percent parens in population: 0.017
Minimum age in population: 291.7586589458185
Maximum age in population: 296.5993772560725
Average age in population: 294.5478025813182
Median age in population: 294.5720801916673
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 53
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.292
Error (vector) diversity:			 0.331
Behavioral diversity:				 0.332
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 206582314
--- Timings ---
Current time: 1529616746480 milliseconds
Total Time:         693.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       296.6 seconds, 42.8%
Fitness Testing:    318.1 seconds, 45.9%
Report:              78.8 seconds, 11.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
